'\"macro stdmacro
.\" $Id: libirixpmda.5,v 1.3 1998/06/15 06:02:46 tes Exp $
.nr X
.if \nX=0 .ds x} LIBIRIXPMDA 5 "Performance Co-Pilot" "\&"
.if \nX=1 .ds x} LIBIRIXPMDA 5 "Performance Co-Pilot"
.if \nX=2 .ds x} LIBIRIXPMDA 5 "" "\&"
.if \nX=3 .ds x} LIBIRIXPMDA "" "" "\&"
.TH \*(x}
.SH NAME
\f3libirixpmda\f1 \- performance metrics domain agent for IRIX
.\" literals use .B or \f3
.\" arguments use .I or \f2
.SH DESCRIPTION
.B libirixpmda
is a Performance Metrics Domain Agent (PMDA) for the Performance Co-Pilot
(see
.BR PCPIntro (1))
which uses system calls to obtain performance metrics from the IRIX kernel.
.B libirixpmda
is loaded by
.BR pmcd (1)
as a Dynamically Shared Object (DSO) when
.BR pmcd (1)
is started.
.PP
.B libirixpmda
exports metrics from many kernel subsystems, including:
.TP 14
.B disk
Disks and disk controllers
.TP
.B filesys
Filesystem usage
.TP
.B hinv
System configuration
.TP
.B hub
Origin hub error counts
.TP
.B hw
R10K and Origin router hardware counters
.TP
.B ipc
Inter-process communication protocols
.TP
.B kaio
Kernel asynchronous I/O
.TP
.B kernel
CPU and system call activity
.TP
.B mem
Physical and virtual memory usage
.TP
.B network
Network interface utilization
.TP
.B nfs
NFS utilization
.TP
.B node
Origin node memory usage
.TP
.B numa
Origin page migration activity
.TP
.B resource
Kernel resources
.TP
.B rpc
RPC client/server activity
.TP
.B swap
Memory swap activity
.TP
.B xbow
Origin xbow I/O throughput
.TP
.B xfs
XFS file system activity
.TP
.B xlv
XLV volume activity
.PP
The entire list of metrics exported by
.B libirixpmda
can be obtained with the
.BR pminfo (1)
command:

.in 1.5i
.ft CW
.nf
> pminfo irix hinv hw
.fi
.ft R
.in

All metrics collected by
.B libirixpmda
have a help text entry that can be displayed with:

.in 1.5i
.ft CW
.nf
> pminfo -T irix.kernel.all.cpu.user
.fi
.ft R
.in

The set of metrics that are available will vary between each IRIX release and
hardware platform.
.SH ENABLING OF STATISTICS COLLECTION
Several kernel subsystems (or clusters of metrics) must have their
statistics gathering explicitly enabled. In the cases where the collection
process is expensive, we require that the user manually enable the
collection process, in other cases 
.B libirixpmda 
will automatically enable it.
.PP
Manually enabled metrics include the R10k event counters (hw.r10kevctr) 
and the Crossbow metrics (irix.xbow).
The automatically enabled metrics include the xlv metrics (irix.xlv).
To activate the system-level processor event counters (hw.r10kevctr)
you must run
.BR ecadmin (1)
as root, e.g.
.IP
\f4ecadmin -a\f1
.P
would enable all of the processor event counters.
To activate the Crossbow metrics (irix.xbow) see the section
below on storing to irix.xbow.switch.
.PP
The xlv metrics are enabled at startup if the xlv statistics gathering
is found to have been turned off. The xlv statistics can be manually
turned off via
.IP
\f4xlv_mgr -Rxc "change stat off"\f1
.PP
and manually turned on via
.IP
\f4xlv_mgr -Rxc "change stat on"\f1
.PP
If the statistics are manually turned off then when libirixpmda
next detects this, it will write out a warning message to the log,
.BR /var/adm/pcplog/pmcd.log .
If the statistics are subsequently turned back on, then this fact
will also be logged when libirixpmda next detects it.
Note, however, libirixpmda will only ever turn on the xlv statistics
at startup or whenever libirixpmda is reset.
.SH STORABLE METRICS
Several metrics may be altered using the 
.BR pmstore (1)
command to change the behavior of
.BR libirixpmda .
These metrics are:
.TP 4n
.I irix.pmda.reset
Reset the entire
.B libirixpmda
causing every cluster to reinitialize and probe the system configuration from
scratch.  If the system configuration has changed in a way that 
.B libirixpmda
cannot easily detect and/or handle, such as adding or removing disks with
.BR scsiha (1)
or
.BR scsiadminswap (1),
a value should be stored into this metric:

.in 1.5i
.ft CW
.nf
> pmstore irix.pmda.reset 1
.fi
.ft R
.in
.TP 4n
.I irix.pmda.debug
By default, only error messages are dumped by
.B libirixpmda
to the
.BR pmcd (1)
log file.  Additional output can be generated by storing any combination of
these flags into 
.IR irix.pmda.debug :
.RS 4n
.TP 7n
.B 1
General
.TP 7n
.B 2
Instance domains
.TP 7n
.B 4
CPU metrics
.TP 7n
.B 8
Disk metrics
.TP 7n
.B 16
Node metrics
.TP 7n
.B 32
Fetch from
.BR pmcd (1)
.TP 7n
.B 64
High precision counters
.TP 7n
.B 128
Xbow metrics
.TP 7n
.B 256
XLV volumes
.TP 7n
.B 512
Mounted EFS and XFS file systems
.TP 7n
.B 1024
Network interfaces
.TP 7n
.B 2048
Memory Audit
.RE
.TP 4n
.I irix.xbow.switch
By default, the
.I irix.xbow
metrics are turned off as they can affect the performance of the XBow hardware
on Origin systems.  To turn all XBow metrics on, run the command:

.in 1.5i
.ft CW
.nf
> pmstore irix.xbow.switch 1
.fi
.ft R
.in

while storing 0 will turn all Xbow monitoring off.  Individual XBows can turned
on and off by specifying the XBow instances.  For example, to monitor only the
first two XBows on an Origin system, you may do these commands:

.in 1.5i
.ft CW
.nf
> pmstore irix.xbow.switch 0
> pmstore -i"xbow0,xbow1" irix.xbow.switch 1
.fi
.ft R
.in

Every time a Xbow is stopped or started, the
.I irix.xbow.gen
generation number will increment.  This can be used by specialized clients 
receiving these metrics to detect the re-initialization of the XBow counters
so that bogus values are not used.

XBows may also be monitored by
.BR xbstat (1).
Only one of
.BR xbstat (1)
and
.B libirixpmda
may monitor the same XBow at the same time.
.SH FILES
.TP
\f2/usr/pcp/lib/mips_\f3ABI\f2.libirixpmda.so
The location of
.B libirixpmda
where
.B ABI
may be either o32, n32 or 64 depending on the running kernel.
.TP
.I /var/pcp/pmdas/irix
The location of the
.B libirixpmda
help text.
.TP
.I /var/pcp/pmns/root_irix
the Performance Metrics Namespace (PMNS) for
.BR libirixpmda .
.TP
.I /var/adm/pcplog/pmcd.log
The default location of the
.BR pmcd (1)
log file.
.SH SEE ALSO
.BR PCPIntro (1),
.BR pmcd (1),
.BR pminfo (1),
.BR pmstore (1),
.BR scsiadminswap (1),
.BR scsiha (1) 
and
.BR xbstat (1).
.SH DIAGNOSTICS
All diagnostics are reported in the
.BR pmcd (1)
log file,
.IR /var/adm/pcplog/pmcd.log .
The verbosity of output may be controlled by storing appropriate flags into
.IR irix.pmda.debug .

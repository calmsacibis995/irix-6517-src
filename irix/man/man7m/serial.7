'\"! tbl|mmdoc
'\"macro stdmacro
.TH serial 7
.SH NAME
serial \- serial communication ports
.SH SYNOPSIS
.nf
\f3/dev/tty\f1<\f3type\f1><\f3portno\f1>
.fi
.SH DESCRIPTION
All Silicon Graphics systems have two or more general purpose serial
ports.  These ports can be used to connect terminals, printers,
modems, other systems, or graphical input devices such as a tablet or
dial and button box.  Each line can be independently set to run at any
of several speeds.  Various character echoing and interpreting
parameters can also be set.  See
.IR stty (1)
and
.IR termio (7)
for details on the various modes.
.PP
Details of the serial ports found on optional add-on boards are given
elsewhere.  The Audio/Serial Option for CHALLENGE/Onyx provides six
high-speed serial ports, see
.IR asoser (7)
for more information.  The CDSIO VME board provides six serial ports;
see
.IR cdsio (7)
for more information.
.PP
Special files for the serial ports exist in the
.I /dev
directory. These files are named \f3tty\f1<\f3type\f1><\f3portno\f1>,
where \f3type\f1 is one or more characters indicating the type of
interface to the hardware that this file provides, and \f3portno\f1 is
a number identifying the physical port. The descriptions below
indicate among other things which hardware signals are used by each
port type. For more details on this see SOFTWARE USAGE below. Currently
supported types include:
.P
.TP
\f4d\f1
e.g. ttyd1. This is the most basic serial port type. It supports TD/RD
only.
.TP
\f4m\f1
e.g. ttym1. This port type provides modem control. It supports
TD/RD and DCD/DTR.
.TP
\f4f\f1
e.g. ttyf1. This port type provides modem and flow control. It
supports TD/RD, DCD/DTR and RTS/CTS.
.P
The following types are supported on O2, OCTANE, Origin2000/200, Onyx2 
and Challenge/Onyx systems:
.TP
\f4c\f1
e.g. ttyc1. This port type provides a raw character device interface
to the hardware. It is intended for applications which wish to do bulk
data transfer with minimal overhead and no data interpretation. Since
this is not a streams device and no line discipline exists, streams or
line discipline related ioctl commands may fail or silently have no
effect. See cserialio(7) for details.  This port type supports only TD/RD
by default but RTS/CTS flow control may be enabled via ioctl if the
hardware supports it.
.TP
\f44d\f1
e.g. tty4d1. This port type enables RS422 (Appletalk) mode. It uses
TxD+/-, RxD+/-. On Challenge/Onyx, every 4th port (tty4d4, tty4d8,
etc.) is hardwired to RS422 and other ports are hardwired to RS232, so
this port type only exists for every 4th port.
.TP
\f44f\f1
e.g. tty4f1. This port type enables RS422 (Appletalk) mode including
the handshake signals. It uses TxD+/-, RxD+/-, HSKo and HSKi. On
Challenge/Onyx, every 4th port (tty4d4, tty4d8, etc.) is hardwired to
RS422 and other ports are hardwired to RS232, so this port type only
exists for every 4th port.
.TP
\f4midi\f1
e.g. ttymidi1. This port type provides a midi interface to the serial
device. See midi(3).
.P
The following type is supported on O2, OCTANE, Onyx2 and Origin2000/200 systems:
.TP
\f4us\f1
e.g. ttyus1. This port type provides a user mapped interface to the
hardware, allowing reading and writing of bytes without any system
call overhead. Use of this port requires installation of the
react.sw.usio subsystem of REACT/Pro. See usio(3) for details.
.P
The \f3portno\f1 component of the tty filename identifies the actual
hardware accessed by the device file. All tty files with the same port
number access the same hardware, i.e. ttyd1, ttyc1 and ttymidi1 all
access the same physical port. A given tty device may be opened any
number of times, but only one interface type may be opened to the same
physical port at a time, e.g. if ttyd1 is open, access will be denied
to ttyf1 or ttyc1.
.P
On Onyx2 systems with console set to d, and on Origin2000 and Origin200 
systems, the console port and its twin
are guaranteed to be ports 1 and 2, all other ports are dynamically
assigned port numbers as per the whims of ioconfig(1). It may be
necessary to obtain the absolute path of the port in the filesystem by
resolving links until a true device is found in order to determine
where on the machine the port is actually located.
.SH CONNECTORS AND PIN ASSIGNMENTS
There are five different types of connectors found on various 4D models.
Note that in terms of connectors and pin assignments, the Challenge S is
identical to the Indy and both Challenge M and Power Challenge M are
equivalent to the Indigo2.  The DB-9 male serial port connectors on O2,
OCTANE, Onyx2, Origin2000 and Origin200 systems have the following IBM(R)
PC/AT(tm)-like pin assignments:
.sp .8v
.eo
.ce
-------------------
.ce
\  1  2  3  4  5  /
.ce
\   6  7  8  9  /
.ce
---------------
.ec
.sp .8v
.TS
center, tab(>);
c|l|l.
Pin>Name>Description
_
1>DCD>Data Carrier Detect
2>RD>Receive Data
3>TD>Transmit Data
4>DTR>Data Terminal Ready
5>GND>Signal Ground
6>->reserved
7>RTS>Request To Send
8>CTS>Clear To Send
9>->reserved
.TE
.PP
The ports on OCTANE, Onyx2, Origin2000 and Origin200 systems can be set by 
software to an Appletalk-compatible RS-422-like mode, in which they have the
following pin assignments:
.sp .8v
.TS
center, tab(>);
c|l|l.
Pin>Name>Description
_
1>->reserved
2>RxD->Receive Data -
3>TxD->Transmit Data -
4>TxD+>Transmit Data +
5>GND>Signal Ground
6>RxD+>Receive Data +
7>HSKo>Output Handshake
8>HSKi>Input Handshake
9>->reserved
.TE
.PP
The DB-9 female serial port connectors, which are found on the
CHALLENGE and Onyx systems, have the following pin assignments.
.sp .8v
.eo
.ce
-------------------
.ce
\  5  4  3  2  1  /
.ce
\   9  8  7  6  /
.ce
---------------
.ec
.sp .8v
.TS
center, tab(>);
c|l|l.
Pin>Name>Description
_
2>TD>Transmit Data
3>RD>Receive Data
4>RTS>Request To Send
5>CTS>Clear To Send
7>SG>Signal Ground
8>DCD>Data Carrier Detect
9>DTR>Data Terminal Ready
.TE
.PP
The CHALLENGE and Onyx systems provide an RS-422 port.  This RS-422
port uses a DB-9 female serial connector and has the following pin
assignments.
.PP
.TS
center, tab(>);
c|l|l.
Pin>Name>Description
_
1>DTR>Data Terminal Ready
2>TxD->Transmit Data -
3>RxD->Receive Data -
4>DCD>Data Carrier Detect
5>CTS>Clear To Send
6>SG>Signal Ground
7>TxD+>Transmit Data +
8>RxD+>Receive Data +
9>RTS>Request to send
.TE
.PP
In order to support peripherals that draw power from the host system,
the CHALLENGE and Onyx systems provide two powered-peripheral serial
ports.  These ports have a DIN-8 connector.  The powered ports share
the tty2 and tty3 signal lines with the standard DB-9 connectors; if
the DB-9 connector for tty2 is already in use, you cannot use the
powered peripheral connector for tty2.  Similarly, if tty3's DB-9
connector is connected to a peripheral, the powered peripheral port
connected to the tty3 signal lines cannot also be used.  The powered
peripheral ports have the following pin assignments.
.sp .8v
.eo
.ce
 __---__
.ce
 /   2   \
.ce
 /4       5\
.ce
 /           \
.ce
 ( 1    8    3 )
.ce
 \           /
.ce
 \ 6     7 /
.ce
 ---___---
.ec
.sp .8v
.TS
center, tab(>);
c|l|l.
Pin>Name>Description
_
1>DTR>Data Terminal Ready
2>CTS>Clear To Send
3>STEREO>Stereo field sync
4>RD>Receive Data
5>TD>Transmit Data
6>SG>Signal Ground
7>GND>Ground point
8>V10P>10V supply
.TE
.PP
The DIN-8 serial port connectors on the Indigo, Indy, Indigo2,
Challenge S, Challenge M, Power Challenge M, and
the MENET 4-Enet, 6-serial board (XT-FE-4TX-6A) have the following pin
assignments.
.sp .8v
.ne 5
.eo
.ce
---------
.ce
/ 8  7  6 \
.ce
(  5  4  3  )
.ce
\  2   1  /
.ce
---------
.ec
.sp .8v
.TS
center, tab(>);
c s s
c|l|l.
4D Compatible Pin Assignments (RS-232)
_
Pin>Name>Description
_
1>DTR>Data Terminal Ready
2>CTS>Clear To Send
3>TD>Transmit Data
4>SG>Signal Ground
5>RD>Receive Data
6>RTS>Request To Send
7>DCD>Data Carrier Detect
8>SG>Signal Ground
.TE
.sp .8v
.TS
center, tab(>);
c s s
c|l|l.
Macintosh SE Compatible Pin Assignments (RS-422)
_
Pin>Name>Description
_
1>HSKo>Output Handshake
2>HSKi>Input Handshake Or External Clock
3>TxD->Transmit Data -
4>GND>Signal Ground
5>RxD->Receive Data -
6>TxD+>Transmit Data +
7>GPi>General Purpose Input
8>RxD+>Receive Data +
.TE
.SH SOFTWARE USAGE
The set of signals that are actually used depends upon which form of
the device was opened.  If the
.B ttyd
name was used, only \f3TD\fP, \f3RD\fP, and \f3SG\fP signals are
meaningful.  These three signals are typically used with "dumb"
devices that either do not need any sort of data flow control or use
software flow control (see the description of the \f3ixon\fP,
\f3ixany\fP, and \f3ixoff\fP options in
.IR stty (1)
for more information on setting up software flow control).  If the
.B ttym
device is used, the \f3DCD\fP, and \f3DTR\fP signals are also used.
These signals provide a two way handshake for establishing and
breaking a communication link with another device and are normally
used when connecting via a modem.  When the port is initially opened,
the host asserts the \f3DTR\fP line and waits for the \f3DCD\fP line
to become active.  If the port is opened with the \f3O_NDELAY\fP flag,
the open succeeds even if the \f3DCD\fP line is not active.  A hangup
condition occurs if the \f3DCD\fP line transitions from active to
inactive.  See
.IR open (2),
and
.IR termio (7)
for more information.  If the
.B ttyf
device is used, all of the signals are used.  The additional signals
provide for full hardware flow control between the host and the remote
device.  The \f3RTS\fP line is asserted by the host whenever it is
capable of receiving more data.  The \f3CTS\fP line is sampled before
data is transmitted and if it is not active, the host suspends output
until it is.
.PP
The DIN-8 serial port connectors on the Indy, Challenge S, Indigo2,
Challenge M, Power Challenge M, and MENET
4-Enet, 6-serial board (XT-FE-4TX-6A) can be used to communicate with
serial devices using RS-422 protocol.  User can use the stream ioctl
commands, \f3SIOC_EXTCLK\fP and \f3SIOC_RS422\fP, defined in
\f2/usr/include/sys/z8530.h\fP to switch between internal/external
clock and RS-232/RS-422 protocols.  Another command that can be useful
is \f3SIOC_ITIMER\fP; it informs the driver how long it should buffer
up input data, in clock ticks, before sending them upstream.  Data can
sometimes be sent upstream before, but never after, this time limit.
This feature reduces the cpu cost of receiving large amounts of data
by sending data upstream in large chunks.  This duration can also be
configured into the kernel by tuning the duart_rsrv_duration variable.
On Origin, Onyx2, O2 and Octane systems, the serial hardware sets an input
timer based on the value passed in through SIOC_ITIMER. For soft flow
control, this input timer may result in excessively slow response to
an XOFF request since an XOFF char is not detected by the software
until the hardware timer expires. If soft flow control skid is
unacceptably large, it may be necessary to reduce the latency of the
hardware input timer by reducing the value passed to SIOC_ITIMER.
.SH "SUPPORTED SPEEDS"
The serial ports of all SGI systems support several standard rates up
through 38400 bps (see
.IR termio(7)
for these standard rates). The serial ports on O2, OCTANE, Origin2000, Onyx2 
and Origin200 systems also support bit rates up through 115200 bps,
including the following rates:
.sp .8v
.TS
center, tab(>);
ll.
31250>57600
76800>115200
.TE
.PP
Many other rates, up to 460800, can be set.  The accuracy of actual
baud rate set is guaranteed to be within 2.5% of the desired rate.  If
this condition cannot be met, the command (ioctl or stty) will fail.
However, performance at baud rates above 115200 is not guaranteed, and
their use is not officially supported.
.PP
At baud rates above 38400, cable length and quality become quite
important.  These rates are more likely to work in RS-422 mode, on
systems that support it.
.SH "CHALLENGE L/XL AND ONYX PORT CONFIGURATION"
By default, Onyx and CHALLENGE L/XL systems enable only the serial
ports of the master IO4.  To enable the serial ports on other IO4
boards, a vector line must be added for the epcserial device to
\f2/var/sysgen/system/irix.sm\fP.  The following vector line
configures the serial ports on the IO4 in slot 13 as tty45, tty46, and
tty47:
.Ex
VECTOR: bustype=EPC module=epcserial unit=1 slot=13
.Ee
The first two options (bustype and module) are mandatory and tell
.IR lboot (1M)
that you're configuring serial ports.  The \f3unit\f1 option specifies
which set of tty names should be used for this set of ports: unit 1
corresponds to the logical devices tty45, tty46, and tty47; unit 2
represents devices tty49, tty50, and tty51; unit 3 specifies devices
tty53, tty54, and tty55.  Finally, the \f3slot\f1 option indicates
which IO4 board contains the ports that should be mapped.  Each board
must have its own vector line.  Configuring one IO4 board's serial
ports has no effect on any of the other boards.  After \f3irix.sm\fP
has been updated, the \f2autoconfig\f1(1M) command should be issued to
reconfigure the kernel.  It may also be necessary to execute
\f2MAKEDEV\f1(1M) in order to build device files for the new ports.
.PP
If the system is unable to honor the VECTOR line for some reason (if,
for example, the specified slot is invalid), a warning message is
written to \f2/var/adm/SYSLOG\f1.  These warning messages contain the
string \f3epcserial\f1, in order to facilitate finding them with
commands like
.IR grep (1).
Because the console port has not been initialized when these messages
are issued, the kernel is unable to display the warning on the
console.
.PP
Only the master IO4 provides an RS-422 port (tty4).  Additional IO4
boards support three RS-232 serial ports only.  To allow for future
expansion, however, space was left in the serial port namespace for
the additional RS-422 ports.  For this reason, there is no actual
device associated with tty48, tty52, and tty56.
.SH FILES
/dev/tty[dmf][1-4,45-56]
.br
/usr/include/sys/z8530.h
.br
/dev/MAKEDEV
.br
/var/sysgen/system
.SH "SEE ALSO"
system(4),
asoser(7),
cdsio(7),
keyboard(7),
streamio(7),
termio(7),
termios(3),
cserialio(7),
usio(3).

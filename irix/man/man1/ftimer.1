'\"macro stdmacro
.TH FTIMER 1
.SH NAME
ftimer \- report realtime itimer status
.SH SYNOPSIS
.B "ftimer"
.SH DESCRIPTION
.PP
.I ftimer
provides the cpu number of the processor handling
the fast clock used by the real time
itimer facility.  It also reports any outstanding
real time itimer timeouts.
.PP
The fast clock is inactive until it is first used,
then remains active from that time onward.
The fast clock typically becomes active when a realtime process (i.e., those 
running with a non-degrading priority, see \f2npri\fP(1)) executes 
\f2setitimer\fP(2),
or less frequently when some special kernel driver needs the fast clock 
enabled for a high resolution interval timer and executes an internal kernel 
routine.
.PP
A user can control which processor handles the fast clock interrupts by
using the \f2mpadmin\fP(1) command or the \f2sysmp\fP(2) programmatic syscall.
.PP
Note, however, that \f2ftimer\fP(1) has no real relevance for
Challenge/Onyx platforms, as "fast clock" interrupts are handled by all
processors, not just by a single processor.
For Challenge/Onyx the distinction between "fast clock" itimers and "normal"
itimers is made on the basis of what time resolution is available,
not on the basis of which physical hardware clock ("fast" or "normal")
implements the itimer.
As with the other platforms,
realtime processes can get access to high resolution itimers,
and non-realtime processes can only use "normal" resolution itimers
(see \f2setitimer\fP(2) and \f2timers\fP(5)).
.SH SEE ALSO
npri(1), getitimer(2), setitimer(2), realtime(5), timers(5), mpadmin(1).

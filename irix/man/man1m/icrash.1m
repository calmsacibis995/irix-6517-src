.nr X
.if \nX=0 .ds x} icrash 1M "IRIX System Utilities" "\&"
.TH \*(x}
.SH NAME
icrash \- \&IRIX system crash analysis utility
.SH SYNOPSIS
.nf
\f3icrash\f1 [\f3\-e\f1 cmd] [\f3\-f\f1 cmdfile] [\f3\-n\f1 bounds] \c
[\f3\-r\f1] [\f3\-v\f1] [\f3\-w\f1 outfile] 
	  [\f3\-S\f1] namelist corefile
.fi
.SH DESCRIPTION
.I icrash
is a hands-on utility that generates detailed kernel information in
an easy-to-read format.
.I icrash
also provides the ability to generate reports about system crash
dumps created by
.IR savecore (1M).
Depending on the type of system crash dump,
.I icrash
can create a unique report that contains information about
what happened when the system crashed.
.I icrash
can be run on live systems or with any \f2namelist\f1 and
\f2corefile\f1 specified on the command line.
.P
\f2namelist\f1 contains symbol table information needed for symbolic
access to the system memory image being examined.
The default
\f2namelist\f1 is \f3/unix\f1, which is used when analyzing a live
system.
If the memory image being analyzed is from a system core dump
(\f2vmcore.N.comp\f1), then \f2namelist\f1 must be a copy of the unix file
that was executing at the time of the crash (\f2unix.N\f1).
.P
\f2corefile\f1 is a file containing the system memory image.
The
default \f2corefile\f1 is \f3/dev/mem\f1, which provides access to
system memory when analyzing a live system.
\f2corefile\f1 can also be a pathname to a file (\f2vmcore.N.comp\f1) produced
by the
.IR savecore (1M)
utility.
.P
The
.I icrash
command has the options listed below.
By default, all information is sent to the standard output,
unless the \f3-w\f1 option is used:
.TP 13
.BI \-e " cmd"
Specifies on the command line a set of commands that 
.I icrash
runs automatically. If more than one command is specified, 
or if there are any command line options, then \f2cmd\f1 
must be enclosed within quotation marks.
.TP
.BI \-f " cmdfile"
Specifies a
\f2cmdfile\f1 that contains a set of commands that
.I icrash
runs automatically.
.TP
.BI \-n " bounds"
\f2bounds\f1 specifies the numeric value associated with a 
particular \f2namelist\f1/\f2corefile\f1 pair.
.TP
.B \-r
Generates a standard report for the \f2namelist\f1 and \f2corefile\f1
specified.
The reporting style differs slightly depending on the type of system dump
being analyzed (panic or NMI).
.TP
.B \-v
Prints the current version number.
.TP
.BI \-w " outfile"
Writes any generated output to \f2outfile\f1.
.TP
.B \-S
Suppresses all output except that which comes from 
.I icrash
commands. Normally used in conjunction with the \f3\-e\f1 flag.
.SH REPORT USAGE
In order to generate a crash report, you must invoke the
.I icrash
command using the \f3\-r\f1 flag.
For example:
.Ex
\f4icrash -r\f1 \f2namelist\f1 \f2corefile\f1
.Ee
This creates an \f4ICRASH CORE FILE REPORT\f1 that prints to
standard output.
The resulting report can then be analyzed to determine what 
type of failure caused the system to crash and dump core. 
Note that you cannot use the \f3\-r\f1 flag to generate a crash
report on a live system.
.SH INTERACTIVE USAGE
Input during an
.I icrash
session is of the form:
.Ex
\f2command\f1 [\f2argument\f1 ... ]
.Ee
where \f2command\f1 is one of the
.I icrash
commands described in
the \f3COMMANDS\f1 section of this reference page and \f2argument\f1
is qualifying data that determines the specific behavior of the 
.I icrash
command, which kernel structure to print, the number of items 
to display, etc. 
.P
The following options are available to all
.I icrash
commands wherever they are semantically valid (see
the \f3COMMANDS\f1 section below).
.TP 13
.B \-a
Display all entries -- even those that are currently
unallocated, on a free list, or have a reference count of
zero.
.TP
.B \-f
Display additional (full) information for a structure. Note
that information from all of the fields will not necessarily
be displayed. Only those fields that are deemed to be most
useful to the debugging process. The 
.I icrash 
\f3print\f1 command
can be used to display the contents of entire kernel structures.
.TP
.B \-n
Follow the links of related kernel structures to their
logical conclusion.
For example, when used with the
\f3stream\f1 command, information for the stdata structure
for the stream is displayed, followed by information on
each of the queue pairs on the stream.
.TP
.BI \-w " outfile"
Redirect the output of a commands to the named \f2outfile\f1.
.P
The output from all
.I icrash
commands can be piped to various IRIX commands in the following manner:
.Ex
\f2command\f1 [ \f2argument\f1 ... ] \f3|\f1 \f2shell_command\f1
.Ee
Depending on the context of the command, numeric arguments
are assumed to be in a specific radix.
Counts are assumed
to be decimal.
Addresses are always hexadecimal (with
or without a leading \f30x\f1).
Table address arguments larger than the size of a table 
are interpreted as hexadecimal addresses; those smaller 
are assumed to be decimal slots in the table.
.SH COMMANDS
Below is a list of the interactive commands that are included with
.IR icrash .
Please note that this list can change from one release to the
next.
To get an on-line list of all the commands available within
.IR icrash ,
use the \f3help\f1 command.
.TP
\f3addtype\f1 \f2namelist\f1 [symbol_list]
Read in all the type definitions from \f2namelist\f1. The object file with the desired type definitions in the \f2namelist\f1 must be compiled with debugging flags turned on (-g). If a data type of a particular name is already know by icrash, then icrash will not load that type. Note that caution should be used when intermixing 32-bit object namelists with this command when debugging 64-bit vmcores and viceversa.
.TP
\f3anon\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2anon_list\f1
Display the anon structure located at each virtual address included in
\f2anon_list\f1. If the \f3\-a\f1 option is specified, the pfdats in the 
pcache is displayed in ascending order of their page numbers. Use the 
\f3\-f\f1 option if the command hangs when used with the \f3\-a\f1 option. The
\f3\-f\f1 option displays all the pfdat's in the pcache on a "first-find"
basis.
.TP
\f3anontree\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2anon_list\f1
Display the anon tree structure for each virtual address included in \f2anon_list\f1.
.TP
\f3avlnode\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2avlnode_list\f1
Display the avlnode structure located at each virtual address included in
\f2avlnode_list\f1. If the \f3\-n\f1 option is specified, the root of the 
avltree is identified (using the parent pointer contained in the avlnode 
structure) and all the avlnodes in the tree are displayed.
.TP
\f3base\f1 \f2numeric_value\f1 ...
Display a number in binary, octal, decimal, and hexadecimal. A
number in a radix other then decimal should be preceded by a
prefix that indicates its radix as follows: 0x, hexadecimal;
0, octal; and 0b, binary.
.TP
\f3config\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2cpu_list\f1]
Display the board configuration for a system using the information
contained in the hwgraph.
.TP
\f3ctrace\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2cpu_list\f1]
Displays a stack trace for each CPU included in \f2cpu_list\f1. If 
\f2cpu_list\f1 is empty and defkthread is set, \f3ctrace\f1 displays a stack 
trace for the cpu that defkthread was running on. If defkthread is not set, 
\f3ctrace\f1 displays a trace for the cpu dumpproc was running on. If there 
isn't any dumpproc, \f3ctrace\f1 displays a stack trace for the cpu that 
initiated the dump (based on the SP saved in dumpregs). Or, if the 
\f3-a\f1 option is included in the command line, \f3ctrace\f1 
displays a stack trace for each cpu in the system.
.TP
\f3curkthread\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1]
Display the process, sthread, or xthread entry for the kthread
currently running on all CPUs.
.TP
\f3defkthread\f1 [\f3\-w\f1 \f2outfile\f1] [\f2kthread\f1]
Set the default kthread if one is indicated on the command line. 
Otherwise, display the current value of defkthread. When 
.I icrash 
is run against a system core dump, defkthread gets set automatically 
to the kthread that was active when the system panic occurred. When 
.I icrash 
is run on a live system, defkthread does not get set.

The defkthread value is used by 
.I icrash
in a number of ways. The \f3trace\f1 command will display a stack trace 
for the default kthread if one is set. Also,
the translation of certain kernel virtual addresses (primarily those
contained in the kernelstack) depend upon defkthread being set.
.TP
\f3die\f1 [\f3\-w\f1 \f2outfile\f1] [\f2die_addr\f1]
Print out a DWARF information entry at a given \f2die_addr\f1.
.TP
\f3dirmem\f1 [\f3\-b\f1|\-o|\-d|\-h\f1] [\f3\-s\f1] [\f3\-m\f1] [\f3\-p\f1] [\f3\-e\f1] [\f3\-r\f1 low[\f3\-hi\f1]] \f2addr\f1
Display contents of the directory memory. The memory address
\f2addr\f1 can be given as a kernel symbolic address (example
could be 'dirmem fork', or a hexadecimal address such
as 'dirmem 0xa800000f47160000'. The leading '0x' can be
omitted, the address will be understood to be hexadecimal.
.TP
\f3dirmem\f1 \f3\-h|-help\f1
Display more expanded help info.
.TP
\f3dis\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2dis_addr\f1 [\f2count\f1]
Display the disassembled code located at \f2dis_addr\f1 for \f2count\f1
instructions. The default \f2count\f1 is 1.
.TP
\f3dump\f1 [\f3\-d\f1] [\f3\-o\f1] [\f3\-x\f1] [\f3\-B\f1] [\f3\-D\f1] [\f3\-H\f1] [\f3\-W\f1] [\f3\-w\f1 \f2outfile\f1] \f2addr\f1 [\f2count\f1]
Display \f2count\f1 values starting at virtual address 
\f2addr\f1 in one of the following formats: 
decimal (\f3\-d\f1), octal (\f3\-o\f1), or hexadecimal (\f3\-x\f1).
The default format is hexadecimal, and the \f2default\f1 count is 1.
.TP
\f3eframe\f1 [\f3\-w\f1 \f2outfile\f1] \f2eframe_addr\f1
Display the exception frame (containing a register dump, EPC,
cause register, and status register) located at \f2eframe_addr\f1.
.TP
\f3etrace\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2eframe_addr\f1
Display a stack trace using the PC and SP found in the exception
frame pointed to by \f2eframe_addr\f1.
The stack address is determined using the stack pointer from 
the exception frame. Note that defkthread must be set
equal to the appropriate kthread when \f2stack_addr\f1 is from the
kernelstack or when \f2stack_addr\f1 is the CPU interrupt stack and 
there is a kthread running on that CPU.
.TP
\f3file\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-p\f1 \f2proc\f1] [\f3\-w\f1 \f2outfile\f1] [\f2file_list\f1]
Display the file structure located at each virtual address
included in \f2file_list\f1.
If no addresses are specified, display all currently open files.
If the \f3\-p\f1 option is used, display all files opened by \f2proc\f1.
\f2proc\f1 can be specific as a virtual address or as a 
process PID (preceded by a \f3#\f1).
.TP
\f3findsym\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2address_list\f1
Locate the kernel symbol closest to each virtual address
contained in \f2address_list\f1.
.TP
\f3from\f1 \f2cmdfile\f1
Read in commands from \f2cmdfile\f1 and run them as if typed from
the
.IR icrash 
command line.
Note that the \f3\-w\f1 option and pipe (\f3|\f1) option are not
valid options for the \f3from\f1 command. These options can, however, 
can be included in the commands contained in \f2cmdfile\f1.
.TP
\f3fstype\f1 [\f3\-w\f1 \f2outfile\f1] [\f2vfssw_list\f1]
Display the vfssw structure for each entry in \f2vfssw_list\f1.
Entries in \f2vfssw_list\f1 can take the form of a virtual address
or vfssw table slot number. If no vfssw entries are specified, 
display the entire vfssw table.
.TP
\f3func\f1 [\f3\-w\f1 \f2outfile\f1] [\f2func_addr\f1]
Print out information about the function located at \f2func_addr\f1.
.TP
\f3help\f1 [\f2all\f1 | \f2command_list\f1]
Display a description of the named commands, including command 
syntax and an overview of how to use the command. The \f2all\f1 
option displays help information for every command.
.TP
\f3history\f1 [\f3\-w\f1 \f2outfile\f1]
Dump out the last 20 history commands.
You can also use \f3!\f1 to
access old commands (including \f3!!\f1, \f3!\-\f1\f2N\f1, etc.)
.TP
\f3hubreg\f1 [\f3\-b|\-o|\-d|\-x\f1] [\f3\-s\f1] [\f3\-n\f1 \f2n\f1] \f2register\f1
Display contents of a hub \f2register\f1. The \f2register\f1 name can 
be given in upper case or in lower case or even as a full
address. If the address corresponds to a real hub register,
its name will be found and displayed. The \f2register\f1 given by
its name (and not by its address), does not have to be its
full name, only the first so many letters making its name
unique are needed. If a unique match cannot be found, the
command will list all the register names matching the
characters given, and you can then pick up the correct one
from the list.
.TP
\f3hubreg \f1 \f3\-l|\-list\f1
List all defined register names.
.TP
\f3hubreg\f1 \f3\-h|\-help\f1
Display more expanded help
.TP
\f3hubreg\f1 \f3\-listacc\f1
Display info on access mode definitions.
.TP
\f3hwpath\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2element_lsit\f1
Display all pathnames from the /hw file system that terminate with 
the names included in \f2element_list\f1, or that contain label 
names included in \f2element_list\f1. If no names are specified, 
display all unique pathnames. Unique pathnames are ones that 
terminate in a file or symbolic link rather than in a directory. 
When the \f3hwpath\f1 command is issued with a \f3\-f\f1 command 
line option, the vertex handle for each element in the path is 
also displayed. Note that the \f3hwpath\f1 command provides a 
view of the the internal hwgraph data structures which are are
presented to the user via a filesystem-like interface.
.TP
\f3inode\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2inode_list\f1
Display the inode structure located at each virtual address
included in \f2inode_list\f1.
.TP
\f3inpcb\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2inpcb_list\f1
Display the inpcb structure located located at each virtual
address included in \f2inpcb_list\f1.
.TP
\f3kthread\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2kthread_list\f1]
Display relevant information for each entry in \f2kthread_list\f1. If no
entries are specified, display information for all active kthreads (processes,
xthreads, and sthreads). Entries in \f2kthread_list\f1 should be in
the form of a virtual address.
.TP
\f3ktrace\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2kthread_list\f1]
Displays a stack trace for each kthread included in \f2kthread_list\f1.
Entries in \f2kthread_list\f1 should be in the form of a virtual address.
.TP
\f3lsnode\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2lsnode_list\f1
Display the lsnode structure located at each virtual address included in \f2lsnode_list\f1.
.TP
\f3mbuf\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2mbuf_list\f1
Display the mbuf structure located at each virtual address
included in \f2mbuf_list\f1. In irix6.5 the mbuf command when used with the -a
option will display details of all the mbufs allocated on the system along with output similar to the "netstat -m" output on a live machine.
.TP
\f3memory\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1]
Display information about the memory installed on each node in the
system. If the memory command is issued with the \f3-f\f1 option, display
information about the memory contained in each memory slot on each node.
.TP
\f3mlinfo\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2mlinfo_list\f1.
Display information from the ml_info struct for each virtual address included in \f2mlinfo_list\f1.
.TP
\f3mntinfo\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2mntinfo_list\f1
Display the mntinfo structure for each virtual address included in \f2mntinfo_list\f1.  The mntinfo contains information about NFS mounted file systems.
.TP
\f3mrlock\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2mrlock_list\f1
Display the mrlock_s structure located at each virtual address included in \f2mrlock_list\f1. If the -f command line option is specified, display all queues of WAITERS and HOLDERS. If the -n command line option is specified (in conjunction with the -f option), then walk each queue displaying information on associated kthreads. 
.TP
\f3nodepda\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2nodepda_list\f1]
Display the nodepda_s structure associated with each item in
\f2nodepda_list\f1. Entries in \f2nodepda_list\f1 can take the 
form of a node ID or a virtual address pointing to a nodepda_s 
struct in memory. If \f2nodepda_list\f1
is empty, information for all nodes will be displayed.
.TP
\f3outfile\f1 [\f2outfile\f1]
Set \f2outfile\f1 (the file where all command output is sent) if
\f2outfile\f1 is indicated.
Otherwise, display the current value of \f2outfile\f1.
.TP
\f3pager\f1 [\f3\-w\f1 \f2outfile\f1] [\f2on\f1 | \f2off\f1]
When pager is on, all command output is piped through pg. When the pager is
\f2off\f1, all output is printed continuously without page breaks. When the
\f3pager\f1 command is issued without a command line option, the 
current state of the pager is displayed (\f2on\f1 or \f2off\f1). 
Note that when the pager is on, command output cannot 
be redirected to a pipe.
.TP
\f3pda\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2cpu_list\f1
Display the pda_s structure associated with each item in \f2cpu_list\f1.
Entries in \f2cpu_list\f1 can take the form of a CPU ID or a 
virtual address pointing to a pda_s struct in memory. If 
\f2cpu_list\f1 is empty, the pda_s structure for all CPUs will be displayed.
.TP
\f3pde\f1 [\f3\-w\f1 \f2outfile\f1] \f2pde_list\f1
Display the pde (page descriptor entry) structure located at
each virtual address included in \f2pde_list\f1.
.TP
\f3pfdat\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2pfdat_list\f1
Display the pfdat structure located at each virtual address
included in \f2pfdat_list\f1.
If the \f3\-a\f1 flag is issued, display all of the pfdat structures
on the system (one per physical page).
.TP
\f3pid\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2pid_list\f1
Display the pid_entry structure for each entry in \f2pid_list\f1. 
Entries in \f2pid_list\f1 can take the form of a pid table 
slot number, process PID (following a \f3#\f1), or a virtual 
address. If no entries are specified, display all active 
(in use) pid entries. 
.TP
\f3pregion\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-p\f1 \f2proc\f1] [\f3\-w\f1 \f2outfile\f1] [\f3\-u\f1 \f2uthread\f1] [\f2pregion_list\f1]
Display the pregion structure located at each virtual address 
included in \f2pregion_list\f1. If the \f3\-p\f1 option is used, 
display all pregions allocated to \f2proc\f1. When used with the \f3\-n\f1 
option display all the pde information for the proc or uthread specified with the \f3\-p\f1 or \f3\-u\f1 options respectively. \f2proc\f1 can be 
specific as a process PID (following a \f3\#\f1) or virtual address.
.TP
\f3print\f1 [\f3\-d\f1] [\f3\-o\f1] [\f3\-x\f1] [\f3\-w\f1 \f2outfile\f1] \f2expression\f1
Evaluate \f2expression\f1 and print the result. An expression can 
consist of numeric values, operators, kernel variables, typedefs, 
struct/union members, or a combination of above. The following 
are examples of valid expressions:

  (((2*3+4/2)*2+(2/6))/2)

  *((struct socket*)0xa80000001019f2c8)->so_rcv->sb_mb

  (((pte_t*)0xa8000000005ef088)->pte_pfn)<<14|0xa800000000000000
.TP
\f3printd\f1 [\f3\-w\f1 \f2outfile\f1] \f2expression\f1
The \f3printd\f1 command is the same as the \f3print\f1 command 
except that all integers are printed as decimal values.
.TP
\f3printo\f1 [\f3\-w\f1 \f2outfile\f1] \f2expression\f1
The \f3printo\f1 command is the same as the \f3print\f1 command 
except that all integers are printed as octol values.
.TP
\f3printx\f1 [\f3\-w\f1 \f2outfile\f1] \f2expression\f1
The \f3printx\f1 command is the same as the \f3print\f1 command 
except that all integers are printed as hexadecimal values.
.TP
\f3proc\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2proc_list\f1]
Display the proc structure for each entry in \f2proc_list\f1.
If no entries are specified, display all active processes.
Entries in \f2proc_list\f1 can take the form of a process 
PID (following a \f3#\f1) or virtual address.
.TP
\f3ptov\f1 [\f3\-w\f1 \f2outfile\f1] \f2address_list\f1
Display all possible virtual address mappings (K0, K1, and K2)
for each entry in \f2address_list\f1.
Entries in \f2address_list\f1 can be
a hexadecimal physical address or a PFN (following a \f3#\f1).
.TP
\f3queue\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2queue_list\f1
Display the queue structure located at each virtual address
included in \f2queue_list\f1.
If the next option (\f3\-n\f1) is specified,
a linked list of queues, starting with each specified queue
then following the q_next field, is displayed.
.TP
\f3quit\f1
Exit
.IR icrash .
Note that \f3q\f1 prompts for confirmation unless a \f3!\f1 is appended
to the command line.
.TP
\f3region\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-p\f1 \f2proc\f1] [\f3\-w\f1 \f2outfile\f1] \f2region_list\f1
Display the region structure located at each virtual address
included in \f2region_list\f1. If the \f3\-p\f1 option is used, 
display all regions allocated to \f2proc\f1. \f2proc\f1 can be specific 
as a process PID (following a \f3#\f1) or virtual address.
.TP
\f3report\f1 [\f3\-w\f1 \f2outfile\f1]
Print out the base report automatically generated by the savecore script
when the system comes back up after a system crash.
.TP
\f3rnode\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2rnode_list\f1
Display the rnode structure for each virtual address included
in \f2rnode_list\f1. The rnode contains information about a 
virtual node that acts as an interface between two NFS systems.
.TP
\f3runq\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1]
Display a list of processes currently on the run queue. Using the
\f3\-f\f1 option will print out more specific information about the 
processes.
.TP
\f3sbe\f1 [\f3\-w\f1 \f2outfile\f1]
Print out the single bit error information for a Challenge or Onyx system
(including R8K and R10K systems), assuming the right single bit flags in
the kernel are turned on.
.TP
\f3search\f1 [\f3\-B\f1] [\f3\-D\f1] [\f3\-H\f1] [\f3\-W\f1] [\f3\-w\f1 \f2outfile\f1] [\f3\-m\f1 \f2mask\f1] \f2pattern\f1 [\f2address\f1] [\f2length\f1]
Locate contiguous bytes of memory that match the values contained in
\f2pattern\f1, beginning at \f2address\f1 for \f2length\f1 bytes. 
\f2pattern\f1 consists of a string of, from one to 256 hexadecimal digits 
(with no embedded spaces).
For full word searches (the default), the first word of \f2mask\f1 
is anded (&)
with each word of \f2memory\f1 and the result compared against 
the first word in \f2pattern\f1 (which is also anded with the 
first word of \f2mask\f1). If 
there is a match, subsequent words in \f2memory\f1 are compared 
with their respective words in \f2pattern\f1 (if there are
any) to see if a match exists for the
entire pattern. If the \f3\-D\f1 option is issued, 
the search is conducted on
double word boundaries. If the \f3-H\f1 option is issued, the search is
conducted on halfword boundaries. If the \f3-B\f1 
option is issued, the search
will be performed without regard to double word, word or halfword
boundaries. If a mask is not specified, \f2mask\f1 defaults 
to all ones for the
size of \f2pattern\f1. For all but string searches, the number of hex digits
specified for \f2pattern\f1 cannot be less than will fit into the memory
boundary size specified. For example, patterns for halfword boundary
searches, must contain (at least) eight hex digits (two per byte). Also,
any extra digits beyond the specified boundary will be trimmed off from
the right side of the input line.
.IP
In addition to finding matches for hex values in memory, it is possible
to search for strings of characters as well. Just begin and end the
character search pattern with double quotes ("). The ASCII value for each
character in the string will form the corresponding byte values in the
search pattern.
.IP   
\f2address\f1 can be specified as either a virtual address (K0, K1, K2,
etc.), a physical address, or as a PFN (directly following a pound \f3#\f1
sign). If no address is specified (or if the one specified does not map
to a valid physical memory address), \f2address\f1 
defaults to the K0 address
mapped to the start of physical memory. An optional \f2length\f1 
parameter specifies the number of bytes to search. 
If \f2length\f1 is not specified, it
will be set equal to the size of physical memory minus the starting
physical address. Note that \f2length\f1 can be specified 
ONLY when an address has been specified.
.TP
\f3sema\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2sema_list\f1]
Display the sema_s structure located at each virtual address
included in \f2sema_list\f1. With the \f3\-f\f1 option a list of waiters,
waiting on the sema, are displayed.
.TP
\f3sh\f1 [\f2command\f1]
Escape to the shell with no arguments or execute \f2command\f1.
Note that it uses your SHELL environment variable to determine 
which shell to use.
.TP
\f3sizeof\f1 \f2structure\f1[.\f2field\f1]
Dump out the size of \f2structure\f1 entered on the command line.
The value returned will be in bytes. The user can also use a
\f2structure\f1.\f2field\f1 notation in order to find out what 
the size of a field in \f2structure\f1. If the \f3sizeof\f1 command 
is unable to find \f2structure\f1 or \f2field\f1, then the structure
information is not located in the symbol table. Also note that the
\f3sizeof\f1 command only returns the size of struct and union types.
.TP
\f3slpproc\f1 [\f3\-w\f1 \f2outfile\f1]
Print out the set of sleeping processes on the system.
.TP
\f3socket\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] [\f2socket_list\f1]
Display the socket structure for each virtual address included
in \f2socket_list\f1.
If no entries are specified, display all
sockets that are currently allocated.
If the next option (\f3\-n\f1)
is specified, a linked list of protocol control block
structures associated with each socket will also be displayed.
.TP
\f3stack\f1 [\f3\-w\f1 \f2outfile\f1] \f2stack_pointer\f1
Print out the stack type, stack address, and stack size for a the
stack \f2stack_pointer\f1 is from. If \f2stack_pointer\f1 is from 
a kthread stack, then defkthread must be set equal to the address
of the appropriate kthread.
.TP
\f3stat\f1 [\f3\-w\f1 \f2outfile\f1]
Display system statistics and the putbuf array, which contains
the latest messages printed via the kernel printf/cmn_err
routines.
.TP
\f3sthread\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2sthread_list\f1]
Display relevant information for each entry in \f2sthread_list\f1. If no
entries are specified, display information for all active sthreads.
Entries in \f2sthread_list\f1 can take the form of a virtual address.
.TP
\f3strace\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-l\f1] [\f3\-w\f1 \f2outfile\f1] [\f2pc\f1] [\f2sp\f1] [\f2stack_addr\f1] [\f2level\f1]
Displays all complete and unique stack traces (containing \f2level\f1 
or more stack frames) from the stack starting at \f2stack_addr\f1. 
If \f2level\f1 isn't specified, then each stack trace must have at 
least five frames to be considered valid. Alternately, use a 
specific \f2pc\f1 and \f2sp\f1 to generate a stack trace from 
the stack starting at \f2stack_addr\f1. Or, when the \f3\-l\f1
command line option is specified, displays a list of all valid kernel
code addresses contained in the stack starting at \f2stack_addr\f1, 
along with their location in the stack, source file and line number. 
Or, if the \f3\-a\f1 option is specified, display ALL traces of 
\f2level\f1 or more frames, including invalid traces and duplicate 
(sub) traces. Note that defkthread must be set equal to the kthread 
being analyzed when \f2stack_addr\f1 is the kernel stack address or 
the CPU interrupt stack and there is a process running on that CPU. 
This is necessary so that the trace can automatically "jump" from 
the first stack to the kernel stack of the process being analyzed.
.TP
\f3stream\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] [\f2stream_list\f1]
Display the stdata structure for each virtual address included
in \f2stream_list\f1.
If no entries are specified, display all
streams that are currently allocated.
If the next option (\f3\-n\f1)
is specified, a linked list of queues that are associated with
the stream is also displayed.
.TP
\f3strings\f1 [\f3\-w\f1 \f2outfile\f1] \f2start_address\f1 | \f2symbol\f1 [\f2count\f1]
Display \f2count\f1 strings of ASCII characters starting at
\f2start_address\f1 (or address for symbol).
.TP
\f3strstat\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1]
Display information about streams related resources (streams,
queues, message blocks, data blocks, and zones).
.TP
\f3struct\f1 [\f3\-f\f1] [\f3\-l\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2struct\f1 \f2addr\f1
Print structure information for \f2struct\f1 using the block of 
memory pointed to by \f2addr\f1.
.TP
\f3swap\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2swap_list\f1]
Dump out the list of swap devices, including the vnodes that are
represented. The number of pages, number of free pages, number
of max pages, priority, and device are listed. The \f3\-f\f1 flag
dumps out the name of the swapinfo entry as well.
.TP
\f3symbol\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2symbol_list\f1
Displays information about each kernel symbol included in \f2symbol_list\f1.
.TP
\f3tcp\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2tcpcb_list\f1
Display the tcpcb structure for each virtual address included
in \f2tcpcb_list\f1.
.TP
\f3tlbdump\f1 [\f3\-w\f1 \f2outfile\f1] [\f2cpu_list\f1]
Display TLB information for each CPU indicated in \f2cpu_list\f1.
If no CPUs are indicated, TLB information for all CPUs is
displayed.
.TP
\f3trace\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2kthread_list\f1]
Displays a stack trace for each kthread included in \f2kthread_list\f1. 
If \f2kthread_list\f1 is empty and defkthread is set, then a stack 
trace for the default kthread is displayed. If defkthread is not set, 
then a \f3trace\f1 will be displayed for the process stored in dumpproc. 
If there isn't any dumpproc, then \f3trace\f1 displays a trace for the 
cpu that generated the core dump.
.TP
\f3type\f1 [\f3\-w\f1 \f2outfile\f1] [\f2symbol\f1] | \f2type_addr\f1
Display the contents of memory starting at \f2addr\f1 using the 
type definition \f2type\f1 to format the output. Structures, 
unions, etc. are displayed in a manner similar to the way they 
were originally defined. The values contained in the various 
struct/union members are displayed in accordance with their type 
declarations. For example, kernel addresses are displayed as 
hexadecimal values, signed and unsigned integers are displayed as
decimal values, etc. Struct/union members that are themselves structs or
unions are expanded in the much the same way. Alternately, if a kernel
\f2symbol\f1 is entered, instead of \f2type_addr\f1, an attempt is 
made to determine the type of the symbol. If the type can be 
determined, it will be displayed as described above.
.TP
\f3unpcb\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2unpcb_list\f1]
Display the unpcb structure for each virtual address included
in \f2unpcb_list\f1.
.TP
\f3uthread\f1 [\f3-l\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-k\f1] [\f3\-S\f1] [\f3\-w\f1 \f2outfile\f1]  \f2uthread_list\f1
Display relevant information for each entry in \f2uthread_list\f1. If no entries are specified, display information for all active uthreads. When the -S command line option is specified, displays a list of all siblings for the specified uthread. Entries in \f2uthread_list\f1 can take the form of a process PID (following a '#'), or virtual address. Note that with the PID option, all uthreads that share a specified PID will be displayed. When the -k command line option is specified, display all uthread_s structs as kthread structs. When -l is used, only the uthreads contributing to the load average are shown.
.TP
\f3vertex\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2vertex_list\f1]
Display the graph_vertex_s structure located at each virtual address
included in \f2vertex_list\f1.
.TP
\f3vfs\f1 [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] \f2vfs_list\f1
Display the vfs structure for each virtual address included
in \f2vfs_list\f1.
.TP
\f3vnode\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2vnode_list\f1
Display the vnode structure for each virtual address included
in \f2vnode_list\f1.
.TP
\f3vproc\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2vproc_list\f1
Display the vproc structure for each virtual address included in
\f2vproc_list\f1.
.TP
\f3vsocket\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-n\f1] [\f3\-w\f1 \f2outfile\f1] \f2vsocket_list\f1
Display the vsocket structure for each virtual address included in
\f2vsocket_list\f1.
.TP
\f3vtop\f1 [\f3\-w\f1 \f2outfile\f1] \f2address_list\f1
Display all possible virtual address mappings (K0, K1, and K2)
for each virtual address in \f2address_list\f1.
.TP
\f3walk\f1 [\f3\-f\f1] [\f3\-l\f1] [\f3\-s\f1] [\f3\-w\f1 \f2outfile\f1] [\f2struct\f1 \f2field\f1|\f2offset\f1 \f2addr\f1] [\f2addr\f1 \f2offset\f1 \f2size\f1]
Walk a linked list of kernel structures or memory blocks. The \f3walk\f1
command has three modes of operation. By default, output from the 
\f3walk\f1 command consists of a linked list of formatted 
structure entries. Each entry contains a single line of output, 
similar to the output of other icrash commands. The list of 
structures which can be displayed in this manner is limited. 
To see a listing, issue the \f3walk\f1 (or \f3struct\f1) command 
with the \f3\-l\f1 command line option. Note that when viewing the list of
structures, only those structures marked \f3YES\f1 in the LINKS column
contain links that can be followed. When the \f3walk\f1 command 
is issued with the \f3\-s\f1 option, each structure is displayed, 
in its entirity, in a C-like format. The only limitation on which 
structures can be walked in this manner is that structure related 
information must be contained in the kernel's symbol table. Even 
if information about a structure is not available, it is possible to 
do a hex memory dump of each structure in the list.

With the first two options outlined above, the structure name, field name
(or byte offset), and next pointer are required. With the third option, a
start address, byte offset, and struct size are required.
.PP
Examples:
.nf
	walk xfs_inode   i_next   a800000000345678
	walk xfs_inode   8        a800000000345678
	walk -s mrlock_s mr_queue a80000000345678
	walk -s mrlock_s 8        a80000000345678
	walk a800000000345678  8  40
.fi
.PP
The last example illustrates the use of the walk command to display debugging information about a structure even if its type information is not found. It does a memory dump of each structure in the list.
.TP
\f3whatis\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-l\f1] [\f3\-w\f1 \f2outfile\f1] \f2expression\f1
Display type specific information for \f2expression\f1 (see the 
\f3print\f1 command for what constitutes a valid expression). 
If the \f3\-a\f1 option is specified, display a list of all 
structures, unions, typedefs and variables. When, in conjunction 
with the \f3\-a\f1 option, the \f3\-f\f1 option is specified, 
expand all struct and union definitions to show information for
each field.
.TP
\f3xthread\f1 [\f3\-f\f1] [\f3\-n\f1] [\f3\-k\f1] [\f3\-S\f1] [\f3\-w\f1 \f2outfile\f1]  \f2xthread_list\f1
Display relevant information for each entry in \f2xthread_list\f1. If no entries are specified, display information for all active xthreads. Entries in \f2xthread_list\f1 can take the form of a virtual address. When the -k command line option is specified, display all xthread_s structs as kthread structs.
.TP
\f3zone\f1 [\f3\-a\f1] [\f3\-f\f1] [\f3\-w\f1 \f2outfile\f1] [\f2zone_list\f1]
Display information about zone memory allocation resources. If the \f3\-a\f1 option is specified, display a list of all zones allocated in the system by zone type.
.TP
\f3?\f1 [\f3\-w\f1 \f2outfile\f1]
Displays a list of available commands.
.SH NOTES
Each version of
.I icrash
is specific to the OS release that it came from and does not necessarily
work on any other OS release.
Do not copy
.I icrash
to any other IRIX system unless the OS versions are identical (including
patch levels).
.PP
Running
.I icrash
on a live system can sometimes generate random results, as the information
being viewed is volatile at the time it is displayed.
.PP
When running against compressed system crash dumps, an index file will
be created to allow
.I icrash
quick access to compressed pages inside the dump. In addition, if an
index file exists,
.I icrash
will start much more quickly against a crash dump.
.I icrash
will always try to write the index file to the same directory where
the system crash dumps are stored. If the directory is not writable,
you will see the message:
.Ex
icrash: save of index "\f3filename\f1" failed: permission denied
.Ee
where \f3filename\f1 is the name of the index file that
.I icrash
tried to create. To avoid this, users can create symbolic links to the
\f2namelist\f1 and \f2corefile\f1 in a writable directory, and run
.I icrash
on the symbolic links. The index file will then be created in the
writable directory where the symbolic links are located.
.PP
The GNU readline library is used by
.I icrash
in interactive mode.
Please see the GNU General Public License
available from the Free Software Foundation, Inc., 675 Mass Ave,
Cambridge, MA 02139, USA.
.SH BUGS & ISSUES
Some
.I icrash
commands will not work completely on O2's with the R10000 cpu in them. This is because kernel space in the address range 0x800000-0x9fffff are not readable to user processes for this hardware configuration. The commands that are most affected are the "pfdat" and "zone" commands.


@ hinv.nxlv_volumes Number of configured XLV subvolumes
The number of configured XLV subvolumes on this system.
See xlv_mgr(1) for more information.

@ xlv.read Number of read operations on each XLV subvolume

@ xlv.write Number of write operations on each XLV subvolume

@ xlv.read_bytes Number of Kbytes read from each XLV subvolume

@ xlv.write_bytes Number of Kbytes written to each XLV subvolume

@ xlv.stripe_ops Number of operations to striped volume elements of each XLV subvolume
For XLV subvolumes with striped volume elements, this is the total
number of read and write operations to the component volume elements.

Depending on the volume geometry, and whether or not the subvolume
is plexed, this may not match the number of read and write operations
given by xlv.read + xlv.write for the same subvolume.

@ xlv.stripe_units Number of stripe units involved in operations to striped volume elements
The cumulative count of the number of stripe units transferred in stripe
operations to each subvolume, as reported by xlv.stripe_ops.

@ xlv.aligned.full_width Aligned operations for stripe width transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer begins on a stripe unit boundary
    - the transfer ends on a stripe unit boundary
    - the transfer involves _exactly_ one stripe width

The stripe width equals the stripe unit size times the number of disks in
the stripe.

These transfers are the most efficient in terms of alignment and the
potential for concurrency in the disk subsystem.
 
@ xlv.aligned.lt_width Aligned operations for less than stripe width transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer begins on a stripe unit boundary
    - the transfer ends on a stripe unit boundary
    - the transfer involves _less_ than one stripe width

The stripe width equals the stripe unit size times the number of disks in
the stripe.

These transfers are efficient in terms of alignment, but may produce
suboptimal balance and/or concurrency across the disks comprising the
stripe.

@ xlv.aligned.gt_width Aligned operations for more than stripe width transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer begins on a stripe unit boundary
    - the transfer ends on a stripe unit boundary
    - the transfer involves _more_ than one stripe width

The stripe width equals the stripe unit size times the number of disks in
the stripe.

These transfers are efficient in terms of alignment, but may produce
suboptimal balance and/or concurrency across the disks comprising the
stripe.

@ xlv.aligned.part_unit Aligned operations for partial stripe unit transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer begins on a stripe unit boundary
    - the transfer does _not_ end on a stripe unit boundary

In this case the transfer may involve zero or more stripe units plus
a partial stripe unit.

These transfers are generally suboptimal in terms of transfer and
buffer alignment, balance and/or concurrency across the disks
comprising the stripe.

@ xlv.unaligned.full_width Unaligned operations for stripe width transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer does _not_ begin on a stripe unit boundary
    - the transfer does _not_ end on a stripe unit boundary
    - the transfer involves _exactly_ one stripe width

The stripe width equals the stripe unit size times the number of disks in
the stripe.

These transfers are suboptional with respect to transfer and buffer
alignment, but efficient in terms of the potential for concurrency in
the disk subsystem.

@ xlv.unaligned.lt_width Unaligned operations for less than stripe width transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer does _not_ begin on a stripe unit boundary
    - the transfer ends on a stripe unit boundary
    - the transfer involves _less_ than one stripe width

The stripe width equals the stripe unit size times the number of disks in
the stripe.

These transfers may be suboptional with respect to transfer and buffer
alignment, and may produce suboptimal balance and/or concurrency across
the disks comprising the stripe.

@ xlv.unaligned.gt_width Unaligned operations for more than stripe width transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer does _not_ begin on a stripe unit boundary
    - the transfer ends on a stripe unit boundary
    - the transfer involves _more_ than one stripe width

The stripe width equals the stripe unit size times the number of disks in
the stripe.

These transfers may be suboptional with respect to transfer and buffer
alignment, and may produce suboptimal balance and/or concurrency across
the disks comprising the stripe.

@ xlv.unaligned.part_unit Unaligned operations for partial stripe unit transfers
The cumulative count for each XLV subvolume of the subset of the total
stripe operations, as reported by xlv.stripe_ops, where
    - the transfer does _not_ begin on a stripe unit boundary
    - the transfer does _not_ end on a stripe unit boundary
    - the transfer involves _more_ or _less_ than one stripe width

In this case the transfer may involve zero or more stripe units plus
a partial stripe unit.

These transfers are the least efficient by all criteria.

@ xlv.largest_io.stripes Number of stripe units in largest XLV transfer
The number of stripe units involved in the largest read or write so far
for each XLV subvolume.

@ xlv.largest_io.count Number of times largest I/O has occurred
The number of times the largest read or write operation so far has
occurred for each XLV subvolume.

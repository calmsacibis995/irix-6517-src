# AIM Suite III v3.1 Makefile
# (C) Copyright AIM Technology Inc. 1986,87,88,89,90,91,92.
# All Rights Reserved.
# Created on Fri Oct 30 17:49:28 PST 1992
#
SYS=-DSYS5
CC=cc
TIMETYPE=-DT_TIMES
CCOPT=wer
LDOPT=
DHZ=-DHZ=100

CFLAGS= $(CCOPT) $(TIMETYPE) $(LDOPT) $(DHZ) $(SYS)

TASKS = add.o disk1.o div.o fun.o funcal.o mul.o \
	pipe_cpy.o ram.o creat-clo.o disk_src.o

OBJS = multiuser.o vmctl.o tp_ctl.o ttyctl.o ttyinit.o ttyconf.o rand.o rtmsec.o $(TASKS)

# ugly but portable, even on (very) dumb makes..

install: tsks multiuser .firsttime clean
	./blend

.firsttime: report lptest blend gettime
	cc -o gettime gettime.c
	chmod a+x REPT
	tar -xvf fakeh.tar
	@touch .firsttime

mix:
	./blend

tsks:   $(TASKS) suite3.h

report:	plot filter

.c.o:	suite3.h
	$(CC) $(CFLAGS) -c $*.c

multiuser: suite3.h vmdrvr tp_drvr ttydrvr $(OBJS)
	$(CC) $(CFLAGS) -o multiuser $(OBJS)

blend: blend.c
	$(CC) $(CFLAGS) -o blend blend.c

calc_hz: calc_hz.c
	$(CC) $(CFLAGS) -o calc_hz calc_hz.c

plot: plot.c 
	$(CC) $(CFLAGS)  -o plot plot.c
 
filter: filter.c
	$(CC) $(CFLAGS) filter.c -o filter

vmctl.o vmdrvr.o: vmtest.h vmem.h testerr.h

vmdrvr: vmdrvr.o vmem.o
	$(CC) $(CFLAGS) vmdrvr.o vmem.o -o vmdrvr

tp_drvr: tp_drvr.c tp_test.h testerr.h
	$(CC) $(CFLAGS) tp_drvr.c -o tp_drvr

lptest: lptest.c
	$(CC) $(CFLAGS) lptest.c -o lptest

tp_ctl.o: tp_test.h testerr.h

clean:
	-@for i in *.[ch]                   ; \
	do	                              \
	    ls -l $$i | grep -s r--r--r-- ; \
	    if [ $$? -eq 0 ]              ; \
	    then                              \
		rm -f $$i                 ; \
	    fi                              ; \
	done
	@rm -f *.o

OBJS1 = ttyctl.o ttydrvr.o ttyinit.o ttyconf.o

$(OBJS1): ttytest.h testerr.h

ttydrvr: ttydrvr.o ttyinit.o ttyconf.o
	$(CC) $(CFLAGS) ttydrvr.o ttyinit.o ttyconf.o -o ttydrvr

newrun:
	@echo "Resetting AIM Suite III for another run."
	@rm -f tmp* core *.o

reset:
	@echo "Resetting AIM Suite III to new install condition."
	@rm -f .firsttime
	@rm -f workfile suite3.ss toutput results
	@rm -f plot filter blend calc_hz input multiuser nohup.out
	@rm -f RUN SAVE runit
	@rm -f ttydrvr vmdrvr tp_drvr lptest
	@rm -f tmp* core *.o
	@rm -f input.auto output.auto nfs.stat
	@rm -rf fakeh
	@cp Makefile.s Makefile


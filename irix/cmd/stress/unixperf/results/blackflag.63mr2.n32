UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: blackflag
Operating system: IRIX 6.3
Compiler version: 7.1
Instruction set: MIPS 3
Application binary interface: N32
Video: MVP unit 0 version 1.2
AV: AV1 Card version 1, O2Cam type 1 version 0 connected.
FLASH PROM version 4.0
On-board serial ports: 2
On-board EPP/ECP parallel port
1 174 MHZ IP32 Processor
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
CPU: MIPS R10000 Processor Chip Revision: 2.5
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 1 Mbyte on Processor 0
Main memory size: 128 Mbytes
Iris Audio Processor: version A3 revision 0
Integral Ethernet: ec0, version 1
  Disk drive: unit 6 on SCSI controller 1
  Disk drive: unit 5 on SCSI controller 1
  Disk drive: unit 4 on SCSI controller 1
  Disk drive: unit 3 on SCSI controller 1
  Disk drive: unit 2 on SCSI controller 1
  Disk drive: unit 1 on SCSI controller 1
  CDROM: unit 4 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
CRM graphics installed
Integral SCSI controller 1: Version ADAPTEC 7880
Integral SCSI controller 0: Version ADAPTEC 7880
Vice: TRE
Uptime: 1 day,  7:42
Users: 2
Load average: 1.13, 1.84, 1.58
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4153.77 MB total, 2188.00 MB available)
Date: Thu Mar 20 23:22:29 1997

6357924 reps @   0.0007 msec (1330000.0/sec): 4 by 4 double matrix multiply
6357924 reps @   0.0008 msec (1330000.0/sec): 4 by 4 double matrix multiply
6357924 reps @   0.0007 msec (1330000.0/sec): 4 by 4 double matrix multiply
6357924 reps @   0.0008 msec (1330000.0/sec): 4 by 4 double matrix multiply
6357924 reps @   0.0008 msec (1330000.0/sec): 4 by 4 double matrix multiply
31789620 trep @   0.0008 msec (1330000.0/sec): 4 by 4 double matrix multiply

6296628 reps @   0.0008 msec (1320000.0/sec): 4 by 4 float matrix multiply
6296628 reps @   0.0008 msec (1320000.0/sec): 4 by 4 float matrix multiply
6296628 reps @   0.0008 msec (1320000.0/sec): 4 by 4 float matrix multiply
6296628 reps @   0.0008 msec (1320000.0/sec): 4 by 4 float matrix multiply
6296628 reps @   0.0008 msec (1320000.0/sec): 4 by 4 float matrix multiply
31483140 trep @   0.0008 msec (1320000.0/sec): 4 by 4 float matrix multiply

 258500 reps @   0.0189 msec ( 52800.0/sec): recurse 250 simple function calls and return
 258500 reps @   0.0189 msec ( 52900.0/sec): recurse 250 simple function calls and return
 258500 reps @   0.0189 msec ( 52900.0/sec): recurse 250 simple function calls and return
 258500 reps @   0.0189 msec ( 52800.0/sec): recurse 250 simple function calls and return
 258500 reps @   0.0189 msec ( 52900.0/sec): recurse 250 simple function calls and return
1292500 trep @   0.0189 msec ( 52900.0/sec): recurse 250 simple function calls and return

8261200 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
8261200 reps @   0.0006 msec (1640000.0/sec): bcopy of 256 bytes
8261200 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
8261200 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
8261200 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
41306000 trep @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes

 163520 reps @   0.0294 msec ( 34000.0/sec): bcopy of 16 kilobytes
 163520 reps @   0.0294 msec ( 34100.0/sec): bcopy of 16 kilobytes
 163520 reps @   0.0293 msec ( 34100.0/sec): bcopy of 16 kilobytes
 163520 reps @   0.0292 msec ( 34200.0/sec): bcopy of 16 kilobytes
 163520 reps @   0.0293 msec ( 34100.0/sec): bcopy of 16 kilobytes
 817600 trep @   0.0293 msec ( 34100.0/sec): bcopy of 16 kilobytes

  14336 reps @   0.3379 msec (  2960.0/sec): bcopy of 100 kilobytes
  14336 reps @   0.3376 msec (  2960.0/sec): bcopy of 100 kilobytes
  14336 reps @   0.3382 msec (  2960.0/sec): bcopy of 100 kilobytes
  14336 reps @   0.3370 msec (  2970.0/sec): bcopy of 100 kilobytes
  14336 reps @   0.3371 msec (  2970.0/sec): bcopy of 100 kilobytes
  71680 trep @   0.3376 msec (  2960.0/sec): bcopy of 100 kilobytes

    108 reps @  43.8560 msec (    22.8/sec): bcopy of 1 megabyte
    108 reps @  43.8348 msec (    22.8/sec): bcopy of 1 megabyte
    108 reps @  43.8937 msec (    22.8/sec): bcopy of 1 megabyte
    108 reps @  43.8386 msec (    22.8/sec): bcopy of 1 megabyte
    108 reps @  43.9846 msec (    22.7/sec): bcopy of 1 megabyte
    540 trep @  43.8815 msec (    22.8/sec): bcopy of 1 megabyte

     12 reps @ 439.1538 msec (    2.28/sec): bcopy of 10 megabytes
     12 reps @ 439.0262 msec (    2.28/sec): bcopy of 10 megabytes
     12 reps @ 439.5703 msec (    2.27/sec): bcopy of 10 megabytes
     12 reps @ 440.8432 msec (    2.27/sec): bcopy of 10 megabytes
     12 reps @ 440.2247 msec (    2.27/sec): bcopy of 10 megabytes
     60 trep @ 439.7636 msec (    2.27/sec): bcopy of 10 megabytes

     12 reps @ 442.5732 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 442.1915 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 441.9497 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 442.7671 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 443.7818 msec (    2.25/sec): bcopy of 10 megabytes (cacheline-aligned)
     60 trep @ 442.6527 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)

     12 reps @ 444.3886 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 444.3890 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 443.9077 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 445.3193 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 445.2143 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     60 trep @ 444.6438 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)

     12 reps @ 445.5652 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 446.3057 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 445.7033 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 446.3333 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 447.4785 msec (    2.23/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 trep @ 446.2772 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)

15620400 reps @   0.0003 msec (3110000.0/sec): bzero of 256 bytes
15620400 reps @   0.0003 msec (3120000.0/sec): bzero of 256 bytes
15620400 reps @   0.0003 msec (3100000.0/sec): bzero of 256 bytes
15620400 reps @   0.0003 msec (3120000.0/sec): bzero of 256 bytes
15620400 reps @   0.0003 msec (3110000.0/sec): bzero of 256 bytes
78102000 trep @   0.0003 msec (3110000.0/sec): bzero of 256 bytes

 380440 reps @   0.0126 msec ( 79500.0/sec): bzero of 16 kilobytes
 380440 reps @   0.0126 msec ( 79600.0/sec): bzero of 16 kilobytes
 380440 reps @   0.0126 msec ( 79700.0/sec): bzero of 16 kilobytes
 380440 reps @   0.0126 msec ( 79600.0/sec): bzero of 16 kilobytes
 380440 reps @   0.0126 msec ( 79600.0/sec): bzero of 16 kilobytes
1902200 trep @   0.0126 msec ( 79600.0/sec): bzero of 16 kilobytes

  21744 reps @   0.2227 msec (  4490.0/sec): bzero of 100 kilobytes
  21744 reps @   0.2234 msec (  4480.0/sec): bzero of 100 kilobytes
  21744 reps @   0.2230 msec (  4490.0/sec): bzero of 100 kilobytes
  21744 reps @   0.2228 msec (  4490.0/sec): bzero of 100 kilobytes
  21744 reps @   0.2228 msec (  4490.0/sec): bzero of 100 kilobytes
 108720 trep @   0.2229 msec (  4490.0/sec): bzero of 100 kilobytes

    220 reps @  22.8086 msec (    43.8/sec): bzero of 1 megabyte
    220 reps @  22.7652 msec (    43.9/sec): bzero of 1 megabyte
    220 reps @  22.8308 msec (    43.8/sec): bzero of 1 megabyte
    220 reps @  22.7834 msec (    43.9/sec): bzero of 1 megabyte
    220 reps @  22.7736 msec (    43.9/sec): bzero of 1 megabyte
   1100 trep @  22.7923 msec (    43.9/sec): bzero of 1 megabyte

     24 reps @ 228.0372 msec (    4.39/sec): bzero of 10 megabytes
     24 reps @ 228.3618 msec (    4.38/sec): bzero of 10 megabytes
     24 reps @ 228.3387 msec (    4.38/sec): bzero of 10 megabytes
     24 reps @ 227.9804 msec (    4.39/sec): bzero of 10 megabytes
     24 reps @ 228.0686 msec (    4.38/sec): bzero of 10 megabytes
    120 trep @ 228.1573 msec (    4.38/sec): bzero of 10 megabytes

     24 reps @ 228.1402 msec (    4.38/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 228.4322 msec (    4.38/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 228.1298 msec (    4.38/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 228.3374 msec (    4.38/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 228.0578 msec (    4.38/sec): bzero of 10 megabytes (cacheline-aligned)
    120 trep @ 228.2195 msec (    4.38/sec): bzero of 10 megabytes (cacheline-aligned)

     24 reps @ 228.0337 msec (    4.39/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 228.0011 msec (    4.39/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 228.4023 msec (    4.38/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 228.1637 msec (    4.38/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 228.2814 msec (    4.38/sec): bzero of 10 megabytes (word mis-aligned)
    120 trep @ 228.1764 msec (    4.38/sec): bzero of 10 megabytes (word mis-aligned)

     24 reps @ 227.8844 msec (    4.39/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 227.9294 msec (    4.39/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 228.5039 msec (    4.38/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 228.1598 msec (    4.38/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 228.2653 msec (    4.38/sec): bzero of 10 megabytes (dword mis-aligned)
    120 trep @ 228.1486 msec (    4.38/sec): bzero of 10 megabytes (dword mis-aligned)

   9915 reps @   0.4741 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
   9915 reps @   0.4732 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
   9915 reps @   0.4733 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
   9915 reps @   0.4733 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
   9915 reps @   0.4750 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
  49575 trep @   0.4737 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers

    162 reps @  30.1873 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    162 reps @  30.1757 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    162 reps @  30.2079 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    162 reps @  30.1748 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    162 reps @  30.1495 msec (    33.2/sec): bcopy then qsort 16,000 32-bit integers
    810 trep @  30.1791 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers

     33 reps @ 141.8025 msec (    7.05/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 141.2695 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 141.2389 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 141.1619 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 141.2271 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers
    165 trep @ 141.3400 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers

22282500 reps @   0.0002 msec (4450000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22282500 reps @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22282500 reps @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22282500 reps @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22282500 reps @   0.0002 msec (4470000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
111412500 trep @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

18767500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
18767500 reps @   0.0003 msec (3850000.0/sec): basic double trigonometric function (sin/cos/tan)
18767500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
18767500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
18767500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
93837500 trep @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)

1820000 reps @   0.0027 msec (373000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1820000 reps @   0.0027 msec (373000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1820000 reps @   0.0027 msec (373000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1820000 reps @   0.0027 msec (372000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1820000 reps @   0.0027 msec (373000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
9100000 trep @   0.0027 msec (373000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  23100 reps @   0.2125 msec (  4710.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2124 msec (  4710.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2123 msec (  4710.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2126 msec (  4700.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2126 msec (  4700.0/sec): Tower of Hanoi recursion test (10 deep)
 115500 trep @   0.2125 msec (  4710.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   6.8627 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8490 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8466 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8628 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8603 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   6.8563 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)

 557500 reps @   0.0087 msec (115000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 557500 reps @   0.0087 msec (115000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 557500 reps @   0.0087 msec (115000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 557500 reps @   0.0087 msec (115000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 557500 reps @   0.0087 msec (115000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
2787500 trep @   0.0087 msec (115000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 102800 reps @   0.0500 msec ( 20000.0/sec): write 80 bytes to a log file
 102800 reps @   0.0502 msec ( 19900.0/sec): write 80 bytes to a log file
 102800 reps @   0.0527 msec ( 19000.0/sec): write 80 bytes to a log file
 102800 reps @   0.0538 msec ( 18600.0/sec): write 80 bytes to a log file
 102800 reps @   0.0539 msec ( 18500.0/sec): write 80 bytes to a log file
 514000 trep @   0.0521 msec ( 19200.0/sec): write 80 bytes to a log file

   1300 reps @   3.8414 msec (   260.0/sec): per-file cost of creating 100 files then unlinking them all
   1300 reps @   3.7778 msec (   265.0/sec): per-file cost of creating 100 files then unlinking them all
   1300 reps @   3.8219 msec (   262.0/sec): per-file cost of creating 100 files then unlinking them all
   1300 reps @   3.7961 msec (   263.0/sec): per-file cost of creating 100 files then unlinking them all
   1300 reps @   3.7781 msec (   265.0/sec): per-file cost of creating 100 files then unlinking them all
   6500 trep @   3.8031 msec (   263.0/sec): per-file cost of creating 100 files then unlinking them all

  58000 reps @   0.0864 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0866 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0865 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0862 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0836 msec ( 12000.0/sec): per-file cost of open and immediate close of 100 files
 290000 trep @   0.0859 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files

  62200 reps @   0.0879 msec ( 11400.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  62200 reps @   0.0833 msec ( 12000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  62200 reps @   0.0839 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  62200 reps @   0.0833 msec ( 12000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  62200 reps @   0.0839 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 311000 trep @   0.0845 msec ( 11800.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 333500 reps @   0.0150 msec ( 66600.0/sec): cost of stat'ing current dir
 333500 reps @   0.0150 msec ( 66700.0/sec): cost of stat'ing current dir
 333500 reps @   0.0150 msec ( 66600.0/sec): cost of stat'ing current dir
 333500 reps @   0.0159 msec ( 62900.0/sec): cost of stat'ing current dir
 333500 reps @   0.0160 msec ( 62700.0/sec): cost of stat'ing current dir
1667500 trep @   0.0154 msec ( 65000.0/sec): cost of stat'ing current dir

  70000 reps @   0.0718 msec ( 13900.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0717 msec ( 13900.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0717 msec ( 13900.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0722 msec ( 13900.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0732 msec ( 13700.0/sec): cost of stat'ing 5 component path
 350000 trep @   0.0721 msec ( 13900.0/sec): cost of stat'ing 5 component path

   1839 reps @   2.6157 msec (   382.0/sec): open directory and stat 100 files in it
   1839 reps @   2.6160 msec (   382.0/sec): open directory and stat 100 files in it
   1839 reps @   2.6158 msec (   382.0/sec): open directory and stat 100 files in it
   1839 reps @   2.6167 msec (   382.0/sec): open directory and stat 100 files in it
   1839 reps @   2.6213 msec (   381.0/sec): open directory and stat 100 files in it
   9195 trep @   2.6171 msec (   382.0/sec): open directory and stat 100 files in it

   1300 reps @   3.9323 msec (   254.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   3.7784 msec (   265.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   3.8224 msec (   262.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   3.7518 msec (   267.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   3.7924 msec (   264.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   6500 trep @   3.8155 msec (   262.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 302400 reps @   0.0167 msec ( 59800.0/sec): ndbm lookup into database with 900 entries
 302400 reps @   0.0169 msec ( 59100.0/sec): ndbm lookup into database with 900 entries
 302400 reps @   0.0166 msec ( 60100.0/sec): ndbm lookup into database with 900 entries
 302400 reps @   0.0162 msec ( 61600.0/sec): ndbm lookup into database with 900 entries
 302400 reps @   0.0162 msec ( 61700.0/sec): ndbm lookup into database with 900 entries
1512000 trep @   0.0165 msec ( 60400.0/sec): ndbm lookup into database with 900 entries

  69600 reps @   0.0699 msec ( 14300.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0699 msec ( 14300.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0699 msec ( 14300.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0696 msec ( 14400.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0697 msec ( 14300.0/sec): 1 byte token passing between two processes using two pipes
 348000 trep @   0.0698 msec ( 14300.0/sec): 1 byte token passing between two processes using two pipes

  59200 reps @   0.0796 msec ( 12600.0/sec): 1 kilobyte token passing between two processes using two pipes
  59200 reps @   0.0796 msec ( 12600.0/sec): 1 kilobyte token passing between two processes using two pipes
  59200 reps @   0.0797 msec ( 12500.0/sec): 1 kilobyte token passing between two processes using two pipes
  59200 reps @   0.0798 msec ( 12500.0/sec): 1 kilobyte token passing between two processes using two pipes
  59200 reps @   0.0795 msec ( 12600.0/sec): 1 kilobyte token passing between two processes using two pipes
 296000 trep @   0.0797 msec ( 12600.0/sec): 1 kilobyte token passing between two processes using two pipes

10664000 reps @   0.0005 msec (2200000.0/sec): setjmp/longjmp
10664000 reps @   0.0005 msec (2200000.0/sec): setjmp/longjmp
10664000 reps @   0.0005 msec (2200000.0/sec): setjmp/longjmp
10664000 reps @   0.0005 msec (2200000.0/sec): setjmp/longjmp
10664000 reps @   0.0005 msec (2200000.0/sec): setjmp/longjmp
53320000 trep @   0.0005 msec (2200000.0/sec): setjmp/longjmp

 316000 reps @   0.0155 msec ( 64700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 316000 reps @   0.0154 msec ( 64900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 316000 reps @   0.0154 msec ( 64900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 316000 reps @   0.0154 msec ( 64800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 316000 reps @   0.0154 msec ( 64900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1580000 trep @   0.0154 msec ( 64800.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   4335 reps @   1.1481 msec (   871.0/sec): create/destroy client UDP-based SunRPC handle
   4335 reps @   1.1487 msec (   871.0/sec): create/destroy client UDP-based SunRPC handle
   4335 reps @   1.1469 msec (   872.0/sec): create/destroy client UDP-based SunRPC handle
   4335 reps @   1.1493 msec (   870.0/sec): create/destroy client UDP-based SunRPC handle
   4335 reps @   1.1456 msec (   873.0/sec): create/destroy client UDP-based SunRPC handle
  21675 trep @   1.1477 msec (   871.0/sec): create/destroy client UDP-based SunRPC handle

  13600 reps @   0.3525 msec (  2840.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3551 msec (  2820.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3565 msec (  2810.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3526 msec (  2840.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3524 msec (  2840.0/sec): TCP-based SunRPC to negate an integer
  68000 trep @   0.3538 msec (  2830.0/sec): TCP-based SunRPC to negate an integer

   9600 reps @   0.5177 msec (  1930.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5173 msec (  1930.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5183 msec (  1930.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5155 msec (  1940.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5161 msec (  1940.0/sec): UDP-based SunRPC to negate an integer
  48000 trep @   0.5170 msec (  1930.0/sec): UDP-based SunRPC to negate an integer

  14000 reps @   0.3428 msec (  2920.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3438 msec (  2910.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3445 msec (  2900.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3433 msec (  2910.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3456 msec (  2890.0/sec): TCP-based SunRPC no-op
  70000 trep @   0.3440 msec (  2910.0/sec): TCP-based SunRPC no-op

   8000 reps @   0.6249 msec (  1600.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6262 msec (  1600.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6250 msec (  1600.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6253 msec (  1600.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6267 msec (  1600.0/sec): UDP-based SunRPC no-op
  40000 trep @   0.6256 msec (  1600.0/sec): UDP-based SunRPC no-op

1528000 reps @   0.0031 msec (318000.0/sec): getpid system call
1528000 reps @   0.0031 msec (318000.0/sec): getpid system call
1528000 reps @   0.0031 msec (318000.0/sec): getpid system call
1528000 reps @   0.0031 msec (318000.0/sec): getpid system call
1528000 reps @   0.0031 msec (318000.0/sec): getpid system call
7640000 trep @   0.0031 msec (318000.0/sec): getpid system call

 241000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1205000 trep @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 936800 reps @   0.0053 msec (187000.0/sec): gettimeofday system call
 936800 reps @   0.0053 msec (187000.0/sec): gettimeofday system call
 936800 reps @   0.0053 msec (187000.0/sec): gettimeofday system call
 936800 reps @   0.0054 msec (187000.0/sec): gettimeofday system call
 936800 reps @   0.0053 msec (187000.0/sec): gettimeofday system call
4684000 trep @   0.0053 msec (187000.0/sec): gettimeofday system call

    200 reps @  29.8433 msec (    33.5/sec): fork, child immediately exits, parent waits
    200 reps @  29.8560 msec (    33.5/sec): fork, child immediately exits, parent waits
    200 reps @  29.7514 msec (    33.6/sec): fork, child immediately exits, parent waits
    200 reps @  29.7461 msec (    33.6/sec): fork, child immediately exits, parent waits
    200 reps @  29.8337 msec (    33.5/sec): fork, child immediately exits, parent waits
   1000 trep @  29.8061 msec (    33.6/sec): fork, child immediately exits, parent waits

      5 reps @ 1006.5784 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5626 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5440 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5512 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5768 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1006.5626 msec (    0.99/sec): sleep for one second (validates test time)

 882900 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 882900 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 882900 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 882900 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 882900 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
4414500 trep @   0.0055 msec (181000.0/sec): select on no fds with no timeout

 261900 reps @   0.0185 msec ( 54200.0/sec): select on 16 pipe read fds with immediate timeout
 261900 reps @   0.0185 msec ( 54100.0/sec): select on 16 pipe read fds with immediate timeout
 261900 reps @   0.0185 msec ( 54000.0/sec): select on 16 pipe read fds with immediate timeout
 261900 reps @   0.0185 msec ( 54200.0/sec): select on 16 pipe read fds with immediate timeout
 261900 reps @   0.0185 msec ( 53900.0/sec): select on 16 pipe read fds with immediate timeout
1309500 trep @   0.0185 msec ( 54100.0/sec): select on 16 pipe read fds with immediate timeout

 148200 reps @   0.0325 msec ( 30800.0/sec): select on 32 pipe read fds with immediate timeout
 148200 reps @   0.0325 msec ( 30800.0/sec): select on 32 pipe read fds with immediate timeout
 148200 reps @   0.0325 msec ( 30800.0/sec): select on 32 pipe read fds with immediate timeout
 148200 reps @   0.0325 msec ( 30800.0/sec): select on 32 pipe read fds with immediate timeout
 148200 reps @   0.0325 msec ( 30800.0/sec): select on 32 pipe read fds with immediate timeout
 741000 trep @   0.0325 msec ( 30800.0/sec): select on 32 pipe read fds with immediate timeout

 259900 reps @   0.0183 msec ( 54800.0/sec): select on 16 pipe write fds with immediate timeout
 259900 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout
 259900 reps @   0.0182 msec ( 54800.0/sec): select on 16 pipe write fds with immediate timeout
 259900 reps @   0.0182 msec ( 54800.0/sec): select on 16 pipe write fds with immediate timeout
 259900 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout
1299500 trep @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout

 266300 reps @   0.0182 msec ( 54900.0/sec): select on 32 pipe write fds with immediate timeout
 266300 reps @   0.0183 msec ( 54800.0/sec): select on 32 pipe write fds with immediate timeout
 266300 reps @   0.0182 msec ( 54900.0/sec): select on 32 pipe write fds with immediate timeout
 266300 reps @   0.0182 msec ( 54900.0/sec): select on 32 pipe write fds with immediate timeout
 266300 reps @   0.0183 msec ( 54800.0/sec): select on 32 pipe write fds with immediate timeout
1331500 trep @   0.0182 msec ( 54800.0/sec): select on 32 pipe write fds with immediate timeout

  37100 reps @   0.1306 msec (  7660.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1307 msec (  7650.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1309 msec (  7640.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1307 msec (  7650.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1306 msec (  7660.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 185500 trep @   0.1307 msec (  7650.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    100 reps @  50.3651 msec (    19.9/sec): popen and read from "/bin/echo hello"
    100 reps @  50.1507 msec (    19.9/sec): popen and read from "/bin/echo hello"
    100 reps @  50.2319 msec (    19.9/sec): popen and read from "/bin/echo hello"
    100 reps @  50.6244 msec (    19.8/sec): popen and read from "/bin/echo hello"
    100 reps @  50.5414 msec (    19.8/sec): popen and read from "/bin/echo hello"
    500 trep @  50.3827 msec (    19.8/sec): popen and read from "/bin/echo hello"

  40550 reps @   0.1233 msec (  8110.0/sec): mmap megabyte /dev/zero region 
  40550 reps @   0.1234 msec (  8110.0/sec): mmap megabyte /dev/zero region 
  40550 reps @   0.1233 msec (  8110.0/sec): mmap megabyte /dev/zero region 
  40550 reps @   0.1231 msec (  8130.0/sec): mmap megabyte /dev/zero region 
  40550 reps @   0.1235 msec (  8100.0/sec): mmap megabyte /dev/zero region 
 202750 trep @   0.1233 msec (  8110.0/sec): mmap megabyte /dev/zero region 

    159 reps @  31.2764 msec (    32.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    159 reps @  31.2436 msec (    32.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    159 reps @  31.2836 msec (    32.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    159 reps @  31.2844 msec (    32.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    159 reps @  31.2266 msec (    32.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    795 trep @  31.2629 msec (    32.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    286 reps @  17.0639 msec (    58.6/sec): copy every byte of newly mmaped megabyte file
    286 reps @  17.2950 msec (    57.8/sec): copy every byte of newly mmaped megabyte file
    286 reps @  18.8963 msec (    52.9/sec): copy every byte of newly mmaped megabyte file
    286 reps @  18.7575 msec (    53.3/sec): copy every byte of newly mmaped megabyte file
    286 reps @  18.6124 msec (    53.7/sec): copy every byte of newly mmaped megabyte file
   1430 trep @  18.1250 msec (    55.2/sec): copy every byte of newly mmaped megabyte file

     35 reps @ 125.6659 msec (    7.96/sec): compress & uncompress 52 kilobyte text file of numbers
     35 reps @ 126.0417 msec (    7.93/sec): compress & uncompress 52 kilobyte text file of numbers
     35 reps @ 126.2603 msec (    7.92/sec): compress & uncompress 52 kilobyte text file of numbers
     35 reps @ 125.0555 msec (    8.00/sec): compress & uncompress 52 kilobyte text file of numbers
     35 reps @ 125.9508 msec (    7.94/sec): compress & uncompress 52 kilobyte text file of numbers
    175 trep @ 125.7948 msec (    7.95/sec): compress & uncompress 52 kilobyte text file of numbers

     17 reps @ 317.2999 msec (    3.15/sec): compile ANSI C `hello world' with no special options
     17 reps @ 318.1978 msec (    3.14/sec): compile ANSI C `hello world' with no special options
     17 reps @ 317.2931 msec (    3.15/sec): compile ANSI C `hello world' with no special options
     17 reps @ 317.7631 msec (    3.15/sec): compile ANSI C `hello world' with no special options
     17 reps @ 324.5225 msec (    3.08/sec): compile ANSI C `hello world' with no special options
     85 trep @ 319.0153 msec (    3.13/sec): compile ANSI C `hello world' with no special options

     14 reps @ 630.2496 msec (    1.59/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 616.7889 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 619.3076 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 609.3039 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 617.1589 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     70 trep @ 618.5618 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     10 reps @ 600.1136 msec (    1.67/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 658.1252 msec (    1.52/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 611.4724 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 623.0928 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 604.1434 msec (    1.66/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     50 trep @ 619.3895 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     12 reps @ 667.9930 msec (    1.50/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 609.8000 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 602.3386 msec (    1.66/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 638.0563 msec (    1.57/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 607.3235 msec (    1.65/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     60 trep @ 625.1023 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 456.2480 msec (    2.19/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 777.6097 msec (    1.29/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 621.4982 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 615.9780 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 617.5015 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 617.7671 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 642.8130 msec (    1.56/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 618.0298 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 562.0419 msec (    1.78/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 674.8342 msec (    1.48/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 618.6938 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 623.2826 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 617.4477 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 617.5304 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 617.9987 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 616.0855 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 619.8176 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 617.7760 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1582.6437 msec (    0.63/sec): use dc to output first 1,000 factorials
      4 reps @ 1579.0515 msec (    0.63/sec): use dc to output first 1,000 factorials
      4 reps @ 1580.8093 msec (    0.63/sec): use dc to output first 1,000 factorials
      4 reps @ 1575.1437 msec (    0.64/sec): use dc to output first 1,000 factorials
      4 reps @ 1577.2100 msec (    0.63/sec): use dc to output first 1,000 factorials
     20 trep @ 1578.9716 msec (    0.63/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0074 msec (135000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (136000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (136000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (136000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (136000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0074 msec (135000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  63744 reps @   0.0738 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
  63744 reps @   0.0741 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
  63744 reps @   0.0738 msec ( 13600.0/sec): use regcomp to compile 51 char literal, then regfree
  63744 reps @   0.0738 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
  63744 reps @   0.0739 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
 318720 trep @   0.0739 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree

      7 reps @ 785.5374 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 786.9730 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 787.4156 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 787.8159 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 786.8451 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
     35 trep @ 786.9174 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text

  87508 reps @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87508 reps @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87508 reps @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87508 reps @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87508 reps @   0.0570 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
 437540 trep @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree

     11 reps @ 483.1658 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 482.5022 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 483.5954 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 483.5022 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 483.3585 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     55 trep @ 483.2248 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text


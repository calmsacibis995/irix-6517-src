UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: spridle
Operating system: IRIX64 6.4-ALPHA-1263417320
Compiler version: 6.21
Instruction set: MIPS 4
Application binary interface: N32
2 195 MHZ IP30 Processors
CPU: MIPS R10000 Processor Chip Revision: 2.6
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
Main memory size: 128 Mbytes
Secondary unified instruction/data cache size: 1 Mbyte
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 parallel port: plp1
Graphics board: Maximum Impact/TRAM option card
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 12.0, number 1
Uptime:  8:26
Users: 2
Load average: 2.54, 1.37, 0.78
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4205.63 MB total, 2535.72 MB available)
Date: Mon Dec  2 20:44:08 1996

4478232 reps @   0.0007 msec (1490000.0/sec): 4 by 4 double matrix multiply
4478232 reps @   0.0007 msec (1480000.0/sec): 4 by 4 double matrix multiply
4478232 reps @   0.0007 msec (1480000.0/sec): 4 by 4 double matrix multiply
13434696 trep @   0.0007 msec (1480000.0/sec): 4 by 4 double matrix multiply

4485624 reps @   0.0007 msec (1480000.0/sec): 4 by 4 float matrix multiply
4485624 reps @   0.0007 msec (1480000.0/sec): 4 by 4 float matrix multiply
4485624 reps @   0.0007 msec (1490000.0/sec): 4 by 4 float matrix multiply
13456872 trep @   0.0007 msec (1490000.0/sec): 4 by 4 float matrix multiply

 133000 reps @   0.0227 msec ( 44100.0/sec): recurse 250 simple function calls and return
 133000 reps @   0.0225 msec ( 44400.0/sec): recurse 250 simple function calls and return
 133000 reps @   0.0225 msec ( 44400.0/sec): recurse 250 simple function calls and return
 399000 trep @   0.0226 msec ( 44300.0/sec): recurse 250 simple function calls and return

5559200 reps @   0.0005 msec (1850000.0/sec): bcopy of 256 bytes
5559200 reps @   0.0005 msec (1860000.0/sec): bcopy of 256 bytes
5559200 reps @   0.0005 msec (1860000.0/sec): bcopy of 256 bytes
16677600 trep @   0.0005 msec (1860000.0/sec): bcopy of 256 bytes

 124200 reps @   0.0239 msec ( 41900.0/sec): bcopy of 16 kilobytes
 124200 reps @   0.0237 msec ( 42200.0/sec): bcopy of 16 kilobytes
 124200 reps @   0.0237 msec ( 42200.0/sec): bcopy of 16 kilobytes
 372600 trep @   0.0238 msec ( 42100.0/sec): bcopy of 16 kilobytes

   9556 reps @   0.3075 msec (  3250.0/sec): bcopy of 100 kilobytes
   9556 reps @   0.3081 msec (  3250.0/sec): bcopy of 100 kilobytes
   9556 reps @   0.3071 msec (  3260.0/sec): bcopy of 100 kilobytes
  28668 trep @   0.3076 msec (  3250.0/sec): bcopy of 100 kilobytes

    372 reps @   8.0602 msec (   124.0/sec): bcopy of 1 megabyte
    372 reps @   7.9220 msec (   126.0/sec): bcopy of 1 megabyte
    372 reps @   7.9384 msec (   126.0/sec): bcopy of 1 megabyte
   1116 trep @   7.9735 msec (   125.0/sec): bcopy of 1 megabyte

     36 reps @  79.6984 msec (    12.5/sec): bcopy of 10 megabytes
     36 reps @  79.9837 msec (    12.5/sec): bcopy of 10 megabytes
     36 reps @  79.6238 msec (    12.6/sec): bcopy of 10 megabytes
    108 trep @  79.7686 msec (    12.5/sec): bcopy of 10 megabytes

     40 reps @  80.4253 msec (    12.4/sec): bcopy of 10 megabytes (cacheline-aligned)
     40 reps @  80.2444 msec (    12.5/sec): bcopy of 10 megabytes (cacheline-aligned)
     40 reps @  80.5304 msec (    12.4/sec): bcopy of 10 megabytes (cacheline-aligned)
    120 trep @  80.4000 msec (    12.4/sec): bcopy of 10 megabytes (cacheline-aligned)

     36 reps @  85.2900 msec (    11.7/sec): bcopy of 10 megabytes (word mis-aligned)
     36 reps @  85.4826 msec (    11.7/sec): bcopy of 10 megabytes (word mis-aligned)
     36 reps @  85.0649 msec (    11.8/sec): bcopy of 10 megabytes (word mis-aligned)
    108 trep @  85.2791 msec (    11.7/sec): bcopy of 10 megabytes (word mis-aligned)

     36 reps @  87.1519 msec (    11.5/sec): bcopy of 10 megabytes (dword mis-aligned)
     36 reps @  87.4638 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)
     36 reps @  87.3947 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)
    108 trep @  87.3368 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)

10630000 reps @   0.0003 msec (3530000.0/sec): bzero of 256 bytes
10630000 reps @   0.0003 msec (3550000.0/sec): bzero of 256 bytes
10630000 reps @   0.0003 msec (3540000.0/sec): bzero of 256 bytes
31890000 trep @   0.0003 msec (3540000.0/sec): bzero of 256 bytes

 198000 reps @   0.0151 msec ( 66100.0/sec): bzero of 16 kilobytes
 198000 reps @   0.0151 msec ( 66400.0/sec): bzero of 16 kilobytes
 198000 reps @   0.0151 msec ( 66300.0/sec): bzero of 16 kilobytes
 594000 trep @   0.0151 msec ( 66300.0/sec): bzero of 16 kilobytes

  13780 reps @   0.2165 msec (  4620.0/sec): bzero of 100 kilobytes
  13780 reps @   0.2164 msec (  4620.0/sec): bzero of 100 kilobytes
  13780 reps @   0.2157 msec (  4640.0/sec): bzero of 100 kilobytes
  41340 trep @   0.2162 msec (  4630.0/sec): bzero of 100 kilobytes

    724 reps @   4.0585 msec (   246.0/sec): bzero of 1 megabyte
    724 reps @   4.0409 msec (   247.0/sec): bzero of 1 megabyte
    724 reps @   4.0424 msec (   247.0/sec): bzero of 1 megabyte
   2172 trep @   4.0473 msec (   247.0/sec): bzero of 1 megabyte

     68 reps @  44.9423 msec (    22.3/sec): bzero of 10 megabytes
     68 reps @  44.6221 msec (    22.4/sec): bzero of 10 megabytes
     68 reps @  44.5823 msec (    22.4/sec): bzero of 10 megabytes
    204 trep @  44.7156 msec (    22.4/sec): bzero of 10 megabytes

     68 reps @  44.7308 msec (    22.4/sec): bzero of 10 megabytes (cacheline-aligned)
     68 reps @  44.5643 msec (    22.4/sec): bzero of 10 megabytes (cacheline-aligned)
     68 reps @  44.7042 msec (    22.4/sec): bzero of 10 megabytes (cacheline-aligned)
    204 trep @  44.6664 msec (    22.4/sec): bzero of 10 megabytes (cacheline-aligned)

     68 reps @  44.3717 msec (    22.5/sec): bzero of 10 megabytes (word mis-aligned)
     68 reps @  44.2552 msec (    22.6/sec): bzero of 10 megabytes (word mis-aligned)
     68 reps @  44.0446 msec (    22.7/sec): bzero of 10 megabytes (word mis-aligned)
    204 trep @  44.2238 msec (    22.6/sec): bzero of 10 megabytes (word mis-aligned)

     68 reps @  44.6167 msec (    22.4/sec): bzero of 10 megabytes (dword mis-aligned)
     68 reps @  44.3086 msec (    22.6/sec): bzero of 10 megabytes (dword mis-aligned)
     68 reps @  44.3184 msec (    22.6/sec): bzero of 10 megabytes (dword mis-aligned)
    204 trep @  44.4146 msec (    22.5/sec): bzero of 10 megabytes (dword mis-aligned)

   6446 reps @   0.4622 msec (  2160.0/sec): bcopy then qsort 400 32-bit integers
   6446 reps @   0.4606 msec (  2170.0/sec): bcopy then qsort 400 32-bit integers
   6446 reps @   0.4596 msec (  2180.0/sec): bcopy then qsort 400 32-bit integers
  19338 trep @   0.4608 msec (  2170.0/sec): bcopy then qsort 400 32-bit integers

     99 reps @  29.6775 msec (    33.7/sec): bcopy then qsort 16,000 32-bit integers
     99 reps @  29.6113 msec (    33.8/sec): bcopy then qsort 16,000 32-bit integers
     99 reps @  29.5771 msec (    33.8/sec): bcopy then qsort 16,000 32-bit integers
    297 trep @  29.6220 msec (    33.8/sec): bcopy then qsort 16,000 32-bit integers

     21 reps @ 137.1125 msec (    7.29/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 137.2587 msec (    7.29/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 137.3087 msec (    7.28/sec): bcopy then qsort 64,000 32-bit integers
     63 trep @ 137.2266 msec (    7.29/sec): bcopy then qsort 64,000 32-bit integers

14635000 reps @   0.0002 msec (4870000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
14635000 reps @   0.0002 msec (4870000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
14635000 reps @   0.0002 msec (4890000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
43905000 trep @   0.0002 msec (4870000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

11975000 reps @   0.0002 msec (4010000.0/sec): basic double trigonometric function (sin/cos/tan)
11975000 reps @   0.0002 msec (4020000.0/sec): basic double trigonometric function (sin/cos/tan)
11975000 reps @   0.0002 msec (4020000.0/sec): basic double trigonometric function (sin/cos/tan)
35925000 trep @   0.0002 msec (4020000.0/sec): basic double trigonometric function (sin/cos/tan)

1121500 reps @   0.0027 msec (373000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1121500 reps @   0.0027 msec (376000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1121500 reps @   0.0027 msec (375000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
3364500 trep @   0.0027 msec (375000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  15900 reps @   0.1877 msec (  5330.0/sec): Tower of Hanoi recursion test (10 deep)
  15900 reps @   0.1872 msec (  5340.0/sec): Tower of Hanoi recursion test (10 deep)
  15900 reps @   0.1871 msec (  5340.0/sec): Tower of Hanoi recursion test (10 deep)
  47700 trep @   0.1873 msec (  5340.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @   6.0725 msec (   165.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   6.0799 msec (   164.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   6.0778 msec (   165.0/sec): Tower of Hanoi recursion test (15 deep)
   1800 trep @   6.0767 msec (   165.0/sec): Tower of Hanoi recursion test (15 deep)

 377000 reps @   0.0079 msec (127000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 377000 reps @   0.0079 msec (127000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 377000 reps @   0.0079 msec (127000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
1131000 trep @   0.0079 msec (127000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 111200 reps @   0.0276 msec ( 36200.0/sec): write 80 bytes to a log file
 111200 reps @   0.0276 msec ( 36200.0/sec): write 80 bytes to a log file
 111200 reps @   0.0278 msec ( 35900.0/sec): write 80 bytes to a log file
 333600 trep @   0.0277 msec ( 36100.0/sec): write 80 bytes to a log file

    600 reps @   4.8233 msec (   207.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.5469 msec (   220.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.4628 msec (   224.0/sec): per-file cost of creating 100 files then unlinking them all
   1800 trep @   4.6110 msec (   217.0/sec): per-file cost of creating 100 files then unlinking them all

  35100 reps @   0.0861 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  35100 reps @   0.0858 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files
  35100 reps @   0.0859 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
 105300 trep @   0.0859 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files

  30000 reps @   0.1010 msec (  9900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  30000 reps @   0.0843 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  30000 reps @   0.0844 msec ( 11800.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  90000 trep @   0.0899 msec ( 11100.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 215000 reps @   0.0141 msec ( 71000.0/sec): cost of stat'ing current dir
 215000 reps @   0.0140 msec ( 71200.0/sec): cost of stat'ing current dir
 215000 reps @   0.0153 msec ( 65300.0/sec): cost of stat'ing current dir
 645000 trep @   0.0145 msec ( 69000.0/sec): cost of stat'ing current dir

  42000 reps @   0.0722 msec ( 13900.0/sec): cost of stat'ing 5 component path
  42000 reps @   0.0718 msec ( 13900.0/sec): cost of stat'ing 5 component path
  42000 reps @   0.0719 msec ( 13900.0/sec): cost of stat'ing 5 component path
 126000 trep @   0.0719 msec ( 13900.0/sec): cost of stat'ing 5 component path

   1332 reps @   2.2551 msec (   443.0/sec): open directory and stat 100 files in it
   1332 reps @   2.2471 msec (   445.0/sec): open directory and stat 100 files in it
   1332 reps @   2.2474 msec (   445.0/sec): open directory and stat 100 files in it
   3996 trep @   2.2499 msec (   444.0/sec): open directory and stat 100 files in it

    800 reps @   4.7558 msec (   210.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   3.8933 msec (   257.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   3.9135 msec (   256.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   2400 trep @   4.1875 msec (   239.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 247500 reps @   0.0120 msec ( 83700.0/sec): ndbm lookup into database with 900 entries
 247500 reps @   0.0119 msec ( 83900.0/sec): ndbm lookup into database with 900 entries
 247500 reps @   0.0119 msec ( 83700.0/sec): ndbm lookup into database with 900 entries
 742500 trep @   0.0119 msec ( 83700.0/sec): ndbm lookup into database with 900 entries

  42400 reps @   0.0666 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.0666 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.0663 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
 127200 trep @   0.0665 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes

  35200 reps @   0.0775 msec ( 12900.0/sec): 1 kilobyte token passing between two processes using two pipes
  35200 reps @   0.0778 msec ( 12900.0/sec): 1 kilobyte token passing between two processes using two pipes
  35200 reps @   0.0776 msec ( 12900.0/sec): 1 kilobyte token passing between two processes using two pipes
 105600 trep @   0.0776 msec ( 12900.0/sec): 1 kilobyte token passing between two processes using two pipes

   2500 reps @   2.3253 msec (   430.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   2500 reps @   3.7365 msec (   268.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   2500 reps @   5.3759 msec (   186.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   7500 trep @   3.8126 msec (   262.0/sec): server echoes byte using local TCP during TIME WAIT backlog


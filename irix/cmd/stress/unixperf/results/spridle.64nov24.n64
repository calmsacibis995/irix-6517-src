UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: spridle
Operating system: IRIX64 6.4-ALPHA-1263417320
Compiler version: 6.21
Instruction set: MIPS 3
Application binary interface: 64-bit
2 195 MHZ IP30 Processors
CPU: MIPS R10000 Processor Chip Revision: 2.6
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
Main memory size: 128 Mbytes
Secondary unified instruction/data cache size: 1 Mbyte
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 parallel port: plp1
Graphics board: Maximum Impact/TRAM option card
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 12.0, number 1
Uptime:  8:34
Users: 2
Load average: 2.51, 1.65, 1.07
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4205.63 MB total, 2535.58 MB available)
Date: Mon Dec  2 20:52:15 1996

4525008 reps @   0.0007 msec (1490000.0/sec): 4 by 4 double matrix multiply
4525008 reps @   0.0007 msec (1480000.0/sec): 4 by 4 double matrix multiply
4525008 reps @   0.0007 msec (1500000.0/sec): 4 by 4 double matrix multiply
13575024 trep @   0.0007 msec (1490000.0/sec): 4 by 4 double matrix multiply

4023408 reps @   0.0007 msec (1480000.0/sec): 4 by 4 float matrix multiply
4023408 reps @   0.0007 msec (1480000.0/sec): 4 by 4 float matrix multiply
4023408 reps @   0.0007 msec (1480000.0/sec): 4 by 4 float matrix multiply
12070224 trep @   0.0007 msec (1480000.0/sec): 4 by 4 float matrix multiply

 134000 reps @   0.0225 msec ( 44500.0/sec): recurse 250 simple function calls and return
 134000 reps @   0.0225 msec ( 44500.0/sec): recurse 250 simple function calls and return
 134000 reps @   0.0224 msec ( 44600.0/sec): recurse 250 simple function calls and return
 402000 trep @   0.0225 msec ( 44500.0/sec): recurse 250 simple function calls and return

5583200 reps @   0.0005 msec (1860000.0/sec): bcopy of 256 bytes
5583200 reps @   0.0005 msec (1860000.0/sec): bcopy of 256 bytes
5583200 reps @   0.0005 msec (1870000.0/sec): bcopy of 256 bytes
16749600 trep @   0.0005 msec (1860000.0/sec): bcopy of 256 bytes

 121800 reps @   0.0237 msec ( 42200.0/sec): bcopy of 16 kilobytes
 121800 reps @   0.0237 msec ( 42100.0/sec): bcopy of 16 kilobytes
 121800 reps @   0.0238 msec ( 42100.0/sec): bcopy of 16 kilobytes
 365400 trep @   0.0237 msec ( 42100.0/sec): bcopy of 16 kilobytes

   9388 reps @   0.3135 msec (  3190.0/sec): bcopy of 100 kilobytes
   9388 reps @   0.3135 msec (  3190.0/sec): bcopy of 100 kilobytes
   9388 reps @   0.3140 msec (  3190.0/sec): bcopy of 100 kilobytes
  28164 trep @   0.3137 msec (  3190.0/sec): bcopy of 100 kilobytes

    372 reps @   8.0874 msec (   124.0/sec): bcopy of 1 megabyte
    372 reps @   8.0543 msec (   124.0/sec): bcopy of 1 megabyte
    372 reps @   8.0793 msec (   124.0/sec): bcopy of 1 megabyte
   1116 trep @   8.0737 msec (   124.0/sec): bcopy of 1 megabyte

     36 reps @  80.8030 msec (    12.4/sec): bcopy of 10 megabytes
     36 reps @  80.8468 msec (    12.4/sec): bcopy of 10 megabytes
     36 reps @  80.8239 msec (    12.4/sec): bcopy of 10 megabytes
    108 trep @  80.8246 msec (    12.4/sec): bcopy of 10 megabytes

     40 reps @  80.3705 msec (    12.4/sec): bcopy of 10 megabytes (cacheline-aligned)
     40 reps @  80.3034 msec (    12.5/sec): bcopy of 10 megabytes (cacheline-aligned)
     40 reps @  80.2723 msec (    12.5/sec): bcopy of 10 megabytes (cacheline-aligned)
    120 trep @  80.3154 msec (    12.5/sec): bcopy of 10 megabytes (cacheline-aligned)

     36 reps @  85.0645 msec (    11.8/sec): bcopy of 10 megabytes (word mis-aligned)
     36 reps @  85.2842 msec (    11.7/sec): bcopy of 10 megabytes (word mis-aligned)
     36 reps @  85.3428 msec (    11.7/sec): bcopy of 10 megabytes (word mis-aligned)
    108 trep @  85.2305 msec (    11.7/sec): bcopy of 10 megabytes (word mis-aligned)

     36 reps @  87.6162 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)
     36 reps @  87.4949 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)
     36 reps @  87.2956 msec (    11.5/sec): bcopy of 10 megabytes (dword mis-aligned)
    108 trep @  87.4689 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)

10805600 reps @   0.0003 msec (3600000.0/sec): bzero of 256 bytes
10805600 reps @   0.0003 msec (3600000.0/sec): bzero of 256 bytes
10805600 reps @   0.0003 msec (3620000.0/sec): bzero of 256 bytes
32416800 trep @   0.0003 msec (3610000.0/sec): bzero of 256 bytes

 196440 reps @   0.0151 msec ( 66400.0/sec): bzero of 16 kilobytes
 196440 reps @   0.0150 msec ( 66400.0/sec): bzero of 16 kilobytes
 196440 reps @   0.0151 msec ( 66300.0/sec): bzero of 16 kilobytes
 589320 trep @   0.0151 msec ( 66400.0/sec): bzero of 16 kilobytes

  13344 reps @   0.2173 msec (  4600.0/sec): bzero of 100 kilobytes
  13344 reps @   0.2167 msec (  4610.0/sec): bzero of 100 kilobytes
  13344 reps @   0.2167 msec (  4610.0/sec): bzero of 100 kilobytes
  40032 trep @   0.2169 msec (  4610.0/sec): bzero of 100 kilobytes

    732 reps @   4.0560 msec (   247.0/sec): bzero of 1 megabyte
    732 reps @   4.0633 msec (   246.0/sec): bzero of 1 megabyte
    732 reps @   4.0455 msec (   247.0/sec): bzero of 1 megabyte
   2196 trep @   4.0549 msec (   247.0/sec): bzero of 1 megabyte

     68 reps @  44.7175 msec (    22.4/sec): bzero of 10 megabytes
     68 reps @  44.5763 msec (    22.4/sec): bzero of 10 megabytes
     68 reps @  44.5684 msec (    22.4/sec): bzero of 10 megabytes
    204 trep @  44.6208 msec (    22.4/sec): bzero of 10 megabytes

     68 reps @  44.8389 msec (    22.3/sec): bzero of 10 megabytes (cacheline-aligned)
     68 reps @  44.5777 msec (    22.4/sec): bzero of 10 megabytes (cacheline-aligned)
     68 reps @  44.5811 msec (    22.4/sec): bzero of 10 megabytes (cacheline-aligned)
    204 trep @  44.6659 msec (    22.4/sec): bzero of 10 megabytes (cacheline-aligned)

     68 reps @  44.0262 msec (    22.7/sec): bzero of 10 megabytes (word mis-aligned)
     68 reps @  44.1288 msec (    22.7/sec): bzero of 10 megabytes (word mis-aligned)
     68 reps @  44.1124 msec (    22.7/sec): bzero of 10 megabytes (word mis-aligned)
    204 trep @  44.0891 msec (    22.7/sec): bzero of 10 megabytes (word mis-aligned)

     68 reps @  44.4173 msec (    22.5/sec): bzero of 10 megabytes (dword mis-aligned)
     68 reps @  44.2966 msec (    22.6/sec): bzero of 10 megabytes (dword mis-aligned)
     68 reps @  44.2948 msec (    22.6/sec): bzero of 10 megabytes (dword mis-aligned)
    204 trep @  44.3362 msec (    22.6/sec): bzero of 10 megabytes (dword mis-aligned)

   6184 reps @   0.4843 msec (  2060.0/sec): bcopy then qsort 400 32-bit integers
   6184 reps @   0.4846 msec (  2060.0/sec): bcopy then qsort 400 32-bit integers
   6184 reps @   0.4847 msec (  2060.0/sec): bcopy then qsort 400 32-bit integers
  18552 trep @   0.4845 msec (  2060.0/sec): bcopy then qsort 400 32-bit integers

     99 reps @  30.4959 msec (    32.8/sec): bcopy then qsort 16,000 32-bit integers
     99 reps @  30.4600 msec (    32.8/sec): bcopy then qsort 16,000 32-bit integers
     99 reps @  30.3979 msec (    32.9/sec): bcopy then qsort 16,000 32-bit integers
    297 trep @  30.4512 msec (    32.8/sec): bcopy then qsort 16,000 32-bit integers

     21 reps @ 140.3997 msec (    7.12/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 139.5692 msec (    7.16/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 139.4440 msec (    7.17/sec): bcopy then qsort 64,000 32-bit integers
     63 trep @ 139.8043 msec (    7.15/sec): bcopy then qsort 64,000 32-bit integers

14005000 reps @   0.0002 msec (4950000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
14005000 reps @   0.0002 msec (4950000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
14005000 reps @   0.0002 msec (4930000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
42015000 trep @   0.0002 msec (4940000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

12117500 reps @   0.0002 msec (4120000.0/sec): basic double trigonometric function (sin/cos/tan)
12117500 reps @   0.0002 msec (4110000.0/sec): basic double trigonometric function (sin/cos/tan)
12117500 reps @   0.0002 msec (4130000.0/sec): basic double trigonometric function (sin/cos/tan)
36352500 trep @   0.0002 msec (4120000.0/sec): basic double trigonometric function (sin/cos/tan)

1124500 reps @   0.0026 msec (380000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1124500 reps @   0.0026 msec (382000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1124500 reps @   0.0026 msec (381000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
3373500 trep @   0.0026 msec (381000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  16200 reps @   0.1859 msec (  5380.0/sec): Tower of Hanoi recursion test (10 deep)
  16200 reps @   0.1852 msec (  5400.0/sec): Tower of Hanoi recursion test (10 deep)
  16200 reps @   0.1853 msec (  5400.0/sec): Tower of Hanoi recursion test (10 deep)
  48600 trep @   0.1855 msec (  5390.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @   6.0295 msec (   166.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   6.0304 msec (   166.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   6.0244 msec (   166.0/sec): Tower of Hanoi recursion test (15 deep)
   1800 trep @   6.0281 msec (   166.0/sec): Tower of Hanoi recursion test (15 deep)

 329500 reps @   0.0091 msec (110000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 329500 reps @   0.0090 msec (111000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 329500 reps @   0.0090 msec (111000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 988500 trep @   0.0090 msec (111000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 109800 reps @   0.0279 msec ( 35900.0/sec): write 80 bytes to a log file
 109800 reps @   0.0280 msec ( 35800.0/sec): write 80 bytes to a log file
 109800 reps @   0.0290 msec ( 34500.0/sec): write 80 bytes to a log file
 329400 trep @   0.0283 msec ( 35400.0/sec): write 80 bytes to a log file

    800 reps @   3.9530 msec (   253.0/sec): per-file cost of creating 100 files then unlinking them all
    800 reps @   3.7668 msec (   265.0/sec): per-file cost of creating 100 files then unlinking them all
    800 reps @   3.8384 msec (   261.0/sec): per-file cost of creating 100 files then unlinking them all
   2400 trep @   3.8527 msec (   260.0/sec): per-file cost of creating 100 files then unlinking them all

  35300 reps @   0.0852 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files
  35300 reps @   0.0849 msec ( 11800.0/sec): per-file cost of open and immediate close of 100 files
  35300 reps @   0.0851 msec ( 11800.0/sec): per-file cost of open and immediate close of 100 files
 105900 trep @   0.0851 msec ( 11800.0/sec): per-file cost of open and immediate close of 100 files

  33400 reps @   0.1008 msec (  9920.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  33400 reps @   0.0845 msec ( 11800.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  33400 reps @   0.0845 msec ( 11800.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 100200 trep @   0.0900 msec ( 11100.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 213000 reps @   0.0142 msec ( 70600.0/sec): cost of stat'ing current dir
 213000 reps @   0.0142 msec ( 70300.0/sec): cost of stat'ing current dir
 213000 reps @   0.0141 msec ( 70700.0/sec): cost of stat'ing current dir
 639000 trep @   0.0142 msec ( 70500.0/sec): cost of stat'ing current dir

  43000 reps @   0.0704 msec ( 14200.0/sec): cost of stat'ing 5 component path
  43000 reps @   0.0700 msec ( 14300.0/sec): cost of stat'ing 5 component path
  43000 reps @   0.0700 msec ( 14300.0/sec): cost of stat'ing 5 component path
 129000 trep @   0.0701 msec ( 14300.0/sec): cost of stat'ing 5 component path

   1323 reps @   2.2873 msec (   437.0/sec): open directory and stat 100 files in it
   1323 reps @   2.2708 msec (   440.0/sec): open directory and stat 100 files in it
   1323 reps @   2.2698 msec (   441.0/sec): open directory and stat 100 files in it
   3969 trep @   2.2760 msec (   439.0/sec): open directory and stat 100 files in it

    800 reps @   4.1840 msec (   239.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   3.7960 msec (   263.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   3.7866 msec (   264.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   2400 trep @   3.9222 msec (   255.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 212400 reps @   0.0140 msec ( 71300.0/sec): ndbm lookup into database with 900 entries
 212400 reps @   0.0140 msec ( 71400.0/sec): ndbm lookup into database with 900 entries
 212400 reps @   0.0140 msec ( 71500.0/sec): ndbm lookup into database with 900 entries
 637200 trep @   0.0140 msec ( 71400.0/sec): ndbm lookup into database with 900 entries

  45200 reps @   0.0668 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes
  45200 reps @   0.0666 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes
  45200 reps @   0.0667 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes
 135600 trep @   0.0667 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes

  35600 reps @   0.0803 msec ( 12400.0/sec): 1 kilobyte token passing between two processes using two pipes
  35600 reps @   0.0801 msec ( 12500.0/sec): 1 kilobyte token passing between two processes using two pipes
  35600 reps @   0.0800 msec ( 12500.0/sec): 1 kilobyte token passing between two processes using two pipes
 106800 trep @   0.0801 msec ( 12500.0/sec): 1 kilobyte token passing between two processes using two pipes

   2550 reps @   2.4297 msec (   412.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   2550 reps @   3.9023 msec (   256.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   2550 reps @   5.5611 msec (   180.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   7650 trep @   3.9644 msec (   252.0/sec): server echoes byte using local TCP during TIME WAIT backlog

    150 reps @  12.8483 msec (    77.8/sec): server spawns child to echo byte using local TCP during TIME WAIT backlog
    150 reps @  12.8825 msec (    77.6/sec): server spawns child to echo byte using local TCP during TIME WAIT backlog
    150 reps @  25.9073 msec (    38.6/sec): server spawns child to echo byte using local TCP during TIME WAIT backlog
    450 trep @  17.2127 msec (    58.1/sec): server spawns child to echo byte using local TCP during TIME WAIT backlog

7548000 reps @   0.0004 msec (2500000.0/sec): setjmp/longjmp
7548000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
7548000 reps @   0.0004 msec (2510000.0/sec): setjmp/longjmp
22644000 trep @   0.0004 msec (2510000.0/sec): setjmp/longjmp

 120000 reps @   0.0195 msec ( 51400.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 120000 reps @   0.0193 msec ( 51800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 120000 reps @   0.0193 msec ( 51700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 360000 trep @   0.0194 msec ( 51600.0/sec): sigsetjmp/siglongjmp (saving signal mask)

    150 reps @  19.7784 msec (    50.6/sec): create/destroy client TCP-based SunRPC handle
    150 reps @  18.2880 msec (    54.7/sec): create/destroy client TCP-based SunRPC handle
    150 reps @  20.0660 msec (    49.8/sec): create/destroy client TCP-based SunRPC handle
    450 trep @  19.3775 msec (    51.6/sec): create/destroy client TCP-based SunRPC handle

    155 reps @  20.0007 msec (    50.0/sec): create/destroy client UDP-based SunRPC handle
    155 reps @  19.7406 msec (    50.7/sec): create/destroy client UDP-based SunRPC handle
    155 reps @  20.0009 msec (    50.0/sec): create/destroy client UDP-based SunRPC handle
    465 trep @  19.9141 msec (    50.2/sec): create/destroy client UDP-based SunRPC handle

   6400 reps @   0.4767 msec (  2100.0/sec): TCP-based SunRPC to negate an integer
   6400 reps @   0.4727 msec (  2120.0/sec): TCP-based SunRPC to negate an integer
   6400 reps @   0.4740 msec (  2110.0/sec): TCP-based SunRPC to negate an integer
  19200 trep @   0.4745 msec (  2110.0/sec): TCP-based SunRPC to negate an integer

   6800 reps @   0.4308 msec (  2320.0/sec): UDP-based SunRPC to negate an integer
   6800 reps @   0.4273 msec (  2340.0/sec): UDP-based SunRPC to negate an integer
   6800 reps @   0.4299 msec (  2330.0/sec): UDP-based SunRPC to negate an integer
  20400 trep @   0.4293 msec (  2330.0/sec): UDP-based SunRPC to negate an integer

   6000 reps @   0.4619 msec (  2160.0/sec): TCP-based SunRPC no-op
   6000 reps @   0.4631 msec (  2160.0/sec): TCP-based SunRPC no-op
   6000 reps @   0.4609 msec (  2170.0/sec): TCP-based SunRPC no-op
  18000 trep @   0.4620 msec (  2160.0/sec): TCP-based SunRPC no-op

   6800 reps @   0.4317 msec (  2320.0/sec): UDP-based SunRPC no-op
   6800 reps @   0.4300 msec (  2330.0/sec): UDP-based SunRPC no-op
   6800 reps @   0.4287 msec (  2330.0/sec): UDP-based SunRPC no-op
  20400 trep @   0.4301 msec (  2320.0/sec): UDP-based SunRPC no-op

1375500 reps @   0.0022 msec (455000.0/sec): getpid system call
1375500 reps @   0.0022 msec (456000.0/sec): getpid system call
1375500 reps @   0.0022 msec (456000.0/sec): getpid system call
4126500 trep @   0.0022 msec (456000.0/sec): getpid system call

 175500 reps @   0.0172 msec ( 58200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 175500 reps @   0.0171 msec ( 58300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 175500 reps @   0.0172 msec ( 58300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 526500 trep @   0.0172 msec ( 58200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 626800 reps @   0.0048 msec (208000.0/sec): gettimeofday system call
 626800 reps @   0.0049 msec (204000.0/sec): gettimeofday system call
 626800 reps @   0.0048 msec (209000.0/sec): gettimeofday system call
1880400 trep @   0.0048 msec (207000.0/sec): gettimeofday system call

    450 reps @   7.7619 msec (   129.0/sec): fork, child immediately exits, parent waits
    450 reps @   7.6086 msec (   131.0/sec): fork, child immediately exits, parent waits
    450 reps @   7.6067 msec (   131.0/sec): fork, child immediately exits, parent waits
   1350 trep @   7.6591 msec (   131.0/sec): fork, child immediately exits, parent waits

      3 reps @ 1010.9180 msec (    0.99/sec): sleep for one second (validates test time)
      3 reps @ 1010.9050 msec (    0.99/sec): sleep for one second (validates test time)
      3 reps @ 1010.9077 msec (    0.99/sec): sleep for one second (validates test time)
      9 trep @ 1010.9102 msec (    0.99/sec): sleep for one second (validates test time)

 606900 reps @   0.0050 msec (201000.0/sec): select on no fds with no timeout
 606900 reps @   0.0050 msec (202000.0/sec): select on no fds with no timeout
 606900 reps @   0.0050 msec (202000.0/sec): select on no fds with no timeout
1820700 trep @   0.0050 msec (201000.0/sec): select on no fds with no timeout

 165200 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe read fds with immediate timeout
 165200 reps @   0.0182 msec ( 55100.0/sec): select on 16 pipe read fds with immediate timeout
 165200 reps @   0.0182 msec ( 55000.0/sec): select on 16 pipe read fds with immediate timeout
 495600 trep @   0.0182 msec ( 55000.0/sec): select on 16 pipe read fds with immediate timeout

  92800 reps @   0.0323 msec ( 31000.0/sec): select on 32 pipe read fds with immediate timeout
  92800 reps @   0.0322 msec ( 31000.0/sec): select on 32 pipe read fds with immediate timeout
  92800 reps @   0.0323 msec ( 30900.0/sec): select on 32 pipe read fds with immediate timeout
 278400 trep @   0.0323 msec ( 31000.0/sec): select on 32 pipe read fds with immediate timeout

 164400 reps @   0.0183 msec ( 54500.0/sec): select on 16 pipe write fds with immediate timeout
 164400 reps @   0.0183 msec ( 54600.0/sec): select on 16 pipe write fds with immediate timeout
 164400 reps @   0.0183 msec ( 54700.0/sec): select on 16 pipe write fds with immediate timeout
 493200 trep @   0.0183 msec ( 54600.0/sec): select on 16 pipe write fds with immediate timeout

 165600 reps @   0.0182 msec ( 55000.0/sec): select on 32 pipe write fds with immediate timeout
 165600 reps @   0.0182 msec ( 54900.0/sec): select on 32 pipe write fds with immediate timeout
 165600 reps @   0.0182 msec ( 55100.0/sec): select on 32 pipe write fds with immediate timeout
 496800 trep @   0.0182 msec ( 55000.0/sec): select on 32 pipe write fds with immediate timeout

  21500 reps @   0.1313 msec (  7610.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  21500 reps @   0.1317 msec (  7590.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  21500 reps @   0.1316 msec (  7600.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  64500 trep @   0.1315 msec (  7600.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    210 reps @  13.8354 msec (    72.3/sec): popen and read from "/bin/echo hello"
    210 reps @  13.8413 msec (    72.2/sec): popen and read from "/bin/echo hello"
    210 reps @  13.8454 msec (    72.2/sec): popen and read from "/bin/echo hello"
    630 trep @  13.8407 msec (    72.3/sec): popen and read from "/bin/echo hello"

  27950 reps @   0.1082 msec (  9240.0/sec): mmap megabyte /dev/zero region 
  27950 reps @   0.1086 msec (  9210.0/sec): mmap megabyte /dev/zero region 
  27950 reps @   0.1076 msec (  9290.0/sec): mmap megabyte /dev/zero region 
  83850 trep @   0.1081 msec (  9250.0/sec): mmap megabyte /dev/zero region 

    407 reps @   7.4110 msec (   135.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    407 reps @   7.3597 msec (   136.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    407 reps @   7.3642 msec (   136.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   1221 trep @   7.3783 msec (   136.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    761 reps @   4.0899 msec (   245.0/sec): copy every byte of newly mmaped megabyte file
    761 reps @   4.2509 msec (   235.0/sec): copy every byte of newly mmaped megabyte file
    761 reps @   4.3039 msec (   232.0/sec): copy every byte of newly mmaped megabyte file
   2283 trep @   4.2149 msec (   237.0/sec): copy every byte of newly mmaped megabyte file

     35 reps @  59.4840 msec (    16.8/sec): compress & uncompress 52 kilobyte text file of numbers
     35 reps @  59.2121 msec (    16.9/sec): compress & uncompress 52 kilobyte text file of numbers
     35 reps @  59.1833 msec (    16.9/sec): compress & uncompress 52 kilobyte text file of numbers
    105 trep @  59.2931 msec (    16.9/sec): compress & uncompress 52 kilobyte text file of numbers

     12 reps @  47.7087 msec (    21.0/sec): compile ANSI C `hello world' with no special options
     12 reps @  48.9393 msec (    20.4/sec): compile ANSI C `hello world' with no special options
     12 reps @  49.3108 msec (    20.3/sec): compile ANSI C `hello world' with no special options
     36 trep @  48.6529 msec (    20.6/sec): compile ANSI C `hello world' with no special options

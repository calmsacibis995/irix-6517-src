UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: leafeater
Operating system: IRIX 6.3
Compiler version: 7.1
Instruction set: MIPS 3
Application binary interface: N32
Video: MVP unit 0 version 1.2
AV: AV1 Card version 1, O2Cam type 1 version 0 connected.
FLASH PROM version 3.3
On-board serial ports: 2
On-board EPP/ECP parallel port
1 180 MHZ IP32 Processor
FPU: MIPS R5000 Floating Point Coprocessor Revision: 1.0
CPU: MIPS R5000 Processor Chip Revision: 1.0
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 512 Kbytes on Processor 0
Main memory size: 64 Mbytes
Iris Audio Processor: version A3 revision 0
Integral Ethernet: ec0, version 1
  CDROM: unit 4 on SCSI controller 0
  Disk drive: unit 1 on SCSI controller 0
CRM graphics installed
Integral SCSI controller 1: Version ADAPTEC 7880
Integral SCSI controller 0: Version ADAPTEC 7880
Vice: DX
Uptime: 15:35
Users: 1
Load average: 1.10, 2.33, 1.97
File IO test directory: /usr/tmp
File IO test filesystem: xfs (1915.95 MB total, 44.56 MB available)
Date: Tue Mar 18 03:50:39 1997

2080368 reps @   0.0023 msec (437000.0/sec): 4 by 4 double matrix multiply
2080368 reps @   0.0023 msec (437000.0/sec): 4 by 4 double matrix multiply
2080368 reps @   0.0023 msec (436000.0/sec): 4 by 4 double matrix multiply
2080368 reps @   0.0023 msec (437000.0/sec): 4 by 4 double matrix multiply
2080368 reps @   0.0023 msec (437000.0/sec): 4 by 4 double matrix multiply
10401840 trep @   0.0023 msec (437000.0/sec): 4 by 4 double matrix multiply

2185620 reps @   0.0022 msec (458000.0/sec): 4 by 4 float matrix multiply
2185620 reps @   0.0022 msec (458000.0/sec): 4 by 4 float matrix multiply
2185620 reps @   0.0022 msec (458000.0/sec): 4 by 4 float matrix multiply
2185620 reps @   0.0022 msec (458000.0/sec): 4 by 4 float matrix multiply
2185620 reps @   0.0022 msec (458000.0/sec): 4 by 4 float matrix multiply
10928100 trep @   0.0022 msec (458000.0/sec): 4 by 4 float matrix multiply

 259000 reps @   0.0184 msec ( 54400.0/sec): recurse 250 simple function calls and return
 259000 reps @   0.0184 msec ( 54400.0/sec): recurse 250 simple function calls and return
 259000 reps @   0.0184 msec ( 54400.0/sec): recurse 250 simple function calls and return
 259000 reps @   0.0184 msec ( 54400.0/sec): recurse 250 simple function calls and return
 259000 reps @   0.0184 msec ( 54400.0/sec): recurse 250 simple function calls and return
1295000 trep @   0.0184 msec ( 54400.0/sec): recurse 250 simple function calls and return

6128800 reps @   0.0008 msec (1320000.0/sec): bcopy of 256 bytes
6128800 reps @   0.0008 msec (1320000.0/sec): bcopy of 256 bytes
6128800 reps @   0.0008 msec (1320000.0/sec): bcopy of 256 bytes
6128800 reps @   0.0008 msec (1320000.0/sec): bcopy of 256 bytes
6128800 reps @   0.0008 msec (1320000.0/sec): bcopy of 256 bytes
30644000 trep @   0.0008 msec (1320000.0/sec): bcopy of 256 bytes

 159880 reps @   0.0295 msec ( 33900.0/sec): bcopy of 16 kilobytes
 159880 reps @   0.0296 msec ( 33800.0/sec): bcopy of 16 kilobytes
 159880 reps @   0.0295 msec ( 33800.0/sec): bcopy of 16 kilobytes
 159880 reps @   0.0295 msec ( 33900.0/sec): bcopy of 16 kilobytes
 159880 reps @   0.0295 msec ( 33900.0/sec): bcopy of 16 kilobytes
 799400 trep @   0.0295 msec ( 33900.0/sec): bcopy of 16 kilobytes

   4380 reps @   1.1317 msec (   884.0/sec): bcopy of 100 kilobytes
   4380 reps @   1.1317 msec (   884.0/sec): bcopy of 100 kilobytes
   4380 reps @   1.1330 msec (   883.0/sec): bcopy of 100 kilobytes
   4380 reps @   1.1317 msec (   884.0/sec): bcopy of 100 kilobytes
   4380 reps @   1.1319 msec (   884.0/sec): bcopy of 100 kilobytes
  21900 trep @   1.1320 msec (   883.0/sec): bcopy of 100 kilobytes

    160 reps @  30.5066 msec (    32.8/sec): bcopy of 1 megabyte
    160 reps @  30.4990 msec (    32.8/sec): bcopy of 1 megabyte
    160 reps @  30.5033 msec (    32.8/sec): bcopy of 1 megabyte
    160 reps @  30.5229 msec (    32.8/sec): bcopy of 1 megabyte
    160 reps @  30.4972 msec (    32.8/sec): bcopy of 1 megabyte
    800 trep @  30.5058 msec (    32.8/sec): bcopy of 1 megabyte

     20 reps @ 308.4275 msec (    3.24/sec): bcopy of 10 megabytes
     20 reps @ 308.4165 msec (    3.24/sec): bcopy of 10 megabytes
     20 reps @ 308.4660 msec (    3.24/sec): bcopy of 10 megabytes
     20 reps @ 308.4939 msec (    3.24/sec): bcopy of 10 megabytes
     20 reps @ 308.4025 msec (    3.24/sec): bcopy of 10 megabytes
    100 trep @ 308.4413 msec (    3.24/sec): bcopy of 10 megabytes

     20 reps @ 307.3122 msec (    3.25/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 307.4456 msec (    3.25/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 307.4413 msec (    3.25/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 307.3346 msec (    3.25/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 307.3259 msec (    3.25/sec): bcopy of 10 megabytes (cacheline-aligned)
    100 trep @ 307.3719 msec (    3.25/sec): bcopy of 10 megabytes (cacheline-aligned)

     16 reps @ 315.2551 msec (    3.17/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 315.1373 msec (    3.17/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 315.4158 msec (    3.17/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 315.2181 msec (    3.17/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 315.2238 msec (    3.17/sec): bcopy of 10 megabytes (word mis-aligned)
     80 trep @ 315.2500 msec (    3.17/sec): bcopy of 10 megabytes (word mis-aligned)

     16 reps @ 314.7932 msec (    3.18/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 314.7695 msec (    3.18/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 314.6994 msec (    3.18/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 314.8526 msec (    3.18/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 314.7047 msec (    3.18/sec): bcopy of 10 megabytes (dword mis-aligned)
     80 trep @ 314.7639 msec (    3.18/sec): bcopy of 10 megabytes (dword mis-aligned)

11340800 reps @   0.0004 msec (2440000.0/sec): bzero of 256 bytes
11340800 reps @   0.0004 msec (2430000.0/sec): bzero of 256 bytes
11340800 reps @   0.0004 msec (2440000.0/sec): bzero of 256 bytes
11340800 reps @   0.0004 msec (2440000.0/sec): bzero of 256 bytes
11340800 reps @   0.0004 msec (2440000.0/sec): bzero of 256 bytes
56704000 trep @   0.0004 msec (2440000.0/sec): bzero of 256 bytes

 300120 reps @   0.0158 msec ( 63300.0/sec): bzero of 16 kilobytes
 300120 reps @   0.0158 msec ( 63300.0/sec): bzero of 16 kilobytes
 300120 reps @   0.0158 msec ( 63300.0/sec): bzero of 16 kilobytes
 300120 reps @   0.0158 msec ( 63300.0/sec): bzero of 16 kilobytes
 300120 reps @   0.0158 msec ( 63300.0/sec): bzero of 16 kilobytes
1500600 trep @   0.0158 msec ( 63300.0/sec): bzero of 16 kilobytes

   7344 reps @   0.6719 msec (  1490.0/sec): bzero of 100 kilobytes
   7344 reps @   0.6724 msec (  1490.0/sec): bzero of 100 kilobytes
   7344 reps @   0.6720 msec (  1490.0/sec): bzero of 100 kilobytes
   7344 reps @   0.6719 msec (  1490.0/sec): bzero of 100 kilobytes
   7344 reps @   0.6717 msec (  1490.0/sec): bzero of 100 kilobytes
  36720 trep @   0.6720 msec (  1490.0/sec): bzero of 100 kilobytes

    280 reps @  16.9918 msec (    58.9/sec): bzero of 1 megabyte
    280 reps @  17.0032 msec (    58.8/sec): bzero of 1 megabyte
    280 reps @  16.9953 msec (    58.8/sec): bzero of 1 megabyte
    280 reps @  16.9909 msec (    58.9/sec): bzero of 1 megabyte
    280 reps @  16.9927 msec (    58.8/sec): bzero of 1 megabyte
   1400 trep @  16.9948 msec (    58.8/sec): bzero of 1 megabyte

     32 reps @ 171.6987 msec (    5.82/sec): bzero of 10 megabytes
     32 reps @ 171.7101 msec (    5.82/sec): bzero of 10 megabytes
     32 reps @ 171.7963 msec (    5.82/sec): bzero of 10 megabytes
     32 reps @ 171.7274 msec (    5.82/sec): bzero of 10 megabytes
     32 reps @ 171.7461 msec (    5.82/sec): bzero of 10 megabytes
    160 trep @ 171.7357 msec (    5.82/sec): bzero of 10 megabytes

     32 reps @ 171.6941 msec (    5.82/sec): bzero of 10 megabytes (cacheline-aligned)
     32 reps @ 171.7313 msec (    5.82/sec): bzero of 10 megabytes (cacheline-aligned)
     32 reps @ 171.9496 msec (    5.82/sec): bzero of 10 megabytes (cacheline-aligned)
     32 reps @ 171.7711 msec (    5.82/sec): bzero of 10 megabytes (cacheline-aligned)
     32 reps @ 171.7420 msec (    5.82/sec): bzero of 10 megabytes (cacheline-aligned)
    160 trep @ 171.7776 msec (    5.82/sec): bzero of 10 megabytes (cacheline-aligned)

     32 reps @ 171.8292 msec (    5.82/sec): bzero of 10 megabytes (word mis-aligned)
     32 reps @ 171.6901 msec (    5.82/sec): bzero of 10 megabytes (word mis-aligned)
     32 reps @ 171.7970 msec (    5.82/sec): bzero of 10 megabytes (word mis-aligned)
     32 reps @ 171.7276 msec (    5.82/sec): bzero of 10 megabytes (word mis-aligned)
     32 reps @ 171.7542 msec (    5.82/sec): bzero of 10 megabytes (word mis-aligned)
    160 trep @ 171.7596 msec (    5.82/sec): bzero of 10 megabytes (word mis-aligned)

     32 reps @ 171.6993 msec (    5.82/sec): bzero of 10 megabytes (dword mis-aligned)
     32 reps @ 171.7549 msec (    5.82/sec): bzero of 10 megabytes (dword mis-aligned)
     32 reps @ 171.7734 msec (    5.82/sec): bzero of 10 megabytes (dword mis-aligned)
     32 reps @ 171.7716 msec (    5.82/sec): bzero of 10 megabytes (dword mis-aligned)
     32 reps @ 171.6839 msec (    5.82/sec): bzero of 10 megabytes (dword mis-aligned)
    160 trep @ 171.7366 msec (    5.82/sec): bzero of 10 megabytes (dword mis-aligned)

   7555 reps @   0.6211 msec (  1610.0/sec): bcopy then qsort 400 32-bit integers
   7555 reps @   0.6211 msec (  1610.0/sec): bcopy then qsort 400 32-bit integers
   7555 reps @   0.6212 msec (  1610.0/sec): bcopy then qsort 400 32-bit integers
   7555 reps @   0.6210 msec (  1610.0/sec): bcopy then qsort 400 32-bit integers
   7555 reps @   0.6216 msec (  1610.0/sec): bcopy then qsort 400 32-bit integers
  37775 trep @   0.6212 msec (  1610.0/sec): bcopy then qsort 400 32-bit integers

    123 reps @  40.7021 msec (    24.6/sec): bcopy then qsort 16,000 32-bit integers
    123 reps @  40.6398 msec (    24.6/sec): bcopy then qsort 16,000 32-bit integers
    123 reps @  40.6435 msec (    24.6/sec): bcopy then qsort 16,000 32-bit integers
    123 reps @  40.6442 msec (    24.6/sec): bcopy then qsort 16,000 32-bit integers
    123 reps @  40.6312 msec (    24.6/sec): bcopy then qsort 16,000 32-bit integers
    615 trep @  40.6522 msec (    24.6/sec): bcopy then qsort 16,000 32-bit integers

     25 reps @ 195.8033 msec (    5.11/sec): bcopy then qsort 64,000 32-bit integers
     25 reps @ 195.7172 msec (    5.11/sec): bcopy then qsort 64,000 32-bit integers
     25 reps @ 195.7021 msec (    5.11/sec): bcopy then qsort 64,000 32-bit integers
     25 reps @ 195.7642 msec (    5.11/sec): bcopy then qsort 64,000 32-bit integers
     25 reps @ 195.6977 msec (    5.11/sec): bcopy then qsort 64,000 32-bit integers
    125 trep @ 195.7369 msec (    5.11/sec): bcopy then qsort 64,000 32-bit integers

10952500 reps @   0.0005 msec (2190000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10952500 reps @   0.0005 msec (2190000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10952500 reps @   0.0005 msec (2190000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10952500 reps @   0.0005 msec (2190000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10952500 reps @   0.0005 msec (2190000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
54762500 trep @   0.0005 msec (2190000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

8942500 reps @   0.0005 msec (1860000.0/sec): basic double trigonometric function (sin/cos/tan)
8942500 reps @   0.0005 msec (1860000.0/sec): basic double trigonometric function (sin/cos/tan)
8942500 reps @   0.0005 msec (1860000.0/sec): basic double trigonometric function (sin/cos/tan)
8942500 reps @   0.0005 msec (1860000.0/sec): basic double trigonometric function (sin/cos/tan)
8942500 reps @   0.0005 msec (1860000.0/sec): basic double trigonometric function (sin/cos/tan)
44712500 trep @   0.0005 msec (1860000.0/sec): basic double trigonometric function (sin/cos/tan)

1367000 reps @   0.0034 msec (292000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1367000 reps @   0.0034 msec (292000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1367000 reps @   0.0034 msec (292000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1367000 reps @   0.0034 msec (292000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1367000 reps @   0.0034 msec (292000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
6835000 trep @   0.0034 msec (292000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  18000 reps @   0.2718 msec (  3680.0/sec): Tower of Hanoi recursion test (10 deep)
  18000 reps @   0.2719 msec (  3680.0/sec): Tower of Hanoi recursion test (10 deep)
  18000 reps @   0.2718 msec (  3680.0/sec): Tower of Hanoi recursion test (10 deep)
  18000 reps @   0.2719 msec (  3680.0/sec): Tower of Hanoi recursion test (10 deep)
  18000 reps @   0.2719 msec (  3680.0/sec): Tower of Hanoi recursion test (10 deep)
  90000 trep @   0.2719 msec (  3680.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @   8.7051 msec (   115.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7081 msec (   115.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7053 msec (   115.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7053 msec (   115.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7086 msec (   115.0/sec): Tower of Hanoi recursion test (15 deep)
   3000 trep @   8.7065 msec (   115.0/sec): Tower of Hanoi recursion test (15 deep)

 282000 reps @   0.0167 msec ( 59700.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 282000 reps @   0.0167 msec ( 59700.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 282000 reps @   0.0167 msec ( 59700.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 282000 reps @   0.0167 msec ( 59700.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 282000 reps @   0.0167 msec ( 59700.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
1410000 trep @   0.0167 msec ( 59700.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

  76800 reps @   0.0703 msec ( 14200.0/sec): write 80 bytes to a log file
  76800 reps @   0.0753 msec ( 13300.0/sec): write 80 bytes to a log file
  76800 reps @   0.0827 msec ( 12100.0/sec): write 80 bytes to a log file
  76800 reps @   0.0857 msec ( 11700.0/sec): write 80 bytes to a log file
  76800 reps @   0.0851 msec ( 11800.0/sec): write 80 bytes to a log file
 384000 trep @   0.0798 msec ( 12500.0/sec): write 80 bytes to a log file

    700 reps @   5.6134 msec (   178.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   5.3263 msec (   188.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   5.3136 msec (   188.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   5.5979 msec (   179.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   5.5345 msec (   181.0/sec): per-file cost of creating 100 files then unlinking them all
   3500 trep @   5.4771 msec (   183.0/sec): per-file cost of creating 100 files then unlinking them all

  46800 reps @   0.1070 msec (  9350.0/sec): per-file cost of open and immediate close of 100 files
  46800 reps @   0.1070 msec (  9350.0/sec): per-file cost of open and immediate close of 100 files
  46800 reps @   0.1072 msec (  9330.0/sec): per-file cost of open and immediate close of 100 files
  46800 reps @   0.1070 msec (  9340.0/sec): per-file cost of open and immediate close of 100 files
  46800 reps @   0.1071 msec (  9340.0/sec): per-file cost of open and immediate close of 100 files
 234000 trep @   0.1071 msec (  9340.0/sec): per-file cost of open and immediate close of 100 files

  35600 reps @   0.1446 msec (  6920.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  35600 reps @   0.1354 msec (  7390.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  35600 reps @   0.1351 msec (  7400.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  35600 reps @   0.1345 msec (  7440.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  35600 reps @   0.1328 msec (  7530.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 178000 trep @   0.1365 msec (  7330.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 239000 reps @   0.0209 msec ( 48000.0/sec): cost of stat'ing current dir
 239000 reps @   0.0209 msec ( 47900.0/sec): cost of stat'ing current dir
 239000 reps @   0.0209 msec ( 48000.0/sec): cost of stat'ing current dir
 239000 reps @   0.0209 msec ( 47900.0/sec): cost of stat'ing current dir
 239000 reps @   0.0213 msec ( 46900.0/sec): cost of stat'ing current dir
1195000 trep @   0.0209 msec ( 47700.0/sec): cost of stat'ing current dir

  54500 reps @   0.0921 msec ( 10900.0/sec): cost of stat'ing 5 component path
  54500 reps @   0.0918 msec ( 10900.0/sec): cost of stat'ing 5 component path
  54500 reps @   0.0919 msec ( 10900.0/sec): cost of stat'ing 5 component path
  54500 reps @   0.0917 msec ( 10900.0/sec): cost of stat'ing 5 component path
  54500 reps @   0.0921 msec ( 10900.0/sec): cost of stat'ing 5 component path
 272500 trep @   0.0919 msec ( 10900.0/sec): cost of stat'ing 5 component path

    453 reps @   3.2478 msec (   308.0/sec): open directory and stat 100 files in it
    453 reps @   3.2404 msec (   309.0/sec): open directory and stat 100 files in it
    453 reps @   3.4005 msec (   294.0/sec): open directory and stat 100 files in it
    453 reps @   3.2384 msec (   309.0/sec): open directory and stat 100 files in it
    453 reps @   3.2375 msec (   309.0/sec): open directory and stat 100 files in it
   2265 trep @   3.2729 msec (   306.0/sec): open directory and stat 100 files in it

   1100 reps @   5.3670 msec (   186.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1100 reps @   5.2703 msec (   190.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1100 reps @   5.0284 msec (   199.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1100 reps @   4.9696 msec (   201.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1100 reps @   4.9992 msec (   200.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   5500 trep @   5.1269 msec (   195.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 186300 reps @   0.0263 msec ( 38100.0/sec): ndbm lookup into database with 900 entries
 186300 reps @   0.0262 msec ( 38100.0/sec): ndbm lookup into database with 900 entries
 186300 reps @   0.0267 msec ( 37500.0/sec): ndbm lookup into database with 900 entries
 186300 reps @   0.0262 msec ( 38200.0/sec): ndbm lookup into database with 900 entries
 186300 reps @   0.0261 msec ( 38300.0/sec): ndbm lookup into database with 900 entries
 931500 trep @   0.0263 msec ( 38000.0/sec): ndbm lookup into database with 900 entries

  44000 reps @   0.1034 msec (  9670.0/sec): 1 byte token passing between two processes using two pipes
  44000 reps @   0.1033 msec (  9680.0/sec): 1 byte token passing between two processes using two pipes
  44000 reps @   0.1033 msec (  9680.0/sec): 1 byte token passing between two processes using two pipes
  44000 reps @   0.1033 msec (  9680.0/sec): 1 byte token passing between two processes using two pipes
  44000 reps @   0.1030 msec (  9710.0/sec): 1 byte token passing between two processes using two pipes
 220000 trep @   0.1033 msec (  9680.0/sec): 1 byte token passing between two processes using two pipes

  38800 reps @   0.1192 msec (  8390.0/sec): 1 kilobyte token passing between two processes using two pipes
  38800 reps @   0.1191 msec (  8400.0/sec): 1 kilobyte token passing between two processes using two pipes
  38800 reps @   0.1191 msec (  8400.0/sec): 1 kilobyte token passing between two processes using two pipes
  38800 reps @   0.1196 msec (  8360.0/sec): 1 kilobyte token passing between two processes using two pipes
  38800 reps @   0.1196 msec (  8360.0/sec): 1 kilobyte token passing between two processes using two pipes
 194000 trep @   0.1193 msec (  8380.0/sec): 1 kilobyte token passing between two processes using two pipes

13300000 reps @   0.0004 msec (2660000.0/sec): setjmp/longjmp
13300000 reps @   0.0004 msec (2660000.0/sec): setjmp/longjmp
13300000 reps @   0.0004 msec (2660000.0/sec): setjmp/longjmp
13300000 reps @   0.0004 msec (2660000.0/sec): setjmp/longjmp
13300000 reps @   0.0004 msec (2660000.0/sec): setjmp/longjmp
66500000 trep @   0.0004 msec (2660000.0/sec): setjmp/longjmp

 252000 reps @   0.0189 msec ( 52900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0189 msec ( 52900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0189 msec ( 52900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0189 msec ( 52800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0189 msec ( 52900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1260000 trep @   0.0189 msec ( 52900.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   2085 reps @   2.3706 msec (   422.0/sec): create/destroy client UDP-based SunRPC handle
   2085 reps @   2.3744 msec (   421.0/sec): create/destroy client UDP-based SunRPC handle
   2085 reps @   2.3749 msec (   421.0/sec): create/destroy client UDP-based SunRPC handle
   2085 reps @   2.3686 msec (   422.0/sec): create/destroy client UDP-based SunRPC handle
   2085 reps @   2.3702 msec (   422.0/sec): create/destroy client UDP-based SunRPC handle
  10425 trep @   2.3717 msec (   422.0/sec): create/destroy client UDP-based SunRPC handle

   8400 reps @   0.5789 msec (  1730.0/sec): TCP-based SunRPC to negate an integer
   8400 reps @   0.5798 msec (  1720.0/sec): TCP-based SunRPC to negate an integer
   8400 reps @   0.5800 msec (  1720.0/sec): TCP-based SunRPC to negate an integer
   8400 reps @   0.5809 msec (  1720.0/sec): TCP-based SunRPC to negate an integer
   8400 reps @   0.5803 msec (  1720.0/sec): TCP-based SunRPC to negate an integer
  42000 trep @   0.5800 msec (  1720.0/sec): TCP-based SunRPC to negate an integer

   7600 reps @   0.6518 msec (  1530.0/sec): UDP-based SunRPC to negate an integer
   7600 reps @   0.6491 msec (  1540.0/sec): UDP-based SunRPC to negate an integer
   7600 reps @   0.6508 msec (  1540.0/sec): UDP-based SunRPC to negate an integer
   7600 reps @   0.6501 msec (  1540.0/sec): UDP-based SunRPC to negate an integer
   7600 reps @   0.6505 msec (  1540.0/sec): UDP-based SunRPC to negate an integer
  38000 trep @   0.6505 msec (  1540.0/sec): UDP-based SunRPC to negate an integer

   8800 reps @   0.5658 msec (  1770.0/sec): TCP-based SunRPC no-op
   8800 reps @   0.5656 msec (  1770.0/sec): TCP-based SunRPC no-op
   8800 reps @   0.5654 msec (  1770.0/sec): TCP-based SunRPC no-op
   8800 reps @   0.5657 msec (  1770.0/sec): TCP-based SunRPC no-op
   8800 reps @   0.5665 msec (  1770.0/sec): TCP-based SunRPC no-op
  44000 trep @   0.5658 msec (  1770.0/sec): TCP-based SunRPC no-op

   8000 reps @   0.6366 msec (  1570.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6407 msec (  1560.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6411 msec (  1560.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6409 msec (  1560.0/sec): UDP-based SunRPC no-op
   8000 reps @   0.6409 msec (  1560.0/sec): UDP-based SunRPC no-op
  40000 trep @   0.6400 msec (  1560.0/sec): UDP-based SunRPC no-op

1187000 reps @   0.0040 msec (250000.0/sec): getpid system call
1187000 reps @   0.0040 msec (250000.0/sec): getpid system call
1187000 reps @   0.0040 msec (250000.0/sec): getpid system call
1187000 reps @   0.0040 msec (250000.0/sec): getpid system call
1187000 reps @   0.0040 msec (250000.0/sec): getpid system call
5935000 trep @   0.0040 msec (250000.0/sec): getpid system call

 159500 reps @   0.0298 msec ( 33600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 159500 reps @   0.0298 msec ( 33500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 159500 reps @   0.0298 msec ( 33500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 159500 reps @   0.0298 msec ( 33600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 159500 reps @   0.0298 msec ( 33500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 797500 trep @   0.0298 msec ( 33500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 678800 reps @   0.0070 msec (142000.0/sec): gettimeofday system call
 678800 reps @   0.0070 msec (142000.0/sec): gettimeofday system call
 678800 reps @   0.0070 msec (142000.0/sec): gettimeofday system call
 678800 reps @   0.0070 msec (142000.0/sec): gettimeofday system call
 678800 reps @   0.0070 msec (142000.0/sec): gettimeofday system call
3394000 trep @   0.0070 msec (142000.0/sec): gettimeofday system call

    200 reps @  30.9862 msec (    32.3/sec): fork, child immediately exits, parent waits
    200 reps @  30.7209 msec (    32.6/sec): fork, child immediately exits, parent waits
    200 reps @  30.5811 msec (    32.7/sec): fork, child immediately exits, parent waits
    200 reps @  30.5740 msec (    32.7/sec): fork, child immediately exits, parent waits
    200 reps @  30.4705 msec (    32.8/sec): fork, child immediately exits, parent waits
   1000 trep @  30.6666 msec (    32.6/sec): fork, child immediately exits, parent waits

      5 reps @ 1009.8394 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.8358 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.8376 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.8376 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.8418 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1009.8384 msec (    0.99/sec): sleep for one second (validates test time)

 580300 reps @   0.0081 msec (123000.0/sec): select on no fds with no timeout
 580300 reps @   0.0081 msec (123000.0/sec): select on no fds with no timeout
 580300 reps @   0.0081 msec (123000.0/sec): select on no fds with no timeout
 580300 reps @   0.0081 msec (124000.0/sec): select on no fds with no timeout
 580300 reps @   0.0081 msec (123000.0/sec): select on no fds with no timeout
2901500 trep @   0.0081 msec (123000.0/sec): select on no fds with no timeout

 197400 reps @   0.0254 msec ( 39400.0/sec): select on 16 pipe read fds with immediate timeout
 197400 reps @   0.0253 msec ( 39500.0/sec): select on 16 pipe read fds with immediate timeout
 197400 reps @   0.0254 msec ( 39400.0/sec): select on 16 pipe read fds with immediate timeout
 197400 reps @   0.0254 msec ( 39400.0/sec): select on 16 pipe read fds with immediate timeout
 197400 reps @   0.0254 msec ( 39400.0/sec): select on 16 pipe read fds with immediate timeout
 987000 trep @   0.0254 msec ( 39400.0/sec): select on 16 pipe read fds with immediate timeout

 107600 reps @   0.0443 msec ( 22600.0/sec): select on 32 pipe read fds with immediate timeout
 107600 reps @   0.0443 msec ( 22600.0/sec): select on 32 pipe read fds with immediate timeout
 107600 reps @   0.0443 msec ( 22600.0/sec): select on 32 pipe read fds with immediate timeout
 107600 reps @   0.0443 msec ( 22600.0/sec): select on 32 pipe read fds with immediate timeout
 107600 reps @   0.0443 msec ( 22600.0/sec): select on 32 pipe read fds with immediate timeout
 538000 trep @   0.0443 msec ( 22600.0/sec): select on 32 pipe read fds with immediate timeout

 194700 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 194700 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 194700 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 194700 reps @   0.0256 msec ( 39100.0/sec): select on 16 pipe write fds with immediate timeout
 194700 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 973500 trep @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout

 195300 reps @   0.0256 msec ( 39000.0/sec): select on 32 pipe write fds with immediate timeout
 195300 reps @   0.0256 msec ( 39000.0/sec): select on 32 pipe write fds with immediate timeout
 195300 reps @   0.0256 msec ( 39000.0/sec): select on 32 pipe write fds with immediate timeout
 195300 reps @   0.0256 msec ( 39000.0/sec): select on 32 pipe write fds with immediate timeout
 195300 reps @   0.0256 msec ( 39000.0/sec): select on 32 pipe write fds with immediate timeout
 976500 trep @   0.0256 msec ( 39000.0/sec): select on 32 pipe write fds with immediate timeout

  27400 reps @   0.1744 msec (  5740.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27400 reps @   0.1744 msec (  5740.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27400 reps @   0.1743 msec (  5740.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27400 reps @   0.1743 msec (  5740.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27400 reps @   0.1743 msec (  5740.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 137000 trep @   0.1743 msec (  5740.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    100 reps @  53.3596 msec (    18.7/sec): popen and read from "/bin/echo hello"
    100 reps @  54.0714 msec (    18.5/sec): popen and read from "/bin/echo hello"
    100 reps @  53.7604 msec (    18.6/sec): popen and read from "/bin/echo hello"
    100 reps @  53.5968 msec (    18.7/sec): popen and read from "/bin/echo hello"
    100 reps @  54.0736 msec (    18.5/sec): popen and read from "/bin/echo hello"
    500 trep @  53.7724 msec (    18.6/sec): popen and read from "/bin/echo hello"

  25050 reps @   0.1997 msec (  5010.0/sec): mmap megabyte /dev/zero region 
  25050 reps @   0.1998 msec (  5000.0/sec): mmap megabyte /dev/zero region 
  25050 reps @   0.1996 msec (  5010.0/sec): mmap megabyte /dev/zero region 
  25050 reps @   0.1996 msec (  5010.0/sec): mmap megabyte /dev/zero region 
  25050 reps @   0.1997 msec (  5010.0/sec): mmap megabyte /dev/zero region 
 125250 trep @   0.1997 msec (  5010.0/sec): mmap megabyte /dev/zero region 

    379 reps @  13.3717 msec (    74.8/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    379 reps @  13.3375 msec (    75.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    379 reps @  13.3530 msec (    74.9/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    379 reps @  13.3322 msec (    75.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    379 reps @  13.3346 msec (    75.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   1895 trep @  13.3458 msec (    74.9/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    248 reps @  19.9374 msec (    50.2/sec): copy every byte of newly mmaped megabyte file
    248 reps @  19.8995 msec (    50.3/sec): copy every byte of newly mmaped megabyte file
    248 reps @  19.9307 msec (    50.2/sec): copy every byte of newly mmaped megabyte file
    248 reps @  19.9533 msec (    50.1/sec): copy every byte of newly mmaped megabyte file
    248 reps @  20.1317 msec (    49.7/sec): copy every byte of newly mmaped megabyte file
   1240 trep @  19.9705 msec (    50.1/sec): copy every byte of newly mmaped megabyte file

     30 reps @ 137.1507 msec (    7.29/sec): compress & uncompress 52 kilobyte text file of numbers
     30 reps @ 138.0343 msec (    7.24/sec): compress & uncompress 52 kilobyte text file of numbers
     30 reps @ 137.4239 msec (    7.28/sec): compress & uncompress 52 kilobyte text file of numbers
     30 reps @ 138.1009 msec (    7.24/sec): compress & uncompress 52 kilobyte text file of numbers
     30 reps @ 137.2287 msec (    7.29/sec): compress & uncompress 52 kilobyte text file of numbers
    150 trep @ 137.5877 msec (    7.27/sec): compress & uncompress 52 kilobyte text file of numbers

      6 reps @ 324.1235 msec (    3.09/sec): compile ANSI C `hello world' with no special options
      6 reps @ 325.3890 msec (    3.07/sec): compile ANSI C `hello world' with no special options
      6 reps @ 322.7455 msec (    3.10/sec): compile ANSI C `hello world' with no special options
      6 reps @ 326.1885 msec (    3.07/sec): compile ANSI C `hello world' with no special options
      6 reps @ 327.6902 msec (    3.05/sec): compile ANSI C `hello world' with no special options
     30 trep @ 325.2273 msec (    3.07/sec): compile ANSI C `hello world' with no special options

     16 reps @ 784.3056 msec (    1.28/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 749.8728 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 758.5756 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 755.5505 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 781.7709 msec (    1.28/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     80 trep @ 766.0151 msec (    1.31/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

      8 reps @ 734.1615 msec (    1.36/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 801.1885 msec (    1.25/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 753.5951 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 759.8551 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 748.5971 msec (    1.34/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     40 trep @ 759.4795 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

      8 reps @ 768.7710 msec (    1.30/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 703.0498 msec (    1.42/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 831.5881 msec (    1.20/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 729.8511 msec (    1.37/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 751.1007 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     40 trep @ 756.8722 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 811.0820 msec (    1.23/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 751.0997 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 754.8704 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 757.3937 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 759.8107 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 766.8513 msec (    1.30/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 785.0838 msec (    1.27/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 767.3711 msec (    1.30/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 748.8614 msec (    1.34/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 751.5507 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 778.9928 msec (    1.28/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 766.3719 msec (    1.30/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 753.0056 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 760.4957 msec (    1.31/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 768.6202 msec (    1.30/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 756.0750 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 753.8340 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 758.4061 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      3 reps @ 1790.7743 msec (    0.56/sec): use dc to output first 1,000 factorials
      3 reps @ 1792.3807 msec (    0.56/sec): use dc to output first 1,000 factorials
      3 reps @ 1793.7200 msec (    0.56/sec): use dc to output first 1,000 factorials
      3 reps @ 1792.8867 msec (    0.56/sec): use dc to output first 1,000 factorials
      3 reps @ 1796.3117 msec (    0.56/sec): use dc to output first 1,000 factorials
     15 trep @ 1793.2147 msec (    0.56/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0057 msec (177000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (177000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (177000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (177000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (177000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0056 msec (177000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  45168 reps @   0.1106 msec (  9040.0/sec): use regcomp to compile 51 char literal, then regfree
  45168 reps @   0.1107 msec (  9030.0/sec): use regcomp to compile 51 char literal, then regfree
  45168 reps @   0.1107 msec (  9030.0/sec): use regcomp to compile 51 char literal, then regfree
  45168 reps @   0.1107 msec (  9040.0/sec): use regcomp to compile 51 char literal, then regfree
  45168 reps @   0.1106 msec (  9040.0/sec): use regcomp to compile 51 char literal, then regfree
 225840 trep @   0.1107 msec (  9040.0/sec): use regcomp to compile 51 char literal, then regfree

      4 reps @ 1386.0665 msec (    0.72/sec): use regexec with 51 char literal to search 142 kilobyte text
      4 reps @ 1385.7255 msec (    0.72/sec): use regexec with 51 char literal to search 142 kilobyte text
      4 reps @ 1387.2697 msec (    0.72/sec): use regexec with 51 char literal to search 142 kilobyte text
      4 reps @ 1386.4060 msec (    0.72/sec): use regexec with 51 char literal to search 142 kilobyte text
      4 reps @ 1386.2867 msec (    0.72/sec): use regexec with 51 char literal to search 142 kilobyte text
     20 trep @ 1386.3509 msec (    0.72/sec): use regexec with 51 char literal to search 142 kilobyte text

  51860 reps @   0.0908 msec ( 11000.0/sec): use regcomp to compile long .* pattern, then regfree
  51860 reps @   0.0908 msec ( 11000.0/sec): use regcomp to compile long .* pattern, then regfree
  51860 reps @   0.0907 msec ( 11000.0/sec): use regcomp to compile long .* pattern, then regfree
  51860 reps @   0.0908 msec ( 11000.0/sec): use regcomp to compile long .* pattern, then regfree
  51860 reps @   0.0908 msec ( 11000.0/sec): use regcomp to compile long .* pattern, then regfree
 259300 trep @   0.0908 msec ( 11000.0/sec): use regcomp to compile long .* pattern, then regfree

      7 reps @ 820.5216 msec (    1.22/sec): use regexec with long .* pattern to search 142 kilobyte text
      7 reps @ 821.6606 msec (    1.22/sec): use regexec with long .* pattern to search 142 kilobyte text
      7 reps @ 820.5580 msec (    1.22/sec): use regexec with long .* pattern to search 142 kilobyte text
      7 reps @ 820.9347 msec (    1.22/sec): use regexec with long .* pattern to search 142 kilobyte text
      7 reps @ 820.2091 msec (    1.22/sec): use regexec with long .* pattern to search 142 kilobyte text
     35 trep @ 820.7768 msec (    1.22/sec): use regexec with long .* pattern to search 142 kilobyte text


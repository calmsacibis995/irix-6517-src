UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: zap
Operating system: IRIX 6.5-ALPHA-1274022532
Compiler version: 7.1
Instruction set: MIPS 3
Application binary interface: N32
CPU: MIPS R5000 Processor Chip Revision: 1.0
FPU: MIPS R5000 Floating Point Coprocessor Revision: 1.0
1 180 MHZ IP22 Processor
Main memory size: 96 Mbytes
Secondary unified instruction/data cache size: 512 Kbytes on Processor 0
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Integral SCSI controller 0: Version WD33C93B, revision D
  Disk drive: unit 1 on SCSI controller 0
  CDROM: unit 4 on SCSI controller 0
  Tape drive: unit 7 on SCSI controller 0: DAT
On-board serial ports: 2
On-board bi-directional parallel port
Graphics board: GR3-XZ
Integral Ethernet: ec0, version 1
Integral ISDN: Basic Rate Interface unit 0, revision 1.0
Iris Audio Processor: version A2 revision 4.1.0
Vino video: unit 0, revision 0, IndyCam connected
Uptime: 16:38
Users: 1
Load average: 0.10, 0.06, 0.00
File IO test directory: /usr/tmp
File IO test filesystem: xfs (1915.95 MB total, 440.96 MB available)
Date: Tue Aug 12 15:40:38 1997

2109096 reps @   0.0023 msec (434000.0/sec): 4 by 4 double matrix multiply
2109096 reps @   0.0023 msec (435000.0/sec): 4 by 4 double matrix multiply
2109096 reps @   0.0023 msec (434000.0/sec): 4 by 4 double matrix multiply
2109096 reps @   0.0023 msec (435000.0/sec): 4 by 4 double matrix multiply
2109096 reps @   0.0023 msec (435000.0/sec): 4 by 4 double matrix multiply
10545480 trep @   0.0023 msec (435000.0/sec): 4 by 4 double matrix multiply

2286384 reps @   0.0022 msec (457000.0/sec): 4 by 4 float matrix multiply
2286384 reps @   0.0022 msec (456000.0/sec): 4 by 4 float matrix multiply
2286384 reps @   0.0022 msec (456000.0/sec): 4 by 4 float matrix multiply
2286384 reps @   0.0022 msec (456000.0/sec): 4 by 4 float matrix multiply
2286384 reps @   0.0022 msec (457000.0/sec): 4 by 4 float matrix multiply
11431920 trep @   0.0022 msec (457000.0/sec): 4 by 4 float matrix multiply

 271500 reps @   0.0184 msec ( 54200.0/sec): recurse 250 simple function calls and return
 271500 reps @   0.0184 msec ( 54300.0/sec): recurse 250 simple function calls and return
 271500 reps @   0.0184 msec ( 54200.0/sec): recurse 250 simple function calls and return
 271500 reps @   0.0184 msec ( 54300.0/sec): recurse 250 simple function calls and return
 271500 reps @   0.0184 msec ( 54300.0/sec): recurse 250 simple function calls and return
1357500 trep @   0.0184 msec ( 54300.0/sec): recurse 250 simple function calls and return

6397200 reps @   0.0008 msec (1280000.0/sec): bcopy of 256 bytes
6397200 reps @   0.0008 msec (1280000.0/sec): bcopy of 256 bytes
6397200 reps @   0.0008 msec (1280000.0/sec): bcopy of 256 bytes
6397200 reps @   0.0008 msec (1280000.0/sec): bcopy of 256 bytes
6397200 reps @   0.0008 msec (1280000.0/sec): bcopy of 256 bytes
31986000 trep @   0.0008 msec (1280000.0/sec): bcopy of 256 bytes

 162400 reps @   0.0309 msec ( 32400.0/sec): bcopy of 16 kilobytes
 162400 reps @   0.0309 msec ( 32400.0/sec): bcopy of 16 kilobytes
 162400 reps @   0.0310 msec ( 32300.0/sec): bcopy of 16 kilobytes
 162400 reps @   0.0309 msec ( 32400.0/sec): bcopy of 16 kilobytes
 162400 reps @   0.0309 msec ( 32300.0/sec): bcopy of 16 kilobytes
 812000 trep @   0.0309 msec ( 32300.0/sec): bcopy of 16 kilobytes

   2224 reps @   2.2449 msec (   445.0/sec): bcopy of 100 kilobytes
   2224 reps @   2.2447 msec (   445.0/sec): bcopy of 100 kilobytes
   2224 reps @   2.2463 msec (   445.0/sec): bcopy of 100 kilobytes
   2224 reps @   2.2470 msec (   445.0/sec): bcopy of 100 kilobytes
   2224 reps @   2.2460 msec (   445.0/sec): bcopy of 100 kilobytes
  11120 trep @   2.2458 msec (   445.0/sec): bcopy of 100 kilobytes

    112 reps @  40.3609 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.3718 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.3677 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.3827 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.6647 msec (    24.6/sec): bcopy of 1 megabyte
    560 trep @  40.4296 msec (    24.7/sec): bcopy of 1 megabyte

     12 reps @ 408.8178 msec (    2.45/sec): bcopy of 10 megabytes
     12 reps @ 408.8138 msec (    2.45/sec): bcopy of 10 megabytes
     12 reps @ 409.0988 msec (    2.44/sec): bcopy of 10 megabytes
     12 reps @ 408.8428 msec (    2.45/sec): bcopy of 10 megabytes
     12 reps @ 408.7883 msec (    2.45/sec): bcopy of 10 megabytes
     60 trep @ 408.8723 msec (    2.45/sec): bcopy of 10 megabytes

     16 reps @ 407.7516 msec (    2.45/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 407.7874 msec (    2.45/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 407.5076 msec (    2.45/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 408.0221 msec (    2.45/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 407.5836 msec (    2.45/sec): bcopy of 10 megabytes (cacheline-aligned)
     80 trep @ 407.7305 msec (    2.45/sec): bcopy of 10 megabytes (cacheline-aligned)

     16 reps @ 410.5337 msec (    2.44/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 410.8250 msec (    2.43/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 411.0469 msec (    2.43/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 410.8941 msec (    2.43/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 422.4159 msec (    2.37/sec): bcopy of 10 megabytes (word mis-aligned)
     80 trep @ 413.1431 msec (    2.42/sec): bcopy of 10 megabytes (word mis-aligned)

     16 reps @ 413.3729 msec (    2.42/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 413.7748 msec (    2.42/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 413.1454 msec (    2.42/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 413.4955 msec (    2.42/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 413.4943 msec (    2.42/sec): bcopy of 10 megabytes (dword mis-aligned)
     80 trep @ 413.4566 msec (    2.42/sec): bcopy of 10 megabytes (dword mis-aligned)

12231600 reps @   0.0004 msec (2460000.0/sec): bzero of 256 bytes
12231600 reps @   0.0004 msec (2460000.0/sec): bzero of 256 bytes
12231600 reps @   0.0004 msec (2460000.0/sec): bzero of 256 bytes
12231600 reps @   0.0004 msec (2460000.0/sec): bzero of 256 bytes
12231600 reps @   0.0004 msec (2460000.0/sec): bzero of 256 bytes
61158000 trep @   0.0004 msec (2460000.0/sec): bzero of 256 bytes

 220880 reps @   0.0227 msec ( 44100.0/sec): bzero of 16 kilobytes
 220880 reps @   0.0227 msec ( 44100.0/sec): bzero of 16 kilobytes
 220880 reps @   0.0227 msec ( 44100.0/sec): bzero of 16 kilobytes
 220880 reps @   0.0227 msec ( 44100.0/sec): bzero of 16 kilobytes
 220880 reps @   0.0227 msec ( 44100.0/sec): bzero of 16 kilobytes
1104400 trep @   0.0227 msec ( 44100.0/sec): bzero of 16 kilobytes

   3548 reps @   1.4086 msec (   710.0/sec): bzero of 100 kilobytes
   3548 reps @   1.4081 msec (   710.0/sec): bzero of 100 kilobytes
   3548 reps @   1.4119 msec (   708.0/sec): bzero of 100 kilobytes
   3548 reps @   1.4110 msec (   709.0/sec): bzero of 100 kilobytes
   3548 reps @   1.4078 msec (   710.0/sec): bzero of 100 kilobytes
  17740 trep @   1.4095 msec (   709.0/sec): bzero of 100 kilobytes

    212 reps @  23.9818 msec (    41.7/sec): bzero of 1 megabyte
    212 reps @  23.9905 msec (    41.7/sec): bzero of 1 megabyte
    212 reps @  23.9808 msec (    41.7/sec): bzero of 1 megabyte
    212 reps @  23.9713 msec (    41.7/sec): bzero of 1 megabyte
    212 reps @  23.9959 msec (    41.7/sec): bzero of 1 megabyte
   1060 trep @  23.9841 msec (    41.7/sec): bzero of 1 megabyte

     24 reps @ 241.8230 msec (    4.14/sec): bzero of 10 megabytes
     24 reps @ 241.9785 msec (    4.13/sec): bzero of 10 megabytes
     24 reps @ 241.9518 msec (    4.13/sec): bzero of 10 megabytes
     24 reps @ 241.6881 msec (    4.14/sec): bzero of 10 megabytes
     24 reps @ 242.0207 msec (    4.13/sec): bzero of 10 megabytes
    120 trep @ 241.8924 msec (    4.13/sec): bzero of 10 megabytes

     24 reps @ 241.9987 msec (    4.13/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 241.9790 msec (    4.13/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 241.8155 msec (    4.14/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 242.0150 msec (    4.13/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 241.8962 msec (    4.13/sec): bzero of 10 megabytes (cacheline-aligned)
    120 trep @ 241.9409 msec (    4.13/sec): bzero of 10 megabytes (cacheline-aligned)

     24 reps @ 241.9236 msec (    4.13/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 241.8044 msec (    4.14/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 241.7965 msec (    4.14/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 241.8220 msec (    4.14/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 241.9818 msec (    4.13/sec): bzero of 10 megabytes (word mis-aligned)
    120 trep @ 241.8656 msec (    4.13/sec): bzero of 10 megabytes (word mis-aligned)

     24 reps @ 241.8337 msec (    4.14/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 241.6759 msec (    4.14/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 241.7959 msec (    4.14/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 242.0358 msec (    4.13/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 241.8220 msec (    4.14/sec): bzero of 10 megabytes (dword mis-aligned)
    120 trep @ 241.8327 msec (    4.14/sec): bzero of 10 megabytes (dword mis-aligned)

   7494 reps @   0.6680 msec (  1500.0/sec): bcopy then qsort 400 32-bit integers
   7494 reps @   0.6672 msec (  1500.0/sec): bcopy then qsort 400 32-bit integers
   7494 reps @   0.6676 msec (  1500.0/sec): bcopy then qsort 400 32-bit integers
   7494 reps @   0.6672 msec (  1500.0/sec): bcopy then qsort 400 32-bit integers
   7494 reps @   0.6691 msec (  1490.0/sec): bcopy then qsort 400 32-bit integers
  37470 trep @   0.6678 msec (  1500.0/sec): bcopy then qsort 400 32-bit integers

    107 reps @  45.0147 msec (    22.2/sec): bcopy then qsort 16,000 32-bit integers
    107 reps @  45.0062 msec (    22.2/sec): bcopy then qsort 16,000 32-bit integers
    107 reps @  45.0053 msec (    22.2/sec): bcopy then qsort 16,000 32-bit integers
    107 reps @  44.9963 msec (    22.2/sec): bcopy then qsort 16,000 32-bit integers
    107 reps @  44.9975 msec (    22.2/sec): bcopy then qsort 16,000 32-bit integers
    535 trep @  45.0040 msec (    22.2/sec): bcopy then qsort 16,000 32-bit integers

     23 reps @ 215.1690 msec (    4.65/sec): bcopy then qsort 64,000 32-bit integers
     23 reps @ 215.1153 msec (    4.65/sec): bcopy then qsort 64,000 32-bit integers
     23 reps @ 215.1247 msec (    4.65/sec): bcopy then qsort 64,000 32-bit integers
     23 reps @ 214.9198 msec (    4.65/sec): bcopy then qsort 64,000 32-bit integers
     23 reps @ 214.9793 msec (    4.65/sec): bcopy then qsort 64,000 32-bit integers
    115 trep @ 215.0616 msec (    4.65/sec): bcopy then qsort 64,000 32-bit integers

11252500 reps @   0.0004 msec (2250000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
11252500 reps @   0.0004 msec (2250000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
11252500 reps @   0.0004 msec (2250000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
11252500 reps @   0.0004 msec (2250000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
11252500 reps @   0.0004 msec (2250000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
56262500 trep @   0.0004 msec (2250000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

9242500 reps @   0.0005 msec (1850000.0/sec): basic double trigonometric function (sin/cos/tan)
9242500 reps @   0.0005 msec (1850000.0/sec): basic double trigonometric function (sin/cos/tan)
9242500 reps @   0.0005 msec (1850000.0/sec): basic double trigonometric function (sin/cos/tan)
9242500 reps @   0.0005 msec (1850000.0/sec): basic double trigonometric function (sin/cos/tan)
9242500 reps @   0.0005 msec (1850000.0/sec): basic double trigonometric function (sin/cos/tan)
46212500 trep @   0.0005 msec (1850000.0/sec): basic double trigonometric function (sin/cos/tan)

1481000 reps @   0.0034 msec (296000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1481000 reps @   0.0034 msec (296000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1481000 reps @   0.0034 msec (296000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1481000 reps @   0.0034 msec (295000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1481000 reps @   0.0034 msec (295000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
7405000 trep @   0.0034 msec (296000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  18600 reps @   0.2731 msec (  3660.0/sec): Tower of Hanoi recursion test (10 deep)
  18600 reps @   0.2731 msec (  3660.0/sec): Tower of Hanoi recursion test (10 deep)
  18600 reps @   0.2732 msec (  3660.0/sec): Tower of Hanoi recursion test (10 deep)
  18600 reps @   0.2728 msec (  3670.0/sec): Tower of Hanoi recursion test (10 deep)
  18600 reps @   0.2731 msec (  3660.0/sec): Tower of Hanoi recursion test (10 deep)
  93000 trep @   0.2731 msec (  3660.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @   8.7344 msec (   114.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7357 msec (   114.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7416 msec (   114.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7316 msec (   115.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   8.7410 msec (   114.0/sec): Tower of Hanoi recursion test (15 deep)
   3000 trep @   8.7369 msec (   114.0/sec): Tower of Hanoi recursion test (15 deep)

 295500 reps @   0.0169 msec ( 59300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 295500 reps @   0.0169 msec ( 59200.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 295500 reps @   0.0169 msec ( 59300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 295500 reps @   0.0169 msec ( 59200.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 295500 reps @   0.0169 msec ( 59200.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
1477500 trep @   0.0169 msec ( 59200.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

  76400 reps @   0.0668 msec ( 15000.0/sec): write 80 bytes to a log file
  76400 reps @   0.0714 msec ( 14000.0/sec): write 80 bytes to a log file
  76400 reps @   0.0741 msec ( 13500.0/sec): write 80 bytes to a log file
  76400 reps @   0.0778 msec ( 12900.0/sec): write 80 bytes to a log file
  76400 reps @   0.0816 msec ( 12200.0/sec): write 80 bytes to a log file
 382000 trep @   0.0743 msec ( 13500.0/sec): write 80 bytes to a log file

    600 reps @   6.6310 msec (   151.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   6.5194 msec (   153.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   6.5564 msec (   153.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   6.6979 msec (   149.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   6.8161 msec (   147.0/sec): per-file cost of creating 100 files then unlinking them all
   3000 trep @   6.6441 msec (   151.0/sec): per-file cost of creating 100 files then unlinking them all

  38200 reps @   0.1306 msec (  7660.0/sec): per-file cost of open and immediate close of 100 files
  38200 reps @   0.1306 msec (  7660.0/sec): per-file cost of open and immediate close of 100 files
  38200 reps @   0.1308 msec (  7650.0/sec): per-file cost of open and immediate close of 100 files
  38200 reps @   0.1305 msec (  7660.0/sec): per-file cost of open and immediate close of 100 files
  38200 reps @   0.1307 msec (  7650.0/sec): per-file cost of open and immediate close of 100 files
 191000 trep @   0.1306 msec (  7650.0/sec): per-file cost of open and immediate close of 100 files

  39600 reps @   0.1389 msec (  7200.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39600 reps @   0.1255 msec (  7970.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39600 reps @   0.1243 msec (  8040.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39600 reps @   0.1246 msec (  8030.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39600 reps @   0.1243 msec (  8040.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 198000 trep @   0.1275 msec (  7840.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 240000 reps @   0.0208 msec ( 48200.0/sec): cost of stat'ing current dir
 240000 reps @   0.0207 msec ( 48200.0/sec): cost of stat'ing current dir
 240000 reps @   0.0208 msec ( 48200.0/sec): cost of stat'ing current dir
 240000 reps @   0.0207 msec ( 48200.0/sec): cost of stat'ing current dir
 240000 reps @   0.0213 msec ( 46900.0/sec): cost of stat'ing current dir
1200000 trep @   0.0209 msec ( 47900.0/sec): cost of stat'ing current dir

  56000 reps @   0.0890 msec ( 11200.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0892 msec ( 11200.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0891 msec ( 11200.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0892 msec ( 11200.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0890 msec ( 11200.0/sec): cost of stat'ing 5 component path
 280000 trep @   0.0891 msec ( 11200.0/sec): cost of stat'ing 5 component path

   1291 reps @   3.8936 msec (   257.0/sec): open directory and stat 100 files in it
   1291 reps @   3.8278 msec (   261.0/sec): open directory and stat 100 files in it
   1291 reps @   3.8280 msec (   261.0/sec): open directory and stat 100 files in it
   1291 reps @   3.8100 msec (   262.0/sec): open directory and stat 100 files in it
   1291 reps @   3.8063 msec (   263.0/sec): open directory and stat 100 files in it
   6455 trep @   3.8331 msec (   261.0/sec): open directory and stat 100 files in it

    800 reps @   6.1682 msec (   162.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   5.8388 msec (   171.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   5.8742 msec (   170.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   6.2514 msec (   160.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   5.9419 msec (   168.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   4000 trep @   6.0149 msec (   166.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 190800 reps @   0.0263 msec ( 38100.0/sec): ndbm lookup into database with 900 entries
 190800 reps @   0.0263 msec ( 38000.0/sec): ndbm lookup into database with 900 entries
 190800 reps @   0.0264 msec ( 37900.0/sec): ndbm lookup into database with 900 entries
 190800 reps @   0.0253 msec ( 39500.0/sec): ndbm lookup into database with 900 entries
 190800 reps @   0.0254 msec ( 39400.0/sec): ndbm lookup into database with 900 entries
 954000 trep @   0.0259 msec ( 38600.0/sec): ndbm lookup into database with 900 entries

  38400 reps @   0.1309 msec (  7640.0/sec): 1 byte token passing between two processes using two pipes
  38400 reps @   0.1307 msec (  7650.0/sec): 1 byte token passing between two processes using two pipes
  38400 reps @   0.1312 msec (  7620.0/sec): 1 byte token passing between two processes using two pipes
  38400 reps @   0.1309 msec (  7640.0/sec): 1 byte token passing between two processes using two pipes
  38400 reps @   0.1308 msec (  7650.0/sec): 1 byte token passing between two processes using two pipes
 192000 trep @   0.1309 msec (  7640.0/sec): 1 byte token passing between two processes using two pipes

  31600 reps @   0.1575 msec (  6350.0/sec): 1 kilobyte token passing between two processes using two pipes
  31600 reps @   0.1571 msec (  6370.0/sec): 1 kilobyte token passing between two processes using two pipes
  31600 reps @   0.1560 msec (  6410.0/sec): 1 kilobyte token passing between two processes using two pipes
  31600 reps @   0.1569 msec (  6370.0/sec): 1 kilobyte token passing between two processes using two pipes
  31600 reps @   0.1570 msec (  6370.0/sec): 1 kilobyte token passing between two processes using two pipes
 158000 trep @   0.1569 msec (  6370.0/sec): 1 kilobyte token passing between two processes using two pipes

12480000 reps @   0.0004 msec (2490000.0/sec): setjmp/longjmp
12480000 reps @   0.0004 msec (2490000.0/sec): setjmp/longjmp
12480000 reps @   0.0004 msec (2490000.0/sec): setjmp/longjmp
12480000 reps @   0.0004 msec (2490000.0/sec): setjmp/longjmp
12480000 reps @   0.0004 msec (2490000.0/sec): setjmp/longjmp
62400000 trep @   0.0004 msec (2490000.0/sec): setjmp/longjmp

 144000 reps @   0.0357 msec ( 28000.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 144000 reps @   0.0357 msec ( 28000.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 144000 reps @   0.0357 msec ( 28000.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 144000 reps @   0.0357 msec ( 28000.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 144000 reps @   0.0356 msec ( 28100.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 720000 trep @   0.0357 msec ( 28000.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   1280 reps @   3.8745 msec (   258.0/sec): create/destroy client UDP-based SunRPC handle
   1280 reps @   3.8722 msec (   258.0/sec): create/destroy client UDP-based SunRPC handle
   1280 reps @   3.8686 msec (   258.0/sec): create/destroy client UDP-based SunRPC handle
   1280 reps @   3.8755 msec (   258.0/sec): create/destroy client UDP-based SunRPC handle
   1280 reps @   3.8674 msec (   259.0/sec): create/destroy client UDP-based SunRPC handle
   6400 trep @   3.8716 msec (   258.0/sec): create/destroy client UDP-based SunRPC handle

   5200 reps @   0.9569 msec (  1050.0/sec): TCP-based SunRPC to negate an integer
   5200 reps @   0.9523 msec (  1050.0/sec): TCP-based SunRPC to negate an integer
   5200 reps @   0.9567 msec (  1050.0/sec): TCP-based SunRPC to negate an integer
   5200 reps @   0.9546 msec (  1050.0/sec): TCP-based SunRPC to negate an integer
   5200 reps @   0.9557 msec (  1050.0/sec): TCP-based SunRPC to negate an integer
  26000 trep @   0.9553 msec (  1050.0/sec): TCP-based SunRPC to negate an integer

   5600 reps @   0.8907 msec (  1120.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.8926 msec (  1120.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.8893 msec (  1120.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.8894 msec (  1120.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.8882 msec (  1130.0/sec): UDP-based SunRPC to negate an integer
  28000 trep @   0.8900 msec (  1120.0/sec): UDP-based SunRPC to negate an integer

   5600 reps @   0.9411 msec (  1060.0/sec): TCP-based SunRPC no-op
   5600 reps @   0.9411 msec (  1060.0/sec): TCP-based SunRPC no-op
   5600 reps @   0.9438 msec (  1060.0/sec): TCP-based SunRPC no-op
   5600 reps @   0.9417 msec (  1060.0/sec): TCP-based SunRPC no-op
   5600 reps @   0.9439 msec (  1060.0/sec): TCP-based SunRPC no-op
  28000 trep @   0.9423 msec (  1060.0/sec): TCP-based SunRPC no-op

   6000 reps @   0.8728 msec (  1150.0/sec): UDP-based SunRPC no-op
   6000 reps @   0.8730 msec (  1150.0/sec): UDP-based SunRPC no-op
   6000 reps @   0.8746 msec (  1140.0/sec): UDP-based SunRPC no-op
   6000 reps @   0.8723 msec (  1150.0/sec): UDP-based SunRPC no-op
   6000 reps @   0.8708 msec (  1150.0/sec): UDP-based SunRPC no-op
  30000 trep @   0.8727 msec (  1150.0/sec): UDP-based SunRPC no-op

1563500 reps @   0.0032 msec (311000.0/sec): getpid system call
1563500 reps @   0.0032 msec (312000.0/sec): getpid system call
1563500 reps @   0.0032 msec (312000.0/sec): getpid system call
1563500 reps @   0.0032 msec (312000.0/sec): getpid system call
1563500 reps @   0.0032 msec (312000.0/sec): getpid system call
7817500 trep @   0.0032 msec (312000.0/sec): getpid system call

 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0248 msec ( 40400.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1010000 trep @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 910000 reps @   0.0055 msec (182000.0/sec): gettimeofday system call
 910000 reps @   0.0055 msec (182000.0/sec): gettimeofday system call
 910000 reps @   0.0055 msec (182000.0/sec): gettimeofday system call
 910000 reps @   0.0055 msec (182000.0/sec): gettimeofday system call
 910000 reps @   0.0055 msec (182000.0/sec): gettimeofday system call
4550000 trep @   0.0055 msec (182000.0/sec): gettimeofday system call

    200 reps @  25.2099 msec (    39.7/sec): fork, child immediately exits, parent waits
    200 reps @  24.2885 msec (    41.2/sec): fork, child immediately exits, parent waits
    200 reps @  23.1061 msec (    43.3/sec): fork, child immediately exits, parent waits
    200 reps @  23.7084 msec (    42.2/sec): fork, child immediately exits, parent waits
    200 reps @  23.9372 msec (    41.8/sec): fork, child immediately exits, parent waits
   1000 trep @  24.0500 msec (    41.6/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.9806 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9516 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9294 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9532 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9392 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.9508 msec (    0.99/sec): sleep for one second (validates test time)

 657700 reps @   0.0076 msec (132000.0/sec): select on no fds with no timeout
 657700 reps @   0.0076 msec (132000.0/sec): select on no fds with no timeout
 657700 reps @   0.0076 msec (132000.0/sec): select on no fds with no timeout
 657700 reps @   0.0076 msec (132000.0/sec): select on no fds with no timeout
 657700 reps @   0.0076 msec (132000.0/sec): select on no fds with no timeout
3288500 trep @   0.0076 msec (132000.0/sec): select on no fds with no timeout

 125100 reps @   0.0400 msec ( 25000.0/sec): select on 16 pipe read fds with immediate timeout
 125100 reps @   0.0401 msec ( 25000.0/sec): select on 16 pipe read fds with immediate timeout
 125100 reps @   0.0400 msec ( 25000.0/sec): select on 16 pipe read fds with immediate timeout
 125100 reps @   0.0401 msec ( 25000.0/sec): select on 16 pipe read fds with immediate timeout
 125100 reps @   0.0400 msec ( 25000.0/sec): select on 16 pipe read fds with immediate timeout
 625500 trep @   0.0400 msec ( 25000.0/sec): select on 16 pipe read fds with immediate timeout

  64400 reps @   0.0780 msec ( 12800.0/sec): select on 32 pipe read fds with immediate timeout
  64400 reps @   0.0779 msec ( 12800.0/sec): select on 32 pipe read fds with immediate timeout
  64400 reps @   0.0780 msec ( 12800.0/sec): select on 32 pipe read fds with immediate timeout
  64400 reps @   0.0779 msec ( 12800.0/sec): select on 32 pipe read fds with immediate timeout
  64400 reps @   0.0780 msec ( 12800.0/sec): select on 32 pipe read fds with immediate timeout
 322000 trep @   0.0780 msec ( 12800.0/sec): select on 32 pipe read fds with immediate timeout

 120300 reps @   0.0415 msec ( 24100.0/sec): select on 16 pipe write fds with immediate timeout
 120300 reps @   0.0415 msec ( 24100.0/sec): select on 16 pipe write fds with immediate timeout
 120300 reps @   0.0415 msec ( 24100.0/sec): select on 16 pipe write fds with immediate timeout
 120300 reps @   0.0415 msec ( 24100.0/sec): select on 16 pipe write fds with immediate timeout
 120300 reps @   0.0415 msec ( 24100.0/sec): select on 16 pipe write fds with immediate timeout
 601500 trep @   0.0415 msec ( 24100.0/sec): select on 16 pipe write fds with immediate timeout

 122900 reps @   0.0397 msec ( 25200.0/sec): select on 32 pipe write fds with immediate timeout
 122900 reps @   0.0397 msec ( 25200.0/sec): select on 32 pipe write fds with immediate timeout
 122900 reps @   0.0397 msec ( 25200.0/sec): select on 32 pipe write fds with immediate timeout
 122900 reps @   0.0397 msec ( 25200.0/sec): select on 32 pipe write fds with immediate timeout
 122900 reps @   0.0397 msec ( 25200.0/sec): select on 32 pipe write fds with immediate timeout
 614500 trep @   0.0397 msec ( 25200.0/sec): select on 32 pipe write fds with immediate timeout

  11800 reps @   0.4298 msec (  2330.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11800 reps @   0.4296 msec (  2330.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11800 reps @   0.4299 msec (  2330.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11800 reps @   0.4295 msec (  2330.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11800 reps @   0.4297 msec (  2330.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  59000 trep @   0.4297 msec (  2330.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    100 reps @  54.8505 msec (    18.2/sec): popen and read from "/bin/echo hello"
    100 reps @  54.6188 msec (    18.3/sec): popen and read from "/bin/echo hello"
    100 reps @  54.6305 msec (    18.3/sec): popen and read from "/bin/echo hello"
    100 reps @  54.7279 msec (    18.3/sec): popen and read from "/bin/echo hello"
    100 reps @  54.5959 msec (    18.3/sec): popen and read from "/bin/echo hello"
    500 trep @  54.6847 msec (    18.3/sec): popen and read from "/bin/echo hello"

  17400 reps @   0.2836 msec (  3530.0/sec): mmap megabyte /dev/zero region 
  17400 reps @   0.2830 msec (  3530.0/sec): mmap megabyte /dev/zero region 
  17400 reps @   0.2837 msec (  3520.0/sec): mmap megabyte /dev/zero region 
  17400 reps @   0.2835 msec (  3530.0/sec): mmap megabyte /dev/zero region 
  17400 reps @   0.2839 msec (  3520.0/sec): mmap megabyte /dev/zero region 
  87000 trep @   0.2835 msec (  3530.0/sec): mmap megabyte /dev/zero region 

    131 reps @  38.4055 msec (    26.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    131 reps @  38.4152 msec (    26.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    131 reps @  38.4346 msec (    26.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    131 reps @  38.3577 msec (    26.1/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    131 reps @  38.4287 msec (    26.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    655 trep @  38.4084 msec (    26.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    171 reps @  29.3135 msec (    34.1/sec): copy every byte of newly mmaped megabyte file
    171 reps @  29.3283 msec (    34.1/sec): copy every byte of newly mmaped megabyte file
    171 reps @  29.8025 msec (    33.6/sec): copy every byte of newly mmaped megabyte file
    171 reps @  29.7215 msec (    33.6/sec): copy every byte of newly mmaped megabyte file
    171 reps @  29.7849 msec (    33.6/sec): copy every byte of newly mmaped megabyte file
    855 trep @  29.5901 msec (    33.8/sec): copy every byte of newly mmaped megabyte file

     25 reps @ 192.0252 msec (    5.21/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 192.6750 msec (    5.19/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 193.2887 msec (    5.17/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 192.8132 msec (    5.19/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 193.1780 msec (    5.18/sec): compress & uncompress 52 kilobyte text file of numbers
    125 trep @ 192.7960 msec (    5.19/sec): compress & uncompress 52 kilobyte text file of numbers

      7 reps @ 600.6219 msec (    1.66/sec): compile ANSI C `hello world' with no special options
      7 reps @ 594.0563 msec (    1.68/sec): compile ANSI C `hello world' with no special options
      7 reps @ 602.6367 msec (    1.66/sec): compile ANSI C `hello world' with no special options
      7 reps @ 602.1574 msec (    1.66/sec): compile ANSI C `hello world' with no special options
      7 reps @ 589.4214 msec (    1.70/sec): compile ANSI C `hello world' with no special options
     35 trep @ 597.7787 msec (    1.67/sec): compile ANSI C `hello world' with no special options

    148 reps @ 544.3401 msec (    1.84/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    148 reps @ 543.4622 msec (    1.84/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    148 reps @ 541.9220 msec (    1.85/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    148 reps @ 547.4933 msec (    1.83/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    148 reps @ 543.0991 msec (    1.84/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    740 trep @ 544.0634 msec (    1.84/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     10 reps @ 513.3488 msec (    1.95/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 638.2707 msec (    1.57/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 464.5574 msec (    2.15/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 605.3735 msec (    1.65/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 594.9340 msec (    1.68/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     50 trep @ 563.2969 msec (    1.78/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     16 reps @ 558.7922 msec (    1.79/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 557.9167 msec (    1.79/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 552.0319 msec (    1.81/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 551.0313 msec (    1.81/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 562.8697 msec (    1.78/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     80 trep @ 556.5284 msec (    1.80/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 545.0235 msec (    1.83/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 522.4185 msec (    1.91/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 579.5477 msec (    1.73/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 542.3364 msec (    1.84/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 552.9674 msec (    1.81/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 548.4587 msec (    1.82/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel


UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: dropin
Operating system: IRIX64 6.2
Compiler version: 6.21
Instruction set: MIPS 3
Application binary interface: 64-bit
Iris Audio Processor: version A2 revision 1.1.0
1 195 MHZ IP28 Processor
CPU: MIPS R10000 Processor Chip Revision: 2.4
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
On-board serial ports: 2
On-board bi-directional parallel port
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 1 Mbyte
Main memory size: 64 Mbytes
EISA bus: adapter 0
Integral Ethernet: ec0, version 1
Integral SCSI controller 1: Version WD33C93B, revision D
Integral SCSI controller 0: Version WD33C93B, revision D
  Disk drive: unit 1 on SCSI controller 0
Graphics board: High Impact
Uptime: 21 days,  7:45
Users: 1
Load average: 1.08, 1.97, 1.76
File IO test directory: /usr/tmp
File IO test filesystem: xfs (2017.18 MB total, 173.02 MB available)
Date: Tue Mar 18 05:20:35 1997

7984980 reps @   0.0006 msec (1590000.0/sec): 4 by 4 double matrix multiply
7984980 reps @   0.0006 msec (1590000.0/sec): 4 by 4 double matrix multiply
7984980 reps @   0.0006 msec (1590000.0/sec): 4 by 4 double matrix multiply
7984980 reps @   0.0006 msec (1590000.0/sec): 4 by 4 double matrix multiply
7984980 reps @   0.0006 msec (1590000.0/sec): 4 by 4 double matrix multiply
39924900 trep @   0.0006 msec (1590000.0/sec): 4 by 4 double matrix multiply

7807932 reps @   0.0006 msec (1550000.0/sec): 4 by 4 float matrix multiply
7807932 reps @   0.0006 msec (1560000.0/sec): 4 by 4 float matrix multiply
7807932 reps @   0.0006 msec (1560000.0/sec): 4 by 4 float matrix multiply
7807932 reps @   0.0006 msec (1560000.0/sec): 4 by 4 float matrix multiply
7807932 reps @   0.0006 msec (1560000.0/sec): 4 by 4 float matrix multiply
39039660 trep @   0.0006 msec (1560000.0/sec): 4 by 4 float matrix multiply

 215500 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 215500 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 215500 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 215500 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 215500 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
1077500 trep @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return

9418800 reps @   0.0005 msec (1920000.0/sec): bcopy of 256 bytes
9418800 reps @   0.0005 msec (1920000.0/sec): bcopy of 256 bytes
9418800 reps @   0.0005 msec (1920000.0/sec): bcopy of 256 bytes
9418800 reps @   0.0005 msec (1920000.0/sec): bcopy of 256 bytes
9418800 reps @   0.0005 msec (1920000.0/sec): bcopy of 256 bytes
47094000 trep @   0.0005 msec (1920000.0/sec): bcopy of 256 bytes

 189400 reps @   0.0259 msec ( 38600.0/sec): bcopy of 16 kilobytes
 189400 reps @   0.0259 msec ( 38700.0/sec): bcopy of 16 kilobytes
 189400 reps @   0.0259 msec ( 38600.0/sec): bcopy of 16 kilobytes
 189400 reps @   0.0259 msec ( 38700.0/sec): bcopy of 16 kilobytes
 189400 reps @   0.0259 msec ( 38600.0/sec): bcopy of 16 kilobytes
 947000 trep @   0.0259 msec ( 38600.0/sec): bcopy of 16 kilobytes

  16908 reps @   0.2919 msec (  3430.0/sec): bcopy of 100 kilobytes
  16908 reps @   0.2908 msec (  3440.0/sec): bcopy of 100 kilobytes
  16908 reps @   0.2906 msec (  3440.0/sec): bcopy of 100 kilobytes
  16908 reps @   0.2907 msec (  3440.0/sec): bcopy of 100 kilobytes
  16908 reps @   0.2907 msec (  3440.0/sec): bcopy of 100 kilobytes
  84540 trep @   0.2909 msec (  3440.0/sec): bcopy of 100 kilobytes

    220 reps @  21.2367 msec (    47.1/sec): bcopy of 1 megabyte
    220 reps @  21.2183 msec (    47.1/sec): bcopy of 1 megabyte
    220 reps @  21.1956 msec (    47.2/sec): bcopy of 1 megabyte
    220 reps @  21.2041 msec (    47.2/sec): bcopy of 1 megabyte
    220 reps @  21.1788 msec (    47.2/sec): bcopy of 1 megabyte
   1100 trep @  21.2067 msec (    47.2/sec): bcopy of 1 megabyte

     24 reps @ 212.7609 msec (    4.70/sec): bcopy of 10 megabytes
     24 reps @ 212.7850 msec (    4.70/sec): bcopy of 10 megabytes
     24 reps @ 212.1664 msec (    4.71/sec): bcopy of 10 megabytes
     24 reps @ 212.0043 msec (    4.72/sec): bcopy of 10 megabytes
     24 reps @ 211.9638 msec (    4.72/sec): bcopy of 10 megabytes
    120 trep @ 212.3361 msec (    4.71/sec): bcopy of 10 megabytes

     24 reps @ 215.2608 msec (    4.65/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.8141 msec (    4.63/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.3202 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.5856 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.3539 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)
    120 trep @ 215.4669 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)

     24 reps @ 212.1517 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 212.1271 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 212.0750 msec (    4.72/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 212.1300 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 211.9995 msec (    4.72/sec): bcopy of 10 megabytes (word mis-aligned)
    120 trep @ 212.0967 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)

     24 reps @ 212.2709 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.5945 msec (    4.70/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.3253 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.2529 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.4532 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
    120 trep @ 212.3793 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)

19760800 reps @   0.0003 msec (3950000.0/sec): bzero of 256 bytes
19760800 reps @   0.0003 msec (3950000.0/sec): bzero of 256 bytes
19760800 reps @   0.0003 msec (3950000.0/sec): bzero of 256 bytes
19760800 reps @   0.0003 msec (3950000.0/sec): bzero of 256 bytes
19760800 reps @   0.0003 msec (3950000.0/sec): bzero of 256 bytes
98804000 trep @   0.0003 msec (3950000.0/sec): bzero of 256 bytes

 461040 reps @   0.0108 msec ( 92300.0/sec): bzero of 16 kilobytes
 461040 reps @   0.0108 msec ( 92300.0/sec): bzero of 16 kilobytes
 461040 reps @   0.0108 msec ( 92200.0/sec): bzero of 16 kilobytes
 461040 reps @   0.0108 msec ( 92300.0/sec): bzero of 16 kilobytes
 461040 reps @   0.0108 msec ( 92300.0/sec): bzero of 16 kilobytes
2305200 trep @   0.0108 msec ( 92300.0/sec): bzero of 16 kilobytes

  25524 reps @   0.1927 msec (  5190.0/sec): bzero of 100 kilobytes
  25524 reps @   0.1928 msec (  5190.0/sec): bzero of 100 kilobytes
  25524 reps @   0.1929 msec (  5180.0/sec): bzero of 100 kilobytes
  25524 reps @   0.1927 msec (  5190.0/sec): bzero of 100 kilobytes
  25524 reps @   0.1927 msec (  5190.0/sec): bzero of 100 kilobytes
 127620 trep @   0.1928 msec (  5190.0/sec): bzero of 100 kilobytes

    396 reps @  13.1371 msec (    76.1/sec): bzero of 1 megabyte
    396 reps @  13.1450 msec (    76.1/sec): bzero of 1 megabyte
    396 reps @  13.1591 msec (    76.0/sec): bzero of 1 megabyte
    396 reps @  13.1308 msec (    76.2/sec): bzero of 1 megabyte
    396 reps @  13.1304 msec (    76.2/sec): bzero of 1 megabyte
   1980 trep @  13.1405 msec (    76.1/sec): bzero of 1 megabyte

     40 reps @ 131.2857 msec (    7.62/sec): bzero of 10 megabytes
     40 reps @ 131.5605 msec (    7.60/sec): bzero of 10 megabytes
     40 reps @ 131.6644 msec (    7.60/sec): bzero of 10 megabytes
     40 reps @ 131.7037 msec (    7.59/sec): bzero of 10 megabytes
     40 reps @ 131.3533 msec (    7.61/sec): bzero of 10 megabytes
    200 trep @ 131.5135 msec (    7.60/sec): bzero of 10 megabytes

     40 reps @ 131.3362 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.3259 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.3929 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.3530 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.2846 msec (    7.62/sec): bzero of 10 megabytes (cacheline-aligned)
    200 trep @ 131.3385 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)

     40 reps @ 131.2807 msec (    7.62/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.2364 msec (    7.62/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.3161 msec (    7.62/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.5312 msec (    7.60/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.2927 msec (    7.62/sec): bzero of 10 megabytes (word mis-aligned)
    200 trep @ 131.3314 msec (    7.61/sec): bzero of 10 megabytes (word mis-aligned)

     40 reps @ 131.2733 msec (    7.62/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.2833 msec (    7.62/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.3412 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.3769 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.3359 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)
    200 trep @ 131.3221 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)

  10173 reps @   0.4816 msec (  2080.0/sec): bcopy then qsort 400 32-bit integers
  10173 reps @   0.4816 msec (  2080.0/sec): bcopy then qsort 400 32-bit integers
  10173 reps @   0.4816 msec (  2080.0/sec): bcopy then qsort 400 32-bit integers
  10173 reps @   0.4819 msec (  2080.0/sec): bcopy then qsort 400 32-bit integers
  10173 reps @   0.4815 msec (  2080.0/sec): bcopy then qsort 400 32-bit integers
  50865 trep @   0.4816 msec (  2080.0/sec): bcopy then qsort 400 32-bit integers

    165 reps @  30.0479 msec (    33.3/sec): bcopy then qsort 16,000 32-bit integers
    165 reps @  30.0167 msec (    33.3/sec): bcopy then qsort 16,000 32-bit integers
    165 reps @  30.0122 msec (    33.3/sec): bcopy then qsort 16,000 32-bit integers
    165 reps @  30.0075 msec (    33.3/sec): bcopy then qsort 16,000 32-bit integers
    165 reps @  30.0614 msec (    33.3/sec): bcopy then qsort 16,000 32-bit integers
    825 trep @  30.0291 msec (    33.3/sec): bcopy then qsort 16,000 32-bit integers

     35 reps @ 139.8439 msec (    7.15/sec): bcopy then qsort 64,000 32-bit integers
     35 reps @ 139.9431 msec (    7.15/sec): bcopy then qsort 64,000 32-bit integers
     35 reps @ 139.8711 msec (    7.15/sec): bcopy then qsort 64,000 32-bit integers
     35 reps @ 139.8422 msec (    7.15/sec): bcopy then qsort 64,000 32-bit integers
     35 reps @ 139.8252 msec (    7.15/sec): bcopy then qsort 64,000 32-bit integers
    175 trep @ 139.8651 msec (    7.15/sec): bcopy then qsort 64,000 32-bit integers

22355000 reps @   0.0002 msec (4620000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22355000 reps @   0.0002 msec (4620000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22355000 reps @   0.0002 msec (4610000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22355000 reps @   0.0002 msec (4610000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22355000 reps @   0.0002 msec (4620000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
111775000 trep @   0.0002 msec (4610000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

20777500 reps @   0.0002 msec (4160000.0/sec): basic double trigonometric function (sin/cos/tan)
20777500 reps @   0.0002 msec (4160000.0/sec): basic double trigonometric function (sin/cos/tan)
20777500 reps @   0.0002 msec (4170000.0/sec): basic double trigonometric function (sin/cos/tan)
20777500 reps @   0.0002 msec (4160000.0/sec): basic double trigonometric function (sin/cos/tan)
20777500 reps @   0.0002 msec (4170000.0/sec): basic double trigonometric function (sin/cos/tan)
103887500 trep @   0.0002 msec (4160000.0/sec): basic double trigonometric function (sin/cos/tan)

1796500 reps @   0.0028 msec (361000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1796500 reps @   0.0028 msec (361000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1796500 reps @   0.0028 msec (363000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1796500 reps @   0.0028 msec (363000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1796500 reps @   0.0028 msec (363000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
8982500 trep @   0.0028 msec (362000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  24600 reps @   0.2005 msec (  4990.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2007 msec (  4980.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2005 msec (  4990.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2005 msec (  4990.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2005 msec (  4990.0/sec): Tower of Hanoi recursion test (10 deep)
 123000 trep @   0.2005 msec (  4990.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   6.3801 msec (   157.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.3837 msec (   157.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.3794 msec (   157.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.3798 msec (   157.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.3832 msec (   157.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   6.3812 msec (   157.0/sec): Tower of Hanoi recursion test (15 deep)

 556000 reps @   0.0089 msec (113000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 556000 reps @   0.0089 msec (113000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 556000 reps @   0.0089 msec (113000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 556000 reps @   0.0089 msec (113000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 556000 reps @   0.0089 msec (113000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
2780000 trep @   0.0089 msec (113000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 148200 reps @   0.0449 msec ( 22300.0/sec): write 80 bytes to a log file
 148200 reps @   0.0488 msec ( 20500.0/sec): write 80 bytes to a log file
 148200 reps @   0.0479 msec ( 20900.0/sec): write 80 bytes to a log file
 148200 reps @   0.0408 msec ( 24500.0/sec): write 80 bytes to a log file
 148200 reps @   0.0491 msec ( 20400.0/sec): write 80 bytes to a log file
 741000 trep @   0.0463 msec ( 21600.0/sec): write 80 bytes to a log file

    700 reps @   4.5736 msec (   219.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   4.4623 msec (   224.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   4.4208 msec (   226.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   4.5615 msec (   219.0/sec): per-file cost of creating 100 files then unlinking them all
    700 reps @   4.4544 msec (   224.0/sec): per-file cost of creating 100 files then unlinking them all
   3500 trep @   4.4945 msec (   222.0/sec): per-file cost of creating 100 files then unlinking them all

  57800 reps @   0.0866 msec ( 11500.0/sec): per-file cost of open and immediate close of 100 files
  57800 reps @   0.0865 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  57800 reps @   0.0867 msec ( 11500.0/sec): per-file cost of open and immediate close of 100 files
  57800 reps @   0.0865 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  57800 reps @   0.0865 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
 289000 trep @   0.0865 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files

  19200 reps @   0.1168 msec (  8560.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  19200 reps @   0.0950 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  19200 reps @   0.0948 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  19200 reps @   0.0955 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  19200 reps @   0.0952 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  96000 trep @   0.0995 msec ( 10100.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 304500 reps @   0.0165 msec ( 60600.0/sec): cost of stat'ing current dir
 304500 reps @   0.0171 msec ( 58500.0/sec): cost of stat'ing current dir
 304500 reps @   0.0172 msec ( 58200.0/sec): cost of stat'ing current dir
 304500 reps @   0.0172 msec ( 58200.0/sec): cost of stat'ing current dir
 304500 reps @   0.0172 msec ( 58200.0/sec): cost of stat'ing current dir
1522500 trep @   0.0170 msec ( 58700.0/sec): cost of stat'ing current dir

  65500 reps @   0.0765 msec ( 13100.0/sec): cost of stat'ing 5 component path
  65500 reps @   0.0767 msec ( 13000.0/sec): cost of stat'ing 5 component path
  65500 reps @   0.0775 msec ( 12900.0/sec): cost of stat'ing 5 component path
  65500 reps @   0.0776 msec ( 12900.0/sec): cost of stat'ing 5 component path
  65500 reps @   0.0782 msec ( 12800.0/sec): cost of stat'ing 5 component path
 327500 trep @   0.0773 msec ( 12900.0/sec): cost of stat'ing 5 component path

   1844 reps @   2.6400 msec (   379.0/sec): open directory and stat 100 files in it
   1844 reps @   2.6427 msec (   378.0/sec): open directory and stat 100 files in it
   1844 reps @   2.6432 msec (   378.0/sec): open directory and stat 100 files in it
   1844 reps @   2.6493 msec (   377.0/sec): open directory and stat 100 files in it
   1844 reps @   2.6379 msec (   379.0/sec): open directory and stat 100 files in it
   9220 trep @   2.6426 msec (   378.0/sec): open directory and stat 100 files in it

    800 reps @   4.8965 msec (   204.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   4.4173 msec (   226.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   4.4432 msec (   225.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   4.4484 msec (   225.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    800 reps @   4.4349 msec (   225.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   4000 trep @   4.5280 msec (   221.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 415800 reps @   0.0117 msec ( 85700.0/sec): ndbm lookup into database with 900 entries
 415800 reps @   0.0116 msec ( 85900.0/sec): ndbm lookup into database with 900 entries
 415800 reps @   0.0116 msec ( 85900.0/sec): ndbm lookup into database with 900 entries
 415800 reps @   0.0112 msec ( 89400.0/sec): ndbm lookup into database with 900 entries
 415800 reps @   0.0112 msec ( 89200.0/sec): ndbm lookup into database with 900 entries
2079000 trep @   0.0115 msec ( 87200.0/sec): ndbm lookup into database with 900 entries

  74400 reps @   0.0671 msec ( 14900.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0674 msec ( 14800.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0674 msec ( 14800.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0673 msec ( 14900.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0672 msec ( 14900.0/sec): 1 byte token passing between two processes using two pipes
 372000 trep @   0.0673 msec ( 14900.0/sec): 1 byte token passing between two processes using two pipes

  61200 reps @   0.0808 msec ( 12400.0/sec): 1 kilobyte token passing between two processes using two pipes
  61200 reps @   0.0805 msec ( 12400.0/sec): 1 kilobyte token passing between two processes using two pipes
  61200 reps @   0.0805 msec ( 12400.0/sec): 1 kilobyte token passing between two processes using two pipes
  61200 reps @   0.0806 msec ( 12400.0/sec): 1 kilobyte token passing between two processes using two pipes
  61200 reps @   0.0804 msec ( 12400.0/sec): 1 kilobyte token passing between two processes using two pipes
 306000 trep @   0.0806 msec ( 12400.0/sec): 1 kilobyte token passing between two processes using two pipes

12248000 reps @   0.0004 msec (2510000.0/sec): setjmp/longjmp
12248000 reps @   0.0004 msec (2510000.0/sec): setjmp/longjmp
12248000 reps @   0.0004 msec (2510000.0/sec): setjmp/longjmp
12248000 reps @   0.0004 msec (2500000.0/sec): setjmp/longjmp
12248000 reps @   0.0004 msec (2510000.0/sec): setjmp/longjmp
61240000 trep @   0.0004 msec (2510000.0/sec): setjmp/longjmp

 184000 reps @   0.0229 msec ( 43600.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 184000 reps @   0.0228 msec ( 43800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 184000 reps @   0.0228 msec ( 43900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 184000 reps @   0.0228 msec ( 43800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 184000 reps @   0.0228 msec ( 43800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 920000 trep @   0.0228 msec ( 43800.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   4015 reps @   1.2391 msec (   807.0/sec): create/destroy client UDP-based SunRPC handle
   4015 reps @   1.2380 msec (   808.0/sec): create/destroy client UDP-based SunRPC handle
   4015 reps @   1.2399 msec (   807.0/sec): create/destroy client UDP-based SunRPC handle
   4015 reps @   1.2384 msec (   808.0/sec): create/destroy client UDP-based SunRPC handle
   4015 reps @   1.2384 msec (   807.0/sec): create/destroy client UDP-based SunRPC handle
  20075 trep @   1.2388 msec (   807.0/sec): create/destroy client UDP-based SunRPC handle

  15200 reps @   0.3225 msec (  3100.0/sec): TCP-based SunRPC to negate an integer
  15200 reps @   0.3219 msec (  3110.0/sec): TCP-based SunRPC to negate an integer
  15200 reps @   0.3213 msec (  3110.0/sec): TCP-based SunRPC to negate an integer
  15200 reps @   0.3211 msec (  3110.0/sec): TCP-based SunRPC to negate an integer
  15200 reps @   0.3212 msec (  3110.0/sec): TCP-based SunRPC to negate an integer
  76000 trep @   0.3216 msec (  3110.0/sec): TCP-based SunRPC to negate an integer

  15200 reps @   0.3293 msec (  3040.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3296 msec (  3030.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3296 msec (  3030.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3291 msec (  3040.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3289 msec (  3040.0/sec): UDP-based SunRPC to negate an integer
  76000 trep @   0.3293 msec (  3040.0/sec): UDP-based SunRPC to negate an integer

  15200 reps @   0.3229 msec (  3100.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3236 msec (  3090.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3250 msec (  3080.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3250 msec (  3080.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3246 msec (  3080.0/sec): TCP-based SunRPC no-op
  76000 trep @   0.3242 msec (  3080.0/sec): TCP-based SunRPC no-op

  15200 reps @   0.3350 msec (  2990.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3352 msec (  2980.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3352 msec (  2980.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3356 msec (  2980.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3350 msec (  2990.0/sec): UDP-based SunRPC no-op
  76000 trep @   0.3352 msec (  2980.0/sec): UDP-based SunRPC no-op

1526000 reps @   0.0031 msec (318000.0/sec): getpid system call
1526000 reps @   0.0031 msec (319000.0/sec): getpid system call
1526000 reps @   0.0031 msec (319000.0/sec): getpid system call
1526000 reps @   0.0031 msec (319000.0/sec): getpid system call
1526000 reps @   0.0031 msec (319000.0/sec): getpid system call
7630000 trep @   0.0031 msec (319000.0/sec): getpid system call

 241000 reps @   0.0208 msec ( 48200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1205000 trep @   0.0208 msec ( 48200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 780800 reps @   0.0063 msec (159000.0/sec): gettimeofday system call
 780800 reps @   0.0063 msec (159000.0/sec): gettimeofday system call
 780800 reps @   0.0063 msec (159000.0/sec): gettimeofday system call
 780800 reps @   0.0063 msec (159000.0/sec): gettimeofday system call
 780800 reps @   0.0063 msec (159000.0/sec): gettimeofday system call
3904000 trep @   0.0063 msec (159000.0/sec): gettimeofday system call

   1100 reps @   4.7157 msec (   212.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.8164 msec (   208.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.8197 msec (   207.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.8122 msec (   208.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.8123 msec (   208.0/sec): fork, child immediately exits, parent waits
   5500 trep @   4.7953 msec (   209.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.0070 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0030 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0030 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9952 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0028 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.0022 msec (    0.99/sec): sleep for one second (validates test time)

 878700 reps @   0.0057 msec (175000.0/sec): select on no fds with no timeout
 878700 reps @   0.0057 msec (175000.0/sec): select on no fds with no timeout
 878700 reps @   0.0057 msec (175000.0/sec): select on no fds with no timeout
 878700 reps @   0.0057 msec (175000.0/sec): select on no fds with no timeout
 878700 reps @   0.0057 msec (175000.0/sec): select on no fds with no timeout
4393500 trep @   0.0057 msec (175000.0/sec): select on no fds with no timeout

 229600 reps @   0.0215 msec ( 46400.0/sec): select on 16 pipe read fds with immediate timeout
 229600 reps @   0.0216 msec ( 46300.0/sec): select on 16 pipe read fds with immediate timeout
 229600 reps @   0.0216 msec ( 46300.0/sec): select on 16 pipe read fds with immediate timeout
 229600 reps @   0.0215 msec ( 46600.0/sec): select on 16 pipe read fds with immediate timeout
 229600 reps @   0.0215 msec ( 46400.0/sec): select on 16 pipe read fds with immediate timeout
1148000 trep @   0.0215 msec ( 46400.0/sec): select on 16 pipe read fds with immediate timeout

 128900 reps @   0.0382 msec ( 26200.0/sec): select on 32 pipe read fds with immediate timeout
 128900 reps @   0.0382 msec ( 26200.0/sec): select on 32 pipe read fds with immediate timeout
 128900 reps @   0.0382 msec ( 26200.0/sec): select on 32 pipe read fds with immediate timeout
 128900 reps @   0.0382 msec ( 26200.0/sec): select on 32 pipe read fds with immediate timeout
 128900 reps @   0.0382 msec ( 26200.0/sec): select on 32 pipe read fds with immediate timeout
 644500 trep @   0.0382 msec ( 26200.0/sec): select on 32 pipe read fds with immediate timeout

 233200 reps @   0.0215 msec ( 46500.0/sec): select on 16 pipe write fds with immediate timeout
 233200 reps @   0.0214 msec ( 46600.0/sec): select on 16 pipe write fds with immediate timeout
 233200 reps @   0.0215 msec ( 46400.0/sec): select on 16 pipe write fds with immediate timeout
 233200 reps @   0.0215 msec ( 46600.0/sec): select on 16 pipe write fds with immediate timeout
 233200 reps @   0.0215 msec ( 46500.0/sec): select on 16 pipe write fds with immediate timeout
1166000 trep @   0.0215 msec ( 46500.0/sec): select on 16 pipe write fds with immediate timeout

 232000 reps @   0.0216 msec ( 46400.0/sec): select on 32 pipe write fds with immediate timeout
 232000 reps @   0.0215 msec ( 46400.0/sec): select on 32 pipe write fds with immediate timeout
 232000 reps @   0.0216 msec ( 46300.0/sec): select on 32 pipe write fds with immediate timeout
 232000 reps @   0.0216 msec ( 46400.0/sec): select on 32 pipe write fds with immediate timeout
 232000 reps @   0.0216 msec ( 46400.0/sec): select on 32 pipe write fds with immediate timeout
1160000 trep @   0.0216 msec ( 46400.0/sec): select on 32 pipe write fds with immediate timeout

  27700 reps @   0.1781 msec (  5610.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1777 msec (  5630.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1780 msec (  5620.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1783 msec (  5610.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1780 msec (  5620.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 138500 trep @   0.1780 msec (  5620.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    230 reps @  16.6332 msec (    60.1/sec): popen and read from "/bin/echo hello"
    230 reps @  16.6191 msec (    60.2/sec): popen and read from "/bin/echo hello"
    230 reps @  16.6325 msec (    60.1/sec): popen and read from "/bin/echo hello"
    230 reps @  16.6281 msec (    60.1/sec): popen and read from "/bin/echo hello"
    230 reps @  16.6415 msec (    60.1/sec): popen and read from "/bin/echo hello"
   1150 trep @  16.6309 msec (    60.1/sec): popen and read from "/bin/echo hello"

  55400 reps @   0.0880 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  55400 reps @   0.0880 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  55400 reps @   0.0879 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  55400 reps @   0.0881 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  55400 reps @   0.0881 msec ( 11300.0/sec): mmap megabyte /dev/zero region 
 277000 trep @   0.0880 msec ( 11400.0/sec): mmap megabyte /dev/zero region 

    332 reps @  15.0564 msec (    66.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  15.0559 msec (    66.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  15.0492 msec (    66.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  15.0430 msec (    66.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  15.0563 msec (    66.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   1660 trep @  15.0521 msec (    66.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    997 reps @   5.4784 msec (   183.0/sec): copy every byte of newly mmaped megabyte file
    997 reps @   6.4891 msec (   154.0/sec): copy every byte of newly mmaped megabyte file
    997 reps @   7.4195 msec (   135.0/sec): copy every byte of newly mmaped megabyte file
    997 reps @   7.2311 msec (   138.0/sec): copy every byte of newly mmaped megabyte file
    997 reps @   7.1246 msec (   140.0/sec): copy every byte of newly mmaped megabyte file
   4985 trep @   6.7485 msec (   148.0/sec): copy every byte of newly mmaped megabyte file

     56 reps @  71.5957 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     56 reps @  71.6153 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     56 reps @  71.4209 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     56 reps @  71.5965 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     56 reps @  71.4982 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
    280 trep @  71.5453 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers

      7 reps @ 201.6599 msec (    4.96/sec): compile ANSI C `hello world' with no special options
      7 reps @ 205.0201 msec (    4.88/sec): compile ANSI C `hello world' with no special options
      7 reps @ 199.1933 msec (    5.02/sec): compile ANSI C `hello world' with no special options
      7 reps @ 200.5299 msec (    4.99/sec): compile ANSI C `hello world' with no special options
      7 reps @ 197.6843 msec (    5.06/sec): compile ANSI C `hello world' with no special options
     35 trep @ 200.8175 msec (    4.98/sec): compile ANSI C `hello world' with no special options

      8 reps @ 526.2651 msec (    1.90/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 518.9490 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 519.3635 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 519.6363 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 518.7953 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     40 trep @ 520.6018 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     12 reps @ 518.3333 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 519.9833 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 519.0382 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 520.9401 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 519.9918 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     60 trep @ 519.6573 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     12 reps @ 490.0428 msec (    2.04/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 519.9524 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 557.4903 msec (    1.79/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 535.8148 msec (    1.87/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 519.7468 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     60 trep @ 524.6094 msec (    1.91/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

     16 reps @ 518.3756 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 520.3675 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 472.1943 msec (    2.12/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 488.7169 msec (    2.05/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 596.9179 msec (    1.68/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     80 trep @ 519.3145 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 526.7174 msec (    1.90/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 519.5819 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 519.5682 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 520.5108 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 519.2137 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 521.1184 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 519.4732 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 519.4349 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 519.0817 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 519.2976 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 519.5021 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 519.3579 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1354.4655 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1355.4053 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1354.5487 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1355.5977 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1355.6098 msec (    0.74/sec): use dc to output first 1,000 factorials
     20 trep @ 1355.1254 msec (    0.74/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0056 msec (180000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0055 msec (180000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0055 msec (181000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0055 msec (180000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0055 msec (180000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0055 msec (180000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  73800 reps @   0.0661 msec ( 15100.0/sec): use regcomp to compile 51 char literal, then regfree
  73800 reps @   0.0660 msec ( 15200.0/sec): use regcomp to compile 51 char literal, then regfree
  73800 reps @   0.0660 msec ( 15100.0/sec): use regcomp to compile 51 char literal, then regfree
  73800 reps @   0.0660 msec ( 15200.0/sec): use regcomp to compile 51 char literal, then regfree
  73800 reps @   0.0660 msec ( 15100.0/sec): use regcomp to compile 51 char literal, then regfree
 369000 trep @   0.0660 msec ( 15100.0/sec): use regcomp to compile 51 char literal, then regfree

      9 reps @ 490.6344 msec (    2.04/sec): use regexec with 51 char literal to search 142 kilobyte text
      9 reps @ 491.3137 msec (    2.04/sec): use regexec with 51 char literal to search 142 kilobyte text
      9 reps @ 490.7838 msec (    2.04/sec): use regexec with 51 char literal to search 142 kilobyte text
      9 reps @ 490.6037 msec (    2.04/sec): use regexec with 51 char literal to search 142 kilobyte text
      9 reps @ 490.5952 msec (    2.04/sec): use regexec with 51 char literal to search 142 kilobyte text
     45 trep @ 490.7862 msec (    2.04/sec): use regexec with 51 char literal to search 142 kilobyte text

  96956 reps @   0.0508 msec ( 19700.0/sec): use regcomp to compile long .* pattern, then regfree
  96956 reps @   0.0509 msec ( 19700.0/sec): use regcomp to compile long .* pattern, then regfree
  96956 reps @   0.0509 msec ( 19700.0/sec): use regcomp to compile long .* pattern, then regfree
  96956 reps @   0.0509 msec ( 19700.0/sec): use regcomp to compile long .* pattern, then regfree
  96956 reps @   0.0509 msec ( 19700.0/sec): use regcomp to compile long .* pattern, then regfree
 484780 trep @   0.0509 msec ( 19700.0/sec): use regcomp to compile long .* pattern, then regfree

     12 reps @ 441.0722 msec (    2.27/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 441.3234 msec (    2.27/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 441.4096 msec (    2.27/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 441.2969 msec (    2.27/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 441.1826 msec (    2.27/sec): use regexec with long .* pattern to search 142 kilobyte text
     60 trep @ 441.2570 msec (    2.27/sec): use regexec with long .* pattern to search 142 kilobyte text


UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: dropin
Operating system: IRIX64 6.2
Compiler version: 6.21
Instruction set: MIPS 3
Application binary interface: N32
Iris Audio Processor: version A2 revision 1.1.0
1 195 MHZ IP28 Processor
CPU: MIPS R10000 Processor Chip Revision: 2.4
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
On-board serial ports: 2
On-board bi-directional parallel port
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 1 Mbyte
Main memory size: 64 Mbytes
EISA bus: adapter 0
Integral Ethernet: ec0, version 1
Integral SCSI controller 1: Version WD33C93B, revision D
Integral SCSI controller 0: Version WD33C93B, revision D
  Disk drive: unit 1 on SCSI controller 0
Graphics board: High Impact
Uptime: 21 days,  6:37
Users: 1
Load average: 1.08, 1.94, 1.57
File IO test directory: /usr/tmp
File IO test filesystem: xfs (2017.18 MB total, 173.09 MB available)
Date: Tue Mar 18 04:12:19 1997

7769784 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7769784 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7769784 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7769784 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7769784 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
38848920 trep @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply

7938096 reps @   0.0006 msec (1590000.0/sec): 4 by 4 float matrix multiply
7938096 reps @   0.0006 msec (1590000.0/sec): 4 by 4 float matrix multiply
7938096 reps @   0.0006 msec (1590000.0/sec): 4 by 4 float matrix multiply
7938096 reps @   0.0006 msec (1590000.0/sec): 4 by 4 float matrix multiply
7938096 reps @   0.0006 msec (1590000.0/sec): 4 by 4 float matrix multiply
39690480 trep @   0.0006 msec (1590000.0/sec): 4 by 4 float matrix multiply

 216000 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 216000 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 216000 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 216000 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
 216000 reps @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return
1080000 trep @   0.0232 msec ( 43100.0/sec): recurse 250 simple function calls and return

9256800 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
9256800 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
9256800 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
9256800 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
9256800 reps @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes
46284000 trep @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes

 189560 reps @   0.0259 msec ( 38700.0/sec): bcopy of 16 kilobytes
 189560 reps @   0.0259 msec ( 38700.0/sec): bcopy of 16 kilobytes
 189560 reps @   0.0259 msec ( 38600.0/sec): bcopy of 16 kilobytes
 189560 reps @   0.0259 msec ( 38600.0/sec): bcopy of 16 kilobytes
 189560 reps @   0.0259 msec ( 38700.0/sec): bcopy of 16 kilobytes
 947800 trep @   0.0259 msec ( 38700.0/sec): bcopy of 16 kilobytes

  16876 reps @   0.2922 msec (  3420.0/sec): bcopy of 100 kilobytes
  16876 reps @   0.2919 msec (  3430.0/sec): bcopy of 100 kilobytes
  16876 reps @   0.2920 msec (  3420.0/sec): bcopy of 100 kilobytes
  16876 reps @   0.2921 msec (  3420.0/sec): bcopy of 100 kilobytes
  16876 reps @   0.2911 msec (  3430.0/sec): bcopy of 100 kilobytes
  84380 trep @   0.2919 msec (  3430.0/sec): bcopy of 100 kilobytes

    224 reps @  21.1861 msec (    47.2/sec): bcopy of 1 megabyte
    224 reps @  21.1686 msec (    47.2/sec): bcopy of 1 megabyte
    224 reps @  21.1622 msec (    47.3/sec): bcopy of 1 megabyte
    224 reps @  21.2287 msec (    47.1/sec): bcopy of 1 megabyte
    224 reps @  21.1661 msec (    47.2/sec): bcopy of 1 megabyte
   1120 trep @  21.1823 msec (    47.2/sec): bcopy of 1 megabyte

     24 reps @ 211.7368 msec (    4.72/sec): bcopy of 10 megabytes
     24 reps @ 212.2602 msec (    4.71/sec): bcopy of 10 megabytes
     24 reps @ 211.7051 msec (    4.72/sec): bcopy of 10 megabytes
     24 reps @ 211.7419 msec (    4.72/sec): bcopy of 10 megabytes
     24 reps @ 211.7474 msec (    4.72/sec): bcopy of 10 megabytes
    120 trep @ 211.8383 msec (    4.72/sec): bcopy of 10 megabytes

     24 reps @ 215.3512 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.7748 msec (    4.63/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.3472 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.2738 msec (    4.65/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 215.5336 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)
    120 trep @ 215.4561 msec (    4.64/sec): bcopy of 10 megabytes (cacheline-aligned)

     24 reps @ 212.1531 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 212.3199 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 212.4125 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 212.1568 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 212.0429 msec (    4.72/sec): bcopy of 10 megabytes (word mis-aligned)
    120 trep @ 212.2170 msec (    4.71/sec): bcopy of 10 megabytes (word mis-aligned)

     24 reps @ 212.3702 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.8602 msec (    4.70/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.3438 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.2719 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 212.2984 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)
    120 trep @ 212.4289 msec (    4.71/sec): bcopy of 10 megabytes (dword mis-aligned)

18759600 reps @   0.0003 msec (3760000.0/sec): bzero of 256 bytes
18759600 reps @   0.0003 msec (3760000.0/sec): bzero of 256 bytes
18759600 reps @   0.0003 msec (3760000.0/sec): bzero of 256 bytes
18759600 reps @   0.0003 msec (3760000.0/sec): bzero of 256 bytes
18759600 reps @   0.0003 msec (3760000.0/sec): bzero of 256 bytes
93798000 trep @   0.0003 msec (3760000.0/sec): bzero of 256 bytes

 455680 reps @   0.0109 msec ( 91300.0/sec): bzero of 16 kilobytes
 455680 reps @   0.0110 msec ( 91100.0/sec): bzero of 16 kilobytes
 455680 reps @   0.0110 msec ( 91200.0/sec): bzero of 16 kilobytes
 455680 reps @   0.0110 msec ( 91300.0/sec): bzero of 16 kilobytes
 455680 reps @   0.0110 msec ( 91300.0/sec): bzero of 16 kilobytes
2278400 trep @   0.0110 msec ( 91200.0/sec): bzero of 16 kilobytes

  24612 reps @   0.1999 msec (  5000.0/sec): bzero of 100 kilobytes
  24612 reps @   0.1999 msec (  5000.0/sec): bzero of 100 kilobytes
  24612 reps @   0.2001 msec (  5000.0/sec): bzero of 100 kilobytes
  24612 reps @   0.1999 msec (  5000.0/sec): bzero of 100 kilobytes
  24612 reps @   0.2001 msec (  5000.0/sec): bzero of 100 kilobytes
 123060 trep @   0.2000 msec (  5000.0/sec): bzero of 100 kilobytes

    400 reps @  13.1426 msec (    76.1/sec): bzero of 1 megabyte
    400 reps @  13.1353 msec (    76.1/sec): bzero of 1 megabyte
    400 reps @  13.1483 msec (    76.1/sec): bzero of 1 megabyte
    400 reps @  13.1376 msec (    76.1/sec): bzero of 1 megabyte
    400 reps @  13.1421 msec (    76.1/sec): bzero of 1 megabyte
   2000 trep @  13.1412 msec (    76.1/sec): bzero of 1 megabyte

     40 reps @ 131.3020 msec (    7.62/sec): bzero of 10 megabytes
     40 reps @ 131.2661 msec (    7.62/sec): bzero of 10 megabytes
     40 reps @ 131.3440 msec (    7.61/sec): bzero of 10 megabytes
     40 reps @ 131.4303 msec (    7.61/sec): bzero of 10 megabytes
     40 reps @ 131.4540 msec (    7.61/sec): bzero of 10 megabytes
    200 trep @ 131.3593 msec (    7.61/sec): bzero of 10 megabytes

     40 reps @ 131.3998 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.3242 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.2955 msec (    7.62/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.3841 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 131.3074 msec (    7.62/sec): bzero of 10 megabytes (cacheline-aligned)
    200 trep @ 131.3422 msec (    7.61/sec): bzero of 10 megabytes (cacheline-aligned)

     40 reps @ 131.3939 msec (    7.61/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.6901 msec (    7.59/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.6239 msec (    7.60/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.3092 msec (    7.62/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 131.2848 msec (    7.62/sec): bzero of 10 megabytes (word mis-aligned)
    200 trep @ 131.4604 msec (    7.61/sec): bzero of 10 megabytes (word mis-aligned)

     40 reps @ 131.3036 msec (    7.62/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.4123 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.4575 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.3460 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 131.2706 msec (    7.62/sec): bzero of 10 megabytes (dword mis-aligned)
    200 trep @ 131.3580 msec (    7.61/sec): bzero of 10 megabytes (dword mis-aligned)

  11375 reps @   0.4412 msec (  2270.0/sec): bcopy then qsort 400 32-bit integers
  11375 reps @   0.4397 msec (  2270.0/sec): bcopy then qsort 400 32-bit integers
  11375 reps @   0.4402 msec (  2270.0/sec): bcopy then qsort 400 32-bit integers
  11375 reps @   0.4397 msec (  2270.0/sec): bcopy then qsort 400 32-bit integers
  11375 reps @   0.4393 msec (  2280.0/sec): bcopy then qsort 400 32-bit integers
  56875 trep @   0.4400 msec (  2270.0/sec): bcopy then qsort 400 32-bit integers

    177 reps @  28.0806 msec (    35.6/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.0890 msec (    35.6/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.1016 msec (    35.6/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.1057 msec (    35.6/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.0790 msec (    35.6/sec): bcopy then qsort 16,000 32-bit integers
    885 trep @  28.0912 msec (    35.6/sec): bcopy then qsort 16,000 32-bit integers

     37 reps @ 132.0430 msec (    7.57/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 131.9975 msec (    7.58/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 132.0871 msec (    7.57/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 132.2733 msec (    7.56/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 132.1651 msec (    7.57/sec): bcopy then qsort 64,000 32-bit integers
    185 trep @ 132.1132 msec (    7.57/sec): bcopy then qsort 64,000 32-bit integers

22535000 reps @   0.0002 msec (4500000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22535000 reps @   0.0002 msec (4500000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22535000 reps @   0.0002 msec (4500000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22535000 reps @   0.0002 msec (4490000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
22535000 reps @   0.0002 msec (4500000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
112675000 trep @   0.0002 msec (4500000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

20255000 reps @   0.0002 msec (4050000.0/sec): basic double trigonometric function (sin/cos/tan)
20255000 reps @   0.0002 msec (4050000.0/sec): basic double trigonometric function (sin/cos/tan)
20255000 reps @   0.0002 msec (4050000.0/sec): basic double trigonometric function (sin/cos/tan)
20255000 reps @   0.0002 msec (4050000.0/sec): basic double trigonometric function (sin/cos/tan)
20255000 reps @   0.0002 msec (4050000.0/sec): basic double trigonometric function (sin/cos/tan)
101275000 trep @   0.0002 msec (4050000.0/sec): basic double trigonometric function (sin/cos/tan)

1772500 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772500 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772500 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772500 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772500 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
8862500 trep @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  24600 reps @   0.2028 msec (  4930.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2028 msec (  4930.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2028 msec (  4930.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2027 msec (  4930.0/sec): Tower of Hanoi recursion test (10 deep)
  24600 reps @   0.2027 msec (  4930.0/sec): Tower of Hanoi recursion test (10 deep)
 123000 trep @   0.2028 msec (  4930.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   6.4938 msec (   154.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.4902 msec (   154.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.5018 msec (   154.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.4890 msec (   154.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.4933 msec (   154.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   6.4936 msec (   154.0/sec): Tower of Hanoi recursion test (15 deep)

 646500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 646500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 646500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 646500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 646500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
3232500 trep @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 149400 reps @   0.0433 msec ( 23100.0/sec): write 80 bytes to a log file
 149400 reps @   0.0428 msec ( 23400.0/sec): write 80 bytes to a log file
 149400 reps @   0.0524 msec ( 19100.0/sec): write 80 bytes to a log file
 149400 reps @   0.0409 msec ( 24500.0/sec): write 80 bytes to a log file
 149400 reps @   0.0510 msec ( 19600.0/sec): write 80 bytes to a log file
 747000 trep @   0.0461 msec ( 21700.0/sec): write 80 bytes to a log file

    600 reps @   4.6070 msec (   217.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.4256 msec (   226.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.4424 msec (   225.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.4244 msec (   226.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.8443 msec (   206.0/sec): per-file cost of creating 100 files then unlinking them all
   3000 trep @   4.5487 msec (   220.0/sec): per-file cost of creating 100 files then unlinking them all

  58000 reps @   0.0864 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0865 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0863 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0865 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58000 reps @   0.0864 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
 290000 trep @   0.0864 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files

  52000 reps @   0.1022 msec (  9790.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  52000 reps @   0.0956 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  52000 reps @   0.0989 msec ( 10100.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  52000 reps @   0.0957 msec ( 10400.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  52000 reps @   0.0953 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 260000 trep @   0.0975 msec ( 10300.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 314500 reps @   0.0160 msec ( 62600.0/sec): cost of stat'ing current dir
 314500 reps @   0.0166 msec ( 60400.0/sec): cost of stat'ing current dir
 314500 reps @   0.0165 msec ( 60500.0/sec): cost of stat'ing current dir
 314500 reps @   0.0165 msec ( 60400.0/sec): cost of stat'ing current dir
 314500 reps @   0.0165 msec ( 60600.0/sec): cost of stat'ing current dir
1572500 trep @   0.0164 msec ( 60900.0/sec): cost of stat'ing current dir

  66000 reps @   0.0761 msec ( 13100.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0766 msec ( 13100.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0772 msec ( 13000.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0771 msec ( 13000.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0777 msec ( 12900.0/sec): cost of stat'ing 5 component path
 330000 trep @   0.0769 msec ( 13000.0/sec): cost of stat'ing 5 component path

   2097 reps @   2.3842 msec (   419.0/sec): open directory and stat 100 files in it
   2097 reps @   2.3858 msec (   419.0/sec): open directory and stat 100 files in it
   2097 reps @   2.3896 msec (   418.0/sec): open directory and stat 100 files in it
   2097 reps @   2.3957 msec (   417.0/sec): open directory and stat 100 files in it
   2097 reps @   2.3900 msec (   418.0/sec): open directory and stat 100 files in it
  10485 trep @   2.3891 msec (   419.0/sec): open directory and stat 100 files in it

    900 reps @   4.5869 msec (   218.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.4203 msec (   226.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.4139 msec (   227.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.4386 msec (   225.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.5500 msec (   220.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   4500 trep @   4.4819 msec (   223.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 440100 reps @   0.0114 msec ( 87900.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0114 msec ( 88000.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0114 msec ( 87400.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0110 msec ( 90600.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0110 msec ( 90600.0/sec): ndbm lookup into database with 900 entries
2200500 trep @   0.0113 msec ( 88900.0/sec): ndbm lookup into database with 900 entries

  74400 reps @   0.0661 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0661 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0661 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0662 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
  74400 reps @   0.0663 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
 372000 trep @   0.0661 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes

  56000 reps @   0.0821 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
  56000 reps @   0.0821 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
  56000 reps @   0.0822 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
  56000 reps @   0.0820 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
  56000 reps @   0.0820 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
 280000 trep @   0.0821 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes

13024000 reps @   0.0004 msec (2680000.0/sec): setjmp/longjmp
13024000 reps @   0.0004 msec (2640000.0/sec): setjmp/longjmp
13024000 reps @   0.0004 msec (2680000.0/sec): setjmp/longjmp
13024000 reps @   0.0004 msec (2640000.0/sec): setjmp/longjmp
13024000 reps @   0.0004 msec (2670000.0/sec): setjmp/longjmp
65120000 trep @   0.0004 msec (2660000.0/sec): setjmp/longjmp

 180000 reps @   0.0225 msec ( 44500.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 180000 reps @   0.0223 msec ( 44800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 180000 reps @   0.0223 msec ( 44800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 180000 reps @   0.0223 msec ( 44800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 180000 reps @   0.0223 msec ( 44700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 900000 trep @   0.0224 msec ( 44700.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   3920 reps @   1.2606 msec (   793.0/sec): create/destroy client UDP-based SunRPC handle
   3920 reps @   1.2627 msec (   792.0/sec): create/destroy client UDP-based SunRPC handle
   3920 reps @   1.2617 msec (   793.0/sec): create/destroy client UDP-based SunRPC handle
   3920 reps @   1.2652 msec (   790.0/sec): create/destroy client UDP-based SunRPC handle
   3920 reps @   1.2631 msec (   792.0/sec): create/destroy client UDP-based SunRPC handle
  19600 trep @   1.2627 msec (   792.0/sec): create/destroy client UDP-based SunRPC handle

  12400 reps @   0.3433 msec (  2910.0/sec): TCP-based SunRPC to negate an integer
  12400 reps @   0.3429 msec (  2920.0/sec): TCP-based SunRPC to negate an integer
  12400 reps @   0.3434 msec (  2910.0/sec): TCP-based SunRPC to negate an integer
  12400 reps @   0.3431 msec (  2910.0/sec): TCP-based SunRPC to negate an integer
  12400 reps @   0.3432 msec (  2910.0/sec): TCP-based SunRPC to negate an integer
  62000 trep @   0.3432 msec (  2910.0/sec): TCP-based SunRPC to negate an integer

  14400 reps @   0.3517 msec (  2840.0/sec): UDP-based SunRPC to negate an integer
  14400 reps @   0.3525 msec (  2840.0/sec): UDP-based SunRPC to negate an integer
  14400 reps @   0.3532 msec (  2830.0/sec): UDP-based SunRPC to negate an integer
  14400 reps @   0.3529 msec (  2830.0/sec): UDP-based SunRPC to negate an integer
  14400 reps @   0.3533 msec (  2830.0/sec): UDP-based SunRPC to negate an integer
  72000 trep @   0.3527 msec (  2830.0/sec): UDP-based SunRPC to negate an integer

  15200 reps @   0.3309 msec (  3020.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3301 msec (  3030.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3303 msec (  3030.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3300 msec (  3030.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.3298 msec (  3030.0/sec): TCP-based SunRPC no-op
  76000 trep @   0.3302 msec (  3030.0/sec): TCP-based SunRPC no-op

  15200 reps @   0.3299 msec (  3030.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3303 msec (  3030.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3301 msec (  3030.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3303 msec (  3030.0/sec): UDP-based SunRPC no-op
  15200 reps @   0.3304 msec (  3030.0/sec): UDP-based SunRPC no-op
  76000 trep @   0.3302 msec (  3030.0/sec): UDP-based SunRPC no-op

1556000 reps @   0.0032 msec (317000.0/sec): getpid system call
1556000 reps @   0.0032 msec (317000.0/sec): getpid system call
1556000 reps @   0.0032 msec (317000.0/sec): getpid system call
1556000 reps @   0.0032 msec (317000.0/sec): getpid system call
1556000 reps @   0.0032 msec (317000.0/sec): getpid system call
7780000 trep @   0.0032 msec (317000.0/sec): getpid system call

 240000 reps @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1200000 trep @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 785200 reps @   0.0062 msec (160000.0/sec): gettimeofday system call
 785200 reps @   0.0062 msec (160000.0/sec): gettimeofday system call
 785200 reps @   0.0063 msec (160000.0/sec): gettimeofday system call
 785200 reps @   0.0062 msec (160000.0/sec): gettimeofday system call
 785200 reps @   0.0063 msec (160000.0/sec): gettimeofday system call
3926000 trep @   0.0063 msec (160000.0/sec): gettimeofday system call

   1100 reps @   4.7124 msec (   212.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.7764 msec (   209.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.7763 msec (   209.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.7834 msec (   209.0/sec): fork, child immediately exits, parent waits
   1100 reps @   4.7828 msec (   209.0/sec): fork, child immediately exits, parent waits
   5500 trep @   4.7663 msec (   210.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.0080 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0000 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0054 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9976 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0026 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.0027 msec (    0.99/sec): sleep for one second (validates test time)

 746600 reps @   0.0067 msec (149000.0/sec): select on no fds with no timeout
 746600 reps @   0.0067 msec (149000.0/sec): select on no fds with no timeout
 746600 reps @   0.0067 msec (149000.0/sec): select on no fds with no timeout
 746600 reps @   0.0067 msec (149000.0/sec): select on no fds with no timeout
 746600 reps @   0.0067 msec (149000.0/sec): select on no fds with no timeout
3733000 trep @   0.0067 msec (149000.0/sec): select on no fds with no timeout

 215400 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
 215400 reps @   0.0227 msec ( 44000.0/sec): select on 16 pipe read fds with immediate timeout
 215400 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
 215400 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
 215400 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
1077000 trep @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout

 124800 reps @   0.0395 msec ( 25300.0/sec): select on 32 pipe read fds with immediate timeout
 124800 reps @   0.0395 msec ( 25300.0/sec): select on 32 pipe read fds with immediate timeout
 124800 reps @   0.0395 msec ( 25300.0/sec): select on 32 pipe read fds with immediate timeout
 124800 reps @   0.0395 msec ( 25300.0/sec): select on 32 pipe read fds with immediate timeout
 124800 reps @   0.0396 msec ( 25300.0/sec): select on 32 pipe read fds with immediate timeout
 624000 trep @   0.0395 msec ( 25300.0/sec): select on 32 pipe read fds with immediate timeout

 218300 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe write fds with immediate timeout
 218300 reps @   0.0227 msec ( 44000.0/sec): select on 16 pipe write fds with immediate timeout
 218300 reps @   0.0227 msec ( 44100.0/sec): select on 16 pipe write fds with immediate timeout
 218300 reps @   0.0227 msec ( 44100.0/sec): select on 16 pipe write fds with immediate timeout
 218300 reps @   0.0227 msec ( 44000.0/sec): select on 16 pipe write fds with immediate timeout
1091500 trep @   0.0227 msec ( 44000.0/sec): select on 16 pipe write fds with immediate timeout

 221900 reps @   0.0226 msec ( 44200.0/sec): select on 32 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44300.0/sec): select on 32 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44300.0/sec): select on 32 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44300.0/sec): select on 32 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44300.0/sec): select on 32 pipe write fds with immediate timeout
1109500 trep @   0.0226 msec ( 44300.0/sec): select on 32 pipe write fds with immediate timeout

  27700 reps @   0.1789 msec (  5590.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1784 msec (  5610.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1785 msec (  5600.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1786 msec (  5600.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  27700 reps @   0.1787 msec (  5600.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 138500 trep @   0.1786 msec (  5600.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    240 reps @  16.1611 msec (    61.9/sec): popen and read from "/bin/echo hello"
    240 reps @  16.1791 msec (    61.8/sec): popen and read from "/bin/echo hello"
    240 reps @  16.1665 msec (    61.9/sec): popen and read from "/bin/echo hello"
    240 reps @  16.1641 msec (    61.9/sec): popen and read from "/bin/echo hello"
    240 reps @  16.1586 msec (    61.9/sec): popen and read from "/bin/echo hello"
   1200 trep @  16.1659 msec (    61.9/sec): popen and read from "/bin/echo hello"

  56050 reps @   0.0876 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  56050 reps @   0.0877 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  56050 reps @   0.0877 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  56050 reps @   0.0877 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
  56050 reps @   0.0877 msec ( 11400.0/sec): mmap megabyte /dev/zero region 
 280250 trep @   0.0877 msec ( 11400.0/sec): mmap megabyte /dev/zero region 

    331 reps @  15.0325 msec (    66.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    331 reps @  15.0590 msec (    66.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    331 reps @  15.0443 msec (    66.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    331 reps @  15.0198 msec (    66.6/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    331 reps @  15.0375 msec (    66.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   1655 trep @  15.0386 msec (    66.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    846 reps @   5.8949 msec (   170.0/sec): copy every byte of newly mmaped megabyte file
    846 reps @   6.4592 msec (   155.0/sec): copy every byte of newly mmaped megabyte file
    846 reps @   7.1914 msec (   139.0/sec): copy every byte of newly mmaped megabyte file
    846 reps @   7.4557 msec (   134.0/sec): copy every byte of newly mmaped megabyte file
    846 reps @   7.3437 msec (   136.0/sec): copy every byte of newly mmaped megabyte file
   4230 trep @   6.8690 msec (   146.0/sec): copy every byte of newly mmaped megabyte file

     63 reps @  71.4143 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     63 reps @  71.3057 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     63 reps @  71.1810 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     63 reps @  71.1611 msec (    14.1/sec): compress & uncompress 52 kilobyte text file of numbers
     63 reps @  71.2880 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
    315 trep @  71.2700 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers

      7 reps @ 208.8059 msec (    4.79/sec): compile ANSI C `hello world' with no special options
      7 reps @ 203.8541 msec (    4.91/sec): compile ANSI C `hello world' with no special options
      7 reps @ 203.2214 msec (    4.92/sec): compile ANSI C `hello world' with no special options
      7 reps @ 206.4423 msec (    4.84/sec): compile ANSI C `hello world' with no special options
      7 reps @ 204.5019 msec (    4.89/sec): compile ANSI C `hello world' with no special options
     35 trep @ 205.3651 msec (    4.87/sec): compile ANSI C `hello world' with no special options

      8 reps @ 519.7455 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 518.8134 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 519.3134 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 519.3022 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 518.6616 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     40 trep @ 519.1672 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     10 reps @ 514.1212 msec (    1.95/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 513.9953 msec (    1.95/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 519.9816 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 516.9749 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 523.3025 msec (    1.91/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     50 trep @ 517.6751 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     12 reps @ 477.4937 msec (    2.09/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 551.9197 msec (    1.81/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 501.3940 msec (    1.99/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 549.9839 msec (    1.82/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 506.5065 msec (    1.97/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     60 trep @ 517.4596 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 392.9266 msec (    2.55/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 646.7822 msec (    1.55/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 368.1562 msec (    2.72/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 576.8705 msec (    1.73/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 612.3423 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 519.4156 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 530.0784 msec (    1.89/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 517.1184 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 521.0472 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 519.0067 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 518.8004 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 521.2102 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 520.2772 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 519.0675 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 519.5867 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 519.1208 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 518.9914 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 519.4087 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1354.1707 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1355.7807 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1357.5683 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1356.4970 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1355.9742 msec (    0.74/sec): use dc to output first 1,000 factorials
     20 trep @ 1355.9982 msec (    0.74/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0055 msec (182000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0054 msec (184000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0054 msec (184000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0054 msec (184000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0054 msec (184000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0055 msec (183000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  77304 reps @   0.0647 msec ( 15400.0/sec): use regcomp to compile 51 char literal, then regfree
  77304 reps @   0.0647 msec ( 15500.0/sec): use regcomp to compile 51 char literal, then regfree
  77304 reps @   0.0647 msec ( 15500.0/sec): use regcomp to compile 51 char literal, then regfree
  77304 reps @   0.0647 msec ( 15500.0/sec): use regcomp to compile 51 char literal, then regfree
  77304 reps @   0.0647 msec ( 15500.0/sec): use regcomp to compile 51 char literal, then regfree
 386520 trep @   0.0647 msec ( 15500.0/sec): use regcomp to compile 51 char literal, then regfree

      7 reps @ 698.7143 msec (    1.43/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 699.6466 msec (    1.43/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 699.5436 msec (    1.43/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 699.1911 msec (    1.43/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 698.0866 msec (    1.43/sec): use regexec with 51 char literal to search 142 kilobyte text
     35 trep @ 699.0364 msec (    1.43/sec): use regexec with 51 char literal to search 142 kilobyte text

  99536 reps @   0.0494 msec ( 20300.0/sec): use regcomp to compile long .* pattern, then regfree
  99536 reps @   0.0493 msec ( 20300.0/sec): use regcomp to compile long .* pattern, then regfree
  99536 reps @   0.0494 msec ( 20300.0/sec): use regcomp to compile long .* pattern, then regfree
  99536 reps @   0.0494 msec ( 20200.0/sec): use regcomp to compile long .* pattern, then regfree
  99536 reps @   0.0493 msec ( 20300.0/sec): use regcomp to compile long .* pattern, then regfree
 497680 trep @   0.0494 msec ( 20300.0/sec): use regcomp to compile long .* pattern, then regfree

     12 reps @ 428.8462 msec (    2.33/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 428.4984 msec (    2.33/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 428.8122 msec (    2.33/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 429.4675 msec (    2.33/sec): use regexec with long .* pattern to search 142 kilobyte text
     12 reps @ 429.3422 msec (    2.33/sec): use regexec with long .* pattern to search 142 kilobyte text
     60 trep @ 428.9933 msec (    2.33/sec): use regexec with long .* pattern to search 142 kilobyte text


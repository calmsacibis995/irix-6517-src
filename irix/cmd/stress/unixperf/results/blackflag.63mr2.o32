UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: blackflag
Operating system: IRIX 6.3
Compiler version: unknown
Instruction set: MIPS 2
Application binary interface: O32
Video: MVP unit 0 version 1.2
AV: AV1 Card version 1, O2Cam type 1 version 0 connected.
FLASH PROM version 4.0
On-board serial ports: 2
On-board EPP/ECP parallel port
1 174 MHZ IP32 Processor
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
CPU: MIPS R10000 Processor Chip Revision: 2.5
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 1 Mbyte on Processor 0
Main memory size: 128 Mbytes
Iris Audio Processor: version A3 revision 0
Integral Ethernet: ec0, version 1
  Disk drive: unit 6 on SCSI controller 1
  Disk drive: unit 5 on SCSI controller 1
  Disk drive: unit 4 on SCSI controller 1
  Disk drive: unit 3 on SCSI controller 1
  Disk drive: unit 2 on SCSI controller 1
  Disk drive: unit 1 on SCSI controller 1
  CDROM: unit 4 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
CRM graphics installed
Integral SCSI controller 1: Version ADAPTEC 7880
Integral SCSI controller 0: Version ADAPTEC 7880
Vice: TRE
Uptime: 1 day,  7:06
Users: 2
Load average: 0.31, 0.21, 0.07
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4153.77 MB total, 2188.05 MB available)
Date: Thu Mar 20 22:47:03 1997

4864080 reps @   0.0010 msec (998000.0/sec): 4 by 4 double matrix multiply
4864080 reps @   0.0010 msec (999000.0/sec): 4 by 4 double matrix multiply
4864080 reps @   0.0010 msec (996000.0/sec): 4 by 4 double matrix multiply
4864080 reps @   0.0010 msec (997000.0/sec): 4 by 4 double matrix multiply
4864080 reps @   0.0010 msec (996000.0/sec): 4 by 4 double matrix multiply
24320400 trep @   0.0010 msec (997000.0/sec): 4 by 4 double matrix multiply

2548176 reps @   0.0019 msec (526000.0/sec): 4 by 4 float matrix multiply
2548176 reps @   0.0019 msec (527000.0/sec): 4 by 4 float matrix multiply
2548176 reps @   0.0019 msec (527000.0/sec): 4 by 4 float matrix multiply
2548176 reps @   0.0019 msec (526000.0/sec): 4 by 4 float matrix multiply
2548176 reps @   0.0019 msec (526000.0/sec): 4 by 4 float matrix multiply
12740880 trep @   0.0019 msec (526000.0/sec): 4 by 4 float matrix multiply

1596500 reps @   0.0030 msec (331000.0/sec): recurse 250 simple function calls and return
1596500 reps @   0.0030 msec (331000.0/sec): recurse 250 simple function calls and return
1596500 reps @   0.0030 msec (331000.0/sec): recurse 250 simple function calls and return
1596500 reps @   0.0030 msec (331000.0/sec): recurse 250 simple function calls and return
1596500 reps @   0.0030 msec (331000.0/sec): recurse 250 simple function calls and return
7982500 trep @   0.0030 msec (331000.0/sec): recurse 250 simple function calls and return

4907600 reps @   0.0010 msec (1010000.0/sec): bcopy of 256 bytes
4907600 reps @   0.0010 msec (1010000.0/sec): bcopy of 256 bytes
4907600 reps @   0.0010 msec (1010000.0/sec): bcopy of 256 bytes
4907600 reps @   0.0010 msec (1010000.0/sec): bcopy of 256 bytes
4907600 reps @   0.0010 msec (1010000.0/sec): bcopy of 256 bytes
24538000 trep @   0.0010 msec (1010000.0/sec): bcopy of 256 bytes

  93160 reps @   0.0488 msec ( 20500.0/sec): bcopy of 16 kilobytes
  93160 reps @   0.0489 msec ( 20500.0/sec): bcopy of 16 kilobytes
  93160 reps @   0.0488 msec ( 20500.0/sec): bcopy of 16 kilobytes
  93160 reps @   0.0488 msec ( 20500.0/sec): bcopy of 16 kilobytes
  93160 reps @   0.0488 msec ( 20500.0/sec): bcopy of 16 kilobytes
 465800 trep @   0.0488 msec ( 20500.0/sec): bcopy of 16 kilobytes

  11316 reps @   0.4322 msec (  2310.0/sec): bcopy of 100 kilobytes
  11316 reps @   0.4323 msec (  2310.0/sec): bcopy of 100 kilobytes
  11316 reps @   0.4328 msec (  2310.0/sec): bcopy of 100 kilobytes
  11316 reps @   0.4332 msec (  2310.0/sec): bcopy of 100 kilobytes
  11316 reps @   0.4330 msec (  2310.0/sec): bcopy of 100 kilobytes
  56580 trep @   0.4327 msec (  2310.0/sec): bcopy of 100 kilobytes

    100 reps @  46.2350 msec (    21.6/sec): bcopy of 1 megabyte
    100 reps @  46.1903 msec (    21.6/sec): bcopy of 1 megabyte
    100 reps @  46.2771 msec (    21.6/sec): bcopy of 1 megabyte
    100 reps @  46.2846 msec (    21.6/sec): bcopy of 1 megabyte
    100 reps @  46.3284 msec (    21.6/sec): bcopy of 1 megabyte
    500 trep @  46.2631 msec (    21.6/sec): bcopy of 1 megabyte

     12 reps @ 462.7460 msec (    2.16/sec): bcopy of 10 megabytes
     12 reps @ 463.1310 msec (    2.16/sec): bcopy of 10 megabytes
     12 reps @ 462.9532 msec (    2.16/sec): bcopy of 10 megabytes
     12 reps @ 462.9759 msec (    2.16/sec): bcopy of 10 megabytes
     12 reps @ 463.1528 msec (    2.16/sec): bcopy of 10 megabytes
     60 trep @ 462.9918 msec (    2.16/sec): bcopy of 10 megabytes

     12 reps @ 464.9672 msec (    2.15/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 464.9236 msec (    2.15/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 465.1442 msec (    2.15/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 466.4472 msec (    2.14/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 464.9240 msec (    2.15/sec): bcopy of 10 megabytes (cacheline-aligned)
     60 trep @ 465.2812 msec (    2.15/sec): bcopy of 10 megabytes (cacheline-aligned)

     12 reps @ 466.7387 msec (    2.14/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 466.8342 msec (    2.14/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 468.4575 msec (    2.13/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 467.9457 msec (    2.14/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 467.4044 msec (    2.14/sec): bcopy of 10 megabytes (word mis-aligned)
     60 trep @ 467.4761 msec (    2.14/sec): bcopy of 10 megabytes (word mis-aligned)

     12 reps @ 465.8966 msec (    2.15/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 466.8204 msec (    2.14/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 468.3863 msec (    2.13/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 466.3940 msec (    2.14/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 466.5281 msec (    2.14/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 trep @ 466.8051 msec (    2.14/sec): bcopy of 10 megabytes (dword mis-aligned)

9771200 reps @   0.0005 msec (1960000.0/sec): bzero of 256 bytes
9771200 reps @   0.0005 msec (1970000.0/sec): bzero of 256 bytes
9771200 reps @   0.0005 msec (1970000.0/sec): bzero of 256 bytes
9771200 reps @   0.0005 msec (1960000.0/sec): bzero of 256 bytes
9771200 reps @   0.0005 msec (1970000.0/sec): bzero of 256 bytes
48856000 trep @   0.0005 msec (1970000.0/sec): bzero of 256 bytes

 196280 reps @   0.0245 msec ( 40800.0/sec): bzero of 16 kilobytes
 196280 reps @   0.0245 msec ( 40800.0/sec): bzero of 16 kilobytes
 196280 reps @   0.0245 msec ( 40800.0/sec): bzero of 16 kilobytes
 196280 reps @   0.0245 msec ( 40900.0/sec): bzero of 16 kilobytes
 196280 reps @   0.0245 msec ( 40800.0/sec): bzero of 16 kilobytes
 981400 trep @   0.0245 msec ( 40800.0/sec): bzero of 16 kilobytes

  20464 reps @   0.2358 msec (  4240.0/sec): bzero of 100 kilobytes
  20464 reps @   0.2354 msec (  4250.0/sec): bzero of 100 kilobytes
  20464 reps @   0.2354 msec (  4250.0/sec): bzero of 100 kilobytes
  20464 reps @   0.2360 msec (  4240.0/sec): bzero of 100 kilobytes
  20464 reps @   0.2355 msec (  4250.0/sec): bzero of 100 kilobytes
 102320 trep @   0.2356 msec (  4240.0/sec): bzero of 100 kilobytes

    212 reps @  23.6650 msec (    42.3/sec): bzero of 1 megabyte
    212 reps @  23.6711 msec (    42.2/sec): bzero of 1 megabyte
    212 reps @  23.6195 msec (    42.3/sec): bzero of 1 megabyte
    212 reps @  23.6356 msec (    42.3/sec): bzero of 1 megabyte
    212 reps @  23.6717 msec (    42.2/sec): bzero of 1 megabyte
   1060 trep @  23.6526 msec (    42.3/sec): bzero of 1 megabyte

     24 reps @ 235.7331 msec (    4.24/sec): bzero of 10 megabytes
     24 reps @ 237.6688 msec (    4.21/sec): bzero of 10 megabytes
     24 reps @ 236.0991 msec (    4.24/sec): bzero of 10 megabytes
     24 reps @ 236.1495 msec (    4.23/sec): bzero of 10 megabytes
     24 reps @ 236.2147 msec (    4.23/sec): bzero of 10 megabytes
    120 trep @ 236.3731 msec (    4.23/sec): bzero of 10 megabytes

     24 reps @ 236.0411 msec (    4.24/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 236.4105 msec (    4.23/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 236.0642 msec (    4.24/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 235.9146 msec (    4.24/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 235.8401 msec (    4.24/sec): bzero of 10 megabytes (cacheline-aligned)
    120 trep @ 236.0541 msec (    4.24/sec): bzero of 10 megabytes (cacheline-aligned)

     24 reps @ 236.6344 msec (    4.23/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 237.4715 msec (    4.21/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 236.5791 msec (    4.23/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 236.6776 msec (    4.23/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 236.6934 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)
    120 trep @ 236.8112 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)

     24 reps @ 236.2675 msec (    4.23/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.5665 msec (    4.23/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.2092 msec (    4.23/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.4994 msec (    4.23/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.2099 msec (    4.23/sec): bzero of 10 megabytes (dword mis-aligned)
    120 trep @ 236.3505 msec (    4.23/sec): bzero of 10 megabytes (dword mis-aligned)

   9736 reps @   0.4869 msec (  2050.0/sec): bcopy then qsort 400 32-bit integers
   9736 reps @   0.4879 msec (  2050.0/sec): bcopy then qsort 400 32-bit integers
   9736 reps @   0.4874 msec (  2050.0/sec): bcopy then qsort 400 32-bit integers
   9736 reps @   0.4867 msec (  2050.0/sec): bcopy then qsort 400 32-bit integers
   9736 reps @   0.4868 msec (  2050.0/sec): bcopy then qsort 400 32-bit integers
  48680 trep @   0.4871 msec (  2050.0/sec): bcopy then qsort 400 32-bit integers

    155 reps @  31.7944 msec (    31.5/sec): bcopy then qsort 16,000 32-bit integers
    155 reps @  31.7706 msec (    31.5/sec): bcopy then qsort 16,000 32-bit integers
    155 reps @  31.8179 msec (    31.4/sec): bcopy then qsort 16,000 32-bit integers
    155 reps @  31.8576 msec (    31.4/sec): bcopy then qsort 16,000 32-bit integers
    155 reps @  31.7741 msec (    31.5/sec): bcopy then qsort 16,000 32-bit integers
    775 trep @  31.8029 msec (    31.4/sec): bcopy then qsort 16,000 32-bit integers

     31 reps @ 147.9256 msec (    6.76/sec): bcopy then qsort 64,000 32-bit integers
     31 reps @ 148.2340 msec (    6.75/sec): bcopy then qsort 64,000 32-bit integers
     31 reps @ 147.8983 msec (    6.76/sec): bcopy then qsort 64,000 32-bit integers
     31 reps @ 147.8926 msec (    6.76/sec): bcopy then qsort 64,000 32-bit integers
     31 reps @ 148.7083 msec (    6.72/sec): bcopy then qsort 64,000 32-bit integers
    155 trep @ 148.1317 msec (    6.75/sec): bcopy then qsort 64,000 32-bit integers

9017500 reps @   0.0005 msec (1850000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
9017500 reps @   0.0005 msec (1850000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
9017500 reps @   0.0005 msec (1850000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
9017500 reps @   0.0005 msec (1850000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
9017500 reps @   0.0005 msec (1850000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
45087500 trep @   0.0005 msec (1850000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

6697500 reps @   0.0007 msec (1370000.0/sec): basic double trigonometric function (sin/cos/tan)
6697500 reps @   0.0007 msec (1380000.0/sec): basic double trigonometric function (sin/cos/tan)
6697500 reps @   0.0007 msec (1380000.0/sec): basic double trigonometric function (sin/cos/tan)
6697500 reps @   0.0007 msec (1380000.0/sec): basic double trigonometric function (sin/cos/tan)
6697500 reps @   0.0007 msec (1380000.0/sec): basic double trigonometric function (sin/cos/tan)
33487500 trep @   0.0007 msec (1380000.0/sec): basic double trigonometric function (sin/cos/tan)

1477500 reps @   0.0032 msec (308000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1477500 reps @   0.0032 msec (308000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1477500 reps @   0.0032 msec (308000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1477500 reps @   0.0032 msec (308000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1477500 reps @   0.0032 msec (309000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
7387500 trep @   0.0032 msec (308000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  20400 reps @   0.2427 msec (  4120.0/sec): Tower of Hanoi recursion test (10 deep)
  20400 reps @   0.2424 msec (  4130.0/sec): Tower of Hanoi recursion test (10 deep)
  20400 reps @   0.2426 msec (  4120.0/sec): Tower of Hanoi recursion test (10 deep)
  20400 reps @   0.2425 msec (  4120.0/sec): Tower of Hanoi recursion test (10 deep)
  20400 reps @   0.2424 msec (  4130.0/sec): Tower of Hanoi recursion test (10 deep)
 102000 trep @   0.2425 msec (  4120.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   7.9045 msec (   127.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.8913 msec (   127.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.8994 msec (   127.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.8913 msec (   127.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.8916 msec (   127.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   7.8956 msec (   127.0/sec): Tower of Hanoi recursion test (15 deep)

 565500 reps @   0.0085 msec (117000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 565500 reps @   0.0086 msec (117000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 565500 reps @   0.0085 msec (117000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 565500 reps @   0.0085 msec (117000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 565500 reps @   0.0086 msec (117000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
2827500 trep @   0.0085 msec (117000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 107600 reps @   0.0472 msec ( 21200.0/sec): write 80 bytes to a log file
 107600 reps @   0.0476 msec ( 21000.0/sec): write 80 bytes to a log file
 107600 reps @   0.0488 msec ( 20500.0/sec): write 80 bytes to a log file
 107600 reps @   0.0512 msec ( 19500.0/sec): write 80 bytes to a log file
 107600 reps @   0.0534 msec ( 18700.0/sec): write 80 bytes to a log file
 538000 trep @   0.0496 msec ( 20100.0/sec): write 80 bytes to a log file

   1000 reps @   4.3773 msec (   228.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.2288 msec (   236.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.2520 msec (   235.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.2616 msec (   235.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.2285 msec (   236.0/sec): per-file cost of creating 100 files then unlinking them all
   5000 trep @   4.2696 msec (   234.0/sec): per-file cost of creating 100 files then unlinking them all

  56900 reps @   0.0873 msec ( 11500.0/sec): per-file cost of open and immediate close of 100 files
  56900 reps @   0.0875 msec ( 11400.0/sec): per-file cost of open and immediate close of 100 files
  56900 reps @   0.0874 msec ( 11400.0/sec): per-file cost of open and immediate close of 100 files
  56900 reps @   0.0874 msec ( 11400.0/sec): per-file cost of open and immediate close of 100 files
  56900 reps @   0.0873 msec ( 11500.0/sec): per-file cost of open and immediate close of 100 files
 284500 trep @   0.0874 msec ( 11400.0/sec): per-file cost of open and immediate close of 100 files

  23200 reps @   0.0912 msec ( 11000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  23200 reps @   0.0830 msec ( 12100.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  23200 reps @   0.0825 msec ( 12100.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  23200 reps @   0.0833 msec ( 12000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  23200 reps @   0.0833 msec ( 12000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 116000 trep @   0.0847 msec ( 11800.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 330000 reps @   0.0152 msec ( 65800.0/sec): cost of stat'ing current dir
 330000 reps @   0.0151 msec ( 66000.0/sec): cost of stat'ing current dir
 330000 reps @   0.0152 msec ( 66000.0/sec): cost of stat'ing current dir
 330000 reps @   0.0153 msec ( 65500.0/sec): cost of stat'ing current dir
 330000 reps @   0.0161 msec ( 62200.0/sec): cost of stat'ing current dir
1650000 trep @   0.0154 msec ( 65100.0/sec): cost of stat'ing current dir

  70000 reps @   0.0714 msec ( 14000.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0712 msec ( 14100.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0712 msec ( 14000.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0714 msec ( 14000.0/sec): cost of stat'ing 5 component path
  70000 reps @   0.0717 msec ( 13900.0/sec): cost of stat'ing 5 component path
 350000 trep @   0.0714 msec ( 14000.0/sec): cost of stat'ing 5 component path

   1872 reps @   2.5568 msec (   391.0/sec): open directory and stat 100 files in it
   1872 reps @   2.5539 msec (   392.0/sec): open directory and stat 100 files in it
   1872 reps @   2.5501 msec (   392.0/sec): open directory and stat 100 files in it
   1872 reps @   2.5507 msec (   392.0/sec): open directory and stat 100 files in it
   1872 reps @   2.5507 msec (   392.0/sec): open directory and stat 100 files in it
   9360 trep @   2.5524 msec (   392.0/sec): open directory and stat 100 files in it

   1200 reps @   3.8411 msec (   260.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1200 reps @   3.7165 msec (   269.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1200 reps @   3.7716 msec (   265.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1200 reps @   3.8483 msec (   260.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1200 reps @   3.7507 msec (   267.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   6000 trep @   3.7856 msec (   264.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 288900 reps @   0.0174 msec ( 57500.0/sec): ndbm lookup into database with 900 entries
 288900 reps @   0.0174 msec ( 57300.0/sec): ndbm lookup into database with 900 entries
 288900 reps @   0.0171 msec ( 58600.0/sec): ndbm lookup into database with 900 entries
 288900 reps @   0.0170 msec ( 58800.0/sec): ndbm lookup into database with 900 entries
 288900 reps @   0.0170 msec ( 58700.0/sec): ndbm lookup into database with 900 entries
1444500 trep @   0.0172 msec ( 58200.0/sec): ndbm lookup into database with 900 entries

  70400 reps @   0.0686 msec ( 14600.0/sec): 1 byte token passing between two processes using two pipes
  70400 reps @   0.0686 msec ( 14600.0/sec): 1 byte token passing between two processes using two pipes
  70400 reps @   0.0688 msec ( 14500.0/sec): 1 byte token passing between two processes using two pipes
  70400 reps @   0.0689 msec ( 14500.0/sec): 1 byte token passing between two processes using two pipes
  70400 reps @   0.0686 msec ( 14600.0/sec): 1 byte token passing between two processes using two pipes
 352000 trep @   0.0687 msec ( 14600.0/sec): 1 byte token passing between two processes using two pipes

  62000 reps @   0.0788 msec ( 12700.0/sec): 1 kilobyte token passing between two processes using two pipes
  62000 reps @   0.0789 msec ( 12700.0/sec): 1 kilobyte token passing between two processes using two pipes
  62000 reps @   0.0790 msec ( 12700.0/sec): 1 kilobyte token passing between two processes using two pipes
  62000 reps @   0.0789 msec ( 12700.0/sec): 1 kilobyte token passing between two processes using two pipes
  62000 reps @   0.0791 msec ( 12600.0/sec): 1 kilobyte token passing between two processes using two pipes
 310000 trep @   0.0789 msec ( 12700.0/sec): 1 kilobyte token passing between two processes using two pipes

8812000 reps @   0.0006 msec (1760000.0/sec): setjmp/longjmp
8812000 reps @   0.0006 msec (1760000.0/sec): setjmp/longjmp
8812000 reps @   0.0006 msec (1760000.0/sec): setjmp/longjmp
8812000 reps @   0.0006 msec (1760000.0/sec): setjmp/longjmp
8812000 reps @   0.0006 msec (1760000.0/sec): setjmp/longjmp
44060000 trep @   0.0006 msec (1760000.0/sec): setjmp/longjmp

 368000 reps @   0.0133 msec ( 75400.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 368000 reps @   0.0132 msec ( 75800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 368000 reps @   0.0132 msec ( 75800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 368000 reps @   0.0132 msec ( 75800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 368000 reps @   0.0132 msec ( 75700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1840000 trep @   0.0132 msec ( 75700.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   4345 reps @   1.1479 msec (   871.0/sec): create/destroy client UDP-based SunRPC handle
   4345 reps @   1.1431 msec (   875.0/sec): create/destroy client UDP-based SunRPC handle
   4345 reps @   1.1408 msec (   877.0/sec): create/destroy client UDP-based SunRPC handle
   4345 reps @   1.1374 msec (   879.0/sec): create/destroy client UDP-based SunRPC handle
   4345 reps @   1.1389 msec (   878.0/sec): create/destroy client UDP-based SunRPC handle
  21725 trep @   1.1416 msec (   876.0/sec): create/destroy client UDP-based SunRPC handle

  13200 reps @   0.3685 msec (  2710.0/sec): TCP-based SunRPC to negate an integer
  13200 reps @   0.3659 msec (  2730.0/sec): TCP-based SunRPC to negate an integer
  13200 reps @   0.3665 msec (  2730.0/sec): TCP-based SunRPC to negate an integer
  13200 reps @   0.3665 msec (  2730.0/sec): TCP-based SunRPC to negate an integer
  13200 reps @   0.3713 msec (  2690.0/sec): TCP-based SunRPC to negate an integer
  66000 trep @   0.3677 msec (  2720.0/sec): TCP-based SunRPC to negate an integer

   9600 reps @   0.5117 msec (  1950.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5123 msec (  1950.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5091 msec (  1960.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5087 msec (  1970.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5090 msec (  1960.0/sec): UDP-based SunRPC to negate an integer
  48000 trep @   0.5102 msec (  1960.0/sec): UDP-based SunRPC to negate an integer

  13600 reps @   0.3563 msec (  2810.0/sec): TCP-based SunRPC no-op
  13600 reps @   0.3558 msec (  2810.0/sec): TCP-based SunRPC no-op
  13600 reps @   0.3557 msec (  2810.0/sec): TCP-based SunRPC no-op
  13600 reps @   0.3551 msec (  2820.0/sec): TCP-based SunRPC no-op
  13600 reps @   0.3550 msec (  2820.0/sec): TCP-based SunRPC no-op
  68000 trep @   0.3556 msec (  2810.0/sec): TCP-based SunRPC no-op

  10000 reps @   0.5075 msec (  1970.0/sec): UDP-based SunRPC no-op
  10000 reps @   0.5073 msec (  1970.0/sec): UDP-based SunRPC no-op
  10000 reps @   0.5074 msec (  1970.0/sec): UDP-based SunRPC no-op
  10000 reps @   0.5091 msec (  1960.0/sec): UDP-based SunRPC no-op
  10000 reps @   0.5097 msec (  1960.0/sec): UDP-based SunRPC no-op
  50000 trep @   0.5082 msec (  1970.0/sec): UDP-based SunRPC no-op

1582500 reps @   0.0030 msec (329000.0/sec): getpid system call
1582500 reps @   0.0030 msec (328000.0/sec): getpid system call
1582500 reps @   0.0030 msec (329000.0/sec): getpid system call
1582500 reps @   0.0030 msec (329000.0/sec): getpid system call
1582500 reps @   0.0030 msec (329000.0/sec): getpid system call
7912500 trep @   0.0030 msec (329000.0/sec): getpid system call

 241000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 241000 reps @   0.0209 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1205000 trep @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 990400 reps @   0.0050 msec (198000.0/sec): gettimeofday system call
 990400 reps @   0.0050 msec (198000.0/sec): gettimeofday system call
 990400 reps @   0.0051 msec (198000.0/sec): gettimeofday system call
 990400 reps @   0.0050 msec (198000.0/sec): gettimeofday system call
 990400 reps @   0.0051 msec (198000.0/sec): gettimeofday system call
4952000 trep @   0.0050 msec (198000.0/sec): gettimeofday system call

    200 reps @  29.7427 msec (    33.6/sec): fork, child immediately exits, parent waits
    200 reps @  29.4792 msec (    33.9/sec): fork, child immediately exits, parent waits
    200 reps @  29.4388 msec (    34.0/sec): fork, child immediately exits, parent waits
    200 reps @  29.6273 msec (    33.8/sec): fork, child immediately exits, parent waits
    200 reps @  29.4371 msec (    34.0/sec): fork, child immediately exits, parent waits
   1000 trep @  29.5450 msec (    33.8/sec): fork, child immediately exits, parent waits

      5 reps @ 1006.9770 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.9584 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.9694 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.9498 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.9594 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1006.9628 msec (    0.99/sec): sleep for one second (validates test time)

 881100 reps @   0.0055 msec (180000.0/sec): select on no fds with no timeout
 881100 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 881100 reps @   0.0055 msec (180000.0/sec): select on no fds with no timeout
 881100 reps @   0.0055 msec (180000.0/sec): select on no fds with no timeout
 881100 reps @   0.0055 msec (180000.0/sec): select on no fds with no timeout
4405500 trep @   0.0055 msec (180000.0/sec): select on no fds with no timeout

 262500 reps @   0.0184 msec ( 54300.0/sec): select on 16 pipe read fds with immediate timeout
 262500 reps @   0.0184 msec ( 54300.0/sec): select on 16 pipe read fds with immediate timeout
 262500 reps @   0.0184 msec ( 54300.0/sec): select on 16 pipe read fds with immediate timeout
 262500 reps @   0.0184 msec ( 54200.0/sec): select on 16 pipe read fds with immediate timeout
 262500 reps @   0.0184 msec ( 54300.0/sec): select on 16 pipe read fds with immediate timeout
1312500 trep @   0.0184 msec ( 54300.0/sec): select on 16 pipe read fds with immediate timeout

 152000 reps @   0.0321 msec ( 31200.0/sec): select on 32 pipe read fds with immediate timeout
 152000 reps @   0.0320 msec ( 31300.0/sec): select on 32 pipe read fds with immediate timeout
 152000 reps @   0.0319 msec ( 31300.0/sec): select on 32 pipe read fds with immediate timeout
 152000 reps @   0.0319 msec ( 31300.0/sec): select on 32 pipe read fds with immediate timeout
 152000 reps @   0.0320 msec ( 31300.0/sec): select on 32 pipe read fds with immediate timeout
 760000 trep @   0.0320 msec ( 31300.0/sec): select on 32 pipe read fds with immediate timeout

 264500 reps @   0.0183 msec ( 54800.0/sec): select on 16 pipe write fds with immediate timeout
 264500 reps @   0.0183 msec ( 54700.0/sec): select on 16 pipe write fds with immediate timeout
 264500 reps @   0.0182 msec ( 54800.0/sec): select on 16 pipe write fds with immediate timeout
 264500 reps @   0.0182 msec ( 54800.0/sec): select on 16 pipe write fds with immediate timeout
 264500 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout
1322500 trep @   0.0182 msec ( 54800.0/sec): select on 16 pipe write fds with immediate timeout

 265300 reps @   0.0182 msec ( 54800.0/sec): select on 32 pipe write fds with immediate timeout
 265300 reps @   0.0183 msec ( 54700.0/sec): select on 32 pipe write fds with immediate timeout
 265300 reps @   0.0183 msec ( 54800.0/sec): select on 32 pipe write fds with immediate timeout
 265300 reps @   0.0182 msec ( 54800.0/sec): select on 32 pipe write fds with immediate timeout
 265300 reps @   0.0182 msec ( 54900.0/sec): select on 32 pipe write fds with immediate timeout
1326500 trep @   0.0182 msec ( 54800.0/sec): select on 32 pipe write fds with immediate timeout

  36500 reps @   0.1324 msec (  7550.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  36500 reps @   0.1322 msec (  7560.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  36500 reps @   0.1323 msec (  7560.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  36500 reps @   0.1329 msec (  7530.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  36500 reps @   0.1325 msec (  7550.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 182500 trep @   0.1325 msec (  7550.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    100 reps @  49.7407 msec (    20.1/sec): popen and read from "/bin/echo hello"
    100 reps @  49.7559 msec (    20.1/sec): popen and read from "/bin/echo hello"
    100 reps @  50.1362 msec (    19.9/sec): popen and read from "/bin/echo hello"
    100 reps @  49.8725 msec (    20.1/sec): popen and read from "/bin/echo hello"
    100 reps @  50.0094 msec (    20.0/sec): popen and read from "/bin/echo hello"
    500 trep @  49.9030 msec (    20.0/sec): popen and read from "/bin/echo hello"

  29150 reps @   0.1716 msec (  5830.0/sec): mmap megabyte /dev/zero region 
  29150 reps @   0.1713 msec (  5840.0/sec): mmap megabyte /dev/zero region 
  29150 reps @   0.1716 msec (  5830.0/sec): mmap megabyte /dev/zero region 
  29150 reps @   0.1713 msec (  5840.0/sec): mmap megabyte /dev/zero region 
  29150 reps @   0.1712 msec (  5840.0/sec): mmap megabyte /dev/zero region 
 145750 trep @   0.1714 msec (  5830.0/sec): mmap megabyte /dev/zero region 

    153 reps @  31.6995 msec (    31.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    153 reps @  31.5320 msec (    31.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    153 reps @  31.5547 msec (    31.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    153 reps @  31.5887 msec (    31.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    153 reps @  31.5571 msec (    31.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    765 trep @  31.5864 msec (    31.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    290 reps @  16.1735 msec (    61.8/sec): copy every byte of newly mmaped megabyte file
    290 reps @  16.4069 msec (    60.9/sec): copy every byte of newly mmaped megabyte file
    290 reps @  16.7870 msec (    59.6/sec): copy every byte of newly mmaped megabyte file
    290 reps @  16.9093 msec (    59.1/sec): copy every byte of newly mmaped megabyte file
    290 reps @  16.9419 msec (    59.0/sec): copy every byte of newly mmaped megabyte file
   1450 trep @  16.6437 msec (    60.1/sec): copy every byte of newly mmaped megabyte file

     26 reps @ 125.6947 msec (    7.96/sec): compress & uncompress 52 kilobyte text file of numbers
     26 reps @ 126.0379 msec (    7.93/sec): compress & uncompress 52 kilobyte text file of numbers
     26 reps @ 125.8618 msec (    7.95/sec): compress & uncompress 52 kilobyte text file of numbers
     26 reps @ 126.2610 msec (    7.92/sec): compress & uncompress 52 kilobyte text file of numbers
     26 reps @ 125.6497 msec (    7.96/sec): compress & uncompress 52 kilobyte text file of numbers
    130 trep @ 125.9010 msec (    7.94/sec): compress & uncompress 52 kilobyte text file of numbers

      6 reps @ 326.1657 msec (    3.07/sec): compile ANSI C `hello world' with no special options
      6 reps @ 323.4940 msec (    3.09/sec): compile ANSI C `hello world' with no special options
      6 reps @ 337.3403 msec (    2.96/sec): compile ANSI C `hello world' with no special options
      6 reps @ 325.1060 msec (    3.08/sec): compile ANSI C `hello world' with no special options
      6 reps @ 323.5168 msec (    3.09/sec): compile ANSI C `hello world' with no special options
     30 trep @ 327.1246 msec (    3.06/sec): compile ANSI C `hello world' with no special options

     14 reps @ 617.4324 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 626.6934 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 618.5306 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 609.1637 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     14 reps @ 619.5472 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     70 trep @ 618.2735 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     10 reps @ 600.1983 msec (    1.67/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 623.8998 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 620.3092 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 612.1349 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 608.1560 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     50 trep @ 612.9396 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     12 reps @ 602.3669 msec (    1.66/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 655.5088 msec (    1.53/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 629.7448 msec (    1.59/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 612.3066 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 598.1748 msec (    1.67/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     60 trep @ 619.6204 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 456.1371 msec (    2.19/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 776.8291 msec (    1.29/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 463.1166 msec (    2.16/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 770.2893 msec (    1.30/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 615.5136 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 616.3772 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 633.3843 msec (    1.58/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 608.7313 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 621.9368 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 613.3395 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 614.8204 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 618.4425 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 618.5298 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 614.4711 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 615.9796 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 614.9365 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 614.7893 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 615.7412 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1578.1022 msec (    0.63/sec): use dc to output first 1,000 factorials
      4 reps @ 1574.5168 msec (    0.64/sec): use dc to output first 1,000 factorials
      4 reps @ 1570.5115 msec (    0.64/sec): use dc to output first 1,000 factorials
      4 reps @ 1569.5947 msec (    0.64/sec): use dc to output first 1,000 factorials
      4 reps @ 1575.5512 msec (    0.64/sec): use dc to output first 1,000 factorials
     20 trep @ 1573.6553 msec (    0.64/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0074 msec (134000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (135000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (135000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (135000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0074 msec (135000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0074 msec (135000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  52552 reps @   0.0946 msec ( 10600.0/sec): use regcomp to compile 51 char literal, then regfree
  52552 reps @   0.0949 msec ( 10500.0/sec): use regcomp to compile 51 char literal, then regfree
  52552 reps @   0.0947 msec ( 10600.0/sec): use regcomp to compile 51 char literal, then regfree
  52552 reps @   0.0946 msec ( 10600.0/sec): use regcomp to compile 51 char literal, then regfree
  52552 reps @   0.0946 msec ( 10600.0/sec): use regcomp to compile 51 char literal, then regfree
 262760 trep @   0.0947 msec ( 10600.0/sec): use regcomp to compile 51 char literal, then regfree

      5 reps @ 1225.3752 msec (    0.82/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1228.2676 msec (    0.81/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1226.9456 msec (    0.81/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1224.8802 msec (    0.82/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1224.6848 msec (    0.82/sec): use regexec with 51 char literal to search 142 kilobyte text
     25 trep @ 1226.0307 msec (    0.82/sec): use regexec with 51 char literal to search 142 kilobyte text

  67992 reps @   0.0736 msec ( 13600.0/sec): use regcomp to compile long .* pattern, then regfree
  67992 reps @   0.0737 msec ( 13600.0/sec): use regcomp to compile long .* pattern, then regfree
  67992 reps @   0.0738 msec ( 13600.0/sec): use regcomp to compile long .* pattern, then regfree
  67992 reps @   0.0736 msec ( 13600.0/sec): use regcomp to compile long .* pattern, then regfree
  67992 reps @   0.0736 msec ( 13600.0/sec): use regcomp to compile long .* pattern, then regfree
 339960 trep @   0.0736 msec ( 13600.0/sec): use regcomp to compile long .* pattern, then regfree

      8 reps @ 639.7605 msec (    1.56/sec): use regexec with long .* pattern to search 142 kilobyte text
      8 reps @ 638.9049 msec (    1.57/sec): use regexec with long .* pattern to search 142 kilobyte text
      8 reps @ 640.2764 msec (    1.56/sec): use regexec with long .* pattern to search 142 kilobyte text
      8 reps @ 640.3510 msec (    1.56/sec): use regexec with long .* pattern to search 142 kilobyte text
      8 reps @ 639.2387 msec (    1.56/sec): use regexec with long .* pattern to search 142 kilobyte text
     40 trep @ 639.7063 msec (    1.56/sec): use regexec with long .* pattern to search 142 kilobyte text


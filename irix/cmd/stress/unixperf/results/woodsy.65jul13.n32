UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: woodsy
Operating system: IRIX 6.5-ALPHA-1273972120
Compiler version: 7.1
Instruction set: MIPS 3
Application binary interface: N32
CPU: MIPS R4400 Processor Chip Revision: 6.0
FPU: MIPS R4000 Floating Point Coprocessor Revision: 0.0
1 200 MHZ IP22 Processor
Main memory size: 64 Mbytes
Secondary unified instruction/data cache size: 1 Mbyte on Processor 0
Instruction cache size: 16 Kbytes
Data cache size: 16 Kbytes
Integral SCSI controller 0: Version WD33C93B, revision D
  Disk drive: unit 1 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
Integral SCSI controller 1: Version WD33C93B, revision D
On-board serial ports: 2
On-board bi-directional parallel port
Graphics board: XL
Integral Ethernet: ec0, version 1
Iris Audio Processor: version A2 revision 1.1.0
EISA bus: adapter 0
Uptime: 13:01
Users: 6
Load average: 1.20, 1.24, 2.78
File IO test directory: /usr/tmp
File IO test filesystem: xfs (2101.23 MB total, 276.82 MB available)
Date: Tue Jul 15 18:58:02 1997

1469580 reps @   0.0034 msec (295000.0/sec): 4 by 4 double matrix multiply
1469580 reps @   0.0034 msec (295000.0/sec): 4 by 4 double matrix multiply
1469580 reps @   0.0034 msec (296000.0/sec): 4 by 4 double matrix multiply
1469580 reps @   0.0034 msec (296000.0/sec): 4 by 4 double matrix multiply
1469580 reps @   0.0034 msec (295000.0/sec): 4 by 4 double matrix multiply
7347900 trep @   0.0034 msec (295000.0/sec): 4 by 4 double matrix multiply

1656480 reps @   0.0030 msec (331000.0/sec): 4 by 4 float matrix multiply
1656480 reps @   0.0030 msec (331000.0/sec): 4 by 4 float matrix multiply
1656480 reps @   0.0030 msec (331000.0/sec): 4 by 4 float matrix multiply
1656480 reps @   0.0030 msec (331000.0/sec): 4 by 4 float matrix multiply
1656480 reps @   0.0030 msec (331000.0/sec): 4 by 4 float matrix multiply
8282400 trep @   0.0030 msec (331000.0/sec): 4 by 4 float matrix multiply

 194500 reps @   0.0259 msec ( 38700.0/sec): recurse 250 simple function calls and return
 194500 reps @   0.0258 msec ( 38700.0/sec): recurse 250 simple function calls and return
 194500 reps @   0.0258 msec ( 38700.0/sec): recurse 250 simple function calls and return
 194500 reps @   0.0258 msec ( 38700.0/sec): recurse 250 simple function calls and return
 194500 reps @   0.0258 msec ( 38700.0/sec): recurse 250 simple function calls and return
 972500 trep @   0.0258 msec ( 38700.0/sec): recurse 250 simple function calls and return

5273200 reps @   0.0009 msec (1060000.0/sec): bcopy of 256 bytes
5273200 reps @   0.0009 msec (1050000.0/sec): bcopy of 256 bytes
5273200 reps @   0.0009 msec (1050000.0/sec): bcopy of 256 bytes
5273200 reps @   0.0009 msec (1050000.0/sec): bcopy of 256 bytes
5273200 reps @   0.0009 msec (1050000.0/sec): bcopy of 256 bytes
26366000 trep @   0.0009 msec (1050000.0/sec): bcopy of 256 bytes

  50800 reps @   0.0984 msec ( 10200.0/sec): bcopy of 16 kilobytes
  50800 reps @   0.0985 msec ( 10200.0/sec): bcopy of 16 kilobytes
  50800 reps @   0.0985 msec ( 10200.0/sec): bcopy of 16 kilobytes
  50800 reps @   0.0984 msec ( 10200.0/sec): bcopy of 16 kilobytes
  50800 reps @   0.0984 msec ( 10200.0/sec): bcopy of 16 kilobytes
 254000 trep @   0.0984 msec ( 10200.0/sec): bcopy of 16 kilobytes

   4620 reps @   1.0768 msec (   929.0/sec): bcopy of 100 kilobytes
   4620 reps @   1.0753 msec (   930.0/sec): bcopy of 100 kilobytes
   4620 reps @   1.0765 msec (   929.0/sec): bcopy of 100 kilobytes
   4620 reps @   1.0890 msec (   918.0/sec): bcopy of 100 kilobytes
   4620 reps @   1.0746 msec (   931.0/sec): bcopy of 100 kilobytes
  23100 trep @   1.0784 msec (   927.0/sec): bcopy of 100 kilobytes

    108 reps @  37.3494 msec (    26.8/sec): bcopy of 1 megabyte
    108 reps @  37.2897 msec (    26.8/sec): bcopy of 1 megabyte
    108 reps @  37.3048 msec (    26.8/sec): bcopy of 1 megabyte
    108 reps @  37.8742 msec (    26.4/sec): bcopy of 1 megabyte
    108 reps @  37.3834 msec (    26.7/sec): bcopy of 1 megabyte
    540 trep @  37.4403 msec (    26.7/sec): bcopy of 1 megabyte

     12 reps @ 458.7458 msec (    2.18/sec): bcopy of 10 megabytes
     12 reps @ 457.9541 msec (    2.18/sec): bcopy of 10 megabytes
     12 reps @ 457.6293 msec (    2.19/sec): bcopy of 10 megabytes
     12 reps @ 457.7753 msec (    2.18/sec): bcopy of 10 megabytes
     12 reps @ 458.0465 msec (    2.18/sec): bcopy of 10 megabytes
     60 trep @ 458.0302 msec (    2.18/sec): bcopy of 10 megabytes

     20 reps @ 271.9962 msec (    3.68/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 272.1170 msec (    3.67/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 271.9401 msec (    3.68/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 272.1821 msec (    3.67/sec): bcopy of 10 megabytes (cacheline-aligned)
     20 reps @ 272.5954 msec (    3.67/sec): bcopy of 10 megabytes (cacheline-aligned)
    100 trep @ 272.1662 msec (    3.67/sec): bcopy of 10 megabytes (cacheline-aligned)

     16 reps @ 384.6888 msec (    2.60/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 384.8204 msec (    2.60/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 384.5636 msec (    2.60/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 384.9246 msec (    2.60/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 384.7457 msec (    2.60/sec): bcopy of 10 megabytes (word mis-aligned)
     80 trep @ 384.7486 msec (    2.60/sec): bcopy of 10 megabytes (word mis-aligned)

     16 reps @ 322.1785 msec (    3.10/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 322.0148 msec (    3.11/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 322.0422 msec (    3.11/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 321.9933 msec (    3.11/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 322.4544 msec (    3.10/sec): bcopy of 10 megabytes (dword mis-aligned)
     80 trep @ 322.1366 msec (    3.10/sec): bcopy of 10 megabytes (dword mis-aligned)

10142000 reps @   0.0005 msec (2040000.0/sec): bzero of 256 bytes
10142000 reps @   0.0005 msec (2040000.0/sec): bzero of 256 bytes
10142000 reps @   0.0005 msec (2040000.0/sec): bzero of 256 bytes
10142000 reps @   0.0005 msec (2040000.0/sec): bzero of 256 bytes
10142000 reps @   0.0005 msec (2040000.0/sec): bzero of 256 bytes
50710000 trep @   0.0005 msec (2040000.0/sec): bzero of 256 bytes

  56280 reps @   0.0866 msec ( 11500.0/sec): bzero of 16 kilobytes
  56280 reps @   0.0866 msec ( 11600.0/sec): bzero of 16 kilobytes
  56280 reps @   0.0866 msec ( 11500.0/sec): bzero of 16 kilobytes
  56280 reps @   0.0866 msec ( 11500.0/sec): bzero of 16 kilobytes
  56280 reps @   0.0866 msec ( 11500.0/sec): bzero of 16 kilobytes
 281400 trep @   0.0866 msec ( 11500.0/sec): bzero of 16 kilobytes

   8408 reps @   0.5941 msec (  1680.0/sec): bzero of 100 kilobytes
   8408 reps @   0.5938 msec (  1680.0/sec): bzero of 100 kilobytes
   8408 reps @   0.5935 msec (  1690.0/sec): bzero of 100 kilobytes
   8408 reps @   0.5939 msec (  1680.0/sec): bzero of 100 kilobytes
   8408 reps @   0.5936 msec (  1680.0/sec): bzero of 100 kilobytes
  42040 trep @   0.5938 msec (  1680.0/sec): bzero of 100 kilobytes

    332 reps @  15.5027 msec (    64.5/sec): bzero of 1 megabyte
    332 reps @  15.5022 msec (    64.5/sec): bzero of 1 megabyte
    332 reps @  15.5086 msec (    64.5/sec): bzero of 1 megabyte
    332 reps @  15.4850 msec (    64.6/sec): bzero of 1 megabyte
    332 reps @  15.5040 msec (    64.5/sec): bzero of 1 megabyte
   1660 trep @  15.5005 msec (    64.5/sec): bzero of 1 megabyte

     36 reps @ 154.8959 msec (    6.46/sec): bzero of 10 megabytes
     36 reps @ 155.0491 msec (    6.45/sec): bzero of 10 megabytes
     36 reps @ 155.2746 msec (    6.44/sec): bzero of 10 megabytes
     36 reps @ 155.0638 msec (    6.45/sec): bzero of 10 megabytes
     36 reps @ 155.1708 msec (    6.44/sec): bzero of 10 megabytes
    180 trep @ 155.0908 msec (    6.45/sec): bzero of 10 megabytes

     36 reps @ 154.8926 msec (    6.46/sec): bzero of 10 megabytes (cacheline-aligned)
     36 reps @ 155.0907 msec (    6.45/sec): bzero of 10 megabytes (cacheline-aligned)
     36 reps @ 155.1157 msec (    6.45/sec): bzero of 10 megabytes (cacheline-aligned)
     36 reps @ 154.9311 msec (    6.45/sec): bzero of 10 megabytes (cacheline-aligned)
     36 reps @ 155.1014 msec (    6.45/sec): bzero of 10 megabytes (cacheline-aligned)
    180 trep @ 155.0263 msec (    6.45/sec): bzero of 10 megabytes (cacheline-aligned)

     36 reps @ 155.1001 msec (    6.45/sec): bzero of 10 megabytes (word mis-aligned)
     36 reps @ 155.1700 msec (    6.44/sec): bzero of 10 megabytes (word mis-aligned)
     36 reps @ 155.2697 msec (    6.44/sec): bzero of 10 megabytes (word mis-aligned)
     36 reps @ 155.1843 msec (    6.44/sec): bzero of 10 megabytes (word mis-aligned)
     36 reps @ 155.1928 msec (    6.44/sec): bzero of 10 megabytes (word mis-aligned)
    180 trep @ 155.1834 msec (    6.44/sec): bzero of 10 megabytes (word mis-aligned)

     36 reps @ 154.9990 msec (    6.45/sec): bzero of 10 megabytes (dword mis-aligned)
     36 reps @ 155.2771 msec (    6.44/sec): bzero of 10 megabytes (dword mis-aligned)
     36 reps @ 155.1855 msec (    6.44/sec): bzero of 10 megabytes (dword mis-aligned)
     36 reps @ 155.0764 msec (    6.45/sec): bzero of 10 megabytes (dword mis-aligned)
     36 reps @ 155.0108 msec (    6.45/sec): bzero of 10 megabytes (dword mis-aligned)
    180 trep @ 155.1098 msec (    6.45/sec): bzero of 10 megabytes (dword mis-aligned)

   6377 reps @   0.7788 msec (  1280.0/sec): bcopy then qsort 400 32-bit integers
   6377 reps @   0.7786 msec (  1280.0/sec): bcopy then qsort 400 32-bit integers
   6377 reps @   0.7838 msec (  1280.0/sec): bcopy then qsort 400 32-bit integers
   6377 reps @   0.7799 msec (  1280.0/sec): bcopy then qsort 400 32-bit integers
   6377 reps @   0.7786 msec (  1280.0/sec): bcopy then qsort 400 32-bit integers
  31885 trep @   0.7799 msec (  1280.0/sec): bcopy then qsort 400 32-bit integers

     97 reps @  51.2756 msec (    19.5/sec): bcopy then qsort 16,000 32-bit integers
     97 reps @  51.2836 msec (    19.5/sec): bcopy then qsort 16,000 32-bit integers
     97 reps @  51.4699 msec (    19.4/sec): bcopy then qsort 16,000 32-bit integers
     97 reps @  51.2829 msec (    19.5/sec): bcopy then qsort 16,000 32-bit integers
     97 reps @  51.3133 msec (    19.5/sec): bcopy then qsort 16,000 32-bit integers
    485 trep @  51.3251 msec (    19.5/sec): bcopy then qsort 16,000 32-bit integers

     21 reps @ 238.7985 msec (    4.19/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 238.9387 msec (    4.19/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 238.9323 msec (    4.19/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 238.7786 msec (    4.19/sec): bcopy then qsort 64,000 32-bit integers
     21 reps @ 238.8327 msec (    4.19/sec): bcopy then qsort 64,000 32-bit integers
    105 trep @ 238.8561 msec (    4.19/sec): bcopy then qsort 64,000 32-bit integers

8035000 reps @   0.0006 msec (1600000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
8035000 reps @   0.0006 msec (1610000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
8035000 reps @   0.0006 msec (1600000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
8035000 reps @   0.0006 msec (1610000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
8035000 reps @   0.0006 msec (1610000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
40175000 trep @   0.0006 msec (1610000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

6172500 reps @   0.0008 msec (1230000.0/sec): basic double trigonometric function (sin/cos/tan)
6172500 reps @   0.0008 msec (1230000.0/sec): basic double trigonometric function (sin/cos/tan)
6172500 reps @   0.0008 msec (1230000.0/sec): basic double trigonometric function (sin/cos/tan)
6172500 reps @   0.0008 msec (1230000.0/sec): basic double trigonometric function (sin/cos/tan)
6172500 reps @   0.0008 msec (1230000.0/sec): basic double trigonometric function (sin/cos/tan)
30862500 trep @   0.0008 msec (1230000.0/sec): basic double trigonometric function (sin/cos/tan)

1242500 reps @   0.0040 msec (249000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1242500 reps @   0.0040 msec (249000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1242500 reps @   0.0040 msec (249000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1242500 reps @   0.0040 msec (249000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1242500 reps @   0.0040 msec (249000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
6212500 trep @   0.0040 msec (249000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  16500 reps @   0.3073 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3074 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3072 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3076 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3076 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  82500 trep @   0.3074 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @  10.9609 msec (    91.2/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @  10.9588 msec (    91.3/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @  10.9757 msec (    91.1/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @  10.9569 msec (    91.3/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @  10.9619 msec (    91.2/sec): Tower of Hanoi recursion test (15 deep)
   3000 trep @  10.9628 msec (    91.2/sec): Tower of Hanoi recursion test (15 deep)

 272500 reps @   0.0184 msec ( 54300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 272500 reps @   0.0184 msec ( 54300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 272500 reps @   0.0184 msec ( 54300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 272500 reps @   0.0184 msec ( 54300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 272500 reps @   0.0184 msec ( 54300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
1362500 trep @   0.0184 msec ( 54300.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

  60400 reps @   0.0860 msec ( 11600.0/sec): write 80 bytes to a log file
  60400 reps @   0.0862 msec ( 11600.0/sec): write 80 bytes to a log file
  60400 reps @   0.0916 msec ( 10900.0/sec): write 80 bytes to a log file
  60400 reps @   0.0924 msec ( 10800.0/sec): write 80 bytes to a log file
  60400 reps @   0.0945 msec ( 10600.0/sec): write 80 bytes to a log file
 302000 trep @   0.0901 msec ( 11100.0/sec): write 80 bytes to a log file

    900 reps @   4.8370 msec (   207.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   4.4461 msec (   225.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   4.4566 msec (   224.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   4.4370 msec (   225.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   4.4632 msec (   224.0/sec): per-file cost of creating 100 files then unlinking them all
   4500 trep @   4.5280 msec (   221.0/sec): per-file cost of creating 100 files then unlinking them all

  27800 reps @   0.1803 msec (  5550.0/sec): per-file cost of open and immediate close of 100 files
  27800 reps @   0.1800 msec (  5560.0/sec): per-file cost of open and immediate close of 100 files
  27800 reps @   0.1804 msec (  5540.0/sec): per-file cost of open and immediate close of 100 files
  27800 reps @   0.1785 msec (  5600.0/sec): per-file cost of open and immediate close of 100 files
  27800 reps @   0.1784 msec (  5600.0/sec): per-file cost of open and immediate close of 100 files
 139000 trep @   0.1795 msec (  5570.0/sec): per-file cost of open and immediate close of 100 files

  38000 reps @   0.1414 msec (  7070.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  38000 reps @   0.1320 msec (  7580.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  38000 reps @   0.1325 msec (  7550.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  38000 reps @   0.1328 msec (  7530.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  38000 reps @   0.1324 msec (  7560.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 190000 trep @   0.1342 msec (  7450.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 139000 reps @   0.0362 msec ( 27700.0/sec): cost of stat'ing current dir
 139000 reps @   0.0363 msec ( 27500.0/sec): cost of stat'ing current dir
 139000 reps @   0.0365 msec ( 27400.0/sec): cost of stat'ing current dir
 139000 reps @   0.0365 msec ( 27400.0/sec): cost of stat'ing current dir
 139000 reps @   0.0366 msec ( 27300.0/sec): cost of stat'ing current dir
 695000 trep @   0.0364 msec ( 27500.0/sec): cost of stat'ing current dir

  35500 reps @   0.1409 msec (  7100.0/sec): cost of stat'ing 5 component path
  35500 reps @   0.1410 msec (  7090.0/sec): cost of stat'ing 5 component path
  35500 reps @   0.1425 msec (  7020.0/sec): cost of stat'ing 5 component path
  35500 reps @   0.1433 msec (  6980.0/sec): cost of stat'ing 5 component path
  35500 reps @   0.1433 msec (  6980.0/sec): cost of stat'ing 5 component path
 177500 trep @   0.1422 msec (  7030.0/sec): cost of stat'ing 5 component path

   1016 reps @   4.9285 msec (   203.0/sec): open directory and stat 100 files in it
   1016 reps @   4.9511 msec (   202.0/sec): open directory and stat 100 files in it
   1016 reps @   4.9129 msec (   204.0/sec): open directory and stat 100 files in it
   1016 reps @   4.9253 msec (   203.0/sec): open directory and stat 100 files in it
   1016 reps @   4.9186 msec (   203.0/sec): open directory and stat 100 files in it
   5080 trep @   4.9273 msec (   203.0/sec): open directory and stat 100 files in it

    700 reps @   5.5000 msec (   182.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    700 reps @   4.4458 msec (   225.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    700 reps @   4.4478 msec (   225.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    700 reps @   4.4223 msec (   226.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    700 reps @   4.5885 msec (   218.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   3500 trep @   4.6809 msec (   214.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 153000 reps @   0.0330 msec ( 30300.0/sec): ndbm lookup into database with 900 entries
 153000 reps @   0.0328 msec ( 30500.0/sec): ndbm lookup into database with 900 entries
 153000 reps @   0.0332 msec ( 30100.0/sec): ndbm lookup into database with 900 entries
 153000 reps @   0.0325 msec ( 30800.0/sec): ndbm lookup into database with 900 entries
 153000 reps @   0.0323 msec ( 31000.0/sec): ndbm lookup into database with 900 entries
 765000 trep @   0.0328 msec ( 30500.0/sec): ndbm lookup into database with 900 entries

  41600 reps @   0.1193 msec (  8380.0/sec): 1 byte token passing between two processes using two pipes
  41600 reps @   0.1196 msec (  8360.0/sec): 1 byte token passing between two processes using two pipes
  41600 reps @   0.1193 msec (  8380.0/sec): 1 byte token passing between two processes using two pipes
  41600 reps @   0.1194 msec (  8380.0/sec): 1 byte token passing between two processes using two pipes
  41600 reps @   0.1193 msec (  8380.0/sec): 1 byte token passing between two processes using two pipes
 208000 trep @   0.1194 msec (  8380.0/sec): 1 byte token passing between two processes using two pipes

  32400 reps @   0.1542 msec (  6480.0/sec): 1 kilobyte token passing between two processes using two pipes
  32400 reps @   0.1544 msec (  6480.0/sec): 1 kilobyte token passing between two processes using two pipes
  32400 reps @   0.1546 msec (  6470.0/sec): 1 kilobyte token passing between two processes using two pipes
  32400 reps @   0.1541 msec (  6490.0/sec): 1 kilobyte token passing between two processes using two pipes
  32400 reps @   0.1542 msec (  6490.0/sec): 1 kilobyte token passing between two processes using two pipes
 162000 trep @   0.1543 msec (  6480.0/sec): 1 kilobyte token passing between two processes using two pipes

10564000 reps @   0.0005 msec (2110000.0/sec): setjmp/longjmp
10564000 reps @   0.0005 msec (2110000.0/sec): setjmp/longjmp
10564000 reps @   0.0005 msec (2110000.0/sec): setjmp/longjmp
10564000 reps @   0.0005 msec (2110000.0/sec): setjmp/longjmp
10564000 reps @   0.0005 msec (2110000.0/sec): setjmp/longjmp
52820000 trep @   0.0005 msec (2110000.0/sec): setjmp/longjmp

  84000 reps @   0.0612 msec ( 16300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
  84000 reps @   0.0612 msec ( 16300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
  84000 reps @   0.0612 msec ( 16300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
  84000 reps @   0.0613 msec ( 16300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
  84000 reps @   0.0612 msec ( 16300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 420000 trep @   0.0612 msec ( 16300.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   1495 reps @   3.2939 msec (   304.0/sec): create/destroy client UDP-based SunRPC handle
   1495 reps @   3.2913 msec (   304.0/sec): create/destroy client UDP-based SunRPC handle
   1495 reps @   3.2929 msec (   304.0/sec): create/destroy client UDP-based SunRPC handle
   1495 reps @   3.2866 msec (   304.0/sec): create/destroy client UDP-based SunRPC handle
   1495 reps @   3.2945 msec (   304.0/sec): create/destroy client UDP-based SunRPC handle
   7475 trep @   3.2919 msec (   304.0/sec): create/destroy client UDP-based SunRPC handle

   4400 reps @   1.1339 msec (   882.0/sec): TCP-based SunRPC to negate an integer
   4400 reps @   1.1340 msec (   882.0/sec): TCP-based SunRPC to negate an integer
   4400 reps @   1.1336 msec (   882.0/sec): TCP-based SunRPC to negate an integer
   4400 reps @   1.1341 msec (   882.0/sec): TCP-based SunRPC to negate an integer
   4400 reps @   1.1342 msec (   882.0/sec): TCP-based SunRPC to negate an integer
  22000 trep @   1.1340 msec (   882.0/sec): TCP-based SunRPC to negate an integer

   4800 reps @   1.0313 msec (   970.0/sec): UDP-based SunRPC to negate an integer
   4800 reps @   1.0319 msec (   969.0/sec): UDP-based SunRPC to negate an integer
   4800 reps @   1.0324 msec (   969.0/sec): UDP-based SunRPC to negate an integer
   4800 reps @   1.0300 msec (   971.0/sec): UDP-based SunRPC to negate an integer
   4800 reps @   1.0293 msec (   972.0/sec): UDP-based SunRPC to negate an integer
  24000 trep @   1.0310 msec (   970.0/sec): UDP-based SunRPC to negate an integer

   4400 reps @   1.1033 msec (   906.0/sec): TCP-based SunRPC no-op
   4400 reps @   1.1040 msec (   906.0/sec): TCP-based SunRPC no-op
   4400 reps @   1.1030 msec (   907.0/sec): TCP-based SunRPC no-op
   4400 reps @   1.1025 msec (   907.0/sec): TCP-based SunRPC no-op
   4400 reps @   1.1002 msec (   909.0/sec): TCP-based SunRPC no-op
  22000 trep @   1.1026 msec (   907.0/sec): TCP-based SunRPC no-op

   4800 reps @   1.0116 msec (   989.0/sec): UDP-based SunRPC no-op
   4800 reps @   1.0123 msec (   988.0/sec): UDP-based SunRPC no-op
   4800 reps @   1.0144 msec (   986.0/sec): UDP-based SunRPC no-op
   4800 reps @   1.0129 msec (   987.0/sec): UDP-based SunRPC no-op
   4800 reps @   1.0133 msec (   987.0/sec): UDP-based SunRPC no-op
  24000 trep @   1.0129 msec (   987.0/sec): UDP-based SunRPC no-op

1358500 reps @   0.0037 msec (271000.0/sec): getpid system call
1358500 reps @   0.0037 msec (274000.0/sec): getpid system call
1358500 reps @   0.0037 msec (274000.0/sec): getpid system call
1358500 reps @   0.0037 msec (274000.0/sec): getpid system call
1358500 reps @   0.0037 msec (274000.0/sec): getpid system call
6792500 trep @   0.0037 msec (273000.0/sec): getpid system call

 161500 reps @   0.0310 msec ( 32300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 161500 reps @   0.0310 msec ( 32300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 161500 reps @   0.0310 msec ( 32300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 161500 reps @   0.0310 msec ( 32300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 161500 reps @   0.0310 msec ( 32300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 807500 trep @   0.0310 msec ( 32300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 539200 reps @   0.0093 msec (108000.0/sec): gettimeofday system call
 539200 reps @   0.0093 msec (108000.0/sec): gettimeofday system call
 539200 reps @   0.0093 msec (108000.0/sec): gettimeofday system call
 539200 reps @   0.0093 msec (108000.0/sec): gettimeofday system call
 539200 reps @   0.0093 msec (108000.0/sec): gettimeofday system call
2696000 trep @   0.0093 msec (108000.0/sec): gettimeofday system call

    200 reps @  25.5172 msec (    39.2/sec): fork, child immediately exits, parent waits
    200 reps @  23.9937 msec (    41.7/sec): fork, child immediately exits, parent waits
    200 reps @  24.9305 msec (    40.1/sec): fork, child immediately exits, parent waits
    200 reps @  26.6051 msec (    37.6/sec): fork, child immediately exits, parent waits
    200 reps @  24.1124 msec (    41.5/sec): fork, child immediately exits, parent waits
   1000 trep @  25.0318 msec (    39.9/sec): fork, child immediately exits, parent waits

      5 reps @ 1011.0264 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9904 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1011.0186 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1011.0016 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1011.0140 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1011.0102 msec (    0.99/sec): sleep for one second (validates test time)

 432800 reps @   0.0116 msec ( 86600.0/sec): select on no fds with no timeout
 432800 reps @   0.0116 msec ( 86500.0/sec): select on no fds with no timeout
 432800 reps @   0.0116 msec ( 86500.0/sec): select on no fds with no timeout
 432800 reps @   0.0116 msec ( 86500.0/sec): select on no fds with no timeout
 432800 reps @   0.0116 msec ( 86500.0/sec): select on no fds with no timeout
2164000 trep @   0.0116 msec ( 86500.0/sec): select on no fds with no timeout

 100300 reps @   0.0499 msec ( 20000.0/sec): select on 16 pipe read fds with immediate timeout
 100300 reps @   0.0499 msec ( 20000.0/sec): select on 16 pipe read fds with immediate timeout
 100300 reps @   0.0500 msec ( 20000.0/sec): select on 16 pipe read fds with immediate timeout
 100300 reps @   0.0500 msec ( 20000.0/sec): select on 16 pipe read fds with immediate timeout
 100300 reps @   0.0499 msec ( 20000.0/sec): select on 16 pipe read fds with immediate timeout
 501500 trep @   0.0499 msec ( 20000.0/sec): select on 16 pipe read fds with immediate timeout

  56600 reps @   0.0887 msec ( 11300.0/sec): select on 32 pipe read fds with immediate timeout
  56600 reps @   0.0887 msec ( 11300.0/sec): select on 32 pipe read fds with immediate timeout
  56600 reps @   0.0887 msec ( 11300.0/sec): select on 32 pipe read fds with immediate timeout
  56600 reps @   0.0888 msec ( 11300.0/sec): select on 32 pipe read fds with immediate timeout
  56600 reps @   0.0887 msec ( 11300.0/sec): select on 32 pipe read fds with immediate timeout
 283000 trep @   0.0887 msec ( 11300.0/sec): select on 32 pipe read fds with immediate timeout

 104900 reps @   0.0477 msec ( 21000.0/sec): select on 16 pipe write fds with immediate timeout
 104900 reps @   0.0477 msec ( 21000.0/sec): select on 16 pipe write fds with immediate timeout
 104900 reps @   0.0477 msec ( 21000.0/sec): select on 16 pipe write fds with immediate timeout
 104900 reps @   0.0477 msec ( 21000.0/sec): select on 16 pipe write fds with immediate timeout
 104900 reps @   0.0478 msec ( 20900.0/sec): select on 16 pipe write fds with immediate timeout
 524500 trep @   0.0477 msec ( 21000.0/sec): select on 16 pipe write fds with immediate timeout

 104800 reps @   0.0478 msec ( 20900.0/sec): select on 32 pipe write fds with immediate timeout
 104800 reps @   0.0478 msec ( 20900.0/sec): select on 32 pipe write fds with immediate timeout
 104800 reps @   0.0479 msec ( 20900.0/sec): select on 32 pipe write fds with immediate timeout
 104800 reps @   0.0478 msec ( 20900.0/sec): select on 32 pipe write fds with immediate timeout
 104800 reps @   0.0479 msec ( 20900.0/sec): select on 32 pipe write fds with immediate timeout
 524000 trep @   0.0478 msec ( 20900.0/sec): select on 32 pipe write fds with immediate timeout

  11400 reps @   0.4431 msec (  2260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11400 reps @   0.4425 msec (  2260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11400 reps @   0.4427 msec (  2260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11400 reps @   0.4424 msec (  2260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11400 reps @   0.4423 msec (  2260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  57000 trep @   0.4426 msec (  2260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    100 reps @  52.3377 msec (    19.1/sec): popen and read from "/bin/echo hello"
    100 reps @  52.3657 msec (    19.1/sec): popen and read from "/bin/echo hello"
    100 reps @  52.3386 msec (    19.1/sec): popen and read from "/bin/echo hello"
    100 reps @  52.3145 msec (    19.1/sec): popen and read from "/bin/echo hello"
    100 reps @  51.8609 msec (    19.3/sec): popen and read from "/bin/echo hello"
    500 trep @  52.2435 msec (    19.1/sec): popen and read from "/bin/echo hello"

  16500 reps @   0.3036 msec (  3290.0/sec): mmap megabyte /dev/zero region 
  16500 reps @   0.3038 msec (  3290.0/sec): mmap megabyte /dev/zero region 
  16500 reps @   0.3034 msec (  3300.0/sec): mmap megabyte /dev/zero region 
  16500 reps @   0.3033 msec (  3300.0/sec): mmap megabyte /dev/zero region 
  16500 reps @   0.3036 msec (  3290.0/sec): mmap megabyte /dev/zero region 
  82500 trep @   0.3035 msec (  3290.0/sec): mmap megabyte /dev/zero region 

    151 reps @  33.0754 msec (    30.2/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    151 reps @  33.0964 msec (    30.2/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    151 reps @  33.1378 msec (    30.2/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    151 reps @  33.1031 msec (    30.2/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    151 reps @  33.0887 msec (    30.2/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    755 trep @  33.1003 msec (    30.2/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    223 reps @  22.2837 msec (    44.9/sec): copy every byte of newly mmaped megabyte file
    223 reps @  22.2380 msec (    45.0/sec): copy every byte of newly mmaped megabyte file
    223 reps @  22.4061 msec (    44.6/sec): copy every byte of newly mmaped megabyte file
    223 reps @  22.3321 msec (    44.8/sec): copy every byte of newly mmaped megabyte file
    223 reps @  22.5625 msec (    44.3/sec): copy every byte of newly mmaped megabyte file
   1115 trep @  22.3645 msec (    44.7/sec): copy every byte of newly mmaped megabyte file

     25 reps @ 178.5382 msec (    5.60/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 179.5562 msec (    5.57/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 185.7229 msec (    5.38/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 180.6531 msec (    5.54/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 182.2592 msec (    5.49/sec): compress & uncompress 52 kilobyte text file of numbers
    125 trep @ 181.3459 msec (    5.51/sec): compress & uncompress 52 kilobyte text file of numbers

      4 reps @ 591.2645 msec (    1.69/sec): compile ANSI C `hello world' with no special options
      4 reps @ 594.8340 msec (    1.68/sec): compile ANSI C `hello world' with no special options
      4 reps @ 597.1993 msec (    1.67/sec): compile ANSI C `hello world' with no special options
      4 reps @ 590.6042 msec (    1.69/sec): compile ANSI C `hello world' with no special options
      4 reps @ 593.2310 msec (    1.69/sec): compile ANSI C `hello world' with no special options
     20 trep @ 593.4266 msec (    1.69/sec): compile ANSI C `hello world' with no special options

    124 reps @ 865.7057 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    124 reps @ 849.7320 msec (    1.18/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    124 reps @ 860.6201 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    124 reps @ 865.9848 msec (    1.15/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    124 reps @ 863.8797 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    620 trep @ 861.1845 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     14 reps @ 1023.7312 msec (    0.98/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     14 reps @ 866.2118 msec (    1.15/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     14 reps @ 885.2271 msec (    1.13/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     14 reps @ 930.0146 msec (    1.08/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     14 reps @ 795.4161 msec (    1.26/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     70 trep @ 900.1202 msec (    1.11/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

      8 reps @ 851.8556 msec (    1.17/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 920.0021 msec (    1.09/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 897.4841 msec (    1.11/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 859.2451 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 789.7974 msec (    1.27/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     40 trep @ 863.6769 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 841.2323 msec (    1.19/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 862.5084 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 879.6636 msec (    1.14/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 881.5550 msec (    1.13/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 849.4229 msec (    1.18/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 862.8764 msec (    1.16/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel


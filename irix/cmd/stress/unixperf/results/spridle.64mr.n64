UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: spridle
Operating system: IRIX64 6.4
Compiler version: 7.1
Instruction set: MIPS 3
Application binary interface: 64-bit
2 195 MHZ IP30 Processors
CPU: MIPS R10000 Processor Chip Revision: 2.6
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
Main memory size: 128 Mbytes
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Secondary unified instruction/data cache size: 1 Mbyte
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 parallel port: plp1
Graphics board: MXI
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 12.0, number 1
Uptime:  4:07
Users: 2
Load average: 1.28, 3.06, 2.46
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4205.63 MB total, 1369.56 MB available)
Date: Tue Mar 18 07:07:37 1997

7847040 reps @   0.0006 msec (1580000.0/sec): 4 by 4 double matrix multiply
7847040 reps @   0.0006 msec (1580000.0/sec): 4 by 4 double matrix multiply
7847040 reps @   0.0006 msec (1580000.0/sec): 4 by 4 double matrix multiply
7847040 reps @   0.0006 msec (1580000.0/sec): 4 by 4 double matrix multiply
7847040 reps @   0.0006 msec (1580000.0/sec): 4 by 4 double matrix multiply
39235200 trep @   0.0006 msec (1580000.0/sec): 4 by 4 double matrix multiply

7630236 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7630236 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7630236 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7630236 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7630236 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
38151180 trep @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply

 316000 reps @   0.0158 msec ( 63100.0/sec): recurse 250 simple function calls and return
 316000 reps @   0.0158 msec ( 63100.0/sec): recurse 250 simple function calls and return
 316000 reps @   0.0158 msec ( 63100.0/sec): recurse 250 simple function calls and return
 316000 reps @   0.0158 msec ( 63100.0/sec): recurse 250 simple function calls and return
 316000 reps @   0.0158 msec ( 63100.0/sec): recurse 250 simple function calls and return
1580000 trep @   0.0158 msec ( 63100.0/sec): recurse 250 simple function calls and return

9068400 reps @   0.0005 msec (1830000.0/sec): bcopy of 256 bytes
9068400 reps @   0.0005 msec (1830000.0/sec): bcopy of 256 bytes
9068400 reps @   0.0005 msec (1840000.0/sec): bcopy of 256 bytes
9068400 reps @   0.0005 msec (1840000.0/sec): bcopy of 256 bytes
9068400 reps @   0.0005 msec (1840000.0/sec): bcopy of 256 bytes
45342000 trep @   0.0005 msec (1840000.0/sec): bcopy of 256 bytes

 193560 reps @   0.0258 msec ( 38700.0/sec): bcopy of 16 kilobytes
 193560 reps @   0.0258 msec ( 38700.0/sec): bcopy of 16 kilobytes
 193560 reps @   0.0258 msec ( 38700.0/sec): bcopy of 16 kilobytes
 193560 reps @   0.0258 msec ( 38700.0/sec): bcopy of 16 kilobytes
 193560 reps @   0.0258 msec ( 38700.0/sec): bcopy of 16 kilobytes
 967800 trep @   0.0258 msec ( 38700.0/sec): bcopy of 16 kilobytes

  17088 reps @   0.2916 msec (  3430.0/sec): bcopy of 100 kilobytes
  17088 reps @   0.2916 msec (  3430.0/sec): bcopy of 100 kilobytes
  17088 reps @   0.2916 msec (  3430.0/sec): bcopy of 100 kilobytes
  17088 reps @   0.2916 msec (  3430.0/sec): bcopy of 100 kilobytes
  17088 reps @   0.2916 msec (  3430.0/sec): bcopy of 100 kilobytes
  85440 trep @   0.2916 msec (  3430.0/sec): bcopy of 100 kilobytes

    632 reps @   7.9265 msec (   126.0/sec): bcopy of 1 megabyte
    632 reps @   7.9269 msec (   126.0/sec): bcopy of 1 megabyte
    632 reps @   7.9274 msec (   126.0/sec): bcopy of 1 megabyte
    632 reps @   7.9264 msec (   126.0/sec): bcopy of 1 megabyte
    632 reps @   7.9268 msec (   126.0/sec): bcopy of 1 megabyte
   3160 trep @   7.9268 msec (   126.0/sec): bcopy of 1 megabyte

     56 reps @  79.5865 msec (    12.6/sec): bcopy of 10 megabytes
     56 reps @  79.5798 msec (    12.6/sec): bcopy of 10 megabytes
     56 reps @  79.5884 msec (    12.6/sec): bcopy of 10 megabytes
     56 reps @  79.5797 msec (    12.6/sec): bcopy of 10 megabytes
     56 reps @  79.5847 msec (    12.6/sec): bcopy of 10 megabytes
    280 trep @  79.5838 msec (    12.6/sec): bcopy of 10 megabytes

     68 reps @  76.7262 msec (    13.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     68 reps @  76.7267 msec (    13.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     68 reps @  76.7310 msec (    13.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     68 reps @  76.7283 msec (    13.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     68 reps @  76.7281 msec (    13.0/sec): bcopy of 10 megabytes (cacheline-aligned)
    340 trep @  76.7280 msec (    13.0/sec): bcopy of 10 megabytes (cacheline-aligned)

     64 reps @  81.5983 msec (    12.3/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  81.5974 msec (    12.3/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  81.6025 msec (    12.3/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  81.5852 msec (    12.3/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  81.5920 msec (    12.3/sec): bcopy of 10 megabytes (word mis-aligned)
    320 trep @  81.5951 msec (    12.3/sec): bcopy of 10 megabytes (word mis-aligned)

     60 reps @  83.7401 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  83.7471 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  83.7494 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  83.7524 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  83.7539 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
    300 trep @  83.7486 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)

17998800 reps @   0.0003 msec (3600000.0/sec): bzero of 256 bytes
17998800 reps @   0.0003 msec (3600000.0/sec): bzero of 256 bytes
17998800 reps @   0.0003 msec (3600000.0/sec): bzero of 256 bytes
17998800 reps @   0.0003 msec (3600000.0/sec): bzero of 256 bytes
17998800 reps @   0.0003 msec (3600000.0/sec): bzero of 256 bytes
89994000 trep @   0.0003 msec (3600000.0/sec): bzero of 256 bytes

 347840 reps @   0.0144 msec ( 69300.0/sec): bzero of 16 kilobytes
 347840 reps @   0.0145 msec ( 69200.0/sec): bzero of 16 kilobytes
 347840 reps @   0.0144 msec ( 69500.0/sec): bzero of 16 kilobytes
 347840 reps @   0.0145 msec ( 69200.0/sec): bzero of 16 kilobytes
 347840 reps @   0.0144 msec ( 69500.0/sec): bzero of 16 kilobytes
1739200 trep @   0.0144 msec ( 69300.0/sec): bzero of 16 kilobytes

  25376 reps @   0.1970 msec (  5080.0/sec): bzero of 100 kilobytes
  25376 reps @   0.1970 msec (  5080.0/sec): bzero of 100 kilobytes
  25376 reps @   0.1969 msec (  5080.0/sec): bzero of 100 kilobytes
  25376 reps @   0.1969 msec (  5080.0/sec): bzero of 100 kilobytes
  25376 reps @   0.1969 msec (  5080.0/sec): bzero of 100 kilobytes
 126880 trep @   0.1969 msec (  5080.0/sec): bzero of 100 kilobytes

   1296 reps @   3.8490 msec (   260.0/sec): bzero of 1 megabyte
   1296 reps @   3.8497 msec (   260.0/sec): bzero of 1 megabyte
   1296 reps @   3.8493 msec (   260.0/sec): bzero of 1 megabyte
   1296 reps @   3.8496 msec (   260.0/sec): bzero of 1 megabyte
   1296 reps @   3.8494 msec (   260.0/sec): bzero of 1 megabyte
   6480 trep @   3.8494 msec (   260.0/sec): bzero of 1 megabyte

    120 reps @  42.8663 msec (    23.3/sec): bzero of 10 megabytes
    120 reps @  42.8672 msec (    23.3/sec): bzero of 10 megabytes
    120 reps @  42.8715 msec (    23.3/sec): bzero of 10 megabytes
    120 reps @  42.8708 msec (    23.3/sec): bzero of 10 megabytes
    120 reps @  42.8659 msec (    23.3/sec): bzero of 10 megabytes
    600 trep @  42.8684 msec (    23.3/sec): bzero of 10 megabytes

    116 reps @  43.3352 msec (    23.1/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.3365 msec (    23.1/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.3404 msec (    23.1/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.3372 msec (    23.1/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.3384 msec (    23.1/sec): bzero of 10 megabytes (cacheline-aligned)
    580 trep @  43.3375 msec (    23.1/sec): bzero of 10 megabytes (cacheline-aligned)

    120 reps @  42.7991 msec (    23.4/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.7926 msec (    23.4/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.7989 msec (    23.4/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.8038 msec (    23.4/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.7965 msec (    23.4/sec): bzero of 10 megabytes (word mis-aligned)
    600 trep @  42.7982 msec (    23.4/sec): bzero of 10 megabytes (word mis-aligned)

    120 reps @  43.0664 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    120 reps @  43.0622 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    120 reps @  43.0668 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    120 reps @  43.0667 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    120 reps @  43.0718 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    600 trep @  43.0668 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)

  10454 reps @   0.4756 msec (  2100.0/sec): bcopy then qsort 400 32-bit integers
  10454 reps @   0.4752 msec (  2100.0/sec): bcopy then qsort 400 32-bit integers
  10454 reps @   0.4755 msec (  2100.0/sec): bcopy then qsort 400 32-bit integers
  10454 reps @   0.4743 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
  10454 reps @   0.4758 msec (  2100.0/sec): bcopy then qsort 400 32-bit integers
  52270 trep @   0.4753 msec (  2100.0/sec): bcopy then qsort 400 32-bit integers

    167 reps @  29.7519 msec (    33.6/sec): bcopy then qsort 16,000 32-bit integers
    167 reps @  29.7628 msec (    33.6/sec): bcopy then qsort 16,000 32-bit integers
    167 reps @  29.8262 msec (    33.5/sec): bcopy then qsort 16,000 32-bit integers
    167 reps @  29.7164 msec (    33.7/sec): bcopy then qsort 16,000 32-bit integers
    167 reps @  29.7817 msec (    33.6/sec): bcopy then qsort 16,000 32-bit integers
    835 trep @  29.7678 msec (    33.6/sec): bcopy then qsort 16,000 32-bit integers

     37 reps @ 137.3610 msec (    7.28/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 137.2610 msec (    7.29/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 137.2999 msec (    7.28/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 137.4553 msec (    7.28/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 137.3867 msec (    7.28/sec): bcopy then qsort 64,000 32-bit integers
    185 trep @ 137.3528 msec (    7.28/sec): bcopy then qsort 64,000 32-bit integers

23575000 reps @   0.0002 msec (4710000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
23575000 reps @   0.0002 msec (4710000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
23575000 reps @   0.0002 msec (4710000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
23575000 reps @   0.0002 msec (4710000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
23575000 reps @   0.0002 msec (4710000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
117875000 trep @   0.0002 msec (4710000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

21775000 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21775000 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21775000 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21775000 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21775000 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
108875000 trep @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)

2116000 reps @   0.0024 msec (423000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2116000 reps @   0.0024 msec (423000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2116000 reps @   0.0024 msec (423000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2116000 reps @   0.0024 msec (423000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2116000 reps @   0.0024 msec (423000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
10580000 trep @   0.0024 msec (423000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  27600 reps @   0.1826 msec (  5480.0/sec): Tower of Hanoi recursion test (10 deep)
  27600 reps @   0.1826 msec (  5480.0/sec): Tower of Hanoi recursion test (10 deep)
  27600 reps @   0.1826 msec (  5480.0/sec): Tower of Hanoi recursion test (10 deep)
  27600 reps @   0.1826 msec (  5480.0/sec): Tower of Hanoi recursion test (10 deep)
  27600 reps @   0.1826 msec (  5480.0/sec): Tower of Hanoi recursion test (10 deep)
 138000 trep @   0.1826 msec (  5480.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   5.8493 msec (   171.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8489 msec (   171.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8499 msec (   171.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8486 msec (   171.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8487 msec (   171.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   5.8491 msec (   171.0/sec): Tower of Hanoi recursion test (15 deep)

 485000 reps @   0.0103 msec ( 97000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 485000 reps @   0.0103 msec ( 97000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 485000 reps @   0.0103 msec ( 97000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 485000 reps @   0.0103 msec ( 97000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 485000 reps @   0.0103 msec ( 97000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
2425000 trep @   0.0103 msec ( 97000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 213000 reps @   0.0238 msec ( 42000.0/sec): write 80 bytes to a log file
 213000 reps @   0.0254 msec ( 39300.0/sec): write 80 bytes to a log file
 213000 reps @   0.0263 msec ( 38100.0/sec): write 80 bytes to a log file
 213000 reps @   0.0263 msec ( 38000.0/sec): write 80 bytes to a log file
 213000 reps @   0.0263 msec ( 38000.0/sec): write 80 bytes to a log file
1065000 trep @   0.0256 msec ( 39000.0/sec): write 80 bytes to a log file

   1000 reps @   5.0962 msec (   196.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.9541 msec (   202.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   5.0163 msec (   199.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.9265 msec (   203.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   5.0836 msec (   197.0/sec): per-file cost of creating 100 files then unlinking them all
   5000 trep @   5.0153 msec (   199.0/sec): per-file cost of creating 100 files then unlinking them all

  62400 reps @   0.0803 msec ( 12400.0/sec): per-file cost of open and immediate close of 100 files
  62400 reps @   0.0803 msec ( 12400.0/sec): per-file cost of open and immediate close of 100 files
  62400 reps @   0.0804 msec ( 12400.0/sec): per-file cost of open and immediate close of 100 files
  62400 reps @   0.0805 msec ( 12400.0/sec): per-file cost of open and immediate close of 100 files
  62400 reps @   0.0804 msec ( 12400.0/sec): per-file cost of open and immediate close of 100 files
 312000 trep @   0.0804 msec ( 12400.0/sec): per-file cost of open and immediate close of 100 files

  59600 reps @   0.0921 msec ( 10900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  59600 reps @   0.0838 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  59600 reps @   0.0840 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  59600 reps @   0.0839 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  59600 reps @   0.0841 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 298000 trep @   0.0856 msec ( 11700.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 342500 reps @   0.0146 msec ( 68400.0/sec): cost of stat'ing current dir
 342500 reps @   0.0146 msec ( 68700.0/sec): cost of stat'ing current dir
 342500 reps @   0.0146 msec ( 68500.0/sec): cost of stat'ing current dir
 342500 reps @   0.0146 msec ( 68400.0/sec): cost of stat'ing current dir
 342500 reps @   0.0154 msec ( 64900.0/sec): cost of stat'ing current dir
1712500 trep @   0.0148 msec ( 67800.0/sec): cost of stat'ing current dir

  78500 reps @   0.0638 msec ( 15700.0/sec): cost of stat'ing 5 component path
  78500 reps @   0.0638 msec ( 15700.0/sec): cost of stat'ing 5 component path
  78500 reps @   0.0638 msec ( 15700.0/sec): cost of stat'ing 5 component path
  78500 reps @   0.0638 msec ( 15700.0/sec): cost of stat'ing 5 component path
  78500 reps @   0.0638 msec ( 15700.0/sec): cost of stat'ing 5 component path
 392500 trep @   0.0638 msec ( 15700.0/sec): cost of stat'ing 5 component path

   2181 reps @   2.3030 msec (   434.0/sec): open directory and stat 100 files in it
   2181 reps @   2.2969 msec (   435.0/sec): open directory and stat 100 files in it
   2181 reps @   2.2121 msec (   452.0/sec): open directory and stat 100 files in it
   2181 reps @   2.1337 msec (   469.0/sec): open directory and stat 100 files in it
   2181 reps @   2.1301 msec (   469.0/sec): open directory and stat 100 files in it
  10905 trep @   2.2152 msec (   451.0/sec): open directory and stat 100 files in it

   1300 reps @   4.2351 msec (   236.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   3.8822 msec (   258.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   3.9530 msec (   253.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   4.1065 msec (   244.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1300 reps @   3.8752 msec (   258.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   6500 trep @   4.0104 msec (   249.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 359100 reps @   0.0139 msec ( 71900.0/sec): ndbm lookup into database with 900 entries
 359100 reps @   0.0140 msec ( 71500.0/sec): ndbm lookup into database with 900 entries
 359100 reps @   0.0143 msec ( 70000.0/sec): ndbm lookup into database with 900 entries
 359100 reps @   0.0140 msec ( 71300.0/sec): ndbm lookup into database with 900 entries
 359100 reps @   0.0139 msec ( 71800.0/sec): ndbm lookup into database with 900 entries
1795500 trep @   0.0140 msec ( 71300.0/sec): ndbm lookup into database with 900 entries

  66800 reps @   0.0722 msec ( 13900.0/sec): 1 byte token passing between two processes using two pipes
  66800 reps @   0.0721 msec ( 13900.0/sec): 1 byte token passing between two processes using two pipes
  66800 reps @   0.0721 msec ( 13900.0/sec): 1 byte token passing between two processes using two pipes
  66800 reps @   0.0721 msec ( 13900.0/sec): 1 byte token passing between two processes using two pipes
  66800 reps @   0.0721 msec ( 13900.0/sec): 1 byte token passing between two processes using two pipes
 334000 trep @   0.0721 msec ( 13900.0/sec): 1 byte token passing between two processes using two pipes

  58800 reps @   0.0928 msec ( 10800.0/sec): 1 kilobyte token passing between two processes using two pipes
  58800 reps @   0.0940 msec ( 10600.0/sec): 1 kilobyte token passing between two processes using two pipes
  58800 reps @   0.0939 msec ( 10700.0/sec): 1 kilobyte token passing between two processes using two pipes
  58800 reps @   0.0936 msec ( 10700.0/sec): 1 kilobyte token passing between two processes using two pipes
  58800 reps @   0.0936 msec ( 10700.0/sec): 1 kilobyte token passing between two processes using two pipes
 294000 trep @   0.0936 msec ( 10700.0/sec): 1 kilobyte token passing between two processes using two pipes

12496000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
12496000 reps @   0.0004 msec (2510000.0/sec): setjmp/longjmp
12496000 reps @   0.0004 msec (2500000.0/sec): setjmp/longjmp
12496000 reps @   0.0004 msec (2510000.0/sec): setjmp/longjmp
12496000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
62480000 trep @   0.0004 msec (2510000.0/sec): setjmp/longjmp

 256000 reps @   0.0196 msec ( 51100.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 256000 reps @   0.0196 msec ( 50900.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 256000 reps @   0.0196 msec ( 51000.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 256000 reps @   0.0195 msec ( 51200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 256000 reps @   0.0195 msec ( 51200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1280000 trep @   0.0196 msec ( 51100.0/sec): sigsetjmp/siglongjmp (saving signal mask)

    265 reps @  19.1024 msec (    52.3/sec): create/destroy client UDP-based SunRPC handle
    265 reps @  19.0986 msec (    52.4/sec): create/destroy client UDP-based SunRPC handle
    265 reps @  19.1024 msec (    52.3/sec): create/destroy client UDP-based SunRPC handle
    265 reps @  18.9402 msec (    52.8/sec): create/destroy client UDP-based SunRPC handle
    265 reps @  19.0231 msec (    52.6/sec): create/destroy client UDP-based SunRPC handle
   1325 trep @  19.0533 msec (    52.5/sec): create/destroy client UDP-based SunRPC handle

  12800 reps @   0.2850 msec (  3510.0/sec): TCP-based SunRPC to negate an integer
  12800 reps @   0.2823 msec (  3540.0/sec): TCP-based SunRPC to negate an integer
  12800 reps @   0.2825 msec (  3540.0/sec): TCP-based SunRPC to negate an integer
  12800 reps @   0.2851 msec (  3510.0/sec): TCP-based SunRPC to negate an integer
  12800 reps @   0.2831 msec (  3530.0/sec): TCP-based SunRPC to negate an integer
  64000 trep @   0.2836 msec (  3530.0/sec): TCP-based SunRPC to negate an integer

  18000 reps @   0.2669 msec (  3750.0/sec): UDP-based SunRPC to negate an integer
  18000 reps @   0.2617 msec (  3820.0/sec): UDP-based SunRPC to negate an integer
  18000 reps @   0.2616 msec (  3820.0/sec): UDP-based SunRPC to negate an integer
  18000 reps @   0.2629 msec (  3800.0/sec): UDP-based SunRPC to negate an integer
  18000 reps @   0.2631 msec (  3800.0/sec): UDP-based SunRPC to negate an integer
  90000 trep @   0.2632 msec (  3800.0/sec): UDP-based SunRPC to negate an integer

  14400 reps @   0.2849 msec (  3510.0/sec): TCP-based SunRPC no-op
  14400 reps @   0.2844 msec (  3520.0/sec): TCP-based SunRPC no-op
  14400 reps @   0.2843 msec (  3520.0/sec): TCP-based SunRPC no-op
  14400 reps @   0.2843 msec (  3520.0/sec): TCP-based SunRPC no-op
  14400 reps @   0.2845 msec (  3520.0/sec): TCP-based SunRPC no-op
  72000 trep @   0.2845 msec (  3520.0/sec): TCP-based SunRPC no-op

  18400 reps @   0.2597 msec (  3850.0/sec): UDP-based SunRPC no-op
  18400 reps @   0.2591 msec (  3860.0/sec): UDP-based SunRPC no-op
  18400 reps @   0.2603 msec (  3840.0/sec): UDP-based SunRPC no-op
  18400 reps @   0.2624 msec (  3810.0/sec): UDP-based SunRPC no-op
  18400 reps @   0.2591 msec (  3860.0/sec): UDP-based SunRPC no-op
  92000 trep @   0.2601 msec (  3840.0/sec): UDP-based SunRPC no-op

2261500 reps @   0.0022 msec (460000.0/sec): getpid system call
2261500 reps @   0.0022 msec (461000.0/sec): getpid system call
2261500 reps @   0.0022 msec (461000.0/sec): getpid system call
2261500 reps @   0.0022 msec (461000.0/sec): getpid system call
2261500 reps @   0.0022 msec (461000.0/sec): getpid system call
11307500 trep @   0.0022 msec (461000.0/sec): getpid system call

 294500 reps @   0.0171 msec ( 58600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 294500 reps @   0.0171 msec ( 58600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 294500 reps @   0.0171 msec ( 58600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 294500 reps @   0.0171 msec ( 58600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 294500 reps @   0.0171 msec ( 58600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1472500 trep @   0.0171 msec ( 58600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

1124400 reps @   0.0044 msec (225000.0/sec): gettimeofday system call
1124400 reps @   0.0044 msec (225000.0/sec): gettimeofday system call
1124400 reps @   0.0044 msec (225000.0/sec): gettimeofday system call
1124400 reps @   0.0044 msec (226000.0/sec): gettimeofday system call
1124400 reps @   0.0044 msec (226000.0/sec): gettimeofday system call
5622000 trep @   0.0044 msec (225000.0/sec): gettimeofday system call

    750 reps @   6.3100 msec (   158.0/sec): fork, child immediately exits, parent waits
    750 reps @   6.4192 msec (   156.0/sec): fork, child immediately exits, parent waits
    750 reps @   6.3544 msec (   157.0/sec): fork, child immediately exits, parent waits
    750 reps @   6.2581 msec (   160.0/sec): fork, child immediately exits, parent waits
    750 reps @   6.2862 msec (   159.0/sec): fork, child immediately exits, parent waits
   3750 trep @   6.3256 msec (   158.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1011.0400 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1011.0318 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1011.0344 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1011.0342 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1011.0302 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1011.0341 msec (    0.99/sec): sleep for one second (validates test time)

 961400 reps @   0.0052 msec (193000.0/sec): select on no fds with no timeout
 961400 reps @   0.0052 msec (194000.0/sec): select on no fds with no timeout
 961400 reps @   0.0052 msec (193000.0/sec): select on no fds with no timeout
 961400 reps @   0.0051 msec (194000.0/sec): select on no fds with no timeout
 961400 reps @   0.0052 msec (194000.0/sec): select on no fds with no timeout
4807000 trep @   0.0052 msec (193000.0/sec): select on no fds with no timeout

 283700 reps @   0.0176 msec ( 56800.0/sec): select on 16 pipe read fds with immediate timeout
 283700 reps @   0.0176 msec ( 56700.0/sec): select on 16 pipe read fds with immediate timeout
 283700 reps @   0.0177 msec ( 56500.0/sec): select on 16 pipe read fds with immediate timeout
 283700 reps @   0.0177 msec ( 56500.0/sec): select on 16 pipe read fds with immediate timeout
 283700 reps @   0.0176 msec ( 56700.0/sec): select on 16 pipe read fds with immediate timeout
1418500 trep @   0.0177 msec ( 56600.0/sec): select on 16 pipe read fds with immediate timeout

 151600 reps @   0.0330 msec ( 30300.0/sec): select on 32 pipe read fds with immediate timeout
 151600 reps @   0.0330 msec ( 30300.0/sec): select on 32 pipe read fds with immediate timeout
 151600 reps @   0.0330 msec ( 30300.0/sec): select on 32 pipe read fds with immediate timeout
 151600 reps @   0.0330 msec ( 30300.0/sec): select on 32 pipe read fds with immediate timeout
 151600 reps @   0.0330 msec ( 30300.0/sec): select on 32 pipe read fds with immediate timeout
 758000 trep @   0.0330 msec ( 30300.0/sec): select on 32 pipe read fds with immediate timeout

 280500 reps @   0.0178 msec ( 56100.0/sec): select on 16 pipe write fds with immediate timeout
 280500 reps @   0.0179 msec ( 55900.0/sec): select on 16 pipe write fds with immediate timeout
 280500 reps @   0.0179 msec ( 56000.0/sec): select on 16 pipe write fds with immediate timeout
 280500 reps @   0.0179 msec ( 56000.0/sec): select on 16 pipe write fds with immediate timeout
 280500 reps @   0.0179 msec ( 55900.0/sec): select on 16 pipe write fds with immediate timeout
1402500 trep @   0.0179 msec ( 56000.0/sec): select on 16 pipe write fds with immediate timeout

 280100 reps @   0.0179 msec ( 56000.0/sec): select on 32 pipe write fds with immediate timeout
 280100 reps @   0.0179 msec ( 56000.0/sec): select on 32 pipe write fds with immediate timeout
 280100 reps @   0.0179 msec ( 55800.0/sec): select on 32 pipe write fds with immediate timeout
 280100 reps @   0.0179 msec ( 55700.0/sec): select on 32 pipe write fds with immediate timeout
 280100 reps @   0.0179 msec ( 55700.0/sec): select on 32 pipe write fds with immediate timeout
1400500 trep @   0.0179 msec ( 55800.0/sec): select on 32 pipe write fds with immediate timeout

  40700 reps @   0.1230 msec (  8130.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  40700 reps @   0.1230 msec (  8130.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  40700 reps @   0.1229 msec (  8140.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  40700 reps @   0.1227 msec (  8150.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  40700 reps @   0.1228 msec (  8140.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 203500 trep @   0.1229 msec (  8140.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    220 reps @  15.0004 msec (    66.7/sec): popen and read from "/bin/echo hello"
    220 reps @  14.9914 msec (    66.7/sec): popen and read from "/bin/echo hello"
    220 reps @  15.0018 msec (    66.7/sec): popen and read from "/bin/echo hello"
    220 reps @  14.9974 msec (    66.7/sec): popen and read from "/bin/echo hello"
    220 reps @  15.0108 msec (    66.6/sec): popen and read from "/bin/echo hello"
   1100 trep @  15.0004 msec (    66.7/sec): popen and read from "/bin/echo hello"

  48800 reps @   0.0991 msec ( 10100.0/sec): mmap megabyte /dev/zero region 
  48800 reps @   0.0988 msec ( 10100.0/sec): mmap megabyte /dev/zero region 
  48800 reps @   0.0987 msec ( 10100.0/sec): mmap megabyte /dev/zero region 
  48800 reps @   0.0987 msec ( 10100.0/sec): mmap megabyte /dev/zero region 
  48800 reps @   0.0987 msec ( 10100.0/sec): mmap megabyte /dev/zero region 
 244000 trep @   0.0988 msec ( 10100.0/sec): mmap megabyte /dev/zero region 

    704 reps @   7.0983 msec (   141.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    704 reps @   7.0993 msec (   141.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    704 reps @   7.0984 msec (   141.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    704 reps @   7.0980 msec (   141.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    704 reps @   7.0982 msec (   141.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   3520 trep @   7.0984 msec (   141.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

   1321 reps @   3.8163 msec (   262.0/sec): copy every byte of newly mmaped megabyte file
   1321 reps @   3.8320 msec (   261.0/sec): copy every byte of newly mmaped megabyte file
   1321 reps @   3.8686 msec (   258.0/sec): copy every byte of newly mmaped megabyte file
   1321 reps @   3.9399 msec (   254.0/sec): copy every byte of newly mmaped megabyte file
   1321 reps @   3.9392 msec (   254.0/sec): copy every byte of newly mmaped megabyte file
   6605 trep @   3.8792 msec (   258.0/sec): copy every byte of newly mmaped megabyte file

     51 reps @  60.1328 msec (    16.6/sec): compress & uncompress 52 kilobyte text file of numbers
     51 reps @  60.0077 msec (    16.7/sec): compress & uncompress 52 kilobyte text file of numbers
     51 reps @  59.9849 msec (    16.7/sec): compress & uncompress 52 kilobyte text file of numbers
     51 reps @  59.9937 msec (    16.7/sec): compress & uncompress 52 kilobyte text file of numbers
     51 reps @  60.0299 msec (    16.7/sec): compress & uncompress 52 kilobyte text file of numbers
    255 trep @  60.0298 msec (    16.7/sec): compress & uncompress 52 kilobyte text file of numbers

      5 reps @ 198.7724 msec (    5.03/sec): compile ANSI C `hello world' with no special options
      5 reps @ 201.9042 msec (    4.95/sec): compile ANSI C `hello world' with no special options
      5 reps @ 198.5452 msec (    5.04/sec): compile ANSI C `hello world' with no special options
      5 reps @ 197.1624 msec (    5.07/sec): compile ANSI C `hello world' with no special options
      5 reps @ 200.2422 msec (    4.99/sec): compile ANSI C `hello world' with no special options
     25 trep @ 199.3253 msec (    5.02/sec): compile ANSI C `hello world' with no special options

     16 reps @ 283.7619 msec (    3.52/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 280.6941 msec (    3.56/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 299.9477 msec (    3.33/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 285.0061 msec (    3.51/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     16 reps @ 305.0086 msec (    3.28/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     80 trep @ 290.8837 msec (    3.44/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     16 reps @ 259.8825 msec (    3.85/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     16 reps @ 298.2649 msec (    3.35/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     16 reps @ 298.0499 msec (    3.36/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     16 reps @ 283.1293 msec (    3.53/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     16 reps @ 288.2267 msec (    3.47/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     80 trep @ 285.5106 msec (    3.50/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     16 reps @ 283.1362 msec (    3.53/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 305.6349 msec (    3.27/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 258.7569 msec (    3.86/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 313.0532 msec (    3.19/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 288.8382 msec (    3.46/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     80 trep @ 289.8839 msec (    3.45/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

     16 reps @ 284.4641 msec (    3.52/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 290.6574 msec (    3.44/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 288.3369 msec (    3.47/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 292.1904 msec (    3.42/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 292.9845 msec (    3.41/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     80 trep @ 289.7267 msec (    3.45/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     24 reps @ 286.7293 msec (    3.49/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     24 reps @ 291.6647 msec (    3.43/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     24 reps @ 284.7913 msec (    3.51/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     24 reps @ 297.2900 msec (    3.36/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     24 reps @ 296.8316 msec (    3.37/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
    120 trep @ 291.4614 msec (    3.43/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     32 reps @ 291.5225 msec (    3.43/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 292.1400 msec (    3.42/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 297.2064 msec (    3.36/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 286.1262 msec (    3.49/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 287.8425 msec (    3.47/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
    160 trep @ 290.9675 msec (    3.44/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1443.3605 msec (    0.69/sec): use dc to output first 1,000 factorials
      4 reps @ 1434.0473 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1442.7630 msec (    0.69/sec): use dc to output first 1,000 factorials
      4 reps @ 1434.8637 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1443.6537 msec (    0.69/sec): use dc to output first 1,000 factorials
     20 trep @ 1439.7377 msec (    0.69/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0041 msec (246000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0041 msec (247000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0041 msec (247000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0041 msec (247000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0041 msec (247000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0041 msec (247000.0/sec): Connect 4 game boards evaluated during alpha-beta search

 101376 reps @   0.0493 msec ( 20300.0/sec): use regcomp to compile 51 char literal, then regfree
 101376 reps @   0.0493 msec ( 20300.0/sec): use regcomp to compile 51 char literal, then regfree
 101376 reps @   0.0493 msec ( 20300.0/sec): use regcomp to compile 51 char literal, then regfree
 101376 reps @   0.0493 msec ( 20300.0/sec): use regcomp to compile 51 char literal, then regfree
 101376 reps @   0.0493 msec ( 20300.0/sec): use regcomp to compile 51 char literal, then regfree
 506880 trep @   0.0493 msec ( 20300.0/sec): use regcomp to compile 51 char literal, then regfree

      7 reps @ 827.0129 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 827.0236 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 827.0020 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 827.0024 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 826.9833 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text
     35 trep @ 827.0048 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text

 128596 reps @   0.0389 msec ( 25700.0/sec): use regcomp to compile long .* pattern, then regfree
 128596 reps @   0.0389 msec ( 25700.0/sec): use regcomp to compile long .* pattern, then regfree
 128596 reps @   0.0389 msec ( 25700.0/sec): use regcomp to compile long .* pattern, then regfree
 128596 reps @   0.0389 msec ( 25700.0/sec): use regcomp to compile long .* pattern, then regfree
 128596 reps @   0.0389 msec ( 25700.0/sec): use regcomp to compile long .* pattern, then regfree
 642980 trep @   0.0389 msec ( 25700.0/sec): use regcomp to compile long .* pattern, then regfree

      9 reps @ 568.0808 msec (    1.76/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 568.0236 msec (    1.76/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 568.0500 msec (    1.76/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 568.1140 msec (    1.76/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 568.0913 msec (    1.76/sec): use regexec with long .* pattern to search 142 kilobyte text
     45 trep @ 568.0719 msec (    1.76/sec): use regexec with long .* pattern to search 142 kilobyte text


UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: hatred
Operating system: IRIX64 6.4
Compiler version: 7.1
Instruction set: MIPS 4
Application binary interface: N32
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
CPU: MIPS R10000 Processor Chip Revision: 2.6
4 195 MHZ IP27 Processors
Main memory size: 1024 Mbytes
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Secondary unified instruction/data cache size: 4 Mbytes
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
  Disk drive: unit 3 on SCSI controller 0
  CDROM: unit 6 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 serial port: tty3
IOC3 serial port: tty4
IOC3 parallel port: plp1
Graphics board: Reality
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 7.0, number 1
IOC3 external interrupts: 1
Uptime: 3 days,  4:41
Users: 2
Load average: 1.29, 2.68, 2.12
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4206.20 MB total, 296.94 MB available)
Date: Tue Jul 22 02:41:44 1997

7642128 reps @   0.0007 msec (1530000.0/sec): 4 by 4 double matrix multiply
7642128 reps @   0.0007 msec (1530000.0/sec): 4 by 4 double matrix multiply
7642128 reps @   0.0007 msec (1530000.0/sec): 4 by 4 double matrix multiply
7642128 reps @   0.0007 msec (1530000.0/sec): 4 by 4 double matrix multiply
7642128 reps @   0.0007 msec (1530000.0/sec): 4 by 4 double matrix multiply
38210640 trep @   0.0007 msec (1530000.0/sec): 4 by 4 double matrix multiply

8083008 reps @   0.0006 msec (1620000.0/sec): 4 by 4 float matrix multiply
8083008 reps @   0.0006 msec (1620000.0/sec): 4 by 4 float matrix multiply
8083008 reps @   0.0006 msec (1620000.0/sec): 4 by 4 float matrix multiply
8083008 reps @   0.0006 msec (1620000.0/sec): 4 by 4 float matrix multiply
8083008 reps @   0.0006 msec (1620000.0/sec): 4 by 4 float matrix multiply
40415040 trep @   0.0006 msec (1620000.0/sec): 4 by 4 float matrix multiply

 320000 reps @   0.0156 msec ( 63900.0/sec): recurse 250 simple function calls and return
 320000 reps @   0.0156 msec ( 63900.0/sec): recurse 250 simple function calls and return
 320000 reps @   0.0156 msec ( 64000.0/sec): recurse 250 simple function calls and return
 320000 reps @   0.0156 msec ( 63900.0/sec): recurse 250 simple function calls and return
 320000 reps @   0.0156 msec ( 63900.0/sec): recurse 250 simple function calls and return
1600000 trep @   0.0156 msec ( 63900.0/sec): recurse 250 simple function calls and return

9431600 reps @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes
9431600 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
9431600 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
9431600 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
9431600 reps @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes
47158000 trep @   0.0005 msec (1890000.0/sec): bcopy of 256 bytes

 215560 reps @   0.0232 msec ( 43100.0/sec): bcopy of 16 kilobytes
 215560 reps @   0.0232 msec ( 43100.0/sec): bcopy of 16 kilobytes
 215560 reps @   0.0232 msec ( 43100.0/sec): bcopy of 16 kilobytes
 215560 reps @   0.0232 msec ( 43100.0/sec): bcopy of 16 kilobytes
 215560 reps @   0.0232 msec ( 43100.0/sec): bcopy of 16 kilobytes
1077800 trep @   0.0232 msec ( 43100.0/sec): bcopy of 16 kilobytes

  16952 reps @   0.2934 msec (  3410.0/sec): bcopy of 100 kilobytes
  16952 reps @   0.2935 msec (  3410.0/sec): bcopy of 100 kilobytes
  16952 reps @   0.2928 msec (  3420.0/sec): bcopy of 100 kilobytes
  16952 reps @   0.2927 msec (  3420.0/sec): bcopy of 100 kilobytes
  16952 reps @   0.2928 msec (  3420.0/sec): bcopy of 100 kilobytes
  84760 trep @   0.2930 msec (  3410.0/sec): bcopy of 100 kilobytes

   1184 reps @   4.2327 msec (   236.0/sec): bcopy of 1 megabyte
   1184 reps @   4.2316 msec (   236.0/sec): bcopy of 1 megabyte
   1184 reps @   4.2318 msec (   236.0/sec): bcopy of 1 megabyte
   1184 reps @   4.2315 msec (   236.0/sec): bcopy of 1 megabyte
   1184 reps @   4.2316 msec (   236.0/sec): bcopy of 1 megabyte
   5920 trep @   4.2318 msec (   236.0/sec): bcopy of 1 megabyte

     52 reps @  91.0428 msec (    11.0/sec): bcopy of 10 megabytes
     52 reps @  91.0217 msec (    11.0/sec): bcopy of 10 megabytes
     52 reps @  91.0149 msec (    11.0/sec): bcopy of 10 megabytes
     52 reps @  91.0651 msec (    11.0/sec): bcopy of 10 megabytes
     52 reps @  91.0911 msec (    11.0/sec): bcopy of 10 megabytes
    260 trep @  91.0471 msec (    11.0/sec): bcopy of 10 megabytes

     64 reps @  83.2079 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.2256 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.2203 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.2046 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.1997 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
    320 trep @  83.2116 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)

     64 reps @  82.7463 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.7615 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.7664 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.7616 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.7597 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
    320 trep @  82.7591 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)

     60 reps @  84.1306 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.0196 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.0490 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.0704 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.0796 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
    300 trep @  84.0698 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)

16074800 reps @   0.0003 msec (3210000.0/sec): bzero of 256 bytes
16074800 reps @   0.0003 msec (3210000.0/sec): bzero of 256 bytes
16074800 reps @   0.0003 msec (3210000.0/sec): bzero of 256 bytes
16074800 reps @   0.0003 msec (3210000.0/sec): bzero of 256 bytes
16074800 reps @   0.0003 msec (3210000.0/sec): bzero of 256 bytes
80374000 trep @   0.0003 msec (3210000.0/sec): bzero of 256 bytes

 339600 reps @   0.0146 msec ( 68400.0/sec): bzero of 16 kilobytes
 339600 reps @   0.0146 msec ( 68400.0/sec): bzero of 16 kilobytes
 339600 reps @   0.0146 msec ( 68500.0/sec): bzero of 16 kilobytes
 339600 reps @   0.0146 msec ( 68400.0/sec): bzero of 16 kilobytes
 339600 reps @   0.0146 msec ( 68500.0/sec): bzero of 16 kilobytes
1698000 trep @   0.0146 msec ( 68500.0/sec): bzero of 16 kilobytes

  23812 reps @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes
  23812 reps @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes
  23812 reps @   0.2098 msec (  4770.0/sec): bzero of 100 kilobytes
  23812 reps @   0.2098 msec (  4770.0/sec): bzero of 100 kilobytes
  23812 reps @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes
 119060 trep @   0.2099 msec (  4770.0/sec): bzero of 100 kilobytes

   2312 reps @   2.1608 msec (   463.0/sec): bzero of 1 megabyte
   2312 reps @   2.1606 msec (   463.0/sec): bzero of 1 megabyte
   2312 reps @   2.1606 msec (   463.0/sec): bzero of 1 megabyte
   2312 reps @   2.1606 msec (   463.0/sec): bzero of 1 megabyte
   2312 reps @   2.1608 msec (   463.0/sec): bzero of 1 megabyte
  11560 trep @   2.1607 msec (   463.0/sec): bzero of 1 megabyte

    112 reps @  43.4318 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4344 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4430 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4851 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4491 msec (    23.0/sec): bzero of 10 megabytes
    560 trep @  43.4487 msec (    23.0/sec): bzero of 10 megabytes

    116 reps @  43.4508 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4518 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4495 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4154 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.3924 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    580 trep @  43.4320 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)

    120 reps @  42.8818 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.8905 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9810 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9006 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9002 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    600 trep @  42.9108 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)

    116 reps @  43.1548 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1660 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1542 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1685 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1794 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    580 trep @  43.1646 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)

  11222 reps @   0.4432 msec (  2260.0/sec): bcopy then qsort 400 32-bit integers
  11222 reps @   0.4423 msec (  2260.0/sec): bcopy then qsort 400 32-bit integers
  11222 reps @   0.4436 msec (  2250.0/sec): bcopy then qsort 400 32-bit integers
  11222 reps @   0.4449 msec (  2250.0/sec): bcopy then qsort 400 32-bit integers
  11222 reps @   0.4421 msec (  2260.0/sec): bcopy then qsort 400 32-bit integers
  56110 trep @   0.4432 msec (  2260.0/sec): bcopy then qsort 400 32-bit integers

    175 reps @  28.4661 msec (    35.1/sec): bcopy then qsort 16,000 32-bit integers
    175 reps @  28.2488 msec (    35.4/sec): bcopy then qsort 16,000 32-bit integers
    175 reps @  28.2419 msec (    35.4/sec): bcopy then qsort 16,000 32-bit integers
    175 reps @  28.3453 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers
    175 reps @  28.4058 msec (    35.2/sec): bcopy then qsort 16,000 32-bit integers
    875 trep @  28.3416 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers

     39 reps @ 130.9541 msec (    7.64/sec): bcopy then qsort 64,000 32-bit integers
     39 reps @ 131.0848 msec (    7.63/sec): bcopy then qsort 64,000 32-bit integers
     39 reps @ 130.7444 msec (    7.65/sec): bcopy then qsort 64,000 32-bit integers
     39 reps @ 130.4272 msec (    7.67/sec): bcopy then qsort 64,000 32-bit integers
     39 reps @ 131.7288 msec (    7.59/sec): bcopy then qsort 64,000 32-bit integers
    195 trep @ 130.9878 msec (    7.63/sec): bcopy then qsort 64,000 32-bit integers

25180000 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25180000 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25180000 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25180000 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25180000 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
125900000 trep @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

21727500 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21727500 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21727500 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21727500 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
21727500 reps @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)
108637500 trep @   0.0002 msec (4350000.0/sec): basic double trigonometric function (sin/cos/tan)

2108000 reps @   0.0024 msec (421000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2108000 reps @   0.0024 msec (422000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2108000 reps @   0.0024 msec (420000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2108000 reps @   0.0024 msec (421000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2108000 reps @   0.0024 msec (423000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
10540000 trep @   0.0024 msec (421000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  27300 reps @   0.1833 msec (  5450.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1834 msec (  5450.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1834 msec (  5450.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1834 msec (  5450.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1834 msec (  5450.0/sec): Tower of Hanoi recursion test (10 deep)
 136500 trep @   0.1834 msec (  5450.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   5.8940 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8923 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8909 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8940 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8941 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   5.8930 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)

 659500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 659500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 659500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 659500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 659500 reps @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
3297500 trep @   0.0076 msec (132000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 189600 reps @   0.0300 msec ( 33400.0/sec): write 80 bytes to a log file
 189600 reps @   0.0328 msec ( 30500.0/sec): write 80 bytes to a log file
 189600 reps @   0.0331 msec ( 30200.0/sec): write 80 bytes to a log file
 189600 reps @   0.0332 msec ( 30200.0/sec): write 80 bytes to a log file
 189600 reps @   0.0332 msec ( 30100.0/sec): write 80 bytes to a log file
 948000 trep @   0.0324 msec ( 30800.0/sec): write 80 bytes to a log file

   1500 reps @   3.6691 msec (   273.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.5813 msec (   279.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.5975 msec (   278.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.6428 msec (   275.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.7000 msec (   270.0/sec): per-file cost of creating 100 files then unlinking them all
   7500 trep @   3.6381 msec (   275.0/sec): per-file cost of creating 100 files then unlinking them all

  54400 reps @   0.0922 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0924 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0924 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0919 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0904 msec ( 11100.0/sec): per-file cost of open and immediate close of 100 files
 272000 trep @   0.0919 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files

  53800 reps @   0.0821 msec ( 12200.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53800 reps @   0.0773 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53800 reps @   0.0773 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53800 reps @   0.0777 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53800 reps @   0.0771 msec ( 13000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 269000 trep @   0.0783 msec ( 12800.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 304000 reps @   0.0165 msec ( 60600.0/sec): cost of stat'ing current dir
 304000 reps @   0.0165 msec ( 60500.0/sec): cost of stat'ing current dir
 304000 reps @   0.0165 msec ( 60800.0/sec): cost of stat'ing current dir
 304000 reps @   0.0165 msec ( 60700.0/sec): cost of stat'ing current dir
 304000 reps @   0.0170 msec ( 58800.0/sec): cost of stat'ing current dir
1520000 trep @   0.0166 msec ( 60300.0/sec): cost of stat'ing current dir

  67000 reps @   0.0747 msec ( 13400.0/sec): cost of stat'ing 5 component path
  67000 reps @   0.0746 msec ( 13400.0/sec): cost of stat'ing 5 component path
  67000 reps @   0.0738 msec ( 13600.0/sec): cost of stat'ing 5 component path
  67000 reps @   0.0738 msec ( 13600.0/sec): cost of stat'ing 5 component path
  67000 reps @   0.0738 msec ( 13600.0/sec): cost of stat'ing 5 component path
 335000 trep @   0.0741 msec ( 13500.0/sec): cost of stat'ing 5 component path

   1958 reps @   2.5605 msec (   391.0/sec): open directory and stat 100 files in it
   1958 reps @   2.5549 msec (   391.0/sec): open directory and stat 100 files in it
   1958 reps @   2.5600 msec (   391.0/sec): open directory and stat 100 files in it
   1958 reps @   2.4501 msec (   408.0/sec): open directory and stat 100 files in it
   1958 reps @   2.3588 msec (   424.0/sec): open directory and stat 100 files in it
   9790 trep @   2.4969 msec (   401.0/sec): open directory and stat 100 files in it

   1500 reps @   3.5977 msec (   278.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.4850 msec (   287.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.5208 msec (   284.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.5249 msec (   284.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.5669 msec (   280.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   7500 trep @   3.5391 msec (   283.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 390600 reps @   0.0128 msec ( 78100.0/sec): ndbm lookup into database with 900 entries
 390600 reps @   0.0128 msec ( 78100.0/sec): ndbm lookup into database with 900 entries
 390600 reps @   0.0130 msec ( 77200.0/sec): ndbm lookup into database with 900 entries
 390600 reps @   0.0128 msec ( 78000.0/sec): ndbm lookup into database with 900 entries
 390600 reps @   0.0128 msec ( 78100.0/sec): ndbm lookup into database with 900 entries
1953000 trep @   0.0128 msec ( 77900.0/sec): ndbm lookup into database with 900 entries

  47600 reps @   0.1193 msec (  8380.0/sec): 1 byte token passing between two processes using two pipes
  47600 reps @   0.1204 msec (  8300.0/sec): 1 byte token passing between two processes using two pipes
  47600 reps @   0.1171 msec (  8540.0/sec): 1 byte token passing between two processes using two pipes
  47600 reps @   0.1197 msec (  8360.0/sec): 1 byte token passing between two processes using two pipes
  47600 reps @   0.1197 msec (  8360.0/sec): 1 byte token passing between two processes using two pipes
 238000 trep @   0.1192 msec (  8390.0/sec): 1 byte token passing between two processes using two pipes

  45600 reps @   0.1342 msec (  7450.0/sec): 1 kilobyte token passing between two processes using two pipes
  45600 reps @   0.1348 msec (  7420.0/sec): 1 kilobyte token passing between two processes using two pipes
  45600 reps @   0.1337 msec (  7480.0/sec): 1 kilobyte token passing between two processes using two pipes
  45600 reps @   0.1413 msec (  7080.0/sec): 1 kilobyte token passing between two processes using two pipes
  45600 reps @   0.1414 msec (  7070.0/sec): 1 kilobyte token passing between two processes using two pipes
 228000 trep @   0.1371 msec (  7290.0/sec): 1 kilobyte token passing between two processes using two pipes

12564000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
12564000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
12564000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
12564000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
12564000 reps @   0.0004 msec (2520000.0/sec): setjmp/longjmp
62820000 trep @   0.0004 msec (2520000.0/sec): setjmp/longjmp

 248000 reps @   0.0203 msec ( 49300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0204 msec ( 49100.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1240000 trep @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   5625 reps @   0.8714 msec (  1150.0/sec): create/destroy client UDP-based SunRPC handle
   5625 reps @   0.8896 msec (  1120.0/sec): create/destroy client UDP-based SunRPC handle
   5625 reps @   0.8836 msec (  1130.0/sec): create/destroy client UDP-based SunRPC handle
   5625 reps @   0.8840 msec (  1130.0/sec): create/destroy client UDP-based SunRPC handle
   5625 reps @   0.8647 msec (  1160.0/sec): create/destroy client UDP-based SunRPC handle
  28125 trep @   0.8787 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle

  12000 reps @   0.4312 msec (  2320.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4317 msec (  2320.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4315 msec (  2320.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4332 msec (  2310.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4340 msec (  2300.0/sec): TCP-based SunRPC to negate an integer
  60000 trep @   0.4323 msec (  2310.0/sec): TCP-based SunRPC to negate an integer

  11600 reps @   0.4267 msec (  2340.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4247 msec (  2350.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4403 msec (  2270.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4409 msec (  2270.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4404 msec (  2270.0/sec): UDP-based SunRPC to negate an integer
  58000 trep @   0.4346 msec (  2300.0/sec): UDP-based SunRPC to negate an integer

  15200 reps @   0.4239 msec (  2360.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.4293 msec (  2330.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.4282 msec (  2340.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.4304 msec (  2320.0/sec): TCP-based SunRPC no-op
  15200 reps @   0.4308 msec (  2320.0/sec): TCP-based SunRPC no-op
  76000 trep @   0.4285 msec (  2330.0/sec): TCP-based SunRPC no-op

  10800 reps @   0.4388 msec (  2280.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4175 msec (  2400.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4402 msec (  2270.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4399 msec (  2270.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4401 msec (  2270.0/sec): UDP-based SunRPC no-op
  54000 trep @   0.4353 msec (  2300.0/sec): UDP-based SunRPC no-op

2306000 reps @   0.0022 msec (461000.0/sec): getpid system call
2306000 reps @   0.0022 msec (461000.0/sec): getpid system call
2306000 reps @   0.0022 msec (461000.0/sec): getpid system call
2306000 reps @   0.0022 msec (461000.0/sec): getpid system call
2306000 reps @   0.0022 msec (461000.0/sec): getpid system call
11530000 trep @   0.0022 msec (461000.0/sec): getpid system call

 278000 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 278000 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 278000 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 278000 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 278000 reps @   0.0180 msec ( 55600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1390000 trep @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 702800 reps @   0.0071 msec (141000.0/sec): gettimeofday system call
 702800 reps @   0.0071 msec (141000.0/sec): gettimeofday system call
 702800 reps @   0.0071 msec (141000.0/sec): gettimeofday system call
 702800 reps @   0.0071 msec (141000.0/sec): gettimeofday system call
 702800 reps @   0.0071 msec (141000.0/sec): gettimeofday system call
3514000 trep @   0.0071 msec (141000.0/sec): gettimeofday system call

    650 reps @   7.8912 msec (   127.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.8505 msec (   127.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.8136 msec (   128.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.8735 msec (   127.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.8865 msec (   127.0/sec): fork, child immediately exits, parent waits
   3250 trep @   7.8631 msec (   127.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.5854 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5804 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5816 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5822 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5812 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.5822 msec (    0.99/sec): sleep for one second (validates test time)

 907700 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 907700 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 907700 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 907700 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 907700 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
4538500 trep @   0.0055 msec (181000.0/sec): select on no fds with no timeout

 219400 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
 219400 reps @   0.0229 msec ( 43700.0/sec): select on 16 pipe read fds with immediate timeout
 219400 reps @   0.0229 msec ( 43700.0/sec): select on 16 pipe read fds with immediate timeout
 219400 reps @   0.0229 msec ( 43700.0/sec): select on 16 pipe read fds with immediate timeout
 219400 reps @   0.0229 msec ( 43700.0/sec): select on 16 pipe read fds with immediate timeout
1097000 trep @   0.0229 msec ( 43800.0/sec): select on 16 pipe read fds with immediate timeout

 119200 reps @   0.0420 msec ( 23800.0/sec): select on 32 pipe read fds with immediate timeout
 119200 reps @   0.0420 msec ( 23800.0/sec): select on 32 pipe read fds with immediate timeout
 119200 reps @   0.0420 msec ( 23800.0/sec): select on 32 pipe read fds with immediate timeout
 119200 reps @   0.0420 msec ( 23800.0/sec): select on 32 pipe read fds with immediate timeout
 119200 reps @   0.0420 msec ( 23800.0/sec): select on 32 pipe read fds with immediate timeout
 596000 trep @   0.0420 msec ( 23800.0/sec): select on 32 pipe read fds with immediate timeout

 215600 reps @   0.0232 msec ( 43100.0/sec): select on 16 pipe write fds with immediate timeout
 215600 reps @   0.0232 msec ( 43100.0/sec): select on 16 pipe write fds with immediate timeout
 215600 reps @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout
 215600 reps @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout
 215600 reps @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout
1078000 trep @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout

 215100 reps @   0.0233 msec ( 43000.0/sec): select on 32 pipe write fds with immediate timeout
 215100 reps @   0.0232 msec ( 43000.0/sec): select on 32 pipe write fds with immediate timeout
 215100 reps @   0.0232 msec ( 43000.0/sec): select on 32 pipe write fds with immediate timeout
 215100 reps @   0.0232 msec ( 43000.0/sec): select on 32 pipe write fds with immediate timeout
 215100 reps @   0.0233 msec ( 43000.0/sec): select on 32 pipe write fds with immediate timeout
1075500 trep @   0.0233 msec ( 43000.0/sec): select on 32 pipe write fds with immediate timeout

  30900 reps @   0.1619 msec (  6180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  30900 reps @   0.1618 msec (  6180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  30900 reps @   0.1618 msec (  6180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  30900 reps @   0.1618 msec (  6180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  30900 reps @   0.1622 msec (  6160.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 154500 trep @   0.1619 msec (  6180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    330 reps @  15.1230 msec (    66.1/sec): popen and read from "/bin/echo hello"
    330 reps @  15.0720 msec (    66.3/sec): popen and read from "/bin/echo hello"
    330 reps @  15.1663 msec (    65.9/sec): popen and read from "/bin/echo hello"
    330 reps @  15.1349 msec (    66.1/sec): popen and read from "/bin/echo hello"
    330 reps @  15.1693 msec (    65.9/sec): popen and read from "/bin/echo hello"
   1650 trep @  15.1331 msec (    66.1/sec): popen and read from "/bin/echo hello"

  41000 reps @   0.1217 msec (  8220.0/sec): mmap megabyte /dev/zero region 
  41000 reps @   0.1218 msec (  8210.0/sec): mmap megabyte /dev/zero region 
  41000 reps @   0.1219 msec (  8210.0/sec): mmap megabyte /dev/zero region 
  41000 reps @   0.1219 msec (  8210.0/sec): mmap megabyte /dev/zero region 
  41000 reps @   0.1219 msec (  8210.0/sec): mmap megabyte /dev/zero region 
 205000 trep @   0.1218 msec (  8210.0/sec): mmap megabyte /dev/zero region 

    808 reps @   6.1211 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    808 reps @   6.1113 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    808 reps @   6.1147 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    808 reps @   6.1165 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    808 reps @   6.1162 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   4040 trep @   6.1159 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

   1408 reps @   3.5478 msec (   282.0/sec): copy every byte of newly mmaped megabyte file
   1408 reps @   3.5535 msec (   281.0/sec): copy every byte of newly mmaped megabyte file
   1408 reps @   3.5520 msec (   282.0/sec): copy every byte of newly mmaped megabyte file
   1408 reps @   3.5543 msec (   281.0/sec): copy every byte of newly mmaped megabyte file
   1408 reps @   3.6618 msec (   273.0/sec): copy every byte of newly mmaped megabyte file
   7040 trep @   3.5739 msec (   280.0/sec): copy every byte of newly mmaped megabyte file

     87 reps @  56.7628 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     87 reps @  56.9774 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     87 reps @  56.9831 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     87 reps @  56.8189 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     87 reps @  56.6478 msec (    17.7/sec): compress & uncompress 52 kilobyte text file of numbers
    435 trep @  56.8380 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers

     31 reps @ 180.2899 msec (    5.55/sec): compile ANSI C `hello world' with no special options
     31 reps @ 180.2410 msec (    5.55/sec): compile ANSI C `hello world' with no special options
     31 reps @ 179.1340 msec (    5.58/sec): compile ANSI C `hello world' with no special options
     31 reps @ 183.2475 msec (    5.46/sec): compile ANSI C `hello world' with no special options
     31 reps @ 179.7788 msec (    5.56/sec): compile ANSI C `hello world' with no special options
    155 trep @ 180.5383 msec (    5.54/sec): compile ANSI C `hello world' with no special options

     31 reps @ 139.6355 msec (    7.16/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     31 reps @ 147.4393 msec (    6.78/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     31 reps @ 142.9762 msec (    6.99/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     31 reps @ 143.9447 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     31 reps @ 145.1146 msec (    6.89/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    155 trep @ 143.8221 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     36 reps @ 141.4287 msec (    7.07/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     36 reps @ 146.6062 msec (    6.82/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     36 reps @ 142.4169 msec (    7.02/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     36 reps @ 148.2825 msec (    6.74/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     36 reps @ 142.8767 msec (    7.00/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
    180 trep @ 144.3222 msec (    6.93/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     28 reps @ 139.3077 msec (    7.18/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 152.9304 msec (    6.54/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 132.0436 msec (    7.57/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 148.0148 msec (    6.76/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 149.4951 msec (    6.69/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
    140 trep @ 144.3583 msec (    6.93/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

     48 reps @ 147.9927 msec (    6.76/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     48 reps @ 140.3665 msec (    7.12/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     48 reps @ 147.9087 msec (    6.76/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     48 reps @ 143.6089 msec (    6.96/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     48 reps @ 149.7921 msec (    6.68/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
    240 trep @ 145.9338 msec (    6.85/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     36 reps @ 142.7551 msec (    7.01/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 144.4712 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 141.0582 msec (    7.09/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 144.4177 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 149.5970 msec (    6.68/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
    180 trep @ 144.4598 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     48 reps @ 146.8921 msec (    6.81/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 142.8131 msec (    7.00/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 144.5779 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 145.7297 msec (    6.86/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 147.2359 msec (    6.79/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
    240 trep @ 145.4497 msec (    6.88/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1422.9582 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1421.9207 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1421.8050 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1420.9595 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.8080 msec (    0.70/sec): use dc to output first 1,000 factorials
     20 trep @ 1422.0903 msec (    0.70/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0033 msec (304000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0033 msec (305000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0033 msec (305000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0033 msec (305000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0033 msec (305000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0033 msec (305000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  92868 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92868 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92868 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92868 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92868 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
 464340 trep @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree

      5 reps @ 1054.6806 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1054.8420 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1054.2614 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1054.0040 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1054.2204 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
     25 trep @ 1054.4017 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text

 123408 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123408 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123408 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123408 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123408 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 617040 trep @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree

     10 reps @ 536.7913 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 536.5237 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 537.1680 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 536.4626 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 537.1846 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     50 trep @ 536.8260 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text


UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: hatred
Operating system: IRIX64 6.4
Compiler version: unknown
Instruction set: MIPS 2
Application binary interface: O32
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
CPU: MIPS R10000 Processor Chip Revision: 2.6
4 195 MHZ IP27 Processors
Main memory size: 1024 Mbytes
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Secondary unified instruction/data cache size: 4 Mbytes
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
  Disk drive: unit 3 on SCSI controller 0
  CDROM: unit 6 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 serial port: tty3
IOC3 serial port: tty4
IOC3 parallel port: plp1
Graphics board: Reality
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 7.0, number 1
IOC3 external interrupts: 1
Uptime: 3 days,  5:14
Users: 2
Load average: 1.30, 2.72, 2.15
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4206.20 MB total, 296.89 MB available)
Date: Tue Jul 22 03:15:02 1997

5494968 reps @   0.0009 msec (1100000.0/sec): 4 by 4 double matrix multiply
5494968 reps @   0.0009 msec (1100000.0/sec): 4 by 4 double matrix multiply
5494968 reps @   0.0009 msec (1100000.0/sec): 4 by 4 double matrix multiply
5494968 reps @   0.0009 msec (1100000.0/sec): 4 by 4 double matrix multiply
5494968 reps @   0.0009 msec (1100000.0/sec): 4 by 4 double matrix multiply
27474840 trep @   0.0009 msec (1100000.0/sec): 4 by 4 double matrix multiply

3080508 reps @   0.0016 msec (616000.0/sec): 4 by 4 float matrix multiply
3080508 reps @   0.0016 msec (616000.0/sec): 4 by 4 float matrix multiply
3080508 reps @   0.0016 msec (616000.0/sec): 4 by 4 float matrix multiply
3080508 reps @   0.0016 msec (616000.0/sec): 4 by 4 float matrix multiply
3080508 reps @   0.0016 msec (616000.0/sec): 4 by 4 float matrix multiply
15402540 trep @   0.0016 msec (616000.0/sec): 4 by 4 float matrix multiply

1867500 reps @   0.0027 msec (373000.0/sec): recurse 250 simple function calls and return
1867500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
1867500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
1867500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
1867500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
9337500 trep @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return

5556400 reps @   0.0009 msec (1110000.0/sec): bcopy of 256 bytes
5556400 reps @   0.0009 msec (1110000.0/sec): bcopy of 256 bytes
5556400 reps @   0.0009 msec (1110000.0/sec): bcopy of 256 bytes
5556400 reps @   0.0009 msec (1110000.0/sec): bcopy of 256 bytes
5556400 reps @   0.0009 msec (1110000.0/sec): bcopy of 256 bytes
27782000 trep @   0.0009 msec (1110000.0/sec): bcopy of 256 bytes

  85680 reps @   0.0583 msec ( 17200.0/sec): bcopy of 16 kilobytes
  85680 reps @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes
  85680 reps @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes
  85680 reps @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes
  85680 reps @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes
 428400 trep @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes

  13332 reps @   0.3735 msec (  2680.0/sec): bcopy of 100 kilobytes
  13332 reps @   0.3735 msec (  2680.0/sec): bcopy of 100 kilobytes
  13332 reps @   0.3734 msec (  2680.0/sec): bcopy of 100 kilobytes
  13332 reps @   0.3733 msec (  2680.0/sec): bcopy of 100 kilobytes
  13332 reps @   0.3734 msec (  2680.0/sec): bcopy of 100 kilobytes
  66660 trep @   0.3734 msec (  2680.0/sec): bcopy of 100 kilobytes

    828 reps @   6.0544 msec (   165.0/sec): bcopy of 1 megabyte
    828 reps @   6.0543 msec (   165.0/sec): bcopy of 1 megabyte
    828 reps @   6.0540 msec (   165.0/sec): bcopy of 1 megabyte
    828 reps @   6.0539 msec (   165.0/sec): bcopy of 1 megabyte
    828 reps @   6.0541 msec (   165.0/sec): bcopy of 1 megabyte
   4140 trep @   6.0541 msec (   165.0/sec): bcopy of 1 megabyte

     36 reps @ 134.7332 msec (    7.42/sec): bcopy of 10 megabytes
     36 reps @ 134.7080 msec (    7.42/sec): bcopy of 10 megabytes
     36 reps @ 134.7467 msec (    7.42/sec): bcopy of 10 megabytes
     36 reps @ 134.7845 msec (    7.42/sec): bcopy of 10 megabytes
     36 reps @ 134.7851 msec (    7.42/sec): bcopy of 10 megabytes
    180 trep @ 134.7515 msec (    7.42/sec): bcopy of 10 megabytes

     48 reps @ 111.4795 msec (    8.97/sec): bcopy of 10 megabytes (cacheline-aligned)
     48 reps @ 111.4194 msec (    8.98/sec): bcopy of 10 megabytes (cacheline-aligned)
     48 reps @ 111.4279 msec (    8.97/sec): bcopy of 10 megabytes (cacheline-aligned)
     48 reps @ 112.0932 msec (    8.92/sec): bcopy of 10 megabytes (cacheline-aligned)
     48 reps @ 111.2672 msec (    8.99/sec): bcopy of 10 megabytes (cacheline-aligned)
    240 trep @ 111.5374 msec (    8.97/sec): bcopy of 10 megabytes (cacheline-aligned)

     48 reps @ 107.2257 msec (    9.33/sec): bcopy of 10 megabytes (word mis-aligned)
     48 reps @ 107.1843 msec (    9.33/sec): bcopy of 10 megabytes (word mis-aligned)
     48 reps @ 107.1852 msec (    9.33/sec): bcopy of 10 megabytes (word mis-aligned)
     48 reps @ 107.1691 msec (    9.33/sec): bcopy of 10 megabytes (word mis-aligned)
     48 reps @ 107.1786 msec (    9.33/sec): bcopy of 10 megabytes (word mis-aligned)
    240 trep @ 107.1886 msec (    9.33/sec): bcopy of 10 megabytes (word mis-aligned)

     44 reps @ 118.8989 msec (    8.41/sec): bcopy of 10 megabytes (dword mis-aligned)
     44 reps @ 119.6798 msec (    8.36/sec): bcopy of 10 megabytes (dword mis-aligned)
     44 reps @ 118.9054 msec (    8.41/sec): bcopy of 10 megabytes (dword mis-aligned)
     44 reps @ 118.9410 msec (    8.41/sec): bcopy of 10 megabytes (dword mis-aligned)
     44 reps @ 118.9354 msec (    8.41/sec): bcopy of 10 megabytes (dword mis-aligned)
    220 trep @ 119.0721 msec (    8.40/sec): bcopy of 10 megabytes (dword mis-aligned)

10729600 reps @   0.0005 msec (2150000.0/sec): bzero of 256 bytes
10729600 reps @   0.0005 msec (2150000.0/sec): bzero of 256 bytes
10729600 reps @   0.0005 msec (2150000.0/sec): bzero of 256 bytes
10729600 reps @   0.0005 msec (2150000.0/sec): bzero of 256 bytes
10729600 reps @   0.0005 msec (2150000.0/sec): bzero of 256 bytes
53648000 trep @   0.0005 msec (2150000.0/sec): bzero of 256 bytes

 232080 reps @   0.0215 msec ( 46400.0/sec): bzero of 16 kilobytes
 232080 reps @   0.0215 msec ( 46400.0/sec): bzero of 16 kilobytes
 232080 reps @   0.0215 msec ( 46400.0/sec): bzero of 16 kilobytes
 232080 reps @   0.0215 msec ( 46400.0/sec): bzero of 16 kilobytes
 232080 reps @   0.0215 msec ( 46400.0/sec): bzero of 16 kilobytes
1160400 trep @   0.0215 msec ( 46400.0/sec): bzero of 16 kilobytes

  19868 reps @   0.2516 msec (  3970.0/sec): bzero of 100 kilobytes
  19868 reps @   0.2516 msec (  3970.0/sec): bzero of 100 kilobytes
  19868 reps @   0.2515 msec (  3980.0/sec): bzero of 100 kilobytes
  19868 reps @   0.2517 msec (  3970.0/sec): bzero of 100 kilobytes
  19868 reps @   0.2517 msec (  3970.0/sec): bzero of 100 kilobytes
  99340 trep @   0.2516 msec (  3970.0/sec): bzero of 100 kilobytes

   2152 reps @   2.3252 msec (   430.0/sec): bzero of 1 megabyte
   2152 reps @   2.3344 msec (   428.0/sec): bzero of 1 megabyte
   2152 reps @   2.3355 msec (   428.0/sec): bzero of 1 megabyte
   2152 reps @   2.3351 msec (   428.0/sec): bzero of 1 megabyte
   2152 reps @   2.3348 msec (   428.0/sec): bzero of 1 megabyte
  10760 trep @   2.3330 msec (   429.0/sec): bzero of 1 megabyte

     92 reps @  55.2230 msec (    18.1/sec): bzero of 10 megabytes
     92 reps @  55.3108 msec (    18.1/sec): bzero of 10 megabytes
     92 reps @  55.5645 msec (    18.0/sec): bzero of 10 megabytes
     92 reps @  55.3228 msec (    18.1/sec): bzero of 10 megabytes
     92 reps @  55.3264 msec (    18.1/sec): bzero of 10 megabytes
    460 trep @  55.3495 msec (    18.1/sec): bzero of 10 megabytes

     88 reps @  59.6399 msec (    16.8/sec): bzero of 10 megabytes (cacheline-aligned)
     88 reps @  59.6669 msec (    16.8/sec): bzero of 10 megabytes (cacheline-aligned)
     88 reps @  59.6963 msec (    16.8/sec): bzero of 10 megabytes (cacheline-aligned)
     88 reps @  59.6420 msec (    16.8/sec): bzero of 10 megabytes (cacheline-aligned)
     88 reps @  59.6640 msec (    16.8/sec): bzero of 10 megabytes (cacheline-aligned)
    440 trep @  59.6618 msec (    16.8/sec): bzero of 10 megabytes (cacheline-aligned)

     88 reps @  58.9699 msec (    17.0/sec): bzero of 10 megabytes (word mis-aligned)
     88 reps @  58.7454 msec (    17.0/sec): bzero of 10 megabytes (word mis-aligned)
     88 reps @  58.6910 msec (    17.0/sec): bzero of 10 megabytes (word mis-aligned)
     88 reps @  58.7005 msec (    17.0/sec): bzero of 10 megabytes (word mis-aligned)
     88 reps @  58.7001 msec (    17.0/sec): bzero of 10 megabytes (word mis-aligned)
    440 trep @  58.7614 msec (    17.0/sec): bzero of 10 megabytes (word mis-aligned)

     84 reps @  60.8336 msec (    16.4/sec): bzero of 10 megabytes (dword mis-aligned)
     84 reps @  60.7826 msec (    16.5/sec): bzero of 10 megabytes (dword mis-aligned)
     84 reps @  60.8470 msec (    16.4/sec): bzero of 10 megabytes (dword mis-aligned)
     84 reps @  60.8627 msec (    16.4/sec): bzero of 10 megabytes (dword mis-aligned)
     84 reps @  60.8127 msec (    16.4/sec): bzero of 10 megabytes (dword mis-aligned)
    420 trep @  60.8277 msec (    16.4/sec): bzero of 10 megabytes (dword mis-aligned)

  11494 reps @   0.4344 msec (  2300.0/sec): bcopy then qsort 400 32-bit integers
  11494 reps @   0.4344 msec (  2300.0/sec): bcopy then qsort 400 32-bit integers
  11494 reps @   0.4344 msec (  2300.0/sec): bcopy then qsort 400 32-bit integers
  11494 reps @   0.4342 msec (  2300.0/sec): bcopy then qsort 400 32-bit integers
  11494 reps @   0.4342 msec (  2300.0/sec): bcopy then qsort 400 32-bit integers
  57470 trep @   0.4344 msec (  2300.0/sec): bcopy then qsort 400 32-bit integers

    177 reps @  28.2995 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.3001 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.3140 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.3004 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.3004 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers
    885 trep @  28.3029 msec (    35.3/sec): bcopy then qsort 16,000 32-bit integers

     38 reps @ 131.4645 msec (    7.61/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 131.3427 msec (    7.61/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 131.3102 msec (    7.62/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 131.3808 msec (    7.61/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 131.3992 msec (    7.61/sec): bcopy then qsort 64,000 32-bit integers
    190 trep @ 131.3795 msec (    7.61/sec): bcopy then qsort 64,000 32-bit integers

10470000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10470000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10470000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10470000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10470000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
52350000 trep @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

7785000 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7785000 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7785000 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7785000 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7785000 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
38925000 trep @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)

1749500 reps @   0.0029 msec (350000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1749500 reps @   0.0029 msec (350000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1749500 reps @   0.0029 msec (348000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1749500 reps @   0.0029 msec (346000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1749500 reps @   0.0029 msec (347000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
8747500 trep @   0.0029 msec (348000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  23100 reps @   0.2189 msec (  4570.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2189 msec (  4570.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2189 msec (  4570.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2189 msec (  4570.0/sec): Tower of Hanoi recursion test (10 deep)
  23100 reps @   0.2189 msec (  4570.0/sec): Tower of Hanoi recursion test (10 deep)
 115500 trep @   0.2189 msec (  4570.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   6.8318 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8331 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8352 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8350 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.8352 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   6.8341 msec (   146.0/sec): Tower of Hanoi recursion test (15 deep)

 666000 reps @   0.0075 msec (133000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 666000 reps @   0.0075 msec (133000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 666000 reps @   0.0075 msec (133000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 666000 reps @   0.0075 msec (133000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 666000 reps @   0.0075 msec (133000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
3330000 trep @   0.0075 msec (133000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 189000 reps @   0.0268 msec ( 37300.0/sec): write 80 bytes to a log file
 189000 reps @   0.0269 msec ( 37200.0/sec): write 80 bytes to a log file
 189000 reps @   0.0273 msec ( 36700.0/sec): write 80 bytes to a log file
 189000 reps @   0.0274 msec ( 36500.0/sec): write 80 bytes to a log file
 189000 reps @   0.0311 msec ( 32200.0/sec): write 80 bytes to a log file
 945000 trep @   0.0279 msec ( 35800.0/sec): write 80 bytes to a log file

   1200 reps @   4.9588 msec (   202.0/sec): per-file cost of creating 100 files then unlinking them all
   1200 reps @   4.8168 msec (   208.0/sec): per-file cost of creating 100 files then unlinking them all
   1200 reps @   4.8212 msec (   207.0/sec): per-file cost of creating 100 files then unlinking them all
   1200 reps @   4.7814 msec (   209.0/sec): per-file cost of creating 100 files then unlinking them all
   1200 reps @   4.8134 msec (   208.0/sec): per-file cost of creating 100 files then unlinking them all
   6000 trep @   4.8383 msec (   207.0/sec): per-file cost of creating 100 files then unlinking them all

  54400 reps @   0.0919 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0919 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0919 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0918 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files
  54400 reps @   0.0919 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files
 272000 trep @   0.0919 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files

  50800 reps @   0.0817 msec ( 12200.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  50800 reps @   0.0770 msec ( 13000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  50800 reps @   0.0785 msec ( 12700.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  50800 reps @   0.0779 msec ( 12800.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  50800 reps @   0.0776 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 254000 trep @   0.0786 msec ( 12700.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 309500 reps @   0.0162 msec ( 61700.0/sec): cost of stat'ing current dir
 309500 reps @   0.0164 msec ( 60900.0/sec): cost of stat'ing current dir
 309500 reps @   0.0178 msec ( 56300.0/sec): cost of stat'ing current dir
 309500 reps @   0.0177 msec ( 56400.0/sec): cost of stat'ing current dir
 309500 reps @   0.0163 msec ( 61200.0/sec): cost of stat'ing current dir
1547500 trep @   0.0169 msec ( 59200.0/sec): cost of stat'ing current dir

  68500 reps @   0.0735 msec ( 13600.0/sec): cost of stat'ing 5 component path
  68500 reps @   0.0735 msec ( 13600.0/sec): cost of stat'ing 5 component path
  68500 reps @   0.0748 msec ( 13400.0/sec): cost of stat'ing 5 component path
  68500 reps @   0.0765 msec ( 13100.0/sec): cost of stat'ing 5 component path
  68500 reps @   0.0765 msec ( 13100.0/sec): cost of stat'ing 5 component path
 342500 trep @   0.0750 msec ( 13300.0/sec): cost of stat'ing 5 component path

   2033 reps @   2.4614 msec (   406.0/sec): open directory and stat 100 files in it
   2033 reps @   2.4628 msec (   406.0/sec): open directory and stat 100 files in it
   2033 reps @   2.4633 msec (   406.0/sec): open directory and stat 100 files in it
   2033 reps @   2.4652 msec (   406.0/sec): open directory and stat 100 files in it
   2033 reps @   2.4648 msec (   406.0/sec): open directory and stat 100 files in it
  10165 trep @   2.4635 msec (   406.0/sec): open directory and stat 100 files in it

   1500 reps @   3.7469 msec (   267.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.4854 msec (   287.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.4807 msec (   287.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.5051 msec (   285.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.4590 msec (   289.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   7500 trep @   3.5354 msec (   283.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 440100 reps @   0.0114 msec ( 87900.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0114 msec ( 87900.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0115 msec ( 86800.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0114 msec ( 87400.0/sec): ndbm lookup into database with 900 entries
 440100 reps @   0.0114 msec ( 87400.0/sec): ndbm lookup into database with 900 entries
2200500 trep @   0.0114 msec ( 87500.0/sec): ndbm lookup into database with 900 entries

  42000 reps @   0.1195 msec (  8370.0/sec): 1 byte token passing between two processes using two pipes
  42000 reps @   0.1201 msec (  8320.0/sec): 1 byte token passing between two processes using two pipes
  42000 reps @   0.1199 msec (  8340.0/sec): 1 byte token passing between two processes using two pipes
  42000 reps @   0.1197 msec (  8350.0/sec): 1 byte token passing between two processes using two pipes
  42000 reps @   0.1197 msec (  8350.0/sec): 1 byte token passing between two processes using two pipes
 210000 trep @   0.1198 msec (  8350.0/sec): 1 byte token passing between two processes using two pipes

  40000 reps @   0.1324 msec (  7550.0/sec): 1 kilobyte token passing between two processes using two pipes
  40000 reps @   0.1323 msec (  7560.0/sec): 1 kilobyte token passing between two processes using two pipes
  40000 reps @   0.1323 msec (  7560.0/sec): 1 kilobyte token passing between two processes using two pipes
  40000 reps @   0.1323 msec (  7560.0/sec): 1 kilobyte token passing between two processes using two pipes
  40000 reps @   0.1400 msec (  7140.0/sec): 1 kilobyte token passing between two processes using two pipes
 200000 trep @   0.1339 msec (  7470.0/sec): 1 kilobyte token passing between two processes using two pipes

9540000 reps @   0.0005 msec (1910000.0/sec): setjmp/longjmp
9540000 reps @   0.0005 msec (1910000.0/sec): setjmp/longjmp
9540000 reps @   0.0005 msec (1910000.0/sec): setjmp/longjmp
9540000 reps @   0.0005 msec (1910000.0/sec): setjmp/longjmp
9540000 reps @   0.0005 msec (1910000.0/sec): setjmp/longjmp
47700000 trep @   0.0005 msec (1910000.0/sec): setjmp/longjmp

 252000 reps @   0.0199 msec ( 50200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0199 msec ( 50200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0199 msec ( 50200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0199 msec ( 50200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 252000 reps @   0.0199 msec ( 50200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1260000 trep @   0.0199 msec ( 50200.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   5655 reps @   0.8782 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle
   5655 reps @   0.8615 msec (  1160.0/sec): create/destroy client UDP-based SunRPC handle
   5655 reps @   0.8758 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle
   5655 reps @   0.8888 msec (  1130.0/sec): create/destroy client UDP-based SunRPC handle
   5655 reps @   0.8901 msec (  1120.0/sec): create/destroy client UDP-based SunRPC handle
  28275 trep @   0.8789 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle

  12000 reps @   0.4250 msec (  2350.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4295 msec (  2330.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4298 msec (  2330.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4302 msec (  2320.0/sec): TCP-based SunRPC to negate an integer
  12000 reps @   0.4357 msec (  2300.0/sec): TCP-based SunRPC to negate an integer
  60000 trep @   0.4300 msec (  2330.0/sec): TCP-based SunRPC to negate an integer

  12400 reps @   0.4266 msec (  2340.0/sec): UDP-based SunRPC to negate an integer
  12400 reps @   0.4166 msec (  2400.0/sec): UDP-based SunRPC to negate an integer
  12400 reps @   0.4404 msec (  2270.0/sec): UDP-based SunRPC to negate an integer
  12400 reps @   0.4398 msec (  2270.0/sec): UDP-based SunRPC to negate an integer
  12400 reps @   0.4249 msec (  2350.0/sec): UDP-based SunRPC to negate an integer
  62000 trep @   0.4296 msec (  2330.0/sec): UDP-based SunRPC to negate an integer

  12000 reps @   0.4260 msec (  2350.0/sec): TCP-based SunRPC no-op
  12000 reps @   0.4240 msec (  2360.0/sec): TCP-based SunRPC no-op
  12000 reps @   0.4216 msec (  2370.0/sec): TCP-based SunRPC no-op
  12000 reps @   0.4201 msec (  2380.0/sec): TCP-based SunRPC no-op
  12000 reps @   0.4281 msec (  2340.0/sec): TCP-based SunRPC no-op
  60000 trep @   0.4240 msec (  2360.0/sec): TCP-based SunRPC no-op

  11600 reps @   0.4253 msec (  2350.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4154 msec (  2410.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4199 msec (  2380.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4205 msec (  2380.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4262 msec (  2350.0/sec): UDP-based SunRPC no-op
  58000 trep @   0.4214 msec (  2370.0/sec): UDP-based SunRPC no-op

2335000 reps @   0.0021 msec (468000.0/sec): getpid system call
2335000 reps @   0.0021 msec (468000.0/sec): getpid system call
2335000 reps @   0.0021 msec (468000.0/sec): getpid system call
2335000 reps @   0.0021 msec (468000.0/sec): getpid system call
2335000 reps @   0.0021 msec (468000.0/sec): getpid system call
11675000 trep @   0.0021 msec (468000.0/sec): getpid system call

 281000 reps @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 281000 reps @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 281000 reps @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 281000 reps @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 281000 reps @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1405000 trep @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 709600 reps @   0.0069 msec (144000.0/sec): gettimeofday system call
 709600 reps @   0.0070 msec (144000.0/sec): gettimeofday system call
 709600 reps @   0.0070 msec (144000.0/sec): gettimeofday system call
 709600 reps @   0.0069 msec (144000.0/sec): gettimeofday system call
 709600 reps @   0.0069 msec (144000.0/sec): gettimeofday system call
3548000 trep @   0.0069 msec (144000.0/sec): gettimeofday system call

    650 reps @   7.8681 msec (   127.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.7993 msec (   128.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.8059 msec (   128.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.8876 msec (   127.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.7969 msec (   128.0/sec): fork, child immediately exits, parent waits
   3250 trep @   7.8316 msec (   128.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.5848 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5806 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5818 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5820 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5826 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.5824 msec (    0.99/sec): sleep for one second (validates test time)

 894300 reps @   0.0056 msec (179000.0/sec): select on no fds with no timeout
 894300 reps @   0.0056 msec (179000.0/sec): select on no fds with no timeout
 894300 reps @   0.0056 msec (179000.0/sec): select on no fds with no timeout
 894300 reps @   0.0056 msec (178000.0/sec): select on no fds with no timeout
 894300 reps @   0.0056 msec (179000.0/sec): select on no fds with no timeout
4471500 trep @   0.0056 msec (179000.0/sec): select on no fds with no timeout

 215700 reps @   0.0233 msec ( 43000.0/sec): select on 16 pipe read fds with immediate timeout
 215700 reps @   0.0232 msec ( 43000.0/sec): select on 16 pipe read fds with immediate timeout
 215700 reps @   0.0232 msec ( 43000.0/sec): select on 16 pipe read fds with immediate timeout
 215700 reps @   0.0232 msec ( 43000.0/sec): select on 16 pipe read fds with immediate timeout
 215700 reps @   0.0232 msec ( 43100.0/sec): select on 16 pipe read fds with immediate timeout
1078500 trep @   0.0232 msec ( 43000.0/sec): select on 16 pipe read fds with immediate timeout

 121400 reps @   0.0412 msec ( 24200.0/sec): select on 32 pipe read fds with immediate timeout
 121400 reps @   0.0412 msec ( 24200.0/sec): select on 32 pipe read fds with immediate timeout
 121400 reps @   0.0412 msec ( 24200.0/sec): select on 32 pipe read fds with immediate timeout
 121400 reps @   0.0412 msec ( 24200.0/sec): select on 32 pipe read fds with immediate timeout
 121400 reps @   0.0412 msec ( 24200.0/sec): select on 32 pipe read fds with immediate timeout
 607000 trep @   0.0412 msec ( 24200.0/sec): select on 32 pipe read fds with immediate timeout

 214900 reps @   0.0233 msec ( 42900.0/sec): select on 16 pipe write fds with immediate timeout
 214900 reps @   0.0233 msec ( 42900.0/sec): select on 16 pipe write fds with immediate timeout
 214900 reps @   0.0233 msec ( 42900.0/sec): select on 16 pipe write fds with immediate timeout
 214900 reps @   0.0233 msec ( 42900.0/sec): select on 16 pipe write fds with immediate timeout
 214900 reps @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout
1074500 trep @   0.0233 msec ( 43000.0/sec): select on 16 pipe write fds with immediate timeout

 217500 reps @   0.0231 msec ( 43400.0/sec): select on 32 pipe write fds with immediate timeout
 217500 reps @   0.0230 msec ( 43400.0/sec): select on 32 pipe write fds with immediate timeout
 217500 reps @   0.0231 msec ( 43400.0/sec): select on 32 pipe write fds with immediate timeout
 217500 reps @   0.0230 msec ( 43400.0/sec): select on 32 pipe write fds with immediate timeout
 217500 reps @   0.0230 msec ( 43400.0/sec): select on 32 pipe write fds with immediate timeout
1087500 trep @   0.0230 msec ( 43400.0/sec): select on 32 pipe write fds with immediate timeout

  31100 reps @   0.1610 msec (  6210.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1619 msec (  6180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1613 msec (  6200.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1613 msec (  6200.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1610 msec (  6210.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 155500 trep @   0.1613 msec (  6200.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    340 reps @  14.9010 msec (    67.1/sec): popen and read from "/bin/echo hello"
    340 reps @  14.7430 msec (    67.8/sec): popen and read from "/bin/echo hello"
    340 reps @  14.9443 msec (    66.9/sec): popen and read from "/bin/echo hello"
    340 reps @  14.7531 msec (    67.8/sec): popen and read from "/bin/echo hello"
    340 reps @  14.8650 msec (    67.3/sec): popen and read from "/bin/echo hello"
   1700 trep @  14.8413 msec (    67.4/sec): popen and read from "/bin/echo hello"

  40250 reps @   0.1243 msec (  8040.0/sec): mmap megabyte /dev/zero region 
  40250 reps @   0.1243 msec (  8040.0/sec): mmap megabyte /dev/zero region 
  40250 reps @   0.1244 msec (  8040.0/sec): mmap megabyte /dev/zero region 
  40250 reps @   0.1243 msec (  8040.0/sec): mmap megabyte /dev/zero region 
  40250 reps @   0.1244 msec (  8040.0/sec): mmap megabyte /dev/zero region 
 201250 trep @   0.1243 msec (  8040.0/sec): mmap megabyte /dev/zero region 

    807 reps @   6.1290 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    807 reps @   6.1127 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    807 reps @   6.1145 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    807 reps @   6.1196 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    807 reps @   6.1182 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   4035 trep @   6.1188 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

   1010 reps @   4.9546 msec (   202.0/sec): copy every byte of newly mmaped megabyte file
   1010 reps @   4.9546 msec (   202.0/sec): copy every byte of newly mmaped megabyte file
   1010 reps @   4.9555 msec (   202.0/sec): copy every byte of newly mmaped megabyte file
   1010 reps @   5.0131 msec (   199.0/sec): copy every byte of newly mmaped megabyte file
   1010 reps @   5.0594 msec (   198.0/sec): copy every byte of newly mmaped megabyte file
   5050 trep @   4.9874 msec (   201.0/sec): copy every byte of newly mmaped megabyte file

     89 reps @  56.8052 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  57.1843 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  57.0123 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  56.9199 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  56.9806 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
    445 trep @  56.9805 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers

     30 reps @ 188.7131 msec (    5.30/sec): compile ANSI C `hello world' with no special options
     30 reps @ 191.0374 msec (    5.23/sec): compile ANSI C `hello world' with no special options
     30 reps @ 186.0475 msec (    5.37/sec): compile ANSI C `hello world' with no special options
     30 reps @ 187.4023 msec (    5.34/sec): compile ANSI C `hello world' with no special options
     30 reps @ 186.5694 msec (    5.36/sec): compile ANSI C `hello world' with no special options
    150 trep @ 187.9539 msec (    5.32/sec): compile ANSI C `hello world' with no special options

     28 reps @ 139.0251 msec (    7.19/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     28 reps @ 145.2774 msec (    6.88/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     28 reps @ 142.0322 msec (    7.04/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     28 reps @ 147.2875 msec (    6.79/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     28 reps @ 140.0334 msec (    7.14/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    140 trep @ 142.7311 msec (    7.01/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     40 reps @ 143.6177 msec (    6.96/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     40 reps @ 142.0420 msec (    7.04/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     40 reps @ 147.6001 msec (    6.78/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     40 reps @ 141.4678 msec (    7.07/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     40 reps @ 148.9296 msec (    6.71/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
    200 trep @ 144.7314 msec (    6.91/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     40 reps @ 143.5305 msec (    6.97/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     40 reps @ 146.5577 msec (    6.82/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     40 reps @ 144.8479 msec (    6.90/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     40 reps @ 147.9567 msec (    6.76/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     40 reps @ 139.2762 msec (    7.18/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
    200 trep @ 144.4338 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

     40 reps @ 140.5185 msec (    7.12/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 147.7565 msec (    6.77/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 144.0085 msec (    6.94/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 147.7801 msec (    6.77/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 139.9429 msec (    7.15/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
    200 trep @ 144.0013 msec (    6.94/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     36 reps @ 140.8981 msec (    7.10/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 148.9677 msec (    6.71/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 141.7098 msec (    7.06/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 143.9614 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 145.1716 msec (    6.89/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
    180 trep @ 144.1417 msec (    6.94/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     48 reps @ 154.3577 msec (    6.48/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 144.2647 msec (    6.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 143.4963 msec (    6.97/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 142.2181 msec (    7.03/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 149.2387 msec (    6.70/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
    240 trep @ 146.7151 msec (    6.82/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1421.7387 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1420.6702 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1420.5577 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.1118 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1421.7442 msec (    0.70/sec): use dc to output first 1,000 factorials
     20 trep @ 1421.3646 msec (    0.70/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0035 msec (282000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0035 msec (284000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0035 msec (284000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0035 msec (284000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0035 msec (284000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0035 msec (284000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  60992 reps @   0.0820 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
  60992 reps @   0.0820 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
  60992 reps @   0.0820 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
  60992 reps @   0.0820 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
  60992 reps @   0.0820 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
 304960 trep @   0.0820 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree

      5 reps @ 1112.3666 msec (    0.90/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1112.9524 msec (    0.90/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1112.6792 msec (    0.90/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1113.6022 msec (    0.90/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1113.2316 msec (    0.90/sec): use regexec with 51 char literal to search 142 kilobyte text
     25 trep @ 1112.9664 msec (    0.90/sec): use regexec with 51 char literal to search 142 kilobyte text

  78988 reps @   0.0633 msec ( 15800.0/sec): use regcomp to compile long .* pattern, then regfree
  78988 reps @   0.0633 msec ( 15800.0/sec): use regcomp to compile long .* pattern, then regfree
  78988 reps @   0.0633 msec ( 15800.0/sec): use regcomp to compile long .* pattern, then regfree
  78988 reps @   0.0633 msec ( 15800.0/sec): use regcomp to compile long .* pattern, then regfree
  78988 reps @   0.0633 msec ( 15800.0/sec): use regcomp to compile long .* pattern, then regfree
 394940 trep @   0.0633 msec ( 15800.0/sec): use regcomp to compile long .* pattern, then regfree

     10 reps @ 527.6898 msec (    1.90/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 529.2775 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 525.7470 msec (    1.90/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 528.2562 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 528.2435 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     50 trep @ 527.8428 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text


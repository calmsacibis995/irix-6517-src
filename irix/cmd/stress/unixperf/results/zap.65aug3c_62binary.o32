UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: zap
Operating system: IRIX 6.5-ALPHA-1274022532
Compiler version: unknown
Instruction set: MIPS 2
Application binary interface: O32
CPU: MIPS R5000 Processor Chip Revision: 1.0
FPU: MIPS R5000 Floating Point Coprocessor Revision: 1.0
1 180 MHZ IP22 Processor
Main memory size: 96 Mbytes
Secondary unified instruction/data cache size: 512 Kbytes on Processor 0
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Integral SCSI controller 0: Version WD33C93B, revision D
  Disk drive: unit 1 on SCSI controller 0
  CDROM: unit 4 on SCSI controller 0
  Tape drive: unit 7 on SCSI controller 0: DAT
On-board serial ports: 2
On-board bi-directional parallel port
Graphics board: GR3-XZ
Integral Ethernet: ec0, version 1
Integral ISDN: Basic Rate Interface unit 0, revision 1.0
Iris Audio Processor: version A2 revision 4.1.0
Vino video: unit 0, revision 0, IndyCam connected
Uptime: 17:14
Users: 1
Load average: 8.04, 5.73, 3.42
File IO test directory: /usr/tmp
File IO test filesystem: xfs (1915.95 MB total, 440.92 MB available)
Date: Tue Aug 12 16:16:57 1997

1542384 reps @   0.0045 msec (223000.0/sec): 4 by 4 double matrix multiply
1542384 reps @   0.0030 msec (331000.0/sec): 4 by 4 double matrix multiply
1542384 reps @   0.0026 msec (389000.0/sec): 4 by 4 double matrix multiply
1542384 reps @   0.0026 msec (392000.0/sec): 4 by 4 double matrix multiply
1542384 reps @   0.0026 msec (390000.0/sec): 4 by 4 double matrix multiply
7711920 trep @   0.0030 msec (329000.0/sec): 4 by 4 double matrix multiply

2202960 reps @   0.0023 msec (441000.0/sec): 4 by 4 float matrix multiply
2202960 reps @   0.0023 msec (440000.0/sec): 4 by 4 float matrix multiply
2202960 reps @   0.0023 msec (441000.0/sec): 4 by 4 float matrix multiply
2202960 reps @   0.0023 msec (441000.0/sec): 4 by 4 float matrix multiply
2202960 reps @   0.0023 msec (441000.0/sec): 4 by 4 float matrix multiply
11014800 trep @   0.0023 msec (441000.0/sec): 4 by 4 float matrix multiply

1160500 reps @   0.0043 msec (232000.0/sec): recurse 250 simple function calls and return
1160500 reps @   0.0043 msec (232000.0/sec): recurse 250 simple function calls and return
1160500 reps @   0.0043 msec (231000.0/sec): recurse 250 simple function calls and return
1160500 reps @   0.0043 msec (232000.0/sec): recurse 250 simple function calls and return
1160500 reps @   0.0043 msec (231000.0/sec): recurse 250 simple function calls and return
5802500 trep @   0.0043 msec (232000.0/sec): recurse 250 simple function calls and return

4332000 reps @   0.0011 msec (870000.0/sec): bcopy of 256 bytes
4332000 reps @   0.0012 msec (869000.0/sec): bcopy of 256 bytes
4332000 reps @   0.0012 msec (869000.0/sec): bcopy of 256 bytes
4332000 reps @   0.0012 msec (869000.0/sec): bcopy of 256 bytes
4332000 reps @   0.0012 msec (869000.0/sec): bcopy of 256 bytes
21660000 trep @   0.0012 msec (869000.0/sec): bcopy of 256 bytes

  90680 reps @   0.0552 msec ( 18100.0/sec): bcopy of 16 kilobytes
  90680 reps @   0.0552 msec ( 18100.0/sec): bcopy of 16 kilobytes
  90680 reps @   0.0553 msec ( 18100.0/sec): bcopy of 16 kilobytes
  90680 reps @   0.0551 msec ( 18100.0/sec): bcopy of 16 kilobytes
  90680 reps @   0.0552 msec ( 18100.0/sec): bcopy of 16 kilobytes
 453400 trep @   0.0552 msec ( 18100.0/sec): bcopy of 16 kilobytes

   1876 reps @   2.6630 msec (   376.0/sec): bcopy of 100 kilobytes
   1876 reps @   2.6680 msec (   375.0/sec): bcopy of 100 kilobytes
   1876 reps @   2.6662 msec (   375.0/sec): bcopy of 100 kilobytes
   1876 reps @   2.6625 msec (   376.0/sec): bcopy of 100 kilobytes
   1876 reps @   2.6648 msec (   375.0/sec): bcopy of 100 kilobytes
   9380 trep @   2.6649 msec (   375.0/sec): bcopy of 100 kilobytes

    112 reps @  40.2822 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.2761 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.3073 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.2656 msec (    24.8/sec): bcopy of 1 megabyte
    112 reps @  40.2923 msec (    24.8/sec): bcopy of 1 megabyte
    560 trep @  40.2847 msec (    24.8/sec): bcopy of 1 megabyte

     12 reps @ 407.0582 msec (    2.46/sec): bcopy of 10 megabytes
     12 reps @ 406.7912 msec (    2.46/sec): bcopy of 10 megabytes
     12 reps @ 407.3010 msec (    2.46/sec): bcopy of 10 megabytes
     12 reps @ 406.7368 msec (    2.46/sec): bcopy of 10 megabytes
     12 reps @ 406.5639 msec (    2.46/sec): bcopy of 10 megabytes
     60 trep @ 406.8902 msec (    2.46/sec): bcopy of 10 megabytes

     16 reps @ 409.2114 msec (    2.44/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 409.5664 msec (    2.44/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 409.4999 msec (    2.44/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 409.5480 msec (    2.44/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 409.2326 msec (    2.44/sec): bcopy of 10 megabytes (cacheline-aligned)
     80 trep @ 409.4117 msec (    2.44/sec): bcopy of 10 megabytes (cacheline-aligned)

     16 reps @ 416.2982 msec (    2.40/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 416.4640 msec (    2.40/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 416.4995 msec (    2.40/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 415.9856 msec (    2.40/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 416.5556 msec (    2.40/sec): bcopy of 10 megabytes (word mis-aligned)
     80 trep @ 416.3606 msec (    2.40/sec): bcopy of 10 megabytes (word mis-aligned)

     16 reps @ 411.2638 msec (    2.43/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 411.0589 msec (    2.43/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 410.9111 msec (    2.43/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 411.2460 msec (    2.43/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 410.9699 msec (    2.43/sec): bcopy of 10 megabytes (dword mis-aligned)
     80 trep @ 411.0899 msec (    2.43/sec): bcopy of 10 megabytes (dword mis-aligned)

7840800 reps @   0.0006 msec (1560000.0/sec): bzero of 256 bytes
7840800 reps @   0.0006 msec (1560000.0/sec): bzero of 256 bytes
7840800 reps @   0.0006 msec (1570000.0/sec): bzero of 256 bytes
7840800 reps @   0.0006 msec (1570000.0/sec): bzero of 256 bytes
7840800 reps @   0.0006 msec (1560000.0/sec): bzero of 256 bytes
39204000 trep @   0.0006 msec (1560000.0/sec): bzero of 256 bytes

 157200 reps @   0.0319 msec ( 31400.0/sec): bzero of 16 kilobytes
 157200 reps @   0.0319 msec ( 31400.0/sec): bzero of 16 kilobytes
 157200 reps @   0.0319 msec ( 31300.0/sec): bzero of 16 kilobytes
 157200 reps @   0.0319 msec ( 31400.0/sec): bzero of 16 kilobytes
 157200 reps @   0.0319 msec ( 31300.0/sec): bzero of 16 kilobytes
 786000 trep @   0.0319 msec ( 31300.0/sec): bzero of 16 kilobytes

   3128 reps @   1.6035 msec (   624.0/sec): bzero of 100 kilobytes
   3128 reps @   1.6239 msec (   616.0/sec): bzero of 100 kilobytes
   3128 reps @   1.6014 msec (   624.0/sec): bzero of 100 kilobytes
   3128 reps @   1.6026 msec (   624.0/sec): bzero of 100 kilobytes
   3128 reps @   1.6021 msec (   624.0/sec): bzero of 100 kilobytes
  15640 trep @   1.6067 msec (   622.0/sec): bzero of 100 kilobytes

    212 reps @  23.8483 msec (    41.9/sec): bzero of 1 megabyte
    212 reps @  23.8237 msec (    42.0/sec): bzero of 1 megabyte
    212 reps @  23.8624 msec (    41.9/sec): bzero of 1 megabyte
    212 reps @  23.8420 msec (    41.9/sec): bzero of 1 megabyte
    212 reps @  23.8366 msec (    42.0/sec): bzero of 1 megabyte
   1060 trep @  23.8426 msec (    41.9/sec): bzero of 1 megabyte

     24 reps @ 240.9499 msec (    4.15/sec): bzero of 10 megabytes
     24 reps @ 240.9254 msec (    4.15/sec): bzero of 10 megabytes
     24 reps @ 240.9558 msec (    4.15/sec): bzero of 10 megabytes
     24 reps @ 240.9386 msec (    4.15/sec): bzero of 10 megabytes
     24 reps @ 240.7703 msec (    4.15/sec): bzero of 10 megabytes
    120 trep @ 240.9080 msec (    4.15/sec): bzero of 10 megabytes

     24 reps @ 241.0447 msec (    4.15/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 240.8667 msec (    4.15/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 241.0018 msec (    4.15/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 241.0326 msec (    4.15/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 240.9962 msec (    4.15/sec): bzero of 10 megabytes (cacheline-aligned)
    120 trep @ 240.9884 msec (    4.15/sec): bzero of 10 megabytes (cacheline-aligned)

     24 reps @ 240.8635 msec (    4.15/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 240.9527 msec (    4.15/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 240.9425 msec (    4.15/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 240.9775 msec (    4.15/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 240.7755 msec (    4.15/sec): bzero of 10 megabytes (word mis-aligned)
    120 trep @ 240.9023 msec (    4.15/sec): bzero of 10 megabytes (word mis-aligned)

     24 reps @ 240.6817 msec (    4.15/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 240.9075 msec (    4.15/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 246.8580 msec (    4.05/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 241.0434 msec (    4.15/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 240.9915 msec (    4.15/sec): bzero of 10 megabytes (dword mis-aligned)
    120 trep @ 242.0964 msec (    4.13/sec): bzero of 10 megabytes (dword mis-aligned)

   9078 reps @   0.5509 msec (  1820.0/sec): bcopy then qsort 400 32-bit integers
   9078 reps @   0.5503 msec (  1820.0/sec): bcopy then qsort 400 32-bit integers
   9078 reps @   0.5513 msec (  1810.0/sec): bcopy then qsort 400 32-bit integers
   9078 reps @   0.5506 msec (  1820.0/sec): bcopy then qsort 400 32-bit integers
   9078 reps @   0.5505 msec (  1820.0/sec): bcopy then qsort 400 32-bit integers
  45390 trep @   0.5507 msec (  1820.0/sec): bcopy then qsort 400 32-bit integers

    135 reps @  36.7628 msec (    27.2/sec): bcopy then qsort 16,000 32-bit integers
    135 reps @  36.7675 msec (    27.2/sec): bcopy then qsort 16,000 32-bit integers
    135 reps @  36.7977 msec (    27.2/sec): bcopy then qsort 16,000 32-bit integers
    135 reps @  36.7594 msec (    27.2/sec): bcopy then qsort 16,000 32-bit integers
    135 reps @  36.8096 msec (    27.2/sec): bcopy then qsort 16,000 32-bit integers
    675 trep @  36.7794 msec (    27.2/sec): bcopy then qsort 16,000 32-bit integers

     28 reps @ 179.6525 msec (    5.57/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 179.4580 msec (    5.57/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 179.8152 msec (    5.56/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 179.6988 msec (    5.56/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 179.6089 msec (    5.57/sec): bcopy then qsort 64,000 32-bit integers
    140 trep @ 179.6467 msec (    5.57/sec): bcopy then qsort 64,000 32-bit integers

7680000 reps @   0.0007 msec (1530000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7680000 reps @   0.0007 msec (1530000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7680000 reps @   0.0007 msec (1530000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7680000 reps @   0.0007 msec (1530000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7680000 reps @   0.0007 msec (1530000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
38400000 trep @   0.0007 msec (1530000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

5837500 reps @   0.0009 msec (1170000.0/sec): basic double trigonometric function (sin/cos/tan)
5837500 reps @   0.0009 msec (1170000.0/sec): basic double trigonometric function (sin/cos/tan)
5837500 reps @   0.0009 msec (1170000.0/sec): basic double trigonometric function (sin/cos/tan)
5837500 reps @   0.0009 msec (1170000.0/sec): basic double trigonometric function (sin/cos/tan)
5837500 reps @   0.0009 msec (1170000.0/sec): basic double trigonometric function (sin/cos/tan)
29187500 trep @   0.0009 msec (1170000.0/sec): basic double trigonometric function (sin/cos/tan)

1385000 reps @   0.0036 msec (276000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1385000 reps @   0.0036 msec (276000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1385000 reps @   0.0036 msec (276000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1385000 reps @   0.0036 msec (276000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1385000 reps @   0.0036 msec (276000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
6925000 trep @   0.0036 msec (276000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  16200 reps @   0.3106 msec (  3220.0/sec): Tower of Hanoi recursion test (10 deep)
  16200 reps @   0.3105 msec (  3220.0/sec): Tower of Hanoi recursion test (10 deep)
  16200 reps @   0.3106 msec (  3220.0/sec): Tower of Hanoi recursion test (10 deep)
  16200 reps @   0.3105 msec (  3220.0/sec): Tower of Hanoi recursion test (10 deep)
  16200 reps @   0.3106 msec (  3220.0/sec): Tower of Hanoi recursion test (10 deep)
  81000 trep @   0.3105 msec (  3220.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @   9.9468 msec (   101.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.9440 msec (   101.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.9473 msec (   101.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.9450 msec (   101.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.9433 msec (   101.0/sec): Tower of Hanoi recursion test (15 deep)
   3000 trep @   9.9453 msec (   101.0/sec): Tower of Hanoi recursion test (15 deep)

 303500 reps @   0.0165 msec ( 60700.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 303500 reps @   0.0164 msec ( 60800.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 303500 reps @   0.0165 msec ( 60800.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 303500 reps @   0.0165 msec ( 60800.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 303500 reps @   0.0165 msec ( 60800.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
1517500 trep @   0.0165 msec ( 60800.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

  80400 reps @   0.0632 msec ( 15800.0/sec): write 80 bytes to a log file
  80400 reps @   0.0640 msec ( 15600.0/sec): write 80 bytes to a log file
  80400 reps @   0.0731 msec ( 13700.0/sec): write 80 bytes to a log file
  80400 reps @   0.0823 msec ( 12100.0/sec): write 80 bytes to a log file
  80400 reps @   0.0847 msec ( 11800.0/sec): write 80 bytes to a log file
 402000 trep @   0.0735 msec ( 13600.0/sec): write 80 bytes to a log file

    800 reps @   6.0304 msec (   166.0/sec): per-file cost of creating 100 files then unlinking them all
    800 reps @   5.9284 msec (   169.0/sec): per-file cost of creating 100 files then unlinking them all
    800 reps @   6.0058 msec (   167.0/sec): per-file cost of creating 100 files then unlinking them all
    800 reps @   5.9463 msec (   168.0/sec): per-file cost of creating 100 files then unlinking them all
    800 reps @   6.2132 msec (   161.0/sec): per-file cost of creating 100 files then unlinking them all
   4000 trep @   6.0248 msec (   166.0/sec): per-file cost of creating 100 files then unlinking them all

  37400 reps @   0.1339 msec (  7470.0/sec): per-file cost of open and immediate close of 100 files
  37400 reps @   0.1336 msec (  7490.0/sec): per-file cost of open and immediate close of 100 files
  37400 reps @   0.1339 msec (  7470.0/sec): per-file cost of open and immediate close of 100 files
  37400 reps @   0.1336 msec (  7490.0/sec): per-file cost of open and immediate close of 100 files
  37400 reps @   0.1337 msec (  7480.0/sec): per-file cost of open and immediate close of 100 files
 187000 trep @   0.1337 msec (  7480.0/sec): per-file cost of open and immediate close of 100 files

  40000 reps @   0.1442 msec (  6940.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  40000 reps @   0.1243 msec (  8040.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  40000 reps @   0.1255 msec (  7970.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  40000 reps @   0.1245 msec (  8030.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  40000 reps @   0.1244 msec (  8040.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 200000 trep @   0.1286 msec (  7780.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 244500 reps @   0.0205 msec ( 48900.0/sec): cost of stat'ing current dir
 244500 reps @   0.0205 msec ( 48900.0/sec): cost of stat'ing current dir
 244500 reps @   0.0211 msec ( 47400.0/sec): cost of stat'ing current dir
 244500 reps @   0.0211 msec ( 47300.0/sec): cost of stat'ing current dir
 244500 reps @   0.0212 msec ( 47200.0/sec): cost of stat'ing current dir
1222500 trep @   0.0209 msec ( 47900.0/sec): cost of stat'ing current dir

  56000 reps @   0.0897 msec ( 11100.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0899 msec ( 11100.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0889 msec ( 11300.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0889 msec ( 11200.0/sec): cost of stat'ing 5 component path
  56000 reps @   0.0888 msec ( 11300.0/sec): cost of stat'ing 5 component path
 280000 trep @   0.0892 msec ( 11200.0/sec): cost of stat'ing 5 component path

   1265 reps @   3.9304 msec (   254.0/sec): open directory and stat 100 files in it
   1265 reps @   3.9270 msec (   255.0/sec): open directory and stat 100 files in it
   1265 reps @   3.9211 msec (   255.0/sec): open directory and stat 100 files in it
   1265 reps @   3.9014 msec (   256.0/sec): open directory and stat 100 files in it
   1265 reps @   3.8986 msec (   257.0/sec): open directory and stat 100 files in it
   6325 trep @   3.9157 msec (   255.0/sec): open directory and stat 100 files in it

    900 reps @   6.0052 msec (   167.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   5.8511 msec (   171.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   6.0717 msec (   165.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   6.2130 msec (   161.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   5.7368 msec (   174.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   4500 trep @   5.9756 msec (   167.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 207000 reps @   0.0242 msec ( 41300.0/sec): ndbm lookup into database with 900 entries
 207000 reps @   0.0244 msec ( 41000.0/sec): ndbm lookup into database with 900 entries
 207000 reps @   0.0246 msec ( 40700.0/sec): ndbm lookup into database with 900 entries
 207000 reps @   0.0240 msec ( 41700.0/sec): ndbm lookup into database with 900 entries
 207000 reps @   0.0240 msec ( 41600.0/sec): ndbm lookup into database with 900 entries
1035000 trep @   0.0242 msec ( 41300.0/sec): ndbm lookup into database with 900 entries

  44400 reps @   0.1124 msec (  8900.0/sec): 1 byte token passing between two processes using two pipes
  44400 reps @   0.1132 msec (  8840.0/sec): 1 byte token passing between two processes using two pipes
  44400 reps @   0.1123 msec (  8910.0/sec): 1 byte token passing between two processes using two pipes
  44400 reps @   0.1127 msec (  8870.0/sec): 1 byte token passing between two processes using two pipes
  44400 reps @   0.1131 msec (  8840.0/sec): 1 byte token passing between two processes using two pipes
 222000 trep @   0.1127 msec (  8870.0/sec): 1 byte token passing between two processes using two pipes

  35600 reps @   0.1399 msec (  7150.0/sec): 1 kilobyte token passing between two processes using two pipes
  35600 reps @   0.1403 msec (  7130.0/sec): 1 kilobyte token passing between two processes using two pipes
  35600 reps @   0.1410 msec (  7090.0/sec): 1 kilobyte token passing between two processes using two pipes
  35600 reps @   0.1406 msec (  7110.0/sec): 1 kilobyte token passing between two processes using two pipes
  35600 reps @   0.1406 msec (  7110.0/sec): 1 kilobyte token passing between two processes using two pipes
 178000 trep @   0.1405 msec (  7120.0/sec): 1 kilobyte token passing between two processes using two pipes

10004000 reps @   0.0005 msec (2010000.0/sec): setjmp/longjmp
10004000 reps @   0.0005 msec (2010000.0/sec): setjmp/longjmp
10004000 reps @   0.0005 msec (2010000.0/sec): setjmp/longjmp
10004000 reps @   0.0005 msec (2010000.0/sec): setjmp/longjmp
10004000 reps @   0.0005 msec (2010000.0/sec): setjmp/longjmp
50020000 trep @   0.0005 msec (2010000.0/sec): setjmp/longjmp

 112000 reps @   0.0449 msec ( 22300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 112000 reps @   0.0449 msec ( 22300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 112000 reps @   0.0449 msec ( 22300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 112000 reps @   0.0449 msec ( 22300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 112000 reps @   0.0449 msec ( 22300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 560000 trep @   0.0449 msec ( 22300.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   1295 reps @   3.8242 msec (   261.0/sec): create/destroy client UDP-based SunRPC handle
   1295 reps @   3.8360 msec (   261.0/sec): create/destroy client UDP-based SunRPC handle
   1295 reps @   3.8430 msec (   260.0/sec): create/destroy client UDP-based SunRPC handle
   1295 reps @   3.8414 msec (   260.0/sec): create/destroy client UDP-based SunRPC handle
   1295 reps @   3.8341 msec (   261.0/sec): create/destroy client UDP-based SunRPC handle
   6475 trep @   3.8357 msec (   261.0/sec): create/destroy client UDP-based SunRPC handle

   4800 reps @   1.0319 msec (   969.0/sec): TCP-based SunRPC to negate an integer
   4800 reps @   1.0300 msec (   971.0/sec): TCP-based SunRPC to negate an integer
   4800 reps @   1.0328 msec (   968.0/sec): TCP-based SunRPC to negate an integer
   4800 reps @   1.0322 msec (   969.0/sec): TCP-based SunRPC to negate an integer
   4800 reps @   1.0332 msec (   968.0/sec): TCP-based SunRPC to negate an integer
  24000 trep @   1.0320 msec (   969.0/sec): TCP-based SunRPC to negate an integer

   5200 reps @   0.9125 msec (  1100.0/sec): UDP-based SunRPC to negate an integer
   5200 reps @   0.9342 msec (  1070.0/sec): UDP-based SunRPC to negate an integer
   5200 reps @   0.9349 msec (  1070.0/sec): UDP-based SunRPC to negate an integer
   5200 reps @   0.9335 msec (  1070.0/sec): UDP-based SunRPC to negate an integer
   5200 reps @   0.9322 msec (  1070.0/sec): UDP-based SunRPC to negate an integer
  26000 trep @   0.9294 msec (  1080.0/sec): UDP-based SunRPC to negate an integer

   4800 reps @   1.0398 msec (   962.0/sec): TCP-based SunRPC no-op
   4800 reps @   1.0389 msec (   963.0/sec): TCP-based SunRPC no-op
   4800 reps @   1.0383 msec (   963.0/sec): TCP-based SunRPC no-op
   4800 reps @   1.0361 msec (   965.0/sec): TCP-based SunRPC no-op
   4800 reps @   1.0369 msec (   964.0/sec): TCP-based SunRPC no-op
  24000 trep @   1.0380 msec (   963.0/sec): TCP-based SunRPC no-op

   5200 reps @   0.9268 msec (  1080.0/sec): UDP-based SunRPC no-op
   5200 reps @   0.9345 msec (  1070.0/sec): UDP-based SunRPC no-op
   5200 reps @   0.9222 msec (  1080.0/sec): UDP-based SunRPC no-op
   5200 reps @   0.9239 msec (  1080.0/sec): UDP-based SunRPC no-op
   5200 reps @   0.9210 msec (  1090.0/sec): UDP-based SunRPC no-op
  26000 trep @   0.9257 msec (  1080.0/sec): UDP-based SunRPC no-op

1442000 reps @   0.0031 msec (323000.0/sec): getpid system call
1442000 reps @   0.0031 msec (323000.0/sec): getpid system call
1442000 reps @   0.0031 msec (323000.0/sec): getpid system call
1442000 reps @   0.0031 msec (323000.0/sec): getpid system call
1442000 reps @   0.0031 msec (323000.0/sec): getpid system call
7210000 trep @   0.0031 msec (323000.0/sec): getpid system call

 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0249 msec ( 40200.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 202000 reps @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1010000 trep @   0.0248 msec ( 40300.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 927200 reps @   0.0054 msec (185000.0/sec): gettimeofday system call
 927200 reps @   0.0054 msec (185000.0/sec): gettimeofday system call
 927200 reps @   0.0054 msec (185000.0/sec): gettimeofday system call
 927200 reps @   0.0054 msec (186000.0/sec): gettimeofday system call
 927200 reps @   0.0054 msec (185000.0/sec): gettimeofday system call
4636000 trep @   0.0054 msec (185000.0/sec): gettimeofday system call

    250 reps @  22.4492 msec (    44.5/sec): fork, child immediately exits, parent waits
    250 reps @  21.2255 msec (    47.1/sec): fork, child immediately exits, parent waits
    250 reps @  21.4434 msec (    46.6/sec): fork, child immediately exits, parent waits
    250 reps @  21.5671 msec (    46.4/sec): fork, child immediately exits, parent waits
    250 reps @  22.3866 msec (    44.7/sec): fork, child immediately exits, parent waits
   1250 trep @  21.8143 msec (    45.8/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.9796 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9840 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9528 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9852 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.9644 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.9732 msec (    0.99/sec): sleep for one second (validates test time)

 642700 reps @   0.0078 msec (128000.0/sec): select on no fds with no timeout
 642700 reps @   0.0078 msec (128000.0/sec): select on no fds with no timeout
 642700 reps @   0.0078 msec (128000.0/sec): select on no fds with no timeout
 642700 reps @   0.0078 msec (128000.0/sec): select on no fds with no timeout
 642700 reps @   0.0078 msec (128000.0/sec): select on no fds with no timeout
3213500 trep @   0.0078 msec (128000.0/sec): select on no fds with no timeout

 119400 reps @   0.0420 msec ( 23800.0/sec): select on 16 pipe read fds with immediate timeout
 119400 reps @   0.0420 msec ( 23800.0/sec): select on 16 pipe read fds with immediate timeout
 119400 reps @   0.0420 msec ( 23800.0/sec): select on 16 pipe read fds with immediate timeout
 119400 reps @   0.0421 msec ( 23800.0/sec): select on 16 pipe read fds with immediate timeout
 119400 reps @   0.0420 msec ( 23800.0/sec): select on 16 pipe read fds with immediate timeout
 597000 trep @   0.0420 msec ( 23800.0/sec): select on 16 pipe read fds with immediate timeout

  62800 reps @   0.0797 msec ( 12500.0/sec): select on 32 pipe read fds with immediate timeout
  62800 reps @   0.0797 msec ( 12500.0/sec): select on 32 pipe read fds with immediate timeout
  62800 reps @   0.0801 msec ( 12500.0/sec): select on 32 pipe read fds with immediate timeout
  62800 reps @   0.0797 msec ( 12500.0/sec): select on 32 pipe read fds with immediate timeout
  62800 reps @   0.0799 msec ( 12500.0/sec): select on 32 pipe read fds with immediate timeout
 314000 trep @   0.0798 msec ( 12500.0/sec): select on 32 pipe read fds with immediate timeout

 121700 reps @   0.0413 msec ( 24200.0/sec): select on 16 pipe write fds with immediate timeout
 121700 reps @   0.0412 msec ( 24300.0/sec): select on 16 pipe write fds with immediate timeout
 121700 reps @   0.0412 msec ( 24300.0/sec): select on 16 pipe write fds with immediate timeout
 121700 reps @   0.0413 msec ( 24200.0/sec): select on 16 pipe write fds with immediate timeout
 121700 reps @   0.0412 msec ( 24300.0/sec): select on 16 pipe write fds with immediate timeout
 608500 trep @   0.0412 msec ( 24300.0/sec): select on 16 pipe write fds with immediate timeout

 118100 reps @   0.0426 msec ( 23500.0/sec): select on 32 pipe write fds with immediate timeout
 118100 reps @   0.0426 msec ( 23500.0/sec): select on 32 pipe write fds with immediate timeout
 118100 reps @   0.0426 msec ( 23500.0/sec): select on 32 pipe write fds with immediate timeout
 118100 reps @   0.0426 msec ( 23500.0/sec): select on 32 pipe write fds with immediate timeout
 118100 reps @   0.0426 msec ( 23500.0/sec): select on 32 pipe write fds with immediate timeout
 590500 trep @   0.0426 msec ( 23500.0/sec): select on 32 pipe write fds with immediate timeout

  11000 reps @   0.4591 msec (  2180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11000 reps @   0.4598 msec (  2170.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11000 reps @   0.4591 msec (  2180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11000 reps @   0.4595 msec (  2180.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  11000 reps @   0.4655 msec (  2150.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  55000 trep @   0.4606 msec (  2170.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    100 reps @  53.7567 msec (    18.6/sec): popen and read from "/bin/echo hello"
    100 reps @  53.3096 msec (    18.8/sec): popen and read from "/bin/echo hello"
    100 reps @  53.4754 msec (    18.7/sec): popen and read from "/bin/echo hello"
    100 reps @  53.4080 msec (    18.7/sec): popen and read from "/bin/echo hello"
    100 reps @  53.4322 msec (    18.7/sec): popen and read from "/bin/echo hello"
    500 trep @  53.4764 msec (    18.7/sec): popen and read from "/bin/echo hello"

  15800 reps @   0.3176 msec (  3150.0/sec): mmap megabyte /dev/zero region 
  15800 reps @   0.3172 msec (  3150.0/sec): mmap megabyte /dev/zero region 
  15800 reps @   0.3173 msec (  3150.0/sec): mmap megabyte /dev/zero region 
  15800 reps @   0.3170 msec (  3150.0/sec): mmap megabyte /dev/zero region 
  15800 reps @   0.3175 msec (  3150.0/sec): mmap megabyte /dev/zero region 
  79000 trep @   0.3173 msec (  3150.0/sec): mmap megabyte /dev/zero region 

    129 reps @  38.8470 msec (    25.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    129 reps @  38.9364 msec (    25.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    129 reps @  38.8427 msec (    25.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    129 reps @  38.8843 msec (    25.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    129 reps @  38.7563 msec (    25.8/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    645 trep @  38.8533 msec (    25.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    165 reps @  30.2892 msec (    33.0/sec): copy every byte of newly mmaped megabyte file
    165 reps @  30.2676 msec (    33.0/sec): copy every byte of newly mmaped megabyte file
    165 reps @  30.6089 msec (    32.7/sec): copy every byte of newly mmaped megabyte file
    165 reps @  30.3996 msec (    32.9/sec): copy every byte of newly mmaped megabyte file
    165 reps @  30.5172 msec (    32.8/sec): copy every byte of newly mmaped megabyte file
    825 trep @  30.4165 msec (    32.9/sec): copy every byte of newly mmaped megabyte file

     25 reps @ 191.4698 msec (    5.22/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 193.2660 msec (    5.17/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 193.1353 msec (    5.18/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 192.9606 msec (    5.18/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 192.7520 msec (    5.19/sec): compress & uncompress 52 kilobyte text file of numbers
    125 trep @ 192.7168 msec (    5.19/sec): compress & uncompress 52 kilobyte text file of numbers

      5 reps @ 605.1154 msec (    1.65/sec): compile ANSI C `hello world' with no special options
      5 reps @ 598.3992 msec (    1.67/sec): compile ANSI C `hello world' with no special options
      5 reps @ 597.8674 msec (    1.67/sec): compile ANSI C `hello world' with no special options
      5 reps @ 602.7136 msec (    1.66/sec): compile ANSI C `hello world' with no special options
      5 reps @ 605.0698 msec (    1.65/sec): compile ANSI C `hello world' with no special options
     25 trep @ 601.8331 msec (    1.66/sec): compile ANSI C `hello world' with no special options

    141 reps @ 537.4629 msec (    1.86/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    141 reps @ 541.6635 msec (    1.85/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    141 reps @ 540.2569 msec (    1.85/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    141 reps @ 533.0750 msec (    1.88/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    141 reps @ 542.8411 msec (    1.84/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    705 trep @ 539.0599 msec (    1.86/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

      8 reps @ 462.9097 msec (    2.16/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 674.9647 msec (    1.48/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 466.0713 msec (    2.15/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 545.9171 msec (    1.83/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
      8 reps @ 635.4017 msec (    1.57/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     40 trep @ 557.0529 msec (    1.80/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     12 reps @ 557.1936 msec (    1.79/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 559.4671 msec (    1.79/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 548.8102 msec (    1.82/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 558.3012 msec (    1.79/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 511.1219 msec (    1.96/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     60 trep @ 546.9788 msec (    1.83/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel


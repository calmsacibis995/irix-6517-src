UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: spridle
Operating system: IRIX64 6.4-ALPHA-1263417320
Compiler version: unknown
Instruction set: MIPS 2
Application binary interface: O32
2 195 MHZ IP30 Processors
CPU: MIPS R10000 Processor Chip Revision: 2.6
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
Main memory size: 128 Mbytes
Secondary unified instruction/data cache size: 1 Mbyte
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 parallel port: plp1
Graphics board: Maximum Impact/TRAM option card
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 12.0, number 1
Uptime:  8:18
Users: 2
Load average: 0.07, 0.20, 0.27
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4205.63 MB total, 2535.88 MB available)
Date: Mon Dec  2 20:36:10 1996

3267504 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
3267504 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
3267504 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
9802512 trep @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply

1740492 reps @   0.0017 msec (580000.0/sec): 4 by 4 float matrix multiply
1740492 reps @   0.0017 msec (581000.0/sec): 4 by 4 float matrix multiply
1740492 reps @   0.0017 msec (581000.0/sec): 4 by 4 float matrix multiply
5221476 trep @   0.0017 msec (580000.0/sec): 4 by 4 float matrix multiply

1063000 reps @   0.0027 msec (366000.0/sec): recurse 250 simple function calls and return
1063000 reps @   0.0027 msec (367000.0/sec): recurse 250 simple function calls and return
1063000 reps @   0.0027 msec (367000.0/sec): recurse 250 simple function calls and return
3189000 trep @   0.0027 msec (367000.0/sec): recurse 250 simple function calls and return

3295600 reps @   0.0009 msec (1100000.0/sec): bcopy of 256 bytes
3295600 reps @   0.0009 msec (1100000.0/sec): bcopy of 256 bytes
3295600 reps @   0.0009 msec (1100000.0/sec): bcopy of 256 bytes
9886800 trep @   0.0009 msec (1100000.0/sec): bcopy of 256 bytes

  67440 reps @   0.0443 msec ( 22600.0/sec): bcopy of 16 kilobytes
  67440 reps @   0.0442 msec ( 22600.0/sec): bcopy of 16 kilobytes
  67440 reps @   0.0441 msec ( 22700.0/sec): bcopy of 16 kilobytes
 202320 trep @   0.0442 msec ( 22600.0/sec): bcopy of 16 kilobytes

   7552 reps @   0.3955 msec (  2530.0/sec): bcopy of 100 kilobytes
   7552 reps @   0.3951 msec (  2530.0/sec): bcopy of 100 kilobytes
   7552 reps @   0.3946 msec (  2530.0/sec): bcopy of 100 kilobytes
  22656 trep @   0.3951 msec (  2530.0/sec): bcopy of 100 kilobytes

    236 reps @  11.9336 msec (    83.8/sec): bcopy of 1 megabyte
    236 reps @  11.8916 msec (    84.1/sec): bcopy of 1 megabyte
    236 reps @  11.9089 msec (    84.0/sec): bcopy of 1 megabyte
    708 trep @  11.9114 msec (    84.0/sec): bcopy of 1 megabyte

     24 reps @ 119.9387 msec (    8.34/sec): bcopy of 10 megabytes
     24 reps @ 119.5743 msec (    8.36/sec): bcopy of 10 megabytes
     24 reps @ 119.3358 msec (    8.38/sec): bcopy of 10 megabytes
     72 trep @ 119.6162 msec (    8.36/sec): bcopy of 10 megabytes

     28 reps @ 112.7125 msec (    8.87/sec): bcopy of 10 megabytes (cacheline-aligned)
     28 reps @ 112.9560 msec (    8.85/sec): bcopy of 10 megabytes (cacheline-aligned)
     28 reps @ 112.7266 msec (    8.87/sec): bcopy of 10 megabytes (cacheline-aligned)
     84 trep @ 112.7984 msec (    8.87/sec): bcopy of 10 megabytes (cacheline-aligned)

     28 reps @ 112.1404 msec (    8.92/sec): bcopy of 10 megabytes (word mis-aligned)
     28 reps @ 112.1116 msec (    8.92/sec): bcopy of 10 megabytes (word mis-aligned)
     28 reps @ 112.1002 msec (    8.92/sec): bcopy of 10 megabytes (word mis-aligned)
     84 trep @ 112.1174 msec (    8.92/sec): bcopy of 10 megabytes (word mis-aligned)

     28 reps @ 122.0238 msec (    8.20/sec): bcopy of 10 megabytes (dword mis-aligned)
     28 reps @ 121.7454 msec (    8.21/sec): bcopy of 10 megabytes (dword mis-aligned)
     28 reps @ 121.5252 msec (    8.23/sec): bcopy of 10 megabytes (dword mis-aligned)
     84 trep @ 121.7648 msec (    8.21/sec): bcopy of 10 megabytes (dword mis-aligned)

6195200 reps @   0.0005 msec (2080000.0/sec): bzero of 256 bytes
6195200 reps @   0.0005 msec (2080000.0/sec): bzero of 256 bytes
6195200 reps @   0.0005 msec (2090000.0/sec): bzero of 256 bytes
18585600 trep @   0.0005 msec (2080000.0/sec): bzero of 256 bytes

 130000 reps @   0.0222 msec ( 45000.0/sec): bzero of 16 kilobytes
 130000 reps @   0.0222 msec ( 45100.0/sec): bzero of 16 kilobytes
 130000 reps @   0.0222 msec ( 45000.0/sec): bzero of 16 kilobytes
 390000 trep @   0.0222 msec ( 45000.0/sec): bzero of 16 kilobytes

  13572 reps @   0.2202 msec (  4540.0/sec): bzero of 100 kilobytes
  13572 reps @   0.2196 msec (  4550.0/sec): bzero of 100 kilobytes
  13572 reps @   0.2191 msec (  4560.0/sec): bzero of 100 kilobytes
  40716 trep @   0.2196 msec (  4550.0/sec): bzero of 100 kilobytes

    416 reps @   6.7750 msec (   148.0/sec): bzero of 1 megabyte
    416 reps @   6.6132 msec (   151.0/sec): bzero of 1 megabyte
    416 reps @   6.6356 msec (   151.0/sec): bzero of 1 megabyte
   1248 trep @   6.6746 msec (   150.0/sec): bzero of 1 megabyte

     48 reps @  66.1489 msec (    15.1/sec): bzero of 10 megabytes
     48 reps @  66.1327 msec (    15.1/sec): bzero of 10 megabytes
     48 reps @  66.1285 msec (    15.1/sec): bzero of 10 megabytes
    144 trep @  66.1367 msec (    15.1/sec): bzero of 10 megabytes

     48 reps @  66.1683 msec (    15.1/sec): bzero of 10 megabytes (cacheline-aligned)
     48 reps @  66.4153 msec (    15.1/sec): bzero of 10 megabytes (cacheline-aligned)
     48 reps @  66.1230 msec (    15.1/sec): bzero of 10 megabytes (cacheline-aligned)
    144 trep @  66.2356 msec (    15.1/sec): bzero of 10 megabytes (cacheline-aligned)

     48 reps @  63.2164 msec (    15.8/sec): bzero of 10 megabytes (word mis-aligned)
     48 reps @  63.2257 msec (    15.8/sec): bzero of 10 megabytes (word mis-aligned)
     48 reps @  63.3952 msec (    15.8/sec): bzero of 10 megabytes (word mis-aligned)
    144 trep @  63.2791 msec (    15.8/sec): bzero of 10 megabytes (word mis-aligned)

     48 reps @  66.6990 msec (    15.0/sec): bzero of 10 megabytes (dword mis-aligned)
     48 reps @  66.6998 msec (    15.0/sec): bzero of 10 megabytes (dword mis-aligned)
     48 reps @  66.7009 msec (    15.0/sec): bzero of 10 megabytes (dword mis-aligned)
    144 trep @  66.6999 msec (    15.0/sec): bzero of 10 megabytes (dword mis-aligned)

   6641 reps @   0.4384 msec (  2280.0/sec): bcopy then qsort 400 32-bit integers
   6641 reps @   0.4403 msec (  2270.0/sec): bcopy then qsort 400 32-bit integers
   6641 reps @   0.4379 msec (  2280.0/sec): bcopy then qsort 400 32-bit integers
  19923 trep @   0.4389 msec (  2280.0/sec): bcopy then qsort 400 32-bit integers

    105 reps @  28.6958 msec (    34.8/sec): bcopy then qsort 16,000 32-bit integers
    105 reps @  28.7405 msec (    34.8/sec): bcopy then qsort 16,000 32-bit integers
    105 reps @  28.8325 msec (    34.7/sec): bcopy then qsort 16,000 32-bit integers
    315 trep @  28.7563 msec (    34.8/sec): bcopy then qsort 16,000 32-bit integers

     22 reps @ 132.9949 msec (    7.52/sec): bcopy then qsort 64,000 32-bit integers
     22 reps @ 132.5931 msec (    7.54/sec): bcopy then qsort 64,000 32-bit integers
     22 reps @ 132.9670 msec (    7.52/sec): bcopy then qsort 64,000 32-bit integers
     66 trep @ 132.8517 msec (    7.53/sec): bcopy then qsort 64,000 32-bit integers

5927500 reps @   0.0005 msec (2050000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
5927500 reps @   0.0005 msec (2040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
5927500 reps @   0.0005 msec (2040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
17782500 trep @   0.0005 msec (2040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

4567500 reps @   0.0007 msec (1530000.0/sec): basic double trigonometric function (sin/cos/tan)
4567500 reps @   0.0007 msec (1530000.0/sec): basic double trigonometric function (sin/cos/tan)
4567500 reps @   0.0007 msec (1530000.0/sec): basic double trigonometric function (sin/cos/tan)
13702500 trep @   0.0007 msec (1530000.0/sec): basic double trigonometric function (sin/cos/tan)

1072000 reps @   0.0028 msec (355000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1072000 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1072000 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
3216000 trep @   0.0028 msec (357000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  13500 reps @   0.2263 msec (  4420.0/sec): Tower of Hanoi recursion test (10 deep)
  13500 reps @   0.2260 msec (  4420.0/sec): Tower of Hanoi recursion test (10 deep)
  13500 reps @   0.2256 msec (  4430.0/sec): Tower of Hanoi recursion test (10 deep)
  40500 trep @   0.2260 msec (  4430.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @   7.4186 msec (   135.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   7.4143 msec (   135.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   7.4158 msec (   135.0/sec): Tower of Hanoi recursion test (15 deep)
   1800 trep @   7.4162 msec (   135.0/sec): Tower of Hanoi recursion test (15 deep)

 388500 reps @   0.0077 msec (130000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 388500 reps @   0.0077 msec (130000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 388500 reps @   0.0077 msec (130000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
1165500 trep @   0.0077 msec (130000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 110200 reps @   0.0277 msec ( 36100.0/sec): write 80 bytes to a log file
 110200 reps @   0.0281 msec ( 35600.0/sec): write 80 bytes to a log file
 110200 reps @   0.0298 msec ( 33600.0/sec): write 80 bytes to a log file
 330600 trep @   0.0285 msec ( 35000.0/sec): write 80 bytes to a log file

    600 reps @   5.2076 msec (   192.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.7209 msec (   212.0/sec): per-file cost of creating 100 files then unlinking them all
    600 reps @   4.8049 msec (   208.0/sec): per-file cost of creating 100 files then unlinking them all
   1800 trep @   4.9111 msec (   204.0/sec): per-file cost of creating 100 files then unlinking them all

  35200 reps @   0.0855 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files
  35200 reps @   0.0855 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files
  35200 reps @   0.0855 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files
 105600 trep @   0.0855 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files

  26600 reps @   0.0995 msec ( 10000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  26600 reps @   0.0839 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  26600 reps @   0.0848 msec ( 11800.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  79800 trep @   0.0894 msec ( 11200.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 211000 reps @   0.0142 msec ( 70200.0/sec): cost of stat'ing current dir
 211000 reps @   0.0143 msec ( 70100.0/sec): cost of stat'ing current dir
 211000 reps @   0.0142 msec ( 70300.0/sec): cost of stat'ing current dir
 633000 trep @   0.0142 msec ( 70200.0/sec): cost of stat'ing current dir

  43000 reps @   0.0708 msec ( 14100.0/sec): cost of stat'ing 5 component path
  43000 reps @   0.0704 msec ( 14200.0/sec): cost of stat'ing 5 component path
  43000 reps @   0.0703 msec ( 14200.0/sec): cost of stat'ing 5 component path
 129000 trep @   0.0705 msec ( 14200.0/sec): cost of stat'ing 5 component path

   1307 reps @   2.2994 msec (   435.0/sec): open directory and stat 100 files in it
   1307 reps @   2.2997 msec (   435.0/sec): open directory and stat 100 files in it
   1307 reps @   2.2978 msec (   435.0/sec): open directory and stat 100 files in it
   3921 trep @   2.2990 msec (   435.0/sec): open directory and stat 100 files in it

    600 reps @   4.9224 msec (   203.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    600 reps @   3.9910 msec (   251.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    600 reps @   4.0182 msec (   249.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1800 trep @   4.3105 msec (   232.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 281700 reps @   0.0106 msec ( 94100.0/sec): ndbm lookup into database with 900 entries
 281700 reps @   0.0106 msec ( 93900.0/sec): ndbm lookup into database with 900 entries
 281700 reps @   0.0106 msec ( 94400.0/sec): ndbm lookup into database with 900 entries
 845100 trep @   0.0106 msec ( 94100.0/sec): ndbm lookup into database with 900 entries

  42800 reps @   0.0660 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
  42800 reps @   0.0660 msec ( 15200.0/sec): 1 byte token passing between two processes using two pipes
  42800 reps @   0.0659 msec ( 15200.0/sec): 1 byte token passing between two processes using two pipes
 128400 trep @   0.0660 msec ( 15200.0/sec): 1 byte token passing between two processes using two pipes

  37200 reps @   0.0763 msec ( 13100.0/sec): 1 kilobyte token passing between two processes using two pipes
  37200 reps @   0.0766 msec ( 13100.0/sec): 1 kilobyte token passing between two processes using two pipes
  37200 reps @   0.0763 msec ( 13100.0/sec): 1 kilobyte token passing between two processes using two pipes
 111600 trep @   0.0764 msec ( 13100.0/sec): 1 kilobyte token passing between two processes using two pipes

   2550 reps @   2.7273 msec (   367.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   2550 reps @   3.8966 msec (   257.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   2550 reps @   5.3886 msec (   186.0/sec): server echoes byte using local TCP during TIME WAIT backlog
   7650 trep @   4.0042 msec (   250.0/sec): server echoes byte using local TCP during TIME WAIT backlog


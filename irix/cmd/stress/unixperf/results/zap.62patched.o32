UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: zap
Operating system: IRIX 6.2
Compiler version: unknown
Instruction set: MIPS 2
Application binary interface: O32
Iris Audio Processor: version A2 revision 4.1.0
1 180 MHZ IP22 Processor
FPU: MIPS R5000 Floating Point Coprocessor Revision: 1.0
CPU: MIPS R5000 Processor Chip Revision: 1.0
On-board serial ports: 2
On-board bi-directional parallel port
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 512 Kbytes on Processor 0
Main memory size: 96 Mbytes
Vino video: unit 0, revision 0, IndyCam connected
Integral ISDN: Basic Rate Interface unit 0, revision 1.0
Integral Ethernet: ec0, version 1
Integral SCSI controller 0: Version WD33C93B, revision D
  Tape drive: unit 7 on SCSI controller 0: DAT
  CDROM: unit 4 on SCSI controller 0
  Disk drive: unit 1 on SCSI controller 0
Graphics board: GR3-XZ
Uptime: 9 days, 14:03
Users: 1
Load average: 1.03, 2.19, 1.99
File IO test directory: /usr/tmp
File IO test filesystem: xfs (1915.95 MB total, 580.93 MB available)
Date: Mon Aug 11 16:09:29 1997

1979448 reps @   0.0025 msec (396000.0/sec): 4 by 4 double matrix multiply
1979448 reps @   0.0025 msec (396000.0/sec): 4 by 4 double matrix multiply
1979448 reps @   0.0025 msec (396000.0/sec): 4 by 4 double matrix multiply
1979448 reps @   0.0025 msec (396000.0/sec): 4 by 4 double matrix multiply
1979448 reps @   0.0026 msec (391000.0/sec): 4 by 4 double matrix multiply
9897240 trep @   0.0025 msec (395000.0/sec): 4 by 4 double matrix multiply

2232120 reps @   0.0022 msec (446000.0/sec): 4 by 4 float matrix multiply
2232120 reps @   0.0022 msec (446000.0/sec): 4 by 4 float matrix multiply
2232120 reps @   0.0022 msec (446000.0/sec): 4 by 4 float matrix multiply
2232120 reps @   0.0022 msec (446000.0/sec): 4 by 4 float matrix multiply
2232120 reps @   0.0022 msec (446000.0/sec): 4 by 4 float matrix multiply
11160600 trep @   0.0022 msec (446000.0/sec): 4 by 4 float matrix multiply

1168000 reps @   0.0043 msec (234000.0/sec): recurse 250 simple function calls and return
1168000 reps @   0.0043 msec (234000.0/sec): recurse 250 simple function calls and return
1168000 reps @   0.0043 msec (234000.0/sec): recurse 250 simple function calls and return
1168000 reps @   0.0043 msec (234000.0/sec): recurse 250 simple function calls and return
1168000 reps @   0.0043 msec (234000.0/sec): recurse 250 simple function calls and return
5840000 trep @   0.0043 msec (234000.0/sec): recurse 250 simple function calls and return

4464400 reps @   0.0011 msec (893000.0/sec): bcopy of 256 bytes
4464400 reps @   0.0011 msec (893000.0/sec): bcopy of 256 bytes
4464400 reps @   0.0011 msec (893000.0/sec): bcopy of 256 bytes
4464400 reps @   0.0011 msec (893000.0/sec): bcopy of 256 bytes
4464400 reps @   0.0011 msec (893000.0/sec): bcopy of 256 bytes
22322000 trep @   0.0011 msec (893000.0/sec): bcopy of 256 bytes

  91720 reps @   0.0546 msec ( 18300.0/sec): bcopy of 16 kilobytes
  91720 reps @   0.0547 msec ( 18300.0/sec): bcopy of 16 kilobytes
  91720 reps @   0.0546 msec ( 18300.0/sec): bcopy of 16 kilobytes
  91720 reps @   0.0546 msec ( 18300.0/sec): bcopy of 16 kilobytes
  91720 reps @   0.0546 msec ( 18300.0/sec): bcopy of 16 kilobytes
 458600 trep @   0.0546 msec ( 18300.0/sec): bcopy of 16 kilobytes

   1940 reps @   2.5816 msec (   387.0/sec): bcopy of 100 kilobytes
   1940 reps @   2.5817 msec (   387.0/sec): bcopy of 100 kilobytes
   1940 reps @   2.5811 msec (   387.0/sec): bcopy of 100 kilobytes
   1940 reps @   2.5791 msec (   388.0/sec): bcopy of 100 kilobytes
   1940 reps @   2.5799 msec (   388.0/sec): bcopy of 100 kilobytes
   9700 trep @   2.5807 msec (   387.0/sec): bcopy of 100 kilobytes

    120 reps @  39.2216 msec (    25.5/sec): bcopy of 1 megabyte
    120 reps @  39.2441 msec (    25.5/sec): bcopy of 1 megabyte
    120 reps @  39.2891 msec (    25.5/sec): bcopy of 1 megabyte
    120 reps @  39.2419 msec (    25.5/sec): bcopy of 1 megabyte
    120 reps @  39.2238 msec (    25.5/sec): bcopy of 1 megabyte
    600 trep @  39.2441 msec (    25.5/sec): bcopy of 1 megabyte

     12 reps @ 398.7056 msec (    2.51/sec): bcopy of 10 megabytes
     12 reps @ 398.9238 msec (    2.51/sec): bcopy of 10 megabytes
     12 reps @ 398.9765 msec (    2.51/sec): bcopy of 10 megabytes
     12 reps @ 399.2116 msec (    2.50/sec): bcopy of 10 megabytes
     12 reps @ 398.8977 msec (    2.51/sec): bcopy of 10 megabytes
     60 trep @ 398.9430 msec (    2.51/sec): bcopy of 10 megabytes

     16 reps @ 402.0538 msec (    2.49/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 401.8376 msec (    2.49/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 401.7788 msec (    2.49/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 401.8474 msec (    2.49/sec): bcopy of 10 megabytes (cacheline-aligned)
     16 reps @ 401.5978 msec (    2.49/sec): bcopy of 10 megabytes (cacheline-aligned)
     80 trep @ 401.8231 msec (    2.49/sec): bcopy of 10 megabytes (cacheline-aligned)

     16 reps @ 408.3971 msec (    2.45/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 408.9061 msec (    2.45/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 408.6828 msec (    2.45/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 408.4318 msec (    2.45/sec): bcopy of 10 megabytes (word mis-aligned)
     16 reps @ 408.4742 msec (    2.45/sec): bcopy of 10 megabytes (word mis-aligned)
     80 trep @ 408.5784 msec (    2.45/sec): bcopy of 10 megabytes (word mis-aligned)

     16 reps @ 403.5953 msec (    2.48/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 403.8834 msec (    2.48/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 403.4727 msec (    2.48/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 403.9817 msec (    2.48/sec): bcopy of 10 megabytes (dword mis-aligned)
     16 reps @ 403.3822 msec (    2.48/sec): bcopy of 10 megabytes (dword mis-aligned)
     80 trep @ 403.6631 msec (    2.48/sec): bcopy of 10 megabytes (dword mis-aligned)

8138800 reps @   0.0006 msec (1630000.0/sec): bzero of 256 bytes
8138800 reps @   0.0006 msec (1630000.0/sec): bzero of 256 bytes
8138800 reps @   0.0006 msec (1630000.0/sec): bzero of 256 bytes
8138800 reps @   0.0006 msec (1630000.0/sec): bzero of 256 bytes
8138800 reps @   0.0006 msec (1630000.0/sec): bzero of 256 bytes
40694000 trep @   0.0006 msec (1630000.0/sec): bzero of 256 bytes

 159400 reps @   0.0314 msec ( 31900.0/sec): bzero of 16 kilobytes
 159400 reps @   0.0314 msec ( 31900.0/sec): bzero of 16 kilobytes
 159400 reps @   0.0314 msec ( 31900.0/sec): bzero of 16 kilobytes
 159400 reps @   0.0314 msec ( 31900.0/sec): bzero of 16 kilobytes
 159400 reps @   0.0314 msec ( 31900.0/sec): bzero of 16 kilobytes
 797000 trep @   0.0314 msec ( 31900.0/sec): bzero of 16 kilobytes

   3120 reps @   1.6020 msec (   624.0/sec): bzero of 100 kilobytes
   3120 reps @   1.6039 msec (   623.0/sec): bzero of 100 kilobytes
   3120 reps @   1.6056 msec (   623.0/sec): bzero of 100 kilobytes
   3120 reps @   1.6030 msec (   624.0/sec): bzero of 100 kilobytes
   3120 reps @   1.6019 msec (   624.0/sec): bzero of 100 kilobytes
  15600 trep @   1.6033 msec (   624.0/sec): bzero of 100 kilobytes

    216 reps @  23.2590 msec (    43.0/sec): bzero of 1 megabyte
    216 reps @  23.2529 msec (    43.0/sec): bzero of 1 megabyte
    216 reps @  23.2843 msec (    42.9/sec): bzero of 1 megabyte
    216 reps @  23.6003 msec (    42.4/sec): bzero of 1 megabyte
    216 reps @  23.2704 msec (    43.0/sec): bzero of 1 megabyte
   1080 trep @  23.3334 msec (    42.9/sec): bzero of 1 megabyte

     24 reps @ 236.8041 msec (    4.22/sec): bzero of 10 megabytes
     24 reps @ 236.8999 msec (    4.22/sec): bzero of 10 megabytes
     24 reps @ 236.7557 msec (    4.22/sec): bzero of 10 megabytes
     24 reps @ 236.8484 msec (    4.22/sec): bzero of 10 megabytes
     24 reps @ 236.6805 msec (    4.23/sec): bzero of 10 megabytes
    120 trep @ 236.7977 msec (    4.22/sec): bzero of 10 megabytes

     24 reps @ 236.6525 msec (    4.23/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 236.7272 msec (    4.22/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 236.8632 msec (    4.22/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 237.0115 msec (    4.22/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 236.7034 msec (    4.22/sec): bzero of 10 megabytes (cacheline-aligned)
    120 trep @ 236.7916 msec (    4.22/sec): bzero of 10 megabytes (cacheline-aligned)

     24 reps @ 236.8145 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 236.7274 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 236.8745 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 236.7574 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 236.7258 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)
    120 trep @ 236.7799 msec (    4.22/sec): bzero of 10 megabytes (word mis-aligned)

     24 reps @ 236.7319 msec (    4.22/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.7564 msec (    4.22/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.8429 msec (    4.22/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.8324 msec (    4.22/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 236.8118 msec (    4.22/sec): bzero of 10 megabytes (dword mis-aligned)
    120 trep @ 236.7951 msec (    4.22/sec): bzero of 10 megabytes (dword mis-aligned)

   9130 reps @   0.5441 msec (  1840.0/sec): bcopy then qsort 400 32-bit integers
   9130 reps @   0.5437 msec (  1840.0/sec): bcopy then qsort 400 32-bit integers
   9130 reps @   0.5438 msec (  1840.0/sec): bcopy then qsort 400 32-bit integers
   9130 reps @   0.5440 msec (  1840.0/sec): bcopy then qsort 400 32-bit integers
   9130 reps @   0.5439 msec (  1840.0/sec): bcopy then qsort 400 32-bit integers
  45650 trep @   0.5439 msec (  1840.0/sec): bcopy then qsort 400 32-bit integers

    136 reps @  36.5244 msec (    27.4/sec): bcopy then qsort 16,000 32-bit integers
    136 reps @  36.5203 msec (    27.4/sec): bcopy then qsort 16,000 32-bit integers
    136 reps @  36.5176 msec (    27.4/sec): bcopy then qsort 16,000 32-bit integers
    136 reps @  36.5159 msec (    27.4/sec): bcopy then qsort 16,000 32-bit integers
    136 reps @  36.5239 msec (    27.4/sec): bcopy then qsort 16,000 32-bit integers
    680 trep @  36.5204 msec (    27.4/sec): bcopy then qsort 16,000 32-bit integers

     28 reps @ 176.4992 msec (    5.67/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 176.4813 msec (    5.67/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 176.7429 msec (    5.66/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 176.2855 msec (    5.67/sec): bcopy then qsort 64,000 32-bit integers
     28 reps @ 176.3324 msec (    5.67/sec): bcopy then qsort 64,000 32-bit integers
    140 trep @ 176.4683 msec (    5.67/sec): bcopy then qsort 64,000 32-bit integers

7757500 reps @   0.0006 msec (1550000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7757500 reps @   0.0006 msec (1550000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7757500 reps @   0.0006 msec (1550000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7757500 reps @   0.0006 msec (1550000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
7757500 reps @   0.0006 msec (1550000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
38787500 trep @   0.0006 msec (1550000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

5940000 reps @   0.0008 msec (1190000.0/sec): basic double trigonometric function (sin/cos/tan)
5940000 reps @   0.0008 msec (1190000.0/sec): basic double trigonometric function (sin/cos/tan)
5940000 reps @   0.0008 msec (1190000.0/sec): basic double trigonometric function (sin/cos/tan)
5940000 reps @   0.0008 msec (1190000.0/sec): basic double trigonometric function (sin/cos/tan)
5940000 reps @   0.0008 msec (1190000.0/sec): basic double trigonometric function (sin/cos/tan)
29700000 trep @   0.0008 msec (1190000.0/sec): basic double trigonometric function (sin/cos/tan)

1396500 reps @   0.0036 msec (279000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1396500 reps @   0.0036 msec (279000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1396500 reps @   0.0036 msec (279000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1396500 reps @   0.0036 msec (279000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1396500 reps @   0.0036 msec (279000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
6982500 trep @   0.0036 msec (279000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  16500 reps @   0.3072 msec (  3260.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3072 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3072 msec (  3260.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3073 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  16500 reps @   0.3075 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)
  82500 trep @   0.3073 msec (  3250.0/sec): Tower of Hanoi recursion test (10 deep)

    600 reps @   9.8361 msec (   102.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.8323 msec (   102.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.8356 msec (   102.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.8374 msec (   102.0/sec): Tower of Hanoi recursion test (15 deep)
    600 reps @   9.8358 msec (   102.0/sec): Tower of Hanoi recursion test (15 deep)
   3000 trep @   9.8355 msec (   102.0/sec): Tower of Hanoi recursion test (15 deep)

 307000 reps @   0.0163 msec ( 61500.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 307000 reps @   0.0163 msec ( 61500.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 307000 reps @   0.0163 msec ( 61500.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 307000 reps @   0.0163 msec ( 61500.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 307000 reps @   0.0163 msec ( 61400.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
1535000 trep @   0.0163 msec ( 61500.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

  70800 reps @   0.0729 msec ( 13700.0/sec): write 80 bytes to a log file
  70800 reps @   0.0738 msec ( 13500.0/sec): write 80 bytes to a log file
  70800 reps @   0.0742 msec ( 13500.0/sec): write 80 bytes to a log file
  70800 reps @   0.0763 msec ( 13100.0/sec): write 80 bytes to a log file
  70800 reps @   0.0773 msec ( 12900.0/sec): write 80 bytes to a log file
 354000 trep @   0.0749 msec ( 13400.0/sec): write 80 bytes to a log file

    900 reps @   6.0870 msec (   164.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   5.9334 msec (   169.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   6.2294 msec (   161.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   5.9901 msec (   167.0/sec): per-file cost of creating 100 files then unlinking them all
    900 reps @   5.9336 msec (   169.0/sec): per-file cost of creating 100 files then unlinking them all
   4500 trep @   6.0347 msec (   166.0/sec): per-file cost of creating 100 files then unlinking them all

  55300 reps @   0.0910 msec ( 11000.0/sec): per-file cost of open and immediate close of 100 files
  55300 reps @   0.0909 msec ( 11000.0/sec): per-file cost of open and immediate close of 100 files
  55300 reps @   0.0909 msec ( 11000.0/sec): per-file cost of open and immediate close of 100 files
  55300 reps @   0.0899 msec ( 11100.0/sec): per-file cost of open and immediate close of 100 files
  55300 reps @   0.0888 msec ( 11300.0/sec): per-file cost of open and immediate close of 100 files
 276500 trep @   0.0903 msec ( 11100.0/sec): per-file cost of open and immediate close of 100 files

  39400 reps @   0.1314 msec (  7610.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39400 reps @   0.1243 msec (  8050.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39400 reps @   0.1244 msec (  8040.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39400 reps @   0.1279 msec (  7820.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  39400 reps @   0.1243 msec (  8050.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 197000 trep @   0.1265 msec (  7910.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 268500 reps @   0.0189 msec ( 52800.0/sec): cost of stat'ing current dir
 268500 reps @   0.0189 msec ( 52800.0/sec): cost of stat'ing current dir
 268500 reps @   0.0192 msec ( 52000.0/sec): cost of stat'ing current dir
 268500 reps @   0.0193 msec ( 51700.0/sec): cost of stat'ing current dir
 268500 reps @   0.0194 msec ( 51600.0/sec): cost of stat'ing current dir
1342500 trep @   0.0192 msec ( 52200.0/sec): cost of stat'ing current dir

  63500 reps @   0.0796 msec ( 12600.0/sec): cost of stat'ing 5 component path
  63500 reps @   0.0795 msec ( 12600.0/sec): cost of stat'ing 5 component path
  63500 reps @   0.0793 msec ( 12600.0/sec): cost of stat'ing 5 component path
  63500 reps @   0.0798 msec ( 12500.0/sec): cost of stat'ing 5 component path
  63500 reps @   0.0798 msec ( 12500.0/sec): cost of stat'ing 5 component path
 317500 trep @   0.0796 msec ( 12600.0/sec): cost of stat'ing 5 component path

   1556 reps @   3.2226 msec (   310.0/sec): open directory and stat 100 files in it
   1556 reps @   3.2222 msec (   310.0/sec): open directory and stat 100 files in it
   1556 reps @   3.2214 msec (   310.0/sec): open directory and stat 100 files in it
   1556 reps @   3.2195 msec (   311.0/sec): open directory and stat 100 files in it
   1556 reps @   3.2256 msec (   310.0/sec): open directory and stat 100 files in it
   7780 trep @   3.2223 msec (   310.0/sec): open directory and stat 100 files in it

    900 reps @   6.3402 msec (   158.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   6.1512 msec (   163.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   5.9463 msec (   168.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   5.9762 msec (   167.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   5.9418 msec (   168.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   4500 trep @   6.0712 msec (   165.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 216900 reps @   0.0232 msec ( 43200.0/sec): ndbm lookup into database with 900 entries
 216900 reps @   0.0232 msec ( 43200.0/sec): ndbm lookup into database with 900 entries
 216900 reps @   0.0216 msec ( 46300.0/sec): ndbm lookup into database with 900 entries
 216900 reps @   0.0203 msec ( 49300.0/sec): ndbm lookup into database with 900 entries
 216900 reps @   0.0203 msec ( 49300.0/sec): ndbm lookup into database with 900 entries
1084500 trep @   0.0217 msec ( 46100.0/sec): ndbm lookup into database with 900 entries

  55200 reps @   0.0909 msec ( 11000.0/sec): 1 byte token passing between two processes using two pipes
  55200 reps @   0.0912 msec ( 11000.0/sec): 1 byte token passing between two processes using two pipes
  55200 reps @   0.0910 msec ( 11000.0/sec): 1 byte token passing between two processes using two pipes
  55200 reps @   0.0914 msec ( 10900.0/sec): 1 byte token passing between two processes using two pipes
  55200 reps @   0.0910 msec ( 11000.0/sec): 1 byte token passing between two processes using two pipes
 276000 trep @   0.0911 msec ( 11000.0/sec): 1 byte token passing between two processes using two pipes

  39200 reps @   0.1266 msec (  7900.0/sec): 1 kilobyte token passing between two processes using two pipes
  39200 reps @   0.1271 msec (  7870.0/sec): 1 kilobyte token passing between two processes using two pipes
  39200 reps @   0.1264 msec (  7910.0/sec): 1 kilobyte token passing between two processes using two pipes
  39200 reps @   0.1265 msec (  7900.0/sec): 1 kilobyte token passing between two processes using two pipes
  39200 reps @   0.1268 msec (  7890.0/sec): 1 kilobyte token passing between two processes using two pipes
 196000 trep @   0.1267 msec (  7890.0/sec): 1 kilobyte token passing between two processes using two pipes

10184000 reps @   0.0005 msec (2040000.0/sec): setjmp/longjmp
10184000 reps @   0.0005 msec (2040000.0/sec): setjmp/longjmp
10184000 reps @   0.0005 msec (2030000.0/sec): setjmp/longjmp
10184000 reps @   0.0005 msec (2040000.0/sec): setjmp/longjmp
10184000 reps @   0.0005 msec (2040000.0/sec): setjmp/longjmp
50920000 trep @   0.0005 msec (2040000.0/sec): setjmp/longjmp

 236000 reps @   0.0215 msec ( 46500.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 236000 reps @   0.0215 msec ( 46500.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 236000 reps @   0.0215 msec ( 46400.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 236000 reps @   0.0216 msec ( 46400.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 236000 reps @   0.0215 msec ( 46400.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1180000 trep @   0.0215 msec ( 46400.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   1615 reps @   3.0790 msec (   325.0/sec): create/destroy client UDP-based SunRPC handle
   1615 reps @   3.0750 msec (   325.0/sec): create/destroy client UDP-based SunRPC handle
   1615 reps @   3.0806 msec (   325.0/sec): create/destroy client UDP-based SunRPC handle
   1615 reps @   3.0766 msec (   325.0/sec): create/destroy client UDP-based SunRPC handle
   1615 reps @   3.0758 msec (   325.0/sec): create/destroy client UDP-based SunRPC handle
   8075 trep @   3.0774 msec (   325.0/sec): create/destroy client UDP-based SunRPC handle

   7200 reps @   0.7014 msec (  1430.0/sec): TCP-based SunRPC to negate an integer
   7200 reps @   0.7021 msec (  1420.0/sec): TCP-based SunRPC to negate an integer
   7200 reps @   0.7022 msec (  1420.0/sec): TCP-based SunRPC to negate an integer
   7200 reps @   0.7018 msec (  1420.0/sec): TCP-based SunRPC to negate an integer
   7200 reps @   0.7000 msec (  1430.0/sec): TCP-based SunRPC to negate an integer
  36000 trep @   0.7015 msec (  1430.0/sec): TCP-based SunRPC to negate an integer

   5600 reps @   0.9258 msec (  1080.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.9248 msec (  1080.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.9248 msec (  1080.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.9282 msec (  1080.0/sec): UDP-based SunRPC to negate an integer
   5600 reps @   0.9273 msec (  1080.0/sec): UDP-based SunRPC to negate an integer
  28000 trep @   0.9262 msec (  1080.0/sec): UDP-based SunRPC to negate an integer

   7600 reps @   0.6775 msec (  1480.0/sec): TCP-based SunRPC no-op
   7600 reps @   0.6796 msec (  1470.0/sec): TCP-based SunRPC no-op
   7600 reps @   0.6807 msec (  1470.0/sec): TCP-based SunRPC no-op
   7600 reps @   0.6779 msec (  1480.0/sec): TCP-based SunRPC no-op
   7600 reps @   0.6782 msec (  1470.0/sec): TCP-based SunRPC no-op
  38000 trep @   0.6788 msec (  1470.0/sec): TCP-based SunRPC no-op

   5600 reps @   0.9083 msec (  1100.0/sec): UDP-based SunRPC no-op
   5600 reps @   0.9051 msec (  1100.0/sec): UDP-based SunRPC no-op
   5600 reps @   0.9057 msec (  1100.0/sec): UDP-based SunRPC no-op
   5600 reps @   0.9043 msec (  1110.0/sec): UDP-based SunRPC no-op
   5600 reps @   0.9051 msec (  1100.0/sec): UDP-based SunRPC no-op
  28000 trep @   0.9057 msec (  1100.0/sec): UDP-based SunRPC no-op

1778000 reps @   0.0028 msec (356000.0/sec): getpid system call
1778000 reps @   0.0028 msec (356000.0/sec): getpid system call
1778000 reps @   0.0028 msec (356000.0/sec): getpid system call
1778000 reps @   0.0028 msec (356000.0/sec): getpid system call
1778000 reps @   0.0028 msec (356000.0/sec): getpid system call
8890000 trep @   0.0028 msec (356000.0/sec): getpid system call

 243000 reps @   0.0206 msec ( 48600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 243000 reps @   0.0206 msec ( 48600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 243000 reps @   0.0206 msec ( 48500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 243000 reps @   0.0206 msec ( 48500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 243000 reps @   0.0206 msec ( 48600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1215000 trep @   0.0206 msec ( 48600.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

1021600 reps @   0.0049 msec (204000.0/sec): gettimeofday system call
1021600 reps @   0.0049 msec (204000.0/sec): gettimeofday system call
1021600 reps @   0.0049 msec (204000.0/sec): gettimeofday system call
1021600 reps @   0.0049 msec (204000.0/sec): gettimeofday system call
1021600 reps @   0.0049 msec (204000.0/sec): gettimeofday system call
5108000 trep @   0.0049 msec (204000.0/sec): gettimeofday system call

    500 reps @  10.1147 msec (    98.9/sec): fork, child immediately exits, parent waits
    500 reps @  11.7973 msec (    84.8/sec): fork, child immediately exits, parent waits
    500 reps @  14.4541 msec (    69.2/sec): fork, child immediately exits, parent waits
    500 reps @  14.4826 msec (    69.0/sec): fork, child immediately exits, parent waits
    500 reps @  14.4597 msec (    69.2/sec): fork, child immediately exits, parent waits
   2500 trep @  13.0617 msec (    76.6/sec): fork, child immediately exits, parent waits

      5 reps @ 1009.9930 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9726 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9744 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9832 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9786 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1009.9804 msec (    0.99/sec): sleep for one second (validates test time)

 912100 reps @   0.0055 msec (182000.0/sec): select on no fds with no timeout
 912100 reps @   0.0055 msec (182000.0/sec): select on no fds with no timeout
 912100 reps @   0.0055 msec (182000.0/sec): select on no fds with no timeout
 912100 reps @   0.0055 msec (182000.0/sec): select on no fds with no timeout
 912100 reps @   0.0055 msec (182000.0/sec): select on no fds with no timeout
4560500 trep @   0.0055 msec (182000.0/sec): select on no fds with no timeout

 155600 reps @   0.0323 msec ( 31000.0/sec): select on 16 pipe read fds with immediate timeout
 155600 reps @   0.0322 msec ( 31000.0/sec): select on 16 pipe read fds with immediate timeout
 155600 reps @   0.0323 msec ( 31000.0/sec): select on 16 pipe read fds with immediate timeout
 155600 reps @   0.0322 msec ( 31000.0/sec): select on 16 pipe read fds with immediate timeout
 155600 reps @   0.0322 msec ( 31000.0/sec): select on 16 pipe read fds with immediate timeout
 778000 trep @   0.0323 msec ( 31000.0/sec): select on 16 pipe read fds with immediate timeout

  72900 reps @   0.0680 msec ( 14700.0/sec): select on 32 pipe read fds with immediate timeout
  72900 reps @   0.0680 msec ( 14700.0/sec): select on 32 pipe read fds with immediate timeout
  72900 reps @   0.0680 msec ( 14700.0/sec): select on 32 pipe read fds with immediate timeout
  72900 reps @   0.0679 msec ( 14700.0/sec): select on 32 pipe read fds with immediate timeout
  72900 reps @   0.0680 msec ( 14700.0/sec): select on 32 pipe read fds with immediate timeout
 364500 trep @   0.0680 msec ( 14700.0/sec): select on 32 pipe read fds with immediate timeout

 195200 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 195200 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 195200 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 195200 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 195200 reps @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout
 976000 trep @   0.0256 msec ( 39000.0/sec): select on 16 pipe write fds with immediate timeout

 198400 reps @   0.0252 msec ( 39700.0/sec): select on 32 pipe write fds with immediate timeout
 198400 reps @   0.0252 msec ( 39600.0/sec): select on 32 pipe write fds with immediate timeout
 198400 reps @   0.0252 msec ( 39600.0/sec): select on 32 pipe write fds with immediate timeout
 198400 reps @   0.0252 msec ( 39600.0/sec): select on 32 pipe write fds with immediate timeout
 198400 reps @   0.0252 msec ( 39700.0/sec): select on 32 pipe write fds with immediate timeout
 992000 trep @   0.0252 msec ( 39600.0/sec): select on 32 pipe write fds with immediate timeout

   2100 reps @   2.4762 msec (   404.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
   2100 reps @   2.4731 msec (   404.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
   2100 reps @   2.4757 msec (   404.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
   2100 reps @   2.4732 msec (   404.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
   2100 reps @   2.4738 msec (   404.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  10500 trep @   2.4744 msec (   404.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    140 reps @  38.1355 msec (    26.2/sec): popen and read from "/bin/echo hello"
    140 reps @  37.4480 msec (    26.7/sec): popen and read from "/bin/echo hello"
    140 reps @  38.1103 msec (    26.2/sec): popen and read from "/bin/echo hello"
    140 reps @  38.2229 msec (    26.2/sec): popen and read from "/bin/echo hello"
    140 reps @  37.5049 msec (    26.7/sec): popen and read from "/bin/echo hello"
    700 trep @  37.8843 msec (    26.4/sec): popen and read from "/bin/echo hello"

  24350 reps @   0.2049 msec (  4880.0/sec): mmap megabyte /dev/zero region 
  24350 reps @   0.2051 msec (  4880.0/sec): mmap megabyte /dev/zero region 
  24350 reps @   0.2049 msec (  4880.0/sec): mmap megabyte /dev/zero region 
  24350 reps @   0.2050 msec (  4880.0/sec): mmap megabyte /dev/zero region 
  24350 reps @   0.2050 msec (  4880.0/sec): mmap megabyte /dev/zero region 
 121750 trep @   0.2050 msec (  4880.0/sec): mmap megabyte /dev/zero region 

    168 reps @  29.9035 msec (    33.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    168 reps @  29.8996 msec (    33.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    168 reps @  29.9783 msec (    33.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    168 reps @  29.8985 msec (    33.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    168 reps @  29.9394 msec (    33.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    840 trep @  29.9239 msec (    33.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    193 reps @  22.8728 msec (    43.7/sec): copy every byte of newly mmaped megabyte file
    193 reps @  22.9663 msec (    43.5/sec): copy every byte of newly mmaped megabyte file
    193 reps @  23.5051 msec (    42.5/sec): copy every byte of newly mmaped megabyte file
    193 reps @  23.4363 msec (    42.7/sec): copy every byte of newly mmaped megabyte file
    193 reps @  23.3885 msec (    42.8/sec): copy every byte of newly mmaped megabyte file
    965 trep @  23.2338 msec (    43.0/sec): copy every byte of newly mmaped megabyte file

     27 reps @ 152.4067 msec (    6.56/sec): compress & uncompress 52 kilobyte text file of numbers
     27 reps @ 152.5414 msec (    6.56/sec): compress & uncompress 52 kilobyte text file of numbers
     27 reps @ 153.0390 msec (    6.53/sec): compress & uncompress 52 kilobyte text file of numbers
     27 reps @ 152.2239 msec (    6.57/sec): compress & uncompress 52 kilobyte text file of numbers
     27 reps @ 152.7833 msec (    6.55/sec): compress & uncompress 52 kilobyte text file of numbers
    135 trep @ 152.5988 msec (    6.55/sec): compress & uncompress 52 kilobyte text file of numbers

      8 reps @ 367.2487 msec (    2.72/sec): compile ANSI C `hello world' with no special options
      8 reps @ 370.9010 msec (    2.70/sec): compile ANSI C `hello world' with no special options
      8 reps @ 364.1550 msec (    2.75/sec): compile ANSI C `hello world' with no special options
      8 reps @ 371.2364 msec (    2.69/sec): compile ANSI C `hello world' with no special options
      8 reps @ 375.4046 msec (    2.66/sec): compile ANSI C `hello world' with no special options
     40 trep @ 369.7892 msec (    2.70/sec): compile ANSI C `hello world' with no special options

     18 reps @ 758.4421 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     18 reps @ 729.9833 msec (    1.37/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     18 reps @ 758.3073 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     18 reps @ 688.6214 msec (    1.45/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     18 reps @ 786.0388 msec (    1.27/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     90 trep @ 744.2786 msec (    1.34/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     10 reps @ 764.8579 msec (    1.31/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 717.6871 msec (    1.39/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 755.1735 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 735.1750 msec (    1.36/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 717.9626 msec (    1.39/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     50 trep @ 738.1712 msec (    1.35/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

      8 reps @ 750.5203 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 721.8846 msec (    1.39/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 739.6470 msec (    1.35/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 707.8230 msec (    1.41/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
      8 reps @ 742.4714 msec (    1.35/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     40 trep @ 732.4692 msec (    1.37/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 734.7028 msec (    1.36/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 761.5064 msec (    1.31/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 778.6857 msec (    1.28/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 685.0251 msec (    1.46/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 756.1600 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 743.2160 msec (    1.35/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 736.8566 msec (    1.36/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 737.6685 msec (    1.36/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 761.3532 msec (    1.31/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 701.7739 msec (    1.42/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 732.4902 msec (    1.37/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 734.0285 msec (    1.36/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 744.7745 msec (    1.34/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 718.0111 msec (    1.39/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 749.1466 msec (    1.33/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 723.2260 msec (    1.38/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 741.4062 msec (    1.35/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 735.3129 msec (    1.36/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      3 reps @ 1751.9680 msec (    0.57/sec): use dc to output first 1,000 factorials
      3 reps @ 1755.3910 msec (    0.57/sec): use dc to output first 1,000 factorials
      3 reps @ 1756.9523 msec (    0.57/sec): use dc to output first 1,000 factorials
      3 reps @ 1755.0683 msec (    0.57/sec): use dc to output first 1,000 factorials
      3 reps @ 1754.3987 msec (    0.57/sec): use dc to output first 1,000 factorials
     15 trep @ 1754.7557 msec (    0.57/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0056 msec (178000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (179000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (179000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (179000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0056 msec (179000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0056 msec (179000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  49636 reps @   0.1006 msec (  9950.0/sec): use regcomp to compile 51 char literal, then regfree
  49636 reps @   0.1005 msec (  9950.0/sec): use regcomp to compile 51 char literal, then regfree
  49636 reps @   0.1006 msec (  9940.0/sec): use regcomp to compile 51 char literal, then regfree
  49636 reps @   0.1006 msec (  9940.0/sec): use regcomp to compile 51 char literal, then regfree
  49636 reps @   0.1005 msec (  9950.0/sec): use regcomp to compile 51 char literal, then regfree
 248180 trep @   0.1006 msec (  9940.0/sec): use regcomp to compile 51 char literal, then regfree

      3 reps @ 1854.7733 msec (    0.54/sec): use regexec with 51 char literal to search 142 kilobyte text
      3 reps @ 1854.8807 msec (    0.54/sec): use regexec with 51 char literal to search 142 kilobyte text
      3 reps @ 1854.8880 msec (    0.54/sec): use regexec with 51 char literal to search 142 kilobyte text
      3 reps @ 1855.5787 msec (    0.54/sec): use regexec with 51 char literal to search 142 kilobyte text
      3 reps @ 1854.7127 msec (    0.54/sec): use regexec with 51 char literal to search 142 kilobyte text
     15 trep @ 1854.9667 msec (    0.54/sec): use regexec with 51 char literal to search 142 kilobyte text

  65428 reps @   0.0765 msec ( 13100.0/sec): use regcomp to compile long .* pattern, then regfree
  65428 reps @   0.0765 msec ( 13100.0/sec): use regcomp to compile long .* pattern, then regfree
  65428 reps @   0.0765 msec ( 13100.0/sec): use regcomp to compile long .* pattern, then regfree
  65428 reps @   0.0765 msec ( 13100.0/sec): use regcomp to compile long .* pattern, then regfree
  65428 reps @   0.0765 msec ( 13100.0/sec): use regcomp to compile long .* pattern, then regfree
 327140 trep @   0.0765 msec ( 13100.0/sec): use regcomp to compile long .* pattern, then regfree

      6 reps @ 943.7543 msec (    1.06/sec): use regexec with long .* pattern to search 142 kilobyte text
      6 reps @ 943.6002 msec (    1.06/sec): use regexec with long .* pattern to search 142 kilobyte text
      6 reps @ 943.6577 msec (    1.06/sec): use regexec with long .* pattern to search 142 kilobyte text
      6 reps @ 943.8578 msec (    1.06/sec): use regexec with long .* pattern to search 142 kilobyte text
      6 reps @ 944.0535 msec (    1.06/sec): use regexec with long .* pattern to search 142 kilobyte text
     30 trep @ 943.7847 msec (    1.06/sec): use regexec with long .* pattern to search 142 kilobyte text

  14320 reps @   0.3499 msec (  2860.0/sec): use getpwnam() to get root password entry
  14320 reps @   0.3494 msec (  2860.0/sec): use getpwnam() to get root password entry
  14320 reps @   0.3501 msec (  2860.0/sec): use getpwnam() to get root password entry
  14320 reps @   0.3504 msec (  2850.0/sec): use getpwnam() to get root password entry
  14320 reps @   0.3506 msec (  2850.0/sec): use getpwnam() to get root password entry
  71600 trep @   0.3501 msec (  2860.0/sec): use getpwnam() to get root password entry

  14360 reps @   0.3494 msec (  2860.0/sec): use getpwuid() to get root password entry
  14360 reps @   0.3495 msec (  2860.0/sec): use getpwuid() to get root password entry
  14360 reps @   0.3492 msec (  2860.0/sec): use getpwuid() to get root password entry
  14360 reps @   0.3500 msec (  2860.0/sec): use getpwuid() to get root password entry
  14360 reps @   0.3500 msec (  2860.0/sec): use getpwuid() to get root password entry
  71800 trep @   0.3496 msec (  2860.0/sec): use getpwuid() to get root password entry

 113160 reps @   0.0442 msec ( 22600.0/sec): use gethostbyname() to lookup localhost
 113160 reps @   0.0442 msec ( 22600.0/sec): use gethostbyname() to lookup localhost
 113160 reps @   0.0442 msec ( 22600.0/sec): use gethostbyname() to lookup localhost
 113160 reps @   0.0442 msec ( 22600.0/sec): use gethostbyname() to lookup localhost
 113160 reps @   0.0442 msec ( 22600.0/sec): use gethostbyname() to lookup localhost
 565800 trep @   0.0442 msec ( 22600.0/sec): use gethostbyname() to lookup localhost


UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: blackflag
Operating system: IRIX 6.3
Compiler version: 7.1
Instruction set: MIPS 4
Application binary interface: N32
Video: MVP unit 0 version 1.2
AV: AV1 Card version 1, O2Cam type 1 version 0 connected.
FLASH PROM version 4.0
On-board serial ports: 2
On-board EPP/ECP parallel port
1 174 MHZ IP32 Processor
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
CPU: MIPS R10000 Processor Chip Revision: 2.5
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 1 Mbyte on Processor 0
Main memory size: 128 Mbytes
Iris Audio Processor: version A3 revision 0
Integral Ethernet: ec0, version 1
  Disk drive: unit 6 on SCSI controller 1
  Disk drive: unit 5 on SCSI controller 1
  Disk drive: unit 4 on SCSI controller 1
  Disk drive: unit 3 on SCSI controller 1
  Disk drive: unit 2 on SCSI controller 1
  Disk drive: unit 1 on SCSI controller 1
  CDROM: unit 4 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
CRM graphics installed
Integral SCSI controller 1: Version ADAPTEC 7880
Integral SCSI controller 0: Version ADAPTEC 7880
Vice: TRE
Uptime: 1 day,  8:18
Users: 2
Load average: 1.09, 1.94, 1.79
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4153.77 MB total, 2187.97 MB available)
Date: Thu Mar 20 23:58:25 1997

7123128 reps @   0.0007 msec (1420000.0/sec): 4 by 4 double matrix multiply
7123128 reps @   0.0007 msec (1420000.0/sec): 4 by 4 double matrix multiply
7123128 reps @   0.0007 msec (1420000.0/sec): 4 by 4 double matrix multiply
7123128 reps @   0.0007 msec (1420000.0/sec): 4 by 4 double matrix multiply
7123128 reps @   0.0007 msec (1410000.0/sec): 4 by 4 double matrix multiply
35615640 trep @   0.0007 msec (1420000.0/sec): 4 by 4 double matrix multiply

6861252 reps @   0.0007 msec (1370000.0/sec): 4 by 4 float matrix multiply
6861252 reps @   0.0007 msec (1370000.0/sec): 4 by 4 float matrix multiply
6861252 reps @   0.0007 msec (1370000.0/sec): 4 by 4 float matrix multiply
6861252 reps @   0.0007 msec (1370000.0/sec): 4 by 4 float matrix multiply
6861252 reps @   0.0007 msec (1370000.0/sec): 4 by 4 float matrix multiply
34306260 trep @   0.0007 msec (1370000.0/sec): 4 by 4 float matrix multiply

 262000 reps @   0.0187 msec ( 53400.0/sec): recurse 250 simple function calls and return
 262000 reps @   0.0187 msec ( 53600.0/sec): recurse 250 simple function calls and return
 262000 reps @   0.0187 msec ( 53600.0/sec): recurse 250 simple function calls and return
 262000 reps @   0.0187 msec ( 53500.0/sec): recurse 250 simple function calls and return
 262000 reps @   0.0187 msec ( 53600.0/sec): recurse 250 simple function calls and return
1310000 trep @   0.0187 msec ( 53500.0/sec): recurse 250 simple function calls and return

8198800 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
8198800 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
8198800 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
8198800 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
8198800 reps @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes
40994000 trep @   0.0006 msec (1650000.0/sec): bcopy of 256 bytes

 166680 reps @   0.0290 msec ( 34500.0/sec): bcopy of 16 kilobytes
 166680 reps @   0.0290 msec ( 34500.0/sec): bcopy of 16 kilobytes
 166680 reps @   0.0291 msec ( 34400.0/sec): bcopy of 16 kilobytes
 166680 reps @   0.0290 msec ( 34500.0/sec): bcopy of 16 kilobytes
 166680 reps @   0.0290 msec ( 34500.0/sec): bcopy of 16 kilobytes
 833400 trep @   0.0290 msec ( 34500.0/sec): bcopy of 16 kilobytes

  14372 reps @   0.3369 msec (  2970.0/sec): bcopy of 100 kilobytes
  14372 reps @   0.3429 msec (  2920.0/sec): bcopy of 100 kilobytes
  14372 reps @   0.3374 msec (  2960.0/sec): bcopy of 100 kilobytes
  14372 reps @   0.3380 msec (  2960.0/sec): bcopy of 100 kilobytes
  14372 reps @   0.3367 msec (  2970.0/sec): bcopy of 100 kilobytes
  71860 trep @   0.3384 msec (  2960.0/sec): bcopy of 100 kilobytes

    104 reps @  44.0372 msec (    22.7/sec): bcopy of 1 megabyte
    104 reps @  43.8447 msec (    22.8/sec): bcopy of 1 megabyte
    104 reps @  44.4553 msec (    22.5/sec): bcopy of 1 megabyte
    104 reps @  44.1745 msec (    22.6/sec): bcopy of 1 megabyte
    104 reps @  44.0305 msec (    22.7/sec): bcopy of 1 megabyte
    520 trep @  44.1084 msec (    22.7/sec): bcopy of 1 megabyte

     12 reps @ 439.7256 msec (    2.27/sec): bcopy of 10 megabytes
     12 reps @ 439.6700 msec (    2.27/sec): bcopy of 10 megabytes
     12 reps @ 439.0362 msec (    2.28/sec): bcopy of 10 megabytes
     12 reps @ 438.3727 msec (    2.28/sec): bcopy of 10 megabytes
     12 reps @ 439.9717 msec (    2.27/sec): bcopy of 10 megabytes
     60 trep @ 439.3552 msec (    2.28/sec): bcopy of 10 megabytes

     12 reps @ 442.0145 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 442.5275 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 442.2068 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 442.0230 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)
     12 reps @ 443.5596 msec (    2.25/sec): bcopy of 10 megabytes (cacheline-aligned)
     60 trep @ 442.4663 msec (    2.26/sec): bcopy of 10 megabytes (cacheline-aligned)

     12 reps @ 444.0387 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 444.4692 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 443.7570 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 443.9982 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)
     12 reps @ 445.6848 msec (    2.24/sec): bcopy of 10 megabytes (word mis-aligned)
     60 trep @ 444.3895 msec (    2.25/sec): bcopy of 10 megabytes (word mis-aligned)

     12 reps @ 445.7265 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 445.7644 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 446.1503 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 445.6826 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     12 reps @ 447.0701 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 trep @ 446.0788 msec (    2.24/sec): bcopy of 10 megabytes (dword mis-aligned)

15889200 reps @   0.0003 msec (3170000.0/sec): bzero of 256 bytes
15889200 reps @   0.0003 msec (3180000.0/sec): bzero of 256 bytes
15889200 reps @   0.0003 msec (3140000.0/sec): bzero of 256 bytes
15889200 reps @   0.0003 msec (3170000.0/sec): bzero of 256 bytes
15889200 reps @   0.0003 msec (3170000.0/sec): bzero of 256 bytes
79446000 trep @   0.0003 msec (3160000.0/sec): bzero of 256 bytes

 369240 reps @   0.0126 msec ( 79600.0/sec): bzero of 16 kilobytes
 369240 reps @   0.0126 msec ( 79300.0/sec): bzero of 16 kilobytes
 369240 reps @   0.0125 msec ( 79900.0/sec): bzero of 16 kilobytes
 369240 reps @   0.0125 msec ( 79900.0/sec): bzero of 16 kilobytes
 369240 reps @   0.0125 msec ( 79900.0/sec): bzero of 16 kilobytes
1846200 trep @   0.0125 msec ( 79700.0/sec): bzero of 16 kilobytes

  21640 reps @   0.2229 msec (  4490.0/sec): bzero of 100 kilobytes
  21640 reps @   0.2236 msec (  4470.0/sec): bzero of 100 kilobytes
  21640 reps @   0.2233 msec (  4480.0/sec): bzero of 100 kilobytes
  21640 reps @   0.2231 msec (  4480.0/sec): bzero of 100 kilobytes
  21640 reps @   0.2232 msec (  4480.0/sec): bzero of 100 kilobytes
 108200 trep @   0.2232 msec (  4480.0/sec): bzero of 100 kilobytes

    220 reps @  22.7600 msec (    43.9/sec): bzero of 1 megabyte
    220 reps @  22.7613 msec (    43.9/sec): bzero of 1 megabyte
    220 reps @  22.8063 msec (    43.8/sec): bzero of 1 megabyte
    220 reps @  22.7597 msec (    43.9/sec): bzero of 1 megabyte
    220 reps @  22.7612 msec (    43.9/sec): bzero of 1 megabyte
   1100 trep @  22.7697 msec (    43.9/sec): bzero of 1 megabyte

     24 reps @ 227.8450 msec (    4.39/sec): bzero of 10 megabytes
     24 reps @ 227.9005 msec (    4.39/sec): bzero of 10 megabytes
     24 reps @ 227.9894 msec (    4.39/sec): bzero of 10 megabytes
     24 reps @ 228.1983 msec (    4.38/sec): bzero of 10 megabytes
     24 reps @ 227.6676 msec (    4.39/sec): bzero of 10 megabytes
    120 trep @ 227.9202 msec (    4.39/sec): bzero of 10 megabytes

     24 reps @ 227.7838 msec (    4.39/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 227.9217 msec (    4.39/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 227.9216 msec (    4.39/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 228.2917 msec (    4.38/sec): bzero of 10 megabytes (cacheline-aligned)
     24 reps @ 227.6816 msec (    4.39/sec): bzero of 10 megabytes (cacheline-aligned)
    120 trep @ 227.9201 msec (    4.39/sec): bzero of 10 megabytes (cacheline-aligned)

     24 reps @ 228.0149 msec (    4.39/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 227.9911 msec (    4.39/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 228.0172 msec (    4.39/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 228.3493 msec (    4.38/sec): bzero of 10 megabytes (word mis-aligned)
     24 reps @ 227.8913 msec (    4.39/sec): bzero of 10 megabytes (word mis-aligned)
    120 trep @ 228.0527 msec (    4.38/sec): bzero of 10 megabytes (word mis-aligned)

     24 reps @ 228.1167 msec (    4.38/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 227.6630 msec (    4.39/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 227.9465 msec (    4.39/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 228.3779 msec (    4.38/sec): bzero of 10 megabytes (dword mis-aligned)
     24 reps @ 228.0799 msec (    4.38/sec): bzero of 10 megabytes (dword mis-aligned)
    120 trep @ 228.0368 msec (    4.39/sec): bzero of 10 megabytes (dword mis-aligned)

  10530 reps @   0.4745 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
  10530 reps @   0.4736 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
  10530 reps @   0.4731 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
  10530 reps @   0.4732 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
  10530 reps @   0.4743 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers
  52650 trep @   0.4738 msec (  2110.0/sec): bcopy then qsort 400 32-bit integers

    158 reps @  30.1828 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    158 reps @  30.2323 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    158 reps @  30.1871 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    158 reps @  30.1994 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    158 reps @  30.2136 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers
    790 trep @  30.2030 msec (    33.1/sec): bcopy then qsort 16,000 32-bit integers

     33 reps @ 141.3908 msec (    7.07/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 141.2869 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 141.2166 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 140.9468 msec (    7.09/sec): bcopy then qsort 64,000 32-bit integers
     33 reps @ 140.9396 msec (    7.10/sec): bcopy then qsort 64,000 32-bit integers
    165 trep @ 141.1561 msec (    7.08/sec): bcopy then qsort 64,000 32-bit integers

21577500 reps @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
21577500 reps @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
21577500 reps @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
21577500 reps @   0.0002 msec (4450000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
21577500 reps @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
107887500 trep @   0.0002 msec (4460000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

19207500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
19207500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
19207500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
19207500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
19207500 reps @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)
96037500 trep @   0.0003 msec (3840000.0/sec): basic double trigonometric function (sin/cos/tan)

1808000 reps @   0.0027 msec (372000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1808000 reps @   0.0027 msec (372000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1808000 reps @   0.0027 msec (371000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1808000 reps @   0.0027 msec (371000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1808000 reps @   0.0027 msec (372000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
9040000 trep @   0.0027 msec (371000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  23400 reps @   0.2090 msec (  4780.0/sec): Tower of Hanoi recursion test (10 deep)
  23400 reps @   0.2091 msec (  4780.0/sec): Tower of Hanoi recursion test (10 deep)
  23400 reps @   0.2090 msec (  4790.0/sec): Tower of Hanoi recursion test (10 deep)
  23400 reps @   0.2090 msec (  4790.0/sec): Tower of Hanoi recursion test (10 deep)
  23400 reps @   0.2092 msec (  4780.0/sec): Tower of Hanoi recursion test (10 deep)
 117000 trep @   0.2091 msec (  4780.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   6.7688 msec (   148.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.7764 msec (   148.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.7649 msec (   148.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.7704 msec (   148.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   6.7758 msec (   148.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   6.7712 msec (   148.0/sec): Tower of Hanoi recursion test (15 deep)

 584000 reps @   0.0083 msec (121000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 584000 reps @   0.0083 msec (121000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 584000 reps @   0.0083 msec (121000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 584000 reps @   0.0083 msec (121000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 584000 reps @   0.0083 msec (121000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
2920000 trep @   0.0083 msec (121000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 104200 reps @   0.0483 msec ( 20700.0/sec): write 80 bytes to a log file
 104200 reps @   0.0520 msec ( 19200.0/sec): write 80 bytes to a log file
 104200 reps @   0.0534 msec ( 18700.0/sec): write 80 bytes to a log file
 104200 reps @   0.0537 msec ( 18600.0/sec): write 80 bytes to a log file
 104200 reps @   0.0537 msec ( 18600.0/sec): write 80 bytes to a log file
 521000 trep @   0.0522 msec ( 19200.0/sec): write 80 bytes to a log file

   1400 reps @   3.9263 msec (   255.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   5.3004 msec (   189.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   3.8727 msec (   258.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   3.8779 msec (   258.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   3.8781 msec (   258.0/sec): per-file cost of creating 100 files then unlinking them all
   7000 trep @   4.1711 msec (   240.0/sec): per-file cost of creating 100 files then unlinking them all

  57000 reps @   0.0873 msec ( 11500.0/sec): per-file cost of open and immediate close of 100 files
  57000 reps @   0.0877 msec ( 11400.0/sec): per-file cost of open and immediate close of 100 files
  57000 reps @   0.0874 msec ( 11400.0/sec): per-file cost of open and immediate close of 100 files
  57000 reps @   0.0866 msec ( 11500.0/sec): per-file cost of open and immediate close of 100 files
  57000 reps @   0.0847 msec ( 11800.0/sec): per-file cost of open and immediate close of 100 files
 285000 trep @   0.0867 msec ( 11500.0/sec): per-file cost of open and immediate close of 100 files

  56200 reps @   0.0871 msec ( 11500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  56200 reps @   0.0838 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  56200 reps @   0.0832 msec ( 12000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  56200 reps @   0.0828 msec ( 12100.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  56200 reps @   0.0832 msec ( 12000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 281000 trep @   0.0840 msec ( 11900.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 332000 reps @   0.0151 msec ( 66400.0/sec): cost of stat'ing current dir
 332000 reps @   0.0151 msec ( 66400.0/sec): cost of stat'ing current dir
 332000 reps @   0.0151 msec ( 66400.0/sec): cost of stat'ing current dir
 332000 reps @   0.0158 msec ( 63500.0/sec): cost of stat'ing current dir
 332000 reps @   0.0160 msec ( 62700.0/sec): cost of stat'ing current dir
1660000 trep @   0.0154 msec ( 65000.0/sec): cost of stat'ing current dir

  69500 reps @   0.0734 msec ( 13600.0/sec): cost of stat'ing 5 component path
  69500 reps @   0.0722 msec ( 13800.0/sec): cost of stat'ing 5 component path
  69500 reps @   0.0723 msec ( 13800.0/sec): cost of stat'ing 5 component path
  69500 reps @   0.0724 msec ( 13800.0/sec): cost of stat'ing 5 component path
  69500 reps @   0.0738 msec ( 13600.0/sec): cost of stat'ing 5 component path
 347500 trep @   0.0728 msec ( 13700.0/sec): cost of stat'ing 5 component path

   1857 reps @   2.5681 msec (   389.0/sec): open directory and stat 100 files in it
   1857 reps @   2.5707 msec (   389.0/sec): open directory and stat 100 files in it
   1857 reps @   2.5980 msec (   385.0/sec): open directory and stat 100 files in it
   1857 reps @   2.5614 msec (   390.0/sec): open directory and stat 100 files in it
   1857 reps @   2.5636 msec (   390.0/sec): open directory and stat 100 files in it
   9285 trep @   2.5724 msec (   389.0/sec): open directory and stat 100 files in it

   1400 reps @   3.8704 msec (   258.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.8559 msec (   259.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.9198 msec (   255.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.8313 msec (   261.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.7537 msec (   266.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   7000 trep @   3.8462 msec (   260.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 297900 reps @   0.0163 msec ( 61400.0/sec): ndbm lookup into database with 900 entries
 297900 reps @   0.0164 msec ( 60800.0/sec): ndbm lookup into database with 900 entries
 297900 reps @   0.0160 msec ( 62600.0/sec): ndbm lookup into database with 900 entries
 297900 reps @   0.0155 msec ( 64400.0/sec): ndbm lookup into database with 900 entries
 297900 reps @   0.0155 msec ( 64700.0/sec): ndbm lookup into database with 900 entries
1489500 trep @   0.0159 msec ( 62800.0/sec): ndbm lookup into database with 900 entries

  69600 reps @   0.0695 msec ( 14400.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0696 msec ( 14400.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0697 msec ( 14300.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0695 msec ( 14400.0/sec): 1 byte token passing between two processes using two pipes
  69600 reps @   0.0695 msec ( 14400.0/sec): 1 byte token passing between two processes using two pipes
 348000 trep @   0.0696 msec ( 14400.0/sec): 1 byte token passing between two processes using two pipes

  57600 reps @   0.0817 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
  57600 reps @   0.0816 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
  57600 reps @   0.0816 msec ( 12300.0/sec): 1 kilobyte token passing between two processes using two pipes
  57600 reps @   0.0821 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
  57600 reps @   0.0816 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes
 288000 trep @   0.0817 msec ( 12200.0/sec): 1 kilobyte token passing between two processes using two pipes

10592000 reps @   0.0005 msec (2190000.0/sec): setjmp/longjmp
10592000 reps @   0.0005 msec (2190000.0/sec): setjmp/longjmp
10592000 reps @   0.0005 msec (2190000.0/sec): setjmp/longjmp
10592000 reps @   0.0005 msec (2190000.0/sec): setjmp/longjmp
10592000 reps @   0.0005 msec (2190000.0/sec): setjmp/longjmp
52960000 trep @   0.0005 msec (2190000.0/sec): setjmp/longjmp

 304000 reps @   0.0159 msec ( 62700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 304000 reps @   0.0159 msec ( 62700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 304000 reps @   0.0160 msec ( 62700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 304000 reps @   0.0160 msec ( 62700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 304000 reps @   0.0159 msec ( 62700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1520000 trep @   0.0159 msec ( 62700.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   4430 reps @   1.1188 msec (   894.0/sec): create/destroy client UDP-based SunRPC handle
   4430 reps @   1.1175 msec (   895.0/sec): create/destroy client UDP-based SunRPC handle
   4430 reps @   1.1166 msec (   896.0/sec): create/destroy client UDP-based SunRPC handle
   4430 reps @   1.1172 msec (   895.0/sec): create/destroy client UDP-based SunRPC handle
   4430 reps @   1.1179 msec (   895.0/sec): create/destroy client UDP-based SunRPC handle
  22150 trep @   1.1176 msec (   895.0/sec): create/destroy client UDP-based SunRPC handle

  13600 reps @   0.3618 msec (  2760.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3639 msec (  2750.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3669 msec (  2730.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3662 msec (  2730.0/sec): TCP-based SunRPC to negate an integer
  13600 reps @   0.3658 msec (  2730.0/sec): TCP-based SunRPC to negate an integer
  68000 trep @   0.3649 msec (  2740.0/sec): TCP-based SunRPC to negate an integer

   9600 reps @   0.4986 msec (  2010.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.4973 msec (  2010.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.4971 msec (  2010.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5003 msec (  2000.0/sec): UDP-based SunRPC to negate an integer
   9600 reps @   0.5005 msec (  2000.0/sec): UDP-based SunRPC to negate an integer
  48000 trep @   0.4987 msec (  2010.0/sec): UDP-based SunRPC to negate an integer

  14000 reps @   0.3474 msec (  2880.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3461 msec (  2890.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3476 msec (  2880.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3475 msec (  2880.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3473 msec (  2880.0/sec): TCP-based SunRPC no-op
  70000 trep @   0.3472 msec (  2880.0/sec): TCP-based SunRPC no-op

  10800 reps @   0.4664 msec (  2140.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4680 msec (  2140.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4667 msec (  2140.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4661 msec (  2150.0/sec): UDP-based SunRPC no-op
  10800 reps @   0.4646 msec (  2150.0/sec): UDP-based SunRPC no-op
  54000 trep @   0.4664 msec (  2140.0/sec): UDP-based SunRPC no-op

1539000 reps @   0.0031 msec (320000.0/sec): getpid system call
1539000 reps @   0.0031 msec (321000.0/sec): getpid system call
1539000 reps @   0.0031 msec (321000.0/sec): getpid system call
1539000 reps @   0.0031 msec (321000.0/sec): getpid system call
1539000 reps @   0.0031 msec (321000.0/sec): getpid system call
7695000 trep @   0.0031 msec (321000.0/sec): getpid system call

 240500 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240500 reps @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240500 reps @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240500 reps @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240500 reps @   0.0208 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1202500 trep @   0.0208 msec ( 48100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 962400 reps @   0.0052 msec (193000.0/sec): gettimeofday system call
 962400 reps @   0.0052 msec (193000.0/sec): gettimeofday system call
 962400 reps @   0.0052 msec (193000.0/sec): gettimeofday system call
 962400 reps @   0.0052 msec (193000.0/sec): gettimeofday system call
 962400 reps @   0.0052 msec (193000.0/sec): gettimeofday system call
4812000 trep @   0.0052 msec (193000.0/sec): gettimeofday system call

    200 reps @  29.6528 msec (    33.7/sec): fork, child immediately exits, parent waits
    200 reps @  29.8185 msec (    33.5/sec): fork, child immediately exits, parent waits
    200 reps @  29.8021 msec (    33.6/sec): fork, child immediately exits, parent waits
    200 reps @  29.6951 msec (    33.7/sec): fork, child immediately exits, parent waits
    200 reps @  29.7745 msec (    33.6/sec): fork, child immediately exits, parent waits
   1000 trep @  29.7486 msec (    33.6/sec): fork, child immediately exits, parent waits

      5 reps @ 1006.5728 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5504 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5706 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5512 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1006.5612 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1006.5612 msec (    0.99/sec): sleep for one second (validates test time)

 883600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 883600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 883600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 883600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 883600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
4418000 trep @   0.0055 msec (181000.0/sec): select on no fds with no timeout

 263200 reps @   0.0183 msec ( 54600.0/sec): select on 16 pipe read fds with immediate timeout
 263200 reps @   0.0183 msec ( 54600.0/sec): select on 16 pipe read fds with immediate timeout
 263200 reps @   0.0183 msec ( 54600.0/sec): select on 16 pipe read fds with immediate timeout
 263200 reps @   0.0183 msec ( 54600.0/sec): select on 16 pipe read fds with immediate timeout
 263200 reps @   0.0183 msec ( 54500.0/sec): select on 16 pipe read fds with immediate timeout
1316000 trep @   0.0183 msec ( 54600.0/sec): select on 16 pipe read fds with immediate timeout

 149800 reps @   0.0321 msec ( 31200.0/sec): select on 32 pipe read fds with immediate timeout
 149800 reps @   0.0321 msec ( 31200.0/sec): select on 32 pipe read fds with immediate timeout
 149800 reps @   0.0320 msec ( 31200.0/sec): select on 32 pipe read fds with immediate timeout
 149800 reps @   0.0321 msec ( 31200.0/sec): select on 32 pipe read fds with immediate timeout
 149800 reps @   0.0321 msec ( 31100.0/sec): select on 32 pipe read fds with immediate timeout
 749000 trep @   0.0321 msec ( 31200.0/sec): select on 32 pipe read fds with immediate timeout

 275200 reps @   0.0183 msec ( 54700.0/sec): select on 16 pipe write fds with immediate timeout
 275200 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout
 275200 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout
 275200 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout
 275200 reps @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout
1376000 trep @   0.0182 msec ( 54900.0/sec): select on 16 pipe write fds with immediate timeout

 264700 reps @   0.0183 msec ( 54500.0/sec): select on 32 pipe write fds with immediate timeout
 264700 reps @   0.0184 msec ( 54400.0/sec): select on 32 pipe write fds with immediate timeout
 264700 reps @   0.0183 msec ( 54500.0/sec): select on 32 pipe write fds with immediate timeout
 264700 reps @   0.0183 msec ( 54500.0/sec): select on 32 pipe write fds with immediate timeout
 264700 reps @   0.0183 msec ( 54500.0/sec): select on 32 pipe write fds with immediate timeout
1323500 trep @   0.0183 msec ( 54500.0/sec): select on 32 pipe write fds with immediate timeout

  37100 reps @   0.1299 msec (  7700.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1301 msec (  7690.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1305 msec (  7660.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1301 msec (  7690.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  37100 reps @   0.1301 msec (  7690.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 185500 trep @   0.1301 msec (  7680.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    100 reps @  50.6037 msec (    19.8/sec): popen and read from "/bin/echo hello"
    100 reps @  50.0955 msec (    20.0/sec): popen and read from "/bin/echo hello"
    100 reps @  50.3516 msec (    19.9/sec): popen and read from "/bin/echo hello"
    100 reps @  50.6439 msec (    19.7/sec): popen and read from "/bin/echo hello"
    100 reps @  50.5497 msec (    19.8/sec): popen and read from "/bin/echo hello"
    500 trep @  50.4489 msec (    19.8/sec): popen and read from "/bin/echo hello"

  41250 reps @   0.1212 msec (  8250.0/sec): mmap megabyte /dev/zero region 
  41250 reps @   0.1211 msec (  8260.0/sec): mmap megabyte /dev/zero region 
  41250 reps @   0.1214 msec (  8240.0/sec): mmap megabyte /dev/zero region 
  41250 reps @   0.1212 msec (  8250.0/sec): mmap megabyte /dev/zero region 
  41250 reps @   0.1214 msec (  8230.0/sec): mmap megabyte /dev/zero region 
 206250 trep @   0.1213 msec (  8250.0/sec): mmap megabyte /dev/zero region 

    156 reps @  31.8955 msec (    31.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    156 reps @  31.7787 msec (    31.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    156 reps @  31.8264 msec (    31.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    156 reps @  31.7922 msec (    31.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    156 reps @  31.7263 msec (    31.5/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    780 trep @  31.8038 msec (    31.4/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    292 reps @  16.0548 msec (    62.3/sec): copy every byte of newly mmaped megabyte file
    292 reps @  16.1534 msec (    61.9/sec): copy every byte of newly mmaped megabyte file
    292 reps @  17.4927 msec (    57.2/sec): copy every byte of newly mmaped megabyte file
    292 reps @  17.6348 msec (    56.7/sec): copy every byte of newly mmaped megabyte file
    292 reps @  17.3994 msec (    57.5/sec): copy every byte of newly mmaped megabyte file
   1460 trep @  16.9470 msec (    59.0/sec): copy every byte of newly mmaped megabyte file

     25 reps @ 126.4913 msec (    7.91/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 126.6513 msec (    7.90/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 126.1931 msec (    7.92/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 125.5042 msec (    7.97/sec): compress & uncompress 52 kilobyte text file of numbers
     25 reps @ 126.4784 msec (    7.91/sec): compress & uncompress 52 kilobyte text file of numbers
    125 trep @ 126.2637 msec (    7.92/sec): compress & uncompress 52 kilobyte text file of numbers

     14 reps @ 320.5157 msec (    3.12/sec): compile ANSI C `hello world' with no special options
     14 reps @ 318.1259 msec (    3.14/sec): compile ANSI C `hello world' with no special options
     14 reps @ 319.8631 msec (    3.13/sec): compile ANSI C `hello world' with no special options
     14 reps @ 320.5549 msec (    3.12/sec): compile ANSI C `hello world' with no special options
     14 reps @ 321.7602 msec (    3.11/sec): compile ANSI C `hello world' with no special options
     70 trep @ 320.1640 msec (    3.12/sec): compile ANSI C `hello world' with no special options

     12 reps @ 615.5758 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     12 reps @ 610.3123 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     12 reps @ 627.3077 msec (    1.59/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     12 reps @ 615.9104 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     12 reps @ 617.8674 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     60 trep @ 617.3947 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     10 reps @ 613.8047 msec (    1.63/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 608.8358 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 626.8360 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 624.6134 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     10 reps @ 627.0645 msec (    1.59/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     50 trep @ 620.2309 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     12 reps @ 689.3053 msec (    1.45/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 585.7510 msec (    1.71/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 628.9198 msec (    1.59/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 611.4792 msec (    1.64/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     12 reps @ 603.9902 msec (    1.66/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     60 trep @ 623.8891 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

      8 reps @ 455.5069 msec (    2.20/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 759.0066 msec (    1.32/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 638.5018 msec (    1.57/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 616.2463 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
      8 reps @ 618.1091 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 trep @ 617.4741 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 641.9036 msec (    1.56/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 616.3647 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 616.0869 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 620.6780 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 616.5205 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 622.3107 msec (    1.61/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 624.3675 msec (    1.60/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 617.8416 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 617.9769 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 617.1226 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 617.3252 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 618.9268 msec (    1.62/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1574.0152 msec (    0.64/sec): use dc to output first 1,000 factorials
      4 reps @ 1572.0628 msec (    0.64/sec): use dc to output first 1,000 factorials
      4 reps @ 1579.3443 msec (    0.63/sec): use dc to output first 1,000 factorials
      4 reps @ 1576.8875 msec (    0.63/sec): use dc to output first 1,000 factorials
      4 reps @ 1573.8902 msec (    0.64/sec): use dc to output first 1,000 factorials
     20 trep @ 1575.2400 msec (    0.64/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0072 msec (140000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0071 msec (140000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0071 msec (140000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0071 msec (140000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0071 msec (140000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0071 msec (140000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  67508 reps @   0.0739 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
  67508 reps @   0.0738 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
  67508 reps @   0.0739 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
  67508 reps @   0.0738 msec ( 13600.0/sec): use regcomp to compile 51 char literal, then regfree
  67508 reps @   0.0738 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree
 337540 trep @   0.0738 msec ( 13500.0/sec): use regcomp to compile 51 char literal, then regfree

      7 reps @ 787.3833 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 785.0944 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 786.3637 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 785.2571 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 784.6001 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text
     35 trep @ 785.7397 msec (    1.27/sec): use regexec with 51 char literal to search 142 kilobyte text

  87536 reps @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87536 reps @   0.0573 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87536 reps @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87536 reps @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
  87536 reps @   0.0570 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree
 437680 trep @   0.0571 msec ( 17500.0/sec): use regcomp to compile long .* pattern, then regfree

     11 reps @ 482.3509 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 483.2437 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 483.6854 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 483.1363 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     11 reps @ 483.7307 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text
     55 trep @ 483.2294 msec (    2.07/sec): use regexec with long .* pattern to search 142 kilobyte text


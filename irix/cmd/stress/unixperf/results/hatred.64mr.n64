UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: hatred
Operating system: IRIX64 6.4
Compiler version: 7.1
Instruction set: MIPS 3
Application binary interface: 64-bit
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
CPU: MIPS R10000 Processor Chip Revision: 2.6
4 195 MHZ IP27 Processors
Main memory size: 1024 Mbytes
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Secondary unified instruction/data cache size: 4 Mbytes
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
  Disk drive: unit 3 on SCSI controller 0
  CDROM: unit 6 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 serial port: tty3
IOC3 serial port: tty4
IOC3 parallel port: plp1
Graphics board: Reality
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 7.0, number 1
IOC3 external interrupts: 1
Uptime: 3 days,  4:08
Users: 2
Load average: 1.28, 2.69, 1.95
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4206.20 MB total, 296.99 MB available)
Date: Tue Jul 22 02:08:51 1997

7837236 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7837236 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7837236 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7837236 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
7837236 reps @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply
39186180 trep @   0.0006 msec (1560000.0/sec): 4 by 4 double matrix multiply

7858944 reps @   0.0006 msec (1570000.0/sec): 4 by 4 float matrix multiply
7858944 reps @   0.0006 msec (1570000.0/sec): 4 by 4 float matrix multiply
7858944 reps @   0.0006 msec (1570000.0/sec): 4 by 4 float matrix multiply
7858944 reps @   0.0006 msec (1570000.0/sec): 4 by 4 float matrix multiply
7858944 reps @   0.0006 msec (1570000.0/sec): 4 by 4 float matrix multiply
39294720 trep @   0.0006 msec (1570000.0/sec): 4 by 4 float matrix multiply

 302500 reps @   0.0166 msec ( 60400.0/sec): recurse 250 simple function calls and return
 302500 reps @   0.0165 msec ( 60400.0/sec): recurse 250 simple function calls and return
 302500 reps @   0.0165 msec ( 60400.0/sec): recurse 250 simple function calls and return
 302500 reps @   0.0165 msec ( 60400.0/sec): recurse 250 simple function calls and return
 302500 reps @   0.0165 msec ( 60400.0/sec): recurse 250 simple function calls and return
1512500 trep @   0.0165 msec ( 60400.0/sec): recurse 250 simple function calls and return

9470000 reps @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes
9470000 reps @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes
9470000 reps @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes
9470000 reps @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes
9470000 reps @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes
47350000 trep @   0.0005 msec (1880000.0/sec): bcopy of 256 bytes

 215880 reps @   0.0232 msec ( 43200.0/sec): bcopy of 16 kilobytes
 215880 reps @   0.0232 msec ( 43200.0/sec): bcopy of 16 kilobytes
 215880 reps @   0.0232 msec ( 43200.0/sec): bcopy of 16 kilobytes
 215880 reps @   0.0231 msec ( 43200.0/sec): bcopy of 16 kilobytes
 215880 reps @   0.0231 msec ( 43200.0/sec): bcopy of 16 kilobytes
1079400 trep @   0.0232 msec ( 43200.0/sec): bcopy of 16 kilobytes

  16948 reps @   0.2935 msec (  3410.0/sec): bcopy of 100 kilobytes
  16948 reps @   0.2935 msec (  3410.0/sec): bcopy of 100 kilobytes
  16948 reps @   0.2935 msec (  3410.0/sec): bcopy of 100 kilobytes
  16948 reps @   0.2935 msec (  3410.0/sec): bcopy of 100 kilobytes
  16948 reps @   0.2935 msec (  3410.0/sec): bcopy of 100 kilobytes
  84740 trep @   0.2935 msec (  3410.0/sec): bcopy of 100 kilobytes

   1188 reps @   4.2162 msec (   237.0/sec): bcopy of 1 megabyte
   1188 reps @   4.2154 msec (   237.0/sec): bcopy of 1 megabyte
   1188 reps @   4.2159 msec (   237.0/sec): bcopy of 1 megabyte
   1188 reps @   4.2174 msec (   237.0/sec): bcopy of 1 megabyte
   1188 reps @   4.2172 msec (   237.0/sec): bcopy of 1 megabyte
   5940 trep @   4.2164 msec (   237.0/sec): bcopy of 1 megabyte

     52 reps @  86.1961 msec (    11.6/sec): bcopy of 10 megabytes
     52 reps @  86.1974 msec (    11.6/sec): bcopy of 10 megabytes
     52 reps @  86.2071 msec (    11.6/sec): bcopy of 10 megabytes
     52 reps @  86.1896 msec (    11.6/sec): bcopy of 10 megabytes
     52 reps @  86.1735 msec (    11.6/sec): bcopy of 10 megabytes
    260 trep @  86.1928 msec (    11.6/sec): bcopy of 10 megabytes

     64 reps @  83.1506 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.1838 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.2077 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.1974 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
     64 reps @  83.1830 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)
    320 trep @  83.1845 msec (    12.0/sec): bcopy of 10 megabytes (cacheline-aligned)

     64 reps @  82.7540 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.7639 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.7223 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.7163 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
     64 reps @  82.8220 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)
    320 trep @  82.7557 msec (    12.1/sec): bcopy of 10 megabytes (word mis-aligned)

     60 reps @  84.1054 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.1057 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.1013 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.0938 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  84.0323 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)
    300 trep @  84.0877 msec (    11.9/sec): bcopy of 10 megabytes (dword mis-aligned)

17941200 reps @   0.0003 msec (3590000.0/sec): bzero of 256 bytes
17941200 reps @   0.0003 msec (3590000.0/sec): bzero of 256 bytes
17941200 reps @   0.0003 msec (3590000.0/sec): bzero of 256 bytes
17941200 reps @   0.0003 msec (3590000.0/sec): bzero of 256 bytes
17941200 reps @   0.0003 msec (3590000.0/sec): bzero of 256 bytes
89706000 trep @   0.0003 msec (3590000.0/sec): bzero of 256 bytes

 342360 reps @   0.0147 msec ( 68200.0/sec): bzero of 16 kilobytes
 342360 reps @   0.0146 msec ( 68300.0/sec): bzero of 16 kilobytes
 342360 reps @   0.0146 msec ( 68400.0/sec): bzero of 16 kilobytes
 342360 reps @   0.0147 msec ( 68100.0/sec): bzero of 16 kilobytes
 342360 reps @   0.0147 msec ( 68200.0/sec): bzero of 16 kilobytes
1711800 trep @   0.0147 msec ( 68200.0/sec): bzero of 16 kilobytes

  23804 reps @   0.2100 msec (  4760.0/sec): bzero of 100 kilobytes
  23804 reps @   0.2100 msec (  4760.0/sec): bzero of 100 kilobytes
  23804 reps @   0.2100 msec (  4760.0/sec): bzero of 100 kilobytes
  23804 reps @   0.2100 msec (  4760.0/sec): bzero of 100 kilobytes
  23804 reps @   0.2100 msec (  4760.0/sec): bzero of 100 kilobytes
 119020 trep @   0.2100 msec (  4760.0/sec): bzero of 100 kilobytes

   2328 reps @   2.1466 msec (   466.0/sec): bzero of 1 megabyte
   2328 reps @   2.1457 msec (   466.0/sec): bzero of 1 megabyte
   2328 reps @   2.1461 msec (   466.0/sec): bzero of 1 megabyte
   2328 reps @   2.1468 msec (   466.0/sec): bzero of 1 megabyte
   2328 reps @   2.1468 msec (   466.0/sec): bzero of 1 megabyte
  11640 trep @   2.1464 msec (   466.0/sec): bzero of 1 megabyte

    112 reps @  43.6034 msec (    22.9/sec): bzero of 10 megabytes
    112 reps @  43.4504 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4567 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4553 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4361 msec (    23.0/sec): bzero of 10 megabytes
    560 trep @  43.4804 msec (    23.0/sec): bzero of 10 megabytes

    116 reps @  43.4303 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4517 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4576 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4557 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4478 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    580 trep @  43.4486 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)

    120 reps @  42.9164 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9104 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.8604 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.8640 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.8885 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    600 trep @  42.8879 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)

    116 reps @  43.1521 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1510 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.2031 msec (    23.1/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1520 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1594 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    580 trep @  43.1635 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)

  10568 reps @   0.4718 msec (  2120.0/sec): bcopy then qsort 400 32-bit integers
  10568 reps @   0.4710 msec (  2120.0/sec): bcopy then qsort 400 32-bit integers
  10568 reps @   0.4713 msec (  2120.0/sec): bcopy then qsort 400 32-bit integers
  10568 reps @   0.4705 msec (  2130.0/sec): bcopy then qsort 400 32-bit integers
  10568 reps @   0.4714 msec (  2120.0/sec): bcopy then qsort 400 32-bit integers
  52840 trep @   0.4712 msec (  2120.0/sec): bcopy then qsort 400 32-bit integers

    171 reps @  29.4983 msec (    33.9/sec): bcopy then qsort 16,000 32-bit integers
    171 reps @  29.4999 msec (    33.9/sec): bcopy then qsort 16,000 32-bit integers
    171 reps @  29.4795 msec (    33.9/sec): bcopy then qsort 16,000 32-bit integers
    171 reps @  29.5268 msec (    33.9/sec): bcopy then qsort 16,000 32-bit integers
    171 reps @  29.4757 msec (    33.9/sec): bcopy then qsort 16,000 32-bit integers
    855 trep @  29.4960 msec (    33.9/sec): bcopy then qsort 16,000 32-bit integers

     37 reps @ 135.9175 msec (    7.36/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 136.1405 msec (    7.35/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 136.0212 msec (    7.35/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 135.9511 msec (    7.36/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 135.6428 msec (    7.37/sec): bcopy then qsort 64,000 32-bit integers
    185 trep @ 135.9347 msec (    7.36/sec): bcopy then qsort 64,000 32-bit integers

25320000 reps @   0.0002 msec (5060000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25320000 reps @   0.0002 msec (5070000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25320000 reps @   0.0002 msec (5070000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25320000 reps @   0.0002 msec (5060000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25320000 reps @   0.0002 msec (5060000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
126600000 trep @   0.0002 msec (5070000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

21810000 reps @   0.0002 msec (4360000.0/sec): basic double trigonometric function (sin/cos/tan)
21810000 reps @   0.0002 msec (4360000.0/sec): basic double trigonometric function (sin/cos/tan)
21810000 reps @   0.0002 msec (4360000.0/sec): basic double trigonometric function (sin/cos/tan)
21810000 reps @   0.0002 msec (4360000.0/sec): basic double trigonometric function (sin/cos/tan)
21810000 reps @   0.0002 msec (4370000.0/sec): basic double trigonometric function (sin/cos/tan)
109050000 trep @   0.0002 msec (4360000.0/sec): basic double trigonometric function (sin/cos/tan)

2184500 reps @   0.0023 msec (439000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2184500 reps @   0.0023 msec (441000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2184500 reps @   0.0023 msec (442000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2184500 reps @   0.0023 msec (442000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2184500 reps @   0.0023 msec (439000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
10922500 trep @   0.0023 msec (441000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  27300 reps @   0.1837 msec (  5440.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1837 msec (  5440.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1837 msec (  5440.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1837 msec (  5440.0/sec): Tower of Hanoi recursion test (10 deep)
  27300 reps @   0.1838 msec (  5440.0/sec): Tower of Hanoi recursion test (10 deep)
 136500 trep @   0.1837 msec (  5440.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   5.8904 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8903 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8903 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8900 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8897 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   5.8901 msec (   170.0/sec): Tower of Hanoi recursion test (15 deep)

 495000 reps @   0.0101 msec ( 98900.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 495000 reps @   0.0101 msec ( 98900.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 495000 reps @   0.0101 msec ( 98900.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 495000 reps @   0.0101 msec ( 98900.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 495000 reps @   0.0101 msec ( 98900.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
2475000 trep @   0.0101 msec ( 98900.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 188200 reps @   0.0269 msec ( 37100.0/sec): write 80 bytes to a log file
 188200 reps @   0.0271 msec ( 36900.0/sec): write 80 bytes to a log file
 188200 reps @   0.0274 msec ( 36500.0/sec): write 80 bytes to a log file
 188200 reps @   0.0276 msec ( 36200.0/sec): write 80 bytes to a log file
 188200 reps @   0.0292 msec ( 34200.0/sec): write 80 bytes to a log file
 941000 trep @   0.0277 msec ( 36200.0/sec): write 80 bytes to a log file

   1500 reps @   3.5380 msec (   283.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.5013 msec (   286.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.4923 msec (   286.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.5021 msec (   286.0/sec): per-file cost of creating 100 files then unlinking them all
   1500 reps @   3.4713 msec (   288.0/sec): per-file cost of creating 100 files then unlinking them all
   7500 trep @   3.5010 msec (   286.0/sec): per-file cost of creating 100 files then unlinking them all

  54200 reps @   0.0927 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0929 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0910 msec ( 11000.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0903 msec ( 11100.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0906 msec ( 11000.0/sec): per-file cost of open and immediate close of 100 files
 271000 trep @   0.0915 msec ( 10900.0/sec): per-file cost of open and immediate close of 100 files

  65600 reps @   0.0816 msec ( 12200.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65600 reps @   0.0773 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65600 reps @   0.0775 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65600 reps @   0.0776 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65600 reps @   0.0771 msec ( 13000.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 328000 trep @   0.0782 msec ( 12800.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 311500 reps @   0.0160 msec ( 62400.0/sec): cost of stat'ing current dir
 311500 reps @   0.0165 msec ( 60500.0/sec): cost of stat'ing current dir
 311500 reps @   0.0175 msec ( 57100.0/sec): cost of stat'ing current dir
 311500 reps @   0.0176 msec ( 56900.0/sec): cost of stat'ing current dir
 311500 reps @   0.0175 msec ( 57100.0/sec): cost of stat'ing current dir
1557500 trep @   0.0170 msec ( 58700.0/sec): cost of stat'ing current dir

  67500 reps @   0.0741 msec ( 13500.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0740 msec ( 13500.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0754 msec ( 13300.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0760 msec ( 13200.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0760 msec ( 13200.0/sec): cost of stat'ing 5 component path
 337500 trep @   0.0751 msec ( 13300.0/sec): cost of stat'ing 5 component path

   2048 reps @   2.4419 msec (   410.0/sec): open directory and stat 100 files in it
   2048 reps @   2.4433 msec (   409.0/sec): open directory and stat 100 files in it
   2048 reps @   2.4438 msec (   409.0/sec): open directory and stat 100 files in it
   2048 reps @   2.4485 msec (   408.0/sec): open directory and stat 100 files in it
   2048 reps @   2.4427 msec (   409.0/sec): open directory and stat 100 files in it
  10240 trep @   2.4440 msec (   409.0/sec): open directory and stat 100 files in it

   1500 reps @   3.7054 msec (   270.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.4899 msec (   287.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.4849 msec (   287.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.5203 msec (   284.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1500 reps @   3.4692 msec (   288.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   7500 trep @   3.5339 msec (   283.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 333000 reps @   0.0149 msec ( 67000.0/sec): ndbm lookup into database with 900 entries
 333000 reps @   0.0149 msec ( 66900.0/sec): ndbm lookup into database with 900 entries
 333000 reps @   0.0151 msec ( 66100.0/sec): ndbm lookup into database with 900 entries
 333000 reps @   0.0151 msec ( 66400.0/sec): ndbm lookup into database with 900 entries
 333000 reps @   0.0151 msec ( 66400.0/sec): ndbm lookup into database with 900 entries
1665000 trep @   0.0150 msec ( 66600.0/sec): ndbm lookup into database with 900 entries

  42400 reps @   0.1182 msec (  8460.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1192 msec (  8390.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1197 msec (  8360.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1195 msec (  8370.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1186 msec (  8430.0/sec): 1 byte token passing between two processes using two pipes
 212000 trep @   0.1190 msec (  8400.0/sec): 1 byte token passing between two processes using two pipes

  38000 reps @   0.1421 msec (  7040.0/sec): 1 kilobyte token passing between two processes using two pipes
  38000 reps @   0.1434 msec (  6970.0/sec): 1 kilobyte token passing between two processes using two pipes
  38000 reps @   0.1435 msec (  6970.0/sec): 1 kilobyte token passing between two processes using two pipes
  38000 reps @   0.1435 msec (  6970.0/sec): 1 kilobyte token passing between two processes using two pipes
  38000 reps @   0.1436 msec (  6960.0/sec): 1 kilobyte token passing between two processes using two pipes
 190000 trep @   0.1432 msec (  6980.0/sec): 1 kilobyte token passing between two processes using two pipes

12028000 reps @   0.0004 msec (2390000.0/sec): setjmp/longjmp
12028000 reps @   0.0004 msec (2400000.0/sec): setjmp/longjmp
12028000 reps @   0.0004 msec (2380000.0/sec): setjmp/longjmp
12028000 reps @   0.0004 msec (2400000.0/sec): setjmp/longjmp
12028000 reps @   0.0004 msec (2400000.0/sec): setjmp/longjmp
60140000 trep @   0.0004 msec (2390000.0/sec): setjmp/longjmp

 244000 reps @   0.0205 msec ( 48800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 244000 reps @   0.0205 msec ( 48700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 244000 reps @   0.0205 msec ( 48800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 244000 reps @   0.0205 msec ( 48800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 244000 reps @   0.0205 msec ( 48800.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1220000 trep @   0.0205 msec ( 48800.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   6095 reps @   0.8895 msec (  1120.0/sec): create/destroy client UDP-based SunRPC handle
   6095 reps @   0.8852 msec (  1130.0/sec): create/destroy client UDP-based SunRPC handle
   6095 reps @   0.8716 msec (  1150.0/sec): create/destroy client UDP-based SunRPC handle
   6095 reps @   0.8799 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle
   6095 reps @   0.8796 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle
  30475 trep @   0.8811 msec (  1130.0/sec): create/destroy client UDP-based SunRPC handle

  11600 reps @   0.4273 msec (  2340.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4220 msec (  2370.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4293 msec (  2330.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4301 msec (  2330.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4218 msec (  2370.0/sec): TCP-based SunRPC to negate an integer
  58000 trep @   0.4261 msec (  2350.0/sec): TCP-based SunRPC to negate an integer

  11200 reps @   0.4326 msec (  2310.0/sec): UDP-based SunRPC to negate an integer
  11200 reps @   0.4255 msec (  2350.0/sec): UDP-based SunRPC to negate an integer
  11200 reps @   0.4366 msec (  2290.0/sec): UDP-based SunRPC to negate an integer
  11200 reps @   0.4366 msec (  2290.0/sec): UDP-based SunRPC to negate an integer
  11200 reps @   0.4316 msec (  2320.0/sec): UDP-based SunRPC to negate an integer
  56000 trep @   0.4326 msec (  2310.0/sec): UDP-based SunRPC to negate an integer

  12400 reps @   0.4196 msec (  2380.0/sec): TCP-based SunRPC no-op
  12400 reps @   0.4180 msec (  2390.0/sec): TCP-based SunRPC no-op
  12400 reps @   0.4207 msec (  2380.0/sec): TCP-based SunRPC no-op
  12400 reps @   0.4203 msec (  2380.0/sec): TCP-based SunRPC no-op
  12400 reps @   0.4241 msec (  2360.0/sec): TCP-based SunRPC no-op
  62000 trep @   0.4205 msec (  2380.0/sec): TCP-based SunRPC no-op

  12000 reps @   0.4148 msec (  2410.0/sec): UDP-based SunRPC no-op
  12000 reps @   0.4198 msec (  2380.0/sec): UDP-based SunRPC no-op
  12000 reps @   0.4317 msec (  2320.0/sec): UDP-based SunRPC no-op
  12000 reps @   0.4344 msec (  2300.0/sec): UDP-based SunRPC no-op
  12000 reps @   0.4334 msec (  2310.0/sec): UDP-based SunRPC no-op
  60000 trep @   0.4268 msec (  2340.0/sec): UDP-based SunRPC no-op

2301000 reps @   0.0022 msec (461000.0/sec): getpid system call
2301000 reps @   0.0022 msec (461000.0/sec): getpid system call
2301000 reps @   0.0022 msec (461000.0/sec): getpid system call
2301000 reps @   0.0022 msec (461000.0/sec): getpid system call
2301000 reps @   0.0022 msec (461000.0/sec): getpid system call
11505000 trep @   0.0022 msec (461000.0/sec): getpid system call

 280500 reps @   0.0178 msec ( 56000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 280500 reps @   0.0178 msec ( 56000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 280500 reps @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 280500 reps @   0.0178 msec ( 56100.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 280500 reps @   0.0178 msec ( 56000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1402500 trep @   0.0178 msec ( 56000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 724000 reps @   0.0069 msec (145000.0/sec): gettimeofday system call
 724000 reps @   0.0069 msec (146000.0/sec): gettimeofday system call
 724000 reps @   0.0069 msec (145000.0/sec): gettimeofday system call
 724000 reps @   0.0069 msec (145000.0/sec): gettimeofday system call
 724000 reps @   0.0069 msec (146000.0/sec): gettimeofday system call
3620000 trep @   0.0069 msec (145000.0/sec): gettimeofday system call

    650 reps @   7.9498 msec (   126.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.8719 msec (   127.0/sec): fork, child immediately exits, parent waits
    650 reps @   8.0336 msec (   124.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.9651 msec (   126.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.9936 msec (   125.0/sec): fork, child immediately exits, parent waits
   3250 trep @   7.9628 msec (   126.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.5854 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5796 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5810 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5818 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5806 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.5817 msec (    0.99/sec): sleep for one second (validates test time)

 958600 reps @   0.0052 msec (193000.0/sec): select on no fds with no timeout
 958600 reps @   0.0052 msec (193000.0/sec): select on no fds with no timeout
 958600 reps @   0.0052 msec (193000.0/sec): select on no fds with no timeout
 958600 reps @   0.0052 msec (193000.0/sec): select on no fds with no timeout
 958600 reps @   0.0052 msec (193000.0/sec): select on no fds with no timeout
4793000 trep @   0.0052 msec (193000.0/sec): select on no fds with no timeout

 228500 reps @   0.0219 msec ( 45700.0/sec): select on 16 pipe read fds with immediate timeout
 228500 reps @   0.0218 msec ( 45900.0/sec): select on 16 pipe read fds with immediate timeout
 228500 reps @   0.0218 msec ( 45800.0/sec): select on 16 pipe read fds with immediate timeout
 228500 reps @   0.0219 msec ( 45700.0/sec): select on 16 pipe read fds with immediate timeout
 228500 reps @   0.0219 msec ( 45700.0/sec): select on 16 pipe read fds with immediate timeout
1142500 trep @   0.0219 msec ( 45700.0/sec): select on 16 pipe read fds with immediate timeout

 123200 reps @   0.0406 msec ( 24600.0/sec): select on 32 pipe read fds with immediate timeout
 123200 reps @   0.0406 msec ( 24600.0/sec): select on 32 pipe read fds with immediate timeout
 123200 reps @   0.0406 msec ( 24600.0/sec): select on 32 pipe read fds with immediate timeout
 123200 reps @   0.0406 msec ( 24600.0/sec): select on 32 pipe read fds with immediate timeout
 123200 reps @   0.0406 msec ( 24600.0/sec): select on 32 pipe read fds with immediate timeout
 616000 trep @   0.0406 msec ( 24600.0/sec): select on 32 pipe read fds with immediate timeout

 226600 reps @   0.0221 msec ( 45300.0/sec): select on 16 pipe write fds with immediate timeout
 226600 reps @   0.0221 msec ( 45300.0/sec): select on 16 pipe write fds with immediate timeout
 226600 reps @   0.0221 msec ( 45200.0/sec): select on 16 pipe write fds with immediate timeout
 226600 reps @   0.0221 msec ( 45200.0/sec): select on 16 pipe write fds with immediate timeout
 226600 reps @   0.0221 msec ( 45200.0/sec): select on 16 pipe write fds with immediate timeout
1133000 trep @   0.0221 msec ( 45300.0/sec): select on 16 pipe write fds with immediate timeout

 224000 reps @   0.0223 msec ( 44800.0/sec): select on 32 pipe write fds with immediate timeout
 224000 reps @   0.0223 msec ( 44900.0/sec): select on 32 pipe write fds with immediate timeout
 224000 reps @   0.0223 msec ( 44900.0/sec): select on 32 pipe write fds with immediate timeout
 224000 reps @   0.0223 msec ( 44900.0/sec): select on 32 pipe write fds with immediate timeout
 224000 reps @   0.0223 msec ( 44900.0/sec): select on 32 pipe write fds with immediate timeout
1120000 trep @   0.0223 msec ( 44900.0/sec): select on 32 pipe write fds with immediate timeout

  31200 reps @   0.1597 msec (  6260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31200 reps @   0.1600 msec (  6250.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31200 reps @   0.1598 msec (  6260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31200 reps @   0.1599 msec (  6260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31200 reps @   0.1598 msec (  6260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 156000 trep @   0.1599 msec (  6260.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    330 reps @  15.3935 msec (    65.0/sec): popen and read from "/bin/echo hello"
    330 reps @  15.2854 msec (    65.4/sec): popen and read from "/bin/echo hello"
    330 reps @  15.2752 msec (    65.5/sec): popen and read from "/bin/echo hello"
    330 reps @  15.3396 msec (    65.2/sec): popen and read from "/bin/echo hello"
    330 reps @  15.4325 msec (    64.8/sec): popen and read from "/bin/echo hello"
   1650 trep @  15.3452 msec (    65.2/sec): popen and read from "/bin/echo hello"

  40850 reps @   0.1229 msec (  8140.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1230 msec (  8130.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1229 msec (  8130.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1228 msec (  8140.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1229 msec (  8140.0/sec): mmap megabyte /dev/zero region 
 204250 trep @   0.1229 msec (  8140.0/sec): mmap megabyte /dev/zero region 

    804 reps @   6.1372 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    804 reps @   6.1304 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    804 reps @   6.1293 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    804 reps @   6.1279 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    804 reps @   6.1280 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   4020 trep @   6.1305 msec (   163.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

   1327 reps @   3.7761 msec (   265.0/sec): copy every byte of newly mmaped megabyte file
   1327 reps @   3.7741 msec (   265.0/sec): copy every byte of newly mmaped megabyte file
   1327 reps @   3.8077 msec (   263.0/sec): copy every byte of newly mmaped megabyte file
   1327 reps @   3.9169 msec (   255.0/sec): copy every byte of newly mmaped megabyte file
   1327 reps @   3.9183 msec (   255.0/sec): copy every byte of newly mmaped megabyte file
   6635 trep @   3.8386 msec (   261.0/sec): copy every byte of newly mmaped megabyte file

     89 reps @  57.0470 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  57.1285 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  57.1109 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  57.1774 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     89 reps @  57.2089 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
    445 trep @  57.1346 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers

     30 reps @ 187.2485 msec (    5.34/sec): compile ANSI C `hello world' with no special options
     30 reps @ 183.6829 msec (    5.44/sec): compile ANSI C `hello world' with no special options
     30 reps @ 183.5020 msec (    5.45/sec): compile ANSI C `hello world' with no special options
     30 reps @ 183.3324 msec (    5.45/sec): compile ANSI C `hello world' with no special options
     30 reps @ 182.7811 msec (    5.47/sec): compile ANSI C `hello world' with no special options
    150 trep @ 184.1094 msec (    5.43/sec): compile ANSI C `hello world' with no special options

     33 reps @ 141.7645 msec (    7.05/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     33 reps @ 144.0060 msec (    6.94/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     33 reps @ 148.5418 msec (    6.73/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     33 reps @ 141.7615 msec (    7.05/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     33 reps @ 145.4695 msec (    6.87/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    165 trep @ 144.3087 msec (    6.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     42 reps @ 143.5067 msec (    6.97/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 147.0488 msec (    6.80/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 143.8430 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 147.0989 msec (    6.80/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 142.7728 msec (    7.00/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
    210 trep @ 144.8540 msec (    6.90/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     28 reps @ 142.7616 msec (    7.00/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 144.6652 msec (    6.91/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 136.3310 msec (    7.34/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 150.7931 msec (    6.63/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     28 reps @ 144.6920 msec (    6.91/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
    140 trep @ 143.8486 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

     32 reps @ 143.9151 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     32 reps @ 144.1320 msec (    6.94/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     32 reps @ 142.0244 msec (    7.04/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     32 reps @ 139.2743 msec (    7.18/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     32 reps @ 150.1977 msec (    6.66/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
    160 trep @ 143.9087 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     36 reps @ 149.5361 msec (    6.69/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 142.9741 msec (    6.99/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 142.4945 msec (    7.02/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 145.4156 msec (    6.88/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 141.8576 msec (    7.05/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
    180 trep @ 144.4556 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     32 reps @ 142.9332 msec (    7.00/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 142.8051 msec (    7.00/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 145.2180 msec (    6.89/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 147.3059 msec (    6.79/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     32 reps @ 141.8436 msec (    7.05/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
    160 trep @ 144.0212 msec (    6.94/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1422.8040 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.8383 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.2390 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.4585 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.5080 msec (    0.70/sec): use dc to output first 1,000 factorials
     20 trep @ 1422.5695 msec (    0.70/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0034 msec (293000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (294000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (294000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (294000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (294000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0034 msec (294000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  96140 reps @   0.0520 msec ( 19200.0/sec): use regcomp to compile 51 char literal, then regfree
  96140 reps @   0.0520 msec ( 19200.0/sec): use regcomp to compile 51 char literal, then regfree
  96140 reps @   0.0520 msec ( 19200.0/sec): use regcomp to compile 51 char literal, then regfree
  96140 reps @   0.0520 msec ( 19200.0/sec): use regcomp to compile 51 char literal, then regfree
  96140 reps @   0.0520 msec ( 19200.0/sec): use regcomp to compile 51 char literal, then regfree
 480700 trep @   0.0520 msec ( 19200.0/sec): use regcomp to compile 51 char literal, then regfree

      7 reps @ 830.4370 msec (    1.20/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 830.4354 msec (    1.20/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 830.2750 msec (    1.20/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 829.4417 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text
      7 reps @ 829.7034 msec (    1.21/sec): use regexec with 51 char literal to search 142 kilobyte text
     35 trep @ 830.0585 msec (    1.20/sec): use regexec with 51 char literal to search 142 kilobyte text

 123844 reps @   0.0404 msec ( 24800.0/sec): use regcomp to compile long .* pattern, then regfree
 123844 reps @   0.0404 msec ( 24800.0/sec): use regcomp to compile long .* pattern, then regfree
 123844 reps @   0.0404 msec ( 24800.0/sec): use regcomp to compile long .* pattern, then regfree
 123844 reps @   0.0404 msec ( 24800.0/sec): use regcomp to compile long .* pattern, then regfree
 123844 reps @   0.0404 msec ( 24800.0/sec): use regcomp to compile long .* pattern, then regfree
 619220 trep @   0.0404 msec ( 24800.0/sec): use regcomp to compile long .* pattern, then regfree

      9 reps @ 570.0090 msec (    1.75/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 570.1358 msec (    1.75/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 569.9936 msec (    1.75/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 571.3121 msec (    1.75/sec): use regexec with long .* pattern to search 142 kilobyte text
      9 reps @ 571.1678 msec (    1.75/sec): use regexec with long .* pattern to search 142 kilobyte text
     45 trep @ 570.5236 msec (    1.75/sec): use regexec with long .* pattern to search 142 kilobyte text


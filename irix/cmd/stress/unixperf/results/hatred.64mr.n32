UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: hatred
Operating system: IRIX64 6.4
Compiler version: 7.1
Instruction set: MIPS 3
Application binary interface: N32
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
CPU: MIPS R10000 Processor Chip Revision: 2.6
4 195 MHZ IP27 Processors
Main memory size: 1024 Mbytes
Instruction cache size: 32 Kbytes
Data cache size: 32 Kbytes
Secondary unified instruction/data cache size: 4 Mbytes
Integral SCSI controller 0: Version QL1040B
  Disk drive: unit 1 on SCSI controller 0
  Disk drive: unit 2 on SCSI controller 0
  Disk drive: unit 3 on SCSI controller 0
  CDROM: unit 6 on SCSI controller 0
Integral SCSI controller 1: Version QL1040B
IOC3 serial port: tty1
IOC3 serial port: tty2
IOC3 serial port: tty3
IOC3 serial port: tty4
IOC3 parallel port: plp1
Graphics board: Reality
Integral Fast Ethernet: ef0, version 1
Iris Audio Processor: version RAD revision 7.0, number 1
IOC3 external interrupts: 1
Uptime: 3 days,  3:36
Users: 2
Load average: 0.03, 0.14, 0.08
File IO test directory: /usr/tmp
File IO test filesystem: xfs (4206.20 MB total, 297.03 MB available)
Date: Tue Jul 22 01:35:44 1997

7511628 reps @   0.0007 msec (1500000.0/sec): 4 by 4 double matrix multiply
7511628 reps @   0.0007 msec (1500000.0/sec): 4 by 4 double matrix multiply
7511628 reps @   0.0007 msec (1500000.0/sec): 4 by 4 double matrix multiply
7511628 reps @   0.0007 msec (1500000.0/sec): 4 by 4 double matrix multiply
7511628 reps @   0.0007 msec (1500000.0/sec): 4 by 4 double matrix multiply
37558140 trep @   0.0007 msec (1500000.0/sec): 4 by 4 double matrix multiply

7583232 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7583232 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7583232 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7583232 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
7583232 reps @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply
37916160 trep @   0.0007 msec (1520000.0/sec): 4 by 4 float matrix multiply

 308000 reps @   0.0162 msec ( 61500.0/sec): recurse 250 simple function calls and return
 308000 reps @   0.0162 msec ( 61600.0/sec): recurse 250 simple function calls and return
 308000 reps @   0.0162 msec ( 61600.0/sec): recurse 250 simple function calls and return
 308000 reps @   0.0162 msec ( 61600.0/sec): recurse 250 simple function calls and return
 308000 reps @   0.0162 msec ( 61500.0/sec): recurse 250 simple function calls and return
1540000 trep @   0.0162 msec ( 61600.0/sec): recurse 250 simple function calls and return

9155600 reps @   0.0006 msec (1800000.0/sec): bcopy of 256 bytes
9155600 reps @   0.0006 msec (1810000.0/sec): bcopy of 256 bytes
9155600 reps @   0.0006 msec (1810000.0/sec): bcopy of 256 bytes
9155600 reps @   0.0006 msec (1820000.0/sec): bcopy of 256 bytes
9155600 reps @   0.0006 msec (1810000.0/sec): bcopy of 256 bytes
45778000 trep @   0.0006 msec (1810000.0/sec): bcopy of 256 bytes

 208080 reps @   0.0240 msec ( 41600.0/sec): bcopy of 16 kilobytes
 208080 reps @   0.0241 msec ( 41600.0/sec): bcopy of 16 kilobytes
 208080 reps @   0.0241 msec ( 41500.0/sec): bcopy of 16 kilobytes
 208080 reps @   0.0241 msec ( 41500.0/sec): bcopy of 16 kilobytes
 208080 reps @   0.0241 msec ( 41500.0/sec): bcopy of 16 kilobytes
1040400 trep @   0.0241 msec ( 41500.0/sec): bcopy of 16 kilobytes

  16296 reps @   0.3051 msec (  3280.0/sec): bcopy of 100 kilobytes
  16296 reps @   0.3051 msec (  3280.0/sec): bcopy of 100 kilobytes
  16296 reps @   0.3051 msec (  3280.0/sec): bcopy of 100 kilobytes
  16296 reps @   0.3048 msec (  3280.0/sec): bcopy of 100 kilobytes
  16296 reps @   0.3048 msec (  3280.0/sec): bcopy of 100 kilobytes
  81480 trep @   0.3050 msec (  3280.0/sec): bcopy of 100 kilobytes

   1144 reps @   4.3819 msec (   228.0/sec): bcopy of 1 megabyte
   1144 reps @   4.3816 msec (   228.0/sec): bcopy of 1 megabyte
   1144 reps @   4.3811 msec (   228.0/sec): bcopy of 1 megabyte
   1144 reps @   4.3813 msec (   228.0/sec): bcopy of 1 megabyte
   1144 reps @   4.3812 msec (   228.0/sec): bcopy of 1 megabyte
   5720 trep @   4.3814 msec (   228.0/sec): bcopy of 1 megabyte

     48 reps @  94.6085 msec (    10.6/sec): bcopy of 10 megabytes
     48 reps @  94.5968 msec (    10.6/sec): bcopy of 10 megabytes
     48 reps @  94.6152 msec (    10.6/sec): bcopy of 10 megabytes
     48 reps @  94.6459 msec (    10.6/sec): bcopy of 10 megabytes
     48 reps @  95.0618 msec (    10.5/sec): bcopy of 10 megabytes
    240 trep @  94.7056 msec (    10.6/sec): bcopy of 10 megabytes

     60 reps @  86.4550 msec (    11.6/sec): bcopy of 10 megabytes (cacheline-aligned)
     60 reps @  86.4697 msec (    11.6/sec): bcopy of 10 megabytes (cacheline-aligned)
     60 reps @  86.4791 msec (    11.6/sec): bcopy of 10 megabytes (cacheline-aligned)
     60 reps @  86.4450 msec (    11.6/sec): bcopy of 10 megabytes (cacheline-aligned)
     60 reps @  86.4643 msec (    11.6/sec): bcopy of 10 megabytes (cacheline-aligned)
    300 trep @  86.4626 msec (    11.6/sec): bcopy of 10 megabytes (cacheline-aligned)

     60 reps @  85.9458 msec (    11.6/sec): bcopy of 10 megabytes (word mis-aligned)
     60 reps @  85.9671 msec (    11.6/sec): bcopy of 10 megabytes (word mis-aligned)
     60 reps @  85.9817 msec (    11.6/sec): bcopy of 10 megabytes (word mis-aligned)
     60 reps @  85.9818 msec (    11.6/sec): bcopy of 10 megabytes (word mis-aligned)
     60 reps @  85.9887 msec (    11.6/sec): bcopy of 10 megabytes (word mis-aligned)
    300 trep @  85.9730 msec (    11.6/sec): bcopy of 10 megabytes (word mis-aligned)

     60 reps @  87.4071 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  87.4026 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  87.3798 msec (    11.4/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  87.3203 msec (    11.5/sec): bcopy of 10 megabytes (dword mis-aligned)
     60 reps @  86.0992 msec (    11.6/sec): bcopy of 10 megabytes (dword mis-aligned)
    300 trep @  87.1218 msec (    11.5/sec): bcopy of 10 megabytes (dword mis-aligned)

16400400 reps @   0.0003 msec (3280000.0/sec): bzero of 256 bytes
16400400 reps @   0.0003 msec (3280000.0/sec): bzero of 256 bytes
16400400 reps @   0.0003 msec (3280000.0/sec): bzero of 256 bytes
16400400 reps @   0.0003 msec (3280000.0/sec): bzero of 256 bytes
16400400 reps @   0.0003 msec (3280000.0/sec): bzero of 256 bytes
82002000 trep @   0.0003 msec (3280000.0/sec): bzero of 256 bytes

 342160 reps @   0.0146 msec ( 68300.0/sec): bzero of 16 kilobytes
 342160 reps @   0.0147 msec ( 68200.0/sec): bzero of 16 kilobytes
 342160 reps @   0.0146 msec ( 68400.0/sec): bzero of 16 kilobytes
 342160 reps @   0.0146 msec ( 68300.0/sec): bzero of 16 kilobytes
 342160 reps @   0.0146 msec ( 68300.0/sec): bzero of 16 kilobytes
1710800 trep @   0.0146 msec ( 68300.0/sec): bzero of 16 kilobytes

  23816 reps @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes
  23816 reps @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes
  23816 reps @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes
  23816 reps @   0.2100 msec (  4760.0/sec): bzero of 100 kilobytes
  23816 reps @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes
 119080 trep @   0.2099 msec (  4760.0/sec): bzero of 100 kilobytes

   2316 reps @   2.1539 msec (   464.0/sec): bzero of 1 megabyte
   2316 reps @   2.1544 msec (   464.0/sec): bzero of 1 megabyte
   2316 reps @   2.1546 msec (   464.0/sec): bzero of 1 megabyte
   2316 reps @   2.1547 msec (   464.0/sec): bzero of 1 megabyte
   2316 reps @   2.1546 msec (   464.0/sec): bzero of 1 megabyte
  11580 trep @   2.1544 msec (   464.0/sec): bzero of 1 megabyte

    112 reps @  43.4574 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4551 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4338 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4359 msec (    23.0/sec): bzero of 10 megabytes
    112 reps @  43.4587 msec (    23.0/sec): bzero of 10 megabytes
    560 trep @  43.4482 msec (    23.0/sec): bzero of 10 megabytes

    116 reps @  43.4575 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4599 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4546 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.5345 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    116 reps @  43.4684 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)
    580 trep @  43.4750 msec (    23.0/sec): bzero of 10 megabytes (cacheline-aligned)

    120 reps @  42.9038 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9084 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9331 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9255 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    120 reps @  42.9344 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)
    600 trep @  42.9210 msec (    23.3/sec): bzero of 10 megabytes (word mis-aligned)

    116 reps @  43.1918 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.3059 msec (    23.1/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1819 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1281 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    116 reps @  43.1404 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)
    580 trep @  43.1896 msec (    23.2/sec): bzero of 10 megabytes (dword mis-aligned)

  10908 reps @   0.4489 msec (  2230.0/sec): bcopy then qsort 400 32-bit integers
  10908 reps @   0.4479 msec (  2230.0/sec): bcopy then qsort 400 32-bit integers
  10908 reps @   0.4504 msec (  2220.0/sec): bcopy then qsort 400 32-bit integers
  10908 reps @   0.4501 msec (  2220.0/sec): bcopy then qsort 400 32-bit integers
  10908 reps @   0.4483 msec (  2230.0/sec): bcopy then qsort 400 32-bit integers
  54540 trep @   0.4491 msec (  2230.0/sec): bcopy then qsort 400 32-bit integers

    176 reps @  28.9318 msec (    34.6/sec): bcopy then qsort 16,000 32-bit integers
    176 reps @  28.8686 msec (    34.6/sec): bcopy then qsort 16,000 32-bit integers
    176 reps @  28.7945 msec (    34.7/sec): bcopy then qsort 16,000 32-bit integers
    176 reps @  28.7457 msec (    34.8/sec): bcopy then qsort 16,000 32-bit integers
    176 reps @  28.8073 msec (    34.7/sec): bcopy then qsort 16,000 32-bit integers
    880 trep @  28.8296 msec (    34.7/sec): bcopy then qsort 16,000 32-bit integers

     37 reps @ 133.7571 msec (    7.48/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 133.2516 msec (    7.50/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 133.3356 msec (    7.50/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 133.6514 msec (    7.48/sec): bcopy then qsort 64,000 32-bit integers
     37 reps @ 133.1423 msec (    7.51/sec): bcopy then qsort 64,000 32-bit integers
    185 trep @ 133.4276 msec (    7.49/sec): bcopy then qsort 64,000 32-bit integers

25232500 reps @   0.0002 msec (5050000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25232500 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25232500 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25232500 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
25232500 reps @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
126162500 trep @   0.0002 msec (5040000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

21705000 reps @   0.0002 msec (4340000.0/sec): basic double trigonometric function (sin/cos/tan)
21705000 reps @   0.0002 msec (4340000.0/sec): basic double trigonometric function (sin/cos/tan)
21705000 reps @   0.0002 msec (4340000.0/sec): basic double trigonometric function (sin/cos/tan)
21705000 reps @   0.0002 msec (4340000.0/sec): basic double trigonometric function (sin/cos/tan)
21705000 reps @   0.0002 msec (4340000.0/sec): basic double trigonometric function (sin/cos/tan)
108525000 trep @   0.0002 msec (4340000.0/sec): basic double trigonometric function (sin/cos/tan)

2093000 reps @   0.0024 msec (419000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2093000 reps @   0.0024 msec (419000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2093000 reps @   0.0024 msec (417000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2093000 reps @   0.0024 msec (419000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
2093000 reps @   0.0024 msec (418000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
10465000 trep @   0.0024 msec (418000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  28200 reps @   0.1789 msec (  5590.0/sec): Tower of Hanoi recursion test (10 deep)
  28200 reps @   0.1789 msec (  5590.0/sec): Tower of Hanoi recursion test (10 deep)
  28200 reps @   0.1790 msec (  5590.0/sec): Tower of Hanoi recursion test (10 deep)
  28200 reps @   0.1790 msec (  5590.0/sec): Tower of Hanoi recursion test (10 deep)
  28200 reps @   0.1790 msec (  5590.0/sec): Tower of Hanoi recursion test (10 deep)
 141000 trep @   0.1790 msec (  5590.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   5.8008 msec (   172.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8010 msec (   172.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8020 msec (   172.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8006 msec (   172.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   5.8020 msec (   172.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   5.8013 msec (   172.0/sec): Tower of Hanoi recursion test (15 deep)

 641000 reps @   0.0078 msec (128000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 641000 reps @   0.0078 msec (128000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 641000 reps @   0.0078 msec (128000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 641000 reps @   0.0078 msec (128000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 641000 reps @   0.0078 msec (128000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
3205000 trep @   0.0078 msec (128000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 189800 reps @   0.0268 msec ( 37400.0/sec): write 80 bytes to a log file
 189800 reps @   0.0270 msec ( 37000.0/sec): write 80 bytes to a log file
 189800 reps @   0.0272 msec ( 36800.0/sec): write 80 bytes to a log file
 189800 reps @   0.0277 msec ( 36100.0/sec): write 80 bytes to a log file
 189800 reps @   0.0309 msec ( 32400.0/sec): write 80 bytes to a log file
 949000 trep @   0.0279 msec ( 35800.0/sec): write 80 bytes to a log file

   1400 reps @   3.8845 msec (   257.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   3.7978 msec (   263.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   3.8029 msec (   263.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   3.8084 msec (   263.0/sec): per-file cost of creating 100 files then unlinking them all
   1400 reps @   3.7872 msec (   264.0/sec): per-file cost of creating 100 files then unlinking them all
   7000 trep @   3.8161 msec (   262.0/sec): per-file cost of creating 100 files then unlinking them all

  54200 reps @   0.0923 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0926 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0926 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0926 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
  54200 reps @   0.0926 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files
 271000 trep @   0.0925 msec ( 10800.0/sec): per-file cost of open and immediate close of 100 files

  65400 reps @   0.0829 msec ( 12100.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65400 reps @   0.0773 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65400 reps @   0.0781 msec ( 12800.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65400 reps @   0.0775 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  65400 reps @   0.0775 msec ( 12900.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 327000 trep @   0.0787 msec ( 12700.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 308000 reps @   0.0165 msec ( 60500.0/sec): cost of stat'ing current dir
 308000 reps @   0.0179 msec ( 56000.0/sec): cost of stat'ing current dir
 308000 reps @   0.0179 msec ( 56000.0/sec): cost of stat'ing current dir
 308000 reps @   0.0179 msec ( 56000.0/sec): cost of stat'ing current dir
 308000 reps @   0.0179 msec ( 56000.0/sec): cost of stat'ing current dir
1540000 trep @   0.0176 msec ( 56800.0/sec): cost of stat'ing current dir

  67500 reps @   0.0744 msec ( 13400.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0756 msec ( 13200.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0764 msec ( 13100.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0765 msec ( 13100.0/sec): cost of stat'ing 5 component path
  67500 reps @   0.0761 msec ( 13100.0/sec): cost of stat'ing 5 component path
 337500 trep @   0.0758 msec ( 13200.0/sec): cost of stat'ing 5 component path

   1989 reps @   2.5219 msec (   397.0/sec): open directory and stat 100 files in it
   1989 reps @   2.5207 msec (   397.0/sec): open directory and stat 100 files in it
   1989 reps @   2.5296 msec (   395.0/sec): open directory and stat 100 files in it
   1989 reps @   2.5335 msec (   395.0/sec): open directory and stat 100 files in it
   1989 reps @   2.4628 msec (   406.0/sec): open directory and stat 100 files in it
   9945 trep @   2.5137 msec (   398.0/sec): open directory and stat 100 files in it

   1400 reps @   3.6148 msec (   277.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.4707 msec (   288.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.5093 msec (   285.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.5042 msec (   285.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   1400 reps @   3.4768 msec (   288.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   7000 trep @   3.5151 msec (   284.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 380700 reps @   0.0131 msec ( 76500.0/sec): ndbm lookup into database with 900 entries
 380700 reps @   0.0131 msec ( 76400.0/sec): ndbm lookup into database with 900 entries
 380700 reps @   0.0128 msec ( 77800.0/sec): ndbm lookup into database with 900 entries
 380700 reps @   0.0128 msec ( 78100.0/sec): ndbm lookup into database with 900 entries
 380700 reps @   0.0128 msec ( 78100.0/sec): ndbm lookup into database with 900 entries
1903500 trep @   0.0129 msec ( 77400.0/sec): ndbm lookup into database with 900 entries

  42400 reps @   0.1230 msec (  8130.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1215 msec (  8230.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1217 msec (  8220.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1225 msec (  8170.0/sec): 1 byte token passing between two processes using two pipes
  42400 reps @   0.1226 msec (  8160.0/sec): 1 byte token passing between two processes using two pipes
 212000 trep @   0.1223 msec (  8180.0/sec): 1 byte token passing between two processes using two pipes

  36400 reps @   0.1417 msec (  7060.0/sec): 1 kilobyte token passing between two processes using two pipes
  36400 reps @   0.1416 msec (  7060.0/sec): 1 kilobyte token passing between two processes using two pipes
  36400 reps @   0.1415 msec (  7070.0/sec): 1 kilobyte token passing between two processes using two pipes
  36400 reps @   0.1415 msec (  7070.0/sec): 1 kilobyte token passing between two processes using two pipes
  36400 reps @   0.1415 msec (  7070.0/sec): 1 kilobyte token passing between two processes using two pipes
 182000 trep @   0.1415 msec (  7060.0/sec): 1 kilobyte token passing between two processes using two pipes

12552000 reps @   0.0004 msec (2530000.0/sec): setjmp/longjmp
12552000 reps @   0.0004 msec (2530000.0/sec): setjmp/longjmp
12552000 reps @   0.0004 msec (2530000.0/sec): setjmp/longjmp
12552000 reps @   0.0004 msec (2530000.0/sec): setjmp/longjmp
12552000 reps @   0.0004 msec (2530000.0/sec): setjmp/longjmp
62760000 trep @   0.0004 msec (2530000.0/sec): setjmp/longjmp

 248000 reps @   0.0203 msec ( 49300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0203 msec ( 49300.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 248000 reps @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1240000 trep @   0.0203 msec ( 49200.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   6050 reps @   0.8790 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle
   6050 reps @   0.8727 msec (  1150.0/sec): create/destroy client UDP-based SunRPC handle
   6050 reps @   0.8729 msec (  1150.0/sec): create/destroy client UDP-based SunRPC handle
   6050 reps @   0.8838 msec (  1130.0/sec): create/destroy client UDP-based SunRPC handle
   6050 reps @   0.8764 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle
  30250 trep @   0.8769 msec (  1140.0/sec): create/destroy client UDP-based SunRPC handle

  11600 reps @   0.4379 msec (  2280.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4324 msec (  2310.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4396 msec (  2270.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4341 msec (  2300.0/sec): TCP-based SunRPC to negate an integer
  11600 reps @   0.4363 msec (  2290.0/sec): TCP-based SunRPC to negate an integer
  58000 trep @   0.4361 msec (  2290.0/sec): TCP-based SunRPC to negate an integer

  11600 reps @   0.4343 msec (  2300.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4349 msec (  2300.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4420 msec (  2260.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4401 msec (  2270.0/sec): UDP-based SunRPC to negate an integer
  11600 reps @   0.4395 msec (  2280.0/sec): UDP-based SunRPC to negate an integer
  58000 trep @   0.4381 msec (  2280.0/sec): UDP-based SunRPC to negate an integer

  11600 reps @   0.4295 msec (  2330.0/sec): TCP-based SunRPC no-op
  11600 reps @   0.4327 msec (  2310.0/sec): TCP-based SunRPC no-op
  11600 reps @   0.4312 msec (  2320.0/sec): TCP-based SunRPC no-op
  11600 reps @   0.4267 msec (  2340.0/sec): TCP-based SunRPC no-op
  11600 reps @   0.4334 msec (  2310.0/sec): TCP-based SunRPC no-op
  58000 trep @   0.4307 msec (  2320.0/sec): TCP-based SunRPC no-op

  11600 reps @   0.4225 msec (  2370.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4166 msec (  2400.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4237 msec (  2360.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4371 msec (  2290.0/sec): UDP-based SunRPC no-op
  11600 reps @   0.4388 msec (  2280.0/sec): UDP-based SunRPC no-op
  58000 trep @   0.4278 msec (  2340.0/sec): UDP-based SunRPC no-op

2304000 reps @   0.0022 msec (461000.0/sec): getpid system call
2304000 reps @   0.0022 msec (461000.0/sec): getpid system call
2304000 reps @   0.0022 msec (461000.0/sec): getpid system call
2304000 reps @   0.0022 msec (461000.0/sec): getpid system call
2304000 reps @   0.0022 msec (461000.0/sec): getpid system call
11520000 trep @   0.0022 msec (461000.0/sec): getpid system call

 277500 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 277500 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 277500 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 277500 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 277500 reps @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1387500 trep @   0.0180 msec ( 55500.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 720400 reps @   0.0070 msec (144000.0/sec): gettimeofday system call
 720400 reps @   0.0070 msec (144000.0/sec): gettimeofday system call
 720400 reps @   0.0070 msec (144000.0/sec): gettimeofday system call
 720400 reps @   0.0069 msec (144000.0/sec): gettimeofday system call
 720400 reps @   0.0070 msec (144000.0/sec): gettimeofday system call
3602000 trep @   0.0070 msec (144000.0/sec): gettimeofday system call

    650 reps @   7.7533 msec (   129.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.7985 msec (   128.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.7762 msec (   129.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.7933 msec (   128.0/sec): fork, child immediately exits, parent waits
    650 reps @   7.7075 msec (   130.0/sec): fork, child immediately exits, parent waits
   3250 trep @   7.7658 msec (   129.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.5854 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5814 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5812 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5812 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.5904 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.5839 msec (    0.99/sec): sleep for one second (validates test time)

 908600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 908600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 908600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 908600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
 908600 reps @   0.0055 msec (181000.0/sec): select on no fds with no timeout
4543000 trep @   0.0055 msec (181000.0/sec): select on no fds with no timeout

 219900 reps @   0.0227 msec ( 44000.0/sec): select on 16 pipe read fds with immediate timeout
 219900 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
 219900 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
 219900 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
 219900 reps @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout
1099500 trep @   0.0228 msec ( 43900.0/sec): select on 16 pipe read fds with immediate timeout

 122700 reps @   0.0408 msec ( 24500.0/sec): select on 32 pipe read fds with immediate timeout
 122700 reps @   0.0408 msec ( 24500.0/sec): select on 32 pipe read fds with immediate timeout
 122700 reps @   0.0408 msec ( 24500.0/sec): select on 32 pipe read fds with immediate timeout
 122700 reps @   0.0408 msec ( 24500.0/sec): select on 32 pipe read fds with immediate timeout
 122700 reps @   0.0408 msec ( 24500.0/sec): select on 32 pipe read fds with immediate timeout
 613500 trep @   0.0408 msec ( 24500.0/sec): select on 32 pipe read fds with immediate timeout

 216000 reps @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout
 216000 reps @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout
 216000 reps @   0.0232 msec ( 43200.0/sec): select on 16 pipe write fds with immediate timeout
 216000 reps @   0.0233 msec ( 42900.0/sec): select on 16 pipe write fds with immediate timeout
 216000 reps @   0.0232 msec ( 43100.0/sec): select on 16 pipe write fds with immediate timeout
1080000 trep @   0.0232 msec ( 43100.0/sec): select on 16 pipe write fds with immediate timeout

 216400 reps @   0.0231 msec ( 43300.0/sec): select on 32 pipe write fds with immediate timeout
 216400 reps @   0.0231 msec ( 43300.0/sec): select on 32 pipe write fds with immediate timeout
 216400 reps @   0.0231 msec ( 43300.0/sec): select on 32 pipe write fds with immediate timeout
 216400 reps @   0.0231 msec ( 43300.0/sec): select on 32 pipe write fds with immediate timeout
 216400 reps @   0.0231 msec ( 43300.0/sec): select on 32 pipe write fds with immediate timeout
1082000 trep @   0.0231 msec ( 43300.0/sec): select on 32 pipe write fds with immediate timeout

  31100 reps @   0.1612 msec (  6200.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1611 msec (  6210.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1608 msec (  6220.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1608 msec (  6220.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  31100 reps @   0.1607 msec (  6220.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 155500 trep @   0.1609 msec (  6210.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    330 reps @  15.1486 msec (    66.0/sec): popen and read from "/bin/echo hello"
    330 reps @  15.1022 msec (    66.2/sec): popen and read from "/bin/echo hello"
    330 reps @  15.1640 msec (    65.9/sec): popen and read from "/bin/echo hello"
    330 reps @  15.1520 msec (    66.0/sec): popen and read from "/bin/echo hello"
    330 reps @  15.0976 msec (    66.2/sec): popen and read from "/bin/echo hello"
   1650 trep @  15.1329 msec (    66.1/sec): popen and read from "/bin/echo hello"

  40850 reps @   0.1224 msec (  8170.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1226 msec (  8160.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1227 msec (  8150.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1226 msec (  8160.0/sec): mmap megabyte /dev/zero region 
  40850 reps @   0.1228 msec (  8140.0/sec): mmap megabyte /dev/zero region 
 204250 trep @   0.1226 msec (  8160.0/sec): mmap megabyte /dev/zero region 

    809 reps @   6.1130 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    809 reps @   6.1092 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    809 reps @   6.1075 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    809 reps @   6.1070 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    809 reps @   6.1064 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   4045 trep @   6.1086 msec (   164.0/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

   1378 reps @   3.5982 msec (   278.0/sec): copy every byte of newly mmaped megabyte file
   1378 reps @   3.5987 msec (   278.0/sec): copy every byte of newly mmaped megabyte file
   1378 reps @   3.8569 msec (   259.0/sec): copy every byte of newly mmaped megabyte file
   1378 reps @   4.1231 msec (   243.0/sec): copy every byte of newly mmaped megabyte file
   1378 reps @   4.1571 msec (   241.0/sec): copy every byte of newly mmaped megabyte file
   6890 trep @   3.8668 msec (   259.0/sec): copy every byte of newly mmaped megabyte file

     76 reps @  56.8637 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     76 reps @  56.8997 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     76 reps @  57.0549 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
     76 reps @  56.9389 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers
     76 reps @  56.9828 msec (    17.5/sec): compress & uncompress 52 kilobyte text file of numbers
    380 trep @  56.9480 msec (    17.6/sec): compress & uncompress 52 kilobyte text file of numbers

     30 reps @ 189.1737 msec (    5.29/sec): compile ANSI C `hello world' with no special options
     30 reps @ 185.5328 msec (    5.39/sec): compile ANSI C `hello world' with no special options
     30 reps @ 187.4069 msec (    5.34/sec): compile ANSI C `hello world' with no special options
     30 reps @ 187.3645 msec (    5.34/sec): compile ANSI C `hello world' with no special options
     30 reps @ 186.8608 msec (    5.35/sec): compile ANSI C `hello world' with no special options
    150 trep @ 187.2677 msec (    5.34/sec): compile ANSI C `hello world' with no special options

     30 reps @ 140.5022 msec (    7.12/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     30 reps @ 147.6300 msec (    6.77/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     30 reps @ 140.9203 msec (    7.10/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     30 reps @ 144.1729 msec (    6.94/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     30 reps @ 148.6104 msec (    6.73/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
    150 trep @ 144.3672 msec (    6.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     42 reps @ 146.8312 msec (    6.81/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 143.3765 msec (    6.97/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 140.5436 msec (    7.12/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 144.7124 msec (    6.91/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     42 reps @ 148.6395 msec (    6.73/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
    210 trep @ 144.8206 msec (    6.91/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     36 reps @ 146.1971 msec (    6.84/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     36 reps @ 139.4797 msec (    7.17/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     36 reps @ 147.1798 msec (    6.79/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     36 reps @ 138.4989 msec (    7.22/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     36 reps @ 153.0232 msec (    6.53/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
    180 trep @ 144.8757 msec (    6.90/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

     40 reps @ 145.1308 msec (    6.89/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 146.5679 msec (    6.82/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 137.7487 msec (    7.26/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 149.9605 msec (    6.67/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     40 reps @ 142.8425 msec (    7.00/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
    200 trep @ 144.4501 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     36 reps @ 146.7876 msec (    6.81/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 136.5181 msec (    7.33/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 154.7130 msec (    6.46/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 139.1081 msec (    7.19/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     36 reps @ 145.4459 msec (    6.88/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
    180 trep @ 144.5145 msec (    6.92/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     48 reps @ 144.2493 msec (    6.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 143.1567 msec (    6.99/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 143.7918 msec (    6.95/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 147.5615 msec (    6.78/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     48 reps @ 142.2960 msec (    7.03/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
    240 trep @ 144.2111 msec (    6.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1422.1605 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1421.6965 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.7435 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1421.8872 msec (    0.70/sec): use dc to output first 1,000 factorials
      4 reps @ 1422.6030 msec (    0.70/sec): use dc to output first 1,000 factorials
     20 trep @ 1422.2181 msec (    0.70/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0034 msec (296000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (298000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (297000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (298000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0034 msec (298000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0034 msec (297000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  92908 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92908 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92908 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92908 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
  92908 reps @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree
 464540 trep @   0.0538 msec ( 18600.0/sec): use regcomp to compile 51 char literal, then regfree

      5 reps @ 1054.4296 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1055.9078 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1055.0772 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1053.5332 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1055.5926 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text
     25 trep @ 1054.9081 msec (    0.95/sec): use regexec with 51 char literal to search 142 kilobyte text

 123420 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123420 reps @   0.0404 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123420 reps @   0.0404 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123420 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 123420 reps @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree
 617100 trep @   0.0405 msec ( 24700.0/sec): use regcomp to compile long .* pattern, then regfree

     10 reps @ 537.0324 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 536.7044 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 536.4735 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 537.0294 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 536.5252 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text
     50 trep @ 536.7530 msec (    1.86/sec): use regexec with long .* pattern to search 142 kilobyte text


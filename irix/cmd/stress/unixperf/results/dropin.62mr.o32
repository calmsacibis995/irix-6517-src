UNIX PERFORMANCE REPORT (generated by unixperf v1.0)
------------------------------------------------------
Hostname: dropin
Operating system: IRIX64 6.2
Compiler version: unknown
Instruction set: MIPS 2
Application binary interface: O32
Iris Audio Processor: version A2 revision 1.1.0
1 195 MHZ IP28 Processor
CPU: MIPS R10000 Processor Chip Revision: 2.4
FPU: MIPS R10010 Floating Point Chip Revision: 0.0
On-board serial ports: 2
On-board bi-directional parallel port
Data cache size: 32 Kbytes
Instruction cache size: 32 Kbytes
Secondary unified instruction/data cache size: 1 Mbyte
Main memory size: 64 Mbytes
EISA bus: adapter 0
Integral Ethernet: ec0, version 1
Integral SCSI controller 1: Version WD33C93B, revision D
Integral SCSI controller 0: Version WD33C93B, revision D
  Disk drive: unit 1 on SCSI controller 0
Graphics board: High Impact
Uptime: 21 days,  7:11
Users: 1
Load average: 1.09, 1.95, 1.74
File IO test directory: /usr/tmp
File IO test filesystem: xfs (2017.18 MB total, 173.05 MB available)
Date: Tue Mar 18 04:45:54 1997

5356632 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
5356632 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
5356632 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
5356632 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
5356632 reps @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply
26783160 trep @   0.0009 msec (1090000.0/sec): 4 by 4 double matrix multiply

3002736 reps @   0.0016 msec (610000.0/sec): 4 by 4 float matrix multiply
3002736 reps @   0.0016 msec (610000.0/sec): 4 by 4 float matrix multiply
3002736 reps @   0.0016 msec (611000.0/sec): 4 by 4 float matrix multiply
3002736 reps @   0.0016 msec (611000.0/sec): 4 by 4 float matrix multiply
3002736 reps @   0.0016 msec (609000.0/sec): 4 by 4 float matrix multiply
15013680 trep @   0.0016 msec (610000.0/sec): 4 by 4 float matrix multiply

1870500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
1870500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
1870500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
1870500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
1870500 reps @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return
9352500 trep @   0.0027 msec (374000.0/sec): recurse 250 simple function calls and return

5496400 reps @   0.0009 msec (1120000.0/sec): bcopy of 256 bytes
5496400 reps @   0.0009 msec (1120000.0/sec): bcopy of 256 bytes
5496400 reps @   0.0009 msec (1120000.0/sec): bcopy of 256 bytes
5496400 reps @   0.0009 msec (1120000.0/sec): bcopy of 256 bytes
5496400 reps @   0.0009 msec (1120000.0/sec): bcopy of 256 bytes
27482000 trep @   0.0009 msec (1120000.0/sec): bcopy of 256 bytes

  84200 reps @   0.0584 msec ( 17100.0/sec): bcopy of 16 kilobytes
  84200 reps @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes
  84200 reps @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes
  84200 reps @   0.0583 msec ( 17200.0/sec): bcopy of 16 kilobytes
  84200 reps @   0.0583 msec ( 17200.0/sec): bcopy of 16 kilobytes
 421000 trep @   0.0583 msec ( 17100.0/sec): bcopy of 16 kilobytes

  13284 reps @   0.3717 msec (  2690.0/sec): bcopy of 100 kilobytes
  13284 reps @   0.3721 msec (  2690.0/sec): bcopy of 100 kilobytes
  13284 reps @   0.3718 msec (  2690.0/sec): bcopy of 100 kilobytes
  13284 reps @   0.3720 msec (  2690.0/sec): bcopy of 100 kilobytes
  13284 reps @   0.3718 msec (  2690.0/sec): bcopy of 100 kilobytes
  66420 trep @   0.3719 msec (  2690.0/sec): bcopy of 100 kilobytes

    208 reps @  22.1195 msec (    45.2/sec): bcopy of 1 megabyte
    208 reps @  22.1416 msec (    45.2/sec): bcopy of 1 megabyte
    208 reps @  22.1943 msec (    45.1/sec): bcopy of 1 megabyte
    208 reps @  22.1262 msec (    45.2/sec): bcopy of 1 megabyte
    208 reps @  22.1391 msec (    45.2/sec): bcopy of 1 megabyte
   1040 trep @  22.1442 msec (    45.2/sec): bcopy of 1 megabyte

     24 reps @ 221.7622 msec (    4.51/sec): bcopy of 10 megabytes
     24 reps @ 221.9643 msec (    4.51/sec): bcopy of 10 megabytes
     24 reps @ 221.7998 msec (    4.51/sec): bcopy of 10 megabytes
     24 reps @ 221.5543 msec (    4.51/sec): bcopy of 10 megabytes
     24 reps @ 221.6879 msec (    4.51/sec): bcopy of 10 megabytes
    120 trep @ 221.7537 msec (    4.51/sec): bcopy of 10 megabytes

     24 reps @ 219.2288 msec (    4.56/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 219.2314 msec (    4.56/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 219.4574 msec (    4.56/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 219.1743 msec (    4.56/sec): bcopy of 10 megabytes (cacheline-aligned)
     24 reps @ 219.2730 msec (    4.56/sec): bcopy of 10 megabytes (cacheline-aligned)
    120 trep @ 219.2730 msec (    4.56/sec): bcopy of 10 megabytes (cacheline-aligned)

     24 reps @ 221.0402 msec (    4.52/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 221.3170 msec (    4.52/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 221.2705 msec (    4.52/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 220.9403 msec (    4.53/sec): bcopy of 10 megabytes (word mis-aligned)
     24 reps @ 221.0108 msec (    4.52/sec): bcopy of 10 megabytes (word mis-aligned)
    120 trep @ 221.1158 msec (    4.52/sec): bcopy of 10 megabytes (word mis-aligned)

     24 reps @ 232.5410 msec (    4.30/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 232.5395 msec (    4.30/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 232.4657 msec (    4.30/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 232.1603 msec (    4.31/sec): bcopy of 10 megabytes (dword mis-aligned)
     24 reps @ 232.4196 msec (    4.30/sec): bcopy of 10 megabytes (dword mis-aligned)
    120 trep @ 232.4252 msec (    4.30/sec): bcopy of 10 megabytes (dword mis-aligned)

11023600 reps @   0.0004 msec (2250000.0/sec): bzero of 256 bytes
11023600 reps @   0.0004 msec (2250000.0/sec): bzero of 256 bytes
11023600 reps @   0.0004 msec (2240000.0/sec): bzero of 256 bytes
11023600 reps @   0.0004 msec (2250000.0/sec): bzero of 256 bytes
11023600 reps @   0.0004 msec (2250000.0/sec): bzero of 256 bytes
55118000 trep @   0.0004 msec (2250000.0/sec): bzero of 256 bytes

 231160 reps @   0.0216 msec ( 46300.0/sec): bzero of 16 kilobytes
 231160 reps @   0.0216 msec ( 46300.0/sec): bzero of 16 kilobytes
 231160 reps @   0.0216 msec ( 46300.0/sec): bzero of 16 kilobytes
 231160 reps @   0.0216 msec ( 46300.0/sec): bzero of 16 kilobytes
 231160 reps @   0.0216 msec ( 46300.0/sec): bzero of 16 kilobytes
1155800 trep @   0.0216 msec ( 46300.0/sec): bzero of 16 kilobytes

  21688 reps @   0.2259 msec (  4430.0/sec): bzero of 100 kilobytes
  21688 reps @   0.2264 msec (  4420.0/sec): bzero of 100 kilobytes
  21688 reps @   0.2261 msec (  4420.0/sec): bzero of 100 kilobytes
  21688 reps @   0.2260 msec (  4420.0/sec): bzero of 100 kilobytes
  21688 reps @   0.2265 msec (  4410.0/sec): bzero of 100 kilobytes
 108440 trep @   0.2262 msec (  4420.0/sec): bzero of 100 kilobytes

    392 reps @  13.3170 msec (    75.1/sec): bzero of 1 megabyte
    392 reps @  13.3099 msec (    75.1/sec): bzero of 1 megabyte
    392 reps @  13.3026 msec (    75.2/sec): bzero of 1 megabyte
    392 reps @  13.3104 msec (    75.1/sec): bzero of 1 megabyte
    392 reps @  13.3115 msec (    75.1/sec): bzero of 1 megabyte
   1960 trep @  13.3103 msec (    75.1/sec): bzero of 1 megabyte

     40 reps @ 133.1226 msec (    7.51/sec): bzero of 10 megabytes
     40 reps @ 133.1868 msec (    7.51/sec): bzero of 10 megabytes
     40 reps @ 133.1546 msec (    7.51/sec): bzero of 10 megabytes
     40 reps @ 133.3415 msec (    7.50/sec): bzero of 10 megabytes
     40 reps @ 133.1984 msec (    7.51/sec): bzero of 10 megabytes
    200 trep @ 133.2008 msec (    7.51/sec): bzero of 10 megabytes

     40 reps @ 133.8000 msec (    7.47/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 133.6001 msec (    7.49/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 133.5091 msec (    7.49/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 133.4694 msec (    7.49/sec): bzero of 10 megabytes (cacheline-aligned)
     40 reps @ 133.6726 msec (    7.48/sec): bzero of 10 megabytes (cacheline-aligned)
    200 trep @ 133.6102 msec (    7.48/sec): bzero of 10 megabytes (cacheline-aligned)

     40 reps @ 132.6863 msec (    7.54/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 132.6490 msec (    7.54/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 132.6830 msec (    7.54/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 132.8120 msec (    7.53/sec): bzero of 10 megabytes (word mis-aligned)
     40 reps @ 132.7543 msec (    7.53/sec): bzero of 10 megabytes (word mis-aligned)
    200 trep @ 132.7169 msec (    7.53/sec): bzero of 10 megabytes (word mis-aligned)

     40 reps @ 133.1236 msec (    7.51/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 132.8710 msec (    7.53/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 132.9528 msec (    7.52/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 133.0384 msec (    7.52/sec): bzero of 10 megabytes (dword mis-aligned)
     40 reps @ 132.9418 msec (    7.52/sec): bzero of 10 megabytes (dword mis-aligned)
    200 trep @ 132.9855 msec (    7.52/sec): bzero of 10 megabytes (dword mis-aligned)

  11474 reps @   0.4297 msec (  2330.0/sec): bcopy then qsort 400 32-bit integers
  11474 reps @   0.4292 msec (  2330.0/sec): bcopy then qsort 400 32-bit integers
  11474 reps @   0.4292 msec (  2330.0/sec): bcopy then qsort 400 32-bit integers
  11474 reps @   0.4291 msec (  2330.0/sec): bcopy then qsort 400 32-bit integers
  11474 reps @   0.4295 msec (  2330.0/sec): bcopy then qsort 400 32-bit integers
  57370 trep @   0.4293 msec (  2330.0/sec): bcopy then qsort 400 32-bit integers

    177 reps @  27.9602 msec (    35.8/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  27.9774 msec (    35.7/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  27.9722 msec (    35.7/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  27.9616 msec (    35.8/sec): bcopy then qsort 16,000 32-bit integers
    177 reps @  28.0028 msec (    35.7/sec): bcopy then qsort 16,000 32-bit integers
    885 trep @  27.9748 msec (    35.7/sec): bcopy then qsort 16,000 32-bit integers

     38 reps @ 131.0650 msec (    7.63/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 130.8656 msec (    7.64/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 130.9718 msec (    7.64/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 130.8773 msec (    7.64/sec): bcopy then qsort 64,000 32-bit integers
     38 reps @ 130.8213 msec (    7.64/sec): bcopy then qsort 64,000 32-bit integers
    190 trep @ 130.9202 msec (    7.64/sec): bcopy then qsort 64,000 32-bit integers

10310000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10310000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10310000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10310000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
10310000 reps @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)
51550000 trep @   0.0005 msec (2090000.0/sec): basic float trigonometric function (sinf/cosf/tanf)

7657500 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7657500 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7657500 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7657500 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
7657500 reps @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)
38287500 trep @   0.0006 msec (1560000.0/sec): basic double trigonometric function (sin/cos/tan)

1772000 reps @   0.0028 msec (357000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772000 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772000 reps @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772000 reps @   0.0028 msec (359000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
1772000 reps @   0.0028 msec (357000.0/sec): Dhrystone 2 (from Byte Unix benchmark)
8860000 trep @   0.0028 msec (358000.0/sec): Dhrystone 2 (from Byte Unix benchmark)

  22800 reps @   0.2196 msec (  4550.0/sec): Tower of Hanoi recursion test (10 deep)
  22800 reps @   0.2197 msec (  4550.0/sec): Tower of Hanoi recursion test (10 deep)
  22800 reps @   0.2197 msec (  4550.0/sec): Tower of Hanoi recursion test (10 deep)
  22800 reps @   0.2195 msec (  4560.0/sec): Tower of Hanoi recursion test (10 deep)
  22800 reps @   0.2197 msec (  4550.0/sec): Tower of Hanoi recursion test (10 deep)
 114000 trep @   0.2196 msec (  4550.0/sec): Tower of Hanoi recursion test (10 deep)

    900 reps @   7.1939 msec (   139.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.1957 msec (   139.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.1909 msec (   139.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.1907 msec (   139.0/sec): Tower of Hanoi recursion test (15 deep)
    900 reps @   7.1921 msec (   139.0/sec): Tower of Hanoi recursion test (15 deep)
   4500 trep @   7.1926 msec (   139.0/sec): Tower of Hanoi recursion test (15 deep)

 670500 reps @   0.0075 msec (134000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 670500 reps @   0.0075 msec (134000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 670500 reps @   0.0075 msec (134000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 670500 reps @   0.0075 msec (134000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
 670500 reps @   0.0075 msec (134000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES
3352500 trep @   0.0075 msec (134000.0/sec): encrypt/decrypt of 64-bit block using Levy88 fast DES

 146200 reps @   0.0433 msec ( 23100.0/sec): write 80 bytes to a log file
 146200 reps @   0.0424 msec ( 23600.0/sec): write 80 bytes to a log file
 146200 reps @   0.0422 msec ( 23700.0/sec): write 80 bytes to a log file
 146200 reps @   0.0465 msec ( 21500.0/sec): write 80 bytes to a log file
 146200 reps @   0.0535 msec ( 18700.0/sec): write 80 bytes to a log file
 731000 trep @   0.0456 msec ( 21900.0/sec): write 80 bytes to a log file

   1000 reps @   4.5487 msec (   220.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.4326 msec (   226.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.5269 msec (   221.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.4413 msec (   225.0/sec): per-file cost of creating 100 files then unlinking them all
   1000 reps @   4.4249 msec (   226.0/sec): per-file cost of creating 100 files then unlinking them all
   5000 trep @   4.4749 msec (   223.0/sec): per-file cost of creating 100 files then unlinking them all

  58400 reps @   0.0858 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files
  58400 reps @   0.0860 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58400 reps @   0.0858 msec ( 11600.0/sec): per-file cost of open and immediate close of 100 files
  58400 reps @   0.0857 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files
  58400 reps @   0.0845 msec ( 11800.0/sec): per-file cost of open and immediate close of 100 files
 292000 trep @   0.0856 msec ( 11700.0/sec): per-file cost of open and immediate close of 100 files

  53000 reps @   0.0994 msec ( 10100.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53000 reps @   0.0948 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53000 reps @   0.0958 msec ( 10400.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53000 reps @   0.0954 msec ( 10500.0/sec): per-chmod cost of chmod permissions toggle of 100 files
  53000 reps @   0.0965 msec ( 10400.0/sec): per-chmod cost of chmod permissions toggle of 100 files
 265000 trep @   0.0964 msec ( 10400.0/sec): per-chmod cost of chmod permissions toggle of 100 files

 316500 reps @   0.0158 msec ( 63200.0/sec): cost of stat'ing current dir
 316500 reps @   0.0158 msec ( 63200.0/sec): cost of stat'ing current dir
 316500 reps @   0.0159 msec ( 62900.0/sec): cost of stat'ing current dir
 316500 reps @   0.0165 msec ( 60700.0/sec): cost of stat'ing current dir
 316500 reps @   0.0165 msec ( 60700.0/sec): cost of stat'ing current dir
1582500 trep @   0.0161 msec ( 62100.0/sec): cost of stat'ing current dir

  66000 reps @   0.0760 msec ( 13200.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0759 msec ( 13200.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0759 msec ( 13200.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0762 msec ( 13100.0/sec): cost of stat'ing 5 component path
  66000 reps @   0.0769 msec ( 13000.0/sec): cost of stat'ing 5 component path
 330000 trep @   0.0762 msec ( 13100.0/sec): cost of stat'ing 5 component path

   2163 reps @   2.3115 msec (   433.0/sec): open directory and stat 100 files in it
   2163 reps @   2.3125 msec (   432.0/sec): open directory and stat 100 files in it
   2163 reps @   2.3100 msec (   433.0/sec): open directory and stat 100 files in it
   2163 reps @   2.3097 msec (   433.0/sec): open directory and stat 100 files in it
   2163 reps @   2.3153 msec (   432.0/sec): open directory and stat 100 files in it
  10815 trep @   2.3118 msec (   433.0/sec): open directory and stat 100 files in it

    900 reps @   4.6633 msec (   214.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.5116 msec (   222.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.5620 msec (   219.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.4178 msec (   226.0/sec): per-dir cost of making 100 dirs then rmdiring them all
    900 reps @   4.4546 msec (   224.0/sec): per-dir cost of making 100 dirs then rmdiring them all
   4500 trep @   4.5219 msec (   221.0/sec): per-dir cost of making 100 dirs then rmdiring them all

 400500 reps @   0.0122 msec ( 81600.0/sec): ndbm lookup into database with 900 entries
 400500 reps @   0.0122 msec ( 81700.0/sec): ndbm lookup into database with 900 entries
 400500 reps @   0.0123 msec ( 81400.0/sec): ndbm lookup into database with 900 entries
 400500 reps @   0.0118 msec ( 84900.0/sec): ndbm lookup into database with 900 entries
 400500 reps @   0.0118 msec ( 84900.0/sec): ndbm lookup into database with 900 entries
2002500 trep @   0.0121 msec ( 82900.0/sec): ndbm lookup into database with 900 entries

  74000 reps @   0.0665 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes
  74000 reps @   0.0662 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
  74000 reps @   0.0667 msec ( 15000.0/sec): 1 byte token passing between two processes using two pipes
  74000 reps @   0.0664 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
  74000 reps @   0.0664 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes
 370000 trep @   0.0664 msec ( 15100.0/sec): 1 byte token passing between two processes using two pipes

  60800 reps @   0.0813 msec ( 12300.0/sec): 1 kilobyte token passing between two processes using two pipes
  60800 reps @   0.0812 msec ( 12300.0/sec): 1 kilobyte token passing between two processes using two pipes
  60800 reps @   0.0811 msec ( 12300.0/sec): 1 kilobyte token passing between two processes using two pipes
  60800 reps @   0.0812 msec ( 12300.0/sec): 1 kilobyte token passing between two processes using two pipes
  60800 reps @   0.0811 msec ( 12300.0/sec): 1 kilobyte token passing between two processes using two pipes
 304000 trep @   0.0812 msec ( 12300.0/sec): 1 kilobyte token passing between two processes using two pipes

9788000 reps @   0.0005 msec (1990000.0/sec): setjmp/longjmp
9788000 reps @   0.0005 msec (1990000.0/sec): setjmp/longjmp
9788000 reps @   0.0005 msec (1990000.0/sec): setjmp/longjmp
9788000 reps @   0.0005 msec (1990000.0/sec): setjmp/longjmp
9788000 reps @   0.0005 msec (1990000.0/sec): setjmp/longjmp
48940000 trep @   0.0005 msec (1990000.0/sec): setjmp/longjmp

 224000 reps @   0.0224 msec ( 44600.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 224000 reps @   0.0224 msec ( 44600.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 224000 reps @   0.0224 msec ( 44600.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 224000 reps @   0.0224 msec ( 44700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
 224000 reps @   0.0224 msec ( 44700.0/sec): sigsetjmp/siglongjmp (saving signal mask)
1120000 trep @   0.0224 msec ( 44600.0/sec): sigsetjmp/siglongjmp (saving signal mask)

   4140 reps @   1.2038 msec (   831.0/sec): create/destroy client UDP-based SunRPC handle
   4140 reps @   1.2027 msec (   831.0/sec): create/destroy client UDP-based SunRPC handle
   4140 reps @   1.2017 msec (   832.0/sec): create/destroy client UDP-based SunRPC handle
   4140 reps @   1.2011 msec (   833.0/sec): create/destroy client UDP-based SunRPC handle
   4140 reps @   1.2006 msec (   833.0/sec): create/destroy client UDP-based SunRPC handle
  20700 trep @   1.2020 msec (   832.0/sec): create/destroy client UDP-based SunRPC handle

  14000 reps @   0.3400 msec (  2940.0/sec): TCP-based SunRPC to negate an integer
  14000 reps @   0.3442 msec (  2900.0/sec): TCP-based SunRPC to negate an integer
  14000 reps @   0.3393 msec (  2950.0/sec): TCP-based SunRPC to negate an integer
  14000 reps @   0.3402 msec (  2940.0/sec): TCP-based SunRPC to negate an integer
  14000 reps @   0.3414 msec (  2930.0/sec): TCP-based SunRPC to negate an integer
  70000 trep @   0.3410 msec (  2930.0/sec): TCP-based SunRPC to negate an integer

  15200 reps @   0.3312 msec (  3020.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3312 msec (  3020.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3325 msec (  3010.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3332 msec (  3000.0/sec): UDP-based SunRPC to negate an integer
  15200 reps @   0.3332 msec (  3000.0/sec): UDP-based SunRPC to negate an integer
  76000 trep @   0.3323 msec (  3010.0/sec): UDP-based SunRPC to negate an integer

  14000 reps @   0.3524 msec (  2840.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3522 msec (  2840.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3492 msec (  2860.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3508 msec (  2850.0/sec): TCP-based SunRPC no-op
  14000 reps @   0.3494 msec (  2860.0/sec): TCP-based SunRPC no-op
  70000 trep @   0.3508 msec (  2850.0/sec): TCP-based SunRPC no-op

  15600 reps @   0.3211 msec (  3110.0/sec): UDP-based SunRPC no-op
  15600 reps @   0.3215 msec (  3110.0/sec): UDP-based SunRPC no-op
  15600 reps @   0.3220 msec (  3110.0/sec): UDP-based SunRPC no-op
  15600 reps @   0.3218 msec (  3110.0/sec): UDP-based SunRPC no-op
  15600 reps @   0.3225 msec (  3100.0/sec): UDP-based SunRPC no-op
  78000 trep @   0.3218 msec (  3110.0/sec): UDP-based SunRPC no-op

1574500 reps @   0.0031 msec (320000.0/sec): getpid system call
1574500 reps @   0.0031 msec (320000.0/sec): getpid system call
1574500 reps @   0.0031 msec (320000.0/sec): getpid system call
1574500 reps @   0.0031 msec (320000.0/sec): getpid system call
1574500 reps @   0.0031 msec (320000.0/sec): getpid system call
7872500 trep @   0.0031 msec (320000.0/sec): getpid system call

 240000 reps @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0209 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0209 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0209 msec ( 48000.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
 240000 reps @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask
1200000 trep @   0.0209 msec ( 47900.0/sec): easy system calls, ie. dup/close/getpid/getuid/umask

 816400 reps @   0.0061 msec (163000.0/sec): gettimeofday system call
 816400 reps @   0.0061 msec (163000.0/sec): gettimeofday system call
 816400 reps @   0.0061 msec (163000.0/sec): gettimeofday system call
 816400 reps @   0.0061 msec (163000.0/sec): gettimeofday system call
 816400 reps @   0.0061 msec (163000.0/sec): gettimeofday system call
4082000 trep @   0.0061 msec (163000.0/sec): gettimeofday system call

   1150 reps @   4.5253 msec (   221.0/sec): fork, child immediately exits, parent waits
   1150 reps @   4.5531 msec (   220.0/sec): fork, child immediately exits, parent waits
   1150 reps @   4.5595 msec (   219.0/sec): fork, child immediately exits, parent waits
   1150 reps @   4.5537 msec (   220.0/sec): fork, child immediately exits, parent waits
   1150 reps @   4.5526 msec (   220.0/sec): fork, child immediately exits, parent waits
   5750 trep @   4.5488 msec (   220.0/sec): fork, child immediately exits, parent waits

      5 reps @ 1010.0088 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9974 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0028 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1009.9916 msec (    0.99/sec): sleep for one second (validates test time)
      5 reps @ 1010.0024 msec (    0.99/sec): sleep for one second (validates test time)
     25 trep @ 1010.0006 msec (    0.99/sec): sleep for one second (validates test time)

 726800 reps @   0.0069 msec (145000.0/sec): select on no fds with no timeout
 726800 reps @   0.0069 msec (146000.0/sec): select on no fds with no timeout
 726800 reps @   0.0069 msec (145000.0/sec): select on no fds with no timeout
 726800 reps @   0.0069 msec (145000.0/sec): select on no fds with no timeout
 726800 reps @   0.0071 msec (142000.0/sec): select on no fds with no timeout
3634000 trep @   0.0069 msec (144000.0/sec): select on no fds with no timeout

 222700 reps @   0.0225 msec ( 44400.0/sec): select on 16 pipe read fds with immediate timeout
 222700 reps @   0.0225 msec ( 44500.0/sec): select on 16 pipe read fds with immediate timeout
 222700 reps @   0.0225 msec ( 44500.0/sec): select on 16 pipe read fds with immediate timeout
 222700 reps @   0.0225 msec ( 44400.0/sec): select on 16 pipe read fds with immediate timeout
 222700 reps @   0.0226 msec ( 44300.0/sec): select on 16 pipe read fds with immediate timeout
1113500 trep @   0.0225 msec ( 44400.0/sec): select on 16 pipe read fds with immediate timeout

 125900 reps @   0.0391 msec ( 25600.0/sec): select on 32 pipe read fds with immediate timeout
 125900 reps @   0.0392 msec ( 25500.0/sec): select on 32 pipe read fds with immediate timeout
 125900 reps @   0.0391 msec ( 25500.0/sec): select on 32 pipe read fds with immediate timeout
 125900 reps @   0.0391 msec ( 25500.0/sec): select on 32 pipe read fds with immediate timeout
 125900 reps @   0.0392 msec ( 25500.0/sec): select on 32 pipe read fds with immediate timeout
 629500 trep @   0.0392 msec ( 25500.0/sec): select on 32 pipe read fds with immediate timeout

 221900 reps @   0.0226 msec ( 44300.0/sec): select on 16 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44300.0/sec): select on 16 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44300.0/sec): select on 16 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44200.0/sec): select on 16 pipe write fds with immediate timeout
 221900 reps @   0.0226 msec ( 44300.0/sec): select on 16 pipe write fds with immediate timeout
1109500 trep @   0.0226 msec ( 44300.0/sec): select on 16 pipe write fds with immediate timeout

 221000 reps @   0.0227 msec ( 44100.0/sec): select on 32 pipe write fds with immediate timeout
 221000 reps @   0.0227 msec ( 44100.0/sec): select on 32 pipe write fds with immediate timeout
 221000 reps @   0.0227 msec ( 44100.0/sec): select on 32 pipe write fds with immediate timeout
 221000 reps @   0.0226 msec ( 44200.0/sec): select on 32 pipe write fds with immediate timeout
 221000 reps @   0.0226 msec ( 44200.0/sec): select on 32 pipe write fds with immediate timeout
1105000 trep @   0.0227 msec ( 44100.0/sec): select on 32 pipe write fds with immediate timeout

  28400 reps @   0.1735 msec (  5760.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  28400 reps @   0.1733 msec (  5770.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  28400 reps @   0.1738 msec (  5760.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  28400 reps @   0.1734 msec (  5770.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
  28400 reps @   0.1735 msec (  5760.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout
 142000 trep @   0.1735 msec (  5760.0/sec): select on 64 pipe read & 64 pipe write fds with immediate timeout

    260 reps @  16.3473 msec (    61.2/sec): popen and read from "/bin/echo hello"
    260 reps @  16.4496 msec (    60.8/sec): popen and read from "/bin/echo hello"
    260 reps @  16.4967 msec (    60.6/sec): popen and read from "/bin/echo hello"
    260 reps @  16.5463 msec (    60.4/sec): popen and read from "/bin/echo hello"
    260 reps @  16.4987 msec (    60.6/sec): popen and read from "/bin/echo hello"
   1300 trep @  16.4677 msec (    60.7/sec): popen and read from "/bin/echo hello"

  54000 reps @   0.0909 msec ( 11000.0/sec): mmap megabyte /dev/zero region 
  54000 reps @   0.0908 msec ( 11000.0/sec): mmap megabyte /dev/zero region 
  54000 reps @   0.0906 msec ( 11000.0/sec): mmap megabyte /dev/zero region 
  54000 reps @   0.0907 msec ( 11000.0/sec): mmap megabyte /dev/zero region 
  54000 reps @   0.0908 msec ( 11000.0/sec): mmap megabyte /dev/zero region 
 270000 trep @   0.0907 msec ( 11000.0/sec): mmap megabyte /dev/zero region 

    332 reps @  15.0022 msec (    66.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  14.9944 msec (    66.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  14.9971 msec (    66.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  14.9948 msec (    66.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
    332 reps @  14.9898 msec (    66.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes
   1660 trep @  14.9956 msec (    66.7/sec): touch newly mmaped megabyte /dev/zero region at every 1024 bytes

    713 reps @   6.8278 msec (   146.0/sec): copy every byte of newly mmaped megabyte file
    713 reps @   6.8625 msec (   146.0/sec): copy every byte of newly mmaped megabyte file
    713 reps @   6.9079 msec (   145.0/sec): copy every byte of newly mmaped megabyte file
    713 reps @   6.9352 msec (   144.0/sec): copy every byte of newly mmaped megabyte file
    713 reps @   6.9044 msec (   145.0/sec): copy every byte of newly mmaped megabyte file
   3565 trep @   6.8876 msec (   145.0/sec): copy every byte of newly mmaped megabyte file

     62 reps @  71.3160 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     62 reps @  71.4695 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     62 reps @  71.3947 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     62 reps @  71.2771 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
     62 reps @  71.2865 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers
    310 trep @  71.3488 msec (    14.0/sec): compress & uncompress 52 kilobyte text file of numbers

      7 reps @ 208.5576 msec (    4.79/sec): compile ANSI C `hello world' with no special options
      7 reps @ 208.9911 msec (    4.78/sec): compile ANSI C `hello world' with no special options
      7 reps @ 202.7643 msec (    4.93/sec): compile ANSI C `hello world' with no special options
      7 reps @ 203.6613 msec (    4.91/sec): compile ANSI C `hello world' with no special options
      7 reps @ 203.1007 msec (    4.92/sec): compile ANSI C `hello world' with no special options
     35 trep @ 205.4150 msec (    4.87/sec): compile ANSI C `hello world' with no special options

      8 reps @ 524.4339 msec (    1.91/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 509.3163 msec (    1.96/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 526.0639 msec (    1.90/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 516.9167 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
      8 reps @ 517.6381 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel
     40 trep @ 518.8738 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 1 job parallel

     12 reps @ 529.7307 msec (    1.89/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 527.4725 msec (    1.90/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 513.3242 msec (    1.95/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 517.4813 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     12 reps @ 517.2228 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel
     60 trep @ 521.0463 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 2 job parallel

     16 reps @ 509.3801 msec (    1.96/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 515.6743 msec (    1.94/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 536.2207 msec (    1.86/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 533.0872 msec (    1.88/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     16 reps @ 526.8707 msec (    1.90/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel
     80 trep @ 524.2466 msec (    1.91/sec): use dc to output sqrt(2) to 500 digits, 4 job parallel

     16 reps @ 517.2236 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 515.4538 msec (    1.94/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 519.5432 msec (    1.92/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 484.8691 msec (    2.06/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     16 reps @ 509.9903 msec (    1.96/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel
     80 trep @ 509.4160 msec (    1.96/sec): use dc to output sqrt(2) to 500 digits, 8 job parallel

     12 reps @ 518.9283 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 517.7270 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 517.1163 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 517.5717 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     12 reps @ 517.9178 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel
     60 trep @ 517.8522 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 12 job parallel

     16 reps @ 517.6237 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 517.6759 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 517.3341 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 517.5348 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     16 reps @ 517.5876 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel
     80 trep @ 517.5512 msec (    1.93/sec): use dc to output sqrt(2) to 500 digits, 16 job parallel

      4 reps @ 1353.8140 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1353.8710 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1354.0340 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1353.3438 msec (    0.74/sec): use dc to output first 1,000 factorials
      4 reps @ 1353.7323 msec (    0.74/sec): use dc to output first 1,000 factorials
     20 trep @ 1353.7590 msec (    0.74/sec): use dc to output first 1,000 factorials

3871322 reps @   0.0057 msec (174000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0057 msec (175000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0057 msec (175000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0057 msec (175000.0/sec): Connect 4 game boards evaluated during alpha-beta search
3871322 reps @   0.0057 msec (175000.0/sec): Connect 4 game boards evaluated during alpha-beta search
19356610 trep @   0.0057 msec (175000.0/sec): Connect 4 game boards evaluated during alpha-beta search

  60888 reps @   0.0817 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
  60888 reps @   0.0816 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
  60888 reps @   0.0816 msec ( 12300.0/sec): use regcomp to compile 51 char literal, then regfree
  60888 reps @   0.0817 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree
  60888 reps @   0.0816 msec ( 12300.0/sec): use regcomp to compile 51 char literal, then regfree
 304440 trep @   0.0817 msec ( 12200.0/sec): use regcomp to compile 51 char literal, then regfree

      5 reps @ 1076.6340 msec (    0.93/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1075.6456 msec (    0.93/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1075.3856 msec (    0.93/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1075.7010 msec (    0.93/sec): use regexec with 51 char literal to search 142 kilobyte text
      5 reps @ 1076.4634 msec (    0.93/sec): use regexec with 51 char literal to search 142 kilobyte text
     25 trep @ 1075.9659 msec (    0.93/sec): use regexec with 51 char literal to search 142 kilobyte text

  79512 reps @   0.0629 msec ( 15900.0/sec): use regcomp to compile long .* pattern, then regfree
  79512 reps @   0.0628 msec ( 15900.0/sec): use regcomp to compile long .* pattern, then regfree
  79512 reps @   0.0628 msec ( 15900.0/sec): use regcomp to compile long .* pattern, then regfree
  79512 reps @   0.0630 msec ( 15900.0/sec): use regcomp to compile long .* pattern, then regfree
  79512 reps @   0.0629 msec ( 15900.0/sec): use regcomp to compile long .* pattern, then regfree
 397560 trep @   0.0629 msec ( 15900.0/sec): use regcomp to compile long .* pattern, then regfree

     10 reps @ 528.0863 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 528.2434 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 527.9264 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 528.3476 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     10 reps @ 528.2006 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text
     50 trep @ 528.1609 msec (    1.89/sec): use regexec with long .* pattern to search 142 kilobyte text


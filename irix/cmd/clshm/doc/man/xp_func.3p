'\"macro stdmacro
.na
.TH XP_FUNC 3P
.SH NAME
\f4xp_func\fP: \f4xp_ftok\fP, \f4xp_shmget\fP, \f4xp_shmat\fP, 
\f4xp_shmdt\fP, \f4xp_shmctl\fP \- CrayLink Shared Memory Functions
.SH SYNOPSIS
.na
\f4#include <xp_shm.h>\fP
.PP
\f4key_t xp_ftok(const char *path, int id);\fP
.PP
\f4int   xp_shmget(key_t key, size_t size, int shmflg);\fP
.PP
\f4void *xp_shmat(int shmid, const void *shmaddr, int shmflg);\fP
.PP
\f4int   xp_shmdt(const void *shmaddr);\fP
.PP
\f4int   xp_shmctl(int shmid, int cmd, .../*struct shmid_ds *buf*/);\fP

.in
.SH DESCRIPTION

\f4xp_func\fP calls are a user library interface for
CrayLink-shared-memory (clshm) -- a means of cache-coherent,
shared-memory communication between partitions on an Origin-2000.  The
functions try to be very much "system V-like" in their interface.

.PP

\f4xp_ftok\fP creates a \f2key\fP of type key_t given a \f2path\fP and
an \f2id\fP much like the \f4ftok\fP(3c) call.  The path should either
be \f3/hw/clshm/partition/<2 digit hex partition #>\fP or \f3NULL\fP.
The shared memory associated with this \f2key\fP will be placed on the
specified partition.  If no partition was specified it will simply be
placed on the partition that the process is running.  The \f2id\fP
should always be passed in a \f3"1"\fP.  Everytime this function is
called a different \f2key\fP will be returned.

.PP

\f4xp_shmget\fP must be passed a \f2key\fP that is created by
\f4xp_ftok\fP in order to create a shared memory segment and its
associated \f2shmid\fP.  The \f2size\fP that is passed in, must be the
same size as all other \f4xp_shmget\fP calls that have been called with
the same \f2key\fP.  The \f2shmflg\fP parameter is ignored.

.PP

\f4xp_shmat\fP must be called with a \f2shmid\fP that was returned from
a \f4xp_shmget\fP call in order to attach a shared memory segment.  The
\f2shmaddr\fP and \f2shmflg\fP parameters have the same semantics as the
\f4shmat\fP(2) function.

.PP

\f4xp_shmdt\fP detaches the given shared memory segment for the given
\f2shmaddr\fP.  The last detach does not automatically remove the shared
memory segment unless the \f3IPC_AUTORMID\fP command was sent to the
\f4xp_shmctl\fP function.

.PP 

\f4xp_shmctl\fP is much like the \f4shmctl\fP(2) call.  But it only
implements the \f3IPC_RMID\fP, command which removes a shared memory
segment associated with the \f2shmid\fP passed in.  It also implements
the \f3IPC_AUTORMID\fP, command which removes the shared memory segment
associated with \f2shmid\fP after the last \f4xp_shmdt\fP call.  If the
last \f4xp_shmdt\fP call has already been made, then the shared memory
segment is removed immediately.

.PP

All \f4xp_func\fP calls will fail and not perform any function if one
of the following are true:

.TP 14
\f3ENOMEM\fP
A \f4malloc\fP(3c) call failed.

.TP 14
\f3EPROTO\fP
This version of the library is not compatable with the local
\f4clshmd\fP(1m) daemon's version.

.TP 14
\f3EIO\fP
There has been a communication problem with the local \f4clshmd\fP(1m)
daemon.

.TP 14
\f3EINVAL\fP
The function was sent invalid arguments.

.TP 14
\f3ENOSYS\fP
The argument passed in is not supported at this time.

.TP 14
\f3EFAULT\fP
There has been an internal problem with the user library or
\f4clshmd\fP(1m) daemon.

.TP 14
\f3ENAMETOOLONG\fP
The path is too long to put into the specified buffer.

.PP
These functions can also fail with the \f3errno\fP returned from various
unix calls that the library makes.


.SH WARNINGS

If \f4xp_shmat\fP is called after the last \f4xp_shmdt\fP and the
\f3IPC_AUTORMID\fP command has been sent through \f4xp_shmctl\fP, then
the behavior is undefined.

.SH SEE ALSO
\f4part_func\fP(3p), \f4clshmctl\fP(1m), \f4clshmd\fP(1m),
\f4mkpart\fP(1m)

.SH DIAGNOSTICS
Upon successful completion, the return values are as follows:
.IP
\f4xp_ftok\fP returns a valid key_t type \f2key\fP.
.IP
\f4xp_shmget\fP returns a valid \f2shmid\fP.
.IP
\f4xp_shmat\fP returns the data segment start address of the attached
shared memory segment.
.IP
\f4xp_shmdt\fP returns 0.
.IP 
\f4xp_shmctl\fP returns 0.
.PP
Otherwise, a value of -1 is returned and \f3errno\fP is set to indicate
the error.

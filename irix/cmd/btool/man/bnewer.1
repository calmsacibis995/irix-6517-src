.\" @(#)bnewer.1 0.1 90/03/26 
.\"
.TH BNEWER 1 "26 March 1990"
.SH NAME
bnewer \- produce difference of two branch log files.
.SH SYNOPSIS
.B bnewer
.I old-log
.I new-log

.SH DESCRIPTION
.LP
.B bnewer
produces a log file containing those branches executed since the
\fIold-log\fR was created.  The \fInew-log\fR is a cumulative log,
containing all the branch information of \fIold-log\fR, plus
information from later test runs.
.sp
.B bnewer
is not needed when testing most application programs.  It is used when
testing programs that run cyclically.  For example, 
suppose you have a particular test for the
UNIX kernel, and you want to see which branches it forces.  The
process of booting the kernel may exercise some of those branches.
Your test session would look like this:
.sp
1. Boot the kernel and extract a snapshot, \fIold-log\fR, of the branches
that were executed.
.sp
2. Execute your test.
.sp
3. Extract another snapshot, \fInew-log\fR.
.sp
4. Run \fBbnewer\fR to see which branches were executed by the test
(plus whatever branches were executed during the extraction):
.nf

bnewer old-log new-log | breport

.fi
.SH "SEE ALSO"
.BR breport (1),
.BR bmerge (1),
.BR btool (1).
.SH DIAGNOSTICS
"Usage: bnewer old-log new-log"
.br
"bnewer:  New log contains fewer branches than old."
.br
.in +4
At least one branch in the new log has been executed fewer times than 
the corresponding branch in the old log.  Besides this error, bnewer does not
handle user errors very gracefully.  You may get one of these messages:
.in -4 
.sp
"bnewer:  Problem with \fIfile\fR"
.br
"bnewer:  Problem with join or awk"




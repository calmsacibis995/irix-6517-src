
//////////////////////////////////////////////////////////////
//
// Header file for CheckpointUI
//
//    This file is generated by RapidApp 1.2
//
//    This class implements the user interface portion of a class
//    Normally it is not used directly.
//    Instead the subclass, Checkpoint is instantiated
//
//    To extend or alter the behavior of this class, you should
//    modify the Checkpoint files
//
//    Restrict changes to those sections between
//    the "//--- Start/End editable code block" markers
//
//    This will allow RapidApp to integrate changes more easily
//
//    This class is a ViewKit user interface "component".
//    For more information on how components are used, see the
//    "ViewKit Programmers' Manual", and the RapidApp
//    User's Guide.
//
//////////////////////////////////////////////////////////////
#ifndef CHECKPOINTUI_H
#define CHECKPOINTUI_H
#include <Vk/VkComponent.h>


//---- Start editable code block: headers and declarations


//---- End editable code block: headers and declarations


class VkOptionMenu;
class VkMenuAction;
class VkMenuToggle;
class VkMenuItem;
class CheckpointUI : public VkComponent
{ 

  public:

    CheckpointUI ( const char *, Widget );
    CheckpointUI ( const char * );
    ~CheckpointUI();
    void create ( Widget );
    const char *  className();

    //---- Start editable code block: Checkpoint public


    //---- End editable code block: Checkpoint public


  protected:


    // Widgets created by this class

    Widget  _but_file;
    Widget  _but_ok;
    Widget  _but_ps;
    Widget  _but_abort;
    Widget  _checkpoint;
    Widget  _fileList;
    Widget  _finderStatef;
    Widget  _finderUid;
    Widget  _label1;
    Widget  _label2;
    Widget  _pstitle;
    Widget  _psList;
    Widget  _scrolledWindow;
    Widget  _scrolledWindow1;
    Widget  _separator1;
    Widget  _separator2;
    Widget  _separator3;
    Widget  _separator4;
    Widget  _tog_upgrade;

    VkOptionMenu  *_fileMenu;
    VkOptionMenu  *_idMenu;
    VkOptionMenu  *_willMenu;

    VkMenuItem *_cont;
    VkMenuItem *_exit;
    VkMenuItem *_opt_append;
    VkMenuItem *_opt_ash;
    VkMenuItem *_opt_gid;
    VkMenuItem *_opt_hid;
    VkMenuItem *_opt_ignore;
    VkMenuItem *_opt_merge;
    VkMenuItem *_opt_pid;
    VkMenuItem *_opt_replace;
    VkMenuItem *_opt_sgp;
    VkMenuItem *_opt_sid;
    VkMenuItem *_opt_substitute;


    // These virtual functions are called from the private callbacks (below)
    // Intended to be overriden in derived classes to define actions

    virtual void cv_abort ( Widget, XtPointer );
    virtual void cv_file ( Widget, XtPointer );
    virtual void cv_upgrade ( Widget, XtPointer );
    virtual void cv_ok ( Widget, XtPointer );
    virtual void cv_ps ( Widget, XtPointer );
    virtual void cv_select ( Widget, XtPointer );
    virtual void cv_select_one ( Widget, XtPointer );
    virtual void cv_statef ( Widget, XtPointer );
    virtual void cv_statef_change ( Widget, XtPointer );
    virtual void cv_uid ( Widget, XtPointer );
    virtual void cv_uid_change ( Widget, XtPointer );
    virtual void doCont ( Widget, XtPointer );
    virtual void doExit ( Widget, XtPointer );
    virtual void doOpt_append ( Widget, XtPointer );
    virtual void doOpt_ash ( Widget, XtPointer );
    virtual void doOpt_gid ( Widget, XtPointer );
    virtual void doOpt_hid ( Widget, XtPointer );
    virtual void doOpt_ignore ( Widget, XtPointer );
    virtual void doOpt_merge ( Widget, XtPointer );
    virtual void doOpt_pid ( Widget, XtPointer );
    virtual void doOpt_replace ( Widget, XtPointer );
    virtual void doOpt_sgp ( Widget, XtPointer );
    virtual void doOpt_sid ( Widget, XtPointer );
    virtual void doOpt_substitute ( Widget, XtPointer );


    //---- Start editable code block: Checkpoint protected


    //---- End editable code block: Checkpoint protected


  private: 

    // Array of default resources

    static String      _defaultCheckpointUIResources[];


    // Callbacks to interface with Motif

    static void cv_abortCallback ( Widget, XtPointer, XtPointer );
    static void cv_fileCallback ( Widget, XtPointer, XtPointer );
    static void cv_upgradeCallback ( Widget, XtPointer, XtPointer );
    static void cv_okCallback ( Widget, XtPointer, XtPointer );
    static void cv_psCallback ( Widget, XtPointer, XtPointer );
    static void cv_selectCallback ( Widget, XtPointer, XtPointer );
    static void cv_select_oneCallback ( Widget, XtPointer, XtPointer );
    static void cv_statefCallback ( Widget, XtPointer, XtPointer );
    static void cv_statef_changeCallback ( Widget, XtPointer, XtPointer );
    static void cv_uidCallback ( Widget, XtPointer, XtPointer );
    static void cv_uid_changeCallback ( Widget, XtPointer, XtPointer );
    static void doContCallback ( Widget, XtPointer, XtPointer );
    static void doExitCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_appendCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_ashCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_gidCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_hidCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_ignoreCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_mergeCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_pidCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_replaceCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_sgpCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_sidCallback ( Widget, XtPointer, XtPointer );
    static void doOpt_substituteCallback ( Widget, XtPointer, XtPointer );

    //---- Start editable code block: Checkpoint private


    //---- End editable code block: Checkpoint private
};
//---- Start editable code block: End of generated code


//---- End editable code block: End of generated code

#endif


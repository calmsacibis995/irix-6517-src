
//////////////////////////////////////////////////////////////
//
// Header file for Checkpoint
//
//    This file is generated by RapidApp 1.2
//
//    This class is derived from CheckpointUI which 
//    implements the user interface created in 
//    RapidApp. This class contains virtual
//    functions that are called from the user interface.
//
//    When you modify this header file, limit your changes to those
//    areas between the "//---- Start/End editable code block" markers
//
//    This will allow RapidApp to integrate changes more easily
//
//    This class is a ViewKit user interface "component".
//    For more information on how components are used, see the
//    "ViewKit Programmers' Manual", and the RapidApp
//    User's Guide.
//////////////////////////////////////////////////////////////
#ifndef CHECKPOINT_H
#define CHECKPOINT_H
#include "CheckpointUI.h"
#include <ckpt.h>
//---- Start editable code block: headers and declarations


//---- End editable code block: headers and declarations


//---- Checkpoint class declaration

class Checkpoint : public CheckpointUI
{

  public:

    Checkpoint ( const char *, Widget );
    Checkpoint ( const char * );
    ~Checkpoint();
    const char *  className();

    static VkComponent *CreateCheckpoint( const char *name, Widget parent ); 

    //---- Start editable code block: Checkpoint public

    //---- End editable code block: Checkpoint public

  protected:

    // These functions will be called as a result of callbacks
    // registered in CheckpointUI

    virtual void cv_abort ( Widget, XtPointer );
    virtual void cv_file ( Widget, XtPointer );
    virtual void cv_upgrade ( Widget, XtPointer );
    virtual void cv_ok ( Widget, XtPointer );
    virtual void cv_ps ( Widget, XtPointer );
    virtual void cv_select ( Widget, XtPointer );
    virtual void cv_select_one ( Widget, XtPointer );
    virtual void cv_statef ( Widget, XtPointer );
    virtual void cv_statef_change ( Widget, XtPointer );
    virtual void cv_uid ( Widget, XtPointer );
    virtual void cv_uid_change ( Widget, XtPointer );
    virtual void doCont ( Widget, XtPointer );
    virtual void doExit ( Widget, XtPointer );
    virtual void doOpt_append ( Widget, XtPointer );
    virtual void doOpt_ash ( Widget, XtPointer );
    virtual void doOpt_gid ( Widget, XtPointer );
    virtual void doOpt_hid ( Widget, XtPointer );
    virtual void doOpt_ignore ( Widget, XtPointer );
    virtual void doOpt_merge ( Widget, XtPointer );
    virtual void doOpt_pid ( Widget, XtPointer );
    virtual void doOpt_replace ( Widget, XtPointer );
    virtual void doOpt_sgp ( Widget, XtPointer );
    virtual void doOpt_sid ( Widget, XtPointer );
    virtual void doOpt_substitute ( Widget, XtPointer );

    //---- Start editable code block: Checkpoint protected

    virtual void ckpt_change_file_disposition ( Widget, char * );
    virtual int ckpt_prepare_checkpoint ( void );

    char 	CkptPsLine[128];
    char	CkptID[32];
    u_long	CkptType;
    char 	CkptPath[CPATHLEN];
    char 	CkptUser[12];
    pid_t	CkptWaiter;

    int		CkptNumOpenfiles;
    char *	CkptOpenfiles;
    int		CkptOpenfilesSelectBegin;
    int		CkptOpenfilesSelectEnd;
    char 	CkptWill[32];

    int		CkptFlags;

    //---- End editable code block: Checkpoint protected

  private:

    static void* RegisterCheckpointInterface();

    //---- Start editable code block: Checkpoint private

    //---- End editable code block: Checkpoint private
};
//---- Start editable code block: End of generated code

//---- End editable code block: End of generated code
#endif

/*
 * Copyright 1991, Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics, Inc.;
 * the contents of this file may not be disclosed to third parties, copied or
 * duplicated in any form, in whole or in part, without the prior written
 * permission of Silicon Graphics, Inc.
 *
 * RESTRICTED RIGHTS LEGEND:
 * Use, duplication or disclosure by the Government is subject to restrictions
 * as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
 * and Computer Software clause at DFARS 252.227-7013, and/or in similar or
 * successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
 * rights reserved under the Copyright Laws of the United States.
 *
 * $Revision: 1.3 $
 */


/*
 * Internet Datagram Protocol
 */

import ether;
import llc;
export ipx.type, ipx.len;

%pragma ipx.indexload=5

export
protocol ipx "Novell IPX" (type) : ether(0x8137), llc(0x8137)
{
    enum packetype {
	Regular = 0,
	RoutInfo = 1,
	Echo = 2,
	Error = 3,
	PktExchange = 4,
	Spx = 5,
	NovellNetware = 17,
	NetBios = 20
    };


    u_short	chksum  "Checksum";
    u_short	len     "Length of Header and Data" -v;
    u_char      pad     "Padding"     : 4 -vv,
                hopcnt  "Hop Count"   : 4 -v;
    packetype	type    "Packet Type" : 8;
    u_long	dstnet  "Destination Network";
    etheraddr	dsthost "Destination Host" ;
    u_short	dstsock "Destination Socket";
    u_long	srcnet  "Source Network" ;
    etheraddr	srchost "Source Host";
    u_short	srcsock "Source Socket";

// Define Nicknames for the higher level protocols

   define IPX    = "ipx"; 
   define novellerror  = "ipx.error";
   define NOVELLERROR  = "ipx.error";
   define novellecho   = "ipx.echo";
   define NOVELLECHO   = "ipx.echo";
   define SPX    = "ipx.spx";
   define novellrip = "ipx.novellrip";
   define NOVELLRIP = "ipx.novellrip";
}

/*
 * Copyright 1991, Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics, Inc.;
 * the contents of this file may not be disclosed to third parties, copied or
 * duplicated in any form, in whole or in part, without the prior written
 * permission of Silicon Graphics, Inc.
 *
 * RESTRICTED RIGHTS LEGEND:
 * Use, duplication or disclosure by the Government is subject to restrictions
 * as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
 * and Computer Software clause at DFARS 252.227-7013, and/or in similar or
 * successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
 * rights reserved under the Copyright Laws of the United States.
 *
 * $Revision: 1.6 $
 */

/*
 * AppleTalk Transaction Protocol
 */

import elap, ddp;

export atp.func;

%pragma atp.indexload=400
%pragma atp.freshtime=600

protocol atp "AppleTalk Transaction Protocol"
	     (ddp.type : (((elap.type == 1) ? elap.dstnodeid
			   : (ddp.dstnetnum<<8) | ddp.dstnodeid)<<8)
			  | ddp.dstsocknum,
	      ddp.type : (((elap.type == 1) ? elap.srcnodeid
			   : (ddp.srcnetnum<<8) | ddp.srcnodeid)<<8)
			  | ddp.srcsocknum,
	      ddp.type : (elap.dstnodeid<<8)|ddp.dstsocknum,
	      ddp.type : (elap.srcnodeid<<8)|ddp.srcsocknum,
	      ddp.type)
	     : ddp(3)
{
    enum bitval {
	False, True
    };

    enum timerval {
	Timer30sec, Timer1min, Timer2min, Timer4min, Timer8min
    };

    export
    enum function {
	TReq=1, TResp=2, TRel=3
    };

    function	func "Function Code" : 2;
/*
    bool	xobit "Exactly-once Transaction Bit" : 1;
    bool        eombit "End of Message Bit" : 1;
    bool        stsbit "Send Transaction Status Req Bit": 1;
*/
    bitval	xobit "Exactly-once Transaction Bit" : 1;
    bitval	eombit "End of Message Bit" : 1;
    bitval	stsbit "Send Transaction Status Req Bit": 1;
    timerval	treltimer "TRel Timer for Exactly-Once" : 3;
    if (ddp.dstsocknum == 6)
        // zip
        u_char      bitmap "Bitmap";
    else
        u_char      seq "Sequence Number";
    u_short	tid "Transaction ID";
    switch (func)
    {
      case TReq:
	void;
      case TResp:
	void;
      case TRel:
//	opaque	ubytes "User Bytes" [4] -vv;
	u_char	ubytes "User Bytes" [4] -vv;
    }
}

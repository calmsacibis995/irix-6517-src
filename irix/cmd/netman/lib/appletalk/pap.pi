/*
 * Copyright 1991, Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics, Inc.;
 * the contents of this file may not be disclosed to third parties, copied or
 * duplicated in any form, in whole or in part, without the prior written
 * permission of Silicon Graphics, Inc.
 *
 * RESTRICTED RIGHTS LEGEND:
 * Use, duplication or disclosure by the Government is subject to restrictions
 * as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
 * and Computer Software clause at DFARS 252.227-7013, and/or in similar or
 * successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
 * rights reserved under the Copyright Laws of the United States.
 *
 * $Revision: 1.4 $
 */

/*
 * AppleTalk Printer Access Protocol
 */

import elap, ddp, atp;

protocol pap "AppleTalk Printer Access Protocol" : atp
{
    enum papfunction {
	OpenConn=1, OpenConnReply=2, SendData=3, Data=4,
	Tickle=5, CloseConn=6, CloseConnReply=7, SendStatus=8,
	Status=9
    };

    enum presult {
	NoError, PrinterBusy=0xffff
    };

    switch (atp.func) {
      case atp.TReq:
      case atp.TResp:
        switch (func) {
	  case SendStatus:
	  case Status:
	    u_char	spad "Padding" -vv;

	  default:
	    u_char	connid "Connection ID";
	}
        papfunction	func "PAP Function Code" : 8;
        switch (func) {
	  case OpenConn:
	    u_short	pad -vv;
	    u_char	socknum "ATP Responding Socket Number";
	    u_char	flowquan "Flow Quantum";
	    u_short	waittime "Wait Time";

	    nest pap : atp(ddp.type:(((ddp.srcnetnum<<8)|ddp.srcnodeid)<<8)
				| socknum);
	    nest pap : atp(ddp.type:((elap.srcnodeid<<8) | socknum));

	  case OpenConnReply:
	    u_short	pad -vv;
	    u_char	socknum;
	    u_char	flowquan;
	    presult	pstatus "Printer Status" : 16;
	    u_char	len "Status String Length" -v;
	    char	status "Status String" [len];

	    nest pap : atp(ddp.type:(((ddp.srcnetnum<<8)|ddp.srcnodeid)<<8)
				| socknum);
	    nest pap : atp(ddp.type:((elap.srcnodeid<<8) | socknum));

	  case SendData:
	    u_short	seqnum "PAP Sequence Number";

	  case Data:
	    if (eof)
	        u_char	eof "End of File";
	    else
		u_char	noteof "Not End of File";
	    u_char	epad "Padding" -vv;
//	    opaque	data "Data" [] -vv;
	    u_char	data "Data" [] -vv;

	  case Tickle:
	  case CloseConn:
	  case CloseConnReply:
	  case SendStatus:
	    u_short	pad -vv;

	  case Status:
	    u_short	pad -vv;
	    u_char	unused "Unused" [4] -vv;
	    u_char	len -v;
	    char	status [len];
	}
    }
}

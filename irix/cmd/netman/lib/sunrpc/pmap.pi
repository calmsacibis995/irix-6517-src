/*
 * Copyright 1992, Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics, Inc.;
 * the contents of this file may not be disclosed to third parties, copied or
 * duplicated in any form, in whole or in part, without the prior written
 * permission of Silicon Graphics, Inc.
 *
 * RESTRICTED RIGHTS LEGEND:
 * Use, duplication or disclosure by the Government is subject to restrictions
 * as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
 * and Computer Software clause at DFARS 252.227-7013, and/or in similar or
 * successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
 * rights reserved under the Copyright Laws of the United States.
 *
 * $Revision: 1.1 $
 */

/*
 * Sun RPC Portmap protocol
 */
import sunrpc;

protocol pmap "Sun RPC Portmap" :  sunrpc (100000)
{
	enum pmapproc { 
		PMAPPROC_NULL=0,
		PMAPPROC_SET=1,
		PMAPPROC_UNSET=2,
		PMAPPROC_GETPORT=3,
		PMAPPROC_DUMP=4,
		PMAPPROC_CALLIT=5
	};

	struct mapping {
		u_long prog;
		u_long vers;
		u_long prot;
		u_long port;
	};

	struct pmaplist {
		mapping map;
		pmaplist next;
	};


	pmapproc procedure = sunrpc.proc;

	switch (procedure) {
		case PMAPPROC_SET:
		case PMAPPROC_UNSET:
			if (sunrpc.direction == sunrpc.CALL) {
				u_long prog;
				u_long vers;
				u_long prot;
				u_long port;
			} else
				u_long status;
			
		case PMAPPROC_GETPORT:
			if (sunrpc.direction == sunrpc.CALL)  {
				u_long prog;
				u_long vers;
				u_long prot;
				u_long port "Port" -vv;
			} else
				u_long port;

		case PMAPPROC_DUMP:
			if (sunrpc.direction != sunrpc.CALL) 
				pmaplist dumpresult;

		case PMAPPROC_CALLIT: 
			if (sunrpc.direction == sunrpc.CALL)  {
				u_long prog;
				u_long vers;
				u_long proc;
				u_long argslen;
				u_char argsdata [argslen];
			} else {
				u_long port;
				u_long reslen;
				u_char resdata [reslen];
			}
	}
}

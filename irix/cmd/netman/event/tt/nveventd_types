/* File:  nveventd_types
 * Description:
 *    ptype definitions used by NetVisulayzer event daemon nveventd;
 *   
 * $Revision: 1.4 $
 *
 * Note, this file must be kept in sync with the following files:
 *	ttEventdOps.h ttEventdOpStrs.h
 *	msg.c++
 *	event.h for eventID defintions
 *  The order,type, and number of the arguments for each message must match
 *  successfully by ttsession or it will not forward messages to the 
 *  event daemon. 
 */
 
/*
 * Copyright 1992 Silicon Graphics, Inc.  All rights reserved.
 *
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics, Inc.;
 * the contents of this file may not be disclosed to third parties, copied or
 * duplicated in any form, in whole or in part, without the prior written
 * permission of Silicon Graphics, Inc.
 *
 * RESTRICTED RIGHTS LEGEND:
 * Use, duplication or disclosure by the Government is subject to restrictions
 * as set forth in subdivision (c)(1)(ii) of the Rights in Technical Data
 * and Computer Software clause at DFARS 252.227-7013, and/or in similar or
 * successor clauses in the FAR, DOD or NASA FAR Supplement. Unpublished -
 * rights reserved under the Copyright Laws of the United States.
 */

 
					
	
#include "ttEventdOps.h"  

ptype SGI_NV_event
{
 start "/usr/etc/nveventd";
 handle:
    session NV_EV_Start_Stop_Snoop (in int evType, in int timeStamp,
				in int alarmLevel,in string srcApp,in int pid,
				in string userName, in int uid, 
				in string srcHostName, in string srcHostAddr,
				in string ifaceName, in string ifaceAddr, 
				in string filter, in string other)
				=> opnum = NV_EV_START_STOP_SNOOP;
								
    session NV_EV_detect_node ( in int evType, in int timeStamp,
				in int alarmLevel, in string srcApp,in int pid,
				in string userName, in int uid, 
				in string srcHostName, in string srcHostAddr,
				in string ifaceName, in string ifaceAddr, 
				in string filter, in string other, in string nodeName, 
				in string nodeAddr, in string nodeMACAddr
				)
				=> opnum = NV_EV_DETECT_NODE;
				
    session NV_EV_detect_net (  in int evType, in int timeStamp,
				in int alarmLevel, in string srcApp,in int pid,
				in string userName, in int uid, 
				in string srcHostName, in string srcHostAddr,
				in string ifaceName, in string ifaceAddr, 
				in string filter, in string other, in string netName, 
				in string netAddr 
				)
				=> opnum =NV_EV_DETECT_NET;
				
    session NV_EV_detect_proto (in int evType, in int timeStamp,
				in int alarmLevel, in string srcApp,in int pid,
				in string userName, in int uid,
				in string srcHostName, in string srcHostAddr,
				in string ifaceName, in string ifaceAddr, 
				in string filter, in string other, in string protocol 
				)
				=> opnum= NV_EV_DETECT_PROTO;
				
    session NV_EV_detect_conv (in int evType, in int timeStamp,
			  in int alarmLevel, in string srcApp, in int pid,
			  in string userName, in int uid,
			  in string srcHostName, in string srcHostAddr,
			  in string ifaceName, in string ifaceAddr, 
			  in string filter,  in string other,
			  in string node1Name, in string node1Addr, 
			  in string node1MACAddr, in string node2Name, 
			  in string node2Addr, in string node2MACAddr, 
			  in int bytes, in int packets
			  )
				=> opnum = NV_EV_DETECT_CONV;
			  
    session NV_EV_rate_rpt (in int evType, in int timeStamp,
			 in int alarmLevel,  in string srcApp,in int pid,
			 in string userName, in int uid, 
			 in string srcHostName, in string srcHostAddr,
			 in string ifaceName, in string ifaceAddr, 
			 in string filter, in string other, in int ratebase, 
			 in int rate, in int baserate, in int threshold 
			  )
				=> opnum = NV_EV_RATE_RPT;
			  
    session NV_EV_topN_rpt  (in int evType, in int timeStamp,
			  in int alarmLevel, in string srcApp,in int pid,
			  in string userName, in int uid, 
			  in string srcHostName, in string srcHostAddr,
			  in string ifaceName, in string ifaceAddr, 
			  in string filter, in string other, 
			  in int count, in string list)
				=> opnum = NV_EV_TOPN_RPT;
			  

    session NV_EV_hilite_node ( in int evType, in int timeStamp,
				in int alarmLevel, in string srcApp,in int pid,
				in string userName, in int uid, 
				in string srcHostName, in string srcHostAddr,
				in string ifaceName, in string ifaceAddr, 
				in string filter, in string other, in string nodeName, 
				in string nodeAddr, in string nodeMACAddr 
				)
				=> opnum = NV_EV_HILITE_NODE;
				
    session NV_EV_hilite_net (  in int evType, in int timeStamp,
				in int alarmLevel, in string srcApp,in int pid,
				in string userName, in int uid, 
				in string srcHostName, in string srcHostAddr,
				in string ifaceName, in string ifaceAddr, 
				in string filter, in string other, in string netName, 
				in string netAddr 
				)
				=> opnum = NV_EV_HILITE_NET;

    session NV_EV_hilite_conv  (in int evType, in int timeStamp,
			  in int alarmLevel, in string srcApp,in int pid, 
			  in string userName, in int uid,
			  in string srcHostName, in string srcHostAddr,
			  in string ifaceName, in string ifaceAddr, 
			  in string filter, in string other, 
			  in string node1Name, in string node1Addr, 
			  in string node1MACAddr, in string node2Name, 
			  in string node2Addr, in string node2MACAddr)
				=> opnum = NV_EV_HILITE_CONV;
				
    session NV_EV_register     (in int evType, in int timeStamp,
				in int alarmLevel, in string srcApp,in int pid,
				in string userName, in int uid, 
				in string srcHostName, in string srcHostAddr,
				in string ifaceName, in string ifaceAddr, 
				in string filter, in string other, inout string noSends)
				=> start  opnum = NV_EV_REGISTER;
	  
		      
 
 };


#
# These are icon types used by the XFS products.
# original file by Rebecca Underwood, 30 December 1994
#
# This file assumes four things:
# (A) it will be installed in /usr/lib/filetype/install or
#     /usr/lib/filetype/local
# (B) the unique icons it needs will be installed in 
#     /usr/lib/filetype/install/iconlib or
#     /usr/lib/filetype/local/iconlib (matching with A)
# (C) the names of the programs and icons are as shown in 
#     the MATCH rules' globs and ICON rules' includes,
#     respectively (be consistent if you change them)
# (D) the non-application icons will be used by applications 
#     that know their TYPE and can specify which icons to
#     show in the apps' iconpanels by those types, hence the
#     entity icons have no MATCH rules
#

#
# This is the toplevel XFS application icon, followed by
# the three applications for disk, volume, and filesystem.
#
TYPE XFSprogram
    LEGEND 	XFS program
    MATCH	glob("xfs");
    ICON	{
	if (opened) {
	  include("../iconlib/generic.exec.open.fti");
	} else {
	  include("../iconlib/generic.exec.closed.fti");
	}
	include("iconlib/toplevel.app.fti");
    }

TYPE XFSdiskProgram
    LEGEND 	XFS disk program
    MATCH	tag == 0x00FFD000;
    CMD OPEN	$LEADER
    CMD ALTOPEN	launch -c $LEADER
    ICON	{
	if (opened) {
	  include("../iconlib/generic.exec.open.fti");
	} else {
	  include("../iconlib/generic.exec.closed.fti");
	}
	include("iconlib/disk.app.fti");
    }

TYPE XFSvolumeProgram
    LEGEND 	XFS volume program
    MATCH	tag == 0x00FFD001;
    CMD OPEN	$LEADER
    CMD ALTOPEN	launch -c $LEADER
    ICON	{
	if (opened) {
	  include("../iconlib/generic.exec.open.fti");
	} else {
	  include("../iconlib/generic.exec.closed.fti");
	}
	include("iconlib/volume.app.fti");
    }

TYPE XFSfsProgram
    LEGEND 	XFS filesystem program
    MATCH	tag == 0x00FFD002;
    CMD OPEN	$LEADER
    CMD ALTOPEN	launch -c $LEADER
    ICON	{
	if (opened) {
	  include("../iconlib/generic.exec.open.fti");
	} else {
	  include("../iconlib/generic.exec.closed.fti");
	}
	include("iconlib/filesystem.app.fti");
    }

#
# These are the three partitioning templates for disk, 
# filesystem, and volume.
#
TYPE XFSdiskTemplate
    LEGEND	XFS disk configuration template
    ICON	{
	include("iconlib/disk.templ.fti");
    }

TYPE XFSfilesysTemplate
    LEGEND	XFS filesystem configuration template
    ICON	{
	include("iconlib/filesystem.templ.fti");
    }

TYPE XFSfilesysRemoveTemplate
    LEGEND	XFS filesystem configuration template
    ICON	{
	include("iconlib/filesystem.remote.templ.fti");
    }

TYPE XFSvolumeTemplate
    LEGEND	XFS volume configuration template
    ICON	{
	include("iconlib/volume.templ.fti");
    }

TYPE XFSplexTemplate
    LEGEND	XFS plex configuration template
    ICON	{
	include("iconlib/plex.templ.fti");
    }

TYPE XFSveTemplate
    LEGEND	XFS ve configuration template
    ICON	{
	include("iconlib/ve.templ.fti");
    }


#
# These are the six entities disk, filesystem, remove filesystem,
# ve, plex, and volume.
#
TYPE XFSdisk
    LEGEND	XFS disk
    ICON	{
	include("iconlib/disk.fti");
    }

TYPE XFSfilesystem
    LEGEND	XFS filesystem
    ICON	{
	include("iconlib/filesystem.fti");
    }

TYPE XFSfilesystemRemote
    LEGEND	XFS filesystem
    ICON	{
	include("iconlib/filesystem.remote.fti");
    }

TYPE XFSve
    LEGEND	XFS volume element
    ICON	{
	include("iconlib/ve.fti");
    }

TYPE XFSplex
    LEGEND	XFS plex
    ICON	{
	include("iconlib/plex.fti");
    }

TYPE XFSvolume 
    LEGEND	XFS volume
    ICON	{
	include("iconlib/volume.fti");
    }


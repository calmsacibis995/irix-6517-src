/**************************************************************************
 *                                                                        *
 *               Copyright (C) 1995-1996 Silicon Graphics, Inc.           *
 *                                                                        *
 *  These coded instructions, statements, and computer programs  contain  *
 *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
 *  are protected by Federal copyright law.  They  may  not be disclosed  *
 *  to  third  parties  or copied or duplicated in any form, in whole or  *
 *  in part, without the prior written consent of Silicon Graphics, Inc.  *
 *                                                                        *
 * $Revision: 1.17 $								  *
 *									  *
 **************************************************************************/

#include "ksys/cell/subsysid.h"

subsystem	"dsvsock"	DSVS_SUBSYSID

import <ksys/cell/tkm.h>
import <ksys/cell/service.h>
import <ksys/cell.h>
import <sys/vsocket.h>
import <bsd/vsock/cell/dsvsock.h>
import <sys/vnode.h>

import <sys/cred.h>

synchronous void
so_create(
	out	pointerto	int		error,
	in	valueof		cell_t		sender,
	in	valueof		int		domain,
	in	valueof		int		type,
	in	valueof		int		proto,
	in      valueof         tk_set_t        to_be_obtained,
	in      valueof         tk_set_t        to_be_returned,
	in      valueof         tk_disp_t       dofret,
	out     pointerto       tk_set_t        already_obtained,
	out     pointerto       tk_set_t        granted,
	out     pointerto       tk_set_t        refused,
	out	pointerto	vsock_handle_t	handle)

synchronous void
so_close(
	in	valueof		objid_t		vsockid,
	in	valueof		int		lastclose,
	in	valueof		int		fflag)

synchronous void
so_send(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	pointerto	<struct uio>	uio,
	in	bufferof	<struct iovec>	iovp,
	in	valueof		int		flags,
	out	pointerto	ssize_t		resid,
	out	pointerto	short		sigpipe)

synchronous void
so_sendit(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	pointerto	<struct msghdr>	mp,
	in	bufferof	<struct iovec>	iovi,
	in	valueof		int		flags,
	inout	pointerto	<rval_t>	rvp)

synchronous void
so_receive(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	pointerto	<struct uio>	uio,
	in	bufferof	<struct iovec>	iovp,
	in	pointerto	int		flags,
	out	pointerto	ssize_t		resid)
    
synchronous void
so_recvit(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	pointerto	<struct msghdr>	mp,
	in	bufferof	<struct iovec>	iovi,
	inout	pointerto	int		flags,
	in	valueof		<void *>	namelenp,
	in	valueof		<void *>	rightslenp,
	inout	pointerto	<rval_t>	rvp,
	in	valueof		int		vers)
    
synchronous void
so_accept(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		caddr_t		name,
	in	valueof		<sysarg_t *>	anamelen,
	in	valueof		sysarg_t	namelen,
	inout	pointerto	rval_t		rvp,
	out	pointerto	vsock_handle_t	handle)

synchronous void
so_listen(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		int		backlog)

synchronous void
so_connect(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		caddr_t		nam,
	in	valueof		sysarg_t	namlen)

synchronous void
so_connect2(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid1,
	in	valueof		objid_t		vsockid2)

synchronous void
so_shutdown(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		int		how)

synchronous void
so_bind(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	bufferof	char		m)

synchronous void
so_getattr(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		int		level,
	in	valueof		int		name,
	out	bufferof	char		m)

synchronous void
so_setattr(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		int		level,
	in	valueof		int		name,
	in	bufferof	char		m)

synchronous void
so_ioctl(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		int		cmd,
	in	valueof		<void *>	arg,
	in	valueof		int		flag,
	in	valueof		credid_t	credid,
	inout	pointerto	rval_t		rvalp)

synchronous void
so_select(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		short		events,
	in	valueof		int		anyyet,
	out	pointerto	short		reventsp,
	out	pointerto	<struct pollhead *>	phpp,
	out	pointerto	<unsigned int>	genp)

synchronous void
so_getpeername(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		caddr_t		asa,
	in	valueof		<sysarg_t *>	alen,
	inout	pointerto	rval_t		rvp)

synchronous void
so_getsockname(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		caddr_t		asa,
	in	valueof		<sysarg_t *>	alen,
	in	valueof		sysarg_t	len,
	inout	pointerto	rval_t		rvp)

synchronous void
so_setfl(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		int		oflags,
	in	valueof		int		nflags,
	in	valueof		credid_t	credid)

synchronous void
so_fcntl(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	in	valueof		int		cmd,
	in	valueof		<void *>	arg,
	inout	pointerto	rval_t		rvp)

synchronous void
so_fstat(
	out	pointerto	int		error,
	in	valueof		objid_t		vsockid,
	inout	pointerto	<struct vattr>	vap,
	in	valueof		int		flags,
	in	valueof		credid_t	credid)

synchronous void
so_return(
	in	valueof		cell_t		sender,
	in	valueof		objid_t		objid,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_set_t	unknown,
	in	valueof		tk_disp_t	why)

synchronous void
obtain_exist(
	in	valueof		cell_t		sender,
	in	pointerto	<vsock_handle_t>	handlep,
	out	pointerto	int		domp,
	out	pointerto	int		typep,
	out	pointerto	int		protop,
	out	pointerto	int		granted)

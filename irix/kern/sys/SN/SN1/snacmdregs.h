/**************************************************************************
 *                                                                        *
 *            Copyright (C) 1996-1998, Silicon Graphics, Inc.             *
 *                                                                        *
 *  These coded instructions, statements, and computer programs  contain  *
 *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
 *  are protected by Federal copyright law.  They  may  not be disclosed  *
 *  to  third  parties  or copied or duplicated in any form, in whole or  *
 *  in part, without the prior written consent of Silicon Graphics, Inc.  *
 *                                                                        *
 **************************************************************************/



/**************************************************************************
 *                                                                        *
 * WARNING!!!  WARNING!!!  WARNING!!!  WARNING!!!  WARNING!!!  WARNING!!! *
 *                                                                        *
 * This file is created by an automated script. Any changes made          *
 * manually to this  file will be lost.					  *
 *                                                                        *
 *               DO NOT EDIT THIS FILE MANUALLY			          *
 *                                                                        *
 **************************************************************************/



#ifndef __SYS_SN_SN1_SNACMDREGS_H__
#define __SYS_SN_SN1_SNACMDREGS_H__



#define    MD_IO_PROTECT             0x200000    /*
                                                  * MD and core register
                                                  * protec-tion
                                                  */
#define    MD_IO_PROT_OVRRD          0x200008    /*
                                                  * Clears processor/IO's
                                                  * protec-tion bit in
                                                  * MD_IO_PROTECTION
                                                  */
#define    MD_HSPEC_PROTECT          0x200010    /*
                                                  * BDDIR, LBOOT, RBOOT
                                                  * protection
                                                  */
#define    MD_MEMORY_CONFIG          0x200018    /*
                                                  * Memory/Directory DIMM
                                                  * control
                                                  */
#define    MD_REFRESH_CONTROL        0x200020    /*
                                                  * Memory/Directory
                                                  * refresh control
                                                  */
#define    MD_FANDOP_CAC_STAT        0x200028    /*
                                                  * Fetch-and-op cache
                                                  * status
                                                  */
#define    MD_MIG_MASK_COUNT         0x2000B0    /*
                                                  * Page migration node
                                                  * mask and interval
                                                  * counter
                                                  */
#define    MD_MIG_DIFF_THRESH        0x200030    /*
                                                  * Page migration count
                                                  * differ-ence threshold
                                                  */
#define    MD_MIG_VALUE_THRESH       0x200038    /*
                                                  * Page migration count
                                                  * abso-lute threshold
                                                  */
#define    MD_MIG_CANDIDATE          0x200040    /*
                                                  * Page migration
                                                  * candidate
                                                  */
#define    MD_MIG_CANDIDATE_CLR      0x200048    /*
                                                  * Page migration
                                                  * candidate clear
                                                  */
#define    MD_DIR_ERROR              0x200050    /* Directory DIMM error    */
#define    MD_DIR_ERROR_CLR          0x200058    /*
                                                  * Directory DIMM error
                                                  * clear
                                                  */
#define    MD_PROTOCOL_ERROR         0x200060    /*
                                                  * Directory protocol
                                                  * error
                                                  */
#define    MD_PROTOCOL_ERR_CLR       0x200068    /*
                                                  * Directory protocol
                                                  * error clear
                                                  */
#define    MD_MEM_ERROR              0x200070    /* Memory DIMM error       */
#define    MD_MEM_ERROR_CLR          0x200078    /* Memory DIMM error clear */
#define    MD_MISC_ERROR             0x200080    /* Miscellaneous MD error  */
#define    MD_MISC_ERROR_CLR         0x200088    /*
                                                  * Miscellaneous MD error
                                                  * clear
                                                  */
#define    MD_MEM_DIMM_INIT          0x200090    /*
                                                  * Memory DIMM mode
                                                  * initial-ization
                                                  */
#define    MD_DIR_DIMM_INIT          0x200098    /*
                                                  * Directory DIMM mode
                                                  * initial-ization
                                                  */
#define    MD_OUTGOING_QUEUE_SIZE    0x2000A0    /*
                                                  * MD outgoing queue
                                                  * sizing
                                                  */
#define    MD_MLAN_CTL               0x2000A8    /* NIC (microlan) control  */
#define    MD_PERF_SEL               0x210000    /*
                                                  * Selects MD performance
                                                  * events monitored
                                                  */
#define    MD_PERF_CNT0              0x210010    /* Performance counter 0   */
#define    MD_PERF_CNT1              0x210018    /* Performance counter 1   */
#define    MD_PERF_CNT2              0x210020    /* Performance counter 2   */
#define    MD_PERF_CNT3              0x210028    /* Performance counter 3   */
#define    MD_PERF_CNT4              0x210030    /* Performance counter 4   */
#define    MD_PERF_CNT5              0x210038    /* Performance counter 5   */
#define    MD_UREG0_0                0x220000    /* UART/Uctrlr0 registers  */
#define    MD_UREG0_1                0x220008    
#define    MD_UREG0_2                0x220010    
#define    MD_UREG0_3                0x220018    
#define    MD_UREG0_4                0x220020    
#define    MD_UREG0_5                0x220028    
#define    MD_UREG0_6                0x220030    
#define    MD_UREG0_7                0x220038    
#define    MD_SLOT_ID                0x220048    /*
                                                  * Hub board slot ID,
                                                  * UART/Uctrlr status
                                                  */
#define    MD_LED0                   0x220050    /* Eight-bit LED           */
#define    MD_LED1                   0x220058    /* Eight-bit LED           */
#define    MD_UREG1_0                0x220080    /* UART/Uctrlr1 registers  */
#define    MD_UREG1_1                0x220088    
#define    MD_UREG1_2                0x220090    
#define    MD_UREG1_3                0x220098    
#define    MD_UREG1_4                0x2200A0    
#define    MD_UREG1_5                0x2200A8    
#define    MD_UREG1_6                0x2200B0    
#define    MD_UREG1_7                0x2200B8    
#define    MD_UREG1_8                0x2200C0    
#define    MD_UREG1_9                0x2200C8    
#define    MD_UREG1_10               0x2200D0    
#define    MD_UREG1_11               0x2200D8    
#define    MD_UREG1_12               0x2200E0    
#define    MD_UREG1_13               0x2200E8    
#define    MD_UREG1_14               0x2200F0    
#define    MD_UREG1_15               0x2200F8    


#ifdef _LANGUAGE_C

typedef union md_io_protect_u {
	__uint64_t	md_io_protect_regval;
	struct  {
		__uint64_t	mip_io_protect            :	64;
	} md_io_protect_fld_s;
} md_io_protect_u_t;


typedef union md_io_prot_ovrrd_u {
	__uint64_t	md_io_prot_ovrrd_regval;
	struct  {
		__uint64_t	mipo_io_prot_ovr          :	64;
	} md_io_prot_ovrrd_fld_s;
} md_io_prot_ovrrd_u_t;


typedef union md_hspec_protect_u {
	__uint64_t	hspec_protect_regval;
	struct  {
		__uint64_t	hp_hspec_prot             :	64;
	} hspec_protect_fld_s;
} md_hspec_protect_u_t;


typedef union md_memory_config_u {
	__uint64_t	memory_config_regval;
	struct  {
		__uint64_t	mc_reserved               :	14;
		__uint64_t	mc_fprom_cyc              :	 5;
		__uint64_t	mc_fprom_wr               :	 5;
		__uint64_t	mc_uctrlr_cyc             :	 5;
		__uint64_t	mc_uctrlr_wr              :	 5;
		__uint64_t	mc_dimm0_sel              :	 2;
		__uint64_t	mc_io_prot_en             :	 1;
		__uint64_t	mc_io_prot_ignore         :	 1;
		__uint64_t	mc_cpu_prot_ignore        :	 1;
		__uint64_t	mc_arb_mlss               :	 1;
		__uint64_t	mc_ignore_ecc             :	 1;
		__uint64_t	mc_dir_flavor             :	 1;
		__uint64_t	mc_reply_guar             :	 4;
		__uint64_t	mc_write_guar             :	 4;
		__uint64_t	mc_interleave             :	 2;
		__uint64_t	mc_bank3_desc             :	 3;
		__uint64_t	mc_bank2_desc             :	 3;
		__uint64_t	mc_bank1_desc             :	 3;
		__uint64_t	mc_bank0_desc             :	 3;
	} memory_config_fld_s;
} md_memory_config_u_t;


typedef union md_refresh_control_u {
	__uint64_t	refresh_control_regval;
	struct  {
		__uint64_t	rc_enable                 :	 1;
		__uint64_t	rc_reserved               :	39;
		__uint64_t	rc_counter                :	12;
		__uint64_t	rc_cnt_thresh             :	12;
	} refresh_control_fld_s;
} md_refresh_control_u_t;


typedef union md_mem_dimm_init_u {
	__uint64_t	mem_dimm_init_regval;
	struct  {
		__uint64_t	mdi_reserved              :	29;
		__uint64_t	mdi_dimm_select           :	 3;
		__uint64_t	mdi_reserved_1            :	20;
		__uint64_t	mdi_dimm_mode             :	12;
	} mem_dimm_init_fld_s;
} md_mem_dimm_init_u_t;


typedef union md_dir_dimm_init_u {
	__uint64_t	dir_dimm_init_regval;
	struct  {
		__uint64_t	ddi_reserved              :	29;
		__uint64_t	ddi_dimm_select           :	 3;
		__uint64_t	ddi_reserved_1            :	20;
		__uint64_t	ddi_dimm_mode             :	12;
	} dir_dimm_init_fld_s;
} md_dir_dimm_init_u_t;


typedef union md_outgoing_queue_size_u {
	__uint64_t	outgoing_queue_size_regval;
	struct  {
		__uint64_t	oqs_reserved              :	37;
		__uint64_t	oqs_mlrd_rp_size          :	 3;
		__uint64_t	oqs_reserved_1            :	 5;
		__uint64_t	oqs_rsvd_0                :	 1;
		__uint64_t	oqs_moqd_rp_size          :	 2;
		__uint64_t	oqs_reserved_4            :	 4;
		__uint64_t	oqs_moqh_rp_size          :	 4;
		__uint64_t	oqs_reserved_6            :	 2;
		__uint64_t	oqs_rsvd_1                :	 1;
		__uint64_t	oqs_moqh_rq_size          :	 5;
	} outgoing_queue_size_fld_s;
} md_outgoing_queue_size_u_t;


typedef union md_fandop_cac_stat_u {
	__uint64_t	fandop_cac_stat_regval;
	struct  {
		__uint64_t	fcs_valid                 :	 1;
		__uint64_t	fcs_reserved              :	30;
		__uint64_t	fcs_addr                  :	27;
		__uint64_t	fcs_reserved_2            :	 6;
	} fandop_cac_stat_fld_s;
} md_fandop_cac_stat_u_t;


typedef union md_mlan_ctl_u {
	__uint64_t	mlan_ctl_regval;
	struct  {
		__uint64_t	mc_reserved               :	30;
		__uint64_t	mc_clkdiv_phi1            :	 7;
		__uint64_t	mc_clkdiv_phi0            :	 7;
		__uint64_t	mc_pulse                  :	10;
		__uint64_t	mc_sample                 :	 8;
		__uint64_t	mc_done                   :	 1;
		__uint64_t	mc_rd_data                :	 1;
	} mlan_ctl_fld_s;
} md_mlan_ctl_u_t;


typedef union md_led0_u {
	__uint64_t	led0_regval;
	struct  {
		__uint64_t	l_reserved                :	55;
		__uint64_t	l_rsvd_0                  :	 1;
		__uint64_t	l_data                    :	 8;
	} led0_fld_s;
} md_led0_u_t;


typedef union md_led1_u {
	__uint64_t	led1_regval;
	struct  {
		__uint64_t	l_reserved                :	55;
		__uint64_t	l_rsvd_0                  :	 1;
		__uint64_t	l_data                    :	 8;
	} led1_fld_s;
} md_led1_u_t;


typedef union md_mig_mask_count_u {
	__uint64_t	mig_mask_count_regval;
	struct  {
		__uint64_t	mmc_reserved              :	38;
		__uint64_t	mmc_mig_interval          :	10;
		__uint64_t	mmc_reserved_1            :	 5;
		__uint64_t	mmc_mig_mask              :	11;
	} mig_mask_count_fld_s;
} md_mig_mask_count_u_t;


typedef union md_mig_diff_thresh_u {
	__uint64_t	mig_diff_thresh_regval;
	struct  {
		__uint64_t	mdt_valid                 :	 1;
		__uint64_t	mdt_reserved              :	48;
		__uint64_t	mdt_threshold             :	15;
	} mig_diff_thresh_fld_s;
} md_mig_diff_thresh_u_t;


typedef union md_mig_value_thresh_u {
	__uint64_t	mig_value_thresh_regval;
	struct  {
		__uint64_t	mvt_valid                 :	 1;
		__uint64_t	mvt_reserved              :	48;
		__uint64_t	mvt_threshold             :	15;
	} mig_value_thresh_fld_s;
} md_mig_value_thresh_u_t;


typedef union md_mig_candidate_u {
	__uint64_t	mig_candidate_regval;
	struct  {
		__uint64_t	mc_valid                  :	 1;
		__uint64_t	mc_reserved               :	28;
		__uint64_t	mc_type                   :	 1;
		__uint64_t	mc_overrun                :	 1;
		__uint64_t	mc_initiator              :	12;
		__uint64_t	mc_address                :	21;
	} mig_candidate_fld_s;
} md_mig_candidate_u_t;


typedef union md_dir_error_u {
	__uint64_t	dir_error_regval;
	struct  {
		__uint64_t	de_fuce_valid             :	 1;
		__uint64_t	de_uce_valid              :	 1;
		__uint64_t	de_ae_valid               :	 1;
		__uint64_t	de_fce_valid              :	 1;
		__uint64_t	de_ce_valid               :	 1;
		__uint64_t	de_reserved               :	14;
		__uint64_t	de_prot_index             :	 3;
		__uint64_t	de_bad_protect            :	 2;
		__uint64_t	de_bad_syn                :	 8;
		__uint64_t	de_reserved_8             :	 2;
		__uint64_t	de_hspec_addr             :	27;
		__uint64_t	de_uce_overrun            :	 1;
		__uint64_t	de_ae_overrun             :	 1;
		__uint64_t	de_ce_overrun             :	 1;
	} dir_error_fld_s;
} md_dir_error_u_t;


typedef union md_protocol_error_u {
	__uint64_t	protocol_error_regval;
	struct  {
		__uint64_t	pe_valid                  :	 1;
		__uint64_t	pe_initiator              :	13;
		__uint64_t	pe_backoff                :	 2;
		__uint64_t	pe_msg_type               :	 8;
		__uint64_t	pe_access                 :	 1;
		__uint64_t	pe_priority               :	 1;
		__uint64_t	pe_dir_state              :	 4;
		__uint64_t	pe_pointer_me             :	 1;
		__uint64_t	pe_address                :	30;
		__uint64_t	pe_reserved               :	 2;
		__uint64_t	pe_overrun                :	 1;
	} protocol_error_fld_s;
} md_protocol_error_u_t;


typedef union md_mem_error_u {
	__uint64_t	mem_error_regval;
	struct  {
		__uint64_t	me_uce_valid              :	 1;
		__uint64_t	me_ce_valid               :	 1;
		__uint64_t	me_reserved               :	21;
		__uint64_t	me_bad_syn                :	 8;
		__uint64_t	me_address                :	30;
		__uint64_t	me_reserved_4             :	 1;
		__uint64_t	me_uce_overrun            :	 1;
		__uint64_t	me_ce_overrun             :	 1;
	} mem_error_fld_s;
} md_mem_error_u_t;


typedef union md_misc_error_u {
	__uint64_t	misc_error_regval;
	struct  {
		__uint64_t	me_ill_msg                :	 2;
		__uint64_t	me_ill_revision           :	 2;
		__uint64_t	me_long_pack              :	 2;
		__uint64_t	me_short_pack             :	 2;
		__uint64_t	me_bad_data               :	 2;
		__uint64_t	me_reserved               :	 2;
		__uint64_t	me_source                 :	11;
		__uint64_t	me_command                :	 8;
		__uint64_t	me_address                :	33;
	} misc_error_fld_s;
} md_misc_error_u_t;


typedef union md_perf_sel_u {
	__uint64_t	md_perf_sel_regval;
	struct  {
		__uint64_t	mps_reserved              :	60;
		__uint64_t	mps_perf_en               :	 1;
		__uint64_t	mps_perf_sel              :	 3;
	} md_perf_sel_fld_s;
} md_perf_sel_u_t;


typedef union md_perf_cnt0_u {
	__uint64_t	md_perf_cnt0_regval;
	struct  {
		__uint64_t	mpc_reserved              :	43;
		__uint64_t	mpc_rsvd_0                :	 1;
		__uint64_t	mpc_perf_cnt              :	20;
	} md_perf_cnt0_fld_s;
} md_perf_cnt0_u_t;


typedef union md_perf_cnt1_u {
	__uint64_t	md_perf_cnt1_regval;
	struct  {
		__uint64_t	mpc_reserved              :	43;
		__uint64_t	mpc_rsvd_0                :	 1;
		__uint64_t	mpc_perf_cnt              :	20;
	} md_perf_cnt1_fld_s;
} md_perf_cnt1_u_t;


typedef union md_perf_cnt2_u {
	__uint64_t	md_perf_cnt2_regval;
	struct  {
		__uint64_t	mpc_reserved              :	43;
		__uint64_t	mpc_rsvd_0                :	 1;
		__uint64_t	mpc_perf_cnt              :	20;
	} md_perf_cnt2_fld_s;
} md_perf_cnt2_u_t;


typedef union md_perf_cnt3_u {
	__uint64_t	md_perf_cnt3_regval;
	struct  {
		__uint64_t	mpc_reserved              :	43;
		__uint64_t	mpc_rsvd_0                :	 1;
		__uint64_t	mpc_perf_cnt              :	20;
	} md_perf_cnt3_fld_s;
} md_perf_cnt3_u_t;


typedef union md_perf_cnt4_u {
	__uint64_t	md_perf_cnt4_regval;
	struct  {
		__uint64_t	mpc_reserved              :	43;
		__uint64_t	mpc_rsvd_0                :	 1;
		__uint64_t	mpc_perf_cnt              :	20;
	} md_perf_cnt4_fld_s;
} md_perf_cnt4_u_t;


typedef union md_perf_cnt5_u {
	__uint64_t	md_perf_cnt5_regval;
	struct  {
		__uint64_t	mpc_reserved              :	43;
		__uint64_t	mpc_rsvd_0                :	 1;
		__uint64_t	mpc_perf_cnt              :	20;
	} md_perf_cnt5_fld_s;
} md_perf_cnt5_u_t;




#endif /* _LANGUAGE_C */




#endif  /* __SYS_SN_SN1_SNACMDREGS_H__ */

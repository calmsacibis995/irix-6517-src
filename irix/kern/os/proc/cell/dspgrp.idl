/**************************************************************************
 *									  *
 * 		 Copyright (C) 1995-1996 Silicon Graphics, Inc.		  *
 *									  *
 *  These coded instructions, statements, and computer programs  contain  *
 *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
 *  are protected by Federal copyright law.  They  may  not be disclosed  *
 *  to  third  parties  or copied or duplicated in any form, in whole or  *
 *  in part, without the prior written consent of Silicon Graphics, Inc.  *
 *									  *
 **************************************************************************/

#include "ksys/cell/subsysid.h"

/*
 * operations from client to server
 */
subsystem	"dspgrp"	DSPGRP_SUBSYSID

import <sys/cred.h>
import <sys/ksignal.h>
import <ksys/vpgrp.h>
import <ksys/cell/tkm.h>
import <ksys/cell/service.h>
import <ksys/cell.h>
import <ksys/cell/handle.h>

synchronous void
obtain(
	out	pointerto	int		errno,
	in	valueof		cell_t		sender,
	in	valueof		pid_t		pgid,
	in	valueof		tk_set_t	to_be_obtained,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_disp_t	dofret,
	out	pointerto	tk_set_t	already_obtained,
	out	pointerto	tk_set_t	granted,
	out	pointerto	tk_set_t	refused,
	inout	pointerto	objid_t 	objid,
	out	pointerto	pid_t		sid,
	out	pointerto	int		is_batch,
	out	pointerto	sequence_num_t	sigseq,
	out	pointerto	cell_t		relocated_to)

/*
 * call from client to server returning tokens
 */
synchronous void
return(
	in	valueof		cell_t		sender,
	in	valueof		objid_t 	objid,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_set_t	unknown,
	in	valueof		tk_disp_t	why)

/*
 * Calls from client cell to server:
 */           

synchronous void
getattr(
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid,
	out	pointerto	pid_t		sid,
	out	pointerto	int		is_orphaned,
	out	pointerto	int		is_batch)

/* join not required */

synchronous void
leave(
	in	valueof		cell_t		client,
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid)

/* detach not required */

synchronous void
sendsig(
	in	valueof		cell_t		client,
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid,
	in	valueof		int		sig,
	in	valueof		int		options,
	in	valueof		pid_t		sid,
	in	valueof		credid_t	credid,
	in	bufferof	<struct k_siginfo>	info,
	out	pointerto	int		error)

synchronous void
orphan(
	in	valueof		cell_t		client,
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid,
	in	valueof		int		is_exit)

synchronous void
anystop(
	in	valueof		cell_t		client,
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid,
	in	valueof		pid_t		pid,
	out	pointerto	int		is_stopped)

synchronous void
nice(
	in	valueof		cell_t		client,
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid,
	in	valueof		int		flags,
	inout	pointerto	int		nice,
	out	pointerto	int		count,
	in	valueof		credid_t	scredid,
	out	pointerto	int		error)

synchronous void
clearbatch(
	in	valueof		cell_t		client,
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid)

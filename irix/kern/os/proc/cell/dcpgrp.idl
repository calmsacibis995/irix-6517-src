/**************************************************************************
 *									  *
 * 		 Copyright (C) 1995-1996 Silicon Graphics, Inc.		  *
 *									  *
 *  These coded instructions, statements, and computer programs  contain  *
 *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
 *  are protected by Federal copyright law.  They  may  not be disclosed  *
 *  to  third  parties  or copied or duplicated in any form, in whole or  *
 *  in part, without the prior written consent of Silicon Graphics, Inc.  *
 *									  *
 **************************************************************************/

#include "ksys/cell/subsysid.h"

/*
 * operations from server to client
 */
subsystem	"dcpgrp"	DCPGRP_SUBSYSID

import <ksys/vpgrp.h>
import <ksys/cell/tkm.h>
import <ksys/cell/service.h>
import <ksys/cell.h>
import <ksys/cell/handle.h>

/*
 * call to client to return token
 */
synchronous void
recall(
	out	pointerto	int		errno,
	in	valueof		pid_t		pgid,
	in	valueof		tk_set_t	to_be_recalled,
	in	valueof		tk_disp_t	dofrev)

/*
 * Call to client to send signal to local process group members.
 */
synchronous void
sendsig(
	in	valueof		pid_t		pgid,
	in	valueof		int		sig,
	in	valueof		int		options,
	in	valueof		pid_t		sid,
	in	valueof		credid_t	scredid,
	in	bufferof	<struct k_siginfo>	info,
	out	pointerto	int		error)

/*
 * Call to client to check for any stopped process group members.
 */
synchronous void
anystop(
	in	valueof		pid_t		pgid,
	in	valueof		pid_t		pid,
	out	pointerto	int		is_stopped)

/*
 * Call to client to get process group attributes - particularly
 * the orphan status.
 */
synchronous void
getattr(
	in	valueof		pid_t		pgid,
	out	pointerto	pid_t		sid,
	out	pointerto	int		is_orphaned,
	out	pointerto	int		is_batch)

/*
 * BSD setpriority/getpriority support - called from VPGRP_NICE
 */
synchronous void
nice(
	in	valueof		pid_t		pgid,
	in	valueof		int		flags,
	inout	pointerto	int		nice,
	out	pointerto	int		count,
	in	valueof		credid_t	scredid,
	out	pointerto	int		error)

/*
 * Call to origin cell to register pgid and create a dc.
 */
synchronous void
create_origin(
	in	valueof		cell_t		server,
	in	valueof		objid_t		objid,
	in	valueof		pid_t		pgid,
	in	valueof		pid_t		sid,
	in	valueof		tk_set_t	tokens,
	out	pointerto	int		error)

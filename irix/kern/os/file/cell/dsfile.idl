/**************************************************************************
 *									  *
 * 		 Copyright (C) 1995-1996 Silicon Graphics, Inc.		  *
 *									  *
 *  These coded instructions, statements, and computer programs  contain  *
 *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
 *  are protected by Federal copyright law.  They  may  not be disclosed  *
 *  to  third  parties  or copied or duplicated in any form, in whole or  *
 *  in part, without the prior written consent of Silicon Graphics, Inc.  *
 *									  *
 **************************************************************************/
#ident  "$Id: dsfile.idl,v 1.9 1997/11/10 23:42:28 ethan Exp $"

#include "ksys/cell/subsysid.h"

/*
 * operations from client to server
 */
subsystem	"dsfile"	DSFILE_SUBSYSID

import <ksys/vshm.h>
import <ksys/cell/tkm.h>
import <ksys/cell/service.h>
import <ksys/cell/handle.h>
import <ksys/cell.h>

synchronous void
obtain(
	in	valueof		cell_t		sender,
	in	valueof		tk_set_t	to_be_obtained,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_disp_t	dofret,
	out	pointerto	tk_set_t	already_obtained,
	out	pointerto	tk_set_t	granted,
	out	pointerto	tk_set_t	refused,
	inout	pointerto	obj_handle_t	objid,
	out	pointerto	off_t		offset,
	out	pointerto	int		flags,
	out	pointerto	int		error)

/*
 * call from client to server returning tokens
 */
synchronous void
return(
	in	valueof		cell_t		sender,
	in	valueof		objid_t 	objid,
	in	valueof		off_t 		offset,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_set_t	refused,
	in	valueof		tk_set_t	unknown,
	in	valueof		tk_disp_t	why)

synchronous void
setflags(
	in	valueof		objid_t 	objid,
	in	valueof		int		am,
	in	valueof		int		om)

/*
 * Client retarget complete
 */
asynchronous
obj_retargetted(
	in	valueof		cell_t		client,
	in	valueof 	<void *>	rtsync,
	in	pointerto	obj_handle_t	new_handle,
	in	valueof		<void *>	error)

/*
 * Client needs updated handle
 */
synchronous void
update_handle(
	in	valueof	        <void *>	v,
	out	pointerto	obj_handle_t	handle)

/**************************************************************************
 *									  *
 * 		 Copyright (C) 1995-1996 Silicon Graphics, Inc.		  *
 *									  *
 *  These coded instructions, statements, and computer programs  contain  *
 *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
 *  are protected by Federal copyright law.  They  may  not be disclosed  *
 *  to  third  parties  or copied or duplicated in any form, in whole or  *
 *  in part, without the prior written consent of Silicon Graphics, Inc.  *
 *									  *
 **************************************************************************/

#include "ksys/cell/subsysid.h"

/*
 * operations from client to server
 */
subsystem	"dshost"	DSHOST_SUBSYSID

import <ksys/vhost.h>
import <ksys/cell/tkm.h>
import <ksys/cell/service.h>
import <ksys/cell/handle.h>
import <ksys/cell.h>

synchronous void
obtain(
	out	pointerto	int		errno,
	in	valueof		cell_t		sender,
	in	valueof		tk_set_t	to_be_obtained,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_disp_t	dofret,
	out	pointerto	tk_set_t	already_obtained,
	out	pointerto	tk_set_t	granted,
	out	pointerto	tk_set_t	refused,
	in	valueof		int		r_hostid,
	in	bufferof	char		r_hostnm,
	in	bufferof	char		r_domainnm,
	out	pointerto	int		o_hostid,
	out	bufferof	char		o_hostnm,
	out	bufferof	char		o_domainnm,
	inout	pointerto	objid_t 	objid,
	out	pointerto	cell_t		relocated_to)

/*
 * call from client to server returning tokens
 */
synchronous void
return(
	in	valueof		cell_t		sender,
	in	valueof		objid_t 	objid,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_set_t	unknown,
	in	valueof		tk_disp_t	why,
	in	valueof		int		r_hostid,
	in	bufferof	char		r_hostnm,
	in	bufferof	char		r_domainnm)

/*
 * call from client to server lending read tokens
 */
synchronous void
lend(
	in	valueof		cell_t		sender,
	in	valueof		objid_t 	objid,
	in	valueof		tk_set_t	to_be_returned,
	in	valueof		tk_set_t	unknown,
	in	valueof		tk_disp_t	why,
	in	valueof		int		r_hostid,
	in	bufferof	char		r_hostnm,
	in	bufferof	char		r_domainnm,
	out	pointerto	int		o_hostid,
	out	bufferof	char		o_hostnm,
	out	bufferof	char		o_domainnm)

/*
 * Calls from client cell to server:
 */
synchronous void
killall(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		sender,
	in	valueof		int		signo,
	in	valueof		pid_t		pgid,
	in	valueof		pid_t		callers_pid,
	in	valueof		pid_t		callers_sid,
	out	pointerto	int		sender_included)

synchronous void
reboot(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		sender,
	in	valueof		int		fcn,
	in	pointerto	char		mdep)

synchronous void
sync(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		sender,
	in	valueof		int		flags,
	out	pointerto	int		sender_included)

synchronous void
set_time(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		caller,
	in	valueof		cell_t		sender,
	out	pointerto	int		sender_included)

synchronous void
adj_time(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		sender,
	in	valueof		long		adjustment,
	out	pointerto	int		sender_included)

synchronous void
sysget(
	in	valueof		objid_t		objid,
	in	valueof		int		name,
	in	valueof		<char *>	buffer,
	inout	pointerto	int		buflen,
	in	valueof		int		flags,
	inout	pointerto	<sgt_cookie_t>	cookie,
	inout	pointerto	<sgt_info_t>	info,
	in	bufferof	char		in_buf,
	out	bufferof	char		out_buf,
	inout	pointerto	int		error)

synchronous void
systune(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		sender,
	in	valueof		int		group_index,
	in	valueof		int		tune_index,
	in	valueof		<uint64_t>	value,
	inout	pointerto	int		error)

synchronous void
printf(
	in	valueof		cell_t		sender,
	in	bufferof	char		buffer)

asynchronous
credflush(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		sender,
	in	valueof		cell_t		server)

asynchronous
credflush_ack(
	in	valueof		cell_t		responder,
	in	valueof		<void *>	arg)

synchronous void
credflush_wait(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		server)

synchronous void
sysacct(
	in	valueof		objid_t		objid,
	in	valueof		cell_t		caller,
	in	valueof		int		enable,
	in	pointerto	<cfs_handle_t>  handle)

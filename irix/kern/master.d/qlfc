*#ident	"master.d/qlfc: $Revision $"
*
* MEM
*
*FLAG	PREFIX	SOFT	#DEV	DEPENDENCIES
nsc	qlfc_	-	-	scsi
+thread_class		scsi

$$$
/* 
 *	qlfc_use_connection_mode:
 *		3 - point to point preferred, then loop
 *		2 - loop preferred, then point to point
 *		1 - point to point only
 *		0 - loop mode
 *
 *	qlfc_debug:
 *		99 - full debug
 *		98 - almost full debug
 *		 0 - no debug
 *
 *	qlfc_watchdog_time:
 *		Time in seconds between execution of the watchdog timer routine.
 *		Default is 5 seconds.  Don't change this....
 *
 *	qlfc_probe_wait_loop_up:
 *		Time in seconds that the device probe routine will wait for
 *		the loop/link to be up and ready to accept commands.  This
 *		is not related to how long the reset process waits for detection
 *		of signal on the fibre channel connection.
 *
 *	qlfc_trace_buffer_entries:
 *		How many trace entries should be allocated per controller.
 *		Default is 1024. A value of 0 disables tracing (not recommended).
 *		When I'm debugging, I generally set this to 8192.  (I like
 *		powers of two, but they're not required!)
 *
 *	qlfc_target_missing_timeout:
 *		Time in seconds that the driver waits before assuming the worst
 *		about a target and begins to reject requests.  Default is 240
 *		seconds, i.e., 3 minutes.  This is a reasonable value should you
 *		decide to reboot a switch with i/o going to its targets.  (But, you'd
 *		never do that, would you?)  A good minimum for a failover environment
 *		might be 15 seconds.  The lower bound, as enforced by the driver, 
 *		is 2 * qlfc_watchdog_time, or 10 seconds, whichever is greater.
 *
 *	qlfc_controller_drain_timeout:
 *		Following a command timeout, how long the controller waits for
 *		commands to complete before beginning error recovery.  Default 40.
 *		DO NOT CHANGE.
 */

int	qlfc_use_connection_mode = 0;
int	qlfc_debug = 0;
int	qlfc_watchdog_time = 5;
int	qlfc_probe_wait_loop_up = 90;
int	qlfc_trace_buffer_entries = 1024;
int	qlfc_target_missing_timeout = 240;
int	qlfc_controller_drain_timeout = 40;

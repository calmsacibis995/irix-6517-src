*#ident	"master.d/ql: $Revision $"
*
* MEM
*
*FLAG	PREFIX	SOFT	#DEV	DEPENDENCIES
nsc	ql	-	-	scsi
+thread_class		scsi

$$$
/* 
 * ql_bus_reset_on_boot determines whether a SCSI bus reset will be
 * performed at boot time.
 * 0  = default behaviour; reset for IP27, don't reset for IP30
 * +1 = always reset (for all architectures)
 * -1 = never reset (for all architectures)
 */
int	ql_bus_reset_on_boot = 0;

/* 
 * We have seen problems with 12x CDROMs (wrong data being returned on
 * block reads) if we do too many sync negotiations. Consequently, as
 * a hack, we prohibit sync/async negotiations for CDROMs by default. The
 * following variable can be used to override this default and allow
 * sync speeds on CDROMs
 */
int	ql_allow_negotiation_on_cdroms = 0;

/*
 * The following variable can be used to change the period driver
 * waits after resetting the bus.
 */

int ql_bus_reset_delay = 1; /* seconds */

/* if non-zero, the ql driver will print some info whenever a 
 * checkcondition (an unusual or unexpected event on the scsi target
 * device) occurs, and a request sense is done in response.
 * This may be useful when debugging problems with SCSI devices.
 * Normally, just the sense key and addititional sense code values
 * and text are printed, along with additional sense qualifier (the
 * latter two may not always be present).  If the value is > 1,
 * all the returned sense data is also printed in hex.
*/

int ql_printsense = 0;	

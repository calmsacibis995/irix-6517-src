*
* IP32 parallel port I/O driver
*
* The default (auto-negotiation) operation mode of /dev/plp 
* can be overwritten by plpopmode
*
* 0: Auto-negotiation Mode
* 1: Compatibility Mode (non-FIFO)
* 4: Compatibility Mode
* 6: ECP(Extended Capabilities Port) Mode
* 8: EPP(Enhanced Parallel Port) Mode
*
* If data corrupt happens on some printers (e.g. HP DeskJet 1600C) in
* Compatibility mode then set work around delay: plpwardelay = x
* (x = 1,2,...; x * 1ms delay)
* x > 0: conditional delay detected by the driver.
* x < 0: always force delay.
*
*
*FLAG	PREFIX	SOFT	#DEV	DEPENDENCIES
csdRD	plp     38      2

+thread_class	parallel

$$$

int plpopmode = 4;

int plpwardelay = 0;

int plprtmout = 0;

/*
 * The following parameters apply to non-FIFO compatibility mode
 * (mode 1) only.  In general, this mode should only be used for
 * slower devices which are not operating correctly with the default
 * FIFO mode.
 *
 * plpStrobeDelay -     Minimum delay in us between byte strobes.
 *                      default = 5 us
 * plpRetryDelay1 -     Delay in 10 ms ticks if device is still busy after
 *                      plpStrobeDelay.
 *                      default = 1 tick (10 ms)
 * plpNumRetries1 -     Number of retries to attempt initially.
 *                      default = 100
 * plpRetryDelay2 -     Delay in 10 ms ticks if device remains busy after
 *                      plpNumRetries1 * plpRetryDelay1 ticks; in case,
 *                      for example, the device is offline.
 *                      default = 100 (1 s)
 */

int plpStrobeDelay = 5;
int plpRetryDelay1 = 1;
int plpNumRetries1 = 100;
int plpRetryDelay2 = 100;

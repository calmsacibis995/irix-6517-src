_REM *** This file generates /var/sysgen/Makefile.kernloadio and
_REM *** /var/sysgen/Makefile.kernio.  Lines beginning with "_STAT" and
_REM *** "_LOAD" only appear in one version.  (This makes it a pain to
_REM *** read, but a single file is much easier to maintain.)
_REM
#!smake
#
# Copyright 1993, 1994, Silicon Graphics Inc., Mountain View, CA. 
#
_STAT# Makefile.kernio
_STAT#
_STAT# This is a sample makefile to be used by developers writing device
_STAT# drivers for Irix 6.5 which will be statically linked into the kernel.
_LOAD# Makefile.kernloadio
_LOAD#
_LOAD# This is a sample makefile to be used by developers writing *loadable*
_LOAD# device drivers for Irix 6.5.
#
# You must use smake (not make or gmake) for this makefile to work
# correctly.  If you copy this entire file, or parts of it into another
# makefile, you will need to use smake on that Makefile as well.
# The normal sgi make command will use smake on this file, because
# the first line is #! smake
#
# A number of flags must be defined correctly when compiling device
# drivers for Irix. The cflags specified in this file are flags used by
# Silicon Graphics to compile drivers for different product types. This
# makefile is intended as an example.
#
# To use this makefile, do the following:
#
# 	1. Set the CPUBOARD environment variable to the appropriate machine 
#	   type (i.e., IP19, IP20, IP22, etc.).  For example:
#
#		setenv CPUBOARD IP22 
#
#	   If you do not know what machine type you have, use the "hinv"
#	   or "uname -m" commands to find out.
#
#	2. Build the driver using this makefile:
#
#		make -f Makefile.kernio driver.o
#
# The flags used in this makefile have the following meanings:
#
#	-D_KERNEL		compiled for kernel as opposed to stand alone
#	-DJUMP_WAR		workaround for R4000 branch on end of page bug
#	-DBADVA_WAR		workaround for R4000 badvaddr bug
#	-DTFP           	R8000 (TFP) machine
#	-DR4000         	R4x00 class machine (includes R5000)
_STAT#	-G 8			max global pointer object size
_LOAD#	-G 0			no data access through the global pointer 
_LOAD#	-TARG:force_jalr	produce jalr instructions rather than jal
#	-non_shared		do not use shared objects
#	-fullwarn		additional compile-time error checking
#	-DR4600         	R4600 machine
#	-DTRITON        	R5000 machine
#	-DR10000		R10000 machine
#	-DMP			Multiprocessor machine
#	-TENV:kernel		generate code for the kernel
#	-OPT:space		give space priority over execution time
#	-OPT:Olimit=0		Removes limit on optimizable function size
#	-TENV:X=1 		Disable speculation of instructions that 
# 					can cause floating point traps
#	-OPT:IEEE_arithmetic=1	Avoid inaccurate FP optimization
#	-OPT:roundoff=0		Avoid roundoff changes from FP optimizations
#	-CG:unique_exit=ON 	Generate one exit code sequence 
#					per subprogram (instead of per return).
#	-D_PAGESZ		virtual page size
#

_STAT# NOTE: These options are for statically linked drivers. See
_STAT# /var/sysgen/Makefile.kernloadio for a similar sample makefile for
_STAT# loadable drivers.  The only differences between the two are the use of
_LOAD# NOTE: These options are for loadable drivers.  See
_LOAD# /var/sysgen/Makefile.kernio for a similar sample makefile for static
_LOAD# drivers.  The only differences between the two are the use of
# -G 0 on loadable drivers versus -G 8 on static, and the use of the
# -TARG:force_jalr on loadable drivers.
#
# With those two exceptions, these flags should be a subset of the CCOPTS
# variable in /var/sysgen/system/irix.sm for any given machine type.  In
# case of conflict or doubt, use the CCOPTS values from that file.

ROOT=/
include $(ROOT)/usr/include/make/commondefs

#if defined(CPUBOARD) && !empty(CPUBOARD)

###################################################################
#         GLOBAL - use these for all IRIX device drivers          #
###################################################################

CFLAGS= -D_KERNEL -DMP_STREAMS -D_MP_NETLOCKS -DMRSP_AS_MR \
_STAT	-fullwarn -non_shared -G 8 \
_LOAD	-fullwarn -non_shared -G 0 -TARG:force_jalr \
	-TENV:kernel -OPT:space -OPT:Olimit=0 -CG:unique_exit=on \
	-TENV:X=1 -OPT:IEEE_arithmetic=1 -OPT:roundoff=0 \
	-OPT:wrap_around_unsafe_opt=off


###################################################################
#          32-bit - for device drivers on 32-bit systems          #
###################################################################

#if $(CPUBOARD)=="IP20" || $(CPUBOARD)=="IP22" || $(CPUBOARD)=="IP32"

CFLAGS+= -n32 -D_PAGESZ=4096


###################################################################
#          64-bit - for device drivers on 64-bit systems          #
###################################################################

#else /* !(IP20||IP22||IP32) */


CFLAGS+= -64 -D_PAGESZ=16384 -D_MIPS3_ADDRSPACE

#endif /* IP20||IP22||IP32 */


###################################################################
# Platform specific - for device drivers on the indicated machine #
###################################################################

#if $(CPUBOARD) == "IP19"
CFLAGS+= -DIP19 -DEVEREST -DMP -DR4000
#endif

#if $(CPUBOARD) == "IP20"
CFLAGS+= -DIP20 -DR4000 -DJUMP_WAR -DBADVA_WAR
#endif

#if $(CPUBOARD) == "IP21"
CFLAGS+= -DIP21 -DEVEREST -DMP -DTFP -TARG:processor=r8000
#endif

#if $(CPUBOARD) == "IP22"
CFLAGS+= -DIP22 -DR4000 -DJUMP_WAR -DBADVA_WAR -DTRITON
#endif

#if $(CPUBOARD) == "IP25"
CFLAGS+= -DIP25 -DEVEREST -DMP -DR10000 -TARG:processor=r10000
#endif

#if $(CPUBOARD) == "IP26"
CFLAGS+=-DIP26 -DTFP -TARG:sync=off -TARG:processor=r8000
#endif

#if $(CPUBOARD) == "IP27"
CFLAGS+= -DIP27 -DR10000 -DMP -DSN0 \
 -DMAPPED_KERNEL -DLARGE_CPU_COUNT -DPTE_64BIT -DULI -DCKPT -DMIPS4_ISA \
 -DR10K_LLSC_WAR -DNUMA_BASE -DNUMA_PM  -DNUMA_TBORROW -DNUMA_MIGR_CONTROL \
 -DNUMA_REPLICATION -DNUMA_REPL_CONTROL -DNUMA_SCHED -DCELL_PREPARE \
 -DBHV_PREPARE -TARG:processor=r10000 
#endif

#if $(CPUBOARD) == "IP28"
# All Indigo2 10000 kernel modules must be built with the t5_no_spec_stores
# option to the C compiler and assembler.
CFLAGS+= -DIP28 -DR10000 -DSCACHE_SET_ASSOC=2 -D_NO_UNCACHED_MEM_WAR \
 -DR10000_SPECULATION_WAR \
 -TARG:processor=r10000 -TARG:t5_no_spec_stores
#endif

#if $(CPUBOARD) == "IP30"
CFLAGS+= -DIP30 -DR10000 -DMP -DCELL_PREPARE -DBHV_PREPARE \
 -TARG:processor=r10000
#endif

#if $(CPUBOARD) == "IP32"
CFLAGS+= -DIP32 -DR4000 -DR10000 -DTRITON -DUSE_PCI_PIO
#endif

#endif

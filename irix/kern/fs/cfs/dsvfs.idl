/**************************************************************************
 *                                                                        *
 *               Copyright (C) 1996 Silicon Graphics, Inc.                *
 *                                                                        *
 *  These coded instructions, statements, and computer programs  contain  *
 *  unpublished  proprietary  information of Silicon Graphics, Inc., and  *
 *  are protected by Federal copyright law.  They  may  not be disclosed  *
 *  to  third  parties  or copied or duplicated in any form, in whole or  *
 *  in part, without the prior written consent of Silicon Graphics, Inc.  *
 *                                                                        *
 **************************************************************************/
#ident  "$Revision: 1.13 $"

/*
 * Remote function interfaces supported by the VFS ds behavior
 */
#include "ksys/cell/subsysid.h"

subsystem	"dsvfs"		DSVFS_SUBSYSID

import <ksys/cell/tkm.h>
import <ksys/cell/service.h>
import <ksys/cell/handle.h>
import <ksys/cell.h>

import <sys/cred.h>
import <fs/cfs/cfs.h>
import <fs/cell/mount_import.h>
import <sys/statvfs.h>

#if NOTDEF
synchronous void
vfsrefuse(
	in      valueof         objid_t                 vfs_id,
        in      valueof         cell_t                  client,
        in      valueof         tk_set_t                tset_refuse,
	in	valueof		tk_disp_t		why)
#endif
	

synchronous void
vfsreturn(
	in	valueof		objid_t			vfs_id,
	in	valueof		cell_t			client,
	in	valueof		tk_set_t		tset_return,
	in	valueof		tk_set_t		tset_refuse,
	in	valueof		tk_disp_t		why)

synchronous void
dounmount(
	in	valueof		objid_t			vfs_id,
	in	valueof		int			flags,
	in	valueof		credid_t		credid,
	in      valueof         cell_t                  issuer,
	out	pointerto	int			errorp)


synchronous void
sync(
	in	valueof		objid_t			vfs_id,
	in	valueof		int			flags,
	in 	valueof		credid_t		credid,
	out	pointerto	int			errorp)


synchronous void
vfsmount(
	in	pointerto	cfs_handle_t		cv_handle,
	in	pointerto	<struct mounta>		uap,
	in	pointerto	char			attrs,
	in	valueof		credid_t		credid,
	in	pointerto	cfs_handle_t		rdir_handlep,
	in	pointerto	cfs_handle_t		cdir_handlep,
	out	pointerto	cfs_handle_t		vfs_handlep,
	out	pointerto	int			errorp)
	
synchronous void
vget(
        in      valueof         objid_t         	objid,
        out     pointerto       cfs_handle_t		handlep,
        in      pointerto       <struct fid>    	fidp,
        out     pointerto       int             	errorp)

synchronous void
statvfs(
        in      valueof         objid_t         	objid,
        out     pointerto       <struct statvfs>	statp,
	in	pointerto	cfs_handle_t		handlep,
	out	pointerto	int			errorp)

synchronous void
getrootmountpoint(
	in	valueof		cell_t			client,
	out	pointerto	<mount_import_t>        mnti,
	out	pointerto	int			notready,
        out     bufferof        cfs_handle_t            dummy_vfs)

synchronous void
getmountpoint(
	in	pointerto       cfs_handle_t            cvhandle,
	in	valueof		cell_t			client,
	out	pointerto	<mount_import_t	>	mnti,
	out	pointerto	int			errorp)

synchronous void
vfsmountedhere(
	in	valueof		objid_t			objid,
	out	pointerto	cfs_handle_t		handlep,
	out	pointerto       int			errorp)

synchronous void
getmounthdls(
	in	pointerto	cfs_handle_t	        in_vfsh,
	out	pointerto	cfs_handle_t		cov_vnh,
	out	pointerto	cfs_handle_t		cov_vfsh)

	





/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: sec_authn.h,v $
 * Revision 65.3  1999/02/05 15:44:21  mek
 * Added prototype for sec_des_is_weak_key().
 *
 * Revision 65.2  1999/02/03 22:44:22  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:46:39  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.62.2  1996/08/09  12:07:03  arvind
 * 	Merge code review cleanup from mb_u2u2
 * 	[1996/07/03  19:29 UTC  burati  /main/DCE_1.2.2/mb_u2u2/1]
 *
 * 	u2u cleanup (rtn for checking u2u status code)
 * 	[1996/05/24  23:15 UTC  sommerfeld  /main/DCE_1.2.2/1]
 *
 * Revision 1.1.62.1  1996/06/04  22:00:00  arvind
 * 	Merge u2u  signature changes from mb_u2u
 * 	[1996/05/06  19:45 UTC  burati  /main/DCE_1.2/1]
 * 
 * 	merge u2u work
 * 	[1996/04/29  19:17 UTC  burati  /main/mb_u2u/1]
 * 
 * 	u2u work off Mothra, before 1.2 branch is available
 * 	[1996/04/29  19:11 UTC  burati  /main/mb_mothra8/1]
 * 
 * Revision 1.1.60.2  1996/03/09  23:29:08  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:44:32  marty]
 * 
 * Revision 1.1.60.1  1995/12/08  17:37:15  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  16:56:02  root]
 * 
 * Revision 1.1.58.6  1994/09/21  19:07:42  sommerfeld
 * 	[OT10413] on client, retain & check timestamps for CN mutual authentication.
 * 	[1994/09/21  19:06:05  sommerfeld]
 * 
 * Revision 1.1.58.5  1994/08/09  17:32:38  burati
 * 	DFS/EPAC/KRPC/dfsbind changes
 * 	[1994/08/09  16:59:53  burati]
 * 
 * Revision 1.1.58.4  1994/08/04  16:13:01  mdf
 * 	Hewlett Packard Security Code Drop
 * 	[1994/07/26  19:10:04  mdf]
 * 
 * Revision 1.1.58.2  1994/06/02  21:28:42  mdf
 * 	hp_sec_to_osf_3 drop, merge up with latest.
 * 	[1994/05/24  15:16:24  mdf]
 * 
 * 	hp_sec_to_osf_3 drop
 * 
 * Revision 1.1.58.1  1994/01/28  23:10:57  burati
 * 	Delegation/EPAC changes (dlg_bl1)
 * 	[1994/01/18  20:54:08  burati]
 * 
 * Revision 1.1.56.1  1993/10/05  22:30:58  mccann
 * 	CR8651 64 bit porting changes
 * 	[1993/10/04  19:12:27  mccann]
 * 
 * Revision 1.1.4.2  1992/12/29  13:53:51  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/28  20:49:36  zeliff]
 * 
 * Revision 1.1.2.2  1992/02/20  21:00:51  sommerfeld
 * 	Fixes OT 2085.
 * 	Add sec_krb_timestamp (for benefit of new changes to security and
 * 	rpc6 cn authentication).
 * 	[1992/02/20  20:58:30  sommerfeld]
 * 
 * Revision 1.1  1992/01/19  14:55:08  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef sec_authn_v0_0_included
#define sec_authn_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef lbase_v0_0_included
#include <dce/lbase.h>
#endif
#ifndef sec_id_base_v0_0_included
#include <dce/id_base.h>
#endif
#ifndef rpc_v0_0_included
#include <dce/rpc.h>
#endif
#ifndef sec_base_v0_0_included
#include <dce/sec_base.h>
#endif
#define SEC_AUTHZ_FMT_V1_0 (1)
#define SEC_AUTHZ_FMT_V1_1 (2)
typedef idl_void_p_t sec_krb_parsed_name;
typedef idl_void_p_t sec_krb_cred;
typedef idl_void_p_t sec_krb_ccache;
typedef idl_void_p_t sec_krb_ticket;
typedef struct  {
unsigned32 length;
byte_p_t data;
} sec_krb_message;
typedef unsigned32 sec_krb_timestamp;
typedef struct  {
idl_byte bits[8];
} sec_des_block;
typedef struct  {
idl_byte bits[8];
} sec_des_key;
typedef sec_des_block sec_des_key_schedule[16];
typedef struct  {
unsigned32 i[2];
unsigned32 buffer[4];
idl_byte in[64];
idl_byte digest[16];
} sec_md_struct;
typedef sec_md_struct *sec_md_ptr;
extern void sec_krb_parsed_name_free(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_krb_parsed_name *pname
#endif
);
extern void sec_krb_cred_free(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_krb_cred *cred
#endif
);
extern void sec_krb_ccache_free(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_krb_ccache *ccache
#endif
);
extern void sec_krb_message_free(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_krb_message *message
#endif
);
extern void sec_krb_ticket_free(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_krb_ticket *ticket
#endif
);
extern void sec_id_pac_free(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_id_pac_t *pac
#endif
);
extern error_status_t sec_id_pac_copy(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_id_pac_t *pac,
    /* [out] */ sec_id_pac_t *opac
#endif
);
extern error_status_t sec_krb_parse_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char *name,
    /* [out] */ sec_krb_parsed_name *pname
#endif
);
extern error_status_t sec_krb_sec_parse_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ rpc_auth_identity_handle_t auth_ident,
    /* [in] */ unsigned32 authn_level,
    /* [in] */ idl_char *name,
    /* [out] */ sec_krb_parsed_name *pname
#endif
);
extern error_status_t sec_krb_unparse_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_parsed_name pname,
    /* [out] */ idl_char **name
#endif
);
extern error_status_t sec_krb_get_cc(
#ifdef IDL_PROTOTYPES
    /* [in] */ rpc_auth_identity_handle_t auth_ident,
    /* [out] */ sec_krb_ccache *ccache
#endif
);
extern error_status_t sec_krb_get_cred(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_ccache ccache,
    /* [in] */ sec_krb_parsed_name server_name,
    /* [in] */ unsigned32 authn_level,
    /* [in] */ unsigned32 authz_proto,
    /* [in] */ unsigned32 tkt_length,
    /* [in] */ unsigned_char_p_t tkt_data,
    /* [out] */ sec_krb_cred *cred,
    /* [out] */ unsigned32 *expiration
#endif
);
extern error_status_t sec_krb_get_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_ccache ccache,
    /* [out] */ sec_krb_parsed_name *client_name
#endif
);
extern error_status_t sec_krb_get_pac(
#ifdef IDL_PROTOTYPES
    /* [in] */ rpc_auth_identity_handle_t auth_ident,
    /* [out] */ sec_id_pac_t *pac
#endif
);
extern error_status_t sec_krb_build_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_ccache ccache,
    /* [in] */ sec_krb_cred cred,
    /* [in] */ sec_des_block *challenge,
    /* [in] */ unsigned32 authn_level,
    /* [in] */ unsigned32 authz_proto,
    /* [in] */ unsigned32 key_seq,
    /* [in] */ sec_des_key *key,
    /* [in] */ sec_id_pac_t *client_pac,
    /* [out] */ sec_krb_message *message
#endif
);
extern error_status_t sec_krb_dg_build_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_ccache ccache,
    /* [in] */ sec_krb_cred cred,
    /* [in] */ sec_des_block *challenge,
    /* [in] */ unsigned32 authn_level,
    /* [in] */ unsigned32 authz_proto,
    /* [in] */ unsigned32 key_seq,
    /* [in] */ sec_des_key *key,
    /* [in] */ sec_des_block *ivec,
    /* [in] */ unsigned32 authz_fmt,
    /* [out] */ sec_krb_message *message
#endif
);
extern error_status_t sec_krb_st_translate(
#ifdef IDL_PROTOTYPES
    /* [in] */ signed32 code
#endif
);
extern error_status_t sec_krb_decode_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_message *message,
    /* [in] */ sec_des_block *challenge,
    /* [in] */ boolean32 use_replay,
    /* [out] */ idl_char **client_name,
    /* [out] */ sec_id_pac_t *client_pac,
    /* [out] */ sec_krb_parsed_name *server_name,
    /* [out] */ unsigned32 *authn_level,
    /* [out] */ unsigned32 *authz_proto,
    /* [out] */ unsigned32 *key_seq,
    /* [out] */ sec_des_key *key,
    /* [out] */ unsigned32 *expiration,
    /* [out] */ sec_krb_ticket *ticket
#endif
);
extern error_status_t sec_krb_dg_decode_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_message *message,
    /* [in] */ sec_des_block *challenge,
    /* [in] */ unsigned32 authz_fmt,
    /* [out] */ idl_char **client_name,
    /* [out] */ sec_id_pac_t *client_pac,
    /* [out] */ rpc_authz_cred_handle_t *client_creds,
    /* [out] */ sec_krb_parsed_name *server_name,
    /* [out] */ unsigned32 *authn_level,
    /* [out] */ unsigned32 *authz_proto,
    /* [out] */ unsigned32 *key_seq,
    /* [out] */ sec_des_key *key,
    /* [out] */ sec_des_block *ivec,
    /* [out] */ unsigned32 *expiration
#endif
);
extern error_status_t sec_krb_dg_decode_msg_frags(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_message *message,
    /* [in] */ sec_des_block *challenge,
    /* [in] */ unsigned32 authz_fmt,
    /* [out] */ idl_char **client_name,
    /* [out] */ sec_id_pac_t *client_pac,
    /* [out] */ sec_bytes_t *raw_epac_setP,
    /* [out] */ rpc_authz_cred_handle_t *client_creds,
    /* [out] */ sec_krb_parsed_name *server_name,
    /* [out] */ unsigned32 *authn_level,
    /* [out] */ unsigned32 *authz_proto,
    /* [out] */ unsigned32 *key_seq,
    /* [out] */ sec_des_key *key,
    /* [out] */ sec_des_block *ivec,
    /* [out] */ unsigned32 *expiration
#endif
);
extern error_status_t sec_krb_dg_decode_message_kern(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_message *message,
    /* [in] */ sec_des_block *challenge,
    /* [in] */ unsigned32 authz_fmt,
    /* [in] */ handle_t h,
    /* [in] */ uuid_t *actuid,
    /* [in] */ unsigned32 boot_time,
    /* [in] */ error_status_t completion_status,
    /* [out] */ idl_char **client_name,
    /* [out] */ sec_id_pac_t *client_pac,
    /* [out] */ rpc_authz_cred_handle_t *client_creds,
    /* [out] */ sec_krb_parsed_name *server_name,
    /* [out] */ unsigned32 *authn_level,
    /* [out] */ unsigned32 *authz_proto,
    /* [out] */ unsigned32 *key_seq,
    /* [out] */ sec_des_key *key,
    /* [out] */ sec_des_block *ivec,
    /* [out] */ unsigned32 *expiration
#endif
);
extern error_status_t sec_krb_register_server(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_p_t server_princ_name,
    /* [in] */ rpc_auth_key_retrieval_fn_t get_key_func,
    /* [in] */ idl_void_p_t arg
#endif
);
extern error_status_t sec_krb_register_server_u2u(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_p_t server_princ_name,
    /* [in] */ rpc_auth_identity_handle_t id_h
#endif
);
extern error_status_t sec_krb_get_server(
#ifdef IDL_PROTOTYPES
    /* [out] */ unsigned_char_p_t *server_name
#endif
);
extern void sec_krb_init(
#ifdef IDL_PROTOTYPES
    void
#endif
);
#define sec_des_decrypt (0)
#define sec_des_encrypt (1)
extern void sec_des_cbc_cksum(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_des_block *plaintext,
    /* [out] */ sec_des_block *cksum,
    /* [in] */ signed32 length,
    /* [in] */ sec_des_key_schedule key,
    /* [in] */ sec_des_block *ivec
#endif
);
extern void sec_des_ecb_encrypt(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_des_block *inblock,
    /* [out] */ sec_des_block *outblock,
    /* [in] */ sec_des_key_schedule key,
    /* [in] */ signed32 direction
#endif
);
extern void sec_des_cbc_encrypt(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_des_block *inblocks,
    /* [out] */ sec_des_block *outblocks,
    /* [in] */ signed32 length,
    /* [in] */ sec_des_key_schedule key,
    /* [in] */ sec_des_block *ivec,
    /* [in] */ signed32 direction
#endif
);
extern int sec_des_is_weak_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned char *key
#endif
);
extern error_status_t sec_des_key_sched(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_des_key *key,
    /* [out] */ sec_des_key_schedule schedule
#endif
);
extern error_status_t sec_des_new_random_key(
#ifdef IDL_PROTOTYPES
    /* [out] */ sec_des_key *key
#endif
);
extern error_status_t sec_des_generate_random_block(
#ifdef IDL_PROTOTYPES
    /* [out] */ sec_des_block *key
#endif
);
extern void sec_md_begin(
#ifdef IDL_PROTOTYPES
    /* [out] */ sec_md_ptr state
#endif
);
extern void sec_md_update(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_md_ptr state,
    /* [in] */ idl_byte *data,
    /* [in] */ unsigned32 length
#endif
);
extern void sec_md_final(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_md_ptr state
#endif
);
extern error_status_t sec_krb_cn_build_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_ccache ccache,
    /* [in] */ sec_krb_cred cred,
    /* [in] */ unsigned32 authn_level,
    /* [in] */ unsigned32 authz_proto,
    /* [in] */ unsigned32 authz_fmt,
    /* [out] */ sec_des_key *key,
    /* [out] */ sec_krb_timestamp *ctime,
    /* [out] */ unsigned32 *cusec,
    /* [out] */ sec_krb_message *message
#endif
);
extern error_status_t sec_krb_cn_build_rep_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 authn_level,
    /* [in] */ sec_krb_timestamp ctime,
    /* [in] */ unsigned32 cusec,
    /* [out] */ sec_krb_message *rep_message,
    /* [in] */ sec_des_key *key
#endif
);
extern error_status_t sec_krb_cn_build_err_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 authn_level,
    /* [in] */ unsigned32 error,
    /* [in] */ sec_krb_timestamp ctime,
    /* [in] */ unsigned32 cusec,
    /* [out] */ sec_krb_message *err_message,
    /* [in] */ sec_des_key *key
#endif
);
extern error_status_t sec_krb_cn_decode_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_krb_message *message,
    /* [in] */ unsigned32 authz_fmt,
    /* [out] */ idl_char **client_name,
    /* [out] */ sec_id_pac_t *client_pac,
    /* [out] */ rpc_authz_cred_handle_t *client_creds,
    /* [out] */ sec_krb_parsed_name *server_name,
    /* [out] */ unsigned32 *authz_proto,
    /* [out] */ sec_des_key *key,
    /* [out] */ unsigned32 *expiration,
    /* [out] */ sec_krb_timestamp *ctime,
    /* [out] */ unsigned32 *cusec
#endif
);
extern error_status_t sec_krb_cn_decode_err_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 authn_level,
    /* [in] */ sec_krb_message *err_message,
    /* [out] */ unsigned32 *error,
    /* [in] */ sec_des_key *key
#endif
);
extern error_status_t sec_krb_cn_decode_rep_message(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 authn_level,
    /* [in] */ sec_krb_message *message,
    /* [in] */ sec_krb_timestamp ctime,
    /* [in] */ unsigned32 cusec,
    /* [in] */ sec_des_key *key
#endif
);
extern boolean32 sec_krb_must_use_u2u(
#ifdef IDL_PROTOTYPES
    /* [in] */ error_status_t status
#endif
);
extern boolean32 sec_krb_never_valid(
#ifdef IDL_PROTOTYPES
    /* [in] */ error_status_t status
#endif
);

#ifdef __cplusplus
    }

#endif
#endif

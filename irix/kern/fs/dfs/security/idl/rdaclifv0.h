/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: rdaclifv0.h,v $
 * Revision 65.2  1999/02/03 22:44:21  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:46:33  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.4.2  1996/03/09  23:28:10  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:43:38  marty]
 *
 * Revision 1.1.4.1  1995/12/08  17:32:46  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  16:55:11  root]
 * 
 * Revision 1.1.2.2  1994/06/17  18:42:20  devsrc
 * 	cr10872 - fix copyright
 * 	[1994/06/17  18:09:00  devsrc]
 * 
 * Revision 1.1.2.1  1994/01/28  23:10:51  burati
 * 	Initial version - from old rdaclif.idl (version 0.0) (dlg_bl1)
 * 	[1994/01/18  20:53:19  burati]
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef rdaclif_v0_0_included
#define rdaclif_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef rdacl_base_v0_0_included
#include <dce/rdaclbase.h>
#endif
extern void rdacl_lookup(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [out] */ sec_acl_result_t *result
#endif
);
extern void rdacl_replace(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ sec_acl_list_t *sec_acl_list,
    /* [out] */ error_status_t *st
#endif
);
extern void rdacl_get_access(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [out] */ sec_acl_permset_t *net_rights,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 rdacl_test_access(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_permset_t desired_permset,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 rdacl_test_access_on_behalf(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_id_pac_t *subject,
    /* [in] */ sec_acl_permset_t desired_permset,
    /* [out] */ error_status_t *st
#endif
);
extern void rdacl_get_manager_types(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ unsigned32 *num_types,
    /* [out] */ uuid_t manager_types[],
    /* [out] */ error_status_t *st
#endif
);
extern void rdacl_get_printstring(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ uuid_t *manager_type_chain,
    /* [out] */ sec_acl_printstring_t *manager_info,
    /* [out] */ boolean32 *tokenize,
    /* [out] */ unsigned32 *total_num_printstrings,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ sec_acl_printstring_t printstrings[],
    /* [out] */ error_status_t *st
#endif
);
extern void rdacl_get_referral(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [out] */ sec_acl_tower_set_t *towers,
    /* [out] */ error_status_t *st
#endif
);
extern void rdacl_get_mgr_types_semantics(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ unsigned32 *num_types,
    /* [out] */ uuid_t manager_types[],
    /* [out] */ sec_acl_posix_semantics_t posix_semantics[],
    /* [out] */ error_status_t *st
#endif
);
typedef struct rdaclif_v0_0_epv_t {
void (*rdacl_lookup)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [out] */ sec_acl_result_t *result
#endif
);
void (*rdacl_replace)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ sec_acl_list_t *sec_acl_list,
    /* [out] */ error_status_t *st
#endif
);
void (*rdacl_get_access)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [out] */ sec_acl_permset_t *net_rights,
    /* [out] */ error_status_t *st
#endif
);
boolean32 (*rdacl_test_access)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_permset_t desired_permset,
    /* [out] */ error_status_t *st
#endif
);
boolean32 (*rdacl_test_access_on_behalf)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_id_pac_t *subject,
    /* [in] */ sec_acl_permset_t desired_permset,
    /* [out] */ error_status_t *st
#endif
);
void (*rdacl_get_manager_types)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ unsigned32 *num_types,
    /* [out] */ uuid_t manager_types[],
    /* [out] */ error_status_t *st
#endif
);
void (*rdacl_get_printstring)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ uuid_t *manager_type_chain,
    /* [out] */ sec_acl_printstring_t *manager_info,
    /* [out] */ boolean32 *tokenize,
    /* [out] */ unsigned32 *total_num_printstrings,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ sec_acl_printstring_t printstrings[],
    /* [out] */ error_status_t *st
#endif
);
void (*rdacl_get_referral)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [out] */ sec_acl_tower_set_t *towers,
    /* [out] */ error_status_t *st
#endif
);
void (*rdacl_get_mgr_types_semantics)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ unsigned32 *num_types,
    /* [out] */ uuid_t manager_types[],
    /* [out] */ sec_acl_posix_semantics_t posix_semantics[],
    /* [out] */ error_status_t *st
#endif
);
} rdaclif_v0_0_epv_t;
extern rpc_if_handle_t rdaclif_v0_0_c_ifspec;
extern rpc_if_handle_t rdaclif_v0_0_s_ifspec;

#ifdef __cplusplus
    }

#else
#endif
#endif

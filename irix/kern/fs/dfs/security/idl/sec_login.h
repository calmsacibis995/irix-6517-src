/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * @HP_DCE_VERSION@
 * @(#)Module: sec_login.idl $Revision: 65.4 $ $Date: 1999/02/03 22:44:23 $
 */
/*
 * HISTORY
 * $Log: sec_login.h,v $
 * Revision 65.4  1999/02/03 22:44:23  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.3  1997/10/27 22:52:21  jdoak
 * revert to 65.1
 *
# Revision 65.1  1997/10/20  19:46:40  jdoak
# *** empty log message ***
#
 * Revision 1.1.66.2  1996/11/13  18:02:24  arvind
 * 	Add/modify copyright info
 * 	[1996/09/16  20:28 UTC  aha  /main/DCE_1.2.2/1]
 *
 * 	CHFts19896: public key version support
 * 	[1996/09/13  23:43 UTC  aha  /main/aha_pk9_3/1]
 *
 * Revision 1.1.66.1  1996/10/03  14:54:00  arvind
 * 	CHFts19896: public key version support
 * 	[1996/09/13  23:43 UTC  aha  /main/aha_pk9_3/1]
 * 
 * 	Add new pk_login error messages
 * 	[1996/09/10  21:07 UTC  aha  /main/aha_pk9_2/1]
 * 
 * Revision 1.1.64.2  1996/03/09  23:29:14  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:44:38  marty]
 * 
 * Revision 1.1.64.1  1995/12/08  17:37:44  root
 * 	Submit OSF/DCE 1.2.1
 * 
 * 	HP revision /main/HPDCE02/4  1995/10/19  15:23 UTC  burati
 * 	Merge CHFts16610 (new sec_login flag) and
 * 	CHFts16467 (sec_login_import_context_uid prototype) from mb_mothra7
 * 
 * 	HP revision /main/HPDCE02/3  1995/07/11  21:16 UTC  sommerfeld
 * 	Add sec_login_unset_context
 * 	[1995/05/02  19:46 UTC  sommerfeld  /main/HPDCE02/sommerfeld_CHFts13948/1]
 * 
 * 	[1995/05/02  19:43 UTC  sommerfeld  /main/HPDCE02/sommerfeld_CHFts13948/1]
 * 
 * 	HP revision /main/HPDCE02/2  1995/04/03  22:06 UTC  mullan_s
 * 	Binary Compatibility Merge
 * 
 * 	HP revision /main/HPDCE02/mullan_mothra_bin_compat/1  1995/01/04  15:40 UTC  mullan_s
 * 	Binary Compatibility Work - move some base definitions to sec_login_base.idl.
 * 	[1995/12/08  16:56:08  root]
 * 
 * Revision 1.1.62.3  1994/06/02  21:28:47  mdf
 * 	hp_sec_to_osf_3 drop, merge up with latest.
 * 	[1994/05/24  20:01:22  mdf]
 * 
 * Revision 1.1.62.2  1994/05/11  19:13:25  ahop
 * 	hp_sec_to_osf_2 drop
 * 	Remove sec_login_get_delegation_type()
 * 	Add new login context flag - sec_login_machine_princ.
 * 	add sec_login_purge_context_exp to handle expired creds
 * 	[1994/04/29  21:08:47  ahop]
 * 
 * Revision 1.1.62.1  1994/01/28  23:11:00  burati
 * 	Delegation/EPAC changes (dlg_bl1)
 * 	[1994/01/18  20:54:43  burati]
 * 
 * 	HP revision /main/HPDCE01/2  1994/05/16  19:46 UTC  rose_l
 * 	merge sec_login PAG inheritance changes into Rodan(mainline)
 * 
 * 	HP revision /main/HPDCE01/rodan_initial/2  1994/05/16  19:22 UTC  rose_l
 * 	change inherit_pag flag constant.
 * 
 * 	HP revision /main/HPDCE01/rodan_initial/1  1994/04/21  12:35 UTC  rose_l
 * 	add sec_login_inherit_pag flags for ...setup_identity()
 * 
 * 	HP revision /main/HPDCE01/1  1994/01/26  20:01  mdf
 * 	merge
 * 
 * Revision 1.1.6.3  1993/12/06  23:16:52  rps
 * 	[CHFts09498] add sec_login_purge_context_exp to handle expired creds
 * 	[1993/12/04  01:15:39  rps]
 * 
 * Revision 1.1.6.2  1993/07/08  12:17:57  root
 * 	Initial King Kong branch
 * 	[1993/07/08  12:17:18  root]
 * 
 * Revision 1.1.4.5  1993/06/03  22:34:31  rps
 * 	add version string
 * 	[1993/06/03  22:17:20  rps]
 * 
 * Revision 1.1.4.4  1993/05/18  14:44:25  tmm
 * 	Back in remote authentication changes
 * 	[1993/05/18  14:41:22  tmm]
 * 
 * Revision 1.1.4.3  1993/05/14  23:20:58  tmm
 * 	Back out remote authentication changes
 * 	[1993/05/14  22:10:29  tmm]
 * 
 * Revision 1.1.1.12  1993/05/04  20:30:32  mgm
 * 	    Loading drop DCE1_0_2FNL
 * 
 * Revision 1.1.60.1  1993/10/05  22:30:45  mccann
 * 	CR8651 64 bit porting changes
 * 	[1993/10/04  19:11:49  mccann]
 * 
 * Revision 1.1.4.2  1992/12/29  13:54:19  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/28  20:49:41  zeliff]
 * 
 * Revision 1.1.2.3  1992/05/14  19:00:13  burati
 * 	Add sec_login_auth_src_overridden
 * 	[1992/05/14  01:54:42  burati]
 * 
 * Revision 1.1.2.2  1992/05/11  23:05:02  burati
 * 	Changed passwd from [in] to [in,out] in sec_login_validate_identity
 * 	Changed passwd from [in] to [in,out] in sec_login_valid_and_cert_ident
 * 	[1992/05/11  19:55:04  burati]
 * 
 * Revision 1.1  1992/01/19  14:55:39  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef sec_login_v0_0_included
#define sec_login_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef secsts_v0_0_included
#include <dce/secsts.h>
#endif
#ifndef lbase_v0_0_included
#include <dce/lbase.h>
#endif
#ifndef sec_id_epac_base_v0_0_included
#include <dce/id_epac.h>
#endif
#ifndef passwd_v0_0_included
#include <dce/passwd.h>
#endif
#ifndef rgynbase_v0_0_included
#include <dce/rgynbase.h>
#endif
#ifndef rpcbase_v0_0_included
#include <dce/rpcbase.h>
#endif
#ifndef sec_login_base_v0_0_included
#include <dce/sec_login_base.h>
#endif
typedef unsigned32 sec_login_flags_t;
#define sec_login_no_flags (0)
#define sec_login_credentials_private (1)
#define sec_login_external_tgt (2)
#define sec_login_proxy_cred (4)
#define sec_login_machine_princ (8)
#define sec_login_inherit_pag (16)
#define sec_login_master_rgy (32)
typedef enum {sec_login_auth_src_network=0,
sec_login_auth_src_local=1,
sec_login_auth_src_overridden=2} sec_login_auth_src_t;
typedef idl_void_p_t sec_login_handle_t;
#define sec_login_default_handle NULL
typedef idl_void_p_t sec_login_passwd_t;
#define sec_login_remote_uid (-3)
#define sec_login_remote_gid (-3)
extern boolean32 sec_login_setup_identity(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_p_t principal,
    /* [in] */ sec_login_flags_t flags,
    /* [out] */ sec_login_handle_t *login_context,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_login_refresh_identity(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_login_validate_identity(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [in, out] */ sec_passwd_rec_t *passwd,
    /* [out] */ boolean32 *reset_passwd,
    /* [out] */ sec_login_auth_src_t *auth_src,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_login_valid_and_cert_ident(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [in, out] */ sec_passwd_rec_t *passwd,
    /* [out] */ boolean32 *reset_passwd,
    /* [out] */ sec_login_auth_src_t *auth_src,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_valid_from_keytable(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [in] */ unsigned32 authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ unsigned32 try_kvno,
    /* [out] */ unsigned32 *used_kvno,
    /* [out] */ boolean32 *reset_passwd,
    /* [out] */ sec_login_auth_src_t *auth_src,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_login_certify_identity(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_set_context(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_unset_context(
#ifdef IDL_PROTOTYPES
    void
#endif
);
extern void sec_login_get_current_context(
#ifdef IDL_PROTOTYPES
    /* [out] */ sec_login_handle_t *login_context,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_purge_context(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_login_handle_t *login_context,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_purge_context_exp(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 buf_len,
    /* [in] */ idl_byte buf[],
    /* [in] */ signed32 purge_time,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_release_context(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_login_handle_t *login_context,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_init_first(
#ifdef IDL_PROTOTYPES
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_login_setup_first(
#ifdef IDL_PROTOTYPES
    /* [out] */ sec_login_handle_t *init_context,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_login_validate_first(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t init_context,
    /* [out] */ boolean32 *reset_passwd,
    /* [out] */ sec_login_auth_src_t *auth_src,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_get_pwent(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ sec_login_passwd_t *pwent,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_get_groups(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ unsigned32 *num_groups,
    /* [out] */ signed32 **group_set,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_get_expiration(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ signed32 *identity_expiration,
    /* [out] */ error_status_t *st
#endif
);
typedef struct  {
sec_id_pac_t pac;
unsigned32 acct_expiration_date;
unsigned32 passwd_expiration_date;
unsigned32 identity_expiration_date;
} sec_login_net_info_t;
extern void sec_login_inquire_net_info(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ sec_login_net_info_t *net_info,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_free_net_info(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_login_net_info_t *net_info
#endif
);
extern boolean32 sec_login_check_passwd(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_p_t principal,
    /* [in] */ sec_passwd_rec_t *passwd,
    /* [out] */ sec_login_auth_src_t *auth_src,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_login_newgroups(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [in] */ sec_login_flags_t flags,
    /* [in] */ unsigned32 num_local_groups,
    /* [in] */ sec_id_t local_groups[],
    /* [out] */ sec_login_handle_t *restricted_context,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_export_context(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [in] */ unsigned32 buf_len,
    /* [out] */ idl_byte buf[],
    /* [out] */ unsigned32 *len_used,
    /* [out] */ unsigned32 *len_needed,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_import_context(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 buf_len,
    /* [in] */ idl_byte buf[],
    /* [out] */ sec_login_handle_t *login_context,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_login_import_context_uid(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 buf_len,
    /* [in] */ idl_byte buf[],
    /* [in] */ signed32 uid,
    /* [out] */ sec_login_handle_t *login_context,
    /* [out] */ error_status_t *st
#endif
);
extern unsigned32 sec_login_inq_pag(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t *login_context,
    /* [out] */ error_status_t *st
#endif
);
extern sec_login_handle_t sec_login_become_initiator(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t my_login_context,
    /* [in] */ sec_id_delegation_type_t delegation_type_permitted,
    /* [in] */ sec_id_restriction_set_t *delegate_restrictions,
    /* [in] */ sec_id_restriction_set_t *target_restrictions,
    /* [in] */ sec_id_opt_req_t *optional_restrictions,
    /* [in] */ sec_id_opt_req_t *required_restrictions,
    /* [in] */ sec_id_compatibility_mode_t compatibility_mode,
    /* [out] */ error_status_t *error_status
#endif
);
extern sec_login_handle_t sec_login_become_delegate(
#ifdef IDL_PROTOTYPES
    /* [in] */ rpc_authz_cred_handle_t callers_identity,
    /* [in] */ sec_login_handle_t my_login_context,
    /* [in] */ sec_id_delegation_type_t delegation_type_permitted,
    /* [in] */ sec_id_restriction_set_t *delegate_restrictions,
    /* [in] */ sec_id_restriction_set_t *target_restrictions,
    /* [in] */ sec_id_opt_req_t *optional_restrictions,
    /* [in] */ sec_id_opt_req_t *required_restrictions,
    /* [in] */ sec_id_compatibility_mode_t compatibility_mode,
    /* [out] */ error_status_t *error_status
#endif
);
extern sec_login_handle_t sec_login_become_impersonator(
#ifdef IDL_PROTOTYPES
    /* [in] */ rpc_authz_cred_handle_t callers_identity,
    /* [in] */ sec_login_handle_t my_login_context,
    /* [in] */ sec_id_delegation_type_t delegation_type_permitted,
    /* [in] */ sec_id_restriction_set_t *delegate_restrictions,
    /* [in] */ sec_id_restriction_set_t *target_restrictions,
    /* [in] */ sec_id_opt_req_t *optional_restrictions,
    /* [in] */ sec_id_opt_req_t *required_restrictions,
    /* [out] */ error_status_t *error_status
#endif
);
extern sec_login_handle_t sec_login_set_extended_attrs(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t my_login_context,
    /* [in] */ unsigned32 num_attributes,
    /* [in] */ sec_attr_t attributes[],
    /* [out] */ error_status_t *error_status
#endif
);
extern sec_login_handle_t sec_login_disable_delegation(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ error_status_t *error_status
#endif
);
extern sec_cred_pa_handle_t sec_login_cred_get_initiator(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [out] */ error_status_t *error_status
#endif
);
extern sec_cred_pa_handle_t sec_login_cred_get_delegate(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [in, out] */ sec_cred_cursor_t *cursor,
    /* [out] */ error_status_t *error_status
#endif
);
extern void sec_login_cred_init_cursor(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_cred_cursor_t *cursor,
    /* [out] */ error_status_t *error_status
#endif
);
extern void sec_login_tkt_request_options(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_login_handle_t login_context,
    /* [in] */ sec_login_tkt_info_t *tkt_info,
    /* [out] */ error_status_t *status
#endif
);

#ifdef __cplusplus
    }

#endif
#endif

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: binding.h,v $
 * Revision 65.2  1999/02/03 22:44:19  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:46:29  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.4.2  1996/03/09  23:27:47  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:43:14  marty]
 *
 * Revision 1.1.4.1  1995/12/08  17:31:02  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  16:54:50  root]
 * 
 * Revision 1.1.2.4  1993/03/09  18:34:58  rps
 * 	Add name parms to site_bind_from_towerv
 * 	[1993/03/08  23:28:21  rps]
 * 
 * Revision 1.1.2.3  1992/12/29  13:28:53  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/28  20:48:03  zeliff]
 * 
 * Revision 1.1.2.2  1992/12/08  19:01:57  rps
 * 	Add tower support.
 * 	Fix api comments.
 * 	[1992/12/03  01:25:02  rps]
 * 
 * Revision 1.1  1992/01/19  14:55:35  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef sec_rgy_bind_v0_0_included
#define sec_rgy_bind_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef rpcbase_v0_0_included
#include <dce/rpcbase.h>
#endif
#ifndef rgybase_v0_0_included
#include <dce/rgybase.h>
#endif
#ifndef sec_login_v0_0_included
#include <dce/sec_login.h>
#endif
typedef enum {sec_rgy_bind_auth_none=0,
sec_rgy_bind_auth_dce=1} sec_rgy_bind_auth_info_type_t;
typedef struct  {
sec_rgy_bind_auth_info_type_t info_type;
union  {
/* case(s): 0 */
/* Empty arm */
/* case(s): 1 */
struct  {
unsigned32 authn_level;
unsigned32 authn_svc;
unsigned32 authz_svc;
sec_login_handle_t identity;
} dce_info;
} tagged_union;
} sec_rgy_bind_auth_info_t;
extern void sec_rgy_cell_bind(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_t *cell_name,
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_bind(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_t *site_name,
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_bind_update(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_t *site_name,
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_bind_query(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_t *site_name,
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_bind_from_towerv(
#ifdef IDL_PROTOTYPES
    /* [in] */ rpc_tower_vector_p_t towerv,
    /* [in] */ unsigned_char_t *cell_name,
    /* [in] */ unsigned_char_t *site_name,
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_binding_get_info(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [out] */ unsigned_char_t **cell_name,
    /* [out] */ unsigned_char_t **server_name,
    /* [out] */ unsigned_char_t **string_binding,
    /* [out] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_open(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_t *site_name,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_open_update(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_t *site_name,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_open_query(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_t *site_name,
    /* [out] */ sec_rgy_handle_t *context,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_get(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [out] */ unsigned_char_t **site_name,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_rgy_site_close(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [out] */ error_status_t *status
#endif
);
extern boolean32 sec_rgy_site_is_readonly(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context
#endif
);
extern boolean32 sec_rgy_enable_nsi(
#ifdef IDL_PROTOTYPES
    /* [in] */ boolean32 flag
#endif
);

#ifdef __cplusplus
    }

#endif
#endif

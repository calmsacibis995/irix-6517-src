/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: priv_attr_trig.h,v $
 * Revision 65.2  1999/02/03 22:44:21  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:46:32  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.4.2  1996/03/09  23:28:06  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:43:34  marty]
 *
 * Revision 1.1.4.1  1995/12/08  17:32:27  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  16:55:08  root]
 * 
 * 	Add delegate info to priv_attr_trig callouts.
 * 
 * Revision 1.1.2.4  1994/09/28  20:50:15  greg
 * 	CR11843: Include delegation chain in priv_attr_trig_query interface.
 * 	[1994/09/28  17:59:58  greg]
 * 
 * Revision 1.1.2.3  1994/08/25  16:19:40  mdf
 * 	final changes based on builds
 * 	[1994/08/25  16:19:27  mdf]
 * 
 * 	bumped version number
 * 	[1994/08/24  19:08:51  mdf]
 * 
 * 	Ensure the  DCE 1.1 version of priv_attr_trig.idl
 * 	defines the protocol the way we expect it to work for a while,
 * 	minimally.
 * 	[1994/08/24  18:58:44  mdf]
 * 
 * Revision 1.1.2.2  1994/08/10  19:21:50  annie
 * 	expand copyright with OSF copyright text
 * 	[1994/08/10  17:16:06  annie]
 * 
 * Revision 1.1.2.1  1994/07/15  15:00:06  mdf
 * 	Hewlett Packard Security Code Drop
 * 	[1994/07/14  17:59:43  mdf]
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef priv_attr_trig_v1_0_included
#define priv_attr_trig_v1_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef sec_attr_base_v0_0_included
#include <dce/sec_attr_base.h>
#endif
#ifndef sec_base_v0_0_included
#include <dce/sec_base.h>
#endif
typedef signed32 priv_attr_trig_timeval_sec_t;
typedef struct  {
uuid_t source;
signed32 object_handle;
signed32 entry_handle;
boolean32 valid;
} priv_attr_trig_cursor_t;
extern void priv_attr_trig_query(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_id_foreign_t principal,
    /* [in] */ unsigned32 num_upstream_delegates,
    /* [in] */ sec_id_foreign_t upstream_delegates[],
    /* [in, out] */ priv_attr_trig_cursor_t *cursor,
    /* [in] */ unsigned32 num_attr_keys,
    /* [in] */ unsigned32 space_avail,
    /* [in] */ sec_attr_t attr_keys[],
    /* [out] */ unsigned32 *num_returned,
    /* [out] */ sec_attr_t attrs[],
    /* [out] */ priv_attr_trig_timeval_sec_t time_to_live[],
    /* [out] */ unsigned32 *num_left,
    /* [out] */ error_status_t *st
#endif
);
typedef struct priv_attr_trig_v1_0_epv_t {
void (*priv_attr_trig_query)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ sec_id_foreign_t principal,
    /* [in] */ unsigned32 num_upstream_delegates,
    /* [in] */ sec_id_foreign_t upstream_delegates[],
    /* [in, out] */ priv_attr_trig_cursor_t *cursor,
    /* [in] */ unsigned32 num_attr_keys,
    /* [in] */ unsigned32 space_avail,
    /* [in] */ sec_attr_t attr_keys[],
    /* [out] */ unsigned32 *num_returned,
    /* [out] */ sec_attr_t attrs[],
    /* [out] */ priv_attr_trig_timeval_sec_t time_to_live[],
    /* [out] */ unsigned32 *num_left,
    /* [out] */ error_status_t *st
#endif
);
} priv_attr_trig_v1_0_epv_t;
extern rpc_if_handle_t priv_attr_trig_v1_0_c_ifspec;
extern rpc_if_handle_t priv_attr_trig_v1_0_s_ifspec;

#ifdef __cplusplus
    }

#else
#endif
#endif

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: secidmap.h,v $
 * Revision 65.2  1999/02/03 22:44:24  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:46:42  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.4.2  1996/03/09  23:29:24  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:44:46  marty]
 *
 * Revision 1.1.4.1  1995/12/08  17:38:29  root
 * 	Submit OSF/DCE 1.2.1
 * 
 * 	HP revision /main/HPDCE02/1  1995/09/08  17:26 UTC  sommerfeld
 * 	Rename functions.
 * 	[1995/08/30  14:34 UTC  sommerfeld  /main/sommerfeld_dfsperf/3]
 * 
 * 	Add group-membership caching, too, in both old and new flavors.
 * 	[1995/08/14  15:22 UTC  sommerfeld  /main/sommerfeld_dfsperf/2]
 * 
 * 	Performance: add new API's which let secidmap do the rca_site_bind IFF
 * 	it's needed.
 * 	[1995/08/10  03:09 UTC  sommerfeld  /main/sommerfeld_dfsperf/1]
 * 
 * Revision 1.1.2.2  1992/12/29  13:54:26  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/28  20:22:21  zeliff]
 * 
 * Revision 1.1  1992/01/19  14:55:09  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef secidmap_v0_0_included
#define secidmap_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef rgybase_v0_0_included
#include <dce/rgybase.h>
#endif
#ifndef sec_rgy_bind_v0_0_included
#include <dce/binding.h>
#endif
extern void sec_id_parse_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [in] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ uuid_t *cell_idp,
    /* [out] */ sec_rgy_name_t princ_namep,
    /* [out] */ uuid_t *princ_idp,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_id_gen_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [in] */ uuid_t *cell_idp,
    /* [in] */ uuid_t *princ_idp,
    /* [out] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ sec_rgy_name_t princ_namep,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_id_parse_group(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [in] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ uuid_t *cell_idp,
    /* [out] */ sec_rgy_name_t group_namep,
    /* [out] */ uuid_t *group_idp,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_id_gen_group(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [in] */ uuid_t *cell_idp,
    /* [in] */ uuid_t *group_idp,
    /* [out] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ sec_rgy_name_t group_namep,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_id_global_parse_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [in] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ uuid_t *cell_idp,
    /* [out] */ sec_rgy_name_t princ_namep,
    /* [out] */ uuid_t *princ_idp,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_id_global_gen_name(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [in] */ uuid_t *cell_idp,
    /* [in] */ uuid_t *princ_idp,
    /* [out] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ sec_rgy_name_t princ_namep,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_id_global_parse_group(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [in] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ uuid_t *cell_idp,
    /* [out] */ sec_rgy_name_t group_namep,
    /* [out] */ uuid_t *group_idp,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_id_global_gen_group(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [in] */ uuid_t *cell_idp,
    /* [in] */ uuid_t *group_idp,
    /* [out] */ sec_rgy_name_t global_name,
    /* [out] */ sec_rgy_name_t cell_namep,
    /* [out] */ sec_rgy_name_t group_namep,
    /* [out] */ error_status_t *status
#endif
);
extern boolean32 sec_id_global_is_group_member(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_bind_auth_info_t *auth_info,
    /* [in] */ sec_rgy_name_t group_name,
    /* [in] */ sec_rgy_name_t princ_name,
    /* [out] */ error_status_t *status
#endif
);
extern boolean32 sec_id_is_group_member(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_rgy_handle_t context,
    /* [in] */ sec_rgy_name_t group_name,
    /* [in] */ sec_rgy_name_t princ_name,
    /* [out] */ error_status_t *status
#endif
);

#ifdef __cplusplus
    }

#endif
#endif

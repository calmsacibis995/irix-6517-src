/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: daclif.h,v $
 * Revision 65.2  1999/02/03 22:44:19  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:46:30  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.8.2  1996/03/09  23:27:48  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:43:15  marty]
 *
 * Revision 1.1.8.1  1995/12/08  17:31:06  root
 * 	Submit OSF/DCE 1.2.1
 * 
 * 	HP revision /main/HPDCE02/1  1995/09/29  20:31 UTC  tatsu_s
 * 	Submitted the fix for CHFts16512.
 * 
 * 	HP revision /main/tatsu_s.dced_local.b0/3  1995/09/23  00:09 UTC  tatsu_s
 * 	Removed #ifndef.
 * 
 * 	HP revision /main/tatsu_s.dced_local.b0/2  1995/09/20  13:07 UTC  tatsu_s
 * 	Fixed sec_acl_bind_local()'s prototype.
 * 
 * 	HP revision /main/tatsu_s.dced_local.b0/1  1995/09/13  20:20 UTC  tatsu_s
 * 	Added sec_acl_bind_local().
 * 	[1995/12/08  16:54:51  root]
 * 
 * Revision 1.1.6.1  1994/01/28  23:10:42  burati
 * 	Add sec_acl_bind_auth (dlg_bl1)
 * 	[1994/01/18  20:51:46  burati]
 * 
 * Revision 1.1.4.3  1992/12/29  13:28:55  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/28  20:48:08  zeliff]
 * 
 * Revision 1.1.4.2  1992/11/16  18:29:55  burati
 * 	CR4812 Add authentication types so handle can keep track of auth info
 * 	[1992/11/14  00:41:06  burati]
 * 
 * Revision 1.1.2.2  1992/05/08  14:48:24  burati
 * 	Clean up comments
 * 	[1992/05/07  15:15:04  burati]
 * 
 * 	Add sec_acl_get_mgr_types_semantics(...)
 * 	Add sec_acl_calc_mask(...)
 * 	[1992/04/29  03:04:55  burati]
 * 
 * Revision 1.1  1992/01/19  14:55:23  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef sec_acl_if_v0_0_included
#define sec_acl_if_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef sec_acl_base_v0_0_included
#include <dce/aclbase.h>
#endif
#ifndef sec_login_v0_0_included
#include <dce/sec_login.h>
#endif
typedef enum {sec_acl_bind_auth_none=0,
sec_acl_bind_auth_dce=1} sec_acl_bind_auth_info_type_t;
typedef struct  {
sec_acl_bind_auth_info_type_t info_type;
union  {
/* case(s): 0 */
/* Empty arm */
/* case(s): 1 */
struct  {
unsigned32 authn_lvl;
unsigned32 authn_svc;
unsigned32 authz_svc;
sec_login_handle_t identity;
} dce_info;
} tagged_union;
} sec_acl_bind_auth_info_t;
extern void sec_acl_bind(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char *entry_name,
    /* [in] */ boolean32 bind_to_entry,
    /* [out] */ sec_acl_handle_t *h,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_acl_bind_auth(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char *entry_name,
    /* [in] */ boolean32 bind_to_entry,
    /* [in] */ sec_acl_bind_auth_info_t *auth_info,
    /* [out] */ sec_acl_handle_t *h,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_acl_bind_to_addr(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char *site_addr,
    /* [in] */ sec_acl_component_name_t component_name,
    /* [out] */ sec_acl_handle_t *h,
    /* [out] */ error_status_t *status
#endif
);
extern void sec_acl_lookup(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [out] */ sec_acl_list_t *sec_acl_list,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_replace(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ sec_acl_list_t *sec_acl_list,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_get_access(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [out] */ sec_acl_permset_t *net_rights,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_acl_test_access(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_acl_permset_t desired_permset,
    /* [out] */ error_status_t *st
#endif
);
extern boolean32 sec_acl_test_access_on_behalf(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ sec_id_pac_t *subject,
    /* [in] */ sec_acl_permset_t desired_permset,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_get_manager_types(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ unsigned32 *num_types,
    /* [out] */ uuid_t manager_types[],
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_calc_mask(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_acl_list_t *sec_acl_list,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_get_printstring(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ uuid_t *manager_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ uuid_t *manager_type_chain,
    /* [out] */ sec_acl_printstring_t *manager_info,
    /* [out] */ boolean32 *tokenize,
    /* [out] */ unsigned32 *total_num_printstrings,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ sec_acl_printstring_t printstrings[],
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_release(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in, out] */ sec_acl_t *sec_acl,
    /* [out] */ error_status_t *st
#endif
);
extern error_status_t sec_acl_get_error_info(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h
#endif
);
extern void sec_acl_release_handle(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ sec_acl_handle_t *h,
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_get_mgr_types_semantics(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_acl_handle_t h,
    /* [in] */ sec_acl_type_t sec_acl_type,
    /* [in] */ unsigned32 size_avail,
    /* [out] */ unsigned32 *size_used,
    /* [out] */ unsigned32 *num_types,
    /* [out] */ uuid_t manager_types[],
    /* [out] */ sec_acl_posix_semantics_t posix_semantics[],
    /* [out] */ error_status_t *st
#endif
);
extern void sec_acl_bind_local(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned32 if_version,
    /* [in] */ idl_void_p_t lepv,
    /* [in] */ idl_char *entry_name,
    /* [out] */ sec_acl_handle_t *h,
    /* [out] */ error_status_t *status
#endif
);

#ifdef __cplusplus
    }

#endif
#endif

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: keymgmt.h,v $
 * Revision 65.2  1999/02/03 22:44:20  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:46:30  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.4.2  1996/03/09  23:27:55  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:43:24  marty]
 *
 * Revision 1.1.4.1  1995/12/08  17:31:36  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  16:54:57  root]
 * 
 * Revision 1.1.2.3  1992/12/29  13:29:14  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/28  20:48:17  zeliff]
 * 
 * Revision 1.1.2.2  1992/11/29  01:01:20  burati
 * 	CR4576 Import rpcbase.idl so client app doesn't have to
 * 	[1992/11/27  22:49:18  burati]
 * 
 * Revision 1.1  1992/01/19  14:54:53  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */
/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef sec_key_mgmt_v0_0_included
#define sec_key_mgmt_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef lbase_v0_0_included
#include <dce/lbase.h>
#endif
#ifndef rgynbase_v0_0_included
#include <dce/rgynbase.h>
#endif
#ifndef rpcbase_v0_0_included
#include <dce/rpcbase.h>
#endif
typedef unsigned32 sec_key_mgmt_authn_service;
extern void sec_key_mgmt_change_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ unsigned32 key_vno,
    /* [in] */ idl_void_p_t keydata,
    /* [out] */ sec_timeval_period_t *garbage_collect_time,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_delete_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ unsigned32 key_vno,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_delete_key_type(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ idl_void_p_t keytype,
    /* [in] */ unsigned32 key_vno,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_free_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_void_p_t keydata,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_get_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ unsigned32 key_vno,
    /* [out] */ idl_void_p_t *keydata,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_get_next_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_void_p_t cursor,
    /* [out] */ idl_char **principal_name,
    /* [out] */ unsigned32 *key_vno,
    /* [out] */ idl_void_p_t *keydata,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_initialize_cursor(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ idl_void_p_t keytype,
    /* [out] */ idl_void_p_t *cursor,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_release_cursor(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_void_p_t *cursor,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_set_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ unsigned32 key_vno,
    /* [in] */ idl_void_p_t keydata,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_garbage_collect(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_manage_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_get_next_kvno(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ idl_void_p_t keytype,
    /* [out] */ unsigned32 *key_vno,
    /* [out] */ unsigned32 *next_key_vno,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_gen_rand_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ idl_void_p_t keytype,
    /* [in] */ unsigned32 key_vno,
    /* [out] */ idl_void_p_t *keydata,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_generate_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ unsigned32 key_vno,
    /* [out] */ sec_timeval_period_t *garbage_collect_time,
    /* [out] */ error_status_t *err
#endif
);
extern void sec_key_mgmt_get_nth_key(
#ifdef IDL_PROTOTYPES
    /* [in] */ sec_key_mgmt_authn_service authn_service,
    /* [in] */ idl_void_p_t arg,
    /* [in] */ idl_char *principal_name,
    /* [in] */ signed32 index,
    /* [out] */ unsigned32 *key_vno,
    /* [out] */ idl_void_p_t *keydata,
    /* [out] */ error_status_t *err
#endif
);

#ifdef __cplusplus
    }

#endif
#endif

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE in the
 * src directory for the full copyright text.
 */
/*
 * HISTORY
 * $Log: uuid.h,v $
 * Revision 65.2  1999/02/04 22:37:21  mek
 * Provide C style include file for IRIX kernel integration.
 *
 * Revision 65.1  1997/10/20 19:16:21  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.4.2  1996/03/09  23:26:57  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:42:29  marty]
 *
 * Revision 1.1.4.1  1995/12/08  00:23:51  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  00:01:24  root]
 * 
 * Revision 1.1.2.3  1993/01/04  00:10:43  bbelch
 * 	Embedding copyright notice
 * 	[1993/01/03  20:16:26  bbelch]
 * 
 * Revision 1.1.2.2  1992/12/23  21:21:34  zeliff
 * 	Embedding copyright notice
 * 	[1992/12/23  15:48:09  zeliff]
 * 
 * Revision 1.1  1992/01/19  03:13:40  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */

/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef uuid_v0_0_included
#define uuid_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef lbase_v0_0_included
#include <dce/lbase.h>
#endif
#define uuid_c_version (1)
#define uuid_c_version_highest (2)
typedef struct  {
unsigned32 count;
uuid_p_t uuid[1];
} uuid_vector_t;
typedef uuid_vector_t *uuid_vector_p_t;
#define uuid_s_ok error_status_ok
extern void uuid_create(
#ifdef IDL_PROTOTYPES
    /* [out] */ uuid_t *uuid,
    /* [out] */ unsigned32 *status
#endif
);
extern void uuid_create_nil(
#ifdef IDL_PROTOTYPES
    /* [out] */ uuid_t *uuid,
    /* [out] */ unsigned32 *status
#endif
);
extern void uuid_to_string(
#ifdef IDL_PROTOTYPES
    /* [in] */ uuid_p_t uuid,
    /* [out] */ unsigned_char_p_t *uuid_string,
    /* [out] */ unsigned32 *status
#endif
);
extern void uuid_from_string(
#ifdef IDL_PROTOTYPES
    /* [in] */ unsigned_char_p_t uuid_string,
    /* [out] */ uuid_t *uuid,
    /* [out] */ unsigned32 *status
#endif
);
extern boolean32 uuid_equal(
#ifdef IDL_PROTOTYPES
    /* [in] */ uuid_p_t uuid1,
    /* [in] */ uuid_p_t uuid2,
    /* [out] */ unsigned32 *status
#endif
);
extern boolean32 uuid_is_nil(
#ifdef IDL_PROTOTYPES
    /* [in] */ uuid_p_t uuid,
    /* [out] */ unsigned32 *status
#endif
);
extern signed32 uuid_compare(
#ifdef IDL_PROTOTYPES
    /* [in] */ uuid_p_t uuid1,
    /* [in] */ uuid_p_t uuid2,
    /* [out] */ unsigned32 *status
#endif
);
extern unsigned16 uuid_hash(
#ifdef IDL_PROTOTYPES
    /* [in] */ uuid_p_t uuid,
    /* [out] */ unsigned32 *status
#endif
);

#ifdef __cplusplus
    }

#endif
#endif

/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994, 1996 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 * IDL specification for remote serviceability interface.
 */

/*
 * HISTORY
 * $Log: service.h,v $
 * Revision 65.2  1999/02/03 21:24:52  mek
 * Convert from IDL to C style include format.
 *
 * Revision 65.1  1997/10/20 19:15:08  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.6.2  1996/03/09  23:11:18  marty
 * 	Update OSF copyright year
 * 	[1996/03/09  22:28:42  marty]
 *
 * Revision 1.1.6.1  1995/12/08  21:38:00  root
 * 	Submit OSF/DCE 1.2.1
 * 	[1995/12/08  18:09:51  root]
 * 
 * Revision 1.1.4.1  1994/06/09  16:06:12  devsrc
 * 	cr10892 - fix copyright
 * 	[1994/06/09  15:50:46  devsrc]
 * 
 * Revision 1.1.2.4  1993/11/12  20:29:30  rsalz
 * 	Use "tagged_union" as the union tag.
 * 	[1993/11/12  20:29:10  rsalz]
 * 
 * Revision 1.1.2.3  1993/09/02  17:42:57  rsalz
 * 	Change dce_svc_routings to take a flag indicating if it
 * 	should return standard routings or debug settings.
 * 	Turn dce_svc_g_memory into an array of structures that keep
 * 	the text and an "is a debug message" indicator.
 * 	[1993/09/02  17:41:36  rsalz]
 * 
 * Revision 1.1.2.2  1993/08/16  18:09:12  rsalz
 * 	Initial release
 * 	[1993/08/16  18:04:05  rsalz]
 * 
 * $EndLog$
 */

/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef serviceability_v1_0_included
#define serviceability_v1_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
typedef idl_char *dce_svc_string_t;
typedef struct dce_svc_stringarray_s_t {
idl_long_int tab_size;
dce_svc_string_t *table;
} dce_svc_stringarray_t;
typedef struct dce_svc_subcomp_s_t {
dce_svc_string_t sc_name;
dce_svc_string_t sc_descr;
idl_ulong_int sc_descr_msgid;
idl_ulong_int sc_level;
} dce_svc_subcomp_t;
typedef struct dce_svc_subcomparray_s_t {
idl_long_int tab_size;
dce_svc_subcomp_t *table;
} dce_svc_subcomparray_t;
extern void dce_svc_set_route(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ idl_char *where,
    /* [out] */ error_status_t *status
#endif
);
extern void dce_svc_set_dbg_route(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ idl_char *where,
    /* [out] */ error_status_t *status
#endif
);
extern void dce_svc_set_dbg_levels(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ idl_char *flags,
    /* [out] */ error_status_t *status
#endif
);
extern void dce_svc_inq_components(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [out] */ dce_svc_stringarray_t *table,
    /* [out] */ error_status_t *status
#endif
);
extern void dce_svc_inq_table(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ dce_svc_string_t component,
    /* [out] */ dce_svc_subcomparray_t *table,
    /* [out] */ error_status_t *status
#endif
);
extern void dce_svc_inq_routings(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ boolean32 debug_values,
    /* [out] */ dce_svc_stringarray_t *table,
    /* [out] */ error_status_t *status
#endif
);
extern void dce_svc_filter_control(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ dce_svc_string_t component,
    /* [in] */ idl_long_int arg_size,
    /* [in] */ idl_byte *argument,
    /* [out] */ error_status_t *status
#endif
);
#define dce_svc_stats_unknown (0)
typedef struct dce_svc_stats_unknown_s_t {
idl_long_int data_size;
idl_byte *data;
} dce_svc_stats_unknown_t;
typedef struct  {
idl_long_int stats_type;
union  {
/* case(s): 0 */
dce_svc_stats_unknown_t stats_unknown;
} tagged_union;
} dce_svc_stats_t;
extern void dce_svc_inq_stats(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [out] */ dce_svc_stats_t *stats,
    /* [out] */ error_status_t *status
#endif
);
typedef struct serviceability_v1_0_epv_t {
void (*dce_svc_set_route)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ idl_char *where,
    /* [out] */ error_status_t *status
#endif
);
void (*dce_svc_set_dbg_route)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ idl_char *where,
    /* [out] */ error_status_t *status
#endif
);
void (*dce_svc_set_dbg_levels)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ idl_char *flags,
    /* [out] */ error_status_t *status
#endif
);
void (*dce_svc_inq_components)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [out] */ dce_svc_stringarray_t *table,
    /* [out] */ error_status_t *status
#endif
);
void (*dce_svc_inq_table)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ dce_svc_string_t component,
    /* [out] */ dce_svc_subcomparray_t *table,
    /* [out] */ error_status_t *status
#endif
);
void (*dce_svc_inq_routings)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ boolean32 debug_values,
    /* [out] */ dce_svc_stringarray_t *table,
    /* [out] */ error_status_t *status
#endif
);
void (*dce_svc_filter_control)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [in] */ dce_svc_string_t component,
    /* [in] */ idl_long_int arg_size,
    /* [in] */ idl_byte *argument,
    /* [out] */ error_status_t *status
#endif
);
void (*dce_svc_inq_stats)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t handle,
    /* [out] */ dce_svc_stats_t *stats,
    /* [out] */ error_status_t *status
#endif
);
} serviceability_v1_0_epv_t;
extern rpc_if_handle_t serviceability_v1_0_c_ifspec;
extern rpc_if_handle_t serviceability_v1_0_s_ifspec;

#ifdef __cplusplus
    }

#else
#endif
#endif

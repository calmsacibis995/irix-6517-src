/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: ftserver_proc.h,v $
 * Revision 65.2  1999/02/04 19:19:40  mek
 * Provide C style include file for IRIX kernel integration.
 *
 * Revision 65.1  1997/10/20 19:20:09  jdoak
 * *** empty log message ***
 *
 * $EndLog$
 */

/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef FTSERVER_v4_0_included
#define FTSERVER_v4_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef ftserver_data_v0_0_included
#include <dcedfs/ftserver_data.h>
#endif
extern error_status_t FTSERVER_CreateTrans(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *fsIdp,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ unsigned32 flags,
    /* [out] */ unsigned32 *transp
#endif
);
extern error_status_t FTSERVER_AbortTrans(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId
#endif
);
extern error_status_t FTSERVER_DeleteTrans(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId
#endif
);
extern error_status_t FTSERVER_CreateVolume(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ volNamep_string (*volNamep),
    /* [in] */ unsigned32 type,
    /* [in] */ unsigned32 flags,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *parVolIdp,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdp,
    /* [out] */ unsigned32 *transIdp
#endif
);
extern error_status_t FTSERVER_DeleteVolume(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId
#endif
);
extern error_status_t FTSERVER_Dump(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 fromTransId,
    /* [in] */ ftserver_Date *dumpDatep,
    /* [out] */ pipe_t *dataPipeP
#endif
);
extern error_status_t FTSERVER_Restore(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 toTransId,
    /* [in] */ unsigned32 flags,
    /* [in] */ pipe_t *dataPipeP
#endif
);
extern error_status_t FTSERVER_Forward(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 fromTransId,
    /* [in] */ ftserver_Date *dumpDatep,
    /* [in] */ ftserver_dest *dest,
    /* [in] */ unsigned32 restoreFlags,
    /* [in] */ unsigned32 toTransId
#endif
);
extern error_status_t FTSERVER_Clone(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ unsigned32 newType,
    /* [in] */ volNamep_string (*newName),
    /* [in, out] */ /* Type must appear in user header or IDL */ afs_hyper_t *volumeId
#endif
);
extern error_status_t FTSERVER_ReClone(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cloneId
#endif
);
extern error_status_t FTSERVER_GetFlags(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [out] */ unsigned32 *flags
#endif
);
extern error_status_t FTSERVER_SetFlags(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ unsigned32 flags
#endif
);
extern error_status_t FTSERVER_GetStatus(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [out] */ ftserver_status *statusP
#endif
);
extern error_status_t FTSERVER_SetStatus(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ unsigned32 mask,
    /* [in] */ ftserver_status *statusP,
    /* [in] */ unsigned32 spare1
#endif
);
extern error_status_t FTSERVER_ListVolumes(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ ftserver_iterator *inCookie,
    /* [out] */ ftserver_iterator *outCookie,
    /* [out] */ ftserver_statEntries *statEntries
#endif
);
extern error_status_t FTSERVER_ListAggregates(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ ftserver_iterator *inCookie,
    /* [out] */ ftserver_iterator *outCookie,
    /* [out] */ ftserver_aggrEntries *aggrEntriesP
#endif
);
extern error_status_t FTSERVER_AggregateInfo(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 aggrId,
    /* [out] */ struct ftserver_aggrInfo *aggrInfoP
#endif
);
extern error_status_t FTSERVER_Monitor(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [out] */ ftserver_transEntries *aggrInfoP
#endif
);
extern error_status_t FTSERVER_GetOneVolStatus(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *fsIdp,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ unsigned32 spare1,
    /* [out] */ ftserver_status *statusP
#endif
);
extern error_status_t FTSERVER_GetServerInterfaces(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ dfs_interfaceList *serverInterfacesP
#endif
);
extern error_status_t FTSERVER_SwapIDs(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transIdA,
    /* [in] */ unsigned32 transIdB,
    /* [in] */ unsigned32 spare1,
    /* [out] */ unsigned32 *spare2p
#endif
);
typedef struct FTSERVER_v4_0_epv_t {
error_status_t (*FTSERVER_CreateTrans)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *fsIdp,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ unsigned32 flags,
    /* [out] */ unsigned32 *transp
#endif
);
error_status_t (*FTSERVER_AbortTrans)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId
#endif
);
error_status_t (*FTSERVER_DeleteTrans)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId
#endif
);
error_status_t (*FTSERVER_CreateVolume)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ volNamep_string (*volNamep),
    /* [in] */ unsigned32 type,
    /* [in] */ unsigned32 flags,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *parVolIdp,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdp,
    /* [out] */ unsigned32 *transIdp
#endif
);
error_status_t (*FTSERVER_DeleteVolume)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId
#endif
);
error_status_t (*FTSERVER_Dump)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 fromTransId,
    /* [in] */ ftserver_Date *dumpDatep,
    /* [out] */ pipe_t *dataPipeP
#endif
);
error_status_t (*FTSERVER_Restore)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 toTransId,
    /* [in] */ unsigned32 flags,
    /* [in] */ pipe_t *dataPipeP
#endif
);
error_status_t (*FTSERVER_Forward)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 fromTransId,
    /* [in] */ ftserver_Date *dumpDatep,
    /* [in] */ ftserver_dest *dest,
    /* [in] */ unsigned32 restoreFlags,
    /* [in] */ unsigned32 toTransId
#endif
);
error_status_t (*FTSERVER_Clone)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ unsigned32 newType,
    /* [in] */ volNamep_string (*newName),
    /* [in, out] */ /* Type must appear in user header or IDL */ afs_hyper_t *volumeId
#endif
);
error_status_t (*FTSERVER_ReClone)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cloneId
#endif
);
error_status_t (*FTSERVER_GetFlags)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [out] */ unsigned32 *flags
#endif
);
error_status_t (*FTSERVER_SetFlags)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ unsigned32 flags
#endif
);
error_status_t (*FTSERVER_GetStatus)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [out] */ ftserver_status *statusP
#endif
);
error_status_t (*FTSERVER_SetStatus)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transId,
    /* [in] */ unsigned32 mask,
    /* [in] */ ftserver_status *statusP,
    /* [in] */ unsigned32 spare1
#endif
);
error_status_t (*FTSERVER_ListVolumes)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ ftserver_iterator *inCookie,
    /* [out] */ ftserver_iterator *outCookie,
    /* [out] */ ftserver_statEntries *statEntries
#endif
);
error_status_t (*FTSERVER_ListAggregates)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ ftserver_iterator *inCookie,
    /* [out] */ ftserver_iterator *outCookie,
    /* [out] */ ftserver_aggrEntries *aggrEntriesP
#endif
);
error_status_t (*FTSERVER_AggregateInfo)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 aggrId,
    /* [out] */ struct ftserver_aggrInfo *aggrInfoP
#endif
);
error_status_t (*FTSERVER_Monitor)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [out] */ ftserver_transEntries *aggrInfoP
#endif
);
error_status_t (*FTSERVER_GetOneVolStatus)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *fsIdp,
    /* [in] */ unsigned32 aggrId,
    /* [in] */ unsigned32 spare1,
    /* [out] */ ftserver_status *statusP
#endif
);
error_status_t (*FTSERVER_GetServerInterfaces)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ dfs_interfaceList *serverInterfacesP
#endif
);
error_status_t (*FTSERVER_SwapIDs)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 transIdA,
    /* [in] */ unsigned32 transIdB,
    /* [in] */ unsigned32 spare1,
    /* [out] */ unsigned32 *spare2p
#endif
);
} FTSERVER_v4_0_epv_t;
extern rpc_if_handle_t FTSERVER_v4_0_c_ifspec;
extern rpc_if_handle_t FTSERVER_v4_0_s_ifspec;

#ifdef __cplusplus
    }

#else
#endif
#endif

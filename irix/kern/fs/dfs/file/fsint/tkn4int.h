/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: tkn4int.h,v $
 * Revision 65.2  1999/02/04 19:19:40  mek
 * Provide C style include file for IRIX kernel integration.
 *
 * Revision 65.1  1997/10/20 19:20:28  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.60.1  1996/10/02  17:47:11  damon
 * 	Newest DFS from Transarc
 * 	[1996/10/01  18:37:38  damon]
 *
 * Revision 1.1.55.2  1994/06/09  14:08:04  annie
 * 	fixed copyright in src/file
 * 	[1994/06/09  13:22:59  annie]
 * 
 * Revision 1.1.55.1  1994/02/04  20:18:52  devsrc
 * 	Merged from 1.0.3a to 1.1
 * 	[1994/02/04  15:13:08  devsrc]
 * 
 * Revision 1.1.53.1  1993/12/07  17:24:25  jaffe
 * 	1.0.3a update from Transarc
 * 	[1993/12/03  15:23:52  jaffe]
 * 
 * Revision 1.1.4.6  1993/01/21  19:36:20  zeliff
 * 	Embedding copyright notices
 * 	[1993/01/19  19:50:05  zeliff]
 * 
 * Revision 1.1.4.5  1993/01/13  17:49:46  shl
 * 	Transarc delta: cfe-ot4029-catch-more-unportable-types 1.1
 * 	  Selected comments:
 * 	    Convert even the debugging interface to more obviously portable types.
 * 	    Use unsigned32 rather than unsigned long in the .idl file.
 * 	[1993/01/12  20:59:03  shl]
 * 
 * Revision 1.1.4.4  1992/11/24  17:48:28  bolinger
 * 	Change include file install directory from .../afs to .../dcedfs.
 * 	[1992/11/22  17:59:36  bolinger]
 * 
 * Revision 1.1.4.3  1992/09/25  18:14:06  jaffe
 * 	Transarc delta: kazar-ot4474-sys-v-locking-async-grant 1.2
 * 	  Selected comments:
 * 	    start work on async grant
 * 	    add new call to revoke API
 * 	    finish work on async grant
 * 	[1992/09/23  19:11:07  jaffe]
 * 
 * Revision 1.1.4.2  1992/08/31  19:46:10  jaffe
 * 	Transarc delta: cfe-ot4029-portable-rpc-data-types 1.2
 * 	  Selected comments:
 * 	    If ``long'' could possibly mean ``64 bits'' any time soon, we need to keep
 * 	    our RPC interfaces from breaking.
 * 	    see above
 * 	    More of the same.  Forgot a couple of .idl files, and needed to change
 * 	    a couple of procedure signatures to match.
 * 	[1992/08/30  02:27:18  jaffe]
 * 
 * Revision 1.1.2.2  1992/05/20  19:53:12  mason
 * 	Transarc delta: cfe-ot2605-tsr-i-f-changes 1.5
 * 	  Files modified:
 * 	    cm: cm_scache.h
 * 	    config: common_data.acf, common_data.idl, common_def.h
 * 	    fshost: fshs_errs.et
 * 	    fsint: afs4int.acf, afs4int.idl, tkn4int.acf, tkn4int.idl
 * 	    host: hs_errs.et; px: px_repops.c; rep: rep_main.c, repser.h
 * 	    userInt/fts: volc_tokens.c; xvolume: volume.h
 * 	  Selected comments:
 * 	    This delta should encompass the interface changes associated with token
 * 	    state recovery (over server crashes, network partitions, fileset moves,
 * 	    and other things).
 * 	    This delta now captures the interface changes for real.  It includes RPC interface
 * 	    changes, new error codes, and new status bits.  It also includes incomplete changes
 * 	    to fts to support the new interface.
 * 	    Specify the new RPC procedure and the changed args to TKN_InitTokenState,
 * 	    and some TKN_FLAG_xxx flags.
 * 	    More TSR interface fallout, mostly to the new model.
 * 	    Fix a merge error.
 * 	    Fixing more merge and syntax errors
 * 	[1992/05/20  11:32:03  mason]
 * 
 * Revision 1.1  1992/01/19  02:51:20  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */

/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef TKN4Int_v4_0_included
#define TKN4Int_v4_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef common_data_v0_0_included
#include <dcedfs/common_data.h>
#endif
extern error_status_t TKN_Probe(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h
#endif
);
#define TKN_FLAG_BACK_UP (1)
#define TKN_FLAG_CRASHED (2)
#define TKN_FLAG_DISALLOW_SAME (4)
#define TKN_FLAG_NEW_IF (8)
extern error_status_t TKN_InitTokenState(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 Flags,
    /* [in] */ unsigned32 hostLifeGuarantee,
    /* [in] */ unsigned32 hostRPCGuarantee,
    /* [in] */ unsigned32 deadServerTimeout,
    /* [in] */ unsigned32 serverRestartEpoch,
    /* [in] */ unsigned32 serverSizesAttrs,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5,
    /* [out] */ unsigned32 *spare6
#endif
);
extern error_status_t TKN_TokenRevoke(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ afsRevokes *revokeDescp
#endif
);
extern error_status_t TKN_GetCellName(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *Cellp,
    /* [out] */ NameString_t CellNamep
#endif
);
extern error_status_t TKN_GetLock(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 index,
    /* [out] */ afsDBLock *lock
#endif
);
extern error_status_t TKN_GetCE(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 index,
    /* [out] */ afsDBCacheEntry *ce
#endif
);
extern error_status_t TKN_GetServerInterfaces(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ dfs_interfaceList *serverInterfacesP
#endif
);
extern error_status_t TKN_SetParams(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 Flags,
    /* [in, out] */ afsConnParams *paramsP
#endif
);
extern error_status_t TKN_AsyncGrant(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ afsFid *grantedFileIDp,
    /* [in] */ /* Type must appear in user header or IDL */ afs_token_t *grantedTokenP,
    /* [in] */ idl_long_int grantedRequestID
#endif
);
typedef struct TKN4Int_v4_0_epv_t {
error_status_t (*TKN_Probe)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h
#endif
);
error_status_t (*TKN_InitTokenState)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 Flags,
    /* [in] */ unsigned32 hostLifeGuarantee,
    /* [in] */ unsigned32 hostRPCGuarantee,
    /* [in] */ unsigned32 deadServerTimeout,
    /* [in] */ unsigned32 serverRestartEpoch,
    /* [in] */ unsigned32 serverSizesAttrs,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5,
    /* [out] */ unsigned32 *spare6
#endif
);
error_status_t (*TKN_TokenRevoke)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ afsRevokes *revokeDescp
#endif
);
error_status_t (*TKN_GetCellName)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *Cellp,
    /* [out] */ NameString_t CellNamep
#endif
);
error_status_t (*TKN_GetLock)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 index,
    /* [out] */ afsDBLock *lock
#endif
);
error_status_t (*TKN_GetCE)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 index,
    /* [out] */ afsDBCacheEntry *ce
#endif
);
error_status_t (*TKN_GetServerInterfaces)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ dfs_interfaceList *serverInterfacesP
#endif
);
error_status_t (*TKN_SetParams)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 Flags,
    /* [in, out] */ afsConnParams *paramsP
#endif
);
error_status_t (*TKN_AsyncGrant)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ afsFid *grantedFileIDp,
    /* [in] */ /* Type must appear in user header or IDL */ afs_token_t *grantedTokenP,
    /* [in] */ idl_long_int grantedRequestID
#endif
);
} TKN4Int_v4_0_epv_t;
extern rpc_if_handle_t TKN4Int_v4_0_c_ifspec;
extern rpc_if_handle_t TKN4Int_v4_0_s_ifspec;

#ifdef __cplusplus
    }

#else
#endif
#endif

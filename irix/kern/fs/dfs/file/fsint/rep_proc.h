/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: rep_proc.h,v $
 * Revision 65.2  1999/02/04 19:19:40  mek
 * Provide C style include file for IRIX kernel integration.
 *
 * Revision 65.1  1997/10/20 19:20:27  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.9.1  1996/10/02  17:47:08  damon
 * 	Newest DFS from Transarc
 * 	[1996/10/01  18:37:36  damon]
 *
 * Revision 1.1.4.1  1994/06/09  14:08:01  annie
 * 	fixed copyright in src/file
 * 	[1994/06/09  13:22:56  annie]
 * 
 * Revision 1.1.2.4  1993/01/21  19:36:16  zeliff
 * 	Embedding copyright notices
 * 	[1993/01/19  19:49:57  zeliff]
 * 
 * Revision 1.1.2.3  1992/11/24  17:48:25  bolinger
 * 	Change include file install directory from .../afs to .../dcedfs.
 * 	[1992/11/22  17:59:31  bolinger]
 * 
 * Revision 1.1.2.2  1992/08/31  19:46:03  jaffe
 * 	Transarc delta: cfe-ot4029-portable-rpc-data-types 1.2
 * 	  Selected comments:
 * 	    If ``long'' could possibly mean ``64 bits'' any time soon, we need to keep
 * 	    our RPC interfaces from breaking.
 * 	    see above
 * 	    More of the same.  Forgot a couple of .idl files, and needed to change
 * 	    a couple of procedure signatures to match.
 * 	[1992/08/30  02:26:58  jaffe]
 * 
 * Revision 1.1  1992/01/19  02:51:18  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */

/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef REP_v4_0_included
#define REP_v4_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef rep_data_v0_0_included
#include <dcedfs/rep_data.h>
#endif
extern error_status_t REP_CheckReplicationConfig(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_AllCheckReplicationConfig(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 howManyGuys,
    /* [in] */ afsNetAddrs *TheseGuysToo,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_KeepFilesAlive(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ afsFids *files,
    /* [in] */ unsigned32 howManyFiles,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_GetVolChangedFiles(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *initialVV,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *finalVV,
    /* [in] */ unsigned32 cookie,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ /* Type must appear in user header or IDL */ afs_hyper_t *reallyFinalVV,
    /* [out] */ unsigned32 *nextCookieP,
    /* [out] */ fidsInVol *fidPerVolP,
    /* [out] */ unsigned32 *numFidsInVolP,
    /* [out] */ unsigned32 *flagsP,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_GetRepStatus(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 cookie,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *nextCookieP,
    /* [out] */ repStatuses *StatusesP,
    /* [out] */ unsigned32 *howManyStatuses,
    /* [out] */ unsigned32 *flagsP,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_GetRepServerStatus(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ repserverStatus *repserverStat,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_UpdateSelf(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_Probe(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h
#endif
);
extern error_status_t REP_GetOneRepStatus(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ repStatus *StatusP,
    /* [out] */ unsigned32 *flagsP,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
extern error_status_t REP_GetServerInterfaces(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ dfs_interfaceList *serverInterfacesP
#endif
);
typedef struct REP_v4_0_epv_t {
error_status_t (*REP_CheckReplicationConfig)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_AllCheckReplicationConfig)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 howManyGuys,
    /* [in] */ afsNetAddrs *TheseGuysToo,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_KeepFilesAlive)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ afsFids *files,
    /* [in] */ unsigned32 howManyFiles,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_GetVolChangedFiles)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *initialVV,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *finalVV,
    /* [in] */ unsigned32 cookie,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ /* Type must appear in user header or IDL */ afs_hyper_t *reallyFinalVV,
    /* [out] */ unsigned32 *nextCookieP,
    /* [out] */ fidsInVol *fidPerVolP,
    /* [out] */ unsigned32 *numFidsInVolP,
    /* [out] */ unsigned32 *flagsP,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_GetRepStatus)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 cookie,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *nextCookieP,
    /* [out] */ repStatuses *StatusesP,
    /* [out] */ unsigned32 *howManyStatuses,
    /* [out] */ unsigned32 *flagsP,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_GetRepServerStatus)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ repserverStatus *repserverStat,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_UpdateSelf)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 flags,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_Probe)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h
#endif
);
error_status_t (*REP_GetOneRepStatus)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *cellIdP,
    /* [in] */ /* Type must appear in user header or IDL */ afs_hyper_t *volIdP,
    /* [in] */ unsigned32 spare1,
    /* [in] */ unsigned32 spare2,
    /* [in] */ unsigned32 spare3,
    /* [out] */ repStatus *StatusP,
    /* [out] */ unsigned32 *flagsP,
    /* [out] */ unsigned32 *spare4,
    /* [out] */ unsigned32 *spare5
#endif
);
error_status_t (*REP_GetServerInterfaces)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in, out] */ dfs_interfaceList *serverInterfacesP
#endif
);
} REP_v4_0_epv_t;
extern rpc_if_handle_t REP_v4_0_c_ifspec;
extern rpc_if_handle_t REP_v4_0_s_ifspec;

#ifdef __cplusplus
    }

#else
#endif
#endif

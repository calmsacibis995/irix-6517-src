/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: fldb_data.h,v $
 * Revision 65.2  1999/02/04 19:19:38  mek
 * Provide C style include file for IRIX kernel integration.
 *
 * Revision 65.1  1997/10/20 19:20:07  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.66.1  1996/10/02  17:46:01  damon
 * 	Newest DFS from Transarc
 * 	[1996/10/01  18:37:01  damon]
 *
 * Revision 1.1.61.2  1994/06/09  14:07:07  annie
 * 	fixed copyright in src/file
 * 	[1994/06/09  13:22:17  annie]
 * 
 * Revision 1.1.61.1  1994/02/04  20:18:01  devsrc
 * 	Merged from 1.0.3a to 1.1
 * 	[1994/02/04  15:12:43  devsrc]
 * 
 * Revision 1.1.59.1  1993/12/07  17:23:37  jaffe
 * 	1.0.3a update from Transarc
 * 	[1993/12/03  15:17:07  jaffe]
 * 
 * Revision 1.1.4.5  1993/01/21  19:34:18  zeliff
 * 	Embedding copyright notices
 * 	[1993/01/19  19:47:51  zeliff]
 * 
 * Revision 1.1.4.4  1993/01/13  17:28:39  shl
 * 	Transarc delta: cfe-ot6054-genl-and-i18n-spares 1.1
 * 	  Selected comments:
 * 	    Add spares to several RPC structures, with two goals:
 * 	    - general future usage
 * 	    - allow for at least some internationalization designs
 * 	    The only tricky part of this work is that the on-the-wire representation for
 * 	    directory contents is expanded.
 * 	[1993/01/12  20:43:43  shl]
 * 
 * Revision 1.1.4.3  1992/11/24  17:01:45  bolinger
 * 	Change include file install directory from .../afs to .../dcedfs.
 * 	[1992/11/22  17:56:49  bolinger]
 * 
 * Revision 1.1.4.2  1992/08/31  19:43:00  jaffe
 * 	Transarc delta: cfe-ot4029-portable-rpc-data-types 1.2
 * 	  Selected comments:
 * 	    If ``long'' could possibly mean ``64 bits'' any time soon, we need to keep
 * 	    our RPC interfaces from breaking.
 * 	    see above
 * 	    More of the same.  Forgot a couple of .idl files, and needed to change
 * 	    a couple of procedure signatures to match.
 * 	[1992/08/30  02:19:54  jaffe]
 * 
 * Revision 1.1.2.2  1992/04/14  04:08:19  mason
 * 	Transarc delta: vijay-ot1077-fts-delserverentry 1.4
 * 	  Files modified:
 * 	    flserver: fl_errors.et, fldb_data.idl, flprocs.c
 * 	    userInt/fts: fts_userint.c, fts_userint.h, volc_main.c
 * 	  Selected comments:
 * 	    add the fts delserverentry command to the fts command suite
 * 	    flags for fts_delserverentry
 * 	    tested, ready to be checked in
 * 	    These were manually fixed (rns).
 * 	[1992/04/13  16:01:53  mason]
 * 
 * Revision 1.1  1992/01/19  02:48:48  devrcs
 * 	Initial revision
 * 
 * $EndLog$
 */

/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef fldb_data_v0_0_included
#define fldb_data_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef afsvl_data_v0_0_included
#include <dcedfs/afsvl_data.h>
#endif
#define SITEDELETEDSP1 (232908781)
#define DEFAULTBULK (10000)
typedef struct VldbListByAttributes {
unsigned32 Mask;
afsNetAddr site;
unsigned32 partition;
unsigned32 volumetype;
/* Type must appear in user header or IDL */ afs_hyper_t volumeid;
unsigned32 flag;
unsigned32 spare1;
unsigned32 spare2;
unsigned32 spare3;
unsigned32 spare4;
unsigned32 spare5;
} VldbListByAttributes;
#define VLLIST_SITE (1)
#define VLLIST_PARTITION (2)
#define VLLIST_VOLUMETYPE (4)
#define VLLIST_VOLUMEID (8)
#define VLLIST_FLAG (16)
typedef struct vital_vlheader {
unsigned32 vldbversion;
unsigned32 headersize;
unsigned32 freePtr;
unsigned32 eofPtr;
unsigned32 allocs;
unsigned32 frees;
/* Type must appear in user header or IDL */ afs_hyper_t MaxVolumeId;
unsigned32 sitesPtr;
unsigned32 numSites;
unsigned32 totalEntries[8];
/* Type must appear in user header or IDL */ afs_hyper_t theCellID;
unsigned32 spare0;
unsigned32 spare1;
unsigned32 spare2;
unsigned32 spare3;
unsigned32 spare4;
unsigned32 spare5;
unsigned32 spare6;
unsigned32 spare7;
unsigned32 spare8;
unsigned32 spare9;
unsigned32 spare10;
unsigned32 spare11;
unsigned32 spare12;
} vital_vlheader;
#define MAX_NUMBER_OPCODES (45)
typedef struct vldstats {
unsigned32 start_time;
unsigned32 requests[45];
unsigned32 aborts[45];
unsigned32 spare0;
unsigned32 spare1;
unsigned32 spare2;
unsigned32 spare3;
unsigned32 spare4;
} vldstats;
typedef struct  {
unsigned32 bulkentries_len;
vldbentry bulkentries_val[25];
} bulkentries;
typedef struct bulkSites {
siteDesc Sites[9];
} bulkSites;
typedef struct  {
unsigned32 bulkIDs_len;
/* Type must appear in user header or IDL */ afs_hyper_t bulkIDs_val[25];
} bulkIDs;
typedef struct siteAlter {
unsigned32 Mask;
idl_byte KerbPrin[64];
afsUUID Owner;
afsUUID ObjID;
unsigned32 CreationQuota;
unsigned32 CreationUses;
unsigned32 spare1;
unsigned32 spare2;
} siteAlter;
#define SITEALTER_PRINCIPAL (1)
#define SITEALTER_OWNER (2)
#define SITEALTER_OBJID (4)
#define SITEALTER_CREATIONQUOTA (8)
#define SITEALTER_CREATIONUSES (16)
#define SITEALTER_DELETEME (12288)

#ifdef __cplusplus
    }

#endif
#endif

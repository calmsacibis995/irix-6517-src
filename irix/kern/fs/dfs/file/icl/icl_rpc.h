/*
 * @OSF_COPYRIGHT@
 * COPYRIGHT NOTICE
 * Copyright (c) 1990, 1991, 1992, 1993, 1994 Open Software Foundation, Inc.
 * ALL RIGHTS RESERVED (DCE).  See the file named COPYRIGHT.DCE for
 * the full copyright text.
 */
/*
 * HISTORY
 * $Log: icl_rpc.h,v $
 * Revision 65.2  1999/02/04 19:19:41  mek
 * Provide C style include file for IRIX kernel integration.
 *
 * Revision 65.1  1997/10/20 19:17:40  jdoak
 * *** empty log message ***
 *
 * Revision 1.1.9.1  1996/10/02  17:52:21  damon
 * 	Newest DFS from Transarc
 * 	[1996/10/01  18:41:00  damon]
 *
 * Revision 1.1.4.1  1994/06/09  14:11:35  annie
 * 	fixed copyright in src/file
 * 	[1994/06/09  13:25:18  annie]
 * 
 * Revision 1.1.2.2  1993/05/11  14:16:26  jaffe
 * 	Transarc delta: comer-db3378-add-rpc-interface-to-user-level-icl 1.2
 * 	  Selected comments:
 * 	    This delta implements an RPC interface to the user-level ICL tracing
 * 	    package.  The idea is that each server will export this interface to
 * 	    CDS under a meaningful entry.  For example, the flserver would export
 * 	    it under /.:/hosts/<hostname>/flserver by making the call:
 * 	    code = icl_ExportIF("flserver");
 * 	    Each command in the dfstrace suite now has a -cdsentry that, if
 * 	    specified, will cause dfstrace to connect to the specified server
 * 	    instead of the kernel.
 * 	    IDL file for RPC interface.
 * 	    The dump file is now restricted to be in /opt/dcelocal/var/dfs/adm.
 * 	[1993/05/10  18:11:46  jaffe]
 * 
 * $EndLog$
 */

/* Generated by IDL compiler version OSF DCE T1.2.0-09 */
#ifndef DFSTRACE_v1_0_included
#define DFSTRACE_v1_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#ifndef rpctypes_v0_0_included
#include <dce/rpctypes.h>
#endif
#define ICL_RPC_MAX_SETS (64)
#define ICL_RPC_MAX_LOGS (64)
#define ICL_RPC_MAX_FILE_NAME (256)
typedef struct icl_setinfo {
idl_char setName[32];
unsigned32 states;
} icl_setinfo_t;
typedef struct icl_loginfo {
idl_char logName[32];
unsigned32 logSize;
unsigned32 logElements;
unsigned32 states;
} icl_loginfo_t;
typedef struct icl_bulkSetinfo {
unsigned32 count;
icl_setinfo_t setinfo[1];
} icl_bulkSetinfo_t;
typedef struct icl_bulkLoginfo {
unsigned32 count;
icl_loginfo_t loginfo[1];
} icl_bulkLoginfo_t;
extern error_status_t DFSTRACE_GetSetInfo(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
extern error_status_t DFSTRACE_SetSetInfo(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
extern error_status_t DFSTRACE_GetLogInfo(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ idl_char setname[32],
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkLoginfo_t *info
#endif
);
extern error_status_t DFSTRACE_SetLogInfo(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkLoginfo_t *info
#endif
);
extern error_status_t DFSTRACE_ClearSet(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
extern error_status_t DFSTRACE_ClearLog(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkLoginfo_t *info
#endif
);
extern error_status_t DFSTRACE_DumpSet(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ idl_char filename[256],
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
typedef struct DFSTRACE_v1_0_epv_t {
error_status_t (*DFSTRACE_GetSetInfo)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
error_status_t (*DFSTRACE_SetSetInfo)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
error_status_t (*DFSTRACE_GetLogInfo)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ idl_char setname[32],
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkLoginfo_t *info
#endif
);
error_status_t (*DFSTRACE_SetLogInfo)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkLoginfo_t *info
#endif
);
error_status_t (*DFSTRACE_ClearSet)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
error_status_t (*DFSTRACE_ClearLog)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkLoginfo_t *info
#endif
);
error_status_t (*DFSTRACE_DumpSet)(
#ifdef IDL_PROTOTYPES
    /* [in] */ handle_t h,
    /* [in] */ idl_char filename[256],
    /* [in] */ unsigned32 all,
    /* [in, out] */ icl_bulkSetinfo_t *info
#endif
);
} DFSTRACE_v1_0_epv_t;
extern rpc_if_handle_t DFSTRACE_v1_0_c_ifspec;
extern rpc_if_handle_t DFSTRACE_v1_0_s_ifspec;

#ifdef __cplusplus
    }

#else
#endif
#endif

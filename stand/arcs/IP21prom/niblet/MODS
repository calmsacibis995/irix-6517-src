This file describes changes I've made to niblet in the course of
modifying it for MDK

* Made fairly extensive additions to dcob.c so that when RAW_NIBLET
  is defined, it contains a main() and 
      raw_proc_table.s
      raw_pg_tbl.s
      raw_programs.s 
      raw_nidata.s.

  raw_nibdata.s mimics the STUP area which, in bootprom niblet, is
  at the position where the exception handlers are linked.  In bootprom
  niblet, dcob moves the handlers from the address where they were linked
  to 0x0 and then uses the area where they were linked as a place where
  it can put the address of the first CURPROC.  This identifies the
  start of the task queue.  In raw niblet, we figure out where the 
  task queue, page table, programs are statically.  Then we create 
  raw_nibdata.s to hold the start of the task queue and link it in
  with the proc table, pg table and program .s files and output the 
  linked object to raw_nibdata.   When we want to simulate, we load 
  two executables: raw_niblet and raw_nibdata.




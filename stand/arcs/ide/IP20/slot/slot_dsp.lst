Motorola DSP56000 Assembler  Version 3.1  91-03-29  14:26:47  slot_dsp.asm
  Page 1



1                        ; DSP diagnostics microcode
2      
3                                  section DSP_diag
4                                  opt     mex
5      
6         000000         Xtemp:    equ     y:0
7      
8      
9                        ; DSP address
10        00FFFE         DSP_BCR   equ     x:$fffe                           ; b
us control register
11        00FFFF         DSP_IPR   equ     x:$ffff                           ; i
nterrupt priority register
12     
13                       ; DSP-HPC addresses
14                       DSP_HPC_BYTECNT
15        00FFE0                   equ     y:$ffe0                           ; D
MA transfer size
16                       DSP_HPC_GIOADDL
17        00FFE1                   equ     y:$ffe1                           ; G
IO-bus address, LSB
18                       DSP_HPC_GIOADDM
19        00FFE2                   equ     y:$ffe2                           ; G
IO-bus address, MSB
20                       DSP_HPC_PBUSADD
21        00FFE3                   equ     y:$ffe3                           ; P
bus address
22                       DSP_HPC_DMACTRL
23        00FFE4                   equ     y:$ffe4                           ; D
MA control
24                       DSP_HPC_INTSTAT
25        00FFE8                   equ     y:$ffe8                           ; i
nterrupt status
26                       DSP_HPC_HANDTX
27        00FFE6                   equ     y:$ffe6                           ; h
andshake transmit
28                       DSP_HPC_INTMASK
29        00FFE9                   equ     y:$ffe9                           ; i
nterrupt mask
30                       DSP_HPC_INTCONF
31        00FFEA                   equ     y:$ffea                           ; i
nterrupt configuration
32                       DSP_HPC_INTPOL
33        00FFEB                   equ     y:$ffeb                           ; i
nterrupt polarity
34                       DSP_HPC_MISCSR
35        00FFEC                   equ     y:$ffec                           ; m
iscellaneous control and status
36     
37                       ; real time clock (RTC)
38     
39                       ; bit definitions in INSTAT, INTMASK, INTCONF, INTPOL
40        000004         DUART3    equ     4                                 ; p
bus 1 int
41        000005         HANDTX    equ     5
42        000006         HANDRX    equ     6
43        000007         MODEM     equ     7                                 ; p
bus 0 int
44     
45                       ; test status return to the MIPS
46     
Motorola DSP56000 Assembler  Version 3.1  91-03-29  14:26:47  slot_dsp.asm
  Page 2



47                       ; miscellaneous constant
48        002710         WAIT_COUNT equ    10000
49     
50        P:E000                   org     p:$e000
51     
52                       ; here is where all begin
53                       bang:
54        P:E000 08F4BE            movep             #>$4,x:<<DSP_BCR        ; 4
 wait states per I/O access
                 000004
55                       ;       movep  #>$0,y:<<DSP_HPC_DMACTRL       ;
56        P:E002 09F4A8            movep             #>$0,y:<<DSP_HPC_INTSTAT ;
                 000000
57        P:E004 09F4A9            movep             #>$0,y:<<DSP_HPC_INTMASK ;
                 000000
58        P:E006 09F4AA            movep             #>$61,y:<<DSP_HPC_INTCONF ;
 edge sensing for DMA, HANDTX,HANDRX,
                 000061
59                                                                           ; l
evel sensing for PINT0 PINT1
60        P:E008 09F4AB            movep             #>$0,y:<<DSP_HPC_INTPOL ;
                 000000
61        P:E00A 09F4AC            movep             #>$48,y:<<DSP_HPC_MISCSR ; 
32K SRAM, Sign Extend
                 000048
62     
63        P:E00C 08F4BF            movep             #>$3,x:<<DSP_IPR        ; I
RQA at priority level 2
                 000003
64                       ;       movep  #>(1<<DUART3)|(1<<MODEM)|(1<<HANDTX)|(1<
<HANDRX),y:<<DSP_HPC_INTMASK
65                       ;       movep  #>(1<<DUART3)|(1<<MODEM),y:<<DSP_HPC_INT
MASK
66     
67        P:E00E 09F4A9            movep             #>$0,y:<<DSP_HPC_INTMASK ;
                 000000
68                       ; Tell the MIPS that the DSP is running.
69        P:E010 54F400            move              #$111,a1
                 000111
70        P:E012 5C7000            move                          a1,y:$8000
                 008000
71        P:E014 000000            nop
72        P:E015 000000            nop
73        P:E016 000000            nop
74     
75        P:E017 09F4A9            movep             #>(1<<DUART3),y:<<DSP_HPC_I
NTMASK
                 000010
76     
77        P:E019 05F439            movec             #>$0,sr                 ; e
nable interrupts in general
                 000000
78     
79                       ; set up the IRQA interrupt vector
80        P:E01B 07F08C            movem             p:IRQAvec,a1            ;
                 00E024
81        P:E01D 07080C            movem             a1,p:<$8                ; I
RQA interrupt vector
82        P:E01E 07F08C            movem             p:IRQAvec+1,a1          ;
                 00E025
83        P:E020 07090C            movem             a1,p:<$9                ;
Motorola DSP56000 Assembler  Version 3.1  91-03-29  14:26:47  slot_dsp.asm
  Page 3



84     
85     
86                       ; wait for the MIPS to interrupt
87                       idle:
88        P:E021 000000            nop                                       ;
89        P:E022 0AF080            jmp     idle                              ;
                 00E021
90     
91                       IRQAvec:
92        P:E024 0BF080            jsr     IRQAHandler                       ;
                 00E026
93     
94     
95     
97     
98                       IRQAHandler:
99     
100                      ;       jset   #MODEM,y:<<DSP_HPC_INTSTAT,MODEM_handler
101                      ;       jset   #HANDRX,y:<<DSP_HPC_INTSTAT,HANDRX_handl
er     ;
102                      ;       jset   #HANDTX,y:<<DSP_HPC_INTSTAT,HANDTX_handl
er     ;
103       P:E026 0AA8E4            jset    #DUART3,y:<<DSP_HPC_INTSTAT,DUART3_ha
ndler ;
                 00E030
104    
105       P:E028 000004            rti
106    
107                      MODEM_handler:
108    
109                      idle2:
110       P:E029 54F400            move              #$1234,a1
                 001234
111       P:E02B 5C7000            move                          a1,y:$8000
                 008000
112       P:E02D 09F4A8            movep             #~(1<<MODEM),y:<<DSP_HPC_IN
TSTAT ; clear the interrupt
                 FFFF7F
113                      ;       jmp           idle2
114    
115       P:E02F 000004            rti                                       ; *
**************
116    
117    
118                      DUART3_handler:
119                      idle1:
120       P:E030 54F400            move              #$4321,a1
                 004321
121       P:E032 5C7000            move                          a1,y:$8000
                 008000
122    
123       P:E034 09F4A8            movep             #~(1<<DUART3),y:<<DSP_HPC_I
NTSTAT ; clear the interrupt
                 FFFFEF
124                      ;       jmp           idle1
125    
126       P:E036 000004            rti                                       ; *
**************
127    
128    
129                      HANDTX_handler:
Motorola DSP56000 Assembler  Version 3.1  91-03-29  14:26:47  slot_dsp.asm
  Page 4



130                      idle4:
131       P:E037 54F400            move              #$222,a1
                 000222
132       P:E039 5C7000            move                          a1,y:$8000
                 008000
133    
134                      ;       jmp           idle4
135       P:E03B 09F4A8            movep             #~(1<<HANDTX),y:<<DSP_HPC_I
NTSTAT
                 FFFFDF
136       P:E03D 000004            rti                                       ;
137    
138                      HANDRX_handler:
139    
140                      idle3:
141       P:E03E 54F400            move              #$555,a1
                 000555
142       P:E040 5C7000            move                          a1,y:$8000
                 008000
143    
144                      ;       jmp           idle3
145    
146       P:E042 000004            rti                                       ; *
**************
147    
148    
150    
151       Y:C000                   org     y:$c000
152    
153       Y:C000         what_int  dc      0
154    
155                                endsec

0    Errors
0    Warnings



























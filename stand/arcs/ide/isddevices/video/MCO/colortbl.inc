/*
 * DO NOT EDIT THIS FILE.  It was automatically generated by mkcolor
 * 5 red, 8 green, 5 blue
 * 2 grey values in the basic table; 24 added
 */

unsigned char red_map[256] = {
  0,255,  0,255,  0,255,  0,255, 85,198,113,142,113,142, 56,170,170, 85,170, 85,
170, 85,170, 85,170, 85,170, 85,170, 85,170, 85, 10, 20, 30, 40, 51, 61, 71, 81,
 91,102,112,122,132,142,153,163,173,183,193,204,214,224,234,244,  0,  0,  0,  0,
  0,  0,  0,  0, 63, 63, 63, 63, 63, 63, 63, 63,127,127,127,127,127,127,127,127,
191,191,191,191,191,191,191,191,255,255,255,255,255,255,255,255,  0,  0,  0,  0,
  0,  0,  0,  0, 63, 63, 63, 63, 63, 63, 63, 63,127,127,127,127,127,127,127,127,
191,191,191,191,191,191,191,191,255,255,255,255,255,255,255,255,  0,  0,  0,  0,
  0,  0,  0,  0, 63, 63, 63, 63, 63, 63, 63, 63,127,127,127,127,127,127,127,127,
191,191,191,191,191,191,191,191,255,255,255,255,255,255,255,255,  0,  0,  0,  0,
  0,  0,  0,  0, 63, 63, 63, 63, 63, 63, 63, 63,127,127,127,127,127,127,127,127,
191,191,191,191,191,191,191,191,255,255,255,255,255,255,255,255,  0,  0,  0,  0,
  0,  0,  0,  0, 63, 63, 63, 63, 63, 63, 63, 63,127,127,127,127,127,127,127,127,
191,191,191,191,191,191,191,191,255,255,255,255,255,255,255,255,
};

unsigned char green_map[256] = {
  0,  0,255,255,  0,  0,255,255, 85,113,198,142,113, 56,142,170,170, 85,170, 85,
170, 85,170, 85,170, 85,170, 85,170, 85,170, 85, 10, 20, 30, 40, 51, 61, 71, 81,
 91,102,112,122,132,142,153,163,173,183,193,204,214,224,234,244,  0, 36, 72,109,
145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,
  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,
145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,
  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,
145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,
  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,
145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,
  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,
145,182,218,255,  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,
  0, 36, 72,109,145,182,218,255,  0, 36, 72,109,145,182,218,255,
};

unsigned char blue_map[256] = {
  0,  0,  0,  0,255,255,255,255, 85,113,113, 56,198,142,142,170,170, 85,170, 85,
170, 85,170, 85,170, 85,170, 85,170, 85,170, 85, 10, 20, 30, 40, 51, 61, 71, 81,
 91,102,112,122,132,142,153,163,173,183,193,204,214,224,234,244,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 63, 63, 63, 63,
 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,
191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
};

unsigned char red_inverse[256] = {
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  8,  8,
  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
  8,  8,  8,  8,  8,  8,  8,  8, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 24,
 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
};

unsigned char green_inverse[256] = {
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,
  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  3,  3,
  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
  4,  4,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,
  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
  6,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
};

unsigned char blue_inverse[256] = {
 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 56, 96, 96, 96,
 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
 96, 96, 96, 96, 96, 96, 96, 96,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,
136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,
176,176,176,176,176,176,176,176,176,176,216,216,216,216,216,216,216,216,216,216,
216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,
216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,
};

unsigned char grey_inverse[256] = {
 56, 56, 56, 56, 56, 56, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33,
 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35,
 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37,
 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39,
 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41,
 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43,
 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45,
 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47,
 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 49,
 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51,
 51, 51, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
 55, 55, 55, 55, 55, 55, 55, 55, 55, 55,255,255,255,255,255,255,
};

#ifndef NOGREYPATTERNS
static short  greyshade_pixels[24][16] = {
 0x0111, 0x0000, 0x0000, 0x0000, 0x1010, 0x0000, 0x0000, 0x0000,
  0x0101, 0x0000, 0x0000, 0x0000, 0x1010, 0x0000, 0x0000, 0x0000,
 0x1111, 0x0000, 0x0404, 0x0000, 0x1111, 0x0000, 0x0000, 0x0000,
  0x1111, 0x0000, 0x0400, 0x0000, 0x1111, 0x0000, 0x0000, 0x0000,
 0x1111, 0x0000, 0x4444, 0x0000, 0x1111, 0x0000, 0x4044, 0x0000,
  0x1111, 0x0000, 0x4444, 0x0000, 0x1111, 0x0000, 0x4040, 0x0000,
 0x1515, 0x0000, 0x4444, 0x0000, 0x5151, 0x0000, 0x4444, 0x0000,
  0x1515, 0x0000, 0x4444, 0x0000, 0x5111, 0x0000, 0x4444, 0x0000,
 0x5555, 0x0000, 0x4445, 0x0000, 0x5555, 0x0000, 0x4444, 0x0000,
  0x5555, 0x0000, 0x4444, 0x0000, 0x5555, 0x0000, 0x4444, 0x0000,
 0x5555, 0x0000, 0x5555, 0x0000, 0x5555, 0x0000, 0x5454, 0x0000,
  0x5555, 0x0000, 0x5545, 0x0000, 0x5555, 0x0000, 0x5454, 0x0000,
 0x5555, 0x0202, 0x5555, 0x0000, 0x5555, 0x0000, 0x5555, 0x0000,
  0x5555, 0x0202, 0x5555, 0x0000, 0x5555, 0x0000, 0x5555, 0x0000,
 0x5555, 0x2222, 0x5555, 0x0000, 0x5555, 0x2022, 0x5555, 0x0000,
  0x5555, 0x2222, 0x5555, 0x0000, 0x5555, 0x2220, 0x5555, 0x0000,
 0x5555, 0x2222, 0x5555, 0x0808, 0x5555, 0x2222, 0x5555, 0x8080,
  0x5555, 0x2222, 0x5555, 0x0808, 0x5555, 0x2222, 0x5555, 0x8080,
 0x5555, 0x222a, 0x5555, 0x8888, 0x5555, 0x2222, 0x5555, 0x8888,
  0x5555, 0x2a22, 0x5555, 0x8888, 0x5555, 0x2222, 0x5555, 0x8888,
 0x5555, 0xaaaa, 0x5555, 0x8888, 0x5555, 0xa2a2, 0x5555, 0x8888,
  0x5555, 0xaaaa, 0x5555, 0x8888, 0x5555, 0xa2a2, 0x5555, 0x8888,
 0x5555, 0xaaaa, 0x5555, 0x8a8a, 0x5555, 0xaaaa, 0x5555, 0x88a8,
  0x5555, 0xaaaa, 0x5555, 0x8a8a, 0x5555, 0xaaaa, 0x5555, 0xa888,
 0x5555, 0xaaaa, 0x5555, 0xaaaa, 0x5555, 0xaaaa, 0x5555, 0xaaaa,
  0x5555, 0xaaaa, 0x5555, 0xaaaa, 0x5555, 0xaaaa, 0x5555, 0xaaaa,
 0x5777, 0xaaaa, 0x5555, 0xaaaa, 0x7575, 0xaaaa, 0x5555, 0xaaaa,
  0x5757, 0xaaaa, 0x5555, 0xaaaa, 0x7575, 0xaaaa, 0x5555, 0xaaaa,
 0x7777, 0xaaaa, 0x5d5d, 0xaaaa, 0x7777, 0xaaaa, 0x5555, 0xaaaa,
  0x7777, 0xaaaa, 0x5d55, 0xaaaa, 0x7777, 0xaaaa, 0x5555, 0xaaaa,
 0x7777, 0xaaaa, 0xdddd, 0xaaaa, 0x7777, 0xaaaa, 0xd5dd, 0xaaaa,
  0x7777, 0xaaaa, 0xdddd, 0xaaaa, 0x7777, 0xaaaa, 0xd5d5, 0xaaaa,
 0x7f7f, 0xaaaa, 0xdddd, 0xaaaa, 0xf7f7, 0xaaaa, 0xdddd, 0xaaaa,
  0x7f7f, 0xaaaa, 0xdddd, 0xaaaa, 0xf777, 0xaaaa, 0xdddd, 0xaaaa,
 0xffff, 0xaaaa, 0xdddf, 0xaaaa, 0xffff, 0xaaaa, 0xdddd, 0xaaaa,
  0xffff, 0xaaaa, 0xdddd, 0xaaaa, 0xffff, 0xaaaa, 0xdddd, 0xaaaa,
 0xffff, 0xaaaa, 0xffff, 0xaaaa, 0xffff, 0xaaaa, 0xfdfd, 0xaaaa,
  0xffff, 0xaaaa, 0xffdf, 0xaaaa, 0xffff, 0xaaaa, 0xfdfd, 0xaaaa,
 0xffff, 0xabab, 0xffff, 0xaaaa, 0xffff, 0xaaaa, 0xffff, 0xaaaa,
  0xffff, 0xabab, 0xffff, 0xaaaa, 0xffff, 0xaaaa, 0xffff, 0xaaaa,
 0xffff, 0xbbbb, 0xffff, 0xaaaa, 0xffff, 0xbabb, 0xffff, 0xaaaa,
  0xffff, 0xbbbb, 0xffff, 0xaaaa, 0xffff, 0xbbba, 0xffff, 0xaaaa,
 0xffff, 0xbbbb, 0xffff, 0xaeae, 0xffff, 0xbbbb, 0xffff, 0xeaea,
  0xffff, 0xbbbb, 0xffff, 0xaeae, 0xffff, 0xbbbb, 0xffff, 0xeaea,
 0xffff, 0xbbbf, 0xffff, 0xeeee, 0xffff, 0xbbbb, 0xffff, 0xeeee,
  0xffff, 0xbfbb, 0xffff, 0xeeee, 0xffff, 0xbbbb, 0xffff, 0xeeee,
 0xffff, 0xffff, 0xffff, 0xeeee, 0xffff, 0xfbfb, 0xffff, 0xeeee,
  0xffff, 0xffff, 0xffff, 0xeeee, 0xffff, 0xfbfb, 0xffff, 0xeeee,
};
static struct mpr_data greyshade_mpr[24] = {
 2, greyshade_pixels[0], 0, 0, 0, 0,
 2, greyshade_pixels[1], 0, 0, 0, 0,
 2, greyshade_pixels[2], 0, 0, 0, 0,
 2, greyshade_pixels[3], 0, 0, 0, 0,
 2, greyshade_pixels[4], 0, 0, 0, 0,
 2, greyshade_pixels[5], 0, 0, 0, 0,
 2, greyshade_pixels[6], 0, 0, 0, 0,
 2, greyshade_pixels[7], 0, 0, 0, 0,
 2, greyshade_pixels[8], 0, 0, 0, 0,
 2, greyshade_pixels[9], 0, 0, 0, 0,
 2, greyshade_pixels[10], 0, 0, 0, 0,
 2, greyshade_pixels[11], 0, 0, 0, 0,
 2, greyshade_pixels[12], 0, 0, 0, 0,
 2, greyshade_pixels[13], 0, 0, 0, 0,
 2, greyshade_pixels[14], 0, 0, 0, 0,
 2, greyshade_pixels[15], 0, 0, 0, 0,
 2, greyshade_pixels[16], 0, 0, 0, 0,
 2, greyshade_pixels[17], 0, 0, 0, 0,
 2, greyshade_pixels[18], 0, 0, 0, 0,
 2, greyshade_pixels[19], 0, 0, 0, 0,
 2, greyshade_pixels[20], 0, 0, 0, 0,
 2, greyshade_pixels[21], 0, 0, 0, 0,
 2, greyshade_pixels[22], 0, 0, 0, 0,
 2, greyshade_pixels[23], 0, 0, 0, 0,
};
extern struct pixrectops mem_ops, tile_ops;
static struct pixrect greyshade_pr[24] = {
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[0], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[1], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[2], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[3], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[4], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[5], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[6], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[7], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[8], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[9], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[10], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[11], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[12], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[13], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[14], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[15], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[16], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[17], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[18], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[19], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[20], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[21], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[22], 0,
 &mem_ops, 16, 16, 1, (caddr_t) &greyshade_mpr[23], 0,
};
static struct pixrect greyshade_tile[24] = {
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[0], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[1], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[2], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[3], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[4], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[5], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[6], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[7], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[8], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[9], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[10], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[11], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[12], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[13], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[14], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[15], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[16], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[17], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[18], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[19], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[20], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[21], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[22], 0,
 &tile_ops, 9999, 9999, 1, (caddr_t) &greyshade_pr[23], 0,
};
struct pixrect *grey_patterns[256] = {
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 &greyshade_tile[16],
 &greyshade_tile[4],
 &greyshade_tile[4],
 &greyshade_tile[10],
 &greyshade_tile[4],
 &greyshade_tile[10],
 &greyshade_tile[10],
 &greyshade_tile[7],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[7],
 &greyshade_tile[16],
 &greyshade_tile[23],
 &greyshade_tile[22],
 &greyshade_tile[21],
 &greyshade_tile[20],
 &greyshade_tile[19],
 &greyshade_tile[18],
 &greyshade_tile[17],
 &greyshade_tile[16],
 &greyshade_tile[15],
 &greyshade_tile[14],
 &greyshade_tile[13],
 &greyshade_tile[12],
 &greyshade_tile[11],
 &greyshade_tile[10],
 &greyshade_tile[9],
 &greyshade_tile[8],
 &greyshade_tile[7],
 &greyshade_tile[6],
 &greyshade_tile[5],
 &greyshade_tile[4],
 &greyshade_tile[3],
 &greyshade_tile[2],
 &greyshade_tile[1],
 &greyshade_tile[0],
 0,
 &greyshade_tile[21],
 &greyshade_tile[17],
 &greyshade_tile[13],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[18],
 &greyshade_tile[18],
 &greyshade_tile[17],
 &greyshade_tile[13],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[2],
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 &greyshade_tile[18],
 &greyshade_tile[18],
 &greyshade_tile[17],
 &greyshade_tile[13],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[18],
 &greyshade_tile[18],
 &greyshade_tile[17],
 &greyshade_tile[13],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[2],
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[12],
 &greyshade_tile[10],
 &greyshade_tile[6],
 &greyshade_tile[2],
 0,
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[2],
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[2],
 0,
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[2],
 0,
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[2],
 0,
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[5],
 &greyshade_tile[2],
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
};
unsigned char grey_opcode[256] = {
 PIX_SET, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC,
 PIX_SET, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_SRC, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
 PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR, PIX_CLR,
};
#endif  /* !NOGREYPATTERNS */

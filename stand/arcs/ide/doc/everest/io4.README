IO4 IDE Guide
-------------

1. boot ide

2. The default report level is 2. Set the report level by typing the following:
	report=#

	level 5 : debugging messages displayed. Don't need this much detail.
	level 4 : prints out memory locations as they are written. Will 
		  slow down testing time.
	level 3 : prints out 1-line functional descriptions within tests. This
		  is probably the most useful level for general use.
	level 2 : prints out only errors and titles.
	level 1 : prints out only titles and pass/fail.

	level n will print out all messages for level n and below.

3. Quickmode. You set quick mode like this:

        qmode on | off

	NOTE: All current IO4 tests run fast enough that there is no 
	difference between quick and long test modes for the IO4.  If the
	total elapsed time for running all IO4 tests ever exceeds 10
	minutes, quick mode will be enabled for the IO4.

4. continue-on-error. You set this mode like this:

        c_on_error on | off

	For the IO4 tests, this will continue the test even when an error
	has been encountered. Normally, the tests will stop after the first
	error.

	NOTE: continue-on-error is currently the default of most of the tests.
	The tests will be changed to use the continue-on-error switch.

5. io_all.  This command runs all working/known bugfree IO4 tests that do not
	require human intervention.  Any mostly working but possible buggy
	tests, as well as any tests requiring a human to interpret the
	results, are not included.

6. scsi_all. This command runs all the SCSI tests.

7. There are currently tests for the following areas of the IO4 board:
	IO4 interface, VME adapter, SCSI adapter, and EPC adapter.

	The detailed tests are listed below.


IO4 Interface:
-----------------------------------------------------------------------------
check_iocfg - Checks IO4 config against NVRAM

This test compares the actual setup of the IO4 board to the values specified
in the NVRAM.  Each IO4 board in the system is checked to see that it has
all the adapters specified in NVRAM, and that they are of the specified
types.

In addition, if "report" is set VERBOSE, configuration information for
each board is printed out even if no errors occur.
-----------------------------------------------------------------------------
io4_regtest - Read/Write test of IO4 registers

This is a basic Read/Write test for the IO4 registers.  It does tests and
address-in-address testing for:

    IO4_CONF_LW
    IO4_CONF_SW
    IO4_CONF_ADAP
    IO4_CONF_INTRVECTOR
    IO4_CONF_GFXCOMMAND
    IO4_CONF_ETIMEOUT
    IO4_CONF_RTIMEOUT
    IO4_CONF_INTRMASK

Although these are not the only IO4 registers, they are the only ones that
may safely be Read/Write tested.
-----------------------------------------------------------------------------
io4_pioerr - IO4 PIO bus error test

Attempts to generate an error interrupt by attempting a write to IO adapter 0
(nonexistant).  This tests the IO4 error generation capability and the IO4 to
IP error path.
-----------------------------------------------------------------------------
mapram_test - Read/Write test of IO4 map ram

As the name implies, tests the IO4 mapping ram as a small memory array.

Tests memory with pattern Read/Write, address-in-address, and marching 1's
test patterns.
-----------------------------------------------------------------------------
check_hinv - Checks type of board in each slot

Not a test per se - merely prints out the locations and types of all boards
currently installed in the system.
-----------------------------------------------------------------------------

VME adapter:
-----------------------------------------------------------------------------
fregs - Test VMECC registers

Basic Read/Write test for the F Chip registers, running going through
large window space.  Verifies operation for:

    FCHIP_VERSION_NUMBER
    FCHIP_MASTER_ID
    FCHIP_INTR_MAP
    FCHIP_FIFO_DEPTH
    FCHIP_FCI_ERROR_CMND
    FCHIP_TLB_BASE
    FCHIP_ORDER_READ_RESP
    FCHIP_DMA_TIMEOUT
    FCHIP_INTR_MASK
    FCHIP_INTR_SET_MASK
    FCHIP_INTR_RESET_MASK
    FCHIP_SW_FCI_RESET
    FCHIP_IBUS_ERROR_CMND
    FCHIP_TLB_FLUSH
    FCHIP_ERROR
    FCHIP_ERROR_CLEAR
    FCHIP_TLB_IO0-7
    FCHIP_TLB_EBUS0-7

    (32 registers currently tested)
-----------------------------------------------------------------------------
vmeregs - Test VMECC registers

Basic Read/Write test for the VMECC registers. Verifies operation for:

    VMECC_RMWMASK
    VMECC_RMWSET
    VMECC_RMWADDR
    VMECC_RMWAM
    VMECC_RMWTRIG
    VMECC_ERRADDRVME
    VMECC_ERRXTRAVME
    VMECC_ERRORCAUSES
    VMECC_ERRCAUSECLR
    VMECC_DMAVADDR
    VMECC_DMAEADDR
    VMECC_DMABCNT
    VMECC_DMAPARMS
    VMECC_CONFIG
    VMECC_A64SLVMATCH
    VMECC_A64MASTER
    VMECC_VECTORERROR
    VMECC_VECTORIRQ1-7
    VMECC_VECTORDMAENG
    VMECC_VECTORAUX0
    VMECC_VECTORAUX1
    VMECC_IACK1-7
    VMECC_INT_ENABLE
    VMECC_INT_REQUESTSM
    VMECC_INT_ENABLESET
    VMECC_INT_ENABLECLR
    VMECC_PIOTIMER
    0x1388
    0x1390
    0x1398
    0x13A0
    0x13A8
    0x13B0
    0x13B8
    0x13C0
    0x13C8
    0x13D0
    0x13D8
    0x13E0
    0x13E8
    0x13F0
    0x13F8

    (54 registers currently tested)
-----------------------------------------------------------------------------
vmeintr - Test VMECC self interrupts

Places a handler on the appropriate vector and forces the VMECC to generate
an interrupt.  Checks to make sure that the interrupt both reaches the CPU
and activates the proper handler.
-----------------------------------------------------------------------------
vmeberr - Test VMECC bus errors

(Note: This test assumes there are no VME boards plugged in. If there are
VME boards plugged in, errors may occur)

This test ensures that the VMECC can time out for all sections of A24/A32
 addresses.

First, A24 addressing is used. All sections except one are made to respond
as slaves, and a PIO access to the non-responding slave section is done.
This should generate a timeout.

This procedure is repeated for all 16 sections of the A32 addressing range.

-----------------------------------------------------------------------------
vmedma - Test VMECC DMA Engine

Transfers data between controller memory & host memory by DMA; no disk
data is involved (and no disk need be connected).

The controller imposes some constraints on what can be done with this test:
it will transfer only a single sector (512 bytes).
-----------------------------------------------------------------------------
vmelpbk - Test VMECC loopback capability

Tests using the VMECC loopback mode of operation.  Mainly exercises the data
path between the CPU and the VME bus.
-----------------------------------------------------------------------------
cddata - cdsio board internal/external data loopback test

Does loopback testing of all channels of the cdsio 6-port board.  Pretty much
a direct port of the IP5 family version of this test.
-----------------------------------------------------------------------------
cdintr - Test cdsio interrupts

Generates interrupts on the CDSIO board and verifies that they reach the CPU.
Again, a direct port of the IO5 family test.
-----------------------------------------------------------------------------

SCSI adapter:
-----------------------------------------------------------------------------
s1_regtest - Register Read/Write test for s1 chip

This is a basic Read/Write test for the S1 chip registers.  It does tests and
address-in-address testing for:

    S1_INTF_R_SEQ_REGS 0 - 0xF
    S1_INTF_R_OP_BR_0
    S1_INTF_R_OP_BR_1
    S1_INTF_W_SEQ_REGS 0 - 0xF
    S1_INTF_W_OP_BR_0
    S1_INTF_W_OP_BR_1

(36 registers currently tested)

Although these are not the only S1 registers, they are the only ones that
may safely be used by Read/Write tests.
-----------------------------------------------------------------------------
regs_95a - Register read/write test for wd95a chip

This is a basic read/write test for the wd95a chip registers. In setup mode,
the test writes a's and 5's to the "Sleep Countdown" register while all other
registers are just read. In normal mode, all registers are read and no
registers are written. While there are many registers, the Sleep Countdown
register was the only register where it was safe to write values.

Note for us: We want to expand the write data patterns if time permits. Also,
there may be other registers we can write to, but that will need to be
investigated.
-----------------------------------------------------------------------------
scsi_intr - SCSI interrupt test

This tests the wd95a's ability to send an interrupt to the cpu and have the
system respond correctly. The wd95a is programmed to interrupt upon a scsi
reset command. The reset command is sent and then the system is checked to
make sure it correctly "saw" the interrupt.
-----------------------------------------------------------------------
scsi_self - SCSI senddiag test

This test sends a SCSI senddiag command to each SCSI device found on each SCSI
bus and verifies that a good result is returned.
---------------------------------------------------------------------
scsi_dmaxfer - SCSI DMA transfer test

This test checks SCSI DMA transfers by performing DMA reads and writes from
each SCSI disk drive encountered. 1 block of data (512 bytes) is read and/or
written. The command syntax is:

scsi_dmaxfer [-w] [-p <partition #>] [-f]

        Without any switches, scsi_dmaxfer will read 512 bytes from partition
1 of the disk drive.

        -w: perform a write operation to the disk drive from memory in
addition to the read. The default is to only perform a read operation from the
disk to memory. Writing is a destructive action and should only be used by
experts. User confirmation is always requested unless a -f switch is used. The
data written (a's on pass 1 and 5's on pass 2) is then read back via another
DMA operation and the written data is compared to the read data.

        -p #: specify which disk partition to read or write to. The default is
partition #1.

        -f: the "force" switch. If specified, no user confirmation for the
writes will be requested. The default is to always request user confirmation
for any write operation. This switch is designed to be used in a script where
user input is not desired (e.g. in an overnight oven script).
----------------------------------------------------------------------------
scsi_dmaintr - SCSI DMA interrupt test

This test checks the SCSI DMA interrupt functionality by performing a DMA
read from the disk and specifying a bad read buffer address.
------------------------------------------------------------------------

EPC adapter:
-----------------------------------------------------------------------------
epc_regtest - Register Read/Write test for epc chip

Basic Read/Write test for the EPC chip registers, including the Parallel
Port registers.  Registers tested:

    EPC_IIDDUART0
    EPC_IIDDUART1
    EPC_IIDENET
    EPC_IIDPROFTIM
    EPC_IIDSPARE
    EPC_IIDPPORT
    EPC_IIDERROR
    EPC_EADDR0
    EPC_EADDR1
    EPC_EADDR2
    EPC_EADDR3
    EPC_EADDR4
    EPC_EADDR5
    EPC_TCMD
    EPC_RCMD
    EPC_TBASELO
    EPC_TBASEHI
    EPC_TLIMIT
    EPC_TTOP
    EPC_TITIMER
    EPC_RBASELO
    EPC_RBASEHI
    EPC_RLIMIT
    EPC_RTOP
    EPC_RITIMER
    EPC_PPBASELO
    EPC_PPBASEHI
    EPC_PPLEN
    EPC_PPCTRL

As stated above, this is a good basic test for the Parallel Port; for more
thorough testing a test fixture is required.
-----------------------------------------------------------------------------
epc_nvram - NVRAM Read/Write test

Does Read/Write pattern and address-in-address testing for all the NVRAM
accessable to the EPC chip.  Although the NVRAM is physically on the RTC
chip, it occupies a seperate address space and is accessed differently, hence
the separate test.
-----------------------------------------------------------------------------
epc_rtcreg - RTC register/NVRAM Read/Write test

Read/Write test for the RTC registers and the small amount of NVRAM in the RTC
address space portion of the RTC chip.  Registers tested:

    NVR_SEC
    NVR_SECALRM
    NVR_MI
    NVR_MINALRM
    NVR_HOUR
    NVR_HOURALRM
    NVR_WEEKDAY
    NVR_DAY
    NVR_MONTH
    NVR_YEAR

NVRAM tested is in the address range 0xE - 0x3F.
-----------------------------------------------------------------------------
epc_rtcinc - RTC clock increment test

Tests the ability of the RTC chip to handle time-of-day transitions.  Sets
the RTC to a known time and date (last second of the year), waits one second,
and checks to make certain that the time and date have changed correctly.
-----------------------------------------------------------------------------
epc_rtcint - RTC Interrupt generation test

Tests to make certain that the RTC can correct generate Alarm, Periodic, and
Update interrupts.  Validates the path from the RTC chip to the IP board's
master CPU.
-----------------------------------------------------------------------------
duart_loopback - Duart loopback test

Attempts to configure and test all available serial ports.  Does loopback
testing at all baud rates for each port tested.  Normally uses internal
loopback, but if invoked with "duart_loopback -e" assumes that an external
loopback fixture is being used.
-----------------------------------------------------------------------------
erase_nvram - NVRAM Erase Utility (Dangerous!)

Erases all data in non-volatile ram.  Used in the debug area to clear
totally fouled-up configuration data.

erase_nvram must be invoked with a slot number - "erase_nvram 5" would erase
the NVRAM data on the IO4 board in slot 5 of a system.

Normally only run in the debug/repair area.  DO NOT RUN THIS ON THE MASTER
IO4 BOARD UNLESS YOU WANT TO RE-CONFIGURE ALL SETUP DATA.
-----------------------------------------------------------------------------
epc_extint - External Interrupt Read/Write Utility

Called with "epc_extint slot# pattern".  Writes the hex value "pattern" to
the external interrupt outputs and returns the value seen on the external
interrupt inputs.

Since this test requires an external test fixture or jumper cables, it is
not part of the standard "io_all" script.
-----------------------------------------------------------------------------
enet_xmit - Ethernet tranmist/receive test (with internal loopback on)

Transmits 9 packets and receives them with the LXT internal loopback mode on. 
The transmit and receive status bytes are checked against expected values,
and the data in each byte of each packet is verified against what was
expected. The following is a short description of each of the 9 packets:

packet 0: 50 data bytes, walk 0 through the bytes.
packet 1: 50 data bytes, walk 1 through the bytes.
packet 2: 50 data bytes, alternating 55's and aa's in alternating bytes.
packet 3: 60 data bytes, alternating 0's and ff's in alternating bytes.
packet 4: 50 data bytes, all 55's.
packet 5: 1 data byte, short packet.
packet 6: 130 data bytes, decrementing pattern starting with ff.
packet 7: 3 data bytes, short packet.
packet 8: 130 data bytes, decrementing pattern starting with cc.
-----------------------------------------------------------------------------
enet_colctr - Read ethernet collision counters Test

Transmits the same 9 packets as enet_xmit but with LXT and EDLC in normal mode 
so packets will actually go out onto the net. The user is given instructions
that he needs to run "ttcp -r -s" on one other machine and "ttcp -t -s 
<machine #1>" on machine #2 in Unix. Then by running this test, collisions will
occur and we will display the collision counter counts after each packet is
sent. There is not really a fail status in this test unless we are unable to
transmit our packets. The test fails if the collision counter
counts being displayed never increment.
-----------------------------------------------------------------------------
epc_plptest - Parallel Port Write Test

Fills a buffer with printable characters and attempts to DMA it out the
parallel port.  Detects the presense of a printer - if a printer is present,
configures the port to use the "BUSY" mode and writes to the printer using
BUSY handshaking to prevent buffer overrun.  If no printer is present, uses
the "SACK" mode and writes as fast as the DMA engine sends characters.

If a printer is present, will detect printer errors and report them; in all
cases it will detect DMA timeout errors or failure to generate the DMA
completion interrupt.

If an external printer is present, these characters should be printed out:

!"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_
-----------------------------------------------------------------------------

#
# Get fe Arg - check in both $1 and $2
#
$fe = 0;
if (($1 == "fe") || ($2 == "fe")) {
  $fe = 1;
}

#
# Get extended Arg - check in both $1 and $2
#
$extended = 0;
if (($1 == "extended") || ($2 == "extended")) {
  $extended = 1;
}

#
# This is an ide startup file intended for use in the field by customers
# and Field Engineers.
#
if ($fe) {
    report=4;
    echo "Report level set to VERBOSE";
}
else {
    report=1;
}
fi

# Initialize script variables
#   NOTE: At the end of the startup script each variable that is still set
#         to 2 will indicate some tests that haven't been run (like after
#         an error).
$cpufailed=2;
$scsifailed=2;
$gr2failed=2;

$audiofailed=0;

# THE FOLLOWING IS THE STARTUP SCRIPT FOR THE CPU DIAGNOSTICS.
#
# IN ORDER FOR THE SCRIPT TO RUN PROPERLY, THE FOLLOWING MUST BE DONE:
#	1. CONNECT THE TRANSMIT AND RECEIVE PINS ON CHANNEL A AND B OF DUART 0,
#	   CHANNEL B OF DUART 1 (FOR CHANNEL B OF DUART 1, THE REQUEST_TO_SEND
#	   AND CLEAR_TO_SEND PINS MUST ALSO BE CONNECTED).

hinv

echo ""
echo "Ide included scripts are"
echo "ip32  cpu graphics fast_mem memory"
echo ""

fast_mem {

echo " STARTING FAST MEMORY TESTS "
date
echo "start Address/Data test, patttern=55"
$tmp=memtest3;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start Address/Data test, pattern=ff"
$tmp=memtest3 1;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo " END FAST MEMORY TESTS "
date
}

# memory and cache test
memory {

echo " STARTING MEMORY TESTS "
date
echo "start Address Uniqueness Test"
$tmp=memtest2 0;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start March Test"
$tmp=memtest2 1;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start Mats Test"
$tmp=memtest2 2;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start Kh Test"
$tmp=memtest2 3;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "Khpar Test"
$tmp=memtest2 5;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start March X Test"
$tmp=memtest2 8;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start March Y Test"
$tmp=memtest2 9;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start KH Doublword Test"
$tmp=memtest2 12;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
#$tmp=ldram;
#if ($tmp) {
#        wait;
#}
#$tmp=ldram -p;
#if ($tmp) {
#        wait;
#}
#$tmp=dram;
#if ($tmp) {
#        wait;
#}
#$tmp=dram -p;
#if ($tmp) {
#        wait;
#}
echo " END MEMORY TESTS "
date
}

ip32 {

echo " STARTING IP32 TESTS "
date
$cpufailed=0;

# UST test. Verify workings of the UST and interrupt capabilities
echo "start Counters test"
if ((cntrs) && $stoponerr)
        wait;
else
	echo "test passed"

date
echo "start I2C register test"
$tmp=i2c_reg;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
date
echo "start Ethernet Controller test"
$tmp=maceec;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start scsi test"
$tmp=scsi;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start Parallal Port internal loopback test"
$tmp=plploop;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
date
echo "start Serial Port internal loopback test"
$tmp=serialloop i;
if ($tmp) {
	wait;
}
else {
	echo "test passed"
}
echo " END IP32 TESTS "
date
# END OF IP32 SCRIPT
}

# cpu related tests
cpu {

echo " STARTING CPU TESTS "
date

# TLB test. Verify different tlb functions.
echo "start TLB test"
if ((tlb) && $stoponerr)
        wait;
else
	echo "test passed"
date
echo "start FPU test"
# Test floating point unit
$fpufailed=0;
if ((fpu) && $stoponerr)
        wait;
else
	echo "test passed"
date
echo "start DCache 1 test"
$tmp=dcache1;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
date
echo "start ICache 1 test"
$tmp=icache1;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
date
echo "start ICache 2 test"
$tmp=icache2;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
date
echo "start SCache 2 test"
$tmp=scache2;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
date
echo "start SCache 3 test"
$tmp=scache3;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
date
echo "start SCache 4 test"
$tmp=scache4;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
date
echo "start SCache 6 test"
$tmp=scache6;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
echo " END CPU TESTS "
date
# END OF CPU SCRIPT
}

# Graphics Tests
graphics {
echo " STARTING GRAPHICS TESTS "
date
echo "Start quick graphics test"
$tmp=qnd_gfx_test;
if ($tmp) {
        wait;
}
else {
	echo "test passed"
}
echo " END GRAPHICS TESTS "
date
}

fast_mem
cpu
ip32
graphics

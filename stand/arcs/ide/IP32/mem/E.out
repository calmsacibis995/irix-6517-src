# 1 "walkingbit.c"


 







# 1 "../../../include/fault.h"



 





# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sgidefs.h"
 



















 















 






 









 






		 


 









 



































 













 











typedef int __int32_t;
typedef unsigned  __uint32_t;








 



































	 
typedef long long __int64_t;
typedef unsigned long long  __uint64_t;


































typedef __int32_t __psint_t;
typedef __uint32_t __psunsigned_t;







 











 
typedef __int32_t __scint_t;
typedef __uint32_t __scunsigned_t;










# 11 "../../../include/fault.h"

 


















 









 







 


































 


















































 


















































 















































 



 












 























  







 




# 1 "../../../include/genpda.h"



 

















































# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"
 















 
 

 
 
 






# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/standards.h"


 

















 






























 
















 
 
 

 
 

 












 


 







 
 

 







 

 



 

 









 
 

 









 





# 30 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"
# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sgidefs.h"
 










# 252 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sgidefs.h"

# 31 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"

 
typedef unsigned char   uchar_t;
typedef unsigned short  ushort_t;
typedef unsigned int    uint_t;
typedef unsigned long   ulong_t;

 
typedef	char *		addr_t;		 
typedef	char *		caddr_t;	 



typedef	long		daddr_t;	 

typedef	long		pgno_t;		 
typedef	__uint32_t	pfn_t;		 
typedef	short		cnt_t;		 
 



typedef __int32_t	pgcnt_t;	 

typedef enum { B_FALSE, B_TRUE } boolean_t;


 








typedef long			id_t;	 
					 
					 
					 
					 





 


typedef ulong_t	major_t;	 
typedef ulong_t	minor_t;	 






 










typedef	ushort_t o_mode_t;		 
typedef short	o_dev_t;		 
typedef	ushort_t o_uid_t;		 
typedef	o_uid_t	o_gid_t;		 
typedef	short	o_nlink_t;		 
typedef short	o_pid_t;		 
typedef __uint32_t o_ino_t;		 


typedef	unsigned long	mode_t;		 
typedef	unsigned long	dev_t;		 
typedef	long		uid_t;
typedef	long		gid_t;
typedef unsigned long	nlink_t;	 
typedef long		pid_t;		 













typedef	unsigned long	ino_t;		 

typedef __uint64_t	ino64_t;	 




typedef long		off_t;		 





typedef	__int64_t	off64_t;	 

typedef __scint_t	__scoff_t;	 

typedef __scoff_t	scoff_t;	 



typedef	__int64_t	blkcnt_t;	 
typedef	__uint64_t	fsblkcnt_t;	 
typedef	__uint64_t	fsfilcnt_t;	 






typedef	long		swblk_t;
typedef	unsigned long	paddr_t;	 
typedef	int		key_t;		 
typedef	unsigned char	use_t;		 
typedef	short		sysid_t;
typedef	short		index_t;
typedef unsigned int 	lock_t;		 
typedef	signed char	cpuid_t;	 
typedef	unsigned char	pri_t;		 
typedef __uint64_t	accum_t;	 
typedef __int64_t	prid_t;		 
typedef __int64_t	ash_t;		 




typedef unsigned int size_t;









typedef int    ssize_t;









typedef	long		time_t;		 









typedef	long		clock_t;  









typedef long wchar_t;








typedef int             clockid_t;



typedef int		timer_t;



 




typedef	unsigned int	useconds_t;


 



typedef __scunsigned_t	bitnum_t;	 
typedef __scunsigned_t	bitlen_t;	 


typedef int processorid_t;		 
typedef int toid_t;			 
typedef	long *qaddr_t;		       
typedef __uint32_t inst_t;		 

 


typedef unsigned machreg_t;






 


typedef __uint32_t fpreg_t;






 







typedef signed char             int8_t;
typedef unsigned char           uint8_t;
typedef signed short            int16_t;
typedef unsigned short          uint16_t;
typedef signed int              int32_t;
typedef unsigned int            uint32_t;
typedef signed long long int    int64_t;
typedef unsigned long long int  uint64_t;
typedef signed long long int    intmax_t;
typedef unsigned long long int  uintmax_t;
typedef signed long int         intptr_t;
typedef unsigned long int       uintptr_t;


 



typedef	unsigned char	u_int8_t;
typedef	unsigned short	u_int16_t;
typedef	__uint32_t	u_int32_t;


 













 



typedef	long	hostid_t;

 








 



# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/bsd_types.h"
 





















 




typedef	struct { int r[1]; } *	physadr;
typedef	unsigned char	unchar;
typedef	unsigned char	u_char;
typedef	unsigned short	ushort;
typedef	unsigned short	u_short;
typedef	unsigned int	uint;
typedef	unsigned int	u_int;
typedef	unsigned long	ulong;
typedef	unsigned long	u_long;
typedef	struct	_quad { long val[2]; } quad;






# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/select.h"
 















 
 
 

 
 
 
 






# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/standards.h"
# 147 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/standards.h"

# 32 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/select.h"

 






 










typedef	long	fd_mask_t;
typedef	unsigned long	ufd_mask_t;









typedef	struct fd_set {
	fd_mask_t	fds_bits[(((1024)+(( (int)(sizeof(fd_mask_t) * 8))-1))/( (int)(sizeof(fd_mask_t) * 8))) ];
} fd_set;





# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/string.h"






 
















 
 
 

 
 
 
 

# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/standards.h"
# 147 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/standards.h"

# 34 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/string.h"















 


extern void *memcpy(void *, const void *, size_t);
extern void *memmove(void *, const void *, size_t);
extern char *strcpy(char *, const char *);
extern char *strncpy(char *, const char *, size_t);
extern char *strcat(char *, const char *);
extern char *strncat(char *, const char *, size_t);
extern void *memccpy(void *, const void *, int, size_t);
extern int memcmp(const void *, const void *, size_t);
extern int strcmp(const char *, const char *);
extern int strcoll(const char *, const char *);
extern int strncmp(const char *, const char *, size_t);
extern size_t strxfrm(char *, const char *, size_t);
extern void *memchr(const void *, int, size_t);
extern char *strchr(const char *, int);
extern size_t strcspn(const char *, const char *);
#pragma int_to_unsigned strcspn
extern char *strpbrk(const char *, const char *);
extern char *strrchr(const char *, int);
extern size_t strspn(const char *, const char *);
#pragma int_to_unsigned strspn
extern char *strstr(const char *, const char *);
extern char *strtok(char *, const char *);
extern void *memset(void *, int, size_t);
extern char *strerror(int);
extern size_t strlen(const char *);
#pragma int_to_unsigned strlen


extern int ffs(int);
 
extern int strcasecmp(const char *, const char *);
extern int strncasecmp(const char *, const char *, size_t);



extern char *strdup(const char *);



extern char *strtok_r(char *, const char *, char **);



 



#pragma intrinsic (strcpy)












# 71 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/select.h"






 













typedef	long	fd_mask;








# 45 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/bsd_types.h"


# 336 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"







typedef struct {                 
        __uint32_t sigbits[2];
} k_sigset_t;






typedef __uint32_t k_fltset_t;	 

 












 



typedef __int32_t app32_int_t;
typedef __uint32_t app32_uint_t;
typedef __int32_t app32_long_t;
typedef __uint32_t app32_ulong_t;
typedef __int64_t app32_long_long_t;
typedef __uint64_t app32_ulong_long_t;
typedef __int32_t app64_int_t;
typedef __uint32_t app64_uint_t;
typedef __int64_t app64_long_t;
typedef __uint64_t app64_ulong_t;
typedef __uint32_t app32_ptr_t;
typedef __uint64_t app64_ptr_t;

 







typedef int sysarg_t;
typedef unsigned usysarg_t;


 





typedef char * __promptr_t;


 

typedef __uint64_t k_machreg_t;
typedef __int64_t k_smachreg_t;






typedef __uint64_t k_fpreg_t;




 





typedef struct __userabi {
	short uabi_szint;
	short uabi_szlong;
	short uabi_szptr;
	short uabi_szlonglong;
} __userabi_t;


 


typedef void *		sm_swaphandle_t; 
typedef struct anon *	anon_hdl;	 
typedef	int		 (*pl_t)();	 



typedef unsigned int	cpumask_t;	 





# 55 "../../../include/genpda.h"
# 1 "../../../include/setjmp.h"







# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"
 















 
 

 
 
 

# 448 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"

# 9 "../../../include/setjmp.h"


typedef int		jmp_buf[13 ];
typedef int *		jmpbufptr;







extern int		setjmp(jmp_buf);
extern int		longjmp(jmp_buf,int);































# 56 "../../../include/genpda.h"

typedef unsigned long arcs_reg_t;
typedef volatile unsigned long varcs_reg_t;

 












typedef union generic_pda_u {
    volatile struct generic_pda_s {
	varcs_reg_t gpda_magic;		 
	varcs_reg_t epc_save;		 
	varcs_reg_t at_save;		 
	varcs_reg_t v0_save;
	varcs_reg_t badvaddr_save;	 
	varcs_reg_t cause_save;		 
	varcs_reg_t sp_save;		 
	varcs_reg_t sr_save;		 
	varcs_reg_t exc_save;		 
	varcs_reg_t stack_mode;		 
	varcs_reg_t mode_save;		 
	varcs_reg_t my_virtid;		 
	varcs_reg_t my_physid;		 
	varcs_reg_t notfirst;
	varcs_reg_t first_epc;
	varcs_reg_t retn_addr_save;	 
	varcs_reg_t *pda_initial_sp;	 
	varcs_reg_t *pda_fault_sp;	 
	k_machreg_t *regs;		 
	jmpbufptr   pda_nofault;
	varcs_reg_t cache_err_save;	 
	varcs_reg_t error_epc_save;	 

	 

	 






	 








	k_machreg_t _sv_gp;
	k_machreg_t _sv_ra;
	k_machreg_t _sv_k1;
	k_machreg_t _symmon_sv_at;	 



	int	    *dbg_stack;		 
	k_machreg_t *exc_stack;		 
	int	    dbg_mode;		 
	int	    dbg_modesav;
	int	    dbg_exc;		 
	 

	jmpbufptr   _restart_buf;	 
	jmpbufptr   bp_nofault;
	k_machreg_t *sregs;		 
	jmpbufptr   step_jmp;
	int	    step_flag;
	int	    step_count;		 
	int	    (*step_routine)(int);
	__psunsigned_t	    noffst;
	char	    *cbuf;		 
	int	    column;		 
	int	    saved;
	void (*volatile launch)(void *);	 
	void	    *launch_arg;	 





	inst_t	    *save_utlb[4];
	inst_t	    *save_norm[4];
	inst_t	    *save_xtlb[4];

    } gdata;
    char	filler[512 ];	 
} gen_pda_t;

extern gen_pda_t	gen_pda_tab[];




# 194 "../../../include/genpda.h"


# 257 "../../../include/genpda.h"


 




# 301 "../../../include/genpda.h"




# 289 "../../../include/fault.h"


 






 


























 












 






extern unsigned long	*initial_stack;	 
extern unsigned long	*_fault_sp;	 


 
 














 










































 




 









 













# 12 "walkingbit.c"
# 1 "../../../include/setjmp.h"
# 52 "../../../include/setjmp.h"

# 13 "walkingbit.c"
# 1 "./mem.h"





 



# 1 "../../../include/uif.h"





 





# 1 "../../../include/ide_msg.h"


















 










 






 

























 





 









extern int _coherent;



# 13 "../../../include/uif.h"
# 1 "../../../include/parser.h"



 



# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sgidefs.h"
 










# 252 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sgidefs.h"

# 9 "../../../include/parser.h"

 


struct range {
	__psint_t	ra_base;	 
	__psint_t	ra_count;	 
	int		ra_size;	 
};

 



struct cmd_table {
	char	*ct_string;		 
					 
	int	(*ct_routine)(int, char *[], char *[], struct cmd_table *);	
	char	*ct_usage;		 
};





 



















void command_parser(struct cmd_table *, char *, int, struct cmd_table *);
struct cmd_table *lookup_cmd(struct cmd_table *, char *);
int parse_range(register char *, int, struct range *);
int help(int, char **, char **, struct cmd_table *);
void usage(struct cmd_table *);
void parse_error(char *);


# 14 "../../../include/uif.h"

typedef	int	bool_t;

enum bitsense { BIT_TRUE, BIT_INVERT };
enum runflag { RUN_UNTIL_DONE, RUN_UNTIL_ERROR };
enum arcsboolean { FALSE, TRUE };
extern __psint_t *Reportlevel;

 


void	memerr(char *, __psunsigned_t, __psunsigned_t , int);
void	msg_printf(int msglevel, char *fmt, ...);
void	okydoky(void);
void	sum_error(char *test_name);
void	busy(int);
void	buffon(void);
void	buffoff(void);



# 11 "./mem.h"

 










 
extern bool_t	
	memaddruniq(struct range *, enum bitsense, enum runflag, void (*)());
extern bool_t  
	memwalkingbit(struct range *, enum bitsense, enum runflag, void (*)());
extern bool_t  
	memparity(struct range *, enum bitsense, enum runflag, void (*)());

 
void	pardisable(void);	 
void	parenable(void);	 
void	parclrerr(void);	 
void	parwbad(void *, unsigned int, int);	 


# 14 "walkingbit.c"
# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/cpu.h"
 











 







 



























































# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/IP32.h"





# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/mips_addrspace.h"




 











 


# 67 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/mips_addrspace.h"






















 







 
































						 

						 

						 

						 

						 






# 187 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/mips_addrspace.h"


 





 










 



 

 


 








 








# 7 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/IP32.h"
# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/crime.h"




# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"
 















 
 

 
 
 

# 448 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"

# 6 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/crime.h"
# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/reg.h"
 
















 





































































 





 




typedef struct eframe_s {
	k_machreg_t	ef_argsave0;
	k_machreg_t	ef_argsave1;
	k_machreg_t	ef_argsave2;
	k_machreg_t	ef_argsave3;
	k_machreg_t	ef_at;
	k_machreg_t	ef_v0;
	k_machreg_t	ef_v1;
	k_machreg_t	ef_a0;
	k_machreg_t	ef_a1;
	k_machreg_t	ef_a2;
	k_machreg_t	ef_a3;

	k_machreg_t	ef_t0;
	k_machreg_t	ef_t1;
	k_machreg_t	ef_t2;
	k_machreg_t	ef_t3;
	k_machreg_t	ef_t4;
	k_machreg_t	ef_t5;
	k_machreg_t	ef_t6;
	k_machreg_t	ef_t7;















	k_machreg_t	ef_s0;
	k_machreg_t	ef_s1;
	k_machreg_t	ef_s2;
	k_machreg_t	ef_s3;
	k_machreg_t	ef_s4;
	k_machreg_t	ef_s5;
	k_machreg_t	ef_s6;
	k_machreg_t	ef_s7;
	k_machreg_t	ef_t8;
	k_machreg_t	ef_t9;
	k_machreg_t	ef_k0;
	k_machreg_t	ef_k1;
	k_machreg_t	ef_gp;
	k_machreg_t	ef_sp;
	k_machreg_t	ef_fp;
	k_machreg_t	ef_ra;
	k_machreg_t	ef_sr;
	k_machreg_t	ef_mdlo;
	k_machreg_t	ef_mdhi;
	k_machreg_t	ef_badvaddr;
	k_machreg_t	ef_cause;
	k_machreg_t	ef_epc;
	k_machreg_t	ef_savedpc;



	k_machreg_t	ef_liomsk;

	k_machreg_t	ef_config;




	__uint64_t	ef_crmmsk;	 



} eframe_t;



# 7 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/crime.h"

typedef unsigned long long _crmreg_t;
unsigned long long read_reg64(__psunsigned_t);
void write_reg64(long long, __psunsigned_t);



 







 









 














 










 

 


 

 










 



























































 

 








 




 



































 

 


# 8 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/IP32.h"
# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/mace.h"




 


















 








 










 



 



 










 





 



















# 9 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/IP32.h"




 





























						 
						 




















 













 




 







 







 









 




 















 
typedef struct scuzzy {
	volatile unsigned char	*d_addr;	 
	volatile unsigned char	*d_data;	 
	volatile unsigned long	*d_ctrl;	 
	volatile unsigned long	*d_bcnt;	 
	volatile unsigned long	*d_curbp;	 
	volatile unsigned long	*d_nextbp;	 
	volatile unsigned long	*d_dmacfg;	 
	volatile unsigned long	*d_piocfg;	 
	unsigned char d_initflags;	 
} scuzzy_t;



 







 



 










































 

struct nvram_entry {
    char nt_name[32 ];		 
    char *nt_value;			 
					 
    int nt_nvaddr;			 
    int nt_nvlen;			 
};

typedef void (*intvec_func_t)(eframe_t *, __psint_t);

extern int setcrimevector(int, int, intvec_func_t, __psint_t, short);






 







 






# 82 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/cpu.h"







# 15 "walkingbit.c"
# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/sbd.h"



 










 
 
 

 
 
 



# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/mips_addrspace.h"

# 232 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/mips_addrspace.h"

# 26 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/sbd.h"





 




 















































































 




















































































































 















 
















 




 







































 































 





















 










 






 
























 



 





















 














 










 



 





 















 
















































 



















 

















 























 



# 641 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/sbd.h"
















































 
 




typedef union rev_id {
	unsigned int	ri_uint;
	struct {

		unsigned int	Ri_fill:16,
				Ri_imp:8,		 
				Ri_majrev:4,		 
				Ri_minrev:4;		 







	} Ri;
} rev_id_t;


































 
 


# 16 "walkingbit.c"
# 1 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"
 















 
 

 
 
 

# 448 "/hosts/june/usr/people/montep/banyanroot/root/usr/include/sys/types.h"

# 17 "walkingbit.c"








 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

bool_t
memwalkingbit(struct range *ra, enum bitsense sense, enum runflag till,
	void (*errfun)())
{
	register int	busy_count = 0;
	register int	count = ra->ra_count;
	jmp_buf		faultbuf;
	bool_t		passflag = TRUE;

	msg_printf(4 , "CPU local memory walking bit test\n");

	if (setjmp(faultbuf)) {
		busy(0);
		show_fault();
		return FALSE;
	}
	gen_pda_tab[0 ].gdata.pda_nofault  = faultbuf;

	busy(0);
	switch (ra->ra_size) {
	case sizeof(u_int):
		{										register volatile u_int	*cpuctrl0 =						(u_int *)((__psunsigned_t)(CPUCTRL0) | 0xA0000000 ) ;					register volatile u_int	*ptr;						register u_int		walk_mask;														ptr = (u_int *)ra->ra_base;						walk_mask = sense == BIT_INVERT ? ~0x0 : 0x0;				while (--count >= 0) {								register u_int	walking_1s = 0x1;														do {										register u_int	value;																value = walking_1s ^ walk_mask;						*ptr = value;								*cpuctrl0;								if (*ptr != value) {								passflag = FALSE;							if (errfun) 									(*errfun)((u_int)ptr, value,							*ptr, sizeof(u_int));					if (till == RUN_UNTIL_ERROR)							return passflag;					}									walking_1s <<= 1;						} while (walking_1s);																ptr++;									if (!busy_count--) {								busy_count = 0x4000 ;						busy(1);							}								}									break;								} 

	case sizeof(u_short):
		{										register volatile u_int	*cpuctrl0 =						(u_int *)((__psunsigned_t)(CPUCTRL0) | 0xA0000000 ) ;					register volatile u_short	*ptr;						register u_short		walk_mask;														ptr = (u_short *)ra->ra_base;						walk_mask = sense == BIT_INVERT ? ~0x0 : 0x0;				while (--count >= 0) {								register u_short	walking_1s = 0x1;														do {										register u_short	value;																value = walking_1s ^ walk_mask;						*ptr = value;								*cpuctrl0;								if (*ptr != value) {								passflag = FALSE;							if (errfun) 									(*errfun)((u_int)ptr, value,							*ptr, sizeof(u_short));					if (till == RUN_UNTIL_ERROR)							return passflag;					}									walking_1s <<= 1;						} while (walking_1s);																ptr++;									if (!busy_count--) {								busy_count = 0x4000 ;						busy(1);							}								}									break;								} 

	case sizeof(u_char):
		{										register volatile u_int	*cpuctrl0 =						(u_int *)((__psunsigned_t)(CPUCTRL0) | 0xA0000000 ) ;					register volatile u_char	*ptr;						register u_char		walk_mask;														ptr = (u_char *)ra->ra_base;						walk_mask = sense == BIT_INVERT ? ~0x0 : 0x0;				while (--count >= 0) {								register u_char	walking_1s = 0x1;														do {										register u_char	value;																value = walking_1s ^ walk_mask;						*ptr = value;								*cpuctrl0;								if (*ptr != value) {								passflag = FALSE;							if (errfun) 									(*errfun)((u_int)ptr, value,							*ptr, sizeof(u_char));					if (till == RUN_UNTIL_ERROR)							return passflag;					}									walking_1s <<= 1;						} while (walking_1s);																ptr++;									if (!busy_count--) {								busy_count = 0x4000 ;						busy(1);							}								}									break;								} 
	}

	busy(0);
	gen_pda_tab[0 ].gdata.pda_nofault  = 0;
	return passflag;
}

#
# Xbow Register Definitions
#
#   The field name should have a bit range in it, if applicable.  For
#   example, ADDRESS<31:03> below.  Hwreg will recognize it when formatting
#   the field value to show it left-shifted by the proper amount.
#
#   The first set of registers occur once.  The second set is replicated
#   8 times, once for each port 8-F.
#

register XB_ID
	address		  0x00004
	field <27:12> R   0x0000000000000000 PART_NUM
	field <11:1>  R   0x0000000000000000 MFG_ID
        field <0>     1   0x0000000000000001 ALWAYS_1
end

register XB_STAT
	address		  0x0000c
	field <31>    R	  0x0000000000000000 LINK_F_INT_REQ
	field <30>    R	  0x0000000000000000 LINK_E_INT_REQ
	field <29>    R	  0x0000000000000000 LINK_D_INT_REQ
	field <28>    R	  0x0000000000000000 LINK_C_INT_REQ
	field <27>    R	  0x0000000000000000 LINK_B_INT_REQ
	field <26>    R	  0x0000000000000000 LINK_A_INT_REQ
	field <25>    R	  0x0000000000000000 LINK_9_INT_REQ
	field <24>    R	  0x0000000000000000 LINK_8_INT_REQ
	field <23>    R	  0x0000000000000000 WGT_0_INT_REQ
	field <5>     R	  0x0000000000000000 REG_ACCESS_ERR
	field <2>     R	  0x0000000000000000 XTALK_ERR
	field <0>     R	  0x0000000000000000 MULTI_ERR
end

register XB_ERR_UPPER
	address		  0x00014
	field <15:0>  R	  0x0000000000000000 ERR_ADDR<47:32>
end

register XB_ERR_LOWER
	address		  0x0001c
	field <31:0>  R	  0x0000000000000000 ERR_ADDR<31:0>
end

register XB_CTRL
	address		  0x00024
	field <5>     RW  0x0000000000000000 ENINT_ACCESS_ERR
	field <2>     RW  0x0000000000000000 ENINT_XTALK_ERR
end

register XB_PKT_TO
	address		  0x0002c
	field <19:0>  RW  0x00000000000fffff PKT_TO_INTERVAL
end

register XB_INT_UPPER
	address		  0x00034
	field <31:24> RW  0x0000000000000000 INT_VECTOR
	field <19:16> RW  0x0000000000000000 INT_TARGET_WID
	field <15:0>  RW  0x0000000000000000 INT_TARGET_ADDR<47:32>
end

register XB_INT_LOWER
	address		  0x0003c
	field <31:0>  RW  0x0000000000000000 INT_TARGET_ADDR<31:0>
end

register XB_ERR_CMDWORD
	address		  0x00044
	field <31:0>  RWS 0x0000000000000000 ERR_CMDWORD
	note		  Write clears XB_ERR_CMDWORD, XB_ERR_UPPER and XB_ERR_LOWER
end

register XB_LLP_CTRL
	address		  0x0004c
	field <25:16> RW  0x00000000000003ff MAX_UPKT_RETRY
	field <15:10> RW  0x0000000000000006 NULL_TO
	field <9:0>   RW  0x0000000000000010 MAX_BURST
end

register XB_STAT_CLR
	address		  0x00054
	field <31>    RC  0x0000000000000000 LINK_F_INT_REQ
	field <30>    RC  0x0000000000000000 LINK_E_INT_REQ
	field <29>    RC  0x0000000000000000 LINK_D_INT_REQ
	field <28>    RC  0x0000000000000000 LINK_C_INT_REQ
	field <27>    RC  0x0000000000000000 LINK_B_INT_REQ
	field <26>    RC  0x0000000000000000 LINK_A_INT_REQ
	field <25>    RC  0x0000000000000000 LINK_9_INT_REQ
	field <24>    RC  0x0000000000000000 LINK_8_INT_REQ
	field <23>    RC  0x0000000000000000 WGT_0_INT_REQ
	field <5>     RC  0x0000000000000000 REG_ACCESS_ERR
	field <2>     RC  0x0000000000000000 XTALK_ERR
	field <0>     RC  0x0000000000000000 MULTI_ERR
end

register XB_ARB_RELOAD
	address		  0x0005c
	field <5:0>   RW  0x0000000000000002 GBR_RELOAD_INTERVAL
end

register XB_PERF_CTR_A
	address		  0x00064
	field <23:20> RW  0x0000000000000008 PORT_SELECT
	field <19:0>  R   0x0000000000000000 PERF_CTR_VAL
end

register XB_PERF_CTR_B
	address		  0x0006c
	field <23:20> RW  0x0000000000000008 PORT_SELECT
	field <19:0>  R   0x0000000000000000 PERF_CTR_VAL
end

register XB_NIC
	address		  0x00074
	field <19:10> RW  0x0000000000000000 NIC_BMP
	field <9:2>   RW  0x0000000000000000 NIC_OFFSET
	field <1>     RW  0x0000000000000001 NIC_DATA_VLD
	field <0>     RW  0x0000000000000000 NIC_DATA
end

#
# Link 8 base = 0x100.  Link(x) base = 0x100 + 0x40 * (x - 8)
# The following register addresses are offset from the link number base
#

# Port 8

register XB_LINK_IBUF_FLUSH_8
	address		  0x00104
	field <0>     RS  0x0000000000000000 INPUT_FLUSH_OK_N
end

register XB_LINK_CTRL_8
	address		  0x0010c
	field <31>    RW  0x0000000000000000 ENINT_LINK_ALIVE
	field <29:28> RW  0x0000000000000000 PERF_MODE_SEL
	field <27:25> RW  0x0000000000000000 INPKT_BUF_LVL
	field <24>    RW  0x0000000000000000 SEND_BMOD8
	field <23>    RW  0x0000000000000000 EN_FORCE_BAD_UPKT
	field <22:18> RW  0x0000000000000002 CREDITS_TO_WIDGET
	field <17>    RW  0x0000000000000000 ENINT_ILLEGAL_DEST
	field <16>    RW  0x0000000000000000 ENINT_BUF_OFLOW
	field <8>     RW  0x0000000000000000 ENINT_BAND_ALLOC_ERR
	field <7>     RW  0x0000000000000000 ENINT_LLP_RX_ERRCTR_OFLOW
	field <6>     RW  0x0000000000000000 ENINT_LLP_TX_RTRYCTR_OFLOW
	field <5>     RW  0x0000000000000000 ENINT_LLP_TX_MAX_RTRY
	field <4>     RW  0x0000000000000000 ENINT_LLP_RX_ERR
	field <3>     RW  0x0000000000000000 ENINT_LLP_TX_RTRY
	field <2>     RW  0x0000000000000000 UNUSED
	field <1>     RW  0x0000000000000000 ENINT_MAXREQ_TO
	field <0>     RW  0x0000000000000000 ENINT_SRC_TO
end

register XB_LINK_STAT_8
	address		  0x00114
	field <31>    R   0x0000000000000000 LINK_ALIVE
	field <18>    R   0x0000000000000000 MULTI_ERR
	field <17>    R   0x0000000000000000 ILLEGAL_DEST
	field <16>    R   0x0000000000000000 BUF_OFLOW
	field <15>    R   0x0000000000000000 BAND_ALLOC_ERR_F
	field <14>    R   0x0000000000000000 BAND_ALLOC_ERR_E
	field <13>    R   0x0000000000000000 BAND_ALLOC_ERR_D
	field <12>    R   0x0000000000000000 BAND_ALLOC_ERR_C
	field <11>    R   0x0000000000000000 BAND_ALLOC_ERR_B
	field <10>    R   0x0000000000000000 BAND_ALLOC_ERR_A
	field <9>     R   0x0000000000000000 BAND_ALLOC_ERR_9
	field <8>     R   0x0000000000000000 BAND_ALLOC_ERR_8
	field <7>     R   0x0000000000000000 LLP_RX_ERR_CTR_OFLOW
	field <6>     R   0x0000000000000000 LLP_TX_RTRY_CTR_OFLOW
	field <5>     R   0x0000000000000000 LLP_TX_MAX_RTRY
	field <4>     R   0x0000000000000000 LLP_RX_ERR
	field <3>     R   0x0000000000000000 LLP_TX_RTRY
	field <1>     R   0x0000000000000000 MAXREQ_TO
	field <0>     R   0x0000000000000000 SRC_TO
end

register XB_LINK_ARB_UPPER_8
	address		  0x0011c
	field <31:29> RW  0x0000000000000000 RWV_B
	field <28:24> RW  0x0000000000000000 GBR_B
	field <23:21> RW  0x0000000000000000 RWV_A
	field <20:16> RW  0x0000000000000000 GBR_A
	field <15:13> RW  0x0000000000000000 RWV_9
	field <12:8>  RW  0x0000000000000000 GBR_9
	field <7:5>   RW  0x0000000000000000 RWV_8
	field <4:0>   RW  0x0000000000000000 GBR_8
end

register XB_LINK_ARB_LOWER_8
	address		  0x00124
	field <31:29> RW  0x0000000000000000 RWV_F
	field <28:24> RW  0x0000000000000000 GBR_F
	field <23:21> RW  0x0000000000000000 RWV_E
	field <20:16> RW  0x0000000000000000 GBR_E
	field <15:13> RW  0x0000000000000000 RWV_D
	field <12:8>  RW  0x0000000000000000 GBR_D
	field <7:5>   RW  0x0000000000000000 RWV_C
	field <4:0>   RW  0x0000000000000000 GBR_C
end

register XB_LINK_STAT_CLR_8
	address		  0x0012c
	field <31>    RC  0x0000000000000000 LINK_ALIVE
	field <18>    RC  0x0000000000000000 MULTI_ERR
	field <17>    RC  0x0000000000000000 ILLEGAL_DEST
	field <16>    RC  0x0000000000000000 BUF_OFLOW
	field <15>    RC  0x0000000000000000 BAND_ALLOC_ERR_F
	field <14>    RC  0x0000000000000000 BAND_ALLOC_ERR_E
	field <13>    RC  0x0000000000000000 BAND_ALLOC_ERR_D
	field <12>    RC  0x0000000000000000 BAND_ALLOC_ERR_C
	field <11>    RC  0x0000000000000000 BAND_ALLOC_ERR_B
	field <10>    RC  0x0000000000000000 BAND_ALLOC_ERR_A
	field <9>     RC  0x0000000000000000 BAND_ALLOC_ERR_9
	field <8>     RC  0x0000000000000000 BAND_ALLOC_ERR_8
	field <7>     RC  0x0000000000000000 LLP_RX_ERR_CTR_OFLOW
	field <6>     RC  0x0000000000000000 LLP_TX_RTRY_CTR_OFLOW
	field <5>     RC  0x0000000000000000 LLP_TX_MAX_RTRY
	field <4>     RC  0x0000000000000000 LLP_RX_ERR
	field <3>     RC  0x0000000000000000 LLP_TX_RTRY
	field <1>     RC  0x0000000000000000 MAXREQ_TO
	field <0>     RC  0x0000000000000000 SRC_TO
	note		  Also clears XB_LINK_AUX_STAT
end

register XB_LINK_RESET_8
	address		  0x00134
	field <31:0>  WS  0x0000000000000000 IGNORED
	note		  Write resets port and sends link-reset to widget
end

register XB_LINK_AUX_STAT_8
	address		  0x0013c
	field <31:24> R	  0x0000000000000000 LLP_RX_ERR_CTR
	field <23:16> R	  0x0000000000000000 LLP_TX_RTRY_CTR
	field <15>    R	  0x0000000000000000 TO_PKT_FROM_LINK_F
	field <14>    R	  0x0000000000000000 TO_PKT_FROM_LINK_E
	field <13>    R	  0x0000000000000000 TO_PKT_FROM_LINK_D
	field <12>    R	  0x0000000000000000 TO_PKT_FROM_LINK_C
	field <11>    R	  0x0000000000000000 TO_PKT_FROM_LINK_B
	field <10>    R	  0x0000000000000000 TO_PKT_FROM_LINK_A
	field <9>     R	  0x0000000000000000 TO_PKT_FROM_LINK_9
	field <8>     R	  0x0000000000000000 TO_PKT_FROM_LINK_8
	field <6>     R	  0x0000000000000000 LINK_FAILURE
	field <5>     R	  0x0000000000000000 WIDGET_PRESENT
	field <4>     R	  0x0000000000000000 BITMODE8
	note		  Cleared by read of XB_LINK_STAT_CLR
end

# Port 9

register XB_LINK_IBUF_FLUSH_9
	address		  0x00144
	see		  XB_LINK_IBUF_FLUSH_8
end

register XB_LINK_CTRL_9
	address		  0x0014c
	see		  XB_LINK_CTRL_8
end

register XB_LINK_STAT_9
	address		  0x00154
	see		  XB_LINK_STAT_8
end

register XB_LINK_ARB_UPPER_9
	address		  0x0015c
	see		  XB_LINK_ARB_UPPER_8
end

register XB_LINK_ARB_LOWER_9
	address		  0x00164
	see		  XB_LINK_ARB_LOWER_8
end

register XB_LINK_STAT_CLR_9
	address		  0x0016c
	see		  XB_LINK_STAT_CLR_8
end

register XB_LINK_RESET_9
	address		  0x00174
	see		  XB_LINK_RESET_8
end

register XB_LINK_AUX_STAT_9
	address		  0x0017c
	see		  XB_LINK_AUX_STAT_8
end

# Port A

register XB_LINK_IBUF_FLUSH_A
	address		  0x00184
	see		  XB_LINK_IBUF_FLUSH_8
end

register XB_LINK_CTRL_A
	address		  0x0018c
	see		  XB_LINK_CTRL_8
end

register XB_LINK_STAT_A
	address		  0x00194
	see		  XB_LINK_STAT_8
end

register XB_LINK_ARB_UPPER_A
	address		  0x0019c
	see		  XB_LINK_ARB_UPPER_8
end

register XB_LINK_ARB_LOWER_A
	address		  0x001a4
	see		  XB_LINK_ARB_LOWER_8
end

register XB_LINK_STAT_CLR_A
	address		  0x001ac
	see		  XB_LINK_STAT_CLR_8
end

register XB_LINK_RESET_A
	address		  0x001b4
	see		  XB_LINK_RESET_8
end

register XB_LINK_AUX_STAT_A
	address		  0x001bc
	see		  XB_LINK_AUX_STAT_8
end

# Port B

register XB_LINK_IBUF_FLUSH_B
	address		  0x001c4
	see		  XB_LINK_IBUF_FLUSH_8
end

register XB_LINK_CTRL_B
	address		  0x001cc
	see		  XB_LINK_CTRL_8
end

register XB_LINK_STAT_B
	address		  0x001d4
	see		  XB_LINK_STAT_8
end

register XB_LINK_ARB_UPPER_B
	address		  0x001dc
	see		  XB_LINK_ARB_UPPER_8
end

register XB_LINK_ARB_LOWER_B
	address		  0x001e4
	see		  XB_LINK_ARB_LOWER_8
end

register XB_LINK_STAT_CLR_B
	address		  0x001ec
	see		  XB_LINK_STAT_CLR_8
end

register XB_LINK_RESET_B
	address		  0x001f4
	see		  XB_LINK_RESET_8
end

register XB_LINK_AUX_STAT_B
	address		  0x001fc
	see		  XB_LINK_AUX_STAT_8
end

# Port C

register XB_LINK_IBUF_FLUSH_C
	address		  0x00204
	see		  XB_LINK_IBUF_FLUSH_8
end

register XB_LINK_CTRL_C
	address		  0x0020c
	see		  XB_LINK_CTRL_8
end

register XB_LINK_STAT_C
	address		  0x00214
	see		  XB_LINK_STAT_8
end

register XB_LINK_ARB_UPPER_C
	address		  0x0021c
	see		  XB_LINK_ARB_UPPER_8
end

register XB_LINK_ARB_LOWER_C
	address		  0x00224
	see		  XB_LINK_ARB_LOWER_8
end

register XB_LINK_STAT_CLR_C
	address		  0x0022c
	see		  XB_LINK_STAT_CLR_8
end

register XB_LINK_RESET_C
	address		  0x00234
	see		  XB_LINK_RESET_8
end

register XB_LINK_AUX_STAT_C
	address		  0x0023c
	see		  XB_LINK_AUX_STAT_8
end

# Port D

register XB_LINK_IBUF_FLUSH_D
	address		  0x00244
	see		  XB_LINK_IBUF_FLUSH_8
end

register XB_LINK_CTRL_D
	address		  0x0024c
	see		  XB_LINK_CTRL_8
end

register XB_LINK_STAT_D
	address		  0x00254
	see		  XB_LINK_STAT_8
end

register XB_LINK_ARB_UPPER_D
	address		  0x0025c
	see		  XB_LINK_ARB_UPPER_8
end

register XB_LINK_ARB_LOWER_D
	address		  0x00264
	see		  XB_LINK_ARB_LOWER_8
end

register XB_LINK_STAT_CLR_D
	address		  0x0026c
	see		  XB_LINK_STAT_CLR_8
end

register XB_LINK_RESET_D
	address		  0x00274
	see		  XB_LINK_RESET_8
end

register XB_LINK_AUX_STAT_D
	address		  0x0027c
	see		  XB_LINK_AUX_STAT_8
end

# Port E

register XB_LINK_IBUF_FLUSH_E
	address		  0x00284
	see		  XB_LINK_IBUF_FLUSH_8
end

register XB_LINK_CTRL_E
	address		  0x0028c
	see		  XB_LINK_CTRL_8
end

register XB_LINK_STAT_E
	address		  0x00294
	see		  XB_LINK_STAT_8
end

register XB_LINK_ARB_UPPER_E
	address		  0x0029c
	see		  XB_LINK_ARB_UPPER_8
end

register XB_LINK_ARB_LOWER_E
	address		  0x002a4
	see		  XB_LINK_ARB_LOWER_8
end

register XB_LINK_STAT_CLR_E
	address		  0x002ac
	see		  XB_LINK_STAT_CLR_8
end

register XB_LINK_RESET_E
	address		  0x002b4
	see		  XB_LINK_RESET_8
end

register XB_LINK_AUX_STAT_E
	address		  0x002bc
	see		  XB_LINK_AUX_STAT_8
end

# Port F

register XB_LINK_IBUF_FLUSH_F
	address		  0x002c4
	see		  XB_LINK_IBUF_FLUSH_8
end

register XB_LINK_CTRL_F
	address		  0x002cc
	see		  XB_LINK_CTRL_8
end

register XB_LINK_STAT_F
	address		  0x002d4
	see		  XB_LINK_STAT_8
end

register XB_LINK_ARB_UPPER_F
	address		  0x002dc
	see		  XB_LINK_ARB_UPPER_8
end

register XB_LINK_ARB_LOWER_F
	address		  0x002e4
	see		  XB_LINK_ARB_LOWER_8
end

register XB_LINK_STAT_CLR_F
	address		  0x002ec
	see		  XB_LINK_STAT_CLR_8
end

register XB_LINK_RESET_F
	address		  0x002f4
	see		  XB_LINK_RESET_8
end

register XB_LINK_AUX_STAT_F
	address		  0x002fc
	see		  XB_LINK_AUX_STAT_8
end

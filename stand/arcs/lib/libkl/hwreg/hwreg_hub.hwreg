#
# SN0 Hub Register Definitions
#
#   The field name should have a bit range in it, if applicable.  For
#   example, ADDRESS<31:03> below.  Hwreg will recognize it when formatting
#   the field value to show it left-shifted by the proper amount.
#
#   There are five groups of hub registers: PI, MD, NI, II, and CORE.
#

# Hub PI registers

register PI_CPU_PROTECT
	address		  0x000000
	field <63:00> RW  0xffffffffffffffff CPU_PROTECT
end

register PI_PROT_OVRRD
	address		  0x000008
	field <63:00> WS  0x53474972756c6573 PROT_OVRRD
end

register PI_IO_PROTECT
	address		  0x000010
	field <63:00> RW  0x0000000000000000 IO_PROTECT
end

register PI_REGION_PRESENT
	address		  0x000018
	field <63:00> RW  0xffffffffffffffff REGION_PRESENT
end

register PI_CPU_NUM
	address		  0x000020
	field	 <00> R	  0x0000000000000000 CPU_NUM
end

register PI_CALIAS_SIZE
	address		  0x000028
	field <03:00> RW  0x000000000000000f CALIAS_SIZE
end

register PI_MAX_CRB_TIMEOUT
	address		  0x000030
	field <07:00> RW  0x0000000000000080 MAX_TIMEOUT
end

register PI_CRB_SFACTOR
	address		  0x000038
	field <15:00> RW  0x0000000000000000 SFACTOR
end

register PI_CPU_PRESENT_A
	address		  0x000040
	field	 <00> R	  0x0000000000000000 CPU_PRESENT
end

register PI_CPU_PRESENT_B
	address		  0x000048
	see		  PI_CPU_PRESENT_A
end

register PI_CPU_ENABLE_A
	address		  0x000050
	field	 <00> RW  0x0000000000000000 CPU_ENABLE
end

register PI_CPU_ENABLE_B
	address		  0x000058
	see		  PI_CPU_ENABLE_A
end

register PI_REPLY_LEVEL
	address		  0x010060
	field <63:00> RW  0x0000000000000000 LEVEL
end

register PI_UNUSED
	address		  0x020068
	field	 <00> RW  0x0000000000000001 BIT
	note		  Currently in use for soft reset support
end

register PI_NMI_A
	address		  0x000070
	field <63:00> WX  0x0000000000000000 X
end

register PI_NMI_B
	address		  0x000078
	see		  PI_NMI_A
end

register PI_SOFTRESET
	address		  0x000080
	field <63:00> WX  0x0000000000000000 X
end

register PI_INT_PEND_MOD
	address		  0x000090
	field	 <08> WS  0x0000000000000000 SET
	field <06:00> WS  0x0000000000000000 INT_NUM
	note		  If SET bit is off, a clear is done.
end

register PI_INT_PEND0
	address		  0x000098
	field <63:07> R	  0x0000000000000000 INT_PEND0<63:07>
	field	 <06> R	  0x0000000000000000 OR_CC_PEND_B
	field	 <05> R	  0x0000000000000000 OR_CC_PEND_A
	field	 <04> R	  0x0000000000000000 UART_UCNTRL
	field	 <03> R	  0x0000000000000000 PAGE_MIGRATION
	field	 <02> R	  0x0000000000000000 GFX_INT_B
	field	 <01> R	  0x0000000000000000 GFX_INT_A
	field	 <00> R	  0x0000000000000000 INT_PEND0<00>
end

register PI_INT_PEND1
	address		  0x0000a0
	field	 <63> R	  0x0000000000000000 SYSTEM_SHUTDOWN
	field	 <62> R	  0x0000000000000000 NI_ERROR
	field	 <61> R	  0x0000000000000000 MD_CORR_ERROR
	field	 <60> R	  0x0000000000000000 SYS_COR_ERR_B
	field	 <59> R	  0x0000000000000000 SYS_COR_ERR_A
	field	 <58> R	  0x0000000000000000 RTC_DROP_OUT
	field <57:00> R	  0x0000000000000000 INT_PEND1<57:00>
end

register PI_INT_MASK0_A
	address		  0x0000a8
	field <63:07> R	  0x0000000000000000 INT_PEND0<63:07>
	field	 <06> R	  0x0000000000000000 OR_CC_PEND_B
	field	 <05> R	  0x0000000000000000 OR_CC_PEND_A
	field	 <04> R	  0x0000000000000000 UART_UCNTRL
	field	 <03> R	  0x0000000000000000 PAGE_MIGRATION
	field	 <02> R	  0x0000000000000000 GFX_INT_B
	field	 <01> R	  0x0000000000000000 GFX_INT_A
	field	 <00> R	  0x0000000000000000 INT_PEND0<00>
end

register PI_INT_MASK1_A
	address		  0x0000b0
	field	 <63> R	  0x0000000000000000 SYSTEM_SHUTDOWN
	field	 <62> R	  0x0000000000000000 NI_ERROR
	field	 <61> R	  0x0000000000000000 MD_CORR_ERROR
	field	 <60> R	  0x0000000000000000 SYS_COR_ERR_B
	field	 <59> R	  0x0000000000000000 SYS_COR_ERR_A
	field <58:00> R	  0x0000000000000000 INT_PEND1
end

register PI_INT_MASK0_B
	address		  0x0000b8
	see		  PI_INT_MASK0_A
end

register PI_INT_MASK1_B
	address		  0x0000c0
	see		  PI_INT_MASK1_A
end

register PI_CC_PEND_SET_A
	address		  0x0000c8
	field <63:00> W	  0x0000000000000000 CC_PEND
end

register PI_CC_PEND_SET_B
	address		  0x0000d0
	see		  PI_CC_PEND_SET_A
end

register PI_CC_PEND_CLR_A
	address		  0x0000d8
	field <63:00> RW  0x0000000000000000 CC_PEND
end

register PI_CC_PEND_CLR_B
	address		  0x0000e0
	see		  PI_CC_PEND_CLR_A
end

register PI_CC_MASK
	address		  0x0000e8
	field <63:00> RW  0x0000000000000000 CC_MASK
end

register PI_RT_COUNTER
	address		  0x030100
	field <51:00> RW  0x0000000000000000 COUNT
end

register PI_RT_COMPARE_A
	address		  0x000108
	field <51:00> RW  0x0000000000000000 RT_COMPARE
end

register PI_RT_COMPARE_B
	address		  0x000110
	see		  PI_RT_COMPARE_A
end

register PI_PROFILE_COMPARE
	address		  0x000118
	field <31:00> RW  0x0000000000000000 PROFILE_COMPARE
end

register PI_RT_INT_PEND_A
	address		  0x000120
	field	 <00> RW  0x0000000000000000 RTC_INT_PEND
end

register PI_RT_INT_PEND_B
	address		  0x000128
	see		  PI_RT_INT_PEND_A
end

register PI_PROF_INT_PEND_A
	address		  0x000130
	field	 <00> RW  0x0000000000000000 PROF_INT_PEND
end

register PI_PROF_INT_PEND_B
	address		  0x000138
	see		  PI_PROF_INT_PEND_A
end

register PI_RTC_INT_EN_A
	address		  0x000140
	field	 <00> RW  0x0000000000000000 RTC_INT_EN
end

register PI_RTC_INT_EN_B
	address		  0x000148
	see		  PI_RTC_INT_EN_A
end

register PI_PROF_INT_EN_A
	address		  0x000150
	field	 <00> RW  0x0000000000000000 PROF_INT_EN
end

register PI_PROF_INT_EN_B
	address		  0x000158
	see		  PI_PROF_INT_EN_A
end

register PI_RT_LOCAL_CTRL
	address		  0x000160
	field	 <16> RW  0x0000000000000001 USE_INTERNAL
	field	 <15> R	  0x0000000000000000 GCLK
	field <14:08> R	  0x0000000000000000 GCLK_COUNTER
	field <07:01> RW  0x0000000000000100 MAX_COUNT
	field	 <00> RW  0x0000000000000000 GCLK_ENABLE
end

register PI_RT_FILTER_CTRL
	address		  0x000168
	field <40:31> RW  0x0000000000000000 ERROR_COUNTER
	field <30:21> RW  0x0000000000000000 DROPOUT_COUNT
	field <20:11> R	  0x0000000000000000 DROPOUT_COUNTER
	field	 <10> RW  0x0000000000000000 MASK_ENABLE
	field <09:02> R	  0x0000000000000000 MASK_COUNTER
	field <01:00> R	  0x0000000000000000 OFFSET
end

register PI_BIST_WRITE_DATA
	address		  0x000200
	field <63:00> W	  0x0000000000000000 WRITE_BUS
end

register PI_BIST_READ_DATA
	address		  0x000208
	field <63:00> R	  0x0000000000000000 READ_BUS
end

register PI_BIST_COUNT_TARGET
	address		  0x000210
	field <07:06> W	  0x0000000000000000 TARGET_BUS
	field <05:00> W	  0x0000000000000000 COUNT_BUS
end

register PI_BIST_RDY
	address		  0x000218
	field	 <00> R	  0x0000000000000000 RDY
end

register PI_BIST_SHIFT_LOAD
	address		  0x000220
	field <63:00> WX  0x0000000000000000 X
end

register PI_BIST_SHIFT_UNLOAD
	address		  0x000228
	field <63:00> WX  0x0000000000000000 X
end

register PI_BIST_ENTER_RUN
	address		  0x000230
	field <63:00> WX  0x0000000000000000 X
end

register PI_GFX_PAGE_A
	address		  0x000300
	field	 <40> RW  0x0000000000000000 EN_GFX_PAGE
	field <39:17> RW  0x0000000000000000 GFX_PAGE_ADDR
end

register PI_GFX_CREDIT_CNTR_A
	address		  0x000308
	field <11:00> RW  0x0000000000000000 GFX_CREDIT_CNTR
end

register PI_GFX_BIAS_A
	address		  0x000310
	field <11:00> RW  0x0000000000000000 GFX_BIAS
end

register PI_GFX_INT_CNTR_A
	address		  0x000318
	field <25:00> RW  0x0000000000000000 GFX_INT_CNTR
end

register PI_GFX_INT_CMP_A
	address		  0x000320
	field <25:00> RW  0x0000000000000000 GFX_INT_CMP
end

register PI_GFX_PAGE_B
	address		  0x000328
	see		  PI_GFX_PAGE_A
end

register PI_GFX_CREDIT_CNTR_B
	address		  0x000330
	see		  PI_GFX_CREDIT_CNTR_A
end

register PI_GFX_BIAS_B
	address		  0x000338
	see		  PI_GFX_BIAS_A
end

register PI_GFX_INT_CNTR_B
	address		  0x000340
	see		  PI_GFX_INT_CNTR_A
end

register PI_GFX_INT_CMP_B
	address		  0x000348
	see		  PI_GFX_INT_CMP_A
end

register PI_ERR_INT_PEND
	address		  0x000400
	field	 <24> R	  -		     MD_UNCORR
	field	 <23> RWC 0x0000000000000000 A_SYSSTATE_TAG
	field	 <22> RWC 0x0000000000000000 B_SYSSTATE_TAG
	field	 <21> RWC 0x0000000000000000 A_UE_ON_UNCAC_LD
	field	 <20> RWC 0x0000000000000000 B_UE_ON_UNCAC_LD
	field	 <19> RWC 0x0000000000000000 A_WTERR_DURING_SPOOL
	field	 <18> RWC 0x0000000000000000 B_WTERR_DURING_SPOOL
	field	 <17> RWC 0x0000000000000000 A_SYSCMD_PARITY_ADRCYC
	field	 <16> RWC 0x0000000000000000 B_SYSCMD_PARITY_ADRCYC
	field	 <15> RWC 0x0000000000000000 A_SYSCMD_PARITY_DATCYC
	field	 <14> RWC 0x0000000000000000 B_SYSCMD_PARITY_DATCYC
	field	 <13> RWC 0x0000000000000000 A_SYSAD_ADRCYC
	field	 <12> RWC 0x0000000000000000 B_SYSAD_ADRCYC
	field	 <11> RWC 0x0000000000000000 A_SYSAD_DATCYC
	field	 <10> RWC 0x0000000000000000 B_SYSAD_DATCYC
	field	 <09> RWC 0x0000000000000000 A_SYSSTATE_PARITY
	field	 <08> RWC 0x0000000000000000 B_SYSSTATE_PARITY
	field	 <07> RWC 0x0000000000000000 A_WRB_WERR
	field	 <06> RWC 0x0000000000000000 B_WRB_WERR
	field	 <05> RWC 0x0000000000000000 A_WRB_TERR
	field	 <04> RWC 0x0000000000000000 B_WRB_TERR
	field	 <03> RWC 0x0000000000000000 A_SPURIOUS_MESG
	field	 <02> RWC 0x0000000000000000 B_SPURIOUS_MESG
	field	 <01> RWC 0x0000000000000000 A_SPOOL_CNT_COMPARE
	field	 <00> RWC 0x0000000000000000 B_SPOOL_CNT_COMPARE
end

register PI_ERR_INT_MASK_A
	address		  0x000408
	field <24:00> RW  0x0000000000000000 ERR_INT_MASK
end

register PI_ERR_INT_MASK_B
	address		  0x000410
	see		  PI_ERR_INT_MASK_A
end

register PI_ERR_STACK_ADDR_A
	address		  0x000418
	field <31:03> RW  0x0000000000000000 ADDRESS<31:03>
end

register PI_ERR_STACK_ADDR_B
	address		  0x000420
	see		  PI_ERR_STACK_ADDR_A
end

register PI_ERR_STACK_SIZE
	address		  0x000428
	field <03:00> RW  0x0000000000000000 SIZE_CODE
	note		  Actual size is 2^(SIZE_CODE+11), disabled if 0
end

register PI_ERR_STACK_FORMAT
	address		  0x000429
	field <63:31> R	  -		     ADDRESS<39:07>
	field <30:23> R	  -		     CMD
	field <22:13> R	  -		     CRB_STATUS
	field	 <12> R	  -		     RRB/WRB
	field <11:09> R	  -		     CRB_NUM
	field <08:06> R	  -		     T5_REQ_NUM
	field <05:03> R	  -		     SUPPLEMENTAL<2:0>
	field <02:00> R	  -		     ERROR_TYPE
	note		  This describes a stack entry, not a real register
end

register PI_ERR_STATUS0_A
	address		  0x000430
	field	 <63> R	  -		     VALID
	field	 <62> R	  -		     OVERRUN
	field <61:25> R	  -		     ADDRESS<39:03>
	field <24:17> R	  -		     CMD
	field <16:06> R	  -		     SUPPLEMENTAL
	field <05:03> R	  -		     T5_REQ_NUM
	field <02:00> R	  -		     ERROR_TYPE
end

register PI_ERR_STATUS0_A_CLEAR
	address		  0x000438
	see		  PI_ERR_STATUS0_A
end

register PI_ERR_STATUS1_A
	address		  0x000440
	field <63:53> R	  -		     SOURCE
	field <52:43> R	  -		     CRB_STATUS
	field	 <42> R	  -		     RRB/WRB
	field <41:39> R	  -		     CRB_NUM
	field <38:29> R	  -		     INVAL_COUNT
	field <28:21> R	  -		     TIME_OUT_COUNT
	field <20:00> R	  -		     SPOOL_COUNT
end

register PI_ERR_STATUS1_A_CLEAR
	address		  0x000448
	see		  PI_ERR_STATUS1_A
	note		  Same function as PI_ERR_STATUS0_A_CLEAR
end

register PI_ERR_STATUS0_B
	address		  0x000450
	see		  PI_ERR_STATUS0_A
end

register PI_ERR_STATUS0_B_CLEAR
	address		  0x000458
	see		  PI_ERR_STATUS0_A
end

register PI_ERR_STATUS1_B
	address		  0x000460
	see		  PI_ERR_STATUS1_A
end

register PI_ERR_STATUS1_B_CLEAR
	address		  0x000468
	see		  PI_ERR_STATUS1_A
	note		  Same function as PI_ERR_STATUS0_B_CLEAR
end

register PI_SPOOL_CMP_A
	address		  0x000470
	field <20:00> RW  -		     SPOOL_CMP
end

register PI_SPOOL_CMP_B
	address		  0x000478
	see		  PI_SPOOL_CMP_A
end

register PI_CRB_TIMEOUT_A
	address		  0x000480
	field <11:04> WS  0x0000000000000000 WRB<7:0>
	field <03:00> WS  0x0000000000000000 RRB<3:0>
end

register PI_CRB_TIMEOUT_B
	address		  0x000488
	see		  PI_CRB_TIMEOUT_A
end

register PI_SYSAD_ERRCHK_EN
	address		  0x000490
	field	 <05> RW  0x0000000000000000 QUAL_CHK_EN
	field	 <04> RW  0x0000000000000000 STATE_CHK_EN
	field	 <03> RW  0x0000000000000000 CMDP_CHK_EN
	field	 <02> RW  0x0000000000000000 SADP_CHK_EN
	field	 <01> RW  0x0000000000000000 QUAL_GEN_EN
	field	 <00> RW  0x0000000000000000 ECC_GEN_EN
end

register PI_FORCE_BAD_CHECK_BIT_A
	address		  0x000498
	field <07:00> RW  0x0000000000000000 BAD_CHECK_BIT
end

register PI_FORCE_BAD_CHECK_BIT_B
	address		  0x0004a0
	see		  PI_FORCE_BAD_CHECK_BIT_A
end

register PI_NACK_CNT_A
	address		  0x0004a8
	field	 <20> RW  0x0000000000000000 CNT_EN
	field <19:00> RW  0x0000000000000000 NACK_CNT
end

register PI_NACK_CNT_B
	address		  0x0004b0
	see		  PI_NACK_CNT_A
end

register PI_NACK_CMP
	address		  0x0004b8
	field <19:00> RW  0x0000000000000000 NACK_CMP
end

# Hub MD registers

register MD_IO_PROTECT
	address		  0x200000
	field <63:00> RW  0xffffffffffffffff IO_PROTECT
end

register MD_IO_PROT_OVRRD
	address		  0x200008
	field <63:00> WS  0x53474972756c6573 IO_PROT_OVR
end

register MD_HSPEC_PROTECT
	address		  0x200010
	field <63:00> RW  0xffffffffffffffff HSPEC_PROT
end

register MD_MEMORY_CONFIG
	address		  0x200018
	field <53:49> RW  0x000000000000000f FPROM_CYC
	field <48:44> RW  0x0000000000000007 FPROM_WR
	field <43:39> RW  0x000000000000001f UCTRLR_CYC
	field <38:34> RW  0x000000000000000f UCTRLR_WR
	field <33:32> RW  0x0000000000000000 DIMM0_SEL
	field	 <31> RW  0x0000000000000000 IO_PROT_EN
	field	 <30> RW  0x0000000000000000 ARB_MLSS
	field	 <29> RW  0x0000000000000001 IGNORE_ECC
	field	 <28> RW  0x0000000000000001 DIR_FLAVOR
	field <27:24> RW  0x000000000000000f REPLY_GUAR
	field <23:21> RW  0x0000000000000007 BANK7_DESC
	field <20:18> RW  0x0000000000000007 BANK6_DESC
	field <17:15> RW  0x0000000000000007 BANK5_DESC
	field <14:12> RW  0x0000000000000007 BANK4_DESC
	field <11:09> RW  0x0000000000000007 BANK3_DESC
	field <08:06> RW  0x0000000000000007 BANK2_DESC
	field <05:03> RW  0x0000000000000007 BANK1_DESC
	field <02:00> RW  0x0000000000000007 BANK0_DESC
end

register MD_REFRESH_CONTROL
	address		  0x200020
	field	 <63> RW  0x0000000000000000 ENABLE
	field <23:12> RW  0x0000000000000000 COUNTER
	field <11:00> RW  0x0000000000000400 CNT_THRESH
end

register MD_FANDOP_CAC_STAT
	address		  0x200028
	field	 <63> R	  0x0000000000000000 VALID
	field <31:06> R	  0x0000000000000003 ADDR
end

register MD_MIG_DIFF_THRESH
	address		  0x200030
	field	 <63> RW  0x0000000000000000 VALID
	field <19:00> RW  -		     THRESHOLD
end

register MD_MIG_VALUE_THRESH
	address		  0x200038
	field	 <63> RW  0x0000000000000000 VALID
	field <19:00> RW  -		     THRESHOLD
end

register MD_MIG_CANDIDATE
	address		  0x200040
	field	 <63> R	  0x0000000000000000 VALID
	field	 <30> R	  -		     TYPE
	field	 <29> R	  0x0000000000000000 OVERRUN
	field <28:18> R	  -		     INITIATOR
	field <17:00> R	  -		     ADDRESS<31:14>
end

register MD_MIG_CANDIDATE_CLR
	address		  0x200048
	see		  MD_MIG_CANDIDATE
end

register MD_DIR_ERROR
	address		  0x200050
	field	 <63> R	  -		     UCE_VALID
	field	 <62> R	  -		     AE_VALID
	field	 <61> R	  -		     CE_VALID
	field <41:39> R	  -		     BAD_PROTECT
	field <38:32> R	  -		     BAD_SYN
	field <29:03> R	  -		     HSPEC_ADDRESS<28:03>
	field	 <02> R	  -		     UCE_OVERRUN
	field	 <01> R	  -		     AE_OVERRUN
	field	 <00> R	  -		     CE_OVERRUN
end

register MD_DIR_ERROR_CLR
	address		  0x200058
	see		  MD_DIR_ERROR
end

register MD_PROTOCOL_ERROR
	address		  0x200060
	field	 <63> R	  -		     VALID
	field <60:50> R	  -		     INITIATOR
	field <49:48> R	  -		     BACKOFF
	field <47:40> R	  -		     MSG_TYPE
	field <39:38> R	  -		     ACCESS
	field	 <37> R	  -		     PRIORITY
	field <36:33> R	  -		     DIR_STATE
	field	 <32> R	  -		     POINTER_ME
	field <31:03> R	  -		     ADDRESS<31:03>
	field	 <00> R	  -		     OVERRUN
end

register MD_PROTOCOL_ERROR_CLR
	address		  0x200068
	see		  MD_PROTOCOL_ERROR
end

register MD_MEM_ERROR
	address		  0x200070
	field	 <63> R	  -		     UCE_VALID
	field	 <62> R	  -		     CE_VALID
	field <39:32> R	  -		     BAD_SYN
	field <31:03> R	  -		     ADDRESS<31:03>
	field	 <01> R	  -		     UCE_OVERRUN
	field	 <00> R	  -		     CE_OVERRUN
end

register MD_MEM_ERROR_CLR
	address		  0x200078
	see		  MD_MEM_ERROR
end

register MD_MISC_ERROR
	address		  0x200080
	field <09:08> R	  -		     ILL_MSG
	field <07:06> R	  -		     ILL_REVISION
	field <05:04> R	  -		     LONG_PACK
	field <03:02> R	  -		     SHORT_PACK
	field <01:00> R	  -		     BAD_DATA
end

register MD_MISC_ERROR_CLR
	address		  0x200088
	see		  MD_MISC_ERROR
end

register MD_MEM_DIMM_INIT
	address		  0x200090
	field <35:32> W	  0x0000000000000000 DIMM_SELECT
	field <11:00> W	  0x0000000000000000 DIMM_MODE
end

register MD_DIR_DIMM_INIT
	address		  0x200098
	field <35:32> W	  0x0000000000000000 DIMM_SELECT
	field <11:00> W	  0x0000000000000000 DIMM_MODE
end

register MD_MOQ_SIZE
	address		  0x2000a0
	field <13:08> RW  0x0000000000000032 RP_SIZE
	field <04:00> RW  0x0000000000000012 RQ_SIZE
end

register MD_MLAN_CTL
	address		  0x2000a8
	field <33:27> RW  0x0000000000000031 CLKDIV_PHI1
	field <26:20> RW  0x0000000000000031 CLKDIV_PHI0
	field <19:10> W	  0x0000000000000000 PULSE
	field <09:02> W	  0x0000000000000000 SAMPLE
	field	 <01> R	  0x0000000000000001 DONE
	field	 <00> R	  0x0000000000000000 RD_DATA
end

register MD_PERF_SEL
	address		  0x210000
	field	 <03> RW  0x0000000000000000 PERF_EN
	field <02:00> RW  -		     PERF_SEL
end

register MD_PERF_CNT0
	address		  0x210010
	field <19:00> RW  -		     PERF_CNT
end

register MD_PERF_CNT1
	address		  0x210018
	see		  MD_PERF_CNT0
end

register MD_PERF_CNT2
	address		  0x210020
	see		  MD_PERF_CNT0
end

register MD_PERF_CNT3
	address		  0x210028
	see		  MD_PERF_CNT0
end

register MD_PERF_CNT4
	address		  0x210030
	see		  MD_PERF_CNT0
end

register MD_PERF_CNT5
	address		  0x210038
	see		  MD_PERF_CNT0
end

register I2C_DAT
	address		  0x220000
	field <07:00> RW  -		     DATA
end

register I2C_CTL
	address		  0x220008
	field	 <07>  W  -		     PIN
	field	 <06>  W  -		     ES0
	field	 <05>  W  -		     ES1
	field	 <04>  W  -		     ES2
	field	 <03>  W  -		     ENI
	field	 <02>  W  -		     STA
	field	 <01>  W  -		     STO
	field	 <00>  W  -		     ACK
end

register I2C_STA
	address		  0x220008
	field	 <07>  R  -		     PIN
	field	 <05>  R  -		     STS
	field	 <04>  R  -		     BER
	field	 <03>  R  -		     AD0_LRB
	field	 <02>  R  -		     AAS
	field	 <01>  R  -		     LAB
	field	 <00>  R  -		     BNB
end

register MD_UREG0_0
	address		  0x220000
	field <07:00> RW  0x0000000000000000 DATA
end

register MD_UREG0_1
	address		  0x220008
	see		  MD_UREG0_0
end

# Some of these are commented out to save space

#register MD_UREG0_2
#	address		  0x220010
#	see		  MD_UREG0_0
#end

#register MD_UREG0_3
#	address		  0x220018
#	see		  MD_UREG0_0
#end

#register MD_UREG0_4
#	address		  0x220020
#	see		  MD_UREG0_0
#end

#register MD_UREG0_5
#	address		  0x220028
#	see		  MD_UREG0_0
#end

#register MD_UREG0_6
#	address		  0x220030
#	see		  MD_UREG0_0
#end

register MD_UREG0_7
	address		  0x220038
	see		  MD_UREG0_0
end

register MD_SLOT_ID_USTAT_SN0
	address		  0x220048
	field	 <07> R	  -		     CR_TST_SEL_L
	field	 <06> R	  -		     COR_CLK_SEL
	field	 <05> R	  -		     NET_SYNC_SEL
	field	 <04> R	  -		     FPROM_RDY
	field	 <03> R	  -		     UC_RDY_UA_IN
	field <02:00> R	  -		     SLOT_ID_L
	note		  Sense of SLOT_ID is reversed
end

register MD_SLOT_ID_USTAT_SN00
	address		  0x220048
	field	 <07> R	  -		     SC_MSTSLV
	field	 <05> R	  -		     PCIBAD3
	field	 <04> R	  -		     FPROM_RDY
	field	 <02> R	  -		     XJMP_ID
	field	 <01> R	  -		     P_HIGH
	field	 <00> R	  -		     FPROM_RDY
	note		  Bits 0 and 4 are same
end

register MD_LED0
	address		  0x220050
	field <07:00> W	  0x0000000000000000 DATA
end

register MD_LED1
	address		  0x220058
	see		  MD_LED0
end

register MD_UREG1_0
	address		  0x220080
	field <07:00> RW  0x0000000000000000 DATA
end

register MD_UREG1_1
	address		  0x220088
	see		  MD_UREG1_0
end

# Some of these are commented out to save space

#register MD_UREG1_2
#	address		  0x220090
#	see		  MD_UREG1_0
#end

#register MD_UREG1_3
#	address		  0x220098
#	see		  MD_UREG1_0
#end

#register MD_UREG1_4
#	address		  0x2200a0
#	see		  MD_UREG1_0
#end

#register MD_UREG1_5
#	address		  0x2200a8
#	see		  MD_UREG1_0
#end

#register MD_UREG1_6
#	address		  0x2200b0
#	see		  MD_UREG1_0
#end

#register MD_UREG1_7
#	address		  0x2200b8
#	see		  MD_UREG1_0
#end

#register MD_UREG1_8
#	address		  0x2200c0
#	see		  MD_UREG1_0
#end

#register MD_UREG1_9
#	address		  0x2200c8
#	see		  MD_UREG1_0
#end

#register MD_UREG1_10
#	address		  0x2200d0
#	see		  MD_UREG1_0
#end

#register MD_UREG1_11
#	address		  0x2200d8
#	see		  MD_UREG1_0
#end

#register MD_UREG1_12
#	address		  0x2200e0
#	see		  MD_UREG1_0
#end

#register MD_UREG1_13
#	address		  0x2200e8
#	see		  MD_UREG1_0
#end

#register MD_UREG1_14
#	address		  0x2200f0
#	see		  MD_UREG1_0
#end

register MD_UREG1_15
	address		  0x2200f8
	see		  MD_UREG1_0
end

# Hub II registers

register II_WID
	address		  0x400000
	field <31:28> R	  0x000000000000001 REV_NUM
	field <27:12> R	  0x00000000000c101 PART_NUM
	field <11:01> R	  0x000000000000024 MFG_NUM
end

register IIO_WID
	address		0x400000
	see		II_WID
end

register II_WSTAT
	address		  0x400008
	field	 <32> R	  0x000000000000000 CRAZY
	field <23:16> RWC 0x000000000000000 LLP_TX_CNT
	field	 <09> RWC 0x000000000000000 TX_MX_RTY
	field	 <06> R	  0x000000000000000 XT_TAIL_TO
	field	 <05> R	  0x000000000000000 XT_CRD_TO
	field <03:00> R	  0x000000000000000 PENDING
	note		  Bit 4 not defined in spec, assumed reserved
end

register IIO_WSTAT
	address		0x400008
	see		II_WSTAT
end

register II_WCR
	address		  0x400020
	field <22:18> RW  0x000000000000000 E_THRESH
	field	 <17> RW  0x000000000000000 DIR_CON
	field	 <16> RW  0x000000000000000 F_BAD_PKT
	field <15:13> RW  0x000000000000002 XBAR_CRD
	field <12:5>  R	  0x000000000000000 RESERVED
	field	 <04> R	  0x000000000000000 TAG_MODE
	field <03:00> RW  0x000000000000001 WID
end

register IIO_WCR
	address		0x400020
	see		II_WCR
end

register II_NOT_DONE
	address		  0x400028
	field <63:00> 0	  0x000000000000000 NOT_DONE_YET
	note		  The definition for this register is not available
end

register II_ILAPR
	address		  0x400100
	field <63:00> RW  0xffffffffffffffff REGION
end

register IIO_ILAPR
	address		0x400100
	see		II_ILAPR
end

register II_ILAPO
	address		  0x400108
	field <63:00> WS  0x53474972756c6573 IO_OVRRIDE
end

register IIO_ILAPO
	address		0x400108
	see		II_ILAPO
end

register II_IOWA
	address		  0x400110
	field	 <15> RW  0x0000000000000000 WID_F_ENABLE
	field	 <14> RW  0x0000000000000000 WID_E_ENABLE
	field	 <13> RW  0x0000000000000000 WID_D_ENABLE
	field	 <12> RW  0x0000000000000000 WID_C_ENABLE
	field	 <11> RW  0x0000000000000000 WID_B_ENABLE
	field	 <10> RW  0x0000000000000000 WID_A_ENABLE
	field	 <09> RW  0x0000000000000000 WID_9_ENABLE
	field	 <08> RW  0x0000000000000000 WID_8_ENABLE
	field <07:01> R	  0x0000000000000000 RESERVED
	field	 <00> RW  0x0000000000000000 WID_0_ENABLE
end

register IIO_IOWA
	address		  0x400110
	see		  II_IOWA
end

register II_IIWA
	address		  0x400118
	see		  II_IOWA
end

register IIO_IIWA
	address		0x400118
	see		II_IIWA
end

register II_IIDEM
	address		  0x400120
	field <63:56> RW  0x00000000000000ff WID_F_DxS
	field <55:48> RW  0x00000000000000ff WID_E_DxS
	field <47:40> RW  0x00000000000000ff WID_D_DxS
	field <39:32> RW  0x00000000000000ff WID_C_DxS
	field <21:24> RW  0x00000000000000ff WID_B_DxS
	field <23:16> RW  0x00000000000000ff WID_A_DxS
	field <15:08> RW  0x00000000000000ff WID_9_DxS
	field <07:00> RW  0x00000000000000ff WID_8_DxS
end

register IIO_IIDEM
	address		0x400120
	see		II_IIDEM
end

register II_ILCSR
	address		  0x400128
	field <41:32> RW  0x00000000000003fc MAXBRST
	field <25:16> RW  0x00000000000003ff MAXRETRY
	field <13:12> R	  0x0000000000000000 LLP_STAT
	field	 <11> R	  0x0000000000000000 BIT_MODE8
	field	 <10> R	  0x0000000000000000 LLP_ENABLE
	field	 <08> W	  0x0000000000000000 WARM_RESET
	field <05:00> RW  0x000000000000000a NULL_TIMEOUT
	note		  LLP_STAT 0 = failed, 1 = never came up, 2,3 = working

end

register II_ILLR
	address		  0x400130
	field <31:16> RW  0x0000000000000000 CB_CNT
	field <15:00> RW  0x0000000000000000 SN_CNT
end

register II_IIDSR
	address		  0x400138
	field	 <28> RW  0x0000000000000000 INT_SENT
	field <27:25> R	  0x0000000000000000 RESERVED
	field	 <24> RW  0x0000000000000000 ENABLE
	field <23:17> R	  0x0000000000000000 RESERVED
	field <16:08> RW  0x0000000000000000 NODE
	field	 <07> R	  0x0000000000000000 RESERVED
	field <06:00> RW  0x0000000000000000 LEVEL
end

register II_IGFX0
	address		  0x400140
	see		  II_NOT_DONE
end

register II_IGFX1
	address		  0x400148
	see		  II_NOT_DONE
end

register II_SCRATCH_REG0
	address		  0x400150
	field <35:32> RW  0x0000000000000000 SCRATCH1
	field <23:20> RW  0x0000000000000000 SCRATCH2
	field <16>    RW  0x0000000000000000 SCRATCH3
	field <12:00> RW  0x0000000000000000 SCRATCH4
end

register II_SCRATCH_REG1
	address		  0x400158
	see		  II_SCRATCH_REG0
end

register II_ITTE1
	address		  0x400160
	field	 <12> RW  0x0000000000000000 IO_SPACE
	field <11:08> RW  0x0000000000000000 WIDGET_NUM
	field <04:00> RW  0x0000000000000000 OFFSET
	note		  offset XT[33:29] M mode, XT[32:28] N mode
end

register II_ITTE2
	address		  0x400168
	see		  II_ITTE1
end

register II_ITTE3
	address		  0x400170
	see		  II_ITTE1
end

register II_ITTE4
	address		  0x400178
	see		  II_ITTE1
end

register II_ITTE5
	address		  0x400180
	see		  II_ITTE1
end

register II_ITTE6
	address		  0x400188
	see		  II_ITTE1
end

register II_ITTE7
	address		  0x400190
	see		  II_ITTE1
end

register II_IPRB0
	address		  0x400198
	field <63:49> RW  0x000000000000000 RESERVED
	field	 <48> RW  0x000000000000000 ERROR
	field <47:43> RW  0x000000000000000 OF_CNT
	field	 <42> RW  0x000000000000000 F
	field <41:40> RW  0x000000000000000 M
	field <39:38> RW  0x000000000000000 RESERVED
	field <37:24> RW  0x000000000000000 BNAK_CNT
	field <23:22> RW  0x000000000000000 RESERVED
	field <21:08> RW  0x000000000000000 ANAK_CNT
	field <07:00> RW  0x000000000000001 CREDITS
end

register II_IPRB8
	address		  0x4001a0
	see		  II_IPRB0
end

register II_IPRB9
	address		  0x4001a8
	see		  II_IPRB0
end

register II_IPRBA
	address		  0x4001b0
	see		  II_IPRB0
end

register II_IPRBB
	address		  0x4001b8
	see		  II_IPRB0
end

register II_IPRBC
	address		  0x4001c0
	see		  II_IPRB0
end

register II_IPRBD
	address		  0x4001c8
	see		  II_IPRB0
end

register II_IPRBE
	address		  0x4001d0
	see		  II_IPRB0
end

register II_IPRBF
	address		  0x4001d8
	see		  II_IPRB0
end

register II_IXCC
	address		  0x4001e0
	see		  II_NOT_DONE
end

register II_IMEM
	address		  0x4001e8
	field <63:13> R	  0x000000000000000 RESERVED
	field	 <12> W	  0x000000000000000 CLR_PRECISE
	field <11:09> R	  0x000000000000000 RESERVED
	field	 <08> W	  0x000000000000000 B1_ESD
	field <07:05> R	  0x000000000000000 RESERVED
	field	 <04> W	  0x000000000000000 B0_ESD
	field <03:01> R	  0x000000000000000 RESERVED
	field	 <00> W	  0x000000000000000 W0_ESD
	see		  II_NOT_DONE
end

register II_IXTT
	address		  0x4001f0
	field <63:26> R	  0x000000000000000 RESERVED
	field <25:00> RW  0x000000000000000 XT_TIMEOUT
end

register II_IECLR
	address		  0x4001f8
	see		  II_NOT_DONE
end

register II_IPCA
	address		  0x400300
	field <63:10> R	  0x000000000000000 RESERVED
	field <09:08> W	  0x000000000000000 FIELD_TO_ADJUST
	field <07:05> R	  0x000000000000000 RESERVED
	field	 <09> W	  0x000000000000000 ADJUST
	field <03:00> R	  0x000000000000000 WID
end

register II_IPRTE
	address		  0x400308
	field <63:61> R	  0x000000000000000 RESERVED
	field	 <60> RW  0x000000000000000 VALID
	field <59:57> R	  0x000000000000000 RESERVED
	field	 <56> RW  0x000000000000000 TO
	field	 <55> R	  0x000000000000000 RESERVED
	field <54:46> RW  0x000000000000000 SOURCE
	field <45:44> RW  0x000000000000000 INITIATOR
	field <43:41> RW  0x000000000000000 RESERVED
	field <40:00> RW  0x000000000000000 ADDRESS
end

register II_IPRTE0
	address		  0x400308
	see		  II_IPRTE
end

register II_IPRTE1
	address		  0x400310
	see		  II_IPRTE
end

register II_IPRTE2
	address		  0x400318
	see		  II_IPRTE
end

register II_IPRTE3
	address		  0x400320
	see		  II_IPRTE
end

register II_IPRTE4
	address		  0x400328
	see		  II_IPRTE
end

register II_IPRTE5
	address		  0x400330
	see		  II_IPRTE
end

register II_IPRTE6
	address		  0x400338
	see		  II_IPRTE
end

register II_IPRTE7
	address		  0x400340
	see		  II_IPRTE
end

register II_IPDR
	address		  0x400388
	field <63:05> R	  0x000000000000000 RESERVED
	field	 <04> RW  0x000000000000000 PENDING
	field	 <03> R	  0x000000000000000 RESERVED
	field <02:00> RW  0x000000000000000 TABLE_ENTRY
end

register II_ICDR
	address		  0x400390
	field <63:05> R	  0x000000000000000 RESERVED
	field	 <04> RW  0x000000000000000 PENDING
	field <03:00> RW  0x000000000000000 CRB_NUMBER
end

register II_IFDR
	address		  0x400398
	field <63:15> R	  0x000000000000000 RESERVED
	field <14:08> R	  0x000000000000000 MAX_RP
	field	 <07> RW  0x000000000000000 RESERVED
	field <06:00> RW  0x000000000000000 MAX_RQ
end

register II_IIAP
	address		  0x4003a0
	field <63:14> R	  0x000000000000000 RESERVED
	field <13:08> R	  0x000000000000000 RP_MLS
	field <07:06> RW  0x000000000000000 RESERVED
	field <05:00> RW  0x000000000000000 RQ_MLS
end

register II_ICMR
	address		  0x4003a8
	field <63:53> R	  0x000000000000000 RESERVED
	field	 <52> RW  0x000000000000000 PRECISE
	field	 <51> R	  0x000000000000000 RESERVED
	field <50:36> R	  0x000000000000000 PC_VALID
	field	 <35> R	  0x000000000000000 RESERVED
	field <34:20> R	  0x000000000000000 CRB_VALID
	field <19:16> RW  0x000000000000000 FC_COUNT
	field <15:14> R	  0x000000000000000 RESERVED
	field	 <13> W	  0x000000000000000 CLR_RPPD
	field	 <12> W	  0x000000000000000 CLR_RQPD
	field <11:08> R	  0x000000000000000 RESERVED
	field <07:04> RW  0x000000000000000 C_CNT
	field <03:00> RW  0x000000000000000 P_CNT
end

register II_ICCR
	address		  0x4003b0
	field <63:17> R	  0x000000000000000 RESERVED
	field	 <16> RW  0x000000000000000 PENDING
	field <15:08> RW  0x000000000000000 CMD
	field <07:04> R	  0x000000000000000 RESERVED
	field <03:00> RW  0x000000000000000 CRB_NUM
end

register II_ICTO
	address		  0x4003b8
	field <63:08> R	  0x000000000000000 RESERVED
	field <07:00> RW  0x000000000000000 TIMEOUT
end

register II_ICTP
	address		  0x4003c0
	field <63:24> R	  0x000000000000000 RESERVED
	field <23:00> RW  0x000000000000000 PRESCALE
end

# Some of these are commented out to save space

register II_ICRB0_A
	address		  0x400400
	see		  II_NOT_DONE
end

#register II_ICRB0_B
#	address		  0x400408
#	see		  II_NOT_DONE
#end

#register II_ICRB0_C
#	address		  0x400410
#	see		  II_NOT_DONE
#end

#register II_ICRB0_D
#	address		  0x400418
#	see		  II_NOT_DONE
#end

#register II_ICRB1_A
#	address		  0x400420
#	see		  II_NOT_DONE
#end

#register II_ICRB1_B
#	address		  0x400428
#	see		  II_NOT_DONE
#end

#register II_ICRB1_C
#	address		  0x400430
#	see		  II_NOT_DONE
#end

#register II_ICRB1_D
#	address		  0x400438
#	see		  II_NOT_DONE
#end

#register II_ICRB2_A
#	address		  0x400440
#	see		  II_NOT_DONE
#end

#register II_ICRB2_B
#	address		  0x400448
#	see		  II_NOT_DONE
#end

#register II_ICRB2_C
#	address		  0x400450
#	see		  II_NOT_DONE
#end

#register II_ICRB2_D
#	address		  0x400458
#	see		  II_NOT_DONE
#end

#register II_ICRB3_A
#	address		  0x400460
#	see		  II_NOT_DONE
#end

#register II_ICRB3_B
#	address		  0x400468
#	see		  II_NOT_DONE
#end

#register II_ICRB3_C
#	address		  0x400470
#	see		  II_NOT_DONE
#end

#register II_ICRB3_D
#	address		  0x400478
#	see		  II_NOT_DONE
#end

#register II_ICRB4_A
#	address		  0x400480
#	see		  II_NOT_DONE
#end

#register II_ICRB4_B
#	address		  0x400488
#	see		  II_NOT_DONE
#end

#register II_ICRB4_C
#	address		  0x400490
#	see		  II_NOT_DONE
#end

#register II_ICRB4_D
#	address		  0x400498
#	see		  II_NOT_DONE
#end

#register II_ICRB5_A
#	address		  0x4004a0
#	see		  II_NOT_DONE
#end

#register II_ICRB5_B
#	address		  0x4004a8
#	see		  II_NOT_DONE
#end

#register II_ICRB5_C
#	address		  0x4004b0
#	see		  II_NOT_DONE
#end

#register II_ICRB5_D
#	address		  0x4004b8
#	see		  II_NOT_DONE
#end

#register II_ICRB6_A
#	address		  0x4004c0
#	see		  II_NOT_DONE
#end

#register II_ICRB6_B
#	address		  0x4004c8
#	see		  II_NOT_DONE
#end

#register II_ICRB6_C
#	address		  0x4004d0
#	see		  II_NOT_DONE
#end

#register II_ICRB6_D
#	address		  0x4004d8
#	see		  II_NOT_DONE
#end

#register II_ICRB7_A
#	address		  0x4004e0
#	see		  II_NOT_DONE
#end

#register II_ICRB7_B
#	address		  0x4004e8
#	see		  II_NOT_DONE
#end

#register II_ICRB7_C
#	address		  0x4004f0
#	see		  II_NOT_DONE
#end

#register II_ICRB7_D
#	address		  0x4004f8
#	see		  II_NOT_DONE
#end

#register II_ICRB8_A
#	address		  0x400500
#	see		  II_NOT_DONE
#end

#register II_ICRB8_B
#	address		  0x400508
#	see		  II_NOT_DONE
#end

#register II_ICRB8_C
#	address		  0x400510
#	see		  II_NOT_DONE
#end

#register II_ICRB8_D
#	address		  0x400518
#	see		  II_NOT_DONE
#end

#register II_ICRB9_A
#	address		  0x400520
#	see		  II_NOT_DONE
#end

#register II_ICRB9_B
#	address		  0x400528
#	see		  II_NOT_DONE
#end

#register II_ICRB9_C
#	address		  0x400530
#	see		  II_NOT_DONE
#end

#register II_ICRB9_D
#	address		  0x400538
#	see		  II_NOT_DONE
#end

#register II_ICRBA_A
#	address		  0x400540
#	see		  II_NOT_DONE
#end

#register II_ICRBA_B
#	address		  0x400548
#	see		  II_NOT_DONE
#end

#register II_ICRBA_C
#	address		  0x400550
#	see		  II_NOT_DONE
#end

#register II_ICRBA_D
#	address		  0x400558
#	see		  II_NOT_DONE
#end

#register II_ICRBB_A
#	address		  0x400560
#	see		  II_NOT_DONE
#end

#register II_ICRBB_B
#	address		  0x400568
#	see		  II_NOT_DONE
#end

#register II_ICRBB_C
#	address		  0x400570
#	see		  II_NOT_DONE
#end

#register II_ICRBB_D
#	address		  0x400478
#	see		  II_NOT_DONE
#end

#register II_ICRBC_A
#	address		  0x400580
#	see		  II_NOT_DONE
#end

#register II_ICRBC_B
#	address		  0x400588
#	see		  II_NOT_DONE
#end

#register II_ICRBC_C
#	address		  0x400590
#	see		  II_NOT_DONE
#end

#register II_ICRBC_D
#	address		  0x400598
#	see		  II_NOT_DONE
#end

#register II_ICRBD_A
#	address		  0x4005a0
#	see		  II_NOT_DONE
#end

#register II_ICRBD_B
#	address		  0x4005a8
#	see		  II_NOT_DONE
#end

#register II_ICRBD_C
#	address		  0x4005b0
#	see		  II_NOT_DONE
#end

#register II_ICRBD_D
#	address		  0x4005b8
#	see		  II_NOT_DONE
#end

#register II_ICRBE_A
#	address		  0x4005c0
#	see		  II_NOT_DONE
#end

#register II_ICRBE_B
#	address		  0x4005c8
#	see		  II_NOT_DONE
#end

#register II_ICRBE_C
#	address		  0x4005d0
#	see		  II_NOT_DONE
#end

register II_ICRBE_D
	address		  0x4005d8
	see		  II_NOT_DONE
end

register II_IBLS0
	address		  0x410000
	field <63:21> R	  0x000000000000000 RESERVED
	field	 <20> RW  0x000000000000000 BUSY
	field <19:17> R	  0x000000000000000 RESERVED
	field	 <16> RW  0x000000000000000 ERROR
	field <15:00> RW  0x000000000000000 LENGTH
end

register II_IBSA0
	address		  0x410008
	field <63:40> R	  0x000000000000000 RESERVED
	field <39:07> R	  0x000000000000000 ADDRESS<39:07>
	field <06:00> RW  0x000000000000000 RESERVED
end

register II_IBDA0
	address		  0x410010
	see		  II_IBSA0
end

register II_IBCT0
	address		  0x410018
	field <63:09> R	  0x000000000000000 RESERVED
	field	 <08> RW  0x000000000000000 POISON
	field <07:05> R	  0x000000000000000 RESERVED
	field	 <04> RW  0x000000000000000 NOTIFY
	field <03:01> R	  0x000000000000000 RESERVED
	field	 <00> RW  0x000000000000000 ZEROFILL
end

register II_IBNA0
	address		  0x410020
	field <63:40> R	  0x000000000000000 RESERVED
	field <39:07> RW  0x000000000000000 ADDRESS<39:07>
	field <06:00> R	  0x000000000000000 RESERVED
end

register II_IBIA0
	address		  0x410028
	field <63:23> R	  0x000000000000000 RESERVED
	field <22:16> RW  0x000000000000000 ADDRESS<22:16>
	field <15:09> R	  0x000000000000000 RESERVED
	field <08:00> RW  0x000000000000000 NODEID
end

register II_IBLS1
	address		  0x420000
	see		  II_IBLS0
end

register II_IBSA1
	address		  0x420008
	see		  II_IBSA0
end

register II_IBDA1
	address		  0x420010
	see		  II_IBDA0
end

register II_IBCT1
	address		  0x420018
	see		  II_IBCT0
end

register II_IBNA1
	address		  0x420020
	see		  II_IBNA0
end

register II_IBIA1
	address		  0x420028
	see		  II_IBIA0
end

register II_IPCR
	address		  0x430000
	see		  II_NOT_DONE
end

register II_IPPR
	address		  0x430008
	see		  II_NOT_DONE
end

# Hub NI registers

register NI_STATUS_REV_ID
	address		  0x600000
	field <30:28> R	  0x0000000000000000 PORT_STATUS
	field	 <18> RW  0x0000000000000000 MORE_NODES
	field	 <17> RW  0x0000000000000001 REGION_SIZE
	field <16:08> RW  0x0000000000000000 NODE_ID
	field <07:04> R	  0x0000000000000002 CHIP_REV
	field <03:00> R	  0x0000000000000000 CHIP_ID
end

register NI_PORT_RESET
	address		  0x600008
	field	 <07> W	  0x0000000000000000 PORT_RESET
	field	 <01> W	  0x0000000000000000 LINK_RESET
	field	 <00> W	  0x0000000000000000 LOCAL_RESET
end

register NI_PROTECTION_CONFIG
	address		  0x600010
	field	 <00> RW  0x0000000000000001 RESET_OK
end

register NI_GLOBAL_PARMS
	address		  0x600018
	field <57:48> RW  0x00000000000003ff MAX_RETRY
	field <47:32> RW  0x000000000000fffe TAIL_TO_WRAP
	field <19:16> RW  0x000000000000000f CREDIT_TO_VAL
	field <07:04> RW  0x000000000000000f TAIL_TO_VAL
end

register NI_SCRATCH_REG0
	address		  0x600100
	field <63:00> RW  0x0000000000000000 SCRATCH_BITS
end

register NI_SCRATCH_REG1
	address		  0x600108
	see		  NI_SCRATCH_REG0
end

register NI_DIAG_PARMS
	address		  0x600110
	field	 <18> RW  -		     PORT_TO_RESET
	field	 <12> RW  0x0000000000000000 LLP_8BIT_MODE
	field	 <06> RW  0x0000000000000000 PORT_DISABLE
	field	 <00> RW  -		     SEND_DATA_ERROR
end

register NI_VECTOR_PARMS
	address		  0x600200
	field <50:40> RW  -		     PIO_ID
	field <39:32> RW  -		     WRITE_ID
	field <19:03> RW  -		     ADDRESS<19:03>
	field <01:00> RW  -		     TYPE
	note		  Type: r=00,w=01,x=11
end

register NI_VECTOR
	address		  0x600208
	field <63:00> RW  -		     VECTOR
end

register NI_VECTOR_DATA
	address		  0x600210
	field <63:00> RW  -		     WRITE_DATA
end

register NI_VECTOR_STATUS
	address		  0x600300
	field	 <63> RW  0x0000000000000000 VALID
	field	 <62> RW  0x0000000000000000 OVERRUN
	field <61:51> RW  -		     SOURCE
	field <50:40> RW  -		     PIO_ID
	field <39:32> RW  -		     WRITE_ID
	field <31:03> RW  -		     ADDRESS<31:03>
	field <02:00> RW  -		     TYPE
	note		  Type: r=000,w=001,x=011,ae=100,ce=101,pv=110,un=111
end

register NI_RETURN_VECTOR
	address		  0x600308
	field <63:00> RW  -		     VECTOR
end

register NI_VECTOR_READ_DATA
	address		  0x600310
	field <63:00> RW  -		     READ_DATA
end

register NI_VECTOR_CLEAR
	address		  0x600380
	field <63:00> RC  -		     READ_DATA
end

register NI_IO_PROTECT
	address		  0x600400
	field <63:00> RW  0xffffffffffffffff IO_PROTECT
end

register NI_PROT_OVRRD
	address		  0x600408
	field <63:00> WS  0x53474972756c6573 IO_PROT_OVR
end

register NI_AGE_CPU0_MEMORY
	address		  0x600500
	field <11:10> RW  0x0000000000000000 VCH
	field <09:08> RW  0x0000000000000000 CC
	field <07:00> RW  0x0000000000000000 AGE
end

register NI_AGE_CPU0_PIO
	address		  0x600508
	field <11:10> RW  0x0000000000000000 VCH
	field <09:08> RW  0x0000000000000000 CC
	field <07:00> RW  0x0000000000000000 AGE
end

register NI_AGE_CPU1_MEMORY
	address		  0x600510
	see		  NI_AGE_CPU0_MEMORY
end

register NI_AGE_CPU1_PIO
	address		  0x600518
	see		  NI_AGE_CPU0_PIO
end

register NI_AGE_GBR_MEMORY
	address		  0x600520
	see		  NI_AGE_CPU0_MEMORY
end

register NI_AGE_GBR_PIO
	address		  0x600528
	see		  NI_AGE_CPU0_PIO
end

register NI_AGE_IO_MEMORY
	address		  0x600530
	see		  NI_AGE_CPU0_MEMORY
end

register NI_AGE_IO_PIO
	address		  0x600538
	see		  NI_AGE_CPU0_PIO
end

register NI_PORT_PARMS
	address		  0x608000
	field <15:10> RW  0x0000000000000006 NULL_TIMEOUT
	field <09:00> RW  0x00000000000003f0 MAX_BURST
end

register NI_PORT_ERROR
	address		  0x608008
	field	 <37> RW  -		     LINK_RESET
	field	 <36> RW  -		     INTERNAL_ERROR
	field	 <35> RW  -		     BAD_MESSAGE
	field	 <34> RW  -		     BAD_DEST
	field	 <33> RW  -		     FIFO_OVERFLOW
	field <31:28> RW  -		     CREDIT_TIMEOUT
	field <27:24> RW  -		     TAIL_TIMEOUT
	field <23:16> RW  -		     RETRY_COUNT
	field <15:08> RW  -		     CB_ERROR_COUNT
	field <07:00> RW  -		     SN_ERROR_COUNT
end

register NI_ERROR_CLEAR
	address		  0x608088
	see		  NI_PORT_ERROR
	note		  Same as NI_PORT_ERROR, except clears on read
end

register NI_META_TABLE<00>
	address		  0x638000
	field <03:00> RW  -		     NEXT_EXIT_PORT
	note		  For META_TABLE entries 01 though 31, add entry * 8.
end

register NI_LOCAL_TABLE<00>
	address		  0x638100
	field <03:00> RW  -		     NEXT_EXIT_PORT
	note		  For LOCAL_TABLE entries 01 though 15, add entry * 8.
end

# Hub Core registers

register CORE_CMDAB
	address		  0x2000b0
	field <63:48> RW  0x000000000000ffff TIMEOUT
	field <20:16> RW  0x000000000000001f NRQ_CNT
	field <09:05> RW  0x000000000000001f IRQ_CNT
	field <04:00> RW  0x000000000000001f PRQ_CNT
end

register CORE_CNDAB
	address		  0x2000b8
	see		  CORE_CMDAB
end

register CORE_CDBGSEL
	address		  0x2000c0
	field <03:00> RW  -		     DBG_SEL
end

register CORE_CACR
	address		  0x2000c8
	field <07:00> RW  0x0000000000000000 SA_AGE
end

register CORE_CRQQD
	address		  0x2000d0
	field <60:55> R	  0x0000000000000000 NIQ_RQ
	field <54:49> R	  0x0000000000000000 NOQ_RQA
	field <48:43> R	  0x0000000000000000 NOQ_RQB
	field <42:37> R	  0x0000000000000000 PIQ_RQ
	field <36:30> R	  0x0000000000000000 POQ_RQ
	field <29:24> R	  0x0000000000000000 IIQ_RQ
	field <23:17> R	  0x0000000000000000 IOQ_RQ
	field <16:12> R	  0x0000000000000000 MIQ_RQH
	field <11:06> R	  0x0000000000000000 MIQ_RQD
	field <05:00> R	  0x0000000000000000 MOQ_RQ
end

register CORE_CRPQD
	address		  0x2000d8
	field <60:55> R	  0x0000000000000000 NIQ_RP
	field <54:49> R	  0x0000000000000000 NOQ_RPA
	field <48:43> R	  0x0000000000000000 NOQ_RPB
	field <42:37> R	  0x0000000000000000 PIQ_RP
	field <36:30> R	  0x0000000000000000 POQ_RP
	field <29:24> R	  0x0000000000000000 IIQ_RP
	field <23:17> R	  0x0000000000000000 IOQ_RP
	field <16:12> R	  0x0000000000000000 MIQ_RPH
	field <11:06> R	  0x0000000000000000 MIQ_RPD
	field <05:00> R	  0x0000000000000000 MOQ_RP
end

register CORE_CFDR
	address		  0x2000e0
	field <54:48> RW  0x0000000000000000 IOQ_THRESH
	field <44:40> RW  0x0000000000000000 MIQ_DEP_H
	field <37:32> RW  0x0000000000000000 MIQ_DEP_D
	field	 <31> RW  0x0000000000000000 NIQ_SSYNC
	field <29:24> RW  0x0000000000000000 NIQ_DEP
	field <21:16> RW  0x0000000000000000 PIQ_DEP_RP
	field <12:08> RW  0x0000000000000000 PIQ_DEP_RQ
	field <05:00> RW  0x0000000000000000 IIQ_DEP
end

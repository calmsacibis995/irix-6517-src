Notes on module transaction tracing
-----------------------------------

The local baseclass (TDevice) implements tracing based on the name of
the module, set by calling the SetDeviceName() function. During
construction of the various models, this function is called for each
of that module's base classes, so we can turn tracing on or off for
any individual module or class of modules.

Use "setenv trace_name" to turn on tracing for modules whose name or
class is <name>; and "setenv trace_name 0" to turn it off. More
specific names override less specific names; so, for instance, if you
turn on tracing for all xtalk widgets with "setenv trace_widget" and
turn off tracing for the bridge with "setenv trace_bridge 0", you will
see traces for all xtalk widgets that are not bridges.

Note that you can select a specific instance of a device, if multiple
instances of the same model class are present *and* they are properly
named when the system is constructed. The SpeedRacer model currently
will provide correct names for two Bridges and two QL cards.

It is unfortunate that "ioc3" has a trailing digit, this may cause
confusion in the times to come, but it is probably better than calling
it an "iocthree" ;-)

Current set of variables, and how they inherit values:

  setenv trace_device
    setenv trace_widget
      setenv trace_xbow
      setenv trace_bridge
        setenv trace_bridge0
        setenv trace_bridge1
      setenv trace_heart
      setenv trace_xsabledisk
   setenv trace_pci
      setenv trace_pciuart
      setenv trace_ioc3
      setenv trace_ql
        setenv trace_ql0
        setenv trace_ql1

One combination that I use for model debugging is to turn tracing on
for everything except accesses to the simulated UART:

setenv trace_device	1
setenv trace_pciuart	0


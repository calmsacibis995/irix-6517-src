%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 295 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
% The following commented out code did not work for tangent lines of zero
% length.  The code following it was provided by Frame to patch this error.
%
%/RR { 
%	/rad exch def
%	normalize
%	/y2 exch def
%	/x2 exch def
%	normalize
%	/y1 exch def
%	/x1 exch def
%	newpath
%	x1 y1 rad add moveto
%	x1 y2 x2 y2 rad arcto
%	x2 y2 x2 y1 rad arcto
%	x2 y1 x1 y1 rad arcto
%	x1 y1 x1 y2 rad arcto
%	closepath
%	16 {pop} repeat
%	} bind def
/rarc
    {rad
     {arcto} stopped
    } bind def
/RR {
    /rad exch def
    normalize
    /y2 exch def
    /x2 exch def
    normalize
    /y1 exch def
    /x1 exch def
    mark
    newpath
    x1 y1 rad add moveto
    x1 y2 x2 y2 rarc
    x2 y2 x2 y1 rarc
    x2 y1 x1 y1 rarc
    x2 y1 x1 y1 rarc
    x1 y1 x1 y2 rarc
    closepath
    cleartomark
    } bind def

/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/cip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 

    /tot w 1 sub def
    0 1 tot {
        /indx exch def
        /indxa is indx get def
        /placer nredt indxa get def
        /placeg ngreent indxa get def
        /placeb nbluet indxa get def
        cris indx placer 255 mul cvi put
        cgis indx placeg 255 mul cvi put
        cbis indx placeb 255 mul cvi put
    } for pop cris

	
	} bind def
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 

	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
    currentcolortransfer
    /gryt exch def
    /blut exch def
    /grnt exch def
    /redt exch def
    0 1 255 {
        /indx exch def
        /cynu 1 red indx get 255 div sub def
        /magu 1 green indx get 255 div sub def
        /yelu 1 blue indx get 255 div sub def
        /k cynu magu min yelu min def
        nredt indx 1 0 cynu max sub redt exec put
        ngreent indx 1 0 magu max sub grnt exec put
        nbluet indx 1 0 yelu max sub blut exec put
        ngrayt indx 1 k sub gryt exec put
    } for
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
    /ris w d wbytes string def
    /gis w d wbytes string def
    /bis w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop
    /tot w 1 sub def
    0 1 tot {
        /indx exch def
        /indxa is indx get def
        /placer nredt indxa get def
        /placeg ngreent indxa get def
        /placeb nbluet indxa get def
        ris indx placer 255 mul cvi put
        gis indx placeg 255 mul cvi put
        bis indx placeb 255 mul cvi put
    } for pop ris}
	{gis} {bis} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
    /cris lb string def
    /cgis lb string def
    /cbis lb string def
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cip} {cgis} {cbis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 19 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Times-Italic FMFONTDEFINE
3 0 /Helvetica FMFONTDEFINE
4 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "i" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 445.03 558 445.03 2 L
7 X
V
2 Z
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
0.25 H
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
0 10 Q
0 X
(7/9/93) 71.25 61.04 T
(PROPRIETARY and CONFIDENTIAL) 206.25 61.04 T
0 -10 -10 140 20 150 30 478.51 46.54 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 468 558 693 R
7 X
V
1 30 Q
0 X
(The Everest IP19) 207 641 T
(PROM User) 207 609 T
(\325) 357.26 609 T
(s Guide) 365.6 609 T
72 87.98 558 432 R
7 X
V
1 18 Q
0 X
(Steve Whitney) 207 420 T
2 F
(For PROM V) 207 376 T
(ersion 1) 301.93 376 T
(1) 359.07 376 T
(July 9, 1993) 207 332 T
FMENDPAGE
%%EndPage: "i" 2
%%Page: "ii" 2
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
0 7 Q
0 X
(Page) 515.8 736.18 T
0 9 Q
( ii) 532.5 736.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 55.55 540 67.5 R
7 X
V
0 10 Q
0 X
( PROPRIETARY and CONFIDENTIAL) 189 60.83 T
(7/9/93) 512.22 60.83 T
0 -10 -10 140 20 112.46 22.46 54 54.07 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
FMENDPAGE
%%EndPage: "ii" 3
%%Page: "1" 3
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 10 Q
0 X
(Page 1) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
2 24 Q
0 X
-0.48 (T) 207 670.02 S
-0.48 (able of Contents) 217.65 670.02 S
1 14 Q
(Introduction 3) 72 634.68 T
(Power-on Summary 5) 72 602.68 T
1 10 Q
(Per Processor T) 72 579.35 T
(ests 5) 134.59 579.35 T
(Bootmaster Code 6) 72 561.35 T
(Slave Code 8) 72 543.35 T
(Fatal Failures 8) 72 525.35 T
1 14 Q
(The Debug Switches 11) 72 494.68 T
1 10 Q
(Getting to the switches 1) 72 471.35 T
(1) 171.02 471.35 T
(What the switches mean 1) 72 453.35 T
(1) 176.55 453.35 T
1 14 Q
(POD Mode 15) 72 422.68 T
1 10 Q
(Basic Information 15) 72 399.35 T
1 14 Q
(Niblet 21) 72 368.68 T
1 10 Q
(Introduction 21) 72 345.35 T
(Niblet T) 72 327.35 T
(ests 21) 104.89 327.35 T
(Niblet Operations 25) 72 309.35 T
1 14 Q
(PROM LEDS Decoded 27) 72 278.68 T
1 10 Q
(Introduction 27) 72 255.35 T
1 14 Q
(PROM Diagnostic Messages 33) 72 224.68 T
1 10 Q
(Diagnostic V) 72 201.35 T
(alue Console Messages 33) 123.91 201.35 T
(Diagnostic System Controller Messages 36) 72 183.35 T
(System Controller Standard Messages 39) 72 165.35 T
1 14 Q
(Miscellaneous Hints 43) 72 134.68 T
1 10 Q
(Flashing LEDs Ctrl-P T) 72 111.35 T
(rick 43) 167.44 111.35 T
(System Controller Boot Status Characters 43) 72 93.35 T
FMENDPAGE
%%EndPage: "1" 4
%%Page: "2" 4
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 10 Q
0 X
(Page) 306 734.18 T
3 12 Q
( 2) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 10 Q
0 X
(Documented IP19 PROM V) 72 679.35 T
(ectors 44) 183.88 679.35 T
(EAROM V) 72 661.35 T
(ariables 44) 116.69 661.35 T
FMENDPAGE
%%EndPage: "2" 5
%%Page: "3" 5
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 10 Q
0 X
(Page 3) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 1) 72 670.02 S
1 24 Q
-0.48 (Introduction) 207 670.02 S
1 12 Q
(In this document, I will present some basic user) 207 322.02 T
(\325) 436.29 322.02 T
(s information about the) 439.62 322.02 T
(IP19 prom as well as some insight as to what\325) 207 308.02 T
(s going on under the hood.) 426.54 308.02 T
(W) 207 294.02 T
(e\325ll start with a brief description of the events that transpire after you) 217.36 294.02 T
-0.19 (turn on the keyswitch or press reset and will then proceed to cover useful) 207 280.02 P
(commands, switches, LED values, and messages in the IP19 prom.) 207 266.02 T
FMENDPAGE
%%EndPage: "3" 6
%%Page: "4" 6
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Introduction) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 4) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
FMENDPAGE
%%EndPage: "4" 7
%%Page: "5" 7
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Per Processor T) 72 734.18 T
(ests) 157.31 734.18 T
3 10 Q
(Page 5) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 2) 72 670.02 S
1 24 Q
-0.48 (Power) 207 670.02 S
-0.48 (-on Summary) 265.41 670.02 S
1 12 Q
(At this point, the only way you can tell what a processor is doing is via) 207 348.02 T
(the six LEDs it has on the edge of the processor card. Each processor) 207 334.02 T
(\322slice\323 of the IP19 board has its own independently-controlled LEDs) 207 320.02 T
(which represent its status. At reset, all LEDs are on. After that, the CPU) 207 306.02 T
(sets them to various other values.) 207 292.02 T
72 243.99 558 247.02 C
207 245.5 558 245.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 245.5 198 245.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(2.1) 178.01 252.35 T
(Per Pr) 207 252.35 T
(ocessor T) 251.55 252.35 T
(ests) 314.48 252.35 T
1 12 Q
(First, each processor goes through some really basic processor initializa-) 207 221.99 T
(tion- clearing registers, cache tags, etc. After that, it begins to run very) 207 207.99 T
(simple power) 207 193.99 T
(-on diagnostics to check out its local ASICs \050CC chip, A) 271.72 193.99 T
(chip\051. If any of these tests fail in a detectable way \050i.e. not a hang\051, the) 207 179.99 T
(processor will \337ash a pattern on its LEDs.) 207 165.99 T
(After testing its ASICs, the processor attempts to access the Everest bus) 207 139.99 T
(by sending interrupts to itself. Even looped-back interrupts go out to the) 207 125.99 T
(bus. Again, failure results in \337ashing LEDs.) 207 111.99 T
FMENDPAGE
%%EndPage: "5" 8
%%Page: "6" 8
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Power-on Summary) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 6) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
1 F
0 X
(After we have checked out our local ASICs and the interrupt channels,) 189 678.02 T
(we have everything necessary to arbitrate for bootmaster) 189 664.02 T
(. Only one pro-) 460.45 664.02 T
0 (cessor can initialize the shared system resources such as memory and IO) 189 650.02 P
(boards so we elect a \322bootmaster) 189 636.02 T
(.\323) 346.55 636.02 T
(Boot master selection is based on a time delay scaled by the slot number) 189 610.02 T
-0.08 (a processor number is in and also by its slice. It works in such a way that) 189 596.02 P
-0.28 (the active processor in the lowest numbered slice of the lowest numbered) 189 582.02 P
(slot becomes master) 189 568.02 T
(. For example, if there are processors in board 2 -) 285.61 568.02 T
-0.3 (slices 1 and 3 and board 4 - slices 0, 1, and 2, the processor in slot 2, slice) 189 554.02 P
(1 becomes boot master) 189 540.02 T
(.) 298.6 540.02 T
(If the master processor reads the NVRAM hardware inventory informa-) 189 514.02 T
-0.5 (tion and discovers that it is supposed to be disabled, it abdicates, allowing) 189 500.02 P
-0.01 (the next eligible processor to become master) 189 486.02 P
-0.01 (. If the master is the last pro-) 402.14 486.02 P
(cessor active, it will not abdicate unless it fails diagnostics.) 189 472.02 T
54 423.99 540 427.02 C
189 425.5 540 425.5 2 L
0.25 H
2 Z
0 X
0 K
N
54 425.5 180 425.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(2.2) 160.01 432.35 T
(Bootmaster Code) 189 432.35 T
1 12 Q
-0.29 (Next the boot master broadcasts an interrupt to all of the other processors) 189 401.99 P
(telling them that they are slave processors \050the slave code is described) 189 387.99 T
-0.08 (later\051. The master can then go on to con\336gure the system. The master ini-) 189 373.99 P
(tiates a protocol with the system controller to let it know which CPU is) 189 359.99 T
(master) 189 345.99 T
(. The system controller can only communicate with one processor) 220.32 345.99 T
(at a time so we cannot send any messages to it until it knows where the) 189 331.99 T
(master is.) 189 317.99 T
(Now) 189 291.99 T
(, we test the primary data cache and use it as a stack to run C code.) 211.54 291.99 T
-0.46 (W) 189 277.99 P
-0.46 (ithout a stack, we can only use the processor) 199.84 277.99 P
-0.46 (\325) 410.09 277.99 P
-0.46 (s registers for data storage) 413.42 277.99 P
(so nested procedure calls and manipulation of complicated data \050e.g.) 189 263.99 T
-0.47 (memory con\336guration\051 is very dif) 189 249.99 P
-0.47 (\336cult. A failure here causes boot master) 349.45 249.99 P
(rearbitration.) 189 235.99 T
-0.31 (The \336rst global resource the master must con\336gure is the system console,) 189 209.99 P
-0.46 (one of the serial ports on the IO4 board. In order to do this, it must choose) 189 195.99 P
-0.27 (a master IO4 board. The master IO4 is always the IO board in the highest) 189 181.99 P
-0.19 (numbered slot \050unless the \322use second IO4 switch is set\323\051. W) 189 167.99 P
-0.19 (e run the IA/) 479.61 167.99 P
-0.08 (ID chip tests, check this board for a working EPC chip, check the integri-) 189 153.99 P
(ty of the NVRAM \050to get the baud rate and enable/disable information\051,) 189 139.99 T
-0.28 (initialize the console there, and print our header message. The IP19 prom) 189 125.99 P
(is smart enough to re-enable the last CPU if all are disabled or re-enable) 189 111.99 T
(all memory banks if fewer than 32 megabytes of RAM are enabled.) 189 97.99 T
FMENDPAGE
%%EndPage: "6" 9
%%Page: "7" 9
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Bootmaster Code) 72 734.18 T
3 10 Q
(Page 7) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 F
0 X
(Next we initialize the \322evcon\336g\323 structure. Evcon\336g contains informa-) 207 678.02 T
-0.34 (tion about what\325) 207 664.02 P
-0.34 (s in each EBus slot, the state of these things, and whether) 284.27 664.02 P
(or not they are enabled. A user may set an NVRAM variable which will) 207 650.02 T
(disable one or more system resources \050currently a memory bank or pro-) 207 636.02 T
(cessor\051. This can be done from POD or the IO4 prom command monitor) 207 622.02 T
-0.37 (via the enable and disable commands. The POD versions only change the) 207 608.02 P
(RAM settings while the IO4 prom versions actually set the NVRAM.) 207 594.02 T
(After locating and con\336guring the master IO4 board, we\325re ready to set) 207 568.02 T
-0.12 (up memory) 207 554.02 P
-0.12 (. The prom records the amount of memory in each bank of all) 261.07 554.02 P
(available memory boards in the system and performs a memory con\336gu-) 207 540.02 T
-0.09 (ration algorithm. It groups together banks of each size and attempts to in-) 207 526.02 P
(terleave the memory to improve performance. In order to make) 207 512.02 T
(performance uniform across all system memory) 207 498.02 T
(, the prom uses the high-) 435.71 498.02 T
(est interleave factor that will allow it to con\336gure all banks uniformly) 207 484.02 T
(.) 540.33 484.02 T
(There is a poorly tested NVRAM variable called \322fastmem\323 which tells) 207 458.02 T
(the prom to try to interleave memory \322optimally\323 rather than uniformly) 207 444.02 T
(.) 548.66 444.02 T
(This may or may not improve performance, but if it does, it also makes) 207 430.02 T
(performance less stable. Multiple runs of the same code will be more) 207 416.02 T
-0.44 (likely to run at dif) 207 402.02 P
-0.44 (ferent speeds. \322Fastmem\323 can be set from the IO4 prom) 291.63 402.02 P
(command monitor) 207 388.02 T
(.) 294.62 388.02 T
(Before con\336guring memory) 207 362.02 T
(, the prom runs the memory board\325) 340.13 362.02 T
(s built-in) 507.02 362.02 T
-0.22 (self-test, a.k.a. BIST) 207 348.02 P
-0.22 (, on all boards. Banks that fail BIST are not included) 304.27 348.02 P
(in the con\336guration. BIST has the side-ef) 207 334.02 T
(fect of zeroing memory and) 404.99 334.02 T
-0.15 (storing good ECC bits in it. On older revisions of the MA chip \050rev) 207 320.02 P
-0.15 (. 0\051, it) 526.79 320.02 P
(is necessary to run the BIST) 207 306.02 T
(, let it fail, reset the machine, and decline to) 341.69 306.02 T
(run BIST) 207 292.02 T
(. The prom only presents the \322BIST?\323 prompt on such ma-) 251.09 292.02 T
(chines.) 207 278.02 T
(After con\336guring memory) 207 252.02 T
(, the PROM runs several memory tests on the) 332.8 252.02 T
(con\336gured RAM. Upon a memory failure, the PROM recon\336gures mem-) 207 238.02 T
(ory without the af) 207 224.02 T
(fected banks. This continues until all tests pass or) 292.39 224.02 T
(there\325) 207 210.02 T
(s no memory left to con\336gure out. If all memory is con\336gured out) 234.31 210.02 T
-0.17 (in this way) 207 196.02 P
-0.17 (, there may be a problem with the master CPU. T) 258.52 196.02 P
-0.17 (ry again with) 492.23 196.02 P
(the \336rst CPU \050or board\051 disabled - see fdisable/fenable commands in) 207 182.02 T
(POD mode - you wont\325 be able to get to the IO4 prom.) 207 168.02 T
-0.19 (Next, we test and initialize the CC chip\325) 207 142.02 P
-0.19 (s \322bus tags,\323 and write the evcon-) 397.58 142.02 P
(\336g structure out to memory) 207 128.02 T
(. At this point, we move our stack into un-) 337.48 128.02 T
(cached memory and continue testing the system.) 207 114.02 T
FMENDPAGE
%%EndPage: "7" 10
%%Page: "8" 10
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Power-on Summary) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 8) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
1 F
0 X
(Now that the stack is no longer in the data cache, we can test the caches.) 189 678.02 T
-0.44 (Current IP19 proms run a single secondary cache test that tests the scache) 189 664.02 P
(as a one megabyte RAM. Future IO4 proms will test the tags indepen-) 189 650.02 T
(dently and will test write-backs. Future IO4 proms will also test the i-) 189 636.02 T
(cache.) 189 622.02 T
(Finally) 189 596.02 T
(, we\325re ready to check on the slave processors. W) 222.21 596.02 T
(e wait for them) 458.71 596.02 T
(to \336nish their testing \050or for a timeout\051 and display the results of the test-) 189 582.02 T
(ing. If the processors have not stored a result value, we assume that they) 189 568.02 T
(cannot access memory) 189 554.02 T
(. If they hang in a particular test, we assume that) 296.8 554.02 T
(the test failed.) 189 540.02 T
-0.46 (Processors that fail diagnostics are disabled, and we go on to load the IO4) 189 514.02 P
(prom.) 189 500.02 T
54 431.99 540 435.02 C
189 433.5 540 433.5 2 L
0.25 H
2 Z
0 X
0 K
N
54 433.5 180 433.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(2.3) 160.01 440.35 T
(Slave Code) 189 440.35 T
1 12 Q
(Until now) 189 409.99 T
(, we have only discussed the role of the master processor) 236.53 409.99 T
(. The) 508.66 409.99 T
(slave processors enter a loop where they wait for instructions from the) 189 395.99 T
(master processor) 189 381.99 T
(. The \336rst instruction they are given is a request to up-) 269.27 381.99 T
-0.23 (date their entries in evcon\336g. The slaves store their processor type, cache) 189 367.99 P
-0.11 (size, speed, etc. Next they start their power) 189 353.99 P
-0.11 (-on diagnostics updating their) 394.52 353.99 P
-0.14 (diagnostic result value, or \322diagval,\323 as they go. The slaves currently run) 189 339.99 P
(the same set of tests as the master: data cache, secondary cache, and bus) 189 325.99 T
(tag tests. Future versions will run the same set of tests mentioned for the) 189 311.99 T
(master) 189 297.99 T
(.) 220.32 297.99 T
(Slaves can also be sent interrupts to launch them into a given piece of) 189 271.99 T
(code. This technique is used by the \322niblet\323 tests \050mentioned below\051 as) 189 257.99 T
(well as by the IO4 prom to prepare slaves to run Unix.) 189 243.99 T
54 195.97 540 198.99 C
189 197.48 540 197.48 2 L
0.25 H
2 Z
0 X
0 K
N
54 197.48 180 197.48 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(2.4) 160.01 204.33 T
(Fatal Failur) 189 204.33 T
(es) 270.89 204.33 T
1 12 Q
(Upon fatal failures such as no enable memory or an IA chip test failure,) 189 173.97 T
(the PROM scrolls a descriptive message across the system controller) 189 159.97 T
(LCD display and displays a \322diagnostic code.\323 These codes can be used) 189 145.97 T
(to diagnose the problem in more depth than the message alone. Upon IO) 189 131.97 T
(failures, the CPU goes into POD mode on the CC UAR) 189 117.97 T
(T) 454.46 117.97 T
(. On memory) 460.9 117.97 T
-0.23 (failures, the master CPU goes into POD mode. Pressing Enter on the seri-) 189 103.97 P
FMENDPAGE
%%EndPage: "8" 11
%%Page: "9" 11
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Fatal Failures) 72 734.18 T
3 10 Q
(Page 9) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 F
0 X
(al console clears the scrolling message and allow the user to type com-) 207 678.02 T
(mands.) 207 664.02 T
(The diagnostic codes are listed in the chapter of the same name.) 207 638.02 T
FMENDPAGE
%%EndPage: "9" 12
%%Page: "10" 12
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Power-on Summary) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 10) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
FMENDPAGE
%%EndPage: "10" 13
%%Page: "11" 13
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Getting to the switches) 72 734.18 T
3 10 Q
(Page 1) 324 734.18 T
(1) 354.93 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 3) 72 670.02 S
1 24 Q
-0.48 (The Debug Switches) 207 670.02 S
72 336.99 558 340.02 C
207 338.5 558 338.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 338.5 198 338.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(3.1) 178.01 345.35 T
(Getting to the switches) 207 345.35 T
1 12 Q
(The system controller has a mode, accessible only from \322manager) 207 314.99 T
-0.34 (mode,\323 which allows the user to set a number of \322virtual dipswitches.\323 In) 207 300.99 P
(LAB versions of the system controller prom, this menu item is always) 207 286.99 T
(visible. In PRODUCTION versions, the user must switch the keyswitch) 207 272.99 T
-0.17 (to \322On\323 \050not manager\051 mode, hold down the middle two \050arrow\051 buttons,) 207 258.99 P
(and turn the key to manager mode without releasing the buttons. This) 207 244.99 T
(makes the \322debug settings\323 menu item appear for thirty seconds. Once) 207 230.99 T
(selected, the debug settings will stay up as long as buttons are being) 207 216.99 T
(pressed or for 60 seconds.) 207 202.99 T
72 154.97 558 157.99 C
207 156.48 558 156.48 2 L
0.25 H
2 Z
0 X
0 K
N
72 156.48 198 156.48 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(3.2) 178.01 163.33 T
(What the switches mean) 207 163.33 T
1 12 Q
(There are sixteen debug switches of which the left-most eight are \322lab) 207 132.97 T
(settings.\323 The right-most are \322software settings.\323 The switches are num-) 207 118.97 T
(bered from the right starting from zero as shown:) 207 104.97 T
FMENDPAGE
%%EndPage: "11" 14
%%Page: "12" 14
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(The Debug Switches) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 12) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
0 X
(f e d c b a 9 8 7 6 5 4 3 2 1 0) 198 678.02 T
1 F
(The software switches work as follows:) 189 652.02 T
54 620.98 540 634.02 C
189 628.04 540 628.04 2 L
0.25 H
2 Z
0 X
0 K
N
54 628.04 180 628.04 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 54 612.98 T
(able  1) 60.44 612.98 T
(System Controller Software Switches) 189 612.98 T
3 F
(Switch 7: Manufacturing Mode) 54 594.98 T
1 F
-0.18 (The \322Manu-mode\323 switch is used to send all IP19prom console output to) 189 568.98 P
(the external UAR) 189 554.98 T
(T on the system controller) 272.88 554.98 T
(. This mode will eventually) 398.14 554.98 T
(be used in manufacturing to debug systems which can\325) 189 540.98 T
(t reach the IO4) 451.93 540.98 T
(UAR) 189 526.98 T
(T) 213.6 526.98 T
(.) 220.04 526.98 T
3 F
(Switch 6 - No bootmaster arbitration:) 54 506.98 T
1 F
-0.52 (The \322No boot master arbitration\323 switch keeps the system controller from) 189 480.98 P
-0.13 (selecting a processor with which to communicate. This makes it possible) 189 466.98 P
(to communicate with individual processors via the \322CC UAR) 189 452.98 T
(T\323 connec-) 482.77 452.98 T
(tors on the edge of the IP19 boards.) 189 438.98 T
3 F
(Switch 5 - POD mode:) 54 418.98 T
1 F
(The \322POD mode\323 switch forces the IP19 prom to stop initialization just) 189 392.98 T
(before it would have loaded the IO4 prom and jump to POD mode in-) 189 378.98 T
(stead. This is useful on a system with a bad IO4 prom or a bad IO board.) 189 364.98 T
3 F
(Switch 4 - No Diagnostics) 54 344.98 T
1 F
( The \322No diagnostics\323 switch prevents the system from running power) 189 318.98 T
(-) 527.19 318.98 T
(on diagnostics. This switch should only be used by software developers) 189 304.98 T
(who are constantly bringing systems up and down. Otherwise, it can) 189 290.98 T
(mask failures and cause system damage.) 189 276.98 T
3 F
(Switch 3 - Use Default Settings) 54 256.98 T
1 F
( This switch will override the console baud-rate setting and use 9600 in-) 189 230.98 T
(stead. It may also override certain other settings.) 189 216.98 T
3 F
(Switch 2 - Don\325t Clear Memory) 54 196.98 T
1 F
-0.02 (Don\325) 189 170.98 P
-0.02 (t clear memory \050run BIST\051. It\325) 213.43 170.98 P
-0.02 (s useful for debugging things like the) 358.57 170.98 P
(machines that won\325) 189 156.98 T
(t take an NMI.) 282.72 156.98 T
(Setting this switch and powering on cold will result in an unusable ma-) 189 130.98 T
(chine. Always turn it back of) 189 116.98 T
(f after using it.) 328.02 116.98 T
3 F
(Switch 1 - Second IO4:) 54 96.98 T
FMENDPAGE
%%EndPage: "12" 15
%%Page: "13" 15
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(What the switches mean) 72 734.18 T
3 10 Q
(Page 13) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 F
0 X
(In PROM release 6, this becomes the \322boot from second IO4\323 switch. If) 207 678.02 T
(you have a machine with a bad \337ash ROM in the highest slot, simply) 207 664.02 T
(move the console connection, \337ip this switch, and boot from the next) 207 650.02 T
(IO4.) 207 636.02 T
3 F
(Switch 0 - Debug) 72 616.02 T
1 F
-0.29 (In PROM release 7, this becomes the debug switch. So far) 207 590.02 P
-0.29 (, it is used only) 483.46 590.02 P
(by the IO4 prom.) 207 576.02 T
72 550.05 558 564.02 C
70.5 556.54 558.75 557.27 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "13" 16
%%Page: "14" 16
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(The Debug Switches) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 14) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
FMENDPAGE
%%EndPage: "14" 17
%%Page: "15" 17
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Basic Information) 72 734.18 T
3 10 Q
(Page 15) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 4) 72 670.02 S
1 24 Q
-0.48 (POD Mode) 207 670.02 S
72 336.99 558 340.02 C
207 338.5 558 338.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 338.5 198 338.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(4.1) 178.01 345.35 T
(Basic Information) 207 345.35 T
1 12 Q
(During bring-up and in the event of unexpected exceptions or diagnostic) 207 314.99 T
(failures, the PROM can drop into a special command interpreter) 207 300.99 T
(. This in-) 514.11 300.99 T
(terface, known as the Power) 207 286.99 T
(-On Diagnostics mode, or POD mode, pro-) 342.31 286.99 T
(vides a simple interface through which a user can examine and modify) 207 272.99 T
(the state of the machine. The commands provided by POD MODE are) 207 258.99 T
(listed below) 207 244.99 T
(. All numerical inputs should be entered in hex and need not) 264.52 244.99 T
(be pre\336xed with \3240x\325.) 207 230.99 T
3 F
(The POD mode prompt is \322POD xx/yy>\323 where xx is the slot number of the current proces-) 72 210.99 T
(sor) 72 196.99 T
(, and yy is its \322slice\323 on the IP19 board.) 88 196.99 T
72 173.96 558 186.99 C
207 181.02 558 181.02 2 L
0.25 H
2 Z
0 X
0 K
N
72 181.02 198 181.02 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 72 165.96 T
(able  2) 78.44 165.96 T
3 F
(POD commands) 216 165.96 T
(wb ADDRESS V) 72 147.96 T
(ALUE) 159.08 147.96 T
(wh ADDRESS V) 72 129.96 T
(ALUE) 159.08 129.96 T
(ww ADDRESS V) 72 111.96 T
(ALUE) 161.07 111.96 T
(wd ADDRESS V) 72 93.96 T
(ALUE) 159.08 93.96 T
FMENDPAGE
%%EndPage: "15" 18
%%Page: "16" 18
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(POD Mode) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 16) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
1 F
0 X
(W) 189 678.02 T
(rite the value into a byte, half, word, or doubleword at the given ad-) 199.84 678.02 T
(dress. Currently the values written must be 32-bit or smaller values.) 189 664.02 T
3 F
(db ADDRESS) 54 644.02 T
(dh ADDRESS) 54 626.02 T
(dw ADDRESS) 54 608.02 T
(dd ADDRESS) 54 590.02 T
1 F
(Display the contents of the byte, halfword, word, or doubleword at the) 189 564.02 T
(given address.) 189 550.02 T
(NOTE: The display and write memory commands continue to the next) 189 524.02 T
(address by default. T) 189 510.02 T
(o quit, type a \322q\323 and return instead of just return.) 288.75 510.02 T
-0.18 (T) 189 496.02 P
-0.18 (yping a period causes the read or write to march on through memory on) 195.49 496.02 P
(its own.) 189 482.02 T
3 F
( wr REG V) 54 462.02 T
(ALUE) 109.76 462.02 T
1 F
(W) 189 436.02 T
(rite the given value into the register speci\336ed.) 199.84 436.02 T
3 F
(dr REG) 54 416.02 T
1 F
(Display the value in the speci\336ed register) 189 390.02 T
(.) 386.87 390.02 T
(Register names for read/write include:) 189 364.02 T
(sp: stack pointer) 243 344.02 T
(sr: r4000 status register) 243 327.02 T
(cause: r4000 cause register) 243 310.02 T
(epc: Exception program counter) 243 293.02 T
(eepc: error exception program counter) 243 276.02 T
(con\336g: r4000 con\336g register) 243 259.02 T
(wh: watchhi register) 243 242.02 T
(wl: watchlo register) 243 225.02 T
(Registers that can only be displayed:) 189 173.02 T
(all: all r4000 general purpose registers and selected coproces-) 243 153.02 T
(sor 0 registers.) 243 139.02 T
(rX: where 0 <= X <= 31) 243 122.02 T
FMENDPAGE
%%EndPage: "16" 19
%%Page: "17" 19
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Basic Information) 72 734.18 T
3 10 Q
(Page 17) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 F
0 X
(Please note that some of the general purpose registers are not saved cor-) 207 678.02 T
(rectly in the current version of the IP19prom.) 207 664.02 T
3 F
( dc SLOT REG) 72 644.02 T
1 F
(Displays the value of the speci\336ed Everest con\336guration register) 207 618.02 T
(.) 516.12 618.02 T
3 F
(wc SLOT REG V) 72 598.02 T
(AL) 161.09 598.02 T
1 F
(W) 207 572.02 T
(rites the value to the speci\336ed Everest con\336guration register) 217.84 572.02 T
(.) 504.98 572.02 T
3 F
(j ADDRESS) 72 552.02 T
1 F
(Jumps to the speci\336ed address) 207 526.02 T
3 F
( j1 ADDRESS P) 72 506.02 T
(ARM1) 156.42 506.02 T
1 F
(Jumps to the address passing the parameter supplied.) 207 480.02 T
3 F
(j2 ADDRESS P) 72 460.02 T
(ARM1 P) 153.09 460.02 T
(ARM2) 196.85 460.02 T
1 F
(Jumps to the address passing two parameters.) 207 434.02 T
3 F
(info) 72 414.02 T
1 F
(Displays the slot and processor number of the processor and prints out a) 207 388.02 T
(description of the system con\336guration \050as provided by SenseCon\336g\051.) 207 374.02 T
3 F
(reset) 72 354.02 T
1 F
(Reset the system.) 207 328.02 T
3 F
(sload) 72 308.02 T
1 F
(Download Motorola S-record format code through the active serial port.) 207 282.02 T
3 F
(srun) 72 262.02 T
1 F
(Like sload but it runs too.) 207 236.02 T
3 F
(sloop \050COMMAND\051) 72 216.02 T
1 F
(Performs a \324scope loop of the following single COMMAND. Sloop runs) 207 190.02 T
(the speci\336ed command until a key is pressed.) 207 176.02 T
3 F
(loop TIMES \050COMMAND\051) 72 156.02 T
1 F
(Performs a nonzero number of iterations of COMMAND, which can be) 207 130.02 T
(any legal command or semicolon separated series of commands.) 207 116.02 T
3 F
(mem ST) 72 96.02 T
(AR) 116.42 96.02 T
(T END) 132.87 96.02 T
FMENDPAGE
%%EndPage: "17" 20
%%Page: "18" 20
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(POD Mode) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 18) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
1 F
0 X
(Performs a memory test starting with address ST) 189 678.02 T
(AR) 422.22 678.02 T
(T) 438.16 678.02 T
(. END is the \336rst) 444.6 678.02 T
(address not tested. Now if you specify an address with the high bit unset,) 189 664.02 T
( POD ors in 0xa0000000. No more TLB misses.) 189 650.02 T
3 F
(scache ITER DE) 54 630.02 T
1 F
-0.4 (Performs ITER iterations of a basic secondary cache test with the r4000\325) 189 604.02 P
-0.4 (s) 532.73 604.02 P
(DE bit set to the value provided.) 189 590.02 T
3 F
(dmc SLOT) 54 570.02 T
1 F
(Displays the memory board con\336guration for the board in the speci\336ed) 189 544.02 T
(slot.) 189 530.02 T
3 F
(dio SLOT) 54 510.02 T
1 F
(Displays the IO4 board con\336guration for the board in the speci\336ed slot) 189 484.02 T
3 F
(devc SLOT | all) 54 464.02 T
1 F
(Display the \322evcon\336g\323 structure entry for this slot or all slots. This struc-) 189 438.02 T
(ture contains what the prom believes to be in that slot and its current sta-) 189 424.02 T
(tus. Now) 189 410.02 T
(, it also displays total memory and the current debug switch) 231.53 410.02 T
(settings as well as strings explaining \322diagvals\323 and prom revision num-) 189 396.02 T
(bers. This command will not work without working memory) 189 382.02 T
(.) 479.05 382.02 T
3 F
(disable SLOT UNIT) 54 362.02 T
1 F
(Disables UNIT of the board in SLOT \050see enable\051.) 189 336.02 T
3 F
(fdisable SLOT UNIT) 54 316.02 T
1 F
(Forcibly disable a unit. For CPUs, this means writing the A chip enable) 189 290.02 T
(register) 189 276.02 T
(. For memory and IO adapters, it means removing the unit from) 224.31 276.02 T
(the evcon\336g structure.) 189 262.02 T
3 F
(enable SLOT UNIT) 54 242.02 T
1 F
-0.48 (Enable UNIT of the board in the SLOT speci\336ed. This command changes) 189 216.02 P
(the \322enable\323 \336eld of the evcon\336g structure for the chosen UNIT) 189 202.02 T
(.) 494.53 202.02 T
3 F
(fenable SLOT UNIT) 54 182.02 T
1 F
(Forcibly enable a unit. For CPUs, this means writing the A chip enable) 189 156.02 T
(register) 189 142.02 T
(. For memory and IO adapters, it means forcing the correct value) 224.31 142.02 T
(to be stored in the evcon\336g structure) 189 128.02 T
3 F
(reconf) 54 108.02 T
FMENDPAGE
%%EndPage: "18" 21
%%Page: "19" 21
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Basic Information) 72 734.18 T
3 10 Q
(Page 19) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 F
0 X
(Recon\336gure memory using the currently enabled banks.) 207 678.02 T
3 F
(bist) 72 658.02 T
1 F
(Run the memory Built-In Self-T) 207 632.02 T
(est on all memory boards.) 361.4 632.02 T
3 F
(ecc) 72 612.02 T
1 F
-0.21 (Decode the information in the Cache_error register after a cache error ex-) 207 586.02 P
(ception.) 207 572.02 T
3 F
(si SLOT CPU L) 72 552.02 T
(VL) 153.09 552.02 T
1 F
-0.24 (Send a level L) 207 526.02 P
-0.24 (VL interrupt to the processor in the speci\336ed slot and slice.) 274.14 526.02 P
3 F
(td P) 72 506.02 T
(ARM) 92.45 506.02 T
1 F
(Displays the speci\336ed TLB entry) 207 480.02 T
(. \322lo\323 and \322hi\323 display the low and high) 364.79 480.02 T
(halves of the TLB to make the output \336t on a 24-line terminal. \322all\323 dis-) 207 466.02 T
(plays the entire TLB.) 207 452.02 T
3 F
(clear) 72 432.02 T
1 F
-0.16 (Clears MC3, IO4, and CC chip error registers. CC chip errors are printed) 207 406.02 P
(before each prompt until cleared with this command.) 207 392.02 T
3 F
(decode) 72 372.02 T
1 F
(Displays the memory slot and bank number a given physical address be-) 207 346.02 T
(longs to. It accepts up to just under 4 gigabyte addresses.) 207 332.02 T
3 F
(walk LO HI CONT) 72 312.02 T
1 F
(Nondestructively walks a bit through every word of the address range) 207 286.02 T
(speci\336ed with HI being the \336rst address not tested.) 207 272.02 T
-0.33 (CONT indicates whether to continue after failures \0501 = continue, 0 = stop) 207 246.02 P
(on errors\051.) 207 232.02 T
3 F
(slave) 72 212.02 T
1 F
(Causes this processor to enter slave mode.) 207 186.02 T
3 F
(wx BLOC OFF V) 72 166.02 T
(AL) 160.41 166.02 T
1 F
(W) 207 140.02 T
(rite V) 217.84 140.02 T
(AL to the address created by adding the) 243.94 140.02 T
( value of OFF to the val-) 437.79 140.02 T
(ue of BLOC multiplied by 256. This command uses R4000 64-bit ad-) 207 126.02 T
(dressing to allow uncached access to all of memory) 207 112.02 T
(.) 453.37 112.02 T
3 F
(dx BLOC OFF) 72 92.02 T
FMENDPAGE
%%EndPage: "19" 22
%%Page: "20" 22
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(POD Mode) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 20) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
1 F
0 X
(Prints the value contained in the address created) 189 678.02 T
( by combining BLOC) 422.82 678.02 T
(and OFF as above.) 189 664.02 T
3 F
(io) 54 644.02 T
1 F
(Load and executes the IO4 prom on the master IO4 board.) 189 618.02 T
3 F
(why) 54 598.02 T
1 F
(Print a string explaining why we entered POD mode.) 189 572.02 T
3 F
(niblet SET) 54 552.02 T
1 F
(Run the speci\336ed set of Niblet tests \050see the NIblet chapter\051. The usual) 189 526.02 T
-0.22 (test sets are numbered 0-9. There is also a special SET called \322all\323 which) 189 512.02 P
(runs tests 0 - 9 sequentially) 189 498.02 T
(, printing a summary at the end.) 319.14 498.02 T
3 F
(gm) 54 478.02 T
1 F
(Go to memory mode. This moves the POD stack into cached memory in-) 189 452.02 T
(stead of an \322isolated\323 primary data cache.) 189 438.02 T
(Niblet requires this. Moving the stack to memory changes the prompt to) 189 412.02 T
(\322Mem xx/xx>\323) 189 398.02 T
3 F
( select SLICE) 54 378.02 T
1 F
-0.42 (When the system is in \322manu-mode,\323 all processors on the board selected) 189 352.02 P
(by the system controller receive any input intended for the selected pro-) 189 338.02 T
(cessor) 189 324.02 T
(. This is due to a design limitation of the IP19. This results in four) 218.31 324.02 T
(processors executing any command intended for just one. POD handles) 189 310.02 T
(this by providing the select command. Select allows the user to select a) 189 296.02 T
(\322slice\323 which will be able to answer commands. All other CPUs on the) 189 282.02 T
(board will be temporarily disabled until the next select. Selecting slice) 189 268.02 T
(0xf) 189 254.02 T
(f disables selection and allows all CPUs to respond to input.) 204.77 254.02 T
3 F
(help) 54 234.02 T
(?) 54 216.02 T
1 F
(Display the list of commands.) 189 190.02 T
54 164.05 540 178.02 C
52.5 170.54 540.75 171.27 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "20" 23
%%Page: "21" 23
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Introduction) 72 734.18 T
3 10 Q
(Page 21) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 5) 72 670.02 S
1 24 Q
-0.48 (Niblet) 207 670.02 S
72 336.99 558 340.02 C
207 338.5 558 338.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 338.5 198 338.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(5.1) 178.01 345.35 T
(Intr) 207 345.35 T
(oduction) 234.25 345.35 T
1 12 Q
(Niblet is a very small, symmetric multiprocessing kernel with separate) 207 314.99 T
(virtual address spaces for its processes. It was originally intended as a) 207 300.99 T
(veri\336cation tool, but we have found it useful for testing new boards as) 207 286.99 T
-0.26 (well. Eventually) 207 272.99 P
-0.26 (, it will be called automatically from the IO4 prom, but it) 284.58 272.99 P
(is also available from the POD prompt in the IP19 prom.) 207 258.99 T
(NOTE: Niblet may not run as intended if the various processors on the) 207 232.99 T
(system are running dif) 207 218.99 T
(ferent versions of the IP19 prom. Y) 314.38 218.99 T
(ou\325re okay if) 483.39 218.99 T
(the processors launch successfully) 207 204.99 T
(.) 371.09 204.99 T
72 156.97 558 159.99 C
207 158.48 558 158.48 2 L
0.25 H
2 Z
0 X
0 K
N
72 158.48 198 158.48 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(5.2) 178.01 165.33 T
(Niblet T) 207 165.33 T
(ests) 261.95 165.33 T
1 12 Q
(The various tests available from the \322niblet n\323 command are really com-) 207 134.97 T
(binations of niblet tests. That\325) 207 120.97 T
(s why Niblet reports \322Supertest passed\323) 349.92 120.97 T
(and \322Supertest F) 207 106.97 T
(AILED.\323 A list of the basic Niblet tests and a table of) 286.06 106.97 T
(which tests are contained in each supertest follows.) 207 92.97 T
FMENDPAGE
%%EndPage: "21" 24
%%Page: "22" 24
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Niblet) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 22) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
54 672.98 540 686.02 C
189 680.04 540 680.04 2 L
0.25 H
2 Z
0 X
0 K
N
54 680.04 180 680.04 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 54 664.98 T
(able  3) 60.44 664.98 T
3 F
(Basic Niblet T) 198 664.98 T
(ests) 270.64 664.98 T
(INV) 54 646.98 T
(ALID:) 73.11 646.98 T
1 F
(Invalidates random TLB entries to cause more varied interactions.) 189 620.98 T
3 F
(COUNTER:) 54 600.98 T
1 F
(Just runs until a certain instruction count is reached and passes. The) 189 574.98 T
(count is proportional to the niblet process ID.) 189 560.98 T
3 F
(MPMON:) 54 540.98 T
1 F
(T) 189 514.98 T
(est monotonicity of Everest reads and writes.) 195.49 514.98 T
3 F
(MPINT) 54 494.98 T
(ADD:) 90.42 494.98 T
1 F
-0.29 (T) 189 468.98 P
-0.29 (wo processors add values to a common variable, hit a barrier) 195.49 468.98 P
-0.29 (, and check) 483.58 468.98 P
(the \336nal sum.) 189 454.98 T
3 F
(MPINT) 54 434.98 T
(ADD_4:) 90.42 434.98 T
1 F
(Four processor version of MPINT) 189 408.98 T
(ADD.) 351.26 408.98 T
3 F
(MPSLOCK:) 54 388.98 T
1 F
(A software locking protocol test.) 189 362.98 T
3 F
(MPHLOCK:) 54 342.98 T
1 F
(T) 189 316.98 T
(ests load-linked and store-conditional by grabbing a lock, storing a pro-) 195.49 316.98 T
-0.29 (cess ID into a protected location, waiting for a delay to expire, and check-) 189 302.98 P
(ing that the correct process ID is still there. Multiple processors try this) 189 288.98 T
(so a failure should result in a CPU reading the wrong PID.) 189 274.98 T
3 F
(MEMTEST) 54 254.98 T
(:) 111.31 254.98 T
1 F
(T) 189 228.98 T
(ests a range of memory by writing a value based on a process ID to a) 195.49 228.98 T
(range of memory and then checking it. This version\325) 189 214.98 T
(s range is small) 440.49 214.98 T
(enough to \336t in a secondary cache.) 189 200.98 T
3 F
(BIGMEM:) 54 180.98 T
1 F
(Same as above but the set is lar) 189 154.98 T
(ger than one megabyte.) 339.01 154.98 T
3 F
(PRINTTEST) 54 134.98 T
(:) 119.3 134.98 T
1 F
(T) 189 108.98 T
(ests Niblet context-switching. Runs very quickly) 195.49 108.98 T
(. Mostly a sanity test.) 428.57 108.98 T
FMENDPAGE
%%EndPage: "22" 25
%%Page: "23" 25
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Niblet T) 72 734.18 T
(ests) 111.99 734.18 T
3 10 Q
(Page 23) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
0 X
(BIGINT) 72 678.02 T
(ADD_4:) 111.1 678.02 T
1 F
(Same as MPINT) 207 652.02 T
(ADD_4 but runs for many) 285.99 652.02 T
(, many iterations.) 411.79 652.02 T
3 F
(BIGROVE:) 72 632.02 T
1 F
(A roving producer) 207 606.02 T
(-consumer test that runs for many) 295.36 606.02 T
(, many iterations.) 456.13 606.02 T
3 F
(BIGHLOCK:) 72 586.02 T
1 F
(Same as MPHLOCK but runs for many) 207 560.02 T
(, many iterations.) 396.1 560.02 T
72 534.05 558 548.02 C
70.5 540.54 558.75 541.27 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
3 12 Q
0 X
0 K
(Niblet \322Supertests\323 are listed in the table below) 72 508.05 T
(. \050Only supertests 0-9 are useful without a) 319.3 508.05 T
(connection to the system controller UAR) 72 494.05 T
(T) 285.75 494.05 T
(.\051) 291.74 494.05 T
72 471.02 558 484.05 C
207 478.07 558 478.07 2 L
0.25 H
2 Z
0 X
0 K
N
72 478.07 198 478.07 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 72 463.02 T
(able  4) 78.44 463.02 T
3 F
(Supertests) 216 463.02 T
(niblet 0:) 72 445.02 T
1 F
(Runs one copy of the \322INV) 207 419.02 T
(ALID\323 process. Should always pass almost) 337.02 419.02 T
(immediately) 207 405.02 T
(.) 266.19 405.02 T
3 F
(niblet 1:) 72 385.02 T
1 F
(Runs {INV) 207 359.02 T
(ALID, COUNTER, COUNTER}. T) 260.18 359.02 T
(akes some time. One pro-) 432.32 359.02 T
(cess will \336nish in about half the time that the other two take.) 207 345.02 T
3 F
(niblet 2:) 72 325.02 T
1 F
-0.13 (Runs {MPMON, MPMON}. T) 207 299.02 P
-0.13 (akes disproportionately longer on a single) 354.89 299.02 P
(processor than on an MP machine.) 207 285.02 T
3 F
(niblet 3:) 72 265.02 T
1 F
-0.16 (Runs {MPINT) 207 239.02 P
-0.16 (ADD, INV) 276.6 239.02 P
-0.16 (ALID, MPINT) 328.18 239.02 P
-0.16 (ADD}. T) 399.01 239.02 P
-0.16 (akes disproportionately) 443.07 239.02 P
(longer on a single processor than on an MP machine.) 207 225.02 T
3 F
(niblet 4:) 72 205.02 T
1 F
(Runs {MPSLOCK, MPSLOCK, INV) 207 179.02 T
(ALID}.) 385.46 179.02 T
3 F
(niblet 5:) 72 159.02 T
1 F
(Runs {MPROVE, MPSLOCK, MPROVE, MPSLOCK, INV) 207 133.02 T
(ALID}.) 497.41 133.02 T
3 F
(niblet 6:) 72 113.02 T
FMENDPAGE
%%EndPage: "23" 26
%%Page: "24" 26
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Niblet) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 24) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
1 F
0 X
-0.18 (Runs {MPSLOCK, MPMON, INV) 189 678.02 P
-0.18 (ALID, MPSLOCK, MPMON}. T) 355.58 678.02 P
-0.18 (akes) 515.87 678.02 P
(disproportionately longer on a single processor than on an MP machine.) 189 664.02 T
3 F
(niblet 7:) 54 644.02 T
1 F
(Runs {MPROVE, MPROVE}.) 189 618.02 T
3 F
(niblet 8:) 54 598.02 T
1 F
(Runs {INV) 189 572.02 T
(ALID, MPMON, MPMON, MPROVE, MPROVE,) 242.18 572.02 T
(MPROVE, MPINT) 189 558.02 T
(ADD, MPINT) 281.33 558.02 T
(ADD, MPHLOCK, MPHLOCK} for a) 349.65 558.02 T
(total of 10 processes. niblet 9: Runs {MPINT) 189 544.02 T
(ADD_4, MPINT) 405.67 544.02 T
(ADD_4,) 485.99 544.02 T
(MPINT) 189 530.02 T
(ADD_4, MPINT) 225.35 530.02 T
(ADD_4, INV) 305.67 530.02 T
(ALID, MPROVE, MPROVE,) 369.4 530.02 T
-0.13 (MPROVE, MPHLOCK, MPHLOCK, MPSLOCK, MPSLOCK} for a to-) 189 516.02 P
(tal of 12 processes.) 189 502.02 T
3 F
(niblet a:) 54 482.02 T
1 F
-0.19 (Runs {MEMTEST) 189 456.02 P
-0.19 (, MEMTEST) 278.64 456.02 P
-0.19 (, MEMTEST) 340.87 456.02 P
-0.19 (, MEMTEST) 403.1 456.02 P
-0.19 (, MEMTEST}.) 465.32 456.02 P
(This test is designed as an overnight test. It will take hours to complete.) 189 442.02 T
3 F
(niblet b:) 54 422.02 T
1 F
(Runs {BIGMEM, BIGMEM, BIGMEM, INV) 189 396.02 T
(ALID, INV) 408.08 396.02 T
(ALID, IN-) 462.49 396.02 T
(V) 189 382.02 T
(ALID} for a total of 6 processes. It too, takes hours to complete the) 196.11 382.02 T
(memory tests, but the supertest will never complete since there are three) 189 368.02 T
(INV) 189 354.02 T
(ALID processes. They exit when they are the last process on the sys-) 208.76 354.02 T
(tem.) 189 340.02 T
3 F
(niblet c:) 54 320.02 T
1 F
(Runs {PRINTTEST) 189 294.02 T
(, PRINTTEST) 284.83 294.02 T
(, PRINTTEST) 353.24 294.02 T
(, PRINTTEST) 421.65 294.02 T
(, PRINT-) 490.06 294.02 T
(TEST) 189 280.02 T
(, PRINTTEST) 216.76 280.02 T
(, PRINTTEST) 285.17 280.02 T
(, PRINTTEST) 353.59 280.02 T
(, PRINTTEST) 422 280.02 T
(, PRINT-) 490.41 280.02 T
(TEST) 189 266.02 T
(, PRINTTEST) 216.76 266.02 T
(, PRINTTEST) 285.17 266.02 T
(, PRINTTEST) 353.59 266.02 T
(, PRINTTEST} This is) 422 266.02 T
(really a Niblet sanity test) 189 252.02 T
(\050as is niblet 0\051.) 311.92 252.02 T
3 F
(niblet d:) 54 232.02 T
1 F
(This is the big MP stress test. It runs {BIGINT) 189 206.02 T
(ADD_4, BIGINT) 412.34 206.02 T
(ADD_4,) 495.98 206.02 T
(BIGINT) 189 192.02 T
(ADD_4, BIGINT) 228.67 192.02 T
(ADD_4, INV) 312.32 192.02 T
(ALID, BIGROVE, BIGROVE,) 376.05 192.02 T
(BIGROVE, BIGHLOCK, BIGHLOCK, BIGMEM, BIGMEM, BIG-) 189 178.02 T
-0.33 (MEM, INV) 189 164.02 P
-0.33 (ALID}. This test runs 14 processes for a number of hours. It\325) 243.08 164.02 P
-0.33 (s) 532.67 164.02 P
(intended as an overnight \050or other long period of time\051 MP stress test.) 189 150.02 T
FMENDPAGE
%%EndPage: "24" 27
%%Page: "25" 27
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Niblet Operations) 72 734.18 T
3 10 Q
(Page 25) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
72 666.99 558 670.02 C
207 668.5 558 668.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 668.5 198 668.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(5.3) 178.01 675.35 T
(Niblet Operations) 207 675.35 T
1 12 Q
-0.19 (NOTE: Niblet displays all of its output \050with the exception of the \336nal re-) 207 644.99 P
(sult\051 to the CC UAR) 207 630.99 T
(T so it\325) 304.9 630.99 T
(s only visible in \322manu-mode\323 or \322no boot) 338.89 630.99 T
(master arbitration\323 mode.) 207 616.99 T
4 14 Q
(5.3.1) 170.01 583.66 T
(Number of CPUS to include:) 207 583.66 T
1 12 Q
( Niblet attempts to run its tests on all processors that were present when) 207 556.99 T
(the PROM set up the machine. That means that if a processor has been) 207 542.99 T
(forced into POD mode by pressing control-P) 207 528.99 T
(, that processor will be in-) 420.2 528.99 T
(cluded in Niblet\325) 207 514.99 T
(s processor count and niblet will never pass its \336rst bar-) 287.62 514.99 T
(rier) 207 500.99 T
(. The timeout code hasn\325) 222.99 500.99 T
(t been implemented yet so this results in a) 341.69 500.99 T
(hung system. A processor can be forced back into slave mode by typing) 207 486.99 T
(the POD \322slave\323 command.) 207 472.99 T
-0.01 (Niblet is limited to 15 CPUs at a time. The user can control which CPUs) 207 446.99 P
(run niblet with the enable and disable commands.) 207 432.99 T
4 14 Q
(5.3.2) 170.01 399.66 T
(Scheduling and pr) 207 399.66 T
(ocess migration:) 316.39 399.66 T
1 12 Q
(As long as there are more processes than processors, Niblet processes) 207 372.99 T
-0.25 (will migrate. This is the reason that there are three copies of INV) 207 358.99 P
-0.25 (ALID in) 514.53 358.99 P
(\322niblet b.\323 As long as that test is run on fewer than six processors, tests) 207 344.99 T
-0.25 (will migrate eventually) 207 330.99 P
-0.25 (. The timing has to be right, though. On fewer pro-) 316.99 330.99 P
(cessors, tests will migrate more often.) 207 316.99 T
(If there are ever more processors than processes, one or more processors) 207 290.99 T
-0.19 (will go into a loop waiting for the supertest to complete. Y) 207 276.99 P
-0.19 (ou can tell that) 484.83 276.99 P
(processors are in this state because they will print, \322No processes left to) 207 262.99 T
(run - twiddling.\323) 207 248.99 T
4 14 Q
(5.3.3) 170.01 215.66 T
(T) 207 215.66 T
(est completion:) 215.05 215.66 T
1 12 Q
(Since Niblet is intended to run with one UAR) 207 188.99 T
(T per processor) 425.48 188.99 T
(, it only) 499.6 188.99 T
(prints failure messages to the processor on which a test fails. The proces-) 207 174.99 T
(sor hosting the failing process will print all pertinent information and) 207 160.99 T
(then send an interrupt to the other processors. This means that the other) 207 146.99 T
(processors will only say) 207 132.99 T
(, \322Niblet F) 321.81 132.99 T
(AILED on an interrupt.\323 The real) 371.9 132.99 T
-0.05 (cause of the failure is available on the processor where it happened. This) 207 118.99 P
(is particularly important with a Niblet failure due to a nonzero ER) 207 104.99 T
(T) 523.06 104.99 T
(OIP) 530.17 104.99 T
FMENDPAGE
%%EndPage: "25" 28
%%Page: "26" 28
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Niblet) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 26) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
1 F
0 X
(register since it can only be read by the processor on which the error oc-) 189 678.02 T
(curred. That processor will print, \322ER) 189 664.02 T
(T) 369.81 664.02 T
(OIP is nonzero! \050ER) 376.92 664.02 T
(T) 474.47 664.02 T
(OIP) 481.58 664.02 T
(,) 499.57 664.02 T
(CAUSE, EPC\051\323 followed by the values of ER) 189 650.02 T
(T) 408.14 650.02 T
(OIP) 415.26 650.02 T
(, CAUSE, and EPC.) 433.25 650.02 T
(The master processor will always complete with a message of the form,) 189 624.02 T
(\322Supertest P) 189 610.02 T
(ASSED/F) 247.53 610.02 T
(AILED\323 followed by \322Niblet Complete.\323) 294.63 610.02 T
(None of the 13 Niblet tests in the IP19 prom should ever print a \322Supert-) 189 584.02 T
(est F) 189 570.02 T
(AILED.\323 message under normal circumstances.) 211.1 570.02 T
(NOTE: Running a test in manufacturing mode yields more information) 189 544.02 T
(as processors print to their local UAR) 189 530.02 T
(TS. In \322manumode\323 you can selec-) 369.49 530.02 T
(tively watch CPUs.) 189 516.02 T
FMENDPAGE
%%EndPage: "26" 29
%%Page: "27" 29
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Introduction) 72 734.18 T
3 10 Q
(Page 27) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 6) 72 670.02 S
1 24 Q
-0.48 (PROM LEDS Decoded) 207 670.02 S
72 336.99 558 340.02 C
207 338.5 558 338.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 338.5 198 338.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(6.1) 178.01 345.35 T
(Intr) 207 345.35 T
(oduction) 234.25 345.35 T
1 12 Q
(The values that follow are for the PROM LEDs that I mentioned above.) 207 314.99 T
(If you see a constant value displayed on the LEDs, convert the binary) 207 288.99 T
(into a decimal number and look it up in the following list under) 207 274.99 T
(PLED_xxx. Flashing values should appear under FLED_xxx.) 207 260.99 T
(There are a couple of modes in addition to the constant and single-\337ash-) 207 234.99 T
-0.24 (ing-value modes. When a processor is in the IP19 slave loop, it cycles be-) 207 220.99 P
-0.06 (tween values decoding to decimal 9 and 6. The master processor in POD) 207 206.99 P
(mode cycles between 1 and 2 when it\325) 207 192.99 T
(s using the UAR) 389.86 192.99 T
(T on the CC chip.) 468.77 192.99 T
(On the EPC UAR) 207 178.99 T
(T) 291.9 178.99 T
(, it displays a constant value.) 298.34 178.99 T
72 153.96 558 166.99 C
207 161.02 558 161.02 2 L
0.25 H
2 Z
0 X
0 K
N
72 161.02 198 161.02 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(Figure  1) 72 145.96 T
3 F
(Slave mode \050\336ve vertical slices are shown. The topmost LED is) 216 145.96 T
FMENDPAGE
%%EndPage: "27" 30
%%Page: "28" 30
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM LEDS Decoded) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 28) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
0 X
(most signi\336cant\051:) 54 678.02 T
3 10 Q
4 K
(0) 216 663.35 T
(0) 234 663.35 T
(0) 252 663.35 T
(0) 270 663.35 T
(0) 288 663.35 T
(0) 216 649.35 T
(0) 234 649.35 T
(0) 252 649.35 T
(0) 270 649.35 T
(0) 288 649.35 T
(1) 216 635.35 T
(0) 234 635.35 T
(1) 252 635.35 T
(0) 270 635.35 T
(1) 288 635.35 T
(etc.) 324 635.35 T
(0) 216 621.35 T
(1) 234 621.35 T
(0) 252 621.35 T
(1) 270 621.35 T
(0) 288 621.35 T
(0) 216 607.35 T
(1) 234 607.35 T
(0) 252 607.35 T
(1) 270 607.35 T
(0) 288 607.35 T
(1) 216 593.35 T
(0) 234 593.35 T
(1) 252 593.35 T
(0) 270 593.35 T
(1) 288 593.35 T
( T) 234 579.35 T
(ime ->) 242.51 579.35 T
54 556.98 540 570.02 C
189 564.04 540 564.04 2 L
0.25 H
2 Z
0 X
0 K
N
54 564.04 180 564.04 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(Figure  2) 54 548.98 T
3 F
(Master mode on CC UAR) 198 548.98 T
(T) 333.74 548.98 T
(:) 339.74 548.98 T
3 10 Q
4 K
(0) 216 534.32 T
(0) 234 534.32 T
(0) 252 534.32 T
(0) 270 534.32 T
(0) 288 534.32 T
(0) 216 520.32 T
(0) 234 520.32 T
(0) 252 520.32 T
(0) 270 520.32 T
(0) 288 520.32 T
(0) 216 506.32 T
(0) 234 506.32 T
(0) 252 506.32 T
(0) 270 506.32 T
(0) 288 506.32 T
(etc.) 306 506.32 T
(0) 216 492.32 T
(0) 234 492.32 T
(0) 252 492.32 T
(0) 270 492.32 T
(0) 288 492.32 T
(0) 216 478.32 T
(1) 234 478.32 T
(0) 252 478.32 T
(1) 270 478.32 T
(0) 288 478.32 T
(1) 216 464.32 T
(0) 234 464.32 T
(1) 252 464.32 T
(0) 270 464.32 T
(1) 288 464.32 T
( T) 234 450.32 T
(ime ->) 242.51 450.32 T
1 12 Q
0 K
-0.06 (The following comes straight from a PROM header \336le so it\325) 189 424.98 P
-0.06 (s somewhat) 480.83 424.98 P
(raw) 189 410.98 T
(. Note that the most signi\336cant bit of an LED value is the top LED) 206.2 410.98 T
54 385.95 540 398.98 C
189 393.01 540 393.01 2 L
0.25 H
2 Z
0 X
0 K
N
54 393.01 180 393.01 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 54 377.95 T
(able  5) 60.44 377.95 T
3 F
(PROM LED de\336nitions.) 198 377.95 T
(PLED_CLEAR) 54 359.95 T
(T) 131.76 359.95 T
(AGS) 138.21 359.95 T
(1) 198 359.95 T
(\050000001\051) 234 359.95 T
(Clearing the primary data cache tags) 306 359.95 T
(PLED_CKCCLOCAL) 54 341.95 T
(2) 198 341.95 T
(\050000010\051) 234 341.95 T
(T) 306 341.95 T
(esting CC chip local registers) 312 341.95 T
(PLED_CCL_FINITUAR) 54 323.95 T
(T) 177.74 323.95 T
(3) 198 323.95 T
(\05000001) 234 323.95 T
(1\051) 270.45 323.95 T
(Failed the local test but trying to initialize) 306 323.95 T
(the UAR) 306 305.95 T
(T anyway) 351.11 305.95 T
(PLED_CCINIT1) 54 287.95 T
(4) 198 287.95 T
(\050000100\051) 234 287.95 T
(Initializing the CC chip local registers) 306 287.95 T
(PLED_CKCCCONFIG) 54 269.95 T
(5) 198 269.95 T
(\050000101\051) 234 269.95 T
(T) 306 269.95 T
(esting the CC chip con\336g registers) 312 269.95 T
(\050requires a usable bus to pass\051) 306 251.95 T
(NOTE: Hanging in this test usually means) 306 233.95 T
(that the bus clock has failed. Check the) 306 215.95 T
(oscillator) 306 197.95 T
(.) 352.65 197.95 T
(PLED_CCC_FINITUAR) 54 179.95 T
(T) 179.73 179.95 T
(6) 198 179.95 T
(\0500001) 234 179.95 T
(10\051) 263.78 179.95 T
(Failed the con\336g register test but trying to) 306 179.95 T
(initialize the UAR) 306 161.95 T
(T anyway) 397.09 161.95 T
(PLED_NOCLK_INITUAR) 54 143.95 T
(T) 187.74 143.95 T
(7) 198 143.95 T
(\0500001) 234 143.95 T
(1) 263.78 143.95 T
(1\051) 269.56 143.95 T
(CC clock isn\325t running but initialize the) 306 143.95 T
(UAR) 306 125.95 T
(T anyway) 331.1 125.95 T
(PLED_CCINIT2) 54 107.95 T
(8) 198 107.95 T
(\050001000\051) 234 107.95 T
(Initializing the CC chip con\336g registers) 306 107.95 T
FMENDPAGE
%%EndPage: "28" 31
%%Page: "29" 31
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Introduction) 72 734.18 T
3 10 Q
(Page 29) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
0 X
(PLED_UAR) 72 678.02 T
(TINIT) 135.1 678.02 T
(9) 216 678.02 T
(\050001001\051) 252 678.02 T
(Initializing the CC chip UAR) 324 678.02 T
(T) 471.08 678.02 T
(.) 477.07 678.02 T
(NOTE: Hanging in this test usually means) 324 660.02 T
(that the UAR) 324 642.02 T
(T clock is bad. Check the) 392.45 642.02 T
(connection to the system controller) 324 624.02 T
(.) 508.65 624.02 T
(PLED_CCUAR) 72 606.02 T
(TDONE) 152.42 606.02 T
(10) 216 606.02 T
(\050001010\051) 252 606.02 T
(Finished initializing the CC chip UAR) 324 606.02 T
(T) 519.06 606.02 T
(PLED_CKACHIP) 72 588.02 T
(1) 216 588.02 T
(1) 221.78 588.02 T
(\05000101) 252 588.02 T
(1\051) 288.45 588.02 T
(T) 324 588.02 T
(esting the A chip registers) 330 588.02 T
(PLED_AINIT) 72 570.02 T
(12) 216 570.02 T
(\050001) 252 570.02 T
(100\051) 275.11 570.02 T
(Initializing the A chip) 324 570.02 T
(PLED_CKEBUS1) 72 552.02 T
(13) 216 552.02 T
(\050001) 252 552.02 T
(101\051) 275.11 552.02 T
(Checking the EBus with interrupts.) 324 552.02 T
(PLED_SCINIT) 72 534.02 T
(14) 216 534.02 T
(\050001) 252 534.02 T
(1) 275.11 534.02 T
(10\051) 280.89 534.02 T
(Initializing the system controller) 324 534.02 T
(PLED_BMARB) 72 516.02 T
(15) 216 516.02 T
(\050001) 252 516.02 T
(1) 275.11 516.02 T
(1) 280.89 516.02 T
(1\051) 286.67 516.02 T
(Arbitrating for a bootmaster) 324 516.02 T
(PLED_BMASTER) 72 498.02 T
(16) 216 498.02 T
(\050010000\051) 252 498.02 T
(This processor is the bootmaster) 324 498.02 T
(PLED_CKEBUS2) 72 480.02 T
(17) 216 480.02 T
(\050010001\051) 252 480.02 T
-0.33 (In second EBus test. Run only by the master) 324 480.02 P
(PLED_POD) 72 462.02 T
(18) 216 462.02 T
(\050010010\051) 252 462.02 T
(Setting up this CPU slice for POD mode) 324 462.02 T
(PLED_PODLOOP) 72 444.02 T
(19) 216 444.02 T
(\05001001) 252 444.02 T
(1\051) 288.45 444.02 T
( Entering POD loop) 324 444.02 T
(PLED_CKPDCACHE1) 72 426.02 T
(20) 216 426.02 T
(\050010100\051) 252 426.02 T
(Checking the primary data cache) 324 426.02 T
(PLED_MAKEST) 72 408.02 T
(ACK) 158.42 408.02 T
(21) 216 408.02 T
(\050010101\051) 252 408.02 T
(Creating a stack in the primary data cache) 324 408.02 T
(PLED_MAIN) 72 390.02 T
(22) 216 390.02 T
(\0500101) 252 390.02 T
(10\051) 281.78 390.02 T
(Jumping into C code - calling main\050\051) 324 390.02 T
(PLED_CKIAID) 72 372.02 T
(23) 216 372.02 T
(\0500101) 252 372.02 T
(1) 281.78 372.02 T
(1\051) 287.56 372.02 T
(Check IA and ID chips on master IO4) 324 372.02 T
(PLED_CKEPC) 72 354.02 T
(24) 216 354.02 T
(\05001) 252 354.02 T
(1000\051) 268.44 354.02 T
(Check EPC chip on master IO4) 324 354.02 T
(PLED_IO4INIT) 72 336.02 T
(25) 216 336.02 T
(\05001) 252 336.02 T
(1001\051) 268.44 336.02 T
(Initializing the IO4 prom) 324 336.02 T
(PLED_NVRAM) 72 318.02 T
(26) 216 318.02 T
(\05001) 252 318.02 T
(1010\051) 268.44 318.02 T
(Getting NVRAM variables) 324 318.02 T
(PLED_FINDCONS) 72 300.02 T
(27) 216 300.02 T
(\05001) 252 300.02 T
(101) 268.44 300.02 T
(1\051) 287.56 300.02 T
(Checking the path to the EPC chip which) 324 300.02 T
(will contain the console UAR) 324 282.02 T
(T) 475.75 282.02 T
(PLED_CKCONS) 72 264.02 T
(28) 216 264.02 T
(\05001) 252 264.02 T
(1) 268.44 264.02 T
(100\051) 274.22 264.02 T
(T) 324 264.02 T
(esting the console UAR) 330 264.02 T
(T) 455.1 264.02 T
(PLED_CONSINIT) 72 246.02 T
(29) 216 246.02 T
(\05001) 252 246.02 T
(1) 268.44 246.02 T
(101\051) 274.22 246.02 T
(Setting up the console UAR) 324 246.02 T
(T) 471.11 246.02 T
(.) 477.11 246.02 T
(PLED_CONFIGCPUS) 72 228.02 T
(30) 216 228.02 T
(\05001) 252 228.02 T
(1) 268.44 228.02 T
(1) 274.22 228.02 T
(10\051) 280.01 228.02 T
(Con\336guring out CPUs that are disabled) 324 228.02 T
(PLED_CKRA) 72 210.02 T
(WMEM) 142.87 210.02 T
(31) 216 210.02 T
(\05001) 252 210.02 T
(1) 268.44 210.02 T
(1) 274.22 210.02 T
(1) 280.01 210.02 T
(1\051) 285.79 210.02 T
(Checking out raw memory \050running BIST\051) 324 210.02 T
(PLED_CONFIGMEM) 72 192.02 T
(32) 216 192.02 T
(\050100000\051) 252 192.02 T
(Con\336guring memory) 324 192.02 T
(PLED_CKMEM) 72 174.02 T
(33) 216 174.02 T
(\050100001\051) 252 174.02 T
(Checking con\336gured memory) 324 174.02 T
(PLED_LOADPROM) 72 156.02 T
(34) 216 156.02 T
(\050100010\051) 252 156.02 T
(Loading IO4 prom) 324 156.02 T
(PLED_CKSCACHE1) 72 138.02 T
(35) 216 138.02 T
(\05010001) 252 138.02 T
(1\051) 288.45 138.02 T
(First pass of secondary cache testing -) 324 138.02 T
(test the scache as a RAM) 324 120.02 T
(PLED_CKPICACHE) 72 102.02 T
(36) 216 102.02 T
(\050100100\051) 252 102.02 T
(Check the primary instruction cache) 324 102.02 T
FMENDPAGE
%%EndPage: "29" 32
%%Page: "30" 32
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM LEDS Decoded) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 30) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
0 X
(PLED_CKPDCACHE2) 54 678.02 T
(37) 198 678.02 T
(\050100101\051) 234 678.02 T
(Check the primary data cache writeback) 306 678.02 T
(mechanism) 306 660.02 T
(PLED_CKSCACHE2) 54 642.02 T
(38) 198 642.02 T
(\0501001) 234 642.02 T
(10\051) 263.78 642.02 T
(Check the secondary cache writeback) 306 642.02 T
(mechanism) 306 624.02 T
(PLED_CKBT) 54 606.02 T
(39) 198 606.02 T
(\0501001) 234 606.02 T
(1) 263.78 606.02 T
(1\051) 269.56 606.02 T
(Check the bus tags) 306 606.02 T
(PLED_BTINIT) 54 588.02 T
(40) 198 588.02 T
(\050101000\051) 234 588.02 T
(Clear the bus tags) 306 588.02 T
(PLED_CKPROM) 54 570.02 T
(41) 198 570.02 T
(\050101001\051) 234 570.02 T
(Checksum the IO prom) 306 570.02 T
(PLED_INSLA) 54 552.02 T
(VE) 125.77 552.02 T
(42) 198 552.02 T
(\050101010\051) 234 552.02 T
(This CPU is entering slave mode) 306 552.02 T
(PLED_PROMJUMP) 54 534.02 T
(43) 198 534.02 T
(\05010101) 234 534.02 T
(1\051) 270.45 534.02 T
(Jumping to the IO prom) 306 534.02 T
(PLED_SLA) 54 516.02 T
(VEJUMP) 113.78 516.02 T
(44) 198 516.02 T
(\050101) 234 516.02 T
(100\051) 257.11 516.02 T
(A slave is jumping to the IO4 PROM slave) 306 516.02 T
(code) 306 498.02 T
(PLED_NMIJUMP) 54 480.02 T
(45) 198 480.02 T
(\050101) 234 480.02 T
(101\051) 257.11 480.02 T
(This CPU has jumped into the kernel\325) 306 480.02 T
(s) 503.75 480.02 T
(NMI handling code) 306 462.02 T
4 14 Q
(Failur) 54 414.68 T
(e mode LED values) 91.07 414.68 T
1 12 Q
(If the Power) 189 388.02 T
(-On Diagnostics \336nd an unrecoverable problem with the) 248.04 388.02 T
(hardware they will call the \337ash leds routine with one of the following) 189 374.02 T
-0.13 (values as an ar) 189 360.02 P
-0.13 (gument. There\325) 258.67 360.02 P
-0.13 (s one PLED LED setting hiding down here) 331.82 360.02 P
(because of an error made earlier) 189 346.02 T
(.) 342.52 346.02 T
3 F
(FLED_CANTSEEMEM) 54 300.02 T
(46) 198 300.02 T
(\050101) 234 300.02 T
(1) 257.11 300.02 T
(10\051) 262.89 300.02 T
(Flashed by slave processors if they take an) 306 300.02 T
(exception while trying to write their evcon\336g) 306 282.02 T
-0.31 (entries. Often means the processor) 306 264.02 P
-0.31 (\325) 492.53 264.02 P
-0.31 (s getting) 494.97 264.02 P
(D-chip parity errors) 306 246.02 T
(FLED_NOUAR) 54 228.02 T
(TCLK) 134.42 228.02 T
(47) 198 228.02 T
(\050101) 234 228.02 T
(1) 257.11 228.02 T
(1) 262.89 228.02 T
(1\051) 268.67 228.02 T
(The CC UAR) 306 228.02 T
(T clock is not running. No) 375.75 228.02 T
(system) 306 210.02 T
(controller access is possible) 306 192.02 T
(FLED_IMPOSSIBLE1) 54 174.02 T
(48) 198 174.02 T
(\0501) 234 174.02 T
(10000\051) 243.77 174.02 T
(W) 306 174.02 T
(e fell through one of the supposedly) 317.11 174.02 T
(unreturning subroutines. Really shouldn\325t be) 306 156.02 T
(possible.) 306 138.02 T
(FLED_DEADCOP1) 54 120.02 T
(49) 198 120.02 T
(\0501) 234 120.02 T
(10001\051) 243.77 120.02 T
(Coprocessor 1 is dead - not seeing this) 306 120.02 T
(doesn\325t mean it works correctly) 306 102.02 T
(.) 469.73 102.02 T
FMENDPAGE
%%EndPage: "30" 33
%%Page: "31" 33
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Introduction) 72 734.18 T
3 10 Q
(Page 31) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
0 X
(FLED_CCCLOCK) 72 678.02 T
(50) 216 678.02 T
(\0501) 252 678.02 T
(10010\051) 261.77 678.02 T
(The CC clock isn\325t running) 324 678.02 T
(FLED_CCLOCAL) 72 660.02 T
(51) 216 660.02 T
(\0501) 252 660.02 T
(1001) 261.77 660.02 T
(1\051) 287.56 660.02 T
(Failed CC local register tests) 324 660.02 T
(FLED_CCCONFIG) 72 642.02 T
(52) 216 642.02 T
(\0501) 252 642.02 T
(10100\051) 261.77 642.02 T
(Failed CC con\336g register tests) 324 642.02 T
(FLED_ACHIP) 72 624.02 T
(53) 216 624.02 T
(\0501) 252 624.02 T
(10101\051) 261.77 624.02 T
(Failed A Chip register tests) 324 624.02 T
(FLED_BROKEWB) 72 606.02 T
(54) 216 606.02 T
(\0501) 252 606.02 T
(101) 261.77 606.02 T
(10\051) 280.89 606.02 T
(By the time this CPU had arrived at the) 324 606.02 T
(bootmaster arbitration barrier) 324 588.02 T
(, the) 477.97 588.02 T
(rendezvous time had passed. This implies) 324 570.02 T
(that a CPU is running too slowly) 324 552.02 T
(, the ratio) 493.08 552.02 T
(of bus clock to CPU clock rate is too high,) 324 534.02 T
(or a bit in the CC clock is stuck on.) 324 516.02 T
(FLED_BADDCACHE) 72 498.02 T
(55) 216 498.02 T
(\0501) 252 498.02 T
(101) 261.77 498.02 T
(1) 280.89 498.02 T
(1\051) 286.67 498.02 T
(This CPU\325) 324 498.02 T
(s primary data cache test failed) 377.75 498.02 T
(FLED_BADIO4) 72 480.02 T
(56) 216 480.02 T
(\0501) 252 480.02 T
(1) 261.77 480.02 T
(1000\051) 267.55 480.02 T
(The IO4 board is bad - can\325t get to the) 324 480.02 T
(console) 324 462.02 T
4 14 Q
(Exception failur) 72 414.68 T
(e mode values \050except 59\051:) 168.53 414.68 T
3 12 Q
(FLED_UTLBMISS) 72 395.02 T
(57) 216 395.02 T
(\0501) 252 395.02 T
(1) 261.77 395.02 T
(1001\051) 267.55 395.02 T
(T) 324 395.02 T
(ook a TLB Re\336ll exception) 330 395.02 T
(FLED_XTLBMISS) 72 377.02 T
(58) 216 377.02 T
(\0501) 252 377.02 T
(1) 261.77 377.02 T
(1010\051) 267.55 377.02 T
(T) 324 377.02 T
(ook an extended TLB Re\336ll exception) 330 377.02 T
(PLED_WRCONFIG) 72 359.02 T
(59) 216 359.02 T
(\0501) 252 359.02 T
(1) 261.77 359.02 T
(101) 267.55 359.02 T
(1\051) 286.67 359.02 T
(W) 324 359.02 T
(riting evcon\336g structure:) 335.11 359.02 T
(The master CPU writes the whole array) 324 341.02 T
(.) 532.39 341.02 T
(The slaves only write their own entries.) 324 323.02 T
(FLED_GENERAL) 72 305.02 T
(60) 216 305.02 T
(\0501) 252 305.02 T
(1) 261.77 305.02 T
(1) 267.55 305.02 T
(100\051) 273.34 305.02 T
(T) 324 305.02 T
(ook a general exception) 330 305.02 T
(FLED_NOTIMPL) 72 287.02 T
(61) 216 287.02 T
(\0501) 252 287.02 T
(1) 261.77 287.02 T
(1) 267.55 287.02 T
(101\051) 273.34 287.02 T
(T) 324 287.02 T
(ook an unimplemented exception) 330 287.02 T
(FLED_ECC) 72 269.02 T
(62) 216 269.02 T
(\0501) 252 269.02 T
(1) 261.77 269.02 T
(1) 267.55 269.02 T
(1) 273.34 269.02 T
(10\051) 279.12 269.02 T
(T) 324 269.02 T
(ook a cache error exception) 330 269.02 T
(FLED_DISABLED) 72 251.02 T
(63) 216 251.02 T
(\0501) 252 251.02 T
(1) 261.77 251.02 T
(1) 267.55 251.02 T
(1) 273.34 251.02 T
(1) 279.12 251.02 T
(1\051) 284.9 251.02 T
(Disabled processors \337ash all of their LEDs) 324 251.02 T
FMENDPAGE
%%EndPage: "31" 34
%%Page: "32" 34
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM LEDS Decoded) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 32) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
FMENDPAGE
%%EndPage: "32" 35
%%Page: "33" 35
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Diagnostic V) 72 734.18 T
(alue Console Messages) 138.43 734.18 T
3 10 Q
(Page 33) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 7) 72 670.02 S
1 24 Q
-0.48 (PROM Diagnostic) 207 670.02 S
-0.48 (Messages) 207 640.02 S
72 306.99 558 310.02 C
207 308.5 558 308.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 308.5 198 308.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(7.1) 178.01 315.35 T
(Diagnostic V) 207 315.35 T
(alue Console Messages) 293.03 315.35 T
1 12 Q
-0.08 (These messages can be printed as a result of prom diagnostics and as rea-) 207 284.99 P
(sons for entering POD mode. The numbers on the left are \322diagnostic\323) 207 270.99 T
(codes which are displayed on the LCD panel.) 207 256.99 T
72 225.96 558 238.99 C
207 233.02 558 233.02 2 L
0.25 H
2 Z
0 X
0 K
N
72 233.02 198 233.02 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 72 217.96 T
(able  6) 78.44 217.96 T
(Diagnostic messages:) 207 217.96 T
112.42 197.14 72 197.14 2 L
V
1.02 H
0 Z
N
0 14 Q
(CODE) 72 198.63 T
210.07 197.14 144 197.14 2 L
V
N
(MEANING) 144 198.63 T
(Success:) 72 178.63 T
3 F
(000) 72 158.63 T
(Device passed diagnostics.) 144 158.63 T
0 F
(Cache tests:) 72 138.63 T
3 F
(001) 72 118.63 T
(Failed dcache1 data test.) 144 118.63 T
(002) 72 98.63 T
(Failed dcache1 addr test.) 144 98.63 T
FMENDPAGE
%%EndPage: "33" 36
%%Page: "34" 36
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM Diagnostic Messages) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 34) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
3 14 Q
0 X
(003) 54 676.68 T
(Failed scache1 data test.) 126 676.68 T
(004) 54 656.68 T
(Failed scache1 addr test.) 126 656.68 T
(005) 54 636.68 T
(Failed icache data test.) 126 636.68 T
(006) 54 616.68 T
(Failed icache addr test.) 126 616.68 T
(007) 54 596.68 T
(Dcache test hung.) 126 596.68 T
(008) 54 576.68 T
(Scache test hung.) 126 576.68 T
(009) 54 556.68 T
(Icache test hung.) 126 556.68 T
0 F
(Memory tests:) 54 536.68 T
3 F
(040) 54 516.68 T
(Memory built-in self-test failed.) 126 516.68 T
(041) 54 496.68 T
(No working memory was found.) 126 496.68 T
(042) 54 476.68 T
(Memory address line test failed.) 126 476.68 T
(043) 54 456.68 T
(Memory data line test failed.) 126 456.68 T
(044) 54 436.68 T
(Bank failed con\336gured memory test.) 126 436.68 T
(045) 54 416.68 T
(Slave hung writing to memory) 126 416.68 T
(.) 309.26 416.68 T
(046) 54 396.68 T
(Bank disabled due to downrev MA chip.) 126 396.68 T
(047) 54 376.68 T
(A bus error occurred during MC3 con\336g.) 126 376.68 T
(048) 54 356.68 T
(A bus error occurred during MC3 testing.) 126 356.68 T
(049) 54 336.68 T
(PROM attempted to disable the same bank twice.) 126 336.68 T
(050) 54 316.68 T
(Not enough memory to load the IO4 PROM.) 126 316.68 T
(051) 54 296.68 T
(No memory boards were recognized.) 126 296.68 T
(052) 54 276.68 T
(Bank forcibly re-enabled by the PROM.) 126 276.68 T
0 F
(Ebus tests:) 54 256.68 T
3 F
(060) 54 236.68 T
(CPU doesn\325t get interrupts from CC.) 126 236.68 T
(061) 54 216.68 T
(Group interrupt test failed.) 126 216.68 T
(062) 54 196.68 T
(Lost a loopback interrupt.) 126 196.68 T
(063) 54 176.68 T
(Bit in HPIL register stuck.) 126 176.68 T
0 F
(IO4 tests:) 54 156.68 T
3 F
(070) 54 136.68 T
(No working IO4 is present.) 126 136.68 T
(071) 54 116.68 T
(Bad checksum on IO4 PROM.) 126 116.68 T
(072) 54 96.68 T
(Bad entry point in IO4 PROM.) 126 96.68 T
FMENDPAGE
%%EndPage: "34" 37
%%Page: "35" 37
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Diagnostic V) 72 734.18 T
(alue Console Messages) 138.43 734.18 T
3 10 Q
(Page 35) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
3 14 Q
0 X
(073) 72 676.68 T
(IO4 PROM claims to be too long.) 144 676.68 T
(074) 72 656.68 T
(Bad entry point in IO4 PROM.) 144 656.68 T
(075) 72 636.68 T
(Bad magic number in IO4 PROM.) 144 636.68 T
(078) 72 616.68 T
(Bus error while downloading IO4 PROM.) 144 616.68 T
(079) 72 596.68 T
(No EPC chip found on master IO4.) 144 596.68 T
(080) 72 576.68 T
(Bus error while con\336guring IO4.) 144 576.68 T
(081) 72 556.68 T
(Bus error during IA register test.) 144 556.68 T
(082) 72 536.68 T
(Bus error during IA PIO test.) 144 536.68 T
(083) 72 516.68 T
(IA chip register test failed.) 144 516.68 T
(084) 72 496.68 T
(W) 144 496.68 T
(rong error reported for bad PIO.) 156.96 496.68 T
(085) 72 476.68 T
(IA error didn\325t generate interrupt.) 144 476.68 T
(086) 72 456.68 T
(IA error generated wrong interrupt.) 144 456.68 T
(087) 72 436.68 T
(EPC register test failed.) 144 436.68 T
(088) 72 416.68 T
(Bus error on map RAM rd/wr test.) 144 416.68 T
(089) 72 396.68 T
(Bus error on map RAM address test.) 144 396.68 T
(090) 72 376.68 T
(Bus error on map RAM walking 1 test.) 144 376.68 T
(091) 72 356.68 T
(Bus error during map RAM testing.) 144 356.68 T
(092) 72 336.68 T
(Map RAM read/write test failed.) 144 336.68 T
(093) 72 316.68 T
(Map RAM address test failed.) 144 316.68 T
(094) 72 296.68 T
(Map RAM walking 1 test failed.) 144 296.68 T
(095) 72 276.68 T
(EPC UAR) 144 276.68 T
(T loopback test failed.) 205.94 276.68 T
0 F
(IP19 tests:) 72 256.68 T
3 F
(120) 72 236.68 T
(CPU can\325t access memory) 144 236.68 T
(123) 72 216.68 T
(CC bus tag data test failed.) 144 216.68 T
(124) 72 196.68 T
(CC bus tag addr test failed.) 144 196.68 T
(125) 72 176.68 T
(CPU forcibly re-enabled by the PROM.) 144 176.68 T
0 F
(Miscellaneous:) 72 156.68 T
3 F
(240) 72 136.68 T
(CPU writing con\336guration info.) 144 136.68 T
(246) 72 116.68 T
(CPU testing dcache.) 144 116.68 T
(247) 72 96.68 T
(CPU testing icache.) 144 96.68 T
FMENDPAGE
%%EndPage: "35" 38
%%Page: "36" 38
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM Diagnostic Messages) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 36) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
3 14 Q
0 X
(248) 54 676.68 T
(CPU testing scache.) 126 676.68 T
(249) 54 656.68 T
(CPU initializing caches.) 126 656.68 T
(250) 54 636.68 T
(CPU returning from master) 126 636.68 T
(\325) 293.68 636.68 T
(s code.) 296.54 636.68 T
(251) 54 616.68 T
(Unexpected exception.) 126 616.68 T
(252) 54 596.68 T
(A nonmaskable interrupt occurred.) 126 596.68 T
(253) 54 576.68 T
(POD mode switch set or POD key pressed.) 126 576.68 T
(253) 54 556.68 T
(Unspeci\336ed diagnostic failure.) 126 556.68 T
(254) 54 536.68 T
(Diagnostic value unset.) 126 536.68 T
(255) 54 516.68 T
(Device not present.) 126 516.68 T
54 496.05 540 510.02 C
52.5 502.54 540.75 503.27 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
54 428.02 540 431.05 C
189 429.54 540 429.54 2 L
0.25 H
2 Z
0 X
0 K
N
54 429.54 180 429.54 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(7.2) 160.01 436.38 T
(Diagnostic System Contr) 189 436.38 T
(oller Messages) 358.38 436.38 T
1 12 Q
-0.21 (The following messages appear on the system controller display when di-) 189 406.02 P
(agnostics fail or as status:) 189 392.02 T
54 360.99 540 374.02 C
189 368.05 540 368.05 2 L
0.25 H
2 Z
0 X
0 K
N
54 368.05 180 368.05 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 54 352.99 T
(able  7) 60.44 352.99 T
(System Controller Short Messages:) 189 352.99 T
0 14 Q
(CODE) 54 333.66 T
(System Controller Short Message) 126 333.66 T
3 F
(003) 54 313.66 T
(SCACHE F) 126 313.66 T
(AILED!) 195.98 313.66 T
(004) 54 293.66 T
(SCACHE F) 126 293.66 T
(AILED!) 195.98 293.66 T
(001) 54 273.66 T
(DCACHE F) 126 273.66 T
(AILED!) 196.74 273.66 T
(002) 54 253.66 T
(DCACHE F) 126 253.66 T
(AILED!) 196.74 253.66 T
(005) 54 233.66 T
(ICACHE F) 126 233.66 T
(AILED!) 190.53 233.66 T
(006) 54 213.66 T
(ICACHE F) 126 213.66 T
(AILED!) 190.53 213.66 T
(040) 54 193.66 T
(MC3 CONFIG F) 126 193.66 T
(AILED!) 225.51 193.66 T
(041) 54 173.66 T
(NO GOOD MEMOR) 126 173.66 T
(Y FOUND) 250.91 173.66 T
(042) 54 153.66 T
(MC3 CONFIG F) 126 153.66 T
(AILED!) 225.51 153.66 T
(043) 54 133.66 T
(MC3 CONFIG F) 126 133.66 T
(AILED!) 225.51 133.66 T
(044) 54 113.66 T
(MC3 READBACK ERROR!) 126 113.66 T
(047) 54 93.66 T
(MC3 CONFIG F) 126 93.66 T
(AILED!) 225.51 93.66 T
FMENDPAGE
%%EndPage: "36" 39
%%Page: "37" 39
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Diagnostic System Controller Messages) 72 734.18 T
3 10 Q
(Page 37) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
3 14 Q
0 X
(048) 72 676.68 T
(MC3 CONFIG F) 144 676.68 T
(AILED!) 243.51 676.68 T
(049) 72 656.68 T
(MC3 CONFIG F) 144 656.68 T
(AILED!) 243.51 656.68 T
(050) 72 636.68 T
(INSUFFICIENT MEMOR) 144 636.68 T
(Y!) 297.66 636.68 T
(051) 72 616.68 T
(NO MEM BOARDS FOUND!) 144 616.68 T
(070) 72 596.68 T
(NO IO BOARDS FOUND!) 144 596.68 T
(071) 72 576.68 T
(IO4PROM F) 144 576.68 T
(AILED!) 220.2 576.68 T
(072) 72 556.68 T
(IO4PROM F) 144 556.68 T
(AILED!) 220.2 556.68 T
(073) 72 536.68 T
(IO4PROM F) 144 536.68 T
(AILED!) 220.2 536.68 T
(074) 72 516.68 T
(IO4PROM F) 144 516.68 T
(AILED!) 220.2 516.68 T
(075) 72 496.68 T
(IO4PROM F) 144 496.68 T
(AILED!) 220.2 496.68 T
(078) 72 476.68 T
(IO4PROM F) 144 476.68 T
(AILED!) 220.2 476.68 T
(079) 72 456.68 T
(NO EPC CHIP FOUND!) 144 456.68 T
(080) 72 436.68 T
(IO4 CONFIG F) 144 436.68 T
(AILED!) 236.53 436.68 T
(081) 72 416.68 T
(MASTER IO4 F) 144 416.68 T
(AILED!) 240.42 416.68 T
(082) 72 396.68 T
(MASTER IO4 F) 144 396.68 T
(AILED!) 240.42 396.68 T
(083) 72 376.68 T
(MASTER IO4 F) 144 376.68 T
(AILED!) 240.42 376.68 T
(084) 72 356.68 T
(MASTER IO4 F) 144 356.68 T
(AILED!) 240.42 356.68 T
(085) 72 336.68 T
(MASTER IO4 F) 144 336.68 T
(AILED!) 240.42 336.68 T
(086) 72 316.68 T
(MASTER IO4 F) 144 316.68 T
(AILED!) 240.42 316.68 T
(088) 72 296.68 T
(MASTER IO4 F) 144 296.68 T
(AILED!) 240.42 296.68 T
(089) 72 276.68 T
(MASTER IO4 F) 144 276.68 T
(AILED!) 240.42 276.68 T
(090) 72 256.68 T
(MASTER IO4 F) 144 256.68 T
(AILED!) 240.42 256.68 T
(091) 72 236.68 T
(MASTER IO4 F) 144 236.68 T
(AILED!) 240.42 236.68 T
(092) 72 216.68 T
(MASTER IO4 F) 144 216.68 T
(AILED!) 240.42 216.68 T
(093) 72 196.68 T
(MASTER IO4 F) 144 196.68 T
(AILED!) 240.42 196.68 T
(094) 72 176.68 T
(MASTER IO4 F) 144 176.68 T
(AILED!) 240.42 176.68 T
(087) 72 156.68 T
(EPC CHIP F) 144 156.68 T
(AILED!) 221.76 156.68 T
(095) 72 136.68 T
(EPC UAR) 144 136.68 T
(T F) 205.94 136.68 T
(AILED!) 226.16 136.68 T
(123) 72 116.68 T
(BUS T) 144 116.68 T
(AGS F) 184.17 116.68 T
(AILED!) 225.39 116.68 T
(123) 72 96.68 T
(BUS T) 144 96.68 T
(AGS F) 184.17 96.68 T
(AILED!) 225.39 96.68 T
FMENDPAGE
%%EndPage: "37" 40
%%Page: "38" 40
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM Diagnostic Messages) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 38) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
3 14 Q
0 X
(124) 54 676.68 T
(BUS T) 126 676.68 T
(AGS F) 166.17 676.68 T
(AILED!) 207.39 676.68 T
(250) 54 656.68 T
(Reentering POD mode) 126 656.68 T
(251) 54 636.68 T
(PROM EXCEPTION!) 126 636.68 T
(252) 54 616.68 T
(PROM NMI HANDLER) 126 616.68 T
(253) 54 596.68 T
(CPU in POD mode.) 126 596.68 T
54 576.05 540 590.02 C
52.5 582.54 540.75 583.27 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
54 547.02 540 560.05 C
189 554.07 540 554.07 2 L
0.25 H
2 Z
0 X
0 K
N
54 554.07 180 554.07 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 54 539.02 T
(able  8) 60.44 539.02 T
(Long, Scrolling System Controller Messages:) 189 539.02 T
0 14 Q
(CODE) 54 519.68 T
(System Controller Long Message) 126 519.68 T
3 F
(040) 54 499.68 T
(Memory board con\336guration has failed. Cannot load IO PROM.) 126 499.68 T
(041) 54 479.68 T
(All memory banks had to be disabled due to test failures.) 126 479.68 T
(042) 54 459.68 T
(The address line self-test failed. Cannot continue.) 126 459.68 T
(043) 54 439.68 T
(Memory board con\336guration has failed. Cannot load IO PROM.) 126 439.68 T
(044) 54 419.68 T
(Memory board con\336guration has failed. Cannot load IO PROM.) 126 419.68 T
(047) 54 399.68 T
(Memory board con\336guration has failed. Cannot load IO PROM.) 126 399.68 T
(048) 54 379.68 T
(Memory board con\336guration has failed. Cannot load IO PROM.) 126 379.68 T
(049) 54 359.68 T
(The PROM was unable to disable failing memory banks.) 126 359.68 T
(050) 54 339.68 T
(Y) 126 339.68 T
(ou must have at least 32 megabytes of working memory to) 134.05 339.68 T
(load the IO PROM) 126 319.68 T
(051) 54 299.68 T
(The IP19 PROM did not recognize any memory boards in the) 126 299.68 T
(system.) 126 279.68 T
(070) 54 259.68 T
(The IP19 PROM did not recognize any IO4 boards in the system.) 126 259.68 T
(071) 54 239.68 T
(Diagnostics detected a problem with your IO4 PROM.) 126 239.68 T
(072) 54 219.68 T
(Diagnostics detected a problem with your IO4 PROM.) 126 219.68 T
(073) 54 199.68 T
(Diagnostics detected a problem with your IO4 PROM.) 126 199.68 T
(074) 54 179.68 T
(Diagnostics detected a problem with your IO4 PROM.) 126 179.68 T
(075) 54 159.68 T
(Diagnostics detected a problem with your IO4 PROM.) 126 159.68 T
(078) 54 139.68 T
(An exception occurred while downloading the IO4 PROM to) 126 139.68 T
(memory) 126 119.68 T
(.) 175.49 119.68 T
(079) 54 99.68 T
(There must be an EPC chip on the IO board in the) 126 99.68 T
FMENDPAGE
%%EndPage: "38" 41
%%Page: "39" 41
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(System Controller Standard Messages) 72 734.18 T
3 10 Q
(Page 39) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
3 14 Q
0 X
(highest-numbered slot.) 144 676.68 T
(080) 72 656.68 T
(An exception occurred while con\336guring an IO board.) 144 656.68 T
(081) 72 636.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 636.68 T
(082) 72 616.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 616.68 T
(083) 72 596.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 596.68 T
(084) 72 576.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 576.68 T
(085) 72 556.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 556.68 T
(086) 72 536.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 536.68 T
(088) 72 516.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 516.68 T
(089) 72 496.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 496.68 T
(090) 72 476.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 476.68 T
(091) 72 456.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 456.68 T
(092) 72 436.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 436.68 T
(093) 72 416.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 416.68 T
(094) 72 396.68 T
(The IA chip on the master IO4 board has failed diagnostics.) 144 396.68 T
(087) 72 376.68 T
(The EPC chip on the master IO4 board has failed diagnostics.) 144 376.68 T
(251) 72 356.68 T
(The PROM code took an unexpected exception.) 144 356.68 T
(252) 72 336.68 T
(The PROM received a nonmaskable interrupt.) 144 336.68 T
72 269.99 558 273.02 C
207 271.51 558 271.51 2 L
0.25 H
2 Z
0 X
0 K
N
72 271.51 198 271.51 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(7.3) 178.01 278.35 T
(System Contr) 207 278.35 T
(oller Standard Messages) 300.42 278.35 T
3 12 Q
(Starting System...) 72 233.99 T
(Displayed once bootmaster arbitration has completed. Indicates) 216 233.99 T
(that the master processor has started up correctly and is) 216 215.99 T
(capable of communicating with the system controller) 216 197.99 T
(.) 493.29 197.99 T
(EBUS diags 2..) 72 179.99 T
(Displayed immediately before we run the secondary EBUS) 216 179.99 T
(diagnostics. The secondary EBUS diagnostics stress the) 216 161.99 T
(interrupt logic and the EBUS.) 216 143.99 T
(PD Cache test..) 72 125.99 T
(Displayed immediately before we run the primary data cache) 216 125.99 T
(test.) 216 107.99 T
FMENDPAGE
%%EndPage: "39" 42
%%Page: "40" 42
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM Diagnostic Messages) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 40) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
54 87.98 540 686.02 R
7 X
V
0 X
(Building stack..) 54 678.02 T
(Displayed before we attempt to set up the cache as the stack.) 198 678.02 T
-0.06 (If this is the last message displayed, there is probably something) 198 660.02 P
(wrong with the master processor) 198 642.02 T
(.) 370.63 642.02 T
(Jumping to MAIN) 54 624.02 T
(Displayed before we switch into the C main subroutine.) 198 624.02 T
(Initing Con\336g Info) 54 606.02 T
(Displayed before we attempt to do initial hardware probing and) 198 606.02 T
(set up the everest con\336guration information data structure. In) 198 588.02 T
(this phase, we simply read out the SYSCONFIG register and set) 198 570.02 T
(the evcon\336g \336elds to rational default values.) 198 552.02 T
(Setting timeouts..) 54 534.02 T
(Displayed before we attempt to write to the various board) 198 534.02 T
(timeout registers. Everest requires that all of the boards be) 198 516.02 T
(initialized with consistent timeout values, and that these) 198 498.02 T
(timeout values be written before we actually do reads or writes) 198 480.02 T
(to the boards \050we\325re safe so far because we have only touched) 198 462.02 T
(con\336guration registers; this will change when we start talking) 198 444.02 T
(to IO4 devices\051.) 198 426.02 T
(Initing master IO4..) 54 408.02 T
-0.24 (Displayed before we attempt to do basic initialization for all of the) 198 408.02 P
(IO4\325) 198 390.02 T
(s in the system. Basic initialization consists of writing the) 219.78 390.02 T
-0.08 (large and small window registers, setting the endianness, setting) 198 372.02 P
(up error interrupts, clearing the IBUS and EBUS error registers,) 198 354.02 T
(and examining the IO adapters.) 198 336.02 T
(Initing EPC...) 54 318.02 T
(Displayed before we do the \336rst writes to the master EPC. This) 198 318.02 T
(routine clears the EPC error registers and takes all EPC devices) 198 300.02 T
(out of reset.) 198 282.02 T
(Initing EPC UAR) 54 264.02 T
(T) 142.43 264.02 T
(Displayed when we \336rst enter the UAR) 198 264.02 T
(T con\336guration code.) 403.08 264.02 T
(Initing UAR) 54 246.02 T
(T Chan B) 114.43 246.02 T
(Displayed before we begin initializing UAR) 198 246.02 T
(T chan B\325) 423.07 246.02 T
(s control) 473.51 246.02 T
(registers.) 198 228.02 T
(Initing UAR) 54 210.02 T
(T Chan A) 114.43 210.02 T
(Displayed before we begin initializing UAR) 198 210.02 T
(T chan A) 423.07 210.02 T
(\325) 470.18 210.02 T
(s control) 472.62 210.02 T
(registers.) 198 192.02 T
(Reading inventory) 54 174.02 T
(..) 149.77 174.02 T
(Displayed before we attempt to read the system inventory out) 198 174.02 T
(the IO4 NVRAM. If the inventory is invalid or we can\325t read it for) 198 156.02 T
(some reason, we initialize the inventory \336elds with) 198 138.02 T
(appropriate default values.) 198 120.02 T
(Running BIST) 54 102.02 T
(..) 127.33 102.02 T
-0.57 (Displayed before we run the memory hardware\325) 198 102.02 P
-0.57 (s built-in self test.) 446.3 102.02 P
FMENDPAGE
%%EndPage: "40" 43
%%Page: "41" 43
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(System Controller Standard Messages) 72 734.18 T
3 10 Q
(Page 41) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
0 X
(Con\336guring memory) 72 678.02 T
(..) 179.08 678.02 T
(Displayed before we actually con\336gure the banks into a) 216 678.02 T
(legitimate state.) 216 660.02 T
(T) 72 642.02 T
(esting memory) 78 642.02 T
(..) 155.75 642.02 T
(Printed before we start executing the memory post-con\336guration) 216 642.02 T
(tests. These tests simply check that memory was con\336gured) 216 624.02 T
(correctly) 216 606.02 T
(.) 260.42 606.02 T
(T) 72 588.02 T
(esting Bus T) 78 588.02 T
(ags..) 143.32 588.02 T
(Checks and initializes the CC bus tags, which are used by the) 216 588.02 T
(CC chip to determine whether it should pass a coherency) 216 570.02 T
(transaction on to a particular processor) 216 552.02 T
(.) 422.65 552.02 T
(W) 72 534.02 T
(riting CFGINFO..) 83.11 534.02 T
(Displayed before we try writing the everest con\336guration) 216 534.02 T
(information into main memory) 216 516.02 T
(.) 373.07 516.02 T
(Initing MPCONF blk..) 72 498.02 T
(Displayed before we initialize the everest MP con\336guration) 216 498.02 T
(blocks for all of the processors.) 216 480.02 T
(T) 72 462.02 T
(esting S Cache...) 78 462.02 T
(Displayed before we begin testing the secondary cache on all) 216 462.02 T
(of the processors.) 216 444.02 T
(S Cache passed.) 72 426.02 T
(Secondary cache test) 216 426.02 T
(passed.) 331.33 426.02 T
(Checking slaves...) 72 408.02 T
(Displayed when we check each slave processor to determine) 216 408.02 T
(whether it is alive and whether it passed its diagnostics.) 216 390.02 T
(Loading IO4 PROM..) 72 372.02 T
(Displayed when we download the IO4 PROM from the IO4) 216 372.02 T
(\337ash proms into main memory) 216 354.02 T
(.) 375.73 354.02 T
72 334.05 558 348.02 C
70.5 340.54 558.75 341.27 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "41" 44
%%Page: "42" 44
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(PROM Diagnostic Messages) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 42) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
FMENDPAGE
%%EndPage: "42" 45
%%Page: "43" 45
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(Flashing LEDs Ctrl-P T) 72 734.18 T
(rick) 194.18 734.18 T
3 10 Q
(Page 43) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
4 F
0 X
1.2 (CHAPTER 8) 72 670.02 S
1 24 Q
-0.48 (Miscellaneous Hints) 207 670.02 S
72 336.99 558 340.02 C
207 338.5 558 338.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 338.5 198 338.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(8.1) 178.01 345.35 T
(Flashing LEDs Ctrl-P T) 207 345.35 T
(rick) 369.74 345.35 T
1 12 Q
-0.24 (If a CPU hangs \337ashing its LEDs, it will still accept a control-p \050^p\051 char-) 207 314.99 P
-0.02 (acter from its CC UAR) 207 300.99 P
-0.02 (T and go into POD mode. T) 317.48 300.99 P
-0.02 (o do this, you must ei-) 450.8 300.99 P
(ther connect to it through the system controller or directly) 207 286.99 T
(, via the four) 483.7 286.99 T
(pin IPI9 connector \050with \322no boot master arbitration\323 switched on in the) 207 272.99 T
(system controller\051.) 207 258.99 T
(Processors in the \322slave\323 loop displaying a repeating pattern of four) 207 232.99 T
(LEDs with two on at a time can also be interrupted with a control-p on) 207 218.99 T
(their CC UAR) 207 204.99 T
(T) 275.58 204.99 T
(. They will then attempt to enter POD mode. Of course,) 282.02 204.99 T
(they may be too broken to do this, in which case, you\325ll see a dif) 207 190.99 T
(ferent) 516.57 190.99 T
(failure LED value.) 207 176.99 T
72 128.97 558 131.99 C
207 130.48 558 130.48 2 L
0.25 H
2 Z
0 X
0 K
N
72 130.48 198 130.48 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(8.2) 178.01 137.33 T
(System Contr) 207 137.33 T
(oller Boot Status Characters) 300.42 137.33 T
1 12 Q
(The System controller displays the state of the various processors on its) 207 106.97 T
(display) 207 92.97 T
(. The characters associated with the processors are as follows:) 240.87 92.97 T
FMENDPAGE
%%EndPage: "43" 46
%%Page: "44" 46
612 792 0 FMBEGINPAGE
54 750.02 540 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
54 730.15 540 742.18 R
7 X
V
3 12 Q
0 X
(Miscellaneous Hints) 54 734.18 T
3 10 Q
(Page) 306 734.18 T
3 12 Q
( 44) 329.34 734.18 T
54 726.98 540 726.98 2 L
7 X
V
0.25 H
0 X
N
54 76.5 540 76.5 2 L
7 X
V
2 Z
0 X
N
162 57.06 540 69.02 R
7 X
V
0 X
( PROPRIET) 162 61.02 T
(AR) 225.76 61.02 T
(Y and CONFIDENTIAL) 242.2 61.02 T
(7/9/93) 364.83 61.02 T
0 -10 -10 140 20 150 30 52.96 48.75 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
1 F
0 X
(\324B\325 = processor is bootmaster) 261 678.02 T
(.) 402.34 678.02 T
(\324+\325 = processor is operational) 261 661.02 T
(\324 \324 = processor is not present or seriously broken.) 261 644.02 T
(\324X\325 = processor fails diagnostics.) 261 627.02 T
(\324D\325 = processor is disabled in NVRAM.) 261 610.02 T
72 561.99 558 565.02 C
207 563.5 558 563.5 2 L
0.25 H
2 Z
0 X
0 K
N
72 563.5 198 563.5 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(8.3) 178.01 570.35 T
(Documented IP19 PROM V) 207 570.35 T
(ectors) 396.06 570.35 T
1 12 Q
(There are some new addresses you can jump to in the IP19 prom to get) 207 539.99 T
(certain otherwise dif) 207 525.99 T
(\336cult ef) 305.37 525.99 T
(fects:) 342.13 525.99 T
3 10 Q
4 K
(0xbfc00008) 252 507.33 T
(Restart the PROM) 324 507.33 T
(0xbfc00010:) 252 493.33 T
(Go back to IP19 PROM slave mode.) 324 493.33 T
( 0xbfc00018:) 252 479.33 T
(Go into POD mode using the CC UAR) 324 479.33 T
(T for I/O.) 492.68 479.33 T
(0xbfc00020:) 252 465.33 T
(Go into POD mode using the IO4 UAR) 324 465.33 T
(T for input.) 494.36 465.33 T
(0xbfc00028:) 252 451.33 T
(Flash all LEDs and loop endlessly) 324 451.33 T
(.) 473.24 451.33 T
1 12 Q
0 K
-0.32 (The IO4 prom now has a POD command to get you to POD mode. It\325) 207 425.99 P
-0.32 (s no) 535.98 425.99 P
(longer necessary to type \322goto 0xbfc00020.\323) 207 411.99 T
72 363.97 558 366.99 C
207 365.48 558 365.48 2 L
0.25 H
2 Z
0 X
0 K
N
72 365.48 198 365.48 2 L
0 Z
N
0 0 612 792 C
4 16 Q
0 X
0 K
(8.4) 178.01 372.33 T
(EAROM V) 207 372.33 T
(ariables) 282.37 372.33 T
1 12 Q
-0.07 (The IP19 prom looks in various locations in EAROM to \336nd system con-) 207 341.97 P
(\336guration parameters. Many of these also af) 207 327.97 T
(fect Unix. Here are their) 418.29 327.97 T
(names and addresses:) 207 313.97 T
72 282.94 558 295.97 C
207 289.99 558 289.99 2 L
0.25 H
2 Z
0 X
0 K
N
72 289.99 198 289.99 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 K
(T) 72 274.94 T
(able  9) 78.44 274.94 T
(EAROM V) 207 274.94 T
(ariable Locations) 262.31 274.94 T
104.66 255.66 72 255.66 2 L
V
0.88 H
0 Z
N
(Name) 72 256.94 T
280.38 255.66 230.4 255.66 2 L
V
N
(Location) 230.4 256.94 T
379.3 255.66 324 255.66 2 L
V
N
(De\336nition) 324 256.94 T
3 F
(EV_EBUSRA) 72 238.94 T
(TE0_LOC) 143.1 238.94 T
(0xb9000100) 230.4 238.94 T
(EBUS frequency \050Hz\051 LSB) 324 238.94 T
(EV_EBUSRA) 72 220.94 T
(TE1_LOC) 143.1 220.94 T
(0xb9000108) 230.4 220.94 T
(EBUS frequency \050Hz\051 byte 1) 324 220.94 T
(EV_EBUSRA) 72 202.94 T
(TE2_LOC) 143.1 202.94 T
(0xb90001) 230.4 202.94 T
(10) 282.19 202.94 T
(EBUS frequency \050Hz\051 byte 2) 324 202.94 T
(EV_EBUSRA) 72 184.94 T
(TE3_LOC) 143.1 184.94 T
(0xb90001) 230.4 184.94 T
(18) 282.19 184.94 T
(EBUS frequency \050Hz\051 MSB) 324 184.94 T
(EV_PGBRDEN_LOC) 72 166.94 T
(0xb9000120) 230.4 166.94 T
(Piggyback read enable bit) 324 166.94 T
(EV_CACHE_SZ_LOC) 72 148.94 T
(0xb9000128) 230.4 148.94 T
(Size of secondary cache) 324 148.94 T
(0x14 == 1M) 345.6 130.94 T
(0x16 == 4M) 345.6 112.94 T
(EV_IW_TRIG_LOC) 72 94.94 T
(0xb9000130) 230.4 94.94 T
(CC chip IW_TRIG value) 324 94.94 T
FMENDPAGE
%%EndPage: "44" 47
%%Page: "45" 47
612 792 0 FMBEGINPAGE
72 750.02 558 750.02 2 L
7 X
0 K
V
2 H
0 Z
0 X
N
72 730.15 558 742.18 R
7 X
V
3 12 Q
0 X
(EAROM V) 72 734.18 T
(ariables) 126.43 734.18 T
3 10 Q
(Page 45) 324 734.18 T
72 726.98 558 726.98 2 L
7 X
V
0.25 H
0 X
N
71.25 74.77 557.25 74.77 2 L
7 X
V
2 Z
0 X
N
71.25 55.76 467.25 67.71 R
7 X
V
3 12 Q
0 X
(7/9/93) 71.25 59.71 T
(PROPRIET) 215.25 59.71 T
(AR) 275.67 59.71 T
(Y and CONFIDENTIAL) 292.12 59.71 T
0 -10 -10 140 20 150 30 475.71 48.25 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

%%EndDocument
FMENDEPSF
72 87.98 558 686.02 R
7 X
V
0 X
(EV_RR_TRIG_LOC) 72 678.02 T
(0xb9000138) 230.4 678.02 T
(CC chip RR_TRIG value) 324 678.02 T
(EV_EPROCRA) 72 660.02 T
(TE0_LOC) 153.09 660.02 T
( 0xb9000140) 230.4 660.02 T
(CPU frequency \050Hz\051 LSB) 324 660.02 T
(EV_EPROCRA) 72 642.02 T
(TE1_LOC) 153.09 642.02 T
(0xb9000148) 230.4 642.02 T
(CPU frequency \050Hz\051 byte 1) 324 642.02 T
(EV_EPROCRA) 72 624.02 T
(TE2_LOC) 153.09 624.02 T
(0xb9000150) 230.4 624.02 T
(CPU frequency \050Hz\051 byte 2) 324 624.02 T
(EV_EPROCRA) 72 606.02 T
(TE3_LOC) 153.09 606.02 T
(0xb9000158) 230.4 606.02 T
(CPU frequency \050Hz\051 MSB) 324 606.02 T
(EV_R) 72 588.02 T
(TCFREQ0_LOC) 103.11 588.02 T
(0xb9000160) 230.4 588.02 T
(R) 324 588.02 T
(TC frequency \050Hz\051 LSB) 332.44 588.02 T
(EV_R) 72 570.02 T
(TCFREQ1_LOC) 103.11 570.02 T
(0xb9000168) 230.4 570.02 T
(R) 324 570.02 T
(TC frequency \050Hz\051 byte 2) 332.44 570.02 T
(EV_R) 72 552.02 T
(TCFREQ2_LOC) 103.11 552.02 T
(0xb9000170) 230.4 552.02 T
(R) 324 552.02 T
(TC frequency \050Hz\051 byte 3) 332.44 552.02 T
(EV_R) 72 534.02 T
(TCFREQ3_LOC) 103.11 534.02 T
(0xb9000178) 230.4 534.02 T
(R) 324 534.02 T
(TC frequency \050Hz\051 MSB) 332.44 534.02 T
(EV_WCOUNT0_LOC) 72 516.02 T
(0xb9000180) 230.4 516.02 T
(EAROM W) 324 516.02 T
(rite count LSB) 382.42 516.02 T
(EV_WCOUNT1_LOC) 72 498.02 T
(0xb9000188) 230.4 498.02 T
(EAROM W) 324 498.02 T
(rite count MSB) 382.42 498.02 T
(EV_ECCENB_LOC) 72 480.02 T
(0xb9000190) 230.4 480.02 T
(CC chip ECC enable \337ag) 324 480.02 T
72 460.05 558 474.02 C
70.5 466.54 558.75 467.27 2 L
0.25 H
2 Z
0 X
0 K
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "45" 48
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 47 1
%%DocumentFonts: Helvetica-Bold
%%+ Times-Roman
%%+ Times-Italic
%%+ Helvetica
%%+ Times-Bold

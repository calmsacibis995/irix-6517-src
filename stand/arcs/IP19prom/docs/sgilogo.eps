%!PS-Adobe-2.0 EPSF-1.2
%%Creator:Adobe Illustrator(TM) 1.2d4
%%For:Howard
%%Title:sgilogo.eps
%%CreationDate:1/20/88 10:36 AM
%%DocumentProcSets:Adobe_Illustrator_1.2d1 0 0
%%DocumentSuppliedProcSets:Adobe_Illustrator_1.2d1 0 0
%%BoundingBox:-10 -10 140 20
%%EndComments
%%BeginProcSet:Adobe_Illustrator_1.2d1 0 0
/Adobe_Illustrator_1.2d1 dup 100 dict def load begin
/Version 0 def
/Revision 0 def
% definition operators
/bdef {bind def} bind def
/ldef {load def} bdef
/xdef {exch def} bdef
%%EndProcSet
%%EndProlog

Adobe_Illustrator_1.2d1 begin


 
%
%  Parametric SGI logo path for clipping, filling, and stroking
%
%  (c) Copyright 1988, Silicon Graphics, Inc.
%
%  Hacked together by Dave Ciemiewicz
%
/SGILogoPath { % - = -
    %
    %  Shape tweaking constants
    %
    /radius 0.5 def
    /offset 0.026 def
    /width 0.09 def
    /gap 0.020 def

    %
    %  Computed constants
    %
    /base radius offset sub def
    /sin60 60 sin def
    /halfspace offset sin60 mul def
    /halfwidth width 2 div def
    /thick width sin60 div def
    /halfthick thick 2 div def
    /gapthick gap sin60 div def
    /halfjointwidth halfspace gap sub def

    %
    %  Compute points and vertices used for drawing one face of logo.
    %
    /Ax 0 def			% A = (0, thick)
    /Ay thick def
    
    /Gx base sin60 mul def		% G = (base * sin(60), base / 2)
    /Gy base 2 div def
    /Gxl 0 Gx sub def		% -x quadrant value
    
    /Bx Gx 2 width mul sub def	% B = G - (2 * width, 0)
    /By Gy def
    /Bxl 0 Bx sub def		% -x quadrant value
    
    /Fx halfspace def		% F = (halfspace, base - offset / 2)
    /Fy base offset 2 div sub def
    /Fxl 0 Fx sub def		% -x quadrant value
    
    /Cx Fx width add def		% C = F + (width, -1.5 * thick)
    /Cy Fy -1.5 thick mul add def
    /Cxl 0 Cx sub def		% -x quadrant value
    
    /Ex Ax halfspace add def	% E = A + (halfspace, offset/2 + gapthick)
    /Ey Ay offset 2 div add gapthick add def
    /Exl 0 Ex sub def		% -x quadrant value
    
    /Dx Ex width add def		% D = E + (width, thick/2)
    /Dy Ey thick 2 div add def
    /Dxl 0 Dx sub def		% -x quadrant value
    
    %
    %  Compute points and vertices used for drawing one joint of logo.
    %
    /Hx Ax halfjointwidth add def	% H = A + (halfjointwidth,
				    %	sqrt((offset - gapthick)^2 - 
				    %		halfjointwidth^2))
    /Hy Ay offset gapthick sub dup mul halfjointwidth dup mul sub sqrt add def
    /Hxl 0 Hx sub def
    
    /Ix halfjointwidth def		% I = (halfjointwidth, halfthick - 
				    %	sqrt(halfwidth^2 - halfjointwidth^2)
    /Iy  halfthick halfwidth dup mul halfjointwidth dup mul sub sqrt sub def
    /Ixl 0 Ix sub def
    /Iangle halfjointwidth halfthick Iy sub atan def
    
    
    /doface {
        0 offset translate
        Ax Ay moveto
        Bx By lineto
        Cx Cy lineto
        Dx Dy lineto
        Ex Ey lineto
        Fx Fy Gx Gy halfwidth arcto 4 {pop} repeat
        Gx Gy 0 0 halfwidth arcto 4 {pop} repeat
        0 0 Gxl Gy halfwidth arcto 4 {pop} repeat
        Gxl Gy Fxl Fy halfwidth arcto 4 {pop} repeat
        Fxl Fy Exl Ey halfwidth arcto 4 {pop} repeat
        Exl Ey lineto
        Dxl Dy lineto
        Cxl Cy lineto
        Bxl By lineto
        closepath
        0 0 offset sub translate
    } def
    
    /dojoint {
        0 offset translate
        Ax Ay moveto
        Hxl Hy lineto
        Ixl Iy lineto
        0 halfthick halfwidth 270 Iangle sub 270 Iangle add arc
        Hx Hy lineto
        closepath
        0 0 offset sub translate
    } def
    
    newpath 
    doface
    120 rotate doface
    120 rotate doface
    60  rotate dojoint
    120 rotate dojoint
    120 rotate dojoint
    180 rotate
} def

%  Print logo
gsave

29 29 scale SGILogoPath 0 setgray fill 
grestore

%  Print company name
gsave

22 0 translate
[0.8 0 0.1 1 0 0] concat	% Add more skew
/Helvetica-BoldOblique findfont 12 scalefont setfont
0 -2 moveto (SiliconGraphics) show
/Helvetica-Oblique findfont 8 scalefont setfont
1.1 -11 moveto (Computer Systems) show

grestore
end
end

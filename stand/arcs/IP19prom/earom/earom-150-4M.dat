#########################################################################
# 	File:		earom.dat					#
#									#
#	"$Revision: 1.2 $"						#
#									#
#	This file contains the EAROM data for the IP19 Everest CPU	#
#	board.  The contents are specified in bytes.  Each line		#
#	begins with the byte's index in the EAROM followed by a 	#
#	colon (':').  The byte stored at that memory location in	#
#	the EAROM is then specified.  If the byte is prefixed with	#
#	a '%', the byte's value is in binary.  If the value is 		#
#	prefixed with '0x', the value is in hexadecimal.		#
#									#
#	The '#' is used as a commenting character.  All characters	#
#	following the '#' on the same line are ignored.			#
#									#
######################################################################### 

0x00:	%00001100	# 0:	 Blk read resp ordering = Sequential (0),
			# 1:	 System interface check bus = SECDED (0),
			# 2:	 Byte order = Big endian (1),
			# 3:	 Dirty shared mode disabled (1),
			# 4:	 Secondary cache = present (0),
			# 5-6: 	 System Interface port width = 64 bits (00)
			# 7:	 Secondary cache port width = 128 bits (0)

0x01:	%00000110	# 8:   	 Secondary cache org = Unified (0),
			# 9-10:	 Secondary cache line size = 32 words (11),
			# 11-14: System Interface Data Rate = D (0000),

0x02:	%01010000	# 15-17: PClock-to-Sclock divisor = Divide-by-2 (000),
			# 18:	 Reserved = 0
			# 19:	 Timer/Int enable = Enabled (0),
			# 20:	 Potential invalidate enable = Disabled (1),
			# 21-24: 2ndary cache write deassert delay = 2 (0010) 	  
0x03:	%10101010	# 25-26: 2ndary cache write assert delay 2 = 1 (01),
			# 27-28: 2ndary cache write assert delay 1 = 1 (01),
			# 29:	 2ndary cache write recovery time = 1, 
			# 30-32: 2ndary cache disable time = 2 (010),
 
0x04:	%10000100	# 33-36: 2ndary cache read cycle time 2 = 2 (0010),
			# 37-40: 2ndary cache read cycle time 1 = 4 (0100),

0x05:	%00000000	# 41:	 2ndary cache 64-bit = Lower half (0)
			# 42-45: Reserved = 0000,
			# 46:	 R4000 package type = Large (0),
			# 47-49: Reserved = 000
 
0x06:	%01101000	# 50-52: Drive outputs at .75 x Master Clock (010),
			# 53-56: Output buffer pull-down speed = Fastest (1100),

0x07:	%00000000	# 57-60: Output buffer Pull-up speed = Slowest (0000),
			# 61:	 Disable di/dt mechanism (0),
			# 62:	 Enable di/dt mechanism (0),
			# 63: 	 Enable PLLs (0)

0x08:	%00000000	# 64:	 Output-only pins only tristated on ColdReset
0x09:	%00000000	# 65-255: Reserved.
0x0a:	%00000000
0x0b:	%00000000
0x0c:	%00000000
0x0d:	%00000000
0x0e:	%00000000
0x0f:	%00000000
0x10:	%00000000
0x11:   %00000000
0x12:	%00000000
0x13:	%00000000
0x14:	%00000000
0x15:	%00000000
0x16:   %00000000
0x17:	%00000000
0x18:	%00000000
0x19:	%00000000
0x1a:	%00000000
0x1b:	%00000000
0x1c:	%00000000
0x1d:	%00000000
0x1e:	%00000000
0x1f:	%00000000 

#	Bytes 0x20 through 0x23 contain the Everest BUS rate in Hz.
#	Current value is 47.619048 MHz (21 ns clock cycle) 
0x20:	0xe8		# LSB 
0x21:	0x9b
0x22:	0xd6
0x23:	0x02		# MSB

0x24:	0x00		# Piggyback reads are disabled because of CC bug

0x25:	0x16		# Log base-2 of secondary cache size

0x26:	0x0		# IW_TRIG value

0x27:	0x5		# RR_TRIG value

#	Bytes 0x28 through 0x2b contain the CPU external frequency in Hz.
#		047868c0 = 75MHz
#
0x28:	0xc0		# LSB
0x29:	0x68
0x2a:	0x78		
0x2b:	0x04		# MSB

#	Bytes 0x2c through 0x2f contain the Real Time Clock frequency
#	in Hz.  Current value is 47.619048 MHz (21 ns clock cycle)
0x2c:	0xe8		# LSB
0x2d:	0x9b
0x2e:	0xd6
0x2f:	0x02		# MSB

#	Bytes 0x30 through 0x31 contain a count of the number of times
#	the EAROM has been written.
0x30:	0x01		# LSB
0x31:	0x00		# MSB

0x32:	0x01		# ECC Checking is enabled.  Note that this 
			# value is inverted before it is stored in the
			# ECC DIS register.  Done for backwards-compat.

#	Bytes 0x33 through 0x40 are reserved for future use.
#
0x33:	0x00		
0x34:	0x00
0x35:	0x00
0x36:	0x00
0x37:	0x00
0x38:	0x00
0x39:	0x00
0x3a:	0x00
0x3b:	0x00
0x3c:	0x00
0x3d:	0x00
0x3e:	0x00
0x3f:	0x00

#	Bytes 0x40 through 0x41 contain a checksum of the first
#	48 bytes of the EAROM (from addr 0x00 to addr 0x3f).
#	Bytes 0x42 through 0x43 contain the complement of the checksum.

0x40:	*48	# Checksum the first 48 bytes at this address
#	0x40:	Checksum LSB
#	0x41:	Checksum MSB
#	0x42:	~Checksum LSB
#	0x43:	~Checksum MSB


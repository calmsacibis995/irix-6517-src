
This directory contains a series of proms that can be used to help debug
dead boards in manufacturing.  They are numbered starting at 1 and each
require additional system resources to work.

Note that the code here does not include the teton power-on reset fix to
re-initialize MC so they will not come-up correctly on power-up.  The user
may need to power-up, and then hit the hard reset button.  It seems like
it may be better with the IP26 baseboard, but I didn't think the problem
was ever actually fixed.

Also since these PROMs are simple they do not know how to handle the soft
power-switch, so AC power must be cut to the power-supply to shut the
machine off.

It is believed that if these PROMs pass, the production PROM should run
far enough to do it's early power-on diagnostics which test many other
aspects of the system.

On success the led is lit green.  On failure it will be unlit if the board
cannot run enough code to turn on the led, or amber if the test has run but
failed.

prom1:
	This is a simple LED prom.  It first attempts to blink the LED three
	times green fast.  Once this is done, a double word containing all 5's (in
	each nibble) and verified.  For each bit that is wrong, the following
	format is used: Blink green to signify start of a number and have amber
	blink to the number count.  Green is blinked for each digit and at the
	end.  For example: If bit 23 was stuck, the following would be the LED
	output:  green amber amber green amber amber amber green.  In the case
	of bit 4 being stuck, the LED would output:
		green green amber amber amber amber green
	Once this is done, the LED with blink three times green fast.  Once again,
	a double word is read in but this time contains all a's for each
	nibble and then verified. This prom only uses instructions on even
	words.  Odd words are nops (all bits are 0) so stuck low-bits on
	the odd word will not affect exectution.  The double words of data
	test out the odd words and determinte stuck bits).

prom2:
	This prom is identical to prom1, except that instructions are placed
	on odd words instead of even words.

prom3:
	This prom fetches 64-bits of A's and 64-bits of 5's from the
	prom and ensures they are correct.  If they are correct, then
	the led is lit green, else amber.  After this the two patterns
	are continuously loaded prom the PROM to allow the board to
	be looked at with a scope.

prom4:
	This prom sets up one set of the GCache and writes 5's and a's
	once to each side of the GCache.  The output is similar to prom1
	except more things are checked.  This is the LED output:

		three green fast
		check even side of gcache after writing 5's
		three green fast
		check odd side of gcache after writing 5's
		three green fast
		check even side of gcache after writing A's
		three green fast
		check odd side of gcache after writing A's

	For any failures in the check, the LED will blink the number as
	described above in prom1.
	

# make.defaults - Compilation tools default definitions
#
# modification history
# --------------------
# 01f,19jun95,srh  made C++ compiler name specific to cfront, made default
#		   C++ compiler same as $(CC)
# 01p,18jun95,srh  added more C++ support.
# 01o,10jun95,jcf  removed bsp stuff.
# 01n,25may95,jcf  new environment variables
# 01m,22may95,jcf  removed tyCoDrv.o.
# 01l,17may95,srh  added C++ defaults.
# 01k,04feb93,wmd  defined default MV_BIN = true here.
# 01j,03feb93,rrr  SPR 1841, changed CP=cp -p to CP=cp because sgi doesn't
#                  understand -p flag
# 01i,21oct92,caf  introduced ADDED_CFLAGS and ADDED_MODULES, which may be
#		   defined on make command line (SPR 1707).
# 01h,01oct92,yp   move $CP macro here from makeTarget2
# 01g,22sep92,yp   added bsp/src directories so bsps stay position independent
# 01f,22sep92,jcf  removed BOOTROMZ_DEP.  fixed MACH_DEP.
# 01e,13aug92,jcf  fixed comment of MACH_DEP.
# 01d,21jul92,rdc  moved MACH_DEP here from makeTarget2 so arch dep makefiles
#                  can redefine.
# 01c,21jul92,rrr  added TARGET= so you don't grab the environment one.
# 01b,17jul92,rrr  added LDOUT_SYMS
# 01a,17jul92,wdm  added modification history, defined LDOUT_SYMS.
#
# DESCRIPTION
# This file contains default definitions, and flags used in building targets.
# NEVER CHANGE ANYTHING IN THIS FILE, ONLY ADD TO IT. If you change something
# you would have to go through a dozen make.$(CPU)$(TOOL) files and make
# sure they didn't break.
#

CFLAGS		= $(CC_OPTIM) $(CC_WARNINGS) $(CC_INCLUDE) $(CC_COMPILER) \
			$(CC_DEFINES) $(ADDED_CFLAGS)

C++FLAGS	= $(CC_OPTIM) $(C++_WARNINGS) $(CC_INCLUDE) $(C++_COMPILER) \
			$(CC_DEFINES) $(ADDED_C++FLAGS)

CASFLAGS	= -E $(CC_INCLUDE) $(CC_DEFINES)
CC_WARNINGS	= $(CC_WARNINGS_ALL)
C++_WARNINGS	= $(CC_WARNINGS_NONE)
CC_OPTIM	= $(CC_OPTIM_NORMAL)
CC_INCLUDE	= -I$(UP)/h $(INCLUDE_CC) $(EXTRA_INCLUDE)
CC_DEFINES	= -DCPU=$(CPU) $(DEFINE_CC) $(EXTRA_DEFINE)

RM		= rm -f
CP		= cp
SHELL		= /bin/sh

# override things below this point

.SUFFIXES:	.cpp

.s.o :
	@ $(RM) $@
	cat $< > $*.S
	$(CC) $(CFLAGS) -c $*.S
	@ $(RM) $*.S

.c.o :
	@ $(RM) $@
	$(CC) $(CFLAGS) -c $<

.cpp.o :
	@ $(RM) $@
	$(CXX) $(C++FLAGS) -c $<

CPU             = MC68020
TOOL            = gnu

CC_WARNINGS_ALL	= -Wall
CC_WARNINGS_NONE=

CC_OPTIM_DRIVER	=
CC_OPTIM_NORMAL	= -O -fstrength-reduce -fcombine-regs
CC_OPTIM_TARGET	= -O -fvolatile

CC_COMPILER	=  -ansi -pedantic -pipe -nostdinc

C++_COMPILER	= -ansi -pipe -nostdinc

AR              = ar
AS              = as
CC              = cc
CXX		= $(CC)
CF		= CC
LD              = ld
NM		= nm
RANLIB          = ranlib
MV_BIN		= true
TARGET		=

# end of make.defaults

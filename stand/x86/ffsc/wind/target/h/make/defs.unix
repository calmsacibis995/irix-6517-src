# defs.unix - standard unix host specific makefile
#
# modification history
# --------------------
# 01f,13nov95,p_m  added DEMO_DIR.
# 01e,03nov95,yp   Made CPP arch specific so .s.o targets don't get generate
# 01d,24oct95,dat  recovered CONFIG_ALL macro
# 01c,29jun95,kkk  added VXSIZE definition.
# 01b,19jun95,yp   allowed arch. specific tools to be inherited from
#                  make.$(CPU)$(TOOL)
# 01a,01jun95,yp   created
#
# DESCRIPTION
# This file contains default definitions, and flags used in building targets 
# that are host specific to a standard unix environment.


## directories

BIN_DIR         = $(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin
TGT_DIR         = $(WIND_BASE)/target
CONFIG_ALL      = $(TGT_DIR)/config/all
MAN1		= $(TGT_DIR)/man/man1/
MAN2		= $(TGT_DIR)/man/man2/
DEMO_DIR	= $(TGT_DIR)/lib/obj$(CPU)$(TOOL)test

## tools

ENV_BIN		= VX_CPU_FAMILY=$(TOOLENV) $(BIN_DIR)/
EXTRACT_BIN     = $(ENV_BIN)$(EXTRACT_BIN_NAME)
BINXSYM         = $(ENV_BIN)$(BINXSYM_NAME) 
BINHEX          = $(ENV_BIN)$(BINHEX_NAME) 
MKVERSION	= $(ENV_BIN)makeVersion
COMPRESS	= $(ENV_BIN)compress
ROMSIZEPROG	= $(ENV_BIN)romsize
VXSIZEPROG	= $(ENV_BIN)vxsize
MKSYMTBL	= $(ENV_BIN)makeSymTbl
BINTOASM	= $(ENV_BIN)binToAsm
CPP		= $(ENV_BIN)cpp$(TOOLENV)
MG		= $(ENV_BIN)mg
LDOUT_SYMS      = true
LDOUT_CONV      = true 
LDOUT_HOST      = true 
MV_BIN		= echo
RM		= rm -f
CP		= cp
ASM_P1		= cat
ASM_P2		= cat
TARGET		=

## files

USRCONFIG	= $(CONFIG_ALL)/usrConfig.c
BOOTCONFIG	= $(CONFIG_ALL)/bootConfig.c
BOOTINIT	= $(CONFIG_ALL)/bootInit.c 
DATASEGPAD	= $(CONFIG_ALL)/dataSegPad.c
CONFIG_ALL_H	= $(CONFIG_ALL)/configAll.h

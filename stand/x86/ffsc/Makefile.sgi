#!smake
#
# IRIX makefile for MMSC software
#
# NOTE that the MMSC software does not build under IRIX, it builds under
# the VxWorks development platform ("Tornado") which is currently PC-hosted.
# This makefile is mostly for handling workarea-related tasks, like cleaning
# and clobbering.
#

SUBDIRS = wind cdi sgi gui
TARGETS = mmscfw.bin mmscfw.bin.uu \
	  vxworks vxworks.sym vxworks.st \
	  bootrom bootrom.1 bootrom.2
LDIRT   = *~ symtbl.c localdefs.h

SUBDIR_MAKERULE = \
	if test ! -d $$d; then \
		echo "SKIPPING $$d: No such directory."; \
	else \
		echo "\t(cd $$d; $(MAKE) -f $(MAKEFILE) $${RULE:=$@})"; \
		(cd $$d; ${MAKE} -f $(MAKEFILE) $${RULE:=$@}); \
	fi
SUBDIRS_MAKERULE = \
	@for d in $(SUBDIRS); do $(SUBDIR_MAKERULE); done


.DEFAULT:
	@echo " "
	@echo "This is a VxWorks directory - compile these programs in a"
	@echo "VxWorks development environment such as Tornado."
	@echo " "


#
# Standard make targets
#
default: mmscfw.bin

install: mmscfw.bin
	$(INSTALL) -idb 'mach(CPUBOARD=IP27)' -m 644 -F /usr/cpu/firmware \
		   mmscfw.bin

#
# Targets for converting a uuencoded image into a shippable binary,
# and vice versa.
#
#   NOTE that there is no rule for making vxworks.st - that must be
#	 done on a PC with Tornado!
#
mmscfw.bin: mmscfw.bin.uu
	uudecode mmscfw.bin.uu

uu: vxworks.st
	uuencode vxworks.st mmscfw.bin > mmscfw.bin.uu

vxworks.st:
	@echo " "
	@echo "ERROR: the vxworks.st file MUST be created on a PC!"
	@echo " "
	exit 2


#
# General cleanup
#
clean:
	$(SUBDIRS_MAKERULE)
	rm -f *.o $(LDIRT)

clobber:
	$(SUBDIRS_MAKERULE)
	rm -f *.o $(LDIRT)
	rm -f $(TARGETS)


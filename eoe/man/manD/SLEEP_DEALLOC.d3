.if n .pH ddi.rm/d3/gen/SLEEP_DEALLO @(#)SLEEP_DEALLO	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.\" Copyright 1989 AT&T
.TH SLEEP_DEALLOC D3
.SH NAME
.upperok
\f4SLEEP_DEALLOC\f1, \f4SLEEP_DESTROY\f1 \- sleep lock de-initialization
.IX "\f4SLEEP_DEALLOC\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
void SLEEP_DEALLOC(sleep_t *\f2lockp\f1);

void SLEEP_DESTROY(sleep_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the sleep lock to be deallocated.
.RE
.SH DESCRIPTION
\f4SLEEP_DEALLOC\f1 de-initializes and deallocates the lock specified
by \f2lockp\f1.
\f4SLEEP_DESTROY\f1 de-initializes the lock specified by \f2lockp\f1.
.SS "Return Values"
None
.SH USAGE
Attempting to de-initialize or deallocate a lock that is
currently locked or is being
waited for is an error and results in undefined behavior.
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep
locks (other than the one being deallocated), may be held across
calls to this function.
.SH REFERENCES
.na
\f4SLEEP_ALLOC\f1(D3),
\f4SLEEP_INIT\f1(D3),
\f4SLEEP_LOCK\f1(D3),
\f4SLEEP_LOCK_SIG\f1(D3),
\f4SLEEP_LOCKAVAIL\f1(D3),
\f4SLEEP_TRYLOCK\f1(D3),
\f4SLEEP_UNLOCK\f1(D3)
.ad

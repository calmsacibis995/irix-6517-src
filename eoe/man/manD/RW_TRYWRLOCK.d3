.if n .pH ddi.rm/d3/gen/RW_TRYWRLOCK @(#)RW_TRYWRLOCK	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.TH RW_TRYWRLOCK D3
.SH NAME
\f4RW_TRYWRLOCK\f1 \- try to acquire a read/write lock in write mode
.IX "\f4RW_TRYWRLOCK\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
boolean_t RW_TRYWRLOCK(rwlock_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the read/write lock to be acquired.
.RE
.SH DESCRIPTION
If the lock specified by \f2lockp\f1 is immediately available
(can be acquired in write mode without sleeping)
the \f4RW_TRYWRLOCK\f1 function acquires the lock.
If the lock is not immediately available,
\f4RW_TRYWRLOCK\f1 returns without acquiring the lock.
.SS "Return Values"
\f4RW_TRYWRLOCK\f1 returns \f4TRUE\f1 (a non-zero value)
if the lock is successfully acquired
or \f4FALSE\f1 (zero) if the lock is not acquired.
.SH USAGE
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, and sleeping locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4RW_ALLOC\f1(D3),
\f4RW_INIT\f1(D3),
\f4RW_DEALLOC\f1(D3),
\f4RW_DESTROY\f1(D3),
\f4RW_RDLOCK\f1(D3),
\f4RW_WRLOCK\f1(D3),
\f4RW_TRYRDLOCK\f1(D3),
\f4RW_UNLOCK\f1(D3)
.ad

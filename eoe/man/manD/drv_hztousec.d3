.if n .pH ddi.rm/d3/gen/drv_hztousec @(#)drv_hztousec	43.9 of 11/27/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH drv_hztousec D3
.IX "\f4drv_hztousec\fP(D3)"
.SH NAME
\f4drv_hztousec\f1 \- convert clock ticks to microseconds
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/ddi.h>
.sp 0.4
clock_t drv_hztousec(clock_t \f2ticks\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2ticks\f1" 10n
The number of clock ticks to convert to equivalent microseconds.
.RE
.SH DESCRIPTION
\f4drv_hztousec\f1 converts the length of time expressed by
\f2ticks\f1, which is in units of clock ticks,
into units of microseconds.
.SS "Return Values"
\f4drv_hztousec\f1 returns the number of microseconds
equivalent to the \f2ticks\f1 argument.
No error value is returned.
If the microsecond equivalent to \f2ticks\f1
is too large to be represented as a \f4clock_t\f1,
then the maximum \f4clock_t\f1 value is returned.
.SH USAGE
Several functions either take time values expressed in clock ticks as
arguments [\f4itimeout\f1(D3), \f4delay\f1(D3)]
or return time values expressed in clock ticks [\f4drv_getparm\f1(D3)].
The length of a clock tick can vary across different implementations,
and therefore drivers should not include any hard-coded assumptions
about the length of a tick.
\f4drv_hztousec\f1 and the complementary function
\f4drv_usectohz\f1(D3) can be used, as necessary, to convert between clock
ticks and microseconds.
.P
Note that the time value returned by \f4drv_getparm\f1
with an \f4LBOLT\f1 argument
will frequently be too large to represent in microseconds as a \f4clock_t\f1.
When using \f4drv_getparm\f1 together with \f4drv_hztousec\f1 to time
operations, drivers can help avoid overflow by converting the difference
between return values from successive calls to \f4drv_getparm\f1 instead
of trying to convert the return values themselves.
.SS Level
Initialization, Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4delay\fP(D3),
\f4drv_getparm\fP(D3),
\f4drv_usectohz\fP(D3),
\f4itimeout\fP(D3)
.ad

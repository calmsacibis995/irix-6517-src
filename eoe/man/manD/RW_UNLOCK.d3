.if n .pH ddi.rm/d3/gen/RW_UNLOCK @(#)RW_UNLOCK	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.TH RW_UNLOCK D3
.SH NAME
\f4RW_UNLOCK\f1 \- release a read/write lock
.IX "\f4RW_UNLOCK\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
void RW_UNLOCK(rwlock_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the read/write lock to be released.
.RE
.SH DESCRIPTION
\f4RW_UNLOCK\f1 releases the read/write lock specified by \f2lockp\f1.
If there are processes waiting for the lock, either one process waiting
to obtain the lock in write mode, or all processes waiting to
obtain the lock read mode will return with the lock acquired.
.SS "Return Values"
None
.SH USAGE
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4RW_ALLOC\f1(D3)
\f4RW_INIT\f1(D3)
\f4RW_DEALLOC\f1(D3),
\f4RW_DESTROY\f1(D3),
\f4RW_RDLOCK\f1(D3),
\f4RW_WRLOCK\f1(D3),
\f4RW_TRYRDLOCK\f1(D3),
\f4RW_TRYWRLOCK\f1(D3),
.ad

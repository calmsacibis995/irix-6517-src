.TH badaddr D3X
.SH NAME
\f4badaddr\f1 \- test for valid input bus address
.br
\f4badaddr_val\f1 \- test for valid input device address and return value
.SH SYNOPSIS
.nf
\f4#include <sys/types.h>
#include <sys/systm.h>
int badaddr(volatile void *\f1\f2addr\f1\f4,\c
 int \f1\f2size\f1\f4);
\f4int badaddr_val(volatile void *\f1\f2addr\f1\f4,\c
 int \f1\f2size\f1\f4,\c
 void *\f2ptr\fP);\f1
.fi
.SS Arguments
.TP
\f2addr\f1
The VME bus address to be probed.
.TP
\f2size\f1
The size in bytes to probe the bus: 1, 2, 4, or 8.
.TP
\f2ptr\f1
A pointer to a variable of the specified \f2size\f1
(char, short, int, or long long)
into which the value read is placed.
.SH DESCRIPTION
Typically these functions are called from a VME device driver's
\f4init\f1(D2) or \f4edtinit\f1(D2) function to determine
whether a device is present in the system.
.PP
Call \f4badaddr()\f1 to determine whether you can read the specified
physical address.
.PP
Call \f4badaddr_val()\f1 when you also want to use the value read from
the test address.
This saves the time of another uncached memory access to read the
address after it has been found to be valid.
.SH NOTES
Passing an invalid \f2size\f1 will result in a system panic.
.PP
These functions may not be called from an interrupt handler
or from routines that may be called from an interrupt handler.
.PP
These functions are designed for systems in which device addresses
have a fixed mapping into the physical memory space.
Depending on the system and the hardware attachment, device addresses
may be mapped dynamically.
In those cases, \f4pio_badaddr\f1(D3X) must be used.
.PP
It is possible that the \f4badaddr_val()\f1 function may changed
or removed in the future.
.SS "Return Values"
When the addressed location is accessible, both functions return 0.
Otherwise, both return 1 and \f4badaddr_val()\f1 does not modify
the variable at \f2ptr\f1.
.SS "See Also"
pio_badaddr(D3X),
pio_wbadaddr(D3X),
wbadaddr(D3X).

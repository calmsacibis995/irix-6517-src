.TH scsi_abort D3X
.SH NAME
scsi_abort \- abort a command previously issued by scsi_command
.SH SYNOPSIS
.nf
.ft 3
#include <sys/types.h>
#include <sys/scsi.h>
.sp .8v
void
(*scsi_abort)(struct scsi_request *\f2req\fP);
.ft 1
.fi
.SH DESCRIPTION
The host adapter driver
.I scsi_abort
function
aborts a command previously issued through the scsi_command
interface.  If the
command has been completed, or is not otherwise found in the
driver or host adapter queues, scsi_abort does nothing.
The caller (a kernel level SCSI device driver)
passes in a scsi_request structure corresponding to the command
to be aborted.
.P
There is no kernel object called scsi_abort; rather,
there is a pointer to each host adapter's scsi_abort function
in the sci_abort field of the scsi_ctlr_info structure, which
is attached to the vertex corresponding to the host adapter.
.P
The
.I sr_lun_vhdl
field of the request structure must contain the vertex handle of the
device.
A kernel panic will result if this is not done.
.P
The scsi_abort function returns 0 if the abort was unable to be
sent; otherwise it returns 1.
.SH NOTES
.I scsi_abort
is stored as a function pointer in the information
hanging off the vertex handle corresponding to the
host adapter in the hwgraph.
Given a
.I lun_vhdl
(vertex handle of the device)
the scsi_abort function can be called as follows:
.Ex
    scsi_lun_info_t *scsi_lun_info;
  ...
    scsi_lun_info = scsi_lun_info_get(lun_vhdl);
    SLI_ABORT(scsi_lun_info)(scsi_request);
.Ee
.SH SEE ALSO
comments in /usr/include/sys/scsi.h,
hwgraph.intro(D4X),
scsi_alloc(D3X),
scsi_free(D3X),
scsi_info(D3X),
scsi_command(D3X),
scsi_ioctl(D3X),
SCSI chapter of the IRIX Device Driver Programmer's Guide

.TH "hwgraph.inv" D3X
.SH NAME
\f4hwgraph.inv:\f1 device_inventory_add, device_inventory_get_next,
device_controller_num_get, device_controller_num_set \- device inventory information
.SH SYNOPSIS
.nf
.ft 3
#include <sys/types.h>
#include <sys/hwgraph.h>
#include <sys/ddi.h>
#include <sys/invent.h>
.sp .8v
void
device_inventory_add(dev_t \f2device\fP, 
                     int \f2class\fP, 
                     int \f2type\fP, 
                     major_t \f2ctlr\fP, 
                     minor_t \f2unit\fP, 
                     int \f2state\fP);
.sp .8v
inventory_t *
device_inventory_get_next(dev_t \f2device\fP, invplace_t * \f2place\fP);
.sp .8v
void
device_controller_num_set(dev_t \f2device\fP, int \f2ctlr\fP);
.sp .8v
int
device_controller_num_get(dev_t \f2device\fP);
.ft 1
.fi
.SS Arguments
.IP "\f2class\fP" 12n
Inventory class to assign, from sys/invent.h.
.IP "\f2ctlr\fP" 12n
Controller sequence number to assign.
.IP "\f2device\fP" 12n
Vertex handle of a device vertex.
.IP "\f2place\fP" 12n
Address of a variable to hold the
current position in a scan of inventory records.
.IP "\f2state\fP" 12n
Arbitrary device state to assign.
.IP "\f2type\fP" 12n
Inventory device type to assign, from sys/invent.h.
.IP "\f2unit\fP" 12n
Device unit number to assign.
.SH DESCRIPTION
These functions manage the hardware inventory information.
In previous releases of IRIX, the hardware inventory as
reported by
.IR hinv (1)
and
.IR getinvent (3)
was maintained as a table in kernel memory.
Now the same information is distributed throughout the hwgraph.
After creating a device vertex as described in
.IR hwgraph.dev (D3X),
the driver can attach inventory information to the new vertex using
.IR device_inventory_add ().
.P
Normally only a single inventory record is attached to a vertex,
but multiple records are supported.
To read the first or all inventory records call
.IR device_inventory_get_next ().
Initially the variable addressed by
.I place
should contain NULL to indicate "first."
The first inventory record is returned (if any exist),
and the position is noted.
Subsequent calls return further records if they exist.
.P
To read out the controller number from the first or only
inventory record, call
.IR device_controller_num_get ().
This is the means of discovering the controller number
assigned by the
.IR ioconfig (1)
program.
.SH DIAGNOSTICS
.IR device_inventory_get_next ()
returns NULL when no (further) inventory record exists.
.SH SEE ALSO
hinv(1),
ioconfig(1),
getinvent(3),
hwgraph.dev(D3X),
hwgraph.intro(D4X).

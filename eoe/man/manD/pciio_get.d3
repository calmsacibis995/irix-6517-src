.TH pciio_get D3
.SH NAME
pciio_get: pciio_intr_dev_get,
pciio_intr_cpu_get,
pciio_pio_dev_get,
pciio_pio_slot_get,
pciio_pio_space_get,
pciio_pio_pciaddr_get,
pciio_pio_mapsz_get,
pciio_dma_dev_get,
pciio_dma_slot_get,
pciio_info_get,
pciio_info_dev_get,
pciio_info_bus_get,
pciio_info_slot_get,
pciio_info_function_get,
pciio_info_vendor_id_get,
pciio_info_device_id_get \- interrogate PCI infrastructure
.\" **********************
.SH SYNOPSIS
.\" **********************
.nf
.ft 3
#include <sys/PCI/pciio.h>
.sp .8v
vertex_hdl_t
pciio_intr_dev_get(pciio_intr_t \f2intr\fP)
.sp .8v
vertex_hdl_t
pciio_intr_cpu_get(pciio_intr_t \f2intr\fP)
.sp .8v
vertex_hdl_t
pciio_pio_dev_get(pciio_piomap_t \f2piomap\fP)
.sp .8v
pciio_slot_t
pciio_pio_slot_get(pciio_piomap_t \f2piomap\fP)
.sp .8v
pciio_space_t
pciio_pio_space_get(pciio_piomap_t \f2piomap\fP)
.sp .8v
iopaddr_t
pciio_pio_pciaddr_get(pciio_piomap_t \f2piomap\fP)
.sp .8v
ulong
pciio_pio_mapsz_get(pciio_piomap_t \f2piomap\fP)
.sp .8v
vertex_hdl_t
pciio_dma_dev_get(pciio_dmamap_t \f2dmamap\fP)
.sp .8v
pciio_slot_t
pciio_dma_slot_get(pciio_dmamap_t \f2dmamap\fP)
.sp .8v
pciio_info_t
pciio_info_get(vertex_hdl_t \f2vhdl\fP)
.sp .8v
vertex_hdl_t
pciio_info_dev_get(pciio_info_t \f2info\fP)
.sp .8v
pciio_bus_t
pciio_info_bus_get(pciio_info_t \f2info\fP)
.sp .8v
pciio_slot_t
pciio_info_slot_get(pciio_info_t \f2info\fP)
.sp .8v
pciio_function_t
pciio_info_function_get(pciio_info_t \f2info\fP)
.sp .8v
pciio_vendor_id_t
pciio_info_vendor_id_get(pciio_info_t \f2info\fP)
.sp .8v
pciio_device_id_t
pciio_info_device_id_get(pciio_info_t \f2info\fP)\f1
.ft 1
.fi
.\" **********************
.SS Arguments
.\" **********************
.IP "\f2intr\fP" 8n
A PCI interrupt object handle returned by
.IR pciio_intr_alloc ().
.IP "\f2piomap\fP" 8n
A PCI PIO map returned by
.IR pciio_piomap_alloc ().
.IP "\f2dmamap\fP" 8n
is a pciio_dmamap_t that was created by
.IR pciio_dmamap_alloc ().
.IP "\f2vhdl\fP" 8n
A pci connection point in the hardware graph,
obtained as the parameter to the attach call.
.IP "\f2info\fP" 8n
A PCI info object returned by
.IR pciio_info_get ().
.\" **********************
.SH DESCRIPTION
.\" **********************
These routines are used to pull specific useful
bits of information out of the various opaque
data structures used by the PCI infrastructure.
Few drivers will need to make use of these routines,
but having them available might save the driver
from doing extra bookkeeping.
.SS "Interrupt Queries"
Two functions fetch parameters from an interrupt object:
.IP \(bu 4n
.IR pciio_intr_dev_get ()
returns the connection point of the interrupt device.
.IP \(bu 4n
.IR pciio_intr_cpu_get ()
returns the CPU that is the target of interrupts for
that PCI bus.
.SS "PIO Map Queries"
Several functions return items based on a PIO map (see
.IR pciio_pio (D3)):
.IP \(bu 4n
.IR pciio_pio_dev_get ()
returns the connection point of the mapped device.
.IP \(bu 4n
.IR pciio_pio_mapsz_get ()
returns the map maximum size.
.IP \(bu 4n
.IR pciio_pio_pciaddr_get ()
returns the base address specified for the map.
.IP \(bu 4n
.IR pciio_pio_space_get ()
returns the target address space that was specified.
.IP \(bu 4n
.IR pciio_pio_slot_get ()
returns the slot number on the PCI bus for a device.
.SS "DMA Map Queries"
Two functions return items based on a DMA as map (see
.IR pciio_dma (D3)):
.IP \(bu 4n
.IR pciio_dma_dev_get ()
returns the connection point of the mapped device.
.IP \(bu 4n
.IR pciio_dma_slot_get ()
returns the slot number on the PCI bus for a device.
.SS "Info Structure Queries"
The PCI infrastructure stores a version-dependent information
structure in the connection point for a PCI device.
Several functions are provided to retrieve and interrogate this structure.
Those most likely to be useful to a device driver are:
.IP \(bu 4n
.IR pciio_info_get ()
returns a handle to the information structure.
The driver can save this handle at attach time to avoid the small
overhead of looking it up each time it is needed.
.IP \(bu 4n
.IR pciio_info_dev_get ()
returns the vertex handle of the connection point (from which
the information structure was originally retrieved).
.IP \(bu 4n
.IR pciio_info_bus_get ()
returns the bus number, always 0 unless the system has
a PCI to PCI Bridge.
.IP \(bu 4n
.IR pciio_info_slot_get ()
returns the PCI card slot number of the device.
.IP \(bu 4n
.IR pciio_info_function_get ()
returns the PCI function number
(0 unless this device is on a multifunction card).
.IP \(bu 4n
.IR pciio_info_vendor_id_get ()
returns the vendor ID configuration value of the device.
.IP \(bu 4n
.IR pciio_info_device_id_get ()
returns the device ID configuration value of the device.
.\" **********************
.SH "NOTES"
.\" **********************
.PP
Bus numbers are arbitrary, not necessarily sequential,
and may not be unique in large systems; they are only
guaranteed to be unique across all busses that are
connected by PCI-to-PCI Bridges.
.\" **********************
.SH "SEE ALSO"
.\" **********************
pciio(D3),
pciio_config(D3),
pciio_dma(D3),
pciio_error(D3),
pciio_intr(D3),
pciio_pio(D3).
.\" **********************
.SH DIAGNOSTICS
.\" **********************
.IR pciio_info_get ()
returns NULL if there is no pciio info
structure attached to that vertex.
.P
Do not pass
.I info
as NULL to any of these functions,
that would cause a kernel panic.

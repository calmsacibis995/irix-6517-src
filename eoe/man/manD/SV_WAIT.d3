.if n .pH ddi.rm/d3/gen/SV_WAIT @(#)SV_WAIT	43.11 of 12/5/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.TH SV_WAIT D3
.SH NAME
\f4SV_WAIT\f1 \- sleep on a synchronization variable
.IX "\f4SV_WAIT\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
void SV_WAIT(sv_t *\f2svp\f1, void *\f2lkp\f1, int \f2rv\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2svp\f1" 10n
Pointer to the synchronization variable on which to sleep.
.IP "\f2lkp\f1" 10n
Pointer to either a basic lock or a mutual exclusion lock.
.IP "\f2rv\f1" 10n
Return value from LOCK(D3), or 0.
.RE
.SH DESCRIPTION
\f4SV_WAIT\f1 causes the calling process to go to sleep waiting for
a call to \f4SV_SIGNAL\f1 or \f4SV_BROADCAST\f1 for the synchronization
variable specified by \f2svp\f1.
.P
The lock specified by \f2lkp\f1 must be held by the caller upon entry.
The lock is released after the process is queued on the synchroniation
variable -- when the caller returns from \f4SV_WAIT\f1 the lock is not held.
If \f2lkp\f1 specifies a basic lock, \f2rv\f1 must specify the return
value from the lock acquisition call;
if \f2lkp\f1 specifies a mutual exclusion (sleeping) lock, \f2rv\f1 must be 0.
.SS "Return Values"
None
.SS Level
Base only.
.SS "Synchronization Constraints"
Will sleep.
.P
Driver-defined basic locks (with the exception of the lock specified
by \f2lkp\f1) may not be held across calls to this function.
.P
Driver-defined sleep locks may be held across calls to this function.
.SH REFERENCES
.na
\f4LOCK\f1(D3),
\f4UNLOCK\f1(D3),
\f4MUTEX_LOCK\f1(D3),
\f4MUTEX_UNLOCK\f1(D3),
\f4SV_ALLOC\f1(D3),
\f4SV_INIT\f1(D3),
\f4SV_DEALLOC\f1(D3),
\f4SV_DESTROY\f1(D3),
\f4SV_WAIT_SIG\f1(D3),
\f4SV_SIGNAL\f1(D3),
\f4SV_BROADCAST\f1(D3).
.ad

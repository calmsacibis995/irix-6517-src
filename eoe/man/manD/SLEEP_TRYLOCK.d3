.if n .pH ddi.rm/d3/gen/SLEEP_TRYLOC @(#)SLEEP_TRYLOC	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.TH SLEEP_TRYLOCK D3
.SH NAME
\f4SLEEP_TRYLOCK\f1 \- try to acquire a sleep lock
.IX "\f4SLEEP_TRYLOCK\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
boolean_t SLEEP_TRYLOCK(sleep_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the sleep lock to be acquired.
.RE
.SH DESCRIPTION
If the lock specified by \f2lockp\f1 is immediately available
(can be acquired without sleeping)
the \f4SLEEP_TRYLOCK\f1 function acquires the lock.
If the lock is not immediately available,
\f4SLEEP_TRYLOCK\f1 returns without acquiring the lock.
.SS "Return Values"
\f4SLEEP_TRYLOCK\f1 returns \f4TRUE\f1 (a non-zero value)
if the lock is successfully acquired
or \f4FALSE\f1 (zero) if the lock is not acquired.
.SH USAGE
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4SLEEP_ALLOC\f1(D3),
\f4SLEEP_INIT\f1(D3),
\f4SLEEP_DEALLOC\f1(D3),
\f4SLEEP_DESTROY\f1(D3),
\f4SLEEP_LOCK\f1(D3),
\f4SLEEP_LOCK_SIG\f1(D3),
\f4SLEEP_LOCKAVAIL\f1(D3),
\f4SLEEP_UNLOCK\f1(D3)
.ad

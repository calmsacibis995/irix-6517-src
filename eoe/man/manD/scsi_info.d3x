.TH scsi_info D3X
.SH NAME
scsi_info \- get information about a SCSI device
.SH SYNOPSIS
.nf
.ft 3
#include <sys/types.h>
#include <sys/scsi.h>
.sp .8v
struct scsi_target_info *
(*scsi_info)(vertex_hdl_t \f2lun_vhdl\fP);
.ft 1
.fi
.SH DESCRIPTION
The host adapter
.I scsi_info
function
issues an Inquiry command to the device corresponding to
.IR lun_vhdl ,
returning a pointer to a
.I scsi_target_info
structure, which contains at least the following fields:
.Ex
   u_char    *si_inq;       /* inquiry data */
   u_char    *si_sense;     /* sense data from last request sense */
   u_char     si_maxq;      /* maximum queue depth for driver */
   u_char     si_qdepth;    /* max queue depth so far */
   u_char     si_qlimit:1;  /* boolean "max queue depth reached"? */
   uint       si_ha_status; /* SRH_* status bits, if supported */
.Ee
.P
There is no kernel object called scsi_info; rather,
there is a pointer to each host adapter's scsi_info function
in the sci_info field of the scsi_ctlr_info structure, which
is attached to the vertex corresponding to the host adapter.
.SH DIAGNOSTICS
If the given device does not exist,
or there is an error getting the data,
NULL\f1 is returned.
.SH NOTES
.I scsi_info
is stored as a function pointer in the information
hanging off the vertex handle corresponding to the
host adapter in the hwgraph.
Given a
.I lun_vhdl
(vertex handle of the device)
the scsi_info function can be called as follows:
.Ex
    scsi_lun_info_t 		*scsi_lun_info;
    scsi_target_info_t		*scsi_info;
  ...
    scsi_lun_info = scsi_lun_info_get(lun_vhdl);
    SLI_INFO(scsi_lun_info)(lun_vhdl);
    scsi_info = (*(SCI_INQ(
               		STI_CTLR_INFO(
                   		SLI_TARG_INFO(scsi_lun_info)))))(lun_vhdl);
.Ee
.SH SEE ALSO
comments in /usr/include/sys/scsi.h,
hwgraph.intro(D4X),
scsi_alloc(D3X),
scsi_command(D3X),
scsi_free(D3X),
scsi_ioctl(D3X),
scsi_abort(D3X),
SCSI chapter of the IRIX Device Driver Programmer's Guide

.TH "hwgraph.lblinfo" D3X
.SH NAME
\f4hwgraph.lblinfo:\f1
hwgraph_info_add_LBL,
hwgraph_info_remove_LBL,
hwgraph_info_replace_LBL,
hwgraph_info_get_LBL,
hwgraph_info_export_LBL,
hwgraph_info_unexport_LBL \- manage labelled info in the hwgraph
.SH SYNOPSIS
.nf
.ft 3
#include <sys/types.h>
#include <sys/hwgraph.h>
#include <sys/ddi.h>
.sp .8v
graph_error_t
hwgraph_info_add_LBL(vertex_hdl_t \f2vhdl\fP,
				char *\f2info_name\fP,
				arbitrary_info_t \f2info\fP);
.sp .8v
graph_error_t
hwgraph_info_remove_LBL(vertex_hdl_t \f2vhdl\fP,
				char *\f2info_name\fP,
				arbitrary_info_t *\f2info_ptr\fP);
.sp .8v
graph_error_t
hwgraph_info_replace_LBL(vertex_hdl_t \f2vhdl\fP,
				char *\f2info_name\fP,
				arbitrary_info_t \f2info\fP,
				arbitrary_info_t *\f2info_ptr\fP);
.sp .8v
graph_error_t
hwgraph_info_get_LBL(vertex_hdl_t \f2vhdl\fP,
				char *\f2info_name\fP,
				arbitrary_info_t *\f2info_ptr\fP);
.sp .8v
graph_error_t
hwgraph_info_export_LBL(vertex_hdl_t \f2vhdl\fP,
				char *\f2info_name\fP,
				int \f2numbytes\fP);
.sp .8v
graph_error_t
hwgraph_info_unexport_LBL(vertex_hdl_t \f2vhdl\fP,
				char *\f2info_name\fP);\f1
.ft 1
.fi
.SS Arguments
.IP "\f2info\fP" 12n
Arbitrary info value to associate with
.I info_name
in the future.
.IP "\f2info_name\fP"
Address of the label string to be created or queried.
.IP "\f2info_ptr\fP" 12n
pointer to a field to receive the info currently associated with
.IR info_name ,
or NULL if the current value is not needed.
.IP "\f2numbytes\fP" 12n
Length of information addressed by the pointer associated with
.IR info_name ,
or 0 to indicate that the info info word itself is the exported data.
.IP "\f2vhdl\fP" 12n
Handle of an existing vertex.
.SH DESCRIPTION
These functions operate on a vertex in the hardware graph
to add, remove, atomically replace, retrieve, export, and unexport
labeled information.
Typical device drivers do not need to use any of these operations.
.P
Exported labelled information on a vertex is visible to
user-level processes as an extended file attribute (see
.IR attr_get (2))
on the /hw special file corresponding to that vertex.
By this means, the driver can export data to programs
running as user-level processes.
.SH DIAGNOSTICS
All return GRAPH_SUCCESS when the operation completes successfully,
or a failure code as defined in
.IR hwgraph.intro (D4X)
when the operation does not complete  successfully.
.SH SEE ALSO
attr_get(2),
hwgraph(4),
hwgraph.intro(D4X).


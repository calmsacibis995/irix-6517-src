.if n .pH ddi.rm/d3/gen/SV_DEALLO @(#)SV_DEALLO	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.\" Copyright 1989 AT&T
.TH SV_DEALLOC D3
.SH NAME
.upperok
\f4SV_DEALLOC\f1, \f4SV_DESTROY\f1 \- syncronization variable de-initialization
.IX "\f4SV_DEALLOC\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
void SV_DEALLOC(sv_t *\f2svp\f1);

void SV_DESTROY(sv_t *\f2svp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2svp\f1" 10n
Pointer to the synchronization variable to be deallocated.
.RE
.SH DESCRIPTION
\f4SV_DEALLOC\f1 de-initializes and deallocates the synchronization variable
specified by \f2svp\f1.
\f4SV_DESTROY\f1 de-initializes the sync variable
specified by \f2svp\f1.
.SS "Return Values"
None
.SH USAGE
Attempting to de-initialize or deallocate a sync variable on which
callers are currently waiting
is an error and results in undefined behavior.
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep
locks (other than the one being deallocated), may be held across
calls to this function.
.SH REFERENCES
.na
\f4SV_ALLOC\f1(D3),
\f4SV_INIT\f1(D3),
\f4SV_WAIT\f1(D3),
\f4SV_WAIT_SIG\f1(D3),
\f4SV_SIGNAL\f1(D3),
\f4SV_BROADCAST\f1(D3).
.ad

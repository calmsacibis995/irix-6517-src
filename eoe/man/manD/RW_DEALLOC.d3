.if n .pH ddi.rm/d3/gen/RW_DEALLOC @(#)RW_DEALLOC	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.\" Copyright 1989 AT&T
.TH RW_DEALLOC D3
.SH NAME
.upperok
\f4RW_DEALLOC\f1, \f4RW_DESTROY\f1 \- read/write lock de-initialization
.IX "\f4RW_DEALLOC\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
void RW_DEALLOC(rwlock_t *\f2lockp\f1);

void RW_DESTROY(rwlock_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the sleep lock to be deallocated.
.RE
.SH DESCRIPTION
\f4RW_DEALLOC\f1 de-initializes and deallocates the lock specified
by \f2lockp\f1.
\f4RW_DESTROY\f1 de-initializes the lock specified by \f2lockp\f1.
.SS "Return Values"
None
.SH USAGE
Attempting to de-initialize or deallocate a lock that is
currently locked or is being
waited for is an error and results in undefined behavior.
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, and sleeping locks
(other than the one being deallocated or deinitialized), may be held across
calls to these functions.
.SH REFERENCES
.na
\f4RW_ALLOC\f1(D3),
\f4RW_INIT\f1(D3),
\f4RW_RDLOCK\f1(D3),
\f4RW_WRLOCK\f1(D3),
\f4RW_TRYRDLOCK\f1(D3),
\f4RW_TRYWRLOCK\f1(D3),
\f4RW_UNLOCK\f1(D3)
.ad

.if n .pH ddi.rm/d3/gen/geteminor @(#)geteminor	43.11 of 12/7/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH geteminor D3
.IX "\f4geteminor\fP(D3)"
.SH "NAME" 
\f4geteminor\f1 \- get external minor device number
.IX "minor device number, external"
.SH "SYNOPSIS" 
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/ddi.h>
.sp 0.4
minor_t geteminor(dev_t \f2dev\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2dev\f1" 10n
External device number.
.RE
.SH DESCRIPTION 
\f4geteminor\f1 returns the external minor number given a device number, \f2dev\f1.
.SS "Return Values"
The external minor number.
.SH USAGE
External minor numbers are visible to the user.
Internal minor numbers are only visible in the kernel.
Since, on some architectures,
a driver can support more than one external major device
that maps to the same internal major device,
the kernel keeps a mapping between external minor numbers
and internal minor numbers to allow drivers to index arrays more easily.
For example, a driver may support two devices, each with five minor numbers.
The user may see each set of minor numbers numbered from zero to four,
but the driver sees them as one set of minor numbers numbered from zero to nine.
.P
All driver entry points are passed device numbers using external minor numbers.
.P
Systems that map external major device numbers one-to-one with internal
major numbers also map external minor numbers one-to-one with internal minor numbers.
.SS Level
Initialization, Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4etoimajor\fP(D3),
\f4getemajor\fP(D3),
\f4getmajor\fP(D3),
\f4getminor\fP(D3),
\f4makedevice\fP(D3)
.ad

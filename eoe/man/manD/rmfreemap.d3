.if n .pH ddi.rm/d3/gen/rmfreemap @(#)rmfreemap	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.\" Copyright 1989 AT&T
.TH rmfreemap D3
.SH NAME
\f4rmfreemap\f1 \- free a private space management map
.IX "\f4rmfreemap\fP(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/map.h>
#include <sys/ddi.h>
.sp 0.4
void rmfreemap(struct map *\f2mp\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2mp\f1" 10n
Pointer to the map to be freed.
.RE
.SH DESCRIPTION
\f4rmfreemap\f1 frees the map pointed to by \f2mp\f1.
.SS "Return Values"
None
.SH USAGE
The \f4map\fP structure array pointed to by \f2mp\f1 must have been previously
allocated by a call to \f4rmallocmap\fP(D3).
.P
Before freeing the map, the caller must ensure that nobody is using space
managed by the map, and that nobody is waiting for space in the map.
.SS Level
Initialization, Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4rmalloc\fP(D3),
\f4rmalloc_wait\fP(D3),
\f4rmallocmap\fP(D3),
\f4rmfree\fP(D3)
.ad

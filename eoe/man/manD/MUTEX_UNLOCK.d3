.if n .pH ddi.rm/d3/gen/MUTEX_UNLOCK @(#)MUTEX_UNLOCK	43.7 of 11/27/92
.\" Copyright 1995, Silicon Graphics Computer Systems
.TH MUTEX_UNLOCK D3
.SH NAME
\f4MUTEX_UNLOCK\f1 \- release a mutual exclusion lock
.IX "\f4MUTEX_UNLOCK\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
void MUTEX_UNLOCK(mutex_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the mutual exclusion lock to be released.
.RE
.SH DESCRIPTION
\f4MUTEX_UNLOCK\f1 releases the mutual exclusion lock specified by \f2lockp\f1.
If there are processes waiting for the lock, the process with the highest
priority (at the time the process was blocked) is activated.
.P
Only the process which acquired the lock (via \f4MUTEX_LOCK\f1 or
\f4MUTEX_TRYLOCK\f1) may release it.
.SS "Return Values"
None
.SH USAGE
.SS Level
Base only.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks and sleeping locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4MUTEX_ALLOC\f1(D3),
\f4MUTEX_INIT\f1(D3),
\f4MUTEX_DEALLOC\f1(D3),
\f4MUTEX_DESTROY\f1(D3),
\f4MUTEX_LOCK\f1(D3),
\f4MUTEX_TRYLOCK\f1(D3),
\f4MUTEX_OWNED\f1(D3),
\f4MUTEX_MINE\f1(D3).
.ad

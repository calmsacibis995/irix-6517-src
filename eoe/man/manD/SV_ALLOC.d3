.if n .pH ddi.rm/d3/gen/SV_ALLOC @(#)SV_ALLOC	43.12 of 12/7/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.\" Copyright 1989 AT&T
.TH SV_ALLOC D3
.SH NAME
.upperok
\f4SV_ALLOC\f1, \f4SV_INIT\f1 \- synchronization variable initialization
.IX "\f4SV_ALLOC\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/kmem.h>
#include <sys/ksynch.h>
#include <sys/ddi.h>
#include <sys/sema.h>
.sp 0.4
sv_t *SV_ALLOC(int type, int flag, char *name);

void SV_INIT(sv_t *svp, int type, char *name);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2svp\f1" 10n
Pointer to uninitialized synchronization variable.
.IP "\f2type\f1" 10n
Specifies the order in which threads of execution that are waiting on
the syncronization variable are dequeued when \f4SV_SIGNAL\f1 or
\f4SV_BROADCAST\f1 are called.
.IP "\f2flag\f1" 10n
Specifies whether the caller is willing to sleep waiting for memory.
.IP "\f2name\f1" 10n
Ascii string assocated with the syncronization object.
.RE
.SH DESCRIPTION
\f4SV_ALLOC\f1 dynamically allocates and initializes an instance of a
synchronization variable.
\f4SV_INIT\f1 initializes an instance of a synchronization variable.
.P
If \f2type\f1 is set to either \f4SV_DEFAULT\f1 or \f4SV_FIFO\f1,
waiting threads of execution are wakened in first-in, first-out order;
if the type is \f4SV_LIFO\f1, they are dequeued in first-in, last-out
order.
If the syncronization variable is of type \f4SV_PRIO\f1, waiters will
be processed in priority order.
.P
If \f2flag\f1 is set to \f4KM_SLEEP\f1, the caller of \f4SV_ALLOC\f1
will sleep if necessary until sufficient memory is available.
If \f2flag\f1 is set to \f4KM_NOSLEEP\f1, the caller will not sleep,
but \f4SV_ALLOC\f1 will return \f4NULL\f1 if sufficient memory is not
immediately available.
.P
The \f2name\f1 argument is only used if the metering sleep-locks
package is installed.
A null \f2name\f1 is ignored.
.SS "Return Values"
Upon successful completion, \f4SV_ALLOC\f1 returns a pointer to the newly
allocated lock.
If \f4KM_NOSLEEP\f1 is specified and sufficient memory is not immediately
available, \f4SV_ALLOC\f1 returns a \f4NULL\f1 pointer.
.SH USAGE
.SS Level
Base or Initialization.
.SS "Synchronization Constraints"
\f4SV_ALLOC\f1 may sleep if flag is set to \f4KM_SLEEP\f1.
.P
Driver-defined basic locks and read/write locks may
be held across calls to this function if \f2flag\f1 is \f4KM_NOSLEEP\f1
but may not be held if \f2flag\f1 is \f4KM_SLEEP\f1.
.P
Driver-defined sleep locks may be held
across calls to this function regardless of the value of \f2flag\f1.
.SH REFERENCES
.na
\f4SV_DEALLOC\f1(D3),
\f4SV_DESTROY\f1(D3),
\f4SV_WAIT\f1(D3),
\f4SV_WAIT_SIG\f1(D3),
\f4SV_SIGNAL\f1(D3),
\f4SV_BROADCAST\f1(D3).
.ad

.if n .pH ddi.rm/d3/gen/esballoc @(#)esballoc	43.12 of 12/1/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH esballoc D3
.IX "\f4esballoc\fP(D3)"
.SH NAME
\f4esballoc\f1 \- allocate a message block using an externally-supplied buffer
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/stream.h>
#include <sys/ddi.h>
.sp 0.4
mblk_t *esballoc(uchar_t *\f2base\fP, int \f2size\fP, int \f2pri\fP, frtn_t *\f2fr_rtnp\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2base\f1" 10n
Address of driver-supplied data buffer.
.IP "\f2size\f1" 10n
Number of bytes in data buffer.
.IP "\f2pri\f1" 10n
Priority of allocation request (used to allocate the message and data blocks).
.IP "\f2fr_rtnp\f1" 10n
Pointer to the free-routine data structure.
.RE
.SH DESCRIPTION
\f4esballoc\f1 creates a STREAMS message and attaches a driver-supplied
data buffer in place of a STREAMS data buffer.
It allocates a message and data block header only.
The driver-supplied data buffer, pointed to by \f2base\f1,
is used as the data buffer for the message.
.P
When \f4freeb\f1(D3) is called to free the message,
on the last reference to the message,
the driver's free-routine,
specified by the \f4free_func\fP field in the \f4free_rtn\fP(D4) structure,
is called with one argument,
specified by the \f4free_arg\fP field,
to free the data buffer.
.SS "Return Values"
On success, a pointer to the newly allocated message block is returned.
On failure, \f4NULL\f1 is returned.
.SH USAGE
Instead of requiring a specific number of arguments,
the \f4free_arg\f1 field is defined of type \f4char *\f1.
This way, the driver can pass a pointer to a structure
if more than one argument is needed.
.P
When the \f4free_func\f1 function runs,
interrupts from all STREAMS devices will be blocked.
It has no user context and may not call any routine that sleeps.
The function may not access any dynamically allocated data structures that
might no longer exist when it runs.
.P
The \f2pri\fP argument is no longer used, but is retained for compatibility.
Some implementations may choose to ignore this argument.
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4allocb\fP(D3),
\f4esbbcall\fP(D3),
\f4freeb\fP(D3),
\f4free_rtn\fP(D4)
.ad

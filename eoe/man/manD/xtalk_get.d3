.TH xtalk_get D3
.IX "\f4xtalk_dma_dev_get\f1(D3)"
.IX "\f4xtalk_dma_slot_get\f1(D3)"
.IX "\f4xtalk_intr_addr_get\f1(D3)"
.IX "\f4xtalk_intr_cpu_get\f1(D3)"
.IX "\f4xtalk_intr_dev_get\f1(D3)"
.IX "\f4xtalk_intr_sfarg_get\f1(D3)"
.IX "\f4xtalk_intr_target_get\f1(D3)"
.IX "\f4xtalk_intr_vector_get\f1(D3)"
.IX "\f4xtalk_pio_dev_get\f1(D3)"
.IX "\f4xtalk_pio_kvaddr_get\f1(D3)"
.IX "\f4xtalk_pio_mapsz_get\f1(D3)"
.IX "\f4xtalk_pio_target_get\f1(D3)"
.IX "\f4xtalk_pio_xtalk_addr_get\f1(D3)"
.IX "\f4xwidget_info_dev_get\f1(D3)"
.IX "\f4xwidget_info_get\f1(D3)"
.IX "\f4xwidget_info_id_get\f1(D3)"
.IX "\f4xwidget_info_master_get\f1(D3)"
.IX "\f4xwidget_info_masterid_get\f1(D3)"
.IX "\f4xwidget_info_mfg_num_get\f1(D3)"
.IX "\f4xwidget_info_part_num_get\f1(D3)"
.SH NAME
.nf
\f4xtalk_intr_dev_get\f1 \- get XIO connect point from intr
\f4xtalk_intr_cpu_get\f1 \- get target cpu from intr
\f4xtalk_intr_vector_get\f1 \- get interrupt vector number
\f4xtalk_intr_target_get\f1 \- get interrupt target port number
\f4xtalk_intr_addr_get\f1 \- get interrupt target address
\f4xtalk_intr_sfarg_get\f1 \- get setfunc argument

\f4xtalk_pio_dev_get\f1 \- get connect point
\f4xtalk_pio_target_get\f1 \- get PIO target widget number
\f4xtalk_pio_xtalk_addr_get\f1 \- get PIO target minimum address
\f4xtalk_pio_mapsz_get\f1 \- get size of PIO target area
\f4xtalk_pio_kvaddr_get\f1 \- get cached CPU address

\f4xtalk_dma_dev_get\f1 \- get connect point
\f4xtalk_dma_target_get\f1 \- get XIO port number of DMA target

\f4xwidget_info_get\f1 \- get xtalk info structure
\f4xwidget_info_dev_get\f1 \- get XIO connection point
\f4xwidget_info_id_get\f1 \- get XIO port number
\f4xwidget_info_master_get\f1 \- get vertex of master device
\f4xwidget_info_masterid_get\f1 \- get XIO port of master
\f4xwidget_info_mfg_num_get\f1 \- get manufacturer ID number
\f4xwidget_info_part_num_get\f1 \- get board part number
.fi
.\" **********************
.SH SYNOPSIS
.\" **********************
.nf
.ds fT \f1
.if t .ds fT \f4
\*(fT#include <sys/xtalk/xtalk.h>
#include <sys/xtalk/xwidget.h>

.sp .8v
vertex_hdl_t
xtalk_intr_dev_get(xtalk_intr_t \f2intr\*(fT)

.sp .8v
vertex_hdl_t
xtalk_intr_cpu_get(xtalk_intr_t \f2intr\*(fT)

.sp .8v
xtalk_intr_vector_t
xtalk_intr_vector_get(xtalk_intr_t \f2intr\*(fT)

.sp .8v
xwidgetnum_t
xtalk_intr_target_get(xtalk_intr_t \f2intr\*(fT)

.sp .8v
iopaddr_t
xtalk_intr_addr_get(xtalk_intr_t \f2intr\*(fT)

.sp .8v
void *
xtalk_intr_sfarg_get(xtalk_intr_t \f2intr\*(fT)

.sp .8v
vertex_hdl_t
xtalk_pio_dev_get(xtalk_piomap_t \f2piomap\*(fT)

.sp .8v
xwidgetnum_t
xtalk_pio_target_get(xtalk_piomap_t \f2piomap\*(fT)

.sp .8v
iopaddr_t
xtalk_pio_xtalk_addr_get(xtalk_piomap_t \f2piomap\*(fT)

.sp .8v
ulong
xtalk_pio_mapsz_get(xtalk_piomap_t \f2piomap\*(fT)

.sp .8v
caddr_t
xtalk_pio_kvaddr_get(xtalk_piomap_t \f2piomap\*(fT)

.sp .8v
vertex_hdl_t
xtalk_dma_dev_get(xtalk_dmamap_t \f2dmamap\*(fT)

.sp .8v
xwidgetnum_t
xtalk_dma_target_get(xtalk_dmamap_t \f2dmamap\*(fT)


.sp .8v
xwidget_info_t
xwidget_info_get(vertex_hdl_t \f2vhdl\*(fT)

.sp .8v
vertex_hdl_t
xwidget_info_dev_get(xwidget_info_t \f2info\*(fT)

.sp .8v
xwidgetnum_t
xwidget_info_id_get(xwidget_info_t \f2info\*(fT)

.sp .8v
vertex_hdl_t
xwidget_info_master_get(xwidget_info_t \f2info\*(fT)

.sp .8v
xwidgetnum_t
xwidget_info_masterid_get(xwidget_info_t \f2info\*(fT)

.sp .8v
xwidget_mfg_num_t
xwidget_info_mfg_num_get(xwidget_info_t \f2info\*(fT)

.sp .8v
xwidget_part_num_t
xwidget_info_part_num_get(xwidget_info_t \f2info\*(fT)\f1

.ft 1
.fi
.\" **********************
.SS Arguments
.\" **********************
.IP "\f2intr\f1" 8n
is an xtalk_intr_t that was created by xtalk_intr_alloc
.IP "\f2piomap\f1" 8n
is an xtalk_piomap_t that was created by xtalk_piomap_alloc
.IP "\f2dmamap\f1" 8n
is an xtalk_dmamap_t that was created by xtalk_dmamap_alloc
.IP "\f2vhdl\f1" 8n
is an XIO connection point in the hardware graph,
obtained as the parameter to the attach call.
.IP "\f2info\f1" 8n
is an xwidget_info_t obtained from xwidget_info_get
.\" **********************
.SH DESCRIPTION
.\" **********************

These routines are used to pull specific useful
bits of information out of the various opaque
data structures used by xtalk.
Few drivers will need to make use of these routines,
but having them available might save the driver
from doing extra bookkeeping.
.P
The semantics of the functions should be clear
from their one-line descriptions.

.\" **********************
.SH "SEE ALSO"
.\" **********************

xtalk(D3),
xtalk_dma(D3),
xtalk_error(D3),
xtalk_intr(D3),
xtalk_pio(D3).

.\" **********************
.SH DIAGNOSTICS
.\" **********************

.IR xwidget_info_get ()
will return NULL if there is no xtalk info
structure attached to that vertex.
.P
Do not pass NULLs to any of these functions,
that would cause a kernel panic.

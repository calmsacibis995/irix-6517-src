.TH cvsema D3X
.SH NAME
\f4cvsema\f1 \- conditionally perform a "V" or wait semaphore operation
.SH SYNOPSIS
.nf
\f4#include "sys/types.h"
#include "sys/sema.h"
.sp
cvsema(sema_t *\f1\f2semap\f1\f4);\f1
.fi
.SS Arguments
.TP
\f2semap\f1
Expects a pointer to the semaphore you want to conditionally.
.SH DESCRIPTION
\f4cvsema\f1 routine conditionally performs a "V" operation
depending on the current value of the semaphore. If the semaphore
value is strictly less than 0, \f4cvsema\f1 increments the
semaphore value by 1 and wakes up a sleeping process.
Otherwise, \f4cvsema\f1 simply returns. \f4cvsema\f1 effectively
performs a "V" operation if there is a process asleep on the
semaphore; otherwise, it does nothing. To initialize semaphores
before you use them, call \f4initnsema\f1(D3X)
or \f4initnsema_mutex\f1(D3X).
.SS "Return Values"
\f4cvsema\f1 returns 1 if the semaphore value is less than 0 and
a process is awakened. Otherwise \f4cvsema\f1 returns 0. 
.SS "See Also"
\f4initnsema\f1(D3X), \f4initnsema_mutex\f1(D3X), \f4vsema\f1(D3X)

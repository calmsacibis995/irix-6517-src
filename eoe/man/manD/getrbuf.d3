.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH getrbuf D3
.SH NAME
\f4getrbuf\f1 \- get a raw buffer header
.SH SYNOPSIS
.nf
\f4#include <sys/buf.h>
#include <sys/kmem.h>
#include <sys/ddi.h>
.sp .8v
buf_t *getrbuf(long \f2flag\fP);
\f1
.fi
.SS Arguments
.RS 0
.IP "\f2flag\f1" 14n
Indicates whether the caller should sleep for free space.
.RE
.SH DESCRIPTION
\f4getrbuf\f1
allocates the space for a buffer header (see \f4buf\fP(D4)).
If \f2flag\f1 is set to \f4KM_SLEEP\f1, the caller will sleep
if necessary until memory is available.
If \f2flag\f1 is set to \f4KM_NOSLEEP\f1, the caller will not sleep,
but \f4getrbuf\f1 will return \f4NULL\f1 if
memory is not immediately available.
.SS "Return Values"
Upon successful completion, \f4getrbuf\f1 returns a pointer to the
allocated buffer header.
If \f4KM_NOSLEEP\f1 is specified and sufficient memory is not immediately
available, \f4getrbuf\f1 returns a \f4NULL\f1 pointer.
.SH USAGE
\f4getrbuf\fP is used when a block driver is performing
raw I/O (character interface)
and needs to set up a buffer header that is not associated with
a system-provided data buffer.
The driver provides its own memory for the data buffer.
.P
After allocating the buffer header, the caller must set the \f4b_iodone\fP field
to the address of an iodone handler to be invoked when the I/O is complete
(see \f4biodone\fP(D3)).
The caller must also initialize the following fields:
.IP \f4b_flags\f1 14n
Must be modified to indicate the direction of data transfer.
Initially, it
is set to indicate the transfer is from the user's buffer to the kernel.
The driver must set the \f4B_READ\f1 flag if the transfer is from the kernel to
the user's buffer.
.IP \f4b_edev\f1 14n
Must be initialized to the proper device number.
.IP \f4b_bcount\f1 14n
Must be set to the number of bytes to transfer.
.IP \f4b_un.b_addr\f1 14n
Must be set to the virtual address of the caller-supplied buffer.
.IP \f4b_blkno\f1 14n
Must be set to the block number to be accessed.
.IP \f4b_resid\fP 14n
Must be set to the same value as \f4b_bcount\fP.
.IP \f4b_bufsize\fP 14n
Can be used to remember the size of the data buffer associated with the buffer header.
.P
Typically, block drivers do not allocate buffers.
The buffer is allocated by the kernel
and the associated buffer header is used as an
argument to the driver \f4strategy\f1 routine.
However, to implement
some special features, such as \f4ioctl\f1(D2) commands that
perform I/O, the driver may need its own
buffer space.
The driver can get the buffer space from the system by
using \f4geteblk\fP(D3) or \f4ngeteblk\fP(D3).
Or the driver can choose
to use its own memory for the buffer and only allocate a buffer header
with \f4getrbuf\fP.
.SS Level
Base only if \f2flag\f1 is set to \f4KM_SLEEP\f1.
.P
Base or Interrupt if \f2flag\f1 is set to \f4KM_NOSLEEP\f1.
.SS "Synchronization Constraints"
May sleep if \f2flag\f1 is set to \f4KM_SLEEP\f1.
.P
Driver-defined basic locks and read/write locks
may be held across calls to this function
if \f2flag\f1 is \f4KM_NOSLEEP\f1,
but may not be held if \f2flag\f1 is \f4KM_SLEEP\f1.
.P
Driver-defined sleep locks
may be held across calls to this function
regardless of the value of \f2flag\f1.
.SH REFERENCES
biodone(D3),
biowait(D3),
buf(D4),
freerbuf(D3).

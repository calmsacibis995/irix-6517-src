.if n .pH ddi.rm/d3/gen/OTHERQ @(#)OTHERQ	43.12 of 12/9/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH OTHERQ D3
.IX "\f4OTHERQ\fP(D3)"
.SH NAME
\f4OTHERQ\f1 \- get a pointer to queue's partner queue
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/stream.h>
#include <sys/ddi.h>
.sp 0.4
queue_t *OTHERQ(queue_t *\f2q\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2q\f1" 10n
Pointer to the queue.
.RE
.SH DESCRIPTION
The \f4OTHERQ\f1 function returns a pointer to the other of the
two \f4queue\f1 structures that make up an instance of a STREAMS module or
driver.
.SS "Return Values"
\f4OTHERQ\f1 returns a pointer to a queue's partner.
.SH USAGE
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Multithreaded drivers may hold
driver-defined basic locks, read/write locks, and sleep locks
across calls to this function.
.SS Examples
.IX "\f4OTHERQ\fP(D3), example"
This routine sets the minimum packet size, the maximum
packet size, the high water mark, and the low water mark
for the read and write queues of a given module or driver.
It is passed either one of the queues.
This could be used
if a module or driver wished to update its queue parameters
dynamically.
.ne 4
.P
.nf
.ft 4
.ps -1
.vs -1
 1  void
 2  set_q_params(queue_t *q, long min, long max, ulong_t hi, ulong_t lo)
 3  {
 4	pl_t pl;	/* for multi-threaded drivers */
 5	(void) strqset(q, QMINPSZ, 0, min);
 6	(void) strqset(q, QMAXPSZ, 0, max);
 7	(void) strqset(q, QHIWAT, 0, hi);
 8	(void) strqset(q, QLOWAT, 0, lo);
 9	(void) strqset(OTHERQ(q), QMINPSZ, 0, min);
10	(void) strqset(OTHERQ(q), QMAXPSZ, 0, max);
11	(void) strqset(OTHERQ(q), QHIWAT, 0, hi);
12	(void) strqset(OTHERQ(q), QLOWAT, 0, lo);
13  }
.vs
.ps
.ft 1
.fi
.SH REFERENCES
.na
\f4RD\fP(D3),
\f4WR\fP(D3)
.ad

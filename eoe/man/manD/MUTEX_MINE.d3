.if n .pH ddi.rm/d3/gen/MUTEX_MINE @(#)SLEEP_LOCKAV	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.TH MUTEX_MINE D3
.SH NAME
\f4MUTEX_MINE\f1 \- query whether a mutual exclusion lock is owned by caller
.IX "\f4MUTEX_MINE\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
boolean_t MUTEX_MINE(mutex_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the mutual exclusion lock to be queried.
.RE
.SH DESCRIPTION
\f4MUTEX_MINE\f1 returns a value indicating whether the mutual exclusion lock
specified by \f2lockp\f1 is currently held by the calling process.
.SS "Return Values"
\f4MUTEX_MINE\f1 returns \f4TRUE\f1 (a non-zero value) if the lock
is owned by the caller or \f4FALSE\f1 (zero) if the lock isn't.
.SS Level
Base only.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4MUTEX_ALLOC\f1(D3),
\f4MUTEX_INIT\f1(D3),
\f4MUTEX_DEALLOC\f1(D3),
\f4MUTEX_DESTROY\f1(D3),
\f4MUTEX_LOCK\f1(D3),
\f4MUTEX_TRYLOCK\f1(D3),
\f4MUTEX_UNLOCK\f1(D3),
\f4MUTEX_OWNED\f1(D3).
.ad

.TH vme_ivec_set D3X
.SH NAME
\f4vme_ivec_set\f1 \- register a VME bus interrupt handler
.SH SYNOPSIS
.nf
\f4#include <sys/types.h>
#include <sys/ddi.h>
.sp
int vme_ivec_set (int \f1\f2adapter\f1\f4, int \f1\f2vec\f1\f4, int (*\f1\f2intr\f1\f4)(int), int \f1\f2arg\f1\f4);\f1
.fi
.SS Arguments
.TP
\f2adapter\f1
The adapter number identifying which VME bus on the system.
.TP
\f2vec\f1
The vector allocated from \f4vme_ivec_alloc\f1(D3X).
.TP
\f2intr\f1
A pointer to the driver's interrupt handler.
.TP
\f2arg\f1
A value to be passed into the interrupt handler when the interrupt occurs.
.SH DESCRIPTION
On Challenge and Onyx systems, \f4vme_ivec_set\f1 registers the
interrupt handler to the specified VME bus interrupt table. With
\f4vme_ivec_alloc\f1(D3X), a driver can allocate and register more
than one VME interrupt vector for a single
board. \f4vme_ivec_alloc\f1(D3X) and \f4vme_ivec_set\f1(D3X) are used
in \f4edtinit()\f1 routines.
.SS "Return Values"
\f4vme_ivec_set\f1 returns \-1 if no vectors remain or the adapter specified is invalid.
.SS "See Also"
\f4vme_ivec_alloc\f1(D3X), \f4vme_ivec_free\f1(D3X)
.br
\f4vmeio\f1(D3) for Origin and Onyx2 VME options
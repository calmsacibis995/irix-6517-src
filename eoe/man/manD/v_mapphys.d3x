.TH v_mapphys D3X
.SH NAME
\f4v_mapphys\f1 \- map physical addresses into user address space
.SH SYNOPSIS
.nf
\f4#include "sys/types.h"
#include "ksys/ddmap.h"
.sp
v_mapphys(vhandl_ *\f1\f2vt\f1\f4, void *\f1\f2addr\f1\f4, size_t \f1\f2len\f1\f4);\f1
.fi
.SH DESCRIPTION
\f4v_mapphys\f1 maps \f2len\f1 bytes of the physical hardware addressed by \f2addr\f1 into a user's address space. The actual user virtual address space to which \f2addr\f1 is mapped is determined by \f2vt\f1, the "virtual handle" passed to the device driver map routine when the user issues a \f4mmap\f1(2) system call.
.P
If \f2addr\f1 refers to memory and \f2addr\f1 is either a \f2kseg0\f1 address or a cached \f2kseg2\f1 address, \f2addr\f1 is mapped as a cached address (that is, all loads and stores will access or fill the data cache); otherwise, all references are uncached.
.SH "RETURN VALUES"
In the event of an error, \f4v_mapphys\f1 returns an errno value; otherwise, it returns 0.
The errors include:
.TP
[ENOMEM]
Not enough memory was available to allocate page tables for the address space, or the user requested a specific mapping that collides with an address space that cannot be unmapped.
.SH "SEE ALSO"
\f4v_getaddr\f1(D3X), \f4v_gethandle\f1(D3X), \f4v_getlen\f1(D3X)

.if n .pH ddi.rm/d3/gen/copyin @(#)copyin	43.10 of 11/27/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH copyin D3
.IX "\f4copyin\fP(D3)"
.SH NAME
\f4copyin\f1 \- copy data from a user buffer to a driver buffer
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/ddi.h>
.sp 0.4
int copyin(caddr_t \f2userbuf\fP, caddr_t \f2driverbuf\fP, size_t \f2count\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2userbuf\f1" 10n
User source address from which copy is made.
.IP "\f2driverbuf\f1" 10n
Driver destination address to which copy is made.
.IP "\f2count\f1" 10n
Number of bytes to copy.
.RE
.SH DESCRIPTION
\f4copyin\f1 copies \f2count\f1 bytes of data from the user virtual
address specified by \f2userbuf\f1 to the kernel virtual address
specified by \f2driverbuf\f1.
.SS "Return Values"
If the copy is successful, 0 is returned.
Otherwise, \-1 is returned to indicate that the specified user address
range is not valid.
.SH USAGE
The driver must ensure that adequate space is
allocated for the destination address.
.P
\f4copyin\fP chooses the best algorithm
based on address alignment and number of bytes to copy.
Although the source and destination addresses are not required to
be word aligned, word aligned addresses may result in a more efficient copy.
.P
Drivers usually convert a return value of \-1 into an \f4EFAULT\fP error.
.SS Level
Base only.
.SS "Synchronization Constraints"
Can sleep.
.P
Driver-defined basic locks and read/write locks
may not be held across calls to this function.
.P
.P
Driver-defined sleep locks
may be held across calls to this function.
.SS Warnings
The driver source buffer
must be completely within the kernel address space,
or the system can panic.
.P
When holding sleep locks across calls to this function,
multithreaded drivers must be careful to avoid creating a deadlock.
During the data transfer, page fault resolution
might result in another I/O to the same device.
For example, this could occur
if the driver controls the disk drive used as the swap device.
.SS "Examples"
.IX "\f4copyin\fP(D3), example"
.IX "\f4ioctl\fP(D2), example"
A driver \f4ioctl\f1(D2) routine (line 5)
can be used to get or set device attributes or registers.  If the specified
command is \f4XX_SETREGS\f1 (line 9), the driver copies user data
to the device registers (line 11).  If the user address is invalid,
an error code is returned.
.P
.nf
.ft 4
.ps 8
.vs 10
 1  struct  device {	/* device registers layout */
	...
 2	int command;	/* device command word */
 3  };
.sp 0.4
 4  extern struct device xx_dev[];	/* physical device registers */
    ...
 5  xxioctl(dev_t dev, int cmd, void *arg, int mode, cred_t *crp, int *rvp)
 6  {
 7	struct device *dp;
.sp 0.4
 8	switch (cmd) {
 9	case XX_SETREGS:	/* copy user program data to device registers */
10		dp = &xx_dev[getminor(dev)];
11		if (copyin(arg, (caddr_t)dp, sizeof(struct device)))
12			return (EFAULT);
13		break;
.vs
.ps
.ft 1
.fi
.SH REFERENCES
.na
\f4bcopy\fP(D3),
\f4copyout\fP(D3),
\f4uiomove\fP(D3),
\f4ureadc\fP(D3),
\f4uwritec\fP(D3)
.ad

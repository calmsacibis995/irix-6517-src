.if n .pH ddi.rm/d3/gen/MUTEX_ALLOC @(#)MUTEX_ALLOC	43.12 of 12/7/92
.\" Copyright 1995, Silicon Graphics Computer Systems
.TH MUTEX_ALLOC D3
.SH NAME
.upperok
\f4MUTEX_ALLOC\f1, \f4MUTEX_INIT\f1 \- mutual exclusion lock initialization
.IX "\f4MUTEX_ALLOC\f1(D3)"
.IX "\f4MUTEX_ALLOC\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/kmem.h>
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
mutex_t *MUTEX_ALLOC(int \f2type\f1, int \f2flag\f1, char *\f2name\f1);

void MUTEX_INIT(mutex_t *\f2mp\f1, int \f2type\f1, char *\f2name\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2type\f1" 10n
Type of mutual exclusion lock -- must be \f4MUTEX_DEFAULT\f1.
.IP "\f2flag\f1" 10n
Specifies whether the caller is willing to sleep
waiting for memory.
.IP "\f2name\f1" 10n
Name applied to the mutex -- only used when the metering locks package
is installed.
Name may be a null pointer.
.RE
.SH DESCRIPTION
\f4MUTEX_ALLOC\f1 dynamically allocates and initializes an instance of a
sleeping mutual exclusion lock.
\f4MUTEX_INIT\f1 initializes an already-allocated instance of a
sleeping mutual exclusion lock.
The mutex is initialized to the unlocked state.
.P
If \f2flag\f1 is set to \f4KM_SLEEP\f1, the caller will sleep if
necessary until sufficient memory is available.
If \f2flag\f1 is set to \f4KM_NOSLEEP\f1, the caller will not sleep,
but \f4MUTEX_ALLOC\f1 will return \f4NULL\f1 if sufficient memory is not
immediately available.
.SS "Return Values"
Upon successful completion, \f4MUTEX_ALLOC\f1 returns a pointer to the newly
allocated lock.
If \f4KM_NOSLEEP\f1 is specified and sufficient memory is not immediately
available, \f4MUTEX_ALLOC\f1 returns a \f4NULL\f1 pointer.
.SH USAGE
.SS Level
Initialization or Base.
.SS "Synchronization Constraints"
May sleep if flag is set to \f4KM_SLEEP\f1.
.P
Driver-defined basic locks
be held across calls to this function if \f2flag\f1 is \f4KM_NOSLEEP\f1
but may not be held if \f2flag\f1 is \f4KM_SLEEP\f1.
.P
Driver-defined sleep locks and read/write locks may be held
across calls to this function regardless of the value of \f2flag\f1.
.SH REFERENCES
.na
\f4MUTEX_DEALLOC\f1(D3),
\f4MUTEX_DESTROY\f1(D3),
\f4MUTEX_LOCK\f1(D3),
\f4MUTEX_TRYLOCK\f1(D3),
\f4MUTEX_UNLOCK\f1(D3),
\f4MUTEX_OWNED\f1(D3),
\f4MUTEX_MINE\f1(D3),
.ad

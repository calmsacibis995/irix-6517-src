.if n .pH ddi.rm/d3/gen/rmfree @(#)rmfree	43.10 of 12/7/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH rmfree D3
.SH NAME
\f4rmfree\f1 \- free space into a private space management map
.IX "\f4rmfree\fP(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/map.h>
#include <sys/ddi.h>
.sp 0.4
void rmfree(struct map *\f2mp\fP, size_t \f2size\fP, ulong_t \f2index\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2mp\f1" 10n
Pointer to the map.
.IP "\f2size\f1" 10n
Number of units to free into the map.
.IP "\f2index\f1" 10n
Index of the first unit of the space being freed.
.RE
.SH DESCRIPTION
\f4rmfree\f1 releases space into the private space management map
pointed to by \f2mp\f1 and wakes up any processes that are waiting
for space.
.SS "Return Values"
None
.SH USAGE
\f4rmfree\f1 should be called to return space that had been allocated
by a previous call to \f4rmalloc\f1(D3),
in which case \f2index\f1 is the value returned from the corresponding
call to \f4rmalloc\f1. 
\f4rmfree\f1 should also be called to add space to a newly allocated
map prior to the first call to \f4rmalloc\f1,
in which case \f2index\f1 specifies the base of the space being added.
.P
Both \f2size\fP and \f2index\fP are in arbitrary units.
The driver using the map places whatever semantics on the units are
appropriate for the type of space being managed.
For example, units may be byte addresses, pages of memory, or blocks
on a device.
.P
If the space being returned is adjacent to other space
in the map, \f4rmfree\f1 will coalesce the adjacent fragments.
.P
If the \f4rmfree\f1 call causes the number of fragments in the
map to exceed the number of map entries specified by \f4rminit\f1(D3)
(for singlethreaded drivers)
or \f4rmallocmap\f1(D3)
(for multithreaded drivers)
the following warning message is displayed on the
console:
.sp 0.4
.nf
.ft 4
WARNING: rmfree map overflow \f2mp\fP lost \f2size\fP items at \f2index\fP
.ft 1
.fi
.sp 0.4
This implies that the driver should specify a larger number of map
entries when initializing the map.
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SS Examples
See \f4rmalloc\f1(D3) for an example of \f4rmfree\fP.
.SH REFERENCES
.na
\f4rmalloc\fP(D3),
\f4rmalloc_wait\fP(D3),
\f4rmallocmap\fP(D3),
\f4rmfreemap\fP(D3),
\f4rminit\fP(D3),
\f4rmsetwant\fP(D3)
.ad

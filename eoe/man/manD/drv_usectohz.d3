.if n .pH ddi.rm/d3/gen/drv_usectohz @(#)drv_usectohz	43.10 of 11/27/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH drv_usectohz D3
.SH "NAME" 
\f4drv_usectohz\f1 \- convert microseconds to clock ticks
.SH "SYNOPSIS" 
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/ddi.h>
.sp 0.4
clock_t drv_usectohz(clock_t \f2microsecs\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2microsecs\f1" 10n
The number of microseconds to convert to equivalent clock ticks.
.RE
.SH DESCRIPTION 
\f4drv_usectohz\f1 converts the length of time expressed by
\f2microsecs\f1, which is in units of microseconds,
into units of clock ticks.
.SS "Return Values"
The value returned is the smallest number of clock ticks that represent
a time interval equal to or greater than the \f2microsecs\f1 argument.
No error value is returned.
If the number of ticks equivalent
to the \f2microsecs\f1 argument is too large to be represented as a
\f4clock_t\f1,
then the maximum \f4clock_t\f1 value will be returned.
.SH USAGE
Several functions either take time values expressed in clock ticks as
arguments [\f4itimeout\f1(D3), \f4delay\f1(D3)]
or return time values expressed in clock ticks [\f4drv_getparm\f1(D3)].
The length of a clock tick can vary across different implementations,
and therefore drivers should not include any hard-coded assumptions
about the length of a tick.
\f4drv_usectohz\f1 and the complementary function
\f4drv_hztousec\f1(D3) can be used, as necessary, to convert between
microseconds and clock ticks.
.SS Level
Initialization, Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.SH REFERENCES
.na
\f4delay\fP(D3),
\f4drv_getparm\fP(D3),
\f4drv_hztousec\fP(D3),
\f4itimeout\fP(D3)
.ad

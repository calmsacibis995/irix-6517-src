.TH cpsema D3X
.SH NAME
\f4cpsema\f1 \- conditionally perform a "P" or wait semaphore operation
.SH SYNOPSIS
.nf
\f4#include "sys/types.h"
#include "sys/sema.h"
.sp
cpsema(sema_t *\f1\f2semap\f1\f4);\f1
.fi
.SS Arguments
.TP
\f2semap\f1
Expects a pointer to the semaphore you want \f4cpsema\f1
to conditionally decrement. 
.SH DESCRIPTION
\f4cpsema\f1 conditionally performs a "P" operation depending
on the current value of the semaphore. If the semaphore value
is less than or equal to 0, \f4cpsema\f1 returns without
altering the semaphore. Otherwise, \f4cpsema\f1 decrements the
semaphore value by 1 and returns. \f4cpsema\f1 effectively
performs a "P" operation if it does not cause the process to
sleep; otherwise, it simply returns. To initialize semaphores
before using them, call \f4initnsema\f1(D3X) or \f4initnsema_mutex\f1(D3X).
.SS "Return Values"
\f4cpsema\f1 returns 0 if the semaphore value is less than or
equal to 0. (If \f4cpsema\f1 returns 0, \f4psema\f1(D3X) would
have slept.) Otherwise \f4cpsema\f1 returns 1.
.SS "See Also"
\f4initnsema\f1(D3X), \f4initnsema_mutex\f1(D3X),
\f4psema\f1(D3X), \f4SLEEP_TRYLOCK\f1(D3)

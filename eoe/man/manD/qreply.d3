.if n .pH ddi.rm/d3/gen/qreply @(#)qreply	43.11 of 12/5/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH qreply D3
.IX "\f4qreply\fP(D3)"
.SH NAME
\f4qreply\f1 \- send a message in the opposite direction in a stream
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/stream.h>
#include <sys/ddi.h>
.sp 0.4
void qreply(queue_t *\f2q\fP, mblk_t *\f2bp\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2q\f1" 10n
Pointer to the queue from which the message is being sent.
.IP "\f2bp\f1" 10n
Pointer to the message to be sent in the opposite direction.
.RE
.SH DESCRIPTION
\f4qreply\f1 sends a message in the opposite direction
from that which \f2q\f1 is pointing.
It calls the \f4OTHERQ\f1(D3)
function to find \f2q\f1's partner, and passes the message
by calling the \f4put\f1(D2)
routine of the next queue in the stream after \f2q\f1's partner.
.SS "Return Values"
None
.SH USAGE
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may not be held across calls to this function.
.SS Examples
See \f4put\fP(D2) for an example of \f4qreply\fP.
.SH REFERENCES
.na
\f4OTHERQ\fP(D3),
\f4put\fP(D2),
\f4putnext\fP(D3)
.ad

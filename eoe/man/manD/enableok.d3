.if n .pH ddi.rm/d3/gen/enableok @(#)enableok	43.11 of 11/27/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.TH enableok D3
.IX "\f4enableok\fP(D3)"
.IX "STREAMS message queues"
.SH NAME
\f4enableok\f1 \- allow a queue to be serviced
.SH "SYNOPSIS"
.nf
.na
.ft 4
#include <sys/stream.h>
#include <sys/ddi.h>
.sp 0.4
void enableok(queue_t *\f2q\fP);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2q\f1" 10n
Pointer to the queue.
.RE
.SH DESCRIPTION
The \f4enableok\f1 function allows the service routine of the
queue pointed to by \f2q\f1 to be rescheduled for service.
It cancels the effect of a previous use of the
\f4noenable\f1(D3) function on \f2q\f1.
.SS "Return Values"
None
.SH USAGE
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep locks
may be held across calls to this function.
.P
The caller cannot have the stream frozen
[see \f4freezestr\fP(D3)] when calling this function.
.SS Examples
The \f4qrestart\f1 routine uses two STREAMS functions
to re-enable a queue that has been
disabled.  The \f4enableok\f1 function removes the restriction that prevented the
queue from being scheduled when a message was enqueued.  Then, if there are
messages on the queue, it is
scheduled by calling \f4qenable\fP(D3).
.sp 0.4
.nf
.ft 4
1  void
2  qrestart(q)
3	queue_t *q;
4  {
5	enableok(q);
6	if (q->q_first)
7		qenable(q);
8  }
.ft 1
.fi
.IX "\f4enableok\fP(D3), example"
.IX "\f4qenable\fP(D3), example"
.SH REFERENCES
\f4noenable\fP(D3),
\f4qenable\fP(D3),
\f4queue\fP(D4),
\f4srv\fP(D2)
.ad

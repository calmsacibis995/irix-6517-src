.if n .pH ddi.rm/d3/gen/SV_BROADCAST @(#)SV_BROADCAST	43.11 of 12/5/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.TH SV_BROADCAST D3
.SH NAME
\f4SV_BROADCAST\f1 \- wake up all processes sleeping on a synchronization variable
.IX "\f4SV_BROADCAST\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
int SV_BROADCAST(sv_t *\f2svp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2svp\f1" 10n
Pointer to the synchronization variable to be broadcast signaled.
.RE
.SH DESCRIPTION
If one or more processes are blocked on the synchronization variable
specified by \f2svp\f1, \f4SV_BROADCAST\f1 wakes up
all of the blocked processes.
Note that synchronization variables are stateless -- calls to
\f4SV_BROADCAST\f1 only affect processes currently blocked on the
synchronization variable.
.P
.SS "Return Values"
Returns the number of processes that were unblocked by the call to
\f4SV_BROADCAST\f1.
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks and read/write locks may be held
across calls to this function.
.SH REFERENCES
.na
\f4SV_ALLOC\f1(D3),
\f4SV_INIT\f1(D3),
\f4SV_DEALLOC\f1(D3),
\f4SV_DESTROY\f1(D3),
\f4SV_WAIT\f1(D3),
\f4SV_WAIT_SIG\f1(D3),
\f4SV_SIGNAL\f1(D3).
.ad

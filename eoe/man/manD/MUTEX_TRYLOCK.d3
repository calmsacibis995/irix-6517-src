.if n .pH ddi.rm/d3/gen/MUTEX_TRYLOC @(#)MUTEX_TRYLOC	43.7 of 11/27/92
.\" Copyright 1995, Silicon Graphics Computer Systems
.TH MUTEX_TRYLOCK D3
.SH NAME
\f4MUTEX_TRYLOCK\f1 \- try to acquire a sleep lock
.IX "\f4MUTEX_TRYLOCK\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/types.h>
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
boolean_t MUTEX_TRYLOCK(mutex_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the mutual exclusion lock to be acquired.
.RE
.SH DESCRIPTION
If the lock specified by \f2lockp\f1 can be acquired without sleeping
the \f4MUTEX_TRYLOCK\f1 function acquires the lock.
If the lock is not immediately available,
\f4MUTEX_TRYLOCK\f1 returns without acquiring the lock.
.SS "Return Values"
\f4MUTEX_TRYLOCK\f1 returns \f4TRUE\f1 (a non-zero value)
if the lock is successfully acquired
or \f4FALSE\f1 (zero) if the lock is not acquired.
.SH USAGE
.SS Level
Base only.  This routine may not be called from Interrupt level.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, other mutual exclusion locks
and sleep locks may be held across calls to this function.
.SH REFERENCES
.na
\f4MUTEX_ALLOC\f1(D3),
\f4MUTEX_INIT\f1(D3),
\f4MUTEX_DEALLOC\f1(D3),
\f4MUTEX_DESTROY\f1(D3),
\f4MUTEX_LOCK\f1(D3),
\f4MUTEX_UNLOCK\f1(D3),
\f4MUTEX_OWNED\f1(D3),
\f4MUTEX_MINE\f1(D3).
.ad

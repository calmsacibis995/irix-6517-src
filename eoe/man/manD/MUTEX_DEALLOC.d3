.if n .pH ddi.rm/d3/gen/MUTEX_DEALLO @(#)MUTEX_DEALLO	43.7 of 11/27/92
.\" Copyright 1991, 1992 UNIX System Laboratories, Inc.
.\" Copyright 1989 AT&T
.TH MUTEX_DEALLOC D3
.SH NAME
.upperok
\f4MUTEX_DEALLOC\f1, \f4MUTEX_DESTROY\f1 \- mutual exclusion lock de-initialization
.IX "\f4MUTEX_DEALLOC\f1(D3)"
.SH SYNOPSIS
.nf
.na
.ft 4
#include <sys/ksynch.h>
#include <sys/ddi.h>
.sp 0.4
void MUTEX_DEALLOC(mutex_t *\f2lockp\f1);

void MUTEX_DESTROY(mutex_t *\f2lockp\f1);
.ft 1
.ad
.fi
.SS Arguments
.RS 0
.IP "\f2lockp\f1" 10n
Pointer to the mutual exclusion lock to be deallocated or decommissioned.
.RE
.SH DESCRIPTION
\f4MUTEX_DEALLOC\f1 un-initializes and deallocates the mutual exclusion
lock specified by \f2lockp\f1.
\f4MUTEX_DESTROY\f1 un-initializes the mutual exclusion lock
specified by \f2lockp\f1.
When the sleeping locks metering package is installed, this may involve
deallocating metering data structures.
.SS "Return Values"
None
.SH USAGE
Attempting to deallocate a lock that is currently locked or is being
waited for is an error and results in undefined behavior.
.SS Level
Base or Interrupt.
.SS "Synchronization Constraints"
Does not sleep.
.P
Driver-defined basic locks, read/write locks, and sleep
locks (other than the one being deallocated), may be held across
calls to this function.
.SH REFERENCES
.na
\f4MUTEX_ALLOC\f1(D3),
\f4MUTEX_INIT\f1(D3),
\f4MUTEX_LOCK\f1(D3),
\f4MUTEX_TRYLOCK\f1(D3),
\f4MUTEX_UNLOCK\f1(D3),
\f4MUTEX_OWNED\f1(D3),
\f4MUTEX_MINE\f1(D3),
.ad

'\"macro stdmacro
.if n .pH g3n.t_accept @(#)t_accept	40.12 of 5/23/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} t_accept 3N "Networking Support Utilities" "\&"
.if \nX=1 .ds x} t_accept 3N "Networking Support Utilities"
.if \nX=2 .ds x} t_accept 3N "" "\&"
.if \nX=3 .ds x} t_accept "" "" "\&"
.if \nX=4 .ds x} t_accept "NS_LIB" "EXTENSION" " "
.TH \*(x}
.SH NAME
\f4t_accept\f1 \- accept a connect request
.SH SYNOPSIS
\f4#ifdef _XOPEN_SOURCE\f1
.br
\f4#include <xti.h>\f1
.br
\f4#else\f1
.br
\f4#include <tiuser.h>\f1
.br
\f4#endif\f1
.PP
\f4int t_accept( int fd, int resfd, struct t_call \(**call);\f1
.SH DESCRIPTION
This function is issued by a transport user
to accept a connect request.
\f4fd\f1
identifies the local transport endpoint where the connect
indication arrived,
\f4resfd\f1
specifies the local transport endpoint
where the connection is to be established,
and
\f4call\f1
contains information required by the transport provider to complete the connection.
\f4call\fP points to a \f4t_call\f1 structure that contains the following
members:
.PP
.RS
\f4struct netbuf addr;\fP
.br
\f4struct netbuf opt;\fP
.br
\f4struct netbuf udata;\fP
.br
\f4int sequence;\fP
.RE
.PP
\f4netbuf\f1 is described in \f4intro\fP(3N).
In \f4call\f1, \f4addr\f1 is the address of the caller, \f4opt\f1
indicates any protocol-specific parameters associated with the connection,
\f4udata\f1
points to any user data to be returned to the caller, and
\f4sequence\f1
is the value returned by
\f4t_listen\fP
that uniquely associates the response with a
previously received connect indication.
.PP
A transport user may accept a connection on either the same, or on a different, local transport endpoint from the one on which the connect indication arrived.
If the same endpoint is specified (that is, \f4resfd\f1=\f4fd\f1),
the connection can be accepted unless the following condition is true:
The user has received other indications on that endpoint but has not 
responded to them (with
\f4t_accept\fP
or
\f4t_snddis\fP).
For this condition:
.sp
.in+0.5i
.br
\f4#ifdef _XOPEN_SOURCE\f1
.in+0.5i
.br
\f4t_accept\fP
will fail and set \f4t_errno\f1 to \f4TINDOUT\fP.
.in-0.5i
.br
\f4#else\f1
.in+0.5i
.br
\f4t_accept\fP
will fail and set \f4t_errno\f1 to \f4TBADF\fP.
.in-0.5i
.br
\f4#endif\f1
.in-0.5i
.PP
If a different transport endpoint is specified (\f4resfd\f1!=\f4fd\f1),
the endpoint must be bound to a protocol address and must be
in the \f4T_IDLE\fP state [see \f4t_getstate\fP(3N)] before the
\f4t_accept\fP is issued.
.PP
For both types of endpoints,
\f4t_accept\fP
will fail and set
\f4t_errno\fP
to \f4TLOOK\fP
if there are indications
(for example, a connect or disconnect) waiting to be received on that endpoint.
.PP
The values of parameters specified by
\f4opt\f1
and the syntax of those values are protocol specific.
The
\f4udata\f1
argument enables the called transport user to send user data to the
caller and
the amount of user data must not exceed the limits supported by
the transport provider as returned in the \f4connect\fP field of the
\f4info\fP argument of \f4t_open\fP or \f4t_getinfo\fP.
If the \f4len\f1 [see \f4netbuf\f1 in \f4intro\fP(3N)] field of \f4udata\f1
is zero, no data will be sent to the caller.
.P
This function resides within both the X/Open compliant \f4libxnet\f1 and 
the SVR4 compliant \f4libnsl\f1 Network Services libraries.  Network Services
applications which require X/Open compliance must link-load with \f4-lxnet\f1.
Network Services applications which require SVR4 compliance must link-load 
with \f4-lnsl\f1.
.P
On failure,
\f4t_errno\fP
may be set to one of the following:
.TP 19
\f4TBADF\fP
The specified file descriptor does not refer to a transport endpoint,
or the user is invalidly accepting a connection on the same
transport endpoint on which the connect indication arrived.
.TP
\f4TOUTSTATE\fP
The function was issued in the wrong sequence on the transport endpoint 
referenced by \f4fd\f1,
or the transport endpoint referred to by \f4resfd\f1 is not in the 
\f4T_IDLE\fP state.
.TP
\f4TACCES\fP
The user does not have permission to accept a connection on the responding
transport endpoint or use the specified options.
.TP
\f4TBADOPT\fP
The specified options were in an incorrect format or contained invalid
information.
.TP
\f4TBADDATA\fP
The amount of user data specified was not within the bounds 
supported by
the transport provider as returned in the \f4connect\fP field of the
\f4info\fP argument of \f4t_open\fP or \f4t_getinfo\fP.
.TP
\f4TBADADDR\fP
If \f4_XOPEN_SOURCE\f1 is defined, \f4TBADADDR\fP will be returned because
the specified protocol address was in an incorrect format or contained
illegal information.
.TP
\f4TBADSEQ\fP
An invalid sequence number was specified.
.TP
\f4TFLOW\fP
An \f4errno\f1 of EAGAIN was returned from the ioctl() call when trying
to send the connection response packet.  When this happens, \f4t_errno\f1
is set to \f4TFLOW\f1.
.TP
\f4TLOOK\fP
An asynchronous event has occurred on the transport endpoint referenced by 
\f4fd\f1 and requires immediate attention.
.TP
\f4TNOTSUPPORT\fP
This function is not supported by the underlying transport
provider.
.TP
\f4TSYSERR\fP
A system error has occurred during execution of this function.
.TP
\f4TINDOUT\fP
If \f4_XOPEN_SOURCE\f1 is defined, \f4TINDOUT\fP will be returned because
the function was called with \f4fd\f1=\f4resfd\f1 but there are outstanding
connection indications on the endpoint.  Those other connection indications
must be handled either by rejecting them via \f4t_snddis\fP(3N) or
accepting them on a different endpoint via \f4t_accept\fP(3N).
.TP
\f4TPRIVMISMATCH\fP
If \f4_XOPEN_SOURCE\f1 is defined, \f4TPRIVMISMATCH\fP will be returned 
because the file descriptors \f4fd\f1 and \f4resfd\f1 do not refer to the
same transport provider.
.TP
\f4TRESQLEN\fP
If \f4_XOPEN_SOURCE\f1 is defined, \f4TRESQLEN\fP will be returned 
because the endpoint referenced by \f4resfd\fP 
(where \f4resfd\f1 != \f4fd\f1) was bound to a protocol address with a
\f4qlen\f1 that is greater than zero.
.TP
\f4TPROTO\fP
If \f4_XOPEN_SOURCE\f1 is defined, \f4TPROTO\fP will be returned because
a communication problem has been detected between XTI and the transport
provider for whicjh there is no other suitable XTI (\f4t_errno\fP).
.TP
\f4TRESADDR\fP
If \f4_XOPEN_SOURCE\f1 is defined, \f4TRESADDR\fP will be returned because
this transport provider requires both \f4fd\fP and \f4resfd\fP to be
bound to the same address.  This error results if they are not.
.SH SEE ALSO
\f4intro\fP(3N),
\f4t_connect\fP(3N),
\f4t_getstate\fP(3N),
\f4t_listen\fP(3N),
\f4t_open\fP(3N),
\f4t_optmgmt\fP(3N)
\f4t_rcvconnect\fP(3N)
.SH DIAGNOSTICS
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
\f4t_errno\f1 is set to indicate the error.
.Ee

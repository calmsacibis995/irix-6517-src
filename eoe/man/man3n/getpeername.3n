'\"macro stdmacro
.if n .pH g3n.getpeername @(#)getpeername	40.10 of 5/23/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} getpeername 3N "" "\&"
.if \nX=1 .ds x} getpeername 3N ""
.if \nX=2 .ds x} getpeername 3N "" "\&"
.if \nX=3 .ds x} getpeername "" "" "\&"
.TH \*(x}
.SH NAME
\f4getpeername\fP \- get name of connected peer
.SH SYNOPSIS
.nf
.P
.ft 4
int getpeername(int s, caddr_t name, int \(**namelen);
.fi
.SH DESCRIPTION
.P
\f4getpeername\fP
returns the name of the peer connected to socket
\f2s\f1.
The
\f4int\fP
pointed to by the
\f2namelen\f1
parameter should be initialized to indicate
the amount of space pointed to by
\f2name\f1.
On return it contains the actual size of the name
returned (in bytes).
The name is truncated if the buffer provided is too small.
.SH RETURN VALUE
.P
\f40\fP is returned if the call succeeds, \f4-1\fP if it fails.
.SH ERRORS
.P
The call succeeds unless:
.TP 20
\f4EBADF\f1
The argument
.I s
is not a valid descriptor.
.TP
\f4ENOTSOCK\f1
The argument
.I s
is a file, not a socket.
.TP
\f4ENOTCONN\f1
The socket is not connected.
.TP
\f4ENOMEM\f1
There was insufficient user memory for the operation
to complete.
.TP
\f4ENOSR\f1
There were insufficient
STREAMS
resources available for the operation to complete.
.SH "SEE ALSO"
\f4accept\fP(3N),
\f4bind\fP(3N),
\f4getsockname\fP(3N),
\f4socket\fP(3N).
.SH NOTES
.P
The type of address structure passed to \f4accept\fP
depends on the address family.
UNIX domain sockets (address family \f4AF_UNIX\fP) require a
\f4socketaddr_un\fP structure as defined in \f4sys/un.h\f1; 
Internet domain sockets (address family \f4AF_INET\fP)
require a \f4sockaddr_in\fP structure as defined in
\f4netinet/in.h\fP.
Other address families may require other structures.
Use the structure appropriate to the address family; cast the
structure address to a generic \f4caddr_t\fP in the call to
\f4getpeername\fP 
and pass the size of the structure in the \f2namelen\fP argument.

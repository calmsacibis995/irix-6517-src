'\"macro stdmacro
.if n .pH g3n.rpc_xdr @(#)rpc_xdr	40.7 of 4/9/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.\" ident	"@(#)svid_rs:rs_lib/rpc_xdr	1.4"
.\ "@(#)rpc_xdr.new 1.1 89/04/06 SMI;
'\" macro stdmacro
.\" Copyright (c) 1988 Sun Microsystems, Inc. - All Rights Reserved.
.nr X
.if \nX=0 .ds x} rpc_xdr 3N "" "\&"
.if \nX=1 .ds x} rpc_xdr 3N ""
.if \nX=2 .ds x} rpc_xdr 3N "" "\&"
.if \nX=3 .ds x} rpc_xdr "" "" "\&"
.TH \*(x}
.SH NAME
.na
\f4rpc_xdr\fP:  \f4 xdr_accepted_reply\f1, \f4xdr_authsys_parms\f1, \f4xdr_callhdr\f1, \f4xdr_callmsg\f1, \f4xdr_opaque_auth\f1, \f4xdr_rejected_reply\f1, \f4xdr_replymsg\f1 \- XDR library routines for remote procedure calls
.ad
.SH DESCRIPTION
These routines are used for describing the RPC
messages in XDR language.
They should normally be used by those who do not
want to use the RPC package.
.SS Routines
See \f4rpc\fP(3N) for the definition of the
\f4XDR\f1
data structure.
.P
.ft 4
.nf
.sp .5
#include <rpc/rpc.h>
.fi
.ft 1
.br
.if t .ne 7
.P
.ft 4
.nf
.sp .5
bool_t
xdr_accepted_reply(XDR *xdrs, const struct accepted_reply *ar);
.fi
.ft 1
.IP
Used for encoding RPC reply messages.
It encodes the status of the
RPC call in the XDR language format,
and in the case of success,
it encodes the call results also.
.br
.if t .ne 7
.P
.ft 4
.nf
.sp .5
bool_t
xdr_authsys_parms(XDR *xdrs, const struct authsys_parms *aupp);
.fi
.ft 1
.IP
Used for describing
operating system credentials.
It includes machine-name,
uid,
gid list,
etc.
.br
.if t .ne 7
.P
.ft 4
.nf
.sp .5
void
xdr_callhdr(XDR *xdrs, const struct rpc_msg *chdr);
.fi
.ft 1
.IP
Used for describing RPC call header messages.
It encodes the static
part of the call message header in the XDR language format.
It includes information such as
transaction ID,
RPC version number,
program and version number.
.br
.if t .ne 7
.P
.ft 4
.nf
.sp .5
bool_t
xdr_callmsg(XDR *xdrs, const struct rpc_msg *cmsg);
.fi
.ft 1
.IP
Used for describing RPC call messages.
This includes all the
RPC call information such as transaction ID,
RPC version number,
program number,
version number,
authentication information,
etc.
This is normally
used by servers to determine information about the client RPC call.
.br
.if t .ne 7
.P
.ft 4
.nf
.sp .5
bool_t
xdr_opaque_auth(XDR *xdrs, const struct opaque_auth *ap);
.fi
.ft 1
.IP
Used for describing RPC opaque
authentication information messages.
.br
.if t .ne 7
.P
.ft 4
.nf
.sp .5
bool_t
xdr_rejected_reply(XDR *xdrs, const struct rejected_reply *rr);
.fi
.ft 1
.IP
Used for describing RPC reply messages.
It encodes the rejected RPC message in the XDR language format.
The message could be rejected either because of version
number mis-match or because of authentication errors.
.br
.if t .ne 8
.P
.ft 4
.nf
.sp .5
bool_t
xdr_replymsg(XDR *xdrs, const struct rpc_msg *rmsg);
.fi
.ft 1
.IP
Used for describing RPC reply messages.
It encodes all the RPC reply
message in the XDR language format
This reply could be either an acceptance,
rejection or \f4NULL\fP.
.SH "SEE ALSO"
\f4rpc\fP(3N)

.\" %Z%%M% %I% %E% ; TSIG - TSIX(RE) 1.1
.TH t6recvfrom 3N "12 Nov 1995" "TSIX(RE) 1.1"
.SH NAME
t6recvfrom \- Read security attributes and data from a trusted endpoint
.SH SYNOPSIS
.B cc [ flags ... ] file ... 
.I -lt6
.PP
.B #include <sys/t6attrs.h>
.PP
.br
.nf
.ft 3
int t6recvfrom(int fd, char *buf, int len, int flags,
	struct sockaddr *from, int *fromlen, 
	t6attr_t attr_ptr, t6mask_t *new_attrs);
.ft P
.fi
.SH DESCRIPTION
.I t6recvfrom() 
receives data and its associated security attributes from
a communication endpoint.
The 
.I from 
and 
.I fromlen
parameters are only used if you wish to receive the source address for the 
data.  This may not be applicable for some trusted endpoints.  If not used, 
these fields should be set to 
.I 0\c
\&.
If
.I from
is not a
NULL
pointer, the source address of the message is filled in.
.I fromlen
is a value-result parameter, initialized to the size of
the buffer associated with
.IR from ,
and modified on return to indicate the actual size of the
address stored there.
The length of the message is returned.
If a message is too long to fit in the supplied buffer,
excess bytes may be discarded depending on the type of socket
the message is received from (see
.IR socket(3N)).
.LP
The
.I flags
parameter is formed by
OR\c
ing
one or more of the following:
.TP 
MSG_OOB
Read any \(lqout-of-band\(rq data present on the
socket rather than the regular \(lqin-band\(rq data.  If
.I attr_ptr
is non-\c
NULL\c
, \(lqout-of-band\(rq data security attributes
are also retrieved.
.TP
MSG_PEEK
\(lqPeek\(rq at the data present on the socket;
the data is returned, but not consumed,
so that a subsequent receive operation will see
the same data.  If
.I attr_ptr
is non-\c
NULL\c
, security attributes of the data
are also peeked.
.ne 10
.LP
.I attr_ptr
specifies a control structure in which to store 
those attributes the caller wishes to retrieve.  
To get an attribute from the control structure, see 
.IR t6get_attr(3N)\c
\&.
Any attribute that the receiving process does not care to receive may 
not be specified in the control structure.
This minimizes the attribute translation 
time when passing the attributes out of the kernel.  
.LP
If the 
.IR t6new_attr(3N)
call was made previously with a setting of 
ON\c
, the security attributes of the received data will be returned 
only if they have changed from the last set read.
.I *new_attrs 
is set to the mask of those attributes actually
returned. If new attributes are detected, all attributes requested 
by the receiving process are returned, not just those that have changed.
.LP
Again, it is critical that the return value
always be checked.  It is the number of bytes actually received, or 
.I \-1
with the error code stored in 
.I errno\c
\&.  Revocation of access is possible
if the received data changes to a level not accessible to the receiving process.
.SH "ERRORS"
Errors generated by 
.I t6recvfrom() 
is 
indicated by the global variable 
.IR errno .
.LP
The calls fail if:
.TP 15
[EBADF]
.I fd
is an invalid file descriptor.
.TP
[EINTR]
The operation was interrupted by delivery of a signal before
any data was available to be received.
.TP
[EIO]
An I/O error occurred while reading from or writing to the file system.
.TP
[ENOMEM]
There was insufficient user memory available for the operation to
complete.
.TP
[ENOSR]
There were insufficient
STREAMS
resources available for the operation
to complete.
.TP
[ENOTSOCK]
.B fd
is not a socket.
.TP
[ESTALE]
A stale NFS file handle exists.
.SH "RETURN VALUE"
.I t6recvfrom() 
returns 
.B \-1 
on failure, and the number of bytes read on successful completion.
.SH "SEE ALSO"
libt6(3N),
t6get_attr(3N),
t6sendto(3N).
.SH SOURCE
Trusted Systems Interoperability Group
.SH NOTES

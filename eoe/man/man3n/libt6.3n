.\" %Z%%M% %I% %E% ; TSIG - TSIX(RE) 1.1
.TH libt6 3N "12 Nov 1995" "TSIX(RE) 1.1"
.SH NAME
libt6 \- TSIX trusted IPC library (part of libc in Trusted IRIX)
.SH SYNOPSIS
.B "#include <sys/t6attrs.h>"
.SH DESCRIPTION
.B libt6
constitutes the 
.SM TSIX 
Application Program Interface (\c
.SM API\c
).  
It is a library of routines that an application uses to control
attribute transport during trusted interprocess communication.  
In Trusted IRIX, the functions defined by TSIG for \f4libt6\fP have
been incorporated into \f4libc\fP.  The
routines in the library are recommended over the underlying system
call interfaces for portability because they shield the application
from operating system, communication protocol, and 
.SM IPC 
mechanism
specifics.
.LP
The 
.B libt6
routines provide interfaces through which the
trusted application:
.TP .25i
\(bu 
Specifies the security attributes used to label outgoing 
.SM IPC 
messages (\c
.I "on-message attributes"\c
) and reads 
the on-message attributes associated with a received message.
.TP .25i
\(bu 
Controls the security options of the endpoint used to 
perform trusted 
.SM IPC.
.SH "SECURITY ATTRIBUTES"
At the application level, trusted 
.SM IPC 
can be described as a series of 
messages passed between peer processes.  Within the trusted kernel
the attribute transport service labels each 
.SM IPC 
message with the security 
attributes associated with the sending process to protect sensitive 
information in the message and to propagate security-related information 
between communicating Trusted Computing Bases (\c
.SM TCB\c
s). 
The security attributes associated with the sending process are called 
on-message 
attributes because they are independent of the contents of the message.  
The 
.SM TCB\c
s decide what to do with the message based on the
on-message attributes.  
The security attributes associated with a process, and therefore those 
that are used to label 
.SM IPC 
messages, vary with the configuration 
of the system but must be a subset of the following attributes:
.IP
Clearance
.IP
Sensitivity label
.IP
Information label (not supported by Trusted IRIX)
.IP
Integrity Label
.IP
Nationality Caveats
.IP
Effective Privileges 
.IP
Login User ID
.IP
Additional Audit Information
.IP
Network Session ID
.IP
Discretionary IDs (user ID, group ID, and supplementary groups)
.IP
Process ID
.LP
NOTE: Some of these attributes imply component security policies
that may not be available on some systems.
.LP
The 
.SM TSIX 
program interface allows trusted applications
to change the on-message attributes associated with an outgoing 
message and retrieve the on-message attributes associated with 
an incoming message.
.SH "ON-MESSAGE ATTRIBUTE ROUTINES"
The on-message attribute routines affect the security
attributes associated with outgoing messages or retrieve attributes
associated with incoming messages.  The caller specifies attributes to 
these routines through a 
.I t6attr_t
control structure (defined in 
.I <sys/t6attrs.h>\c
, an opaque structure used to access sets of security attributes.  The caller 
specifies the attributes applied to outbound messages or retrieved 
from incoming messages through 
.SM TSIX 
routines.  Specified attributes are copied 
from or written to the buffers accessible through the control structure.  
Any attributes not designated by the sender are supplied for outgoing 
messages by the underlying trusted kernel.  The routines that send and 
retrieve on-message attributes operate on sockets or streams, 
generically referred to as endpoints.
.TP 22
.IR t6alloc_blk (3N)
Allocates a
.I t6attr_t
control structure and storage for
the specified set of security attributes.
.TP 22
.IR t6clear_blk (3N)
Marks specified attributes in the control block as invalid.
.TP 22
.IR t6cmp_blk (3N)
Compares two attribute blocks for equality.
.TP 22
.IR t6copy_blk (3N)
Copies a 
.I t6attr_t 
control structure and 
the security attributes to which it points into a second, previously allocated
.I t6attr_t 
structure and its previously allocated buffers.
.TP 22
.IR t6dup_blk (3N)
Given one attribute control structure, this routine allocates enough
storage to hold a duplicate control structure and all attributes it
references, and creates a duplicate.
.TP 22
.IR t6free_blk (3N)
Frees attribute control structure and buffers.  This interface should
be used in conjunction with 
.IR t6alloc_blk (3N)\c
, which allocates the
space.
.TP 22 
.IR t6attr_alloc (3N) 
Allocates space for the 
.I t6attr_t
control structure with security attributes set.
.TP 22
.IR t6cmp_attr (3N)
Compares the two sets of attributes. 
.TP 22
.IR t6copy_attr (3N)
Copies a 
.I t6attr_t 
control structure and 
the security attributes to which it points into a second, previously allocated
.I t6attr_t 
structure and its previously allocated buffers.
.TP 22
.IR t6create_attr (3N)
Allocates a
.I t6attr_t
control structure and storage for
the specified set of security attributes. 
.TP 22
.IR t6dup_attr (3N)
Given one attribute control structure, this routine allocates enough
storage to hold a duplicate control structure and all attributes it
references, and creates a duplicate.
.TP 22
.IR t6free_attr (3N)
Frees attribute control structure and buffers.  This interface should
be used in conjunction with 
.IR t6create_attr (3N)\c
, which allocates the
space.
.TP 22
.IR t6size_attr (3N)
Gets the size of an attribute from the control structure.
.TP 22
.IR t6get_attr (3N)
Gets an attribute handled by the control structure.
.TP 22
.IR t6set_attr (3N)
Sets an attribute handled by the control structure.
.TP 22
.IR t6sendto (3N)
Sends data and a specified set of security attributes on a endpoint.
.TP 22
.IR t6recvfrom (3N)
Reads a network message and retrieves the security attributes
associated with the data.
.TP 22
.IR t6peek_attr (3N)
Peeks ahead and returns the attributes associated with the next byte
of data.
.TP 22
.IR t6last_attr (3N)
Returns the security attributes associated with the last
byte of data read from the network endpoint.
.TP 22
.IR t6get_endpt_mask (3N)
Gets the endpoint mask.
.TP 22
.IR t6set_endpt_mask (3N)
Sets the endpoint mask.
.TP 22
.IR t6get_endpt_default (3N)
Gets the endpoint default security attributes.
.TP 22
.IR t6set_endpt_default (3N)
Sets the endpoint default security attributes.
.SH "NETWORK ENDPOINT SECURITY OPTIONS"
A trusted application can manipulate a number of security
options associated with the network endpoint via the following calls:
.TP 22
.IR t6mls_socket (3N)
Turns on or off security policy with regard to a network endpoint.
.TP 22
.IR t6ext_attr (3N)
Turns on or off the security extensions to the network endpoint.
This must be called before using any other 
.B libt6 
routines.
.TP 22
.IR t6new_attr (3N)
Specifies to the network endpoint that
the receiving process is only interested in receiving attributes
if they have changed since the last time it received them.  This
saves the overhead created by passing attributes unnecessarily
with each message.
.SH "MaxSIX REMOTE HOST DATABASE SECURITY OPTIONS"
A trusted application can manipulate the 
.IR MSIXRHDB 
via the following calls:
.TP 22
.IR t6rhdb_flush (3N)
Remove an entry from the
.IR RHDB.
.TP 22
.IR t6rhdb_get_host (3N)
Query the 
.Ir RHDB 
for an entry.
.TP 22
.IR t6rhdb_put_host (3N)
Write and entry to the 
.Ir RHDB 
.TP 22
.IR t6rhdb_stat (3N)
Retrives information on the RHDB.
.SH "INCLUDE FILES"
Any programs that use routines in this library must include the header
files containing declarations pertinent to the routine.  The synopsis
section of each manual page indicates the required header files.  Most
routines in the library contain references to declarations defined in
.IR <sys/t6attrs.h> .  
This file defines constants for attribute types to
be used by various 
.SM TSIX 
attribute library access functions, as well as constants used
as parameters to the library functions.
.SH SOURCE
Trusted Systems Interoperability Group
.SH NOTES

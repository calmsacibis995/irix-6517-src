'\"macro stdmacro
.if n .pH g3n.getnetconfig @(#)getnetconfig	40.20 of 5/21/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} getnetconfig 3N "Networking Support Utilities" "\&"
.if \nX=1 .ds x} getnetconfig 3N "Networking Support Utilities"
.if \nX=2 .ds x} getnetconfig 3N "" "\&"
.if \nX=3 .ds x} getnetconfig "" "" "\&"
.TH \*(x}
.SH "NAME"
\f4getnetconfig\f1 \- get network configuration database entry
.SH "SYNOPSIS"
.nf
\f4#include <netconfig.h>
.sp .5
void \(**setnetconfig(void);
.sp .5
struct netconfig \(**getnetconfig(void \(**handlep);
.sp .5
int endnetconfig(void \(**handlep);
.sp .5
struct netconfig \(**getnetconfigent(char \(**netid);
.sp .5
void freenetconfigent(struct netconfig \(**netconfigp);\f1
.fi
.P
.\"[\(rh  Should \f4NCONF_HANDLE\fP be defined here? \(lh]
.SH "DESCRIPTION"
The five library routines described on this page are
part of the UNIX System V
Network Selection component.
They provide application access to
the system network configuration database, \f4/etc/netconfig\f1.
In addition to the \f4netconfig\f1 database and the routines for
accessing it, Network Selection includes the environment variable
\f4NETPATH\f1
[see \f4environ\f1(5)]
and the 
\f4NETPATH\f1
access routines described in \f4getnetpath\f1(3N).
.P
A call to \f4setnetconfig\f1 has the effect of ``binding'' or
``rewinding'' the \f4netconfig\f1 database.
\f4setnetconfig\f1
must be called before the first call to \f4getnetconfig\f1
and may be called at any
other time.
\f4setnetconfig\f1 need \f2not\f1 be called before a call to 
\f4getnetconfigent\f1.
\f4setnetconfig\f1
returns a unique handle to be used by \f4getnetconfig\f1.
.P
When first called, \f4getnetconfig\f1 returns a pointer to the
current entry in the \f4netconfig\f1 database, formatted as a
\f4netconfig\f1 structure.
\f4getnetconfig\f1 can thus be
used to search the entire \f4netconfig\f1 file.
\f4getnetconfig\f1 returns
\f4NULL\f1 at end of file.
.P
\f4endnetconfig\f1 should be called
when processing is complete to release resources for reuse.
Programmers should be aware, however, that 
the last call to \f4endnetconfig\f1
frees all memory allocated by \f4getnetconfig\f1 for the
\f4struct netconfig\fP data structure.
\f4endnetconfig\f1 may not be called before
\f4setnetconfig\f1.
\f4endnetconfig\f1 returns \f40\f1 on success and \f4\-1\f1 on failure
(for example, if \f4setnetconfig\f1 was not called previously).
.P
\f4getnetconfigent\fP returns a pointer to the
\f4netconfig\f1 structure corresponding
to \f2netid\f1.
It returns \f4NULL\f1 if \f2netid\f1 is invalid
(that is, does not name an entry in the \f4netconfig\f1 database).
It returns
\f4NULL\f1 and sets \f2errno\f1 in case of failure (e.g., if
\f4setnetconfig\fP was not called previously).
.P
\f4freenetconfigent\fP frees the 
netconfig structure pointed to by \f2netconfigp\fP,
previously returned by \f4getnetconfigent\fP.
.SH "SEE ALSO"
\f4netconfig\fP(4), \f4getnetpath\fP(3N),
\f4environ\fP(5)

'\"macro stdmacro
.if n .pH g3n.t_rcv @(#)t_rcv	40.9 of 5/23/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} t_rcv 3N "Networking Support Utilities" "\&"
.if \nX=1 .ds x} t_rcv 3N "Networking Support Utilities"
.if \nX=2 .ds x} t_rcv 3N "" "\&"
.if \nX=3 .ds x} t_rcv "" "" "\&"
.if \nX=4 .ds x} t_rcv "NS_LIB" "EXTENSION" " "
.TH \*(x}
.SH NAME
\f4t_rcv\f1 \- receive data or expedited data sent over a connection
.SH SYNOPSIS
\f4#ifdef _XOPEN_SOURCE\f1
.br
\f4#include <xti.h>\f1
.br
\f4#endif\f1
.PP
\f4int t_rcv (int fd, char \(**buf, unsigned nbytes, int \(**flags);\f1
.SH DESCRIPTION
This function receives either normal or expedited data.
\f4fd\fP
identifies the local transport endpoint through which data will arrive,
\f4buf\fP
points to a receive buffer where user data will be placed, and
\f4nbytes\fP
specifies the size of the receive buffer.
\f4flags\fP
may be set on return from
\f4t_rcv\fP
and specifies optional flags as described below.
.PP
By default, \f4t_rcv\fP
operates in synchronous mode and will
wait for data to arrive if none is currently available.
However, if
\f4O_NDELAY\fP
or
\f4O_NONBLOCK\fP
is set (via
\f4t_open\fP
or
\f4fcntl\fP),
\f4t_rcv\fP
will execute in asynchronous mode and will 
fail if no data is available.
(See \f4TNODATA\fP below.)
.PP
On return from the call,
if \f4T_MORE\fP is set in
\f4flags\fP,
this indicates that there is more data and the current
transport service data unit (\f4TSDU\fP) or expedited transport
service data unit (\f4ETSDU\fP)
must be received in multiple
\f4t_rcv\fP
calls.
Each
\f4t_rcv\fP
with the \f4T_MORE\fP flag set indicates that another
\f4t_rcv\fP
must follow to get more data for the current \f4TSDU\fP.
The end of the \f4TSDU\fP is identified by the return of a
\f4t_rcv\fP
call with the \f4T_MORE\fP flag not set.
If the transport provider does not support the concept of a \f4TSDU\fP
as indicated in the
\f4info\fP
argument on return from
\f4t_open\fP
or
\f4t_getinfo\fP,
the
\f4T_MORE\fP
flag is not meaningful and should be ignored.
.PP
On return, the data returned is expedited data
if \f4T_EXPEDITED\fP is set in \f4flags\f1.
If the number of bytes of expedited data exceeds
\f4nbytes\fP,
\f4t_rcv\fP
will set \f4T_EXPEDITED\fP and \f4T_MORE\fP on return from the initial call.
Subsequent calls to retrieve the remaining \f4ETSDU\fP will have
\f4T_EXPEDITED\fP set on return.
The end of the \f4ETSDU\fP is identified by the return of a
\f4t_rcv\fP call with the \f4T_MORE\fP flag not set.
.P
If expedited data arrives after part of a \f4TSDU\fP has
been retrieved, receipt of the remainder of the \f4TSDU\fP
will be suspended until the \f4ETSDU\fP has been processed.
Only after the full \f4ETSDU\fP has been retrieved (\f4T_MORE\fP not set)
will the remainder of the \f4TSDU\fP be available to the user.
.P
This function resides within both the X/Open compliant \f4libxnet\f1 and 
the SVR4 compliant \f4libnsl\f1 Network Services libraries.  Network Services
applications which require X/Open compliance must link-load with \f4-lxnet\f1.
Network Services applications which require SVR4 compliance must link-load 
with \f4-lnsl\f1.
.P
On failure, \f4t_errno\f1 may be set to one of the following:
.TP 19
\f4TBADF\fP
The specified file descriptor does not refer to a transport endpoint.
.TP
\f4TNODATA\fP
\f4O_NDELAY\fP or \f4O_NONBLOCK\fP was set, but
no data is currently available from the transport provider.
.TP
\f4TLOOK\fP
An asynchronous event has occurred on this transport endpoint and requires
immediate attention.
.TP
\f4TNOTSUPPORT\fP
This function is not supported by the underlying transport
provider.
.TP
\f4TOUTSTATE\fP
If \f4_XOPEN_SOURCE\f1 is defined, then this error will be returned within
\f4t_errno\f1 when \f4t_rcv\f1() was issued in the wrong sequence on the
transport endpoint referenced by \f4fd\f1.
.TP
\f4TSYSERR\fP
A system error has occurred during execution of this function.
.SH SEE ALSO
\f4fcntl\fP(2), \f4t_getinfo\fP(3N), \f4t_look\fP(3N),
\f4t_open\fP(3N), \f4t_snd\fP(3N)
.SH DIAGNOSTICS
On successful completion, \f4t_rcv\fP returns the number of bytes
received, and it returns \-1 on failure and \f4t_errno\fP
is set to indicate the error.
.Ee

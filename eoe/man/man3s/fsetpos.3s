'\"macro stdmacro
.if n .pH g3s.fsetpos @(#)fsetpos	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} FSETPOS 3S "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} FSETPOS 3S "C Programming Language Utilities"
.if \nX=2 .ds x} FSETPOS 3S "" "\&"
.if \nX=3 .ds x} FSETPOS "" "" "\&"
.TH \*(x}
.SH NAME
fsetpos, fsetpos64, fgetpos, fgetpos64 \- reposition a file pointer in a stream
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.B "int fsetpos (\s-1FILE\s+1 \(**stream, const fpos_t \(**pos);"
.PP
.B "int fsetpos64 (\s-1FILE\s+1 \(**stream, const fpos64_t \(**pos);"
.PP
.B "int fgetpos (\s-1FILE\s+1 \(**stream, fpos_t \(**pos);"
.PP
.B "int fgetpos64 (\s-1FILE\s+1 \(**stream, fpos64_t \(**pos);"
.SH DESCRIPTION
.I Fsetpos\^
and 
.I fgetpos\^
save and restore the file position indicated by the value of the
object pointed at by 
.IR pos .
.PP
The functions \f2fsetpos64\f1 and \f2fgetpos64\f1 are identical to
\f2fsetpos\f1 and \f2fgetpos\f1 respectively, except that they take an
\f2fpos64_t\f1 * as an argument.  This allows for the specification of a
file position that is greater that 2 Gigabytes.
.PP
A call to 
.I fgetpos\^
stores the current value of the file position indicator for \f2stream\fP
in the object pointed at by
.IR pos .
The information is encoded in a format which may only be usable by
.IR fsetpos
for the repositioning the \f2stream\fP to its position at the time
of the call to 
.I fgetpos.
.PP
.I Fsetpos\^
restores the file position of the 
.I stream\^
to the value encoded in the object
pointed at by
.IR pos ,
which must have been set by a previous call to 
.I fgetpos\^
on the same stream.
A successful call to
.I fsetpos\^
clears the end-of-file indicator for the stream and undoes any effect of
the 
.IR ungetc (3S)
function on it.  After a call to 
.IR fsetpos ,
the next operation on an update stream may be either input or output.
.SH SEE ALSO
lseek(2),
fseek(3s),
fopen(3S),
popen(3S), stdio(3S), ungetc(3S).
.SH DIAGNOSTICS
If successful, both 
.I fsetpos\^
and 
.I fgetpos\^
return zero.  On failure, they return non-zero and set 
.B errno\^
to indicate the error.
.Ee

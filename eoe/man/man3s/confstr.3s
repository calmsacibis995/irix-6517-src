'\"macro stdmacro
.if n .pH g2.confstr $Revision: 1.2 $
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} confstr 3S "" "" "\&"
.if \nX=1 .ds x} confstr 3S "" ""
.if \nX=2 .ds x} confstr 3S "" "\&"
.if \nX=3 .ds x} confstr "" "" "\&"
.TH \*(x}
.SH NAME
\f4confstr\f1 \- get configurable variables
.SH SYNOPSIS
\f4#include \f1<\f4unistd.h\f1>
.PP
\f4size_t confstr (int name, char \(**buf, size_t len);\fP
.SH DESCRIPTION
\f4confstr\fP
copies information relating to the
UNIX
system on which the process is executing into the buffer pointed to by
.IR buf .
\f2len\f1 is the size of the buffer.
.PP
The POSIX P1003.1 interface
\f4sysconf\fP [see \f4sysconf\fP(2)]
provides a similar class of configuration information,
but returns an integer rather than a string.
.PP
The
.IR command s
available are:
.TP 14n
\f4_CS_SYSNAME
Copy into the array pointed to by \f2buf\fP
the string that would be returned by
\f4uname\fP [see \f4uname\fP(2)]
in the
.IR "sysname " field.
This is the name of the implementation of the operating system, for example,
.IR "System V " "or " UTS .
.TP
\f4_CS_HOSTNAME
Copy into the array pointed to by \f2buf\fP
a string that names the present host machine.
This is the string that would be returned by
\f4uname\fP
in the
.IR "nodename " field.
This hostname or nodename is often the name the machine is known by locally.
.IP
The \f2hostname\fP is the name of this machine as a node in some network;
different networks may have different names for the node,
but presenting the nodename to the appropriate
network Directory or name-to-address mapping service should
produce a transport end point address.
The name may not be fully qualified.
.IP
Internet host names may be up to 256 bytes in
length (plus the terminating null).
.TP
\f4_CS_RELEASE
Copy into the array pointed to by \f2buf\fP
the string that would be returned by
\f4uname\fP
in the
.IR "release " field.
Typical values might be
.IR 4.0 " or " 3.2 .
.TP
\f4_CS_VERSION
Copy into the array pointed to by \f2buf\fP
the string that would be returned by
\f4uname\fP
in the
.IR "version " field.
The syntax and semantics of this string are defined by the system provider.
Under IRIX, this is the date and time that the system was generated and has the form \f3mmddhhmm\fP.
.TP
\f4_CSMACHINE
Copy into the array pointed to by \f2buf\fP
the string that would be returned by
\f4uname\fP
in the
.IR "machine " field,
for example,
.IR IP27 " or " IP30 .
.TP
\f4_CS_ARCHITECTURE
Copy into the array pointed to by \f2buf\fP
a string describing the instruction set architecture of the
current system, for example,
\f2MIPS-II\fP, \f2m32100\fP, or \f2i80486\fP.
These names may not match predefined names in the C language compilation system.
.TP
\f4_CS_HW_PROVIDER
Copies the name of the hardware manufacturer into the array
pointed to by \f2buf\fP.
.TP
\f4_CS_HW_SERIAL\fP
Copy into the array pointed to by \f2buf\fP
a string which is the ASCII representation of the
32 bit hardware-specific identifier of the physical machine on which the
system call is executed.
Note that this may be implemented in Read-Only Memory, via software
constants set when building the operating system, or by other means,
and may contain non-numeric characters.
It is anticipated that manufacturers will not issue the same ``32-bit
identifier'' to more than one physical machine.
The pair of strings returned by \f4_CS_HW_PROVIDER\fP
and \f4_CS_HW_SERIAL\fP
is likely to be unique across all vendor's System V implementations.
.TP
\f4_CS_INITTAB_NAME\fP
Copy into the array pointed to by \f2buf\fP a string that is the
pathname of the \f4inittab\fP file used by the currently running
bootable operating system.
This is the same as the file specified by the \f4INITTAB\fP keyword
found in the \f4system\fP file [see \f4system\fP(4)].
.TP
\f4_MIPS_CS_VENDOR\fP
Copy into the array pointed to by \f2buf\fP a string
which is the name of the company providing the system. The vendor
is the company actually selling the product rather than the company
which built the product. Eg: "Silicon Graphics Inc".
.TP
\f4_MIPS_CS_OS_PROVIDER\fP
Copy into the array pointed to by \f2buf\fP a string
which is the name of the company providing the operating system. This is
the name of the company which built the operating system.
Eg: "Silicon Graphics Inc".
.TP
\f4_MIPS_CS_OS_NAME\fP
Copy into the array pointed to by \f2buf\fP a string
which is the name of the operating system. Eg: "IRIX".
.TP
\f4_MIPS_CS_HW_NAME\fP
Copy into the array pointed to by \f2buf\fP a string
which is the name of the hardware platform. This is the name
of the platform in the pricelist. Eg: "IP19"
.TP
\f4_MIPS_CS_NUM_PROCESSORS\fP
Copy into the array pointed to by \f2buf\fP a string
which is the ASCII representation of the number of configured
processors. Eg: "16"
.TP
\f4_MIPS_CS_HOSTID\fP
Copy into the array pointed to by \f2buf\fP a string
which is the ASCII representation of the host id in hex.
This example uses sgi.sgi.com, which has an internet address of
192.26.75.5. Eg: "c01a4b05"
.TP
\f4_MIPS_CS_OSREL_MAJ\fP
Copy into the array pointed to by \f2buf\fP a string
which is the ASCII representation of the  OS major release
number.
.TP
\f4_MIPS_CS_OSREL_MIN\fP
Copy into the array pointed to by \f2buf\fP a string
which is the ASCII representation of the OS minor release
number.
.TP
\f4_MIPS_CS_OSREL_PATCH\fP
Copy into the array pointed to by \f2buf\fP a string
which is the ASCII representation of the OS patch release number.
.TP
\f4_MIPS_CS_PROCESSORS\fP
Copy into the array pointed to by \f2buf\fP a string
which is the processor type. In the case of a multiprocessor,
this will be a comma separated list with _MIPS_CS_NUM_PROCESSORS
entries.
.TP
\f4_MIPS_CS_AVAIL_PROCESSORS\fP 
Copy into the array pointed to by \f2buf\fP a string
which is the ASCII representation of the number of processors
available for running unrestricted processes.
.TP
\f4_MIPS_CS_SERIAL\fP
This is the same as \f4_CS_HW_SERIAL\fP.
.TP
\f4_CS_XBS5_ILP32_OFF32_CFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as compilation options to \f2cc\fP for a 32-bit
programming model.
.TP
\f4_CS_XBS5_ILP32_OFF32_LDFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as linking options to \f2cc\fP for a 32-bit
programming model.
.TP
\f4_CS_XBS5_ILP32_OFF32_LIBS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as library options to \f2cc\fP for a 32-bit
programming model.
.TP
\f4_CS_XBS5_ILP32_OFF32_LINTFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as options to \f2lint\fP for a 32-bit
programming model.
.TP
\f4_CS_XBS5_ILP32_OFFBIG_CFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as compilation options to \f2cc\fP for a 32-bit
with long off_t programming model.
.TP
\f4_CS_XBS5_ILP32_OFFBIG_LDFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as linking options to \f2cc\fP for a 32-bit
with long off_t programming model.
.TP
\f4_CS_XBS5_ILP32_OFFBIG_LIBS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as library options to \f2cc\fP for a 32-bit
with long off_t programming model.
.TP
\f4_CS_XBS5_ILP32_OFFBIG_LINTFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as options to \f2lint\fP for a 32-bit
with long off_t programming model.
.TP
\f4_CS_XBS5_LP64_OFF64_CFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as compilation options to \f2cc\fP for a 64-bit
programming model.
.TP
\f4_CS_XBS5_LP64_OFF64_LDFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as linking options to \f2cc\fP for a 64-bit
programming model.
.TP
\f4_CS_XBS5_LP64_OFF64_LIBS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as library options to \f2cc\fP for a 64-bit
programming model.
.TP
\f4_CS_XBS5_LP64_OFF64_LINTFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as options to \f2lint\fP for a 64-bit
programming model.
.TP
\f4_CS_XBS5_LPBIG_OFFBIG_CFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as compilation options to \f2cc\fP for a 64-bit
or greater programming model.
.TP
\f4_CS_XBS5_LPBIG_OFFBIG_LDFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as linking options to \f2cc\fP for a 64-bit
or greater programming model.
.TP
\f4_CS_XBS5_LPBIG_OFFBIG_LIBS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as library options to \f2cc\fP for a 64-bit
or greater programming model.
.TP
\f4_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS\fP
Copy into the array pointed to by \f2buf\fP a string
which can be given as options to \f2lint\fP for a 64-bit
or greater programming model.
.P
\f4confstr\fP fails if the following is true:
.TP 14n
\f4EINVAL\f1
\f2buf\fP does not point to a valid address.
.SH "DIAGNOSTICS"
Upon successful completion,
the value returned indicates the buffer size in bytes required
to hold the complete value and the terminating null character.
If this value is no greater than the value passed in \f2len\fP,
the entire string was copied;
if this value is greater than \f2len\fP, the string copied into
.I buf
has been truncated to \f2len\-1\fP bytes plus a terminating null character.
.PP
.PD
Otherwise, a value of \-1 is returned and
\f4errno\fP
is set to indicate the error.
.SH "USAGE"
A good starting guess for \f2len\fP is 257, which is likely
to cover all strings returned by this interface in typical installations.
.SH "SEE ALSO"
\f4uname\fP(2), 
\f4gethostname\fP(3), \f4gethostid\fP(3),
\f4sysconf\fP(3C), \f4<unistd.h>\fP, \f4<regexp.h>\fP

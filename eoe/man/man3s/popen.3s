'\"macro stdmacro
.if n .pH g3s.popen @(#)popen	30.3 of 1/19/86
.nr X
.if \nX=0 .ds x} POPEN 3S "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} POPEN 3S "C Programming Language Utilities"
.if \nX=2 .ds x} POPEN 3S "" "\&"
.if \nX=3 .ds x} POPEN "" "" "\&"
.TH \*(x}
.SH NAME
popen, pclose \- initiate pipe to/from a process
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.B "FILE \(**popen (const char \(**command, const char \(**type);"
.PP
.B int pclose (FILE \(**stream);
.SH DESCRIPTION
.I popen\^
creates a pipe between the calling program and the command to be executed.
The arguments to 
.I popen\^
are pointers to null-terminated strings.
.IR Command
consists of a shell command line.
.IR Type
is an I/O mode, either
.B "r"
for reading or
.B "w"
for writing.
The value returned 
is a stream pointer such that
one can write to the standard input
of the command,
if the I/O mode is
.BR "w" ,
by writing to the file
.IR stream ;
and one can read from the standard output of the command,
if the I/O mode is
.BR  "r" ,
by reading from the file
.IR stream .
.PP
A stream opened by
.I popen\^
should be closed by
.IR pclose ,
which waits for the associated process to terminate
and returns the exit status of the command.
.PP
Because open files are shared, a type
.B "r"
command
may be used as an input filter
and a type
.B "w"
as an output filter.
.SH EXAMPLE
A typical call may be:
.PP
.RS
.nf
.ft 4
#include <stdio.h>
#include <stdlib.h>

main()
{
        char \(**cmd = "/usr/bin/ls \(**.c";
        char buf[BUFSIZ];
        FILE \(**ptr;

        if ((ptr = popen(cmd, "r")) != NULL)
                while (fgets(buf, BUFSIZ, ptr) != NULL)
                        (void) printf("%s", buf);
        return 0;
}
.ft 1
.fi
.RE
.PP
This will print in
.IR stdout
[see
.IR stdio
(3S)]
all the file names in the current directory that have a ``.c'' suffix.
.SH "SEE ALSO"
pipe(2),
wait(2),
fclose(3S),
fopen(3S), stdio(3S),
system(3S).
.SH DIAGNOSTICS
.I popen\^
returns a
.SM NULL
pointer
if files or processes cannot be created.
.PP
.I Pclose\^
returns \-1 if
.I stream\^
is not associated with a
.RI `` popen\^ ed''
command.
.SH WARNING
If the original and
.RI `` popen\^ ed''
processes concurrently read or write a common file,
neither should use buffered I/O, because the buffering
gets all mixed up.
Problems with an output filter may be
forestalled by careful buffer flushing, e.g. with
.IR fflush 
[see
.IR fclose (3S)].
.PP
Full pathnames should be used (or reset PATH variable)
and the IFS environment variable should be set to space
and tab(\f2"\et"\fP) to avoid possible security problems.  It should
be noted that these environment variables are inherited from
the parent process.
'\".so /pubs/tools/origin.att
.\"	@(#)popen.3s	6.2 of 10/20/83
.Ee

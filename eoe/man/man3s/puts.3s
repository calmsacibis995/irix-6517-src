'\"macro stdmacro
.if n .pH g3s.puts @(#)puts	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} PUTS 3S "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} PUTS 3S "C Programming Language Utilities"
.if \nX=2 .ds x} PUTS 3S "" "\&"
.if \nX=3 .ds x} PUTS "" "" "\&"
.TH \*(x}
.SH NAME
puts, fputs \- put a string on a stream
.SH SYNOPSIS
.B #include <stdio.h>
.PP
.B int puts (const char \(**s);
.PP
.B "int fputs (const char \(**s, \s-1FILE\s+1 \(**stream);
.SH DESCRIPTION
.I puts\^
writes the null-terminated string pointed to by
.IR s
,followed by a new-line character,
to the standard output stream
.IR stdout.
.PP
.I fputs\^
writes the null-terminated string pointed to by
.I s\^
to the named output
.IR stream .
.PP
Neither function writes the terminating
null character.
.SH "SEE ALSO"
exit(2), lseek(2), write(2), abort(3C),
fclose(3S), ferror(3S), fopen(3S), fread(3S),
printf(3S), putc(3S), stdio(3S).
.SH DIAGNOSTICS
On success both routines return the number of characters written;
otherwise they return
.SM
.B EOF.
This will happen if
the routines try to write on a file that has not been opened for writing.
.SH NOTES
.I puts\^
appends a new-line character while
.I \^fputs\^
does not.
'\".so /pubs/tools/origin.att
.\"	@(#)puts.3s	6.2 of 10/20/83
.Ee

'\"! tbl | mmdoc
'\"macro stdmacro
.if n .pH g5.fcntl @(#)fcntl	40.18 of 5/1/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} fcntl 5 "" "\&"
.if \nX=1 .ds x} fcntl 5 ""
.if \nX=2 .ds x} fcntl 5 "" "\&"
.if \nX=3 .ds x} fcntl "" "" "\&"
.TH \*(x}
.SH NAME
fcntl \- file control options
.SH SYNOPSIS
.nf
\f3#include <fcntl.h> \f1
.fi
.SH DESCRIPTION
The \f2fcntl.h\fP header
defines the following
requests and arguments for use by the functions
\f2fcntl\fP (see \f2fcntl\fP(2))
and
\f2open\fP (see \f2open\fP(2)).
.P
.columns 2 3 3
.TS
tab (@);
l s s.
Values for \f2cmd\fP used by \f2fcntl\fP (the following values are unique):@@
.T&
l l l.
 @\f3F_DUPFD\fP@Duplicate file descriptor
 @\f3F_GETFD\fP@Get file descriptor flags
 @\f3F_SETFD\fP@Set file descriptor flags
 @\f3F_GETFL\fP@Get file status flags
 @\f3F_SETFL\fP@Set file status flags
 @\f3F_GETLK\fP@Get record locking information
 @\f3F_SETLK\fP@Set record locking information
 @\f3F_SETLKW\fP@Set record locking information;@
 @@wait if blocked
 @\f3F_ALLOCSP\fP@Allocate file space
 @\f3F_ALLOCSP\fP@Allocate 64-bit file space
 @\f3F_FREESP\fP@Free file space
 @\f3F_FREESP\fP@Free 64-bit file space
 @\f3F_SETBSDLK\fP@Set BSD record locking information
 @\f3F_SETBSDLKW\fP@Set BSD record locking information;@
 @@wait if blocked
 @\f3F_DIOINFO\fP@Get direct I/O parameters
 @\f3F_RSETLK\fP@Remote SETLK for NFS
 @\f3F_RGETLK\fP@Remote GETLK for NFS
 @\f3F_RSETLKW\fP@Remote SETLKW for NFS
 @\f3F_GETOWN\fP@Get owner (socket emulation)
 @\f3F_SETOWN\fP@Set owner (socket emulation)
 @\f3F_SETTRANSFER\fP@Set transfer context for data pipe
 @\f3F_DESTROYTRANSFER\fP@Destroy transfer context for data pipe
 @\f3F_ALLOCSP64\fP@Allocate file space
 @\f3F_FREESP64\fP@Free file space
 @\f3F_GETLK64\fP@Get record locking information
 @\f3F_SETLK64\fP@Set record locking information
 @\f3F_SETLKW64\fP@Set record locking information;@
 @@wait if blocked
 @\f3F_RESVSP\fP@Reserve file space
 @\f3F_UNRESVSP\fP@Unreserve file space
 @\f3F_RESVSP64\fP@Reserve file space
 @\f3F_UNRESVSP64\fP@Unreserve file space
 @\f3F_FSGETXATTRA\fP@Get extended attributes
 @\f3F_FSYNC\fP@Flush a file range
 @\f3F_FSYNC64\fP@Flush a 64-bit file range
 @\f3F_GETBIOSIZE\fP@Get the preferred buffer I/O sizes
 @\f3F_SETBIOSIZE\fP@Set the preferred buffer I/O sizes
.sp
.T&
l s s.
File descriptor flags used for \f2fcntl\fP:
.T&
l l l.
@\f3FD_CLOEXEC\fP@Close the file descriptor upon
@@execution of an exec function [see \f2exec\fP(2)]
.sp
.T&
l s s.
File status flags used for \f2open\fP and \f2fcntl\fP:
.T&
l l l.
@\f3O_NDELAY\fP@Non-blocking I/O
@\f3O_APPEND\fP@Append
@\f3O_SYNC\fP@Synchronous write option
@\f3O_DSYNC\fP@Synchronous write option for data
@\f3O_RSYNC\fP@Synchronous data integrity read
@\f3FASYNC\fP@Interrupt-driven I/O for sockets
@\f3O_NONBLOCK\fP@Non-blocking I/O
@\f3O_LCFLUSH\fP@Flush cache on last close
@\f3O_LCINVAL\fP@Flush and invalidate cache on last close
.sp
.T&
l s s.
Values for \f2l_type\fP used for record locking with \f2fcntl\fP
(the following values are unique):
.T&
l l l.
 @\f3F_RDLCK\fP@Shared or read lock
 @\f3F_UNLCK\fP@Unlock
 @\f3F_WRLCK\fP@Exclusive or write lock
.sp
.T&
l s s.
Values for \f2oflag\fP used by \f2open\fP:
.T&
l l l.
@\f3O_CREAT\fP@Create file if it does not exist
@\f3O_EXCL\fP@Exclusive use flag
@\f3O_NOCTTY\fP@Do not assign controlling tty
@\f3O_TRUNC\fP@Truncate flag
@\f3O_DIRECT\fP@Direct I/O
@\f3O_LARGEFILE\fP@Allow large file opens
.sp
.T&
l s s.
Mask for use with file access modes:
.T&
l l l.
@\f3O_ACCMODE\fP@Mask for file access modes
.sp
.T&
l s s.
File access modes used for \f2open\fP and \f2fcntl\fP:
.T&
l l l.
@\f3O_RDONLY\fP@Open for reading only
@\f3O_RDWR\fP@Open for reading and writing
@\f3O_WRONLY\fP@Open for writing only
.TE
.ne 1i
.P
The constants used for file modes are defined to have the same values as in
\f4sys/stat.h\f1.  These constants exist in \f4fcntl.h\f1 also in order to
comply with the XPG4 standards.
.Ex
\f3#define S_ISUID\fP     /* set user id on execution */
\f3#define S_ISGID\fP     /* set group id on execution */
\f3#define S_IRWXU\fP     /* read, write, execute: owner */
\f3#define S_IRUSR\fP     /* read permission: owner */
\f3#define S_IWUSR\fP     /* write permission: owner */
\f3#define S_IXUSR\fP     /* execute permission: owner */
\f3#define S_IRWXG\fP     /* read, write, execute: group */
\f3#define S_IRGRP\fP     /* read permission: group */
\f3#define S_IWGRP\fP     /* write permission: group */
\f3#define S_IXGRP\fP     /* execute permission: group */
\f3#define S_IRWXO\fP     /* read, write, execute: other */
\f3#define S_IROTH\fP     /* read permission: other */
\f3#define S_IWOTH\fP     /* write permission: other */
\f3#define S_IXOTH\fP     /* execute permission: other */
.Ee
.P
The constants used for the \f4lseek\fP routine are defined to have the same
values as in \f4unistd.h\fP.  These constants exist in \f4fcntl.h\f1 also 
in order to comply with the XPG4 standards.
.Ex
\f3#define SEEK_SET\fP     /* Set file pointer to "offset" */
\f3#define SEEK_CUR\fP     /* Set file pointer to current plus"offset" */
\f3#define SEEK_END\fP     /* Set file pointer to EOF plus"offset" */
.Ee
.P
The structure \f2flock\fP describes a file lock.
It includes the following members:
.Ex
short   l_type;     /* Type of lock */
short   l_whence;   /* Flag for starting offset */
off_t   l_start;    /* Relative offset in bytes */
off_t   l_len;      /* Size; if 0 then until EOF */
long    l_sysid;    /* Returned with F_GETLK */
pid_t   l_pid;      /* Returned with F_GETLK */
.Ee
.P
The structure \f2flock64\fP describes a file lock for use on large files.
It includes the following members:
.Ex
short   l_type;     /* Type of lock */
short   l_whence;   /* Flag for starting offset */
off64_t l_start;    /* Relative offset in bytes */
off64_t l_len;      /* Size; if 0 then until EOF */
long    l_sysid;    /* Returned with F_GETLK */
pid_t   l_pid;      /* Returned with F_GETLK */
.Ee
.P
The structure \f2biosize\fP is used to pass information about
the preferred I/O sizes used for a file.
It contains the following members:
.Ex
__uint32_t biosz_flags;     /* 1 if defaults are overridden */
__int32_t  biosz_read;      /* all values specified as log */
__int32_t  biosz_write;     /*     base2 of the true length */
__int32_t  dfl_biosz_read;  /* Returned with F_GETBIOSIZE */
__int32_t  dfl_biosz_write; /* Returned with F_GETBIOSIZE */
.Ee
.SH "SEE ALSO"
creat(2),
exec(2),
fcntl(2),
open(2)

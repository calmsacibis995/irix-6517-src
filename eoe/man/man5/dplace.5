.TH DPLACE 5
.SH NAME
\f3dplace\f1 \- NUMA placement specification

.SH DESCRIPTION
Placement specifications are described in placement files or
invoked from the command language library.
A valid placement specification contains descriptions for memory
and thread placement. Memory topologies as well as affinities to
devices may also be specified. Shared virtual address ranges can be mapped
to a specified memory. Page size and page migration thresholds can
also be controlled.

.P
.SH EXAMPLE


An example placement file describing two memories and two threads
might look like:

.nf
\f3
# placement specification file 

# set up 2 memories which are close
memories 2 in topology cube 

# set up 2 threads
threads 2 

# run the first thread on the 2nd memory
run thread 0 on memory 1 

# run the 2nd thread on the first memory
run thread 1 on memory 0 

\f1
.fi

This specification, when used for initial placement, would request 2
nearby memories from the operating system. At creation, the threads
are requested to run on an available cpu which is local to the 
specified memory. As data and stack space
is touched or faulted in, physical memory is allocated from the memory 
which is local to the thread which initiated the fault.
.P
.SH SUMMARY
Commands are newline terminated. 

Characters following the comment delimiter '#' are ignored.

Tokens are separated by optional whitespace which is ignored.

Line continuation is a \\, and must occur between tokens.

In what follows  \f2k\f1,\f2l\f1,\f2m\f1,\f2n\f1,\f2t0\f1,\f2t1\f1,\f2dt\f1,\f2m0\f1,\f2m1\f1 and \f2dm\f1 are arithmetic expressions
that can contain environment variables preceded by a '$'.

A legal statement could be:
.PP
\f3memories ( $MP_SET_NUMTHREADS + 1)/2 in cube \f1
.PP
The first example can be written in a scalable fashion as follows:
.nf
\f3
# scalable placement specification file 

# set up memories which are close
memories $MP_SET_NUMTHREADS in topology cube 

# set up threads
threads  $MP_SET_NUMTHREADS

# run reversed threads across the memories

distribute threads $MP_SET_NUMTHREADS-1:0:-1 across memories

\f1
.fi
Static specifications may occur in a placement file or be called later from
\f3dplace\f1(3) library routines. Dynamic specifications may only be called from
\f3dplace\f1(3) library routines.
Here is a summary of the grammar.

Static specifications:
.PP
\f3memories\f1 \f2m\f1 [[\f3in\f1] [\f3topology\f1] \f3cube\f1|\f3none\f1|\f3physical\f1] [\f3near\f1 [\f2/hw/*\f1]+]
.PP
\f3threads\f1 \f2n\f1
.PP
\f3run\f1 \f3thread\f1 \f2n\f1 \f3on\f1 \f3memory\f1 \f2m\f1 [\f3using cpu\f1 \f2k\f1] 
.PP
\f3distribute\f1 \f3threads\f1 [\f2t0\f1:\f2t1\f1[:\f2dt\f1]] \f3across\f1 \f3memories\f1 [\f2m0\f1:\f2m1\f1[:\f2dm\f1]] [\f3block\f1 [\f2m\f1]]|[\f3cyclic\f1 [\f2n\f1]] 
.PP
\f3place\f1 \f3range\f1 \f2k\f1\f3 \f3to\f1 \f2l\f1 \f3on\f1 \f3memory\f1 \f2m\f1 [[\f3with\f1] \f3pagesize\f1 \f2n\f1 [\f3k\f1|\f3K\f1|\f3m\f1|\f3M\f1] ]
.PP

\f3policy\f1 \f3stack\f1|\f3data\f1|\f3text\f1 \f3pagesize\f1 \f2n\f1 [\f3k\f1|\f3K\f1|\f3m\f1|\f3M\f1]
.PP
\f3policy\f1 \f3stack\f1|\f3data\f1|\f3text\f1 \f3pagewait\f1 [\f3off\f1|\f3on\f1]
.PP
\f3policy\f1 \f3migration\f1 \f2n\f1 [\f3%\f1]
.PP
\f3mode\f1 \f3verbose\f1 [\f3on\f1|\f3off\f1|\f3toggle\f1]
.PP
Dynamic specifications:

.PP
\f3migrate\f1 \f3range\f1 \f2k\f1\f3 \f3to\f1 \f1\f2l\f1 \f3to\f1 \f3memory\f1 \f2m\f1 
.PP
\f3move\f1 \f3thread\f1|\f3pid\f1 \f2n\f1 \f3to\f1 \f3memory\f1 \f2m\f1
.PP


.PP

In the above, the specification: \f3threads\f1  \f2t0\f1:\f2t1\f1[:\f2dt\f1]
means to use threads numbered \f2t0\f1 through \f2t1\f1 with an optional
stride of \f2dt\f1. The default stride value is 1.

Similarly, the specification: \f3memories\f1 [\f2m0\f1:\f2m1\f1[:\f2dm\f1]]
means to use memories  \f2m0\f1 through \f2m1\f1 with an optional
stride of \f2dm\f1. The default stride value is 1.

The qualifier \f3block\f1 \f2m\f1 implies a block distribution
of the threads with at most \f2m\f1 threads per memory. If  \f2m\f1
is omitted, its default value is: the integer ceiling of the number of 
threads being distributed divided by the number of memories being distributed
across.

The qualifier \f3cyclic\f1 \f2n\f1 implies a cyclic distribution of the
selected threads across the selected memories. The threads are chosen
in groups of  \f2n\f1 and dealt out to the appropriate memory until
all threads are used. If \f2n\f1 is omitted, its default
value is one and the threads are dealt out to the memories like
a deck of cards.

.SH COMMON PLACEMENT FILE ERRORS
The most common placement file error is the use of either the
\f3run\f1 or \f3distribute\f1 directive without previously declaring
both the number of threads, and the number of memories using the
\f3memories\f1 and \f3threads\f1 directives.

.SH TERMINOLOGY
In the above, a \f3thread\f1 is an IRIX process or any of its
descendants which were created using \f3sproc\f1(2) or
\f3fork\f1(2). Thread numbers are ordered (from 0 to the number of
threads minus 1 ) in the same way as the pid's for each process.

A \f3memory\f1 is an instantiation of a physical memory.

A \f3range\f1 is a virtual address range such as 0x100000 to 0x200000.


.SH SEE ALSO

\f3dplace\f1(1), \f3dprof\f1(1), \f3dplace\f1(3),
\f3numa\f1(5), \f3mmci\f1(5), \f3hwgraph\f1(4)

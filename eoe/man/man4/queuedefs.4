'\"macro stdmacro
.TH QUEUEDEFS 4
.SH NAME
queuedefs \- at/batch/cron queue description file
.SH SYNOPSIS
.LP
.B /usr/lib/cron/queuedefs
.SH DESCRIPTION
The
.I queuedefs\^
file describes the characteristics of the queues managed by
.IR cron (1M).
Each non-comment line in this file describes one queue.
The format of the lines are as follows:
.RS
.LP
\f2q\f3.\f1[\f2njob\f3j\f1][\f2nice\f3n\f1][\f2nwait\f3w\f1]
.RE
.LP
The fields in this line are:
.RS
.TP
.I q\^
The name of the queue.
.B a
is the default queue for jobs started by
.IR at (1);
.B b
is the default queue for jobs started by
.IR batch (1);
.B c
is the default queue for jobs run from a
.B crontab
file.
The name must be a lower case letter.
.TP
.I njob\^
The maximum number of jobs that can be run simultaneously in that queue; if
more than
.I njob\^
jobs are ready to run, only the first
.I njob\^
jobs will be run, and the others will be run as jobs that are currently running
terminate.  The default value is 100.
.TP
.I nice\^
The
.IR nice (1)
value to give to all jobs in that queue that are not run with a user
.SM ID
of super-user.
Valid nice values are 0 to 19.  The default value is 2.
.TP
.I nwait\^
The number of seconds to wait before rescheduling a job that was deferred
because more than
.I njob\^
jobs were running in that job's queue, or because more than 25 jobs were
running in all the queues.  The default value is 60.
.RE
.LP
Lines beginning with
.B #
are comments, and are ignored.
.SH EXAMPLE
.RS
.nf
.ft 3
a.4j1n
b.2j2n90w
.RE
.fi
.ft 1
.LP
This file specifies that the
.B a
queue, for
.I at\^
jobs, can have up to 4 jobs running simultaneously; those jobs will be run with
a
.I nice\^
value of 1.  As no
.I nwait\^
value was given, if a job cannot be run because too many other jobs are running
.I cron\^
will wait 60 seconds before trying again to run it.
The
.B b
queue, for
.I batch\^
jobs, can have up to 2 jobs running simultaneously; those jobs will be run with
a
.I nice\^
value of 2.  If a job cannot be run because too many other jobs are running,
.I cron\^
will wait 90 seconds before trying again to run it.
All other queues can have up to 100 jobs running simultaneously; they will be
run with a
.I nice\^
value of 2, and if a job cannot be run because too many other jobs are running
.I cron\^
will wait 60 seconds before trying again to run it.
.SH FILES
/usr/lib/cron/queuedefs
.SH "SEE ALSO"
cron(1M)
.Ee
'\".so /pubs/tools/origin.att

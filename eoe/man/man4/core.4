.nr X
.if \nX=0 .ds x} core 4 "" "\&"
.TH \*(x}
.SH NAME
core \- format of core image file
.SH SYNOPSIS
.nf
\f3#include <core.out.h>\f1
.fi
.SH DESCRIPTION
The
IRIX
system writes out a core image of a terminated
process when any of various errors occur.
See
.IR signal (2)
for the list of reasons;
the most common are memory violations, illegal
instructions, bus errors, and user-generated
quit signals.
The core image is called
.I core
and is written in the process's
working directory (provided it can be;
normal access controls apply).
A process with an effective user
ID
different from the real user
ID
does not produce a core image.
.PP
The format of the core image is defined by
.IR <core.out.h> .
It consists
of a header, maps, descriptors, and section data.
.PP
The header data includes the process name (as in
.IR ps (1)),
the signal that
caused the core dump, the descriptor array, and the
corefile location of the map array.
.PP
Each descriptor defines the length of useful process data.
One descriptor defines the general-purpose registers at the time of
the core dump for example.
The data is present in the core image at the file location given in the
descriptor only if the
IVALID
flag is set in the descriptor.
.PP
Each map defines the virtual address and length of a
section of the process at the time of the core dump.
The data is present in the core image at the file location given in the
descriptor only if the
VDUMPED
flag is set in the map.
The process's stack and data sections are normally written in the core image.
The process's text is not normally written in the core image.
.SH NOTE
Core image format designed by Silicon Graphics, Inc.
.SH "SEE ALSO"
dbx(1),
ps(1),
setuid(2),
signal(2).

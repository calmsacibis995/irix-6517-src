.TH lvtab 4
.SH NAME
lvtab \- information about logical volumes
.SH DESCRIPTION
The file
.I /etc/lvtab
describes the logical volumes used by the local machine.
There is an entry in this file for every logical volume which is
used by the system.  This subsystem is no longer supported with the 
current release. The file format description exists in order to facilitate
conversion to its replacement XLV.
.PP
The file consists of entries which have the form:
.Ex
\f2volume_device_name:[volume_name]:[options:]device_pathnames\f1
.Ee
For example:
.Ex
lv0:logical volume test:stripes=3:devs=/dev/dsk/ips0d1s7, \\
/dev/dsk/ips0d2s7, /dev/dsk/ips0d3s7
.Ee
Fields are separated by colons, and lines can be continued by the usual
backslash convention as illustrated above.
A `#' as the first non-white character indicates a comment; blank lines can
be present in the file and are ignored.
.PP
The fields in each entry have the following significance:
.TP
.I volume_device_name
This indicates the names of the special files through which the system
accesses the logical volume.
In the above example, the entry
.I lv0
implies that the logical volume is accessed via the device special files
/dev/dsk/lv0 and /dev/rdsk/lv0.
Note that volume device names are expected to
be of the form 'lv' followed by one or 2 digits; this is enforced by the
logical volume utilities.
.TP
.I volume name
This is a human-readable identifying name for the logical volume.
The logical
volume labels on the disks constituting a volume also carry a copy of the
volume name, so utilities are able to check that the
logical volume on the disks physically present is actually the volume
expected by
.IR /etc/lvtab .
.IP
This field can be null (indicated by a second colon immediately following the
one terminating the
.I volume_device_name
field).
This is legal but deprecated,
since in this case, no identity check of the logical volume can be done by
the utilities.
.TP
.I options
Some numerical options concerning the volume can appear.
These are specified
in the format "option_name=number:".
There must be no space between the
option_name, the '=' sign, the numerical value given, and the terminating
colon.
Note that since the number of options is variable, the terminating
colon is considered part of the option entry: it is not necessary to
indicate omitted options.
.IP
Currently recognized options are:
.sp .8v
.RS
	\f3stripes=\f1
.br
	\f3step=\f1
.RE
.IP
The \f3stripes\f1 option allows a striped logical volume to be created;
the value
of the parameter specifies the number of ways the volume storage is striped
across its constituent devices.
If this option is omitted, the logical
volume is unstriped.
.IP
The \f3step\f1 option is meaningful only for striped volumes (and is ignored
otherwise); it specifies the
granularity with which the storage is to be round-robin distributed over
the constituent devices.
If this option is omitted, the default \f3step\f1 value is
the device tracksize; this is generally a good value so the \f3step\f1 option
is not normally needed.
\f3step\f1 is in units of 512-byte blocks.
.TP
.I device_pathnames
Following any numerical options, there must be a list of the block special file
pathnames of the devices constituting the logical volume.
This is introduced
by the keyword
.sp .8v
.RS
	\f3devs=\f1
.RE
.IP
The pathnames must be comma-separated.
.IP
Each pathname should be the name of the special file for a disk device
partition in the
.I /dev/dsk
directory.
The partition must be one which is
legal for use as normal data storage--it must not be one of the
dedicated partitions such as the disk volume label, track replacement area,
and so on.
.IP
If the volume is striped, some
restrictions apply:
the number of pathnames must be a multiple of
.BR stripes .
Further, considering the pathnames as successive groups, each of
.B stripes
pathnames, the devices in each group must be all of the same size.
.IP
To obtain best performance from striping, each disk (within every group
of \f3stripes\f1 disks) should be on a separate controller.
.LP
The entries from this file are accessed using the program 
.IR lv_to_xlv (1M),
which outputs a conversion script to translate between the two formats.
The file structure is defined in the
.I <lvtab.h>
include file.
.SH FILES
/etc/lvtab
.SH SEE ALSO
lv_to_xlv(1M),

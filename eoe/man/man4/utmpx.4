'\"!  tbl | mmdoc
'\"macro stdmacro
.if n .pH g4.utmpx @(#)utmpx	40.19 of 5/1/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} utmpx 4 "" "\&"
.if \nX=1 .ds x} utmpx 4 ""
.if \nX=2 .ds x} utmpx 4 "" "\&"
.if \nX=3 .ds x} utmpx "" "" "\&"
.TH \*(x}
.SH NAME
\f4utmpx\f1, \f4wtmpx\f1 \- utmp and wtmp extended-format entries
.SH SYNOPSIS
\f4#include <utmpx.h>\f1
.SH DESCRIPTION
\f4utmpx\f1 and \f4wtmpx\f1 files are extended versions of \f4utmp\f1
and \f4wtmp\f1, resp., containing records of type \f4struct utmpx\f1.
The \f4utmpx\f1 struct is a superset of the \f4utmp\f1 struct, 
containing both additional fields and larger array allocation for several
existing fields.  \f4utmpx\f1's most significant addition is the
\f4ut_host\f1 field, which identifies the host from which
the entry's job originated (if applicable).  All Silicon Graphics
X terminal emulators initialize the field to $DISPLAY
(see \f4xdm\f1(1)), but it may be blank (eg. a dumb terminal connected
to a serial port).  Also, \f4utmpx\f1's \f4ut_user\f1 and \f4ut_line\f1
fields accommodate longer strings than their \f4utmp\f1 counterparts.
.PP
\f4utmpx\f1 and \f4wtmpx\f1 records have the following structure,
defined in \f4utmpx.h\f1:
.PP
.ft 4
.nf
.ps -1
#define UTMPX_FILE   "/var/adm/utmpx"
#define WTMPX_FILE   "/var/adm/wtmpx"
#define ut_name      ut_user
#define ut_xtime     ut_tv.tv_sec
.sp .5
.tr ~ 
struct     utmpx {
   char    ut_user[32];     /\(** user login name \(**/
   char    ut_id[4];        /\(** /etc/inittab id (created by \(**/
                            /\(** process that puts entry in utmp) \(**/
   char    ut_line[32];     /\(** device name (console, lnxx) \(**/
   pid_t   ut_pid;          /\(** process id \(**/
   short   ut_type;         /\(** type of entry \(**/
   struct  exit_status {
      short  e_termination; /\(** process termination status \(**/
      short  e_exit;        /\(** process exit status \(**/
   } ut_exit;               /\(** exit status of a process \(**/
                            /\(** marked DEAD_PROCESS \(**/
   struct timeval ut_tv;    /\(** time entry was made \(**/
   long ut_session;         /\(** session ID, used for windowing \(**/
   long pad[5];             /\(** reserved for future use \(**/
   short ut_syslen;         /\(** length of ut_host including null \(**/
   char ut_host[257];       /\(** remote host name \(**/
};
.sp .5
/\(**  Definitions for ut_type  \(**/
.sp .5
#define EMPTY         0
#define RUN_LVL       1
#define BOOT_TIME     2
#define OLD_TIME      3
#define NEW_TIME      4
#define INIT_PROCESS  5   /\(** process spawned by "init" \(**/
#define LOGIN_PROCESS 6   /\(** a "getty" process waiting for login \(**/
#define USER_PROCESS  7   /\(** a user process \(**/
#define DEAD_PROCESS  8
#define ACCOUNTING    9
#define UTMAXTYPE     ACCOUNTING /\(** max legal value of ut_type \(**/
.sp .5
/\(**  Below are the special strings or formats used in the "ut_line" \(**/
/\(**  field when accounting for something other than a process.  \(**/
/\(**  Strings for the ut_line field must be no more than 31 chars +  \(**/
/\(**  terminating NULL in length.  \(**/
.sp .5
#define RUNLVL_MSG     "run\-level %c"
#define BOOT_MSG       "system boot"
#define OTIME_MSG      "old time"
#define NTIME_MSG      "new time"
.fi
.ps
.SH FILES
\f4/var/adm/utmpx\f1
.br
\f4/var/adm/wtmpx\f1
.SH "WARNING"
All changes to \f4/var/adm/wtmp\f1 must also be logged in
\f4/var/adm/wtmpx\f1.  Most commands that extract information from
these files silently discard all \f4wtmpx\f1 entries without \f4wtmp\f1
complements.
.SH CAVEATS
Although the \f4ut_host\f1 field accommodates 257-character strings
(256 chars + NULL), many commands truncate it for simpler formatting.
"\f4w -W\f1" displays the \f4ut_host\f1 field on a new line,
and in its entirety.
.SH SEE ALSO
.br
\f4w\f1(1), \f4login\f1(1), \f4who\f1(1), \f4last\f1(1), \f4utmp\f1(4), 
\f4write\f1(1),
\f4xdm\f1(1),
\f4getut\f1(3C), \f4getutx\f1(3C)
\"	@(#)utmpx.4	6.2 of 10/20/83
.Ee

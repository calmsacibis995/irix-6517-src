.nr X
.if \nX=0 .ds x} gse 7 "Silicon Graphics" "\&"
.TH \*(x}
.SH NAME
gse \- \&Silicon Graphics 5080 workstation interface card
.SH DESCRIPTION
The special file /dev/gse provides access to the Silicon Graphics
5080 workstation interface card, which connects a Silicon Graphics 4D
system to a Channel Controller attached to an IBM mainframe.
The connection of the interface card can be coaxial, V.35, or T1.
.PP
This special file is used by the IBM 5080 emulator (em5080(1)).
The following control functions are provided by the driver to the
emulator via ioctl(2).
.LP
.ta 0.4i 0.9i 1.4i 2.2i
.nf
	#include <sys/gseio.h>
	struct gse_io gseio;
.sp .8v
	ioctl(fd,GIO_INIT,0);		/* reset the controller */
	ioctl(fd,GIO_SETIV,0);		/* load the intr vector */
	ioctl(fd,GIO_WAIT,timeout);	/* wait for controller intr */
	ioctl(fd,GIO_SIGNAL,signal);	/* send signal on controller intr */
	ioctl(fd,GIO_READ,&gseio);	/* cp from controller to user buf */
	ioctl(fd,GIO_WRITE,&gseio);	/* cp from user buf to controller */
.sp .8v
	struct gse_io {
		int	v_addr;		/* user virtual address */
		int	d_addr;		/* device real address */
		int	byte_ct;		/* byte count */
	};
.fi
.PP
Access to the board from the application level emulator is also done
through memory mapped addressing directly.
The standard mmap(2) function is provided by the driver to set that up.
.PP
The standard select(2) function is also supported by the driver to
facilitate the operation on the controller event from the emulator.
.SH FILES
/dev/gse
.SH SEE ALSO
'\".SH ORIGIN
'\"Silicon Graphics, Inc.
cleanup(1),
em3270(1),
em5080(1),
gateway(1),
ld5080(1),
sh5080(1).

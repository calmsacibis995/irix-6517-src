'\"macro stdmacro
.if n .pH man7.tcp @(#)tcp	30.3 of 2/1/86
.nr X
.if \nX=0 .ds x} TCP 7P "Silicon Graphics" "\&"
.if \nX=1 .ds x} TCP 7P "Source Code Control System Utilities"
.if \nX=2 .ds x} TCP 7P "" "\&"
.if \nX=3 .ds x} TCP "" "" "\&"
.TH \*(x}
.UC 5
.SH NAME
tcp \- Internet Transmission Control Protocol 
.SH SYNOPSIS
.B #include <sys/socket.h>
.br
.B #include <netinet/in.h>
.PP
.B s = socket(AF_INET, SOCK_STREAM, 0);
.SH DESCRIPTION
The TCP protocol provides reliable, flow-controlled, two-way
transmission of data.  It is a byte-stream protocol used to
support the SOCK_STREAM abstraction.  TCP uses the standard
Internet address format and, in addition, provides a per-host
collection of \*(lqport addresses\*(rq.  Thus, each address is composed
of an Internet address specifying the host and network, with
a specific TCP port on the host identifying the peer entity.
.PP
Sockets utilizing the tcp protocol are either \*(lqactive\*(rq or
\*(lqpassive\*(rq.  Active sockets initiate connections to passive
sockets.  By default TCP sockets are created active; to create a
passive socket the
.IR listen (2)
system call must be used
after binding the socket with the
.IR bind (2)
system call.  Only
passive sockets may use the 
.IR accept (2)
call to accept incoming connections.  Only active sockets may
use the
.IR connect (2)
call to initiate connections.
.PP
Passive sockets may \*(lqunderspecify\*(rq their location to match
incoming connection requests from multiple networks.  This
technique, termed \*(lqwildcard addressing\*(rq, allows a single
server to provide service to clients on multiple networks.
To create a socket which listens on all networks, the Internet
address INADDR_ANY
must be bound.  The TCP port may still be specified
at this time; if the port is left unspecified by setting it to 0,
the system will assign one.
Once a connection has been established the socket's address is
fixed by the peer entity's location.   The address assigned the
socket is the address associated with the network interface
through which packets are being transmitted and received.  Normally
this address corresponds to the peer entity's network.
.PP
TCP supports two socket options which can be
tested with
.IR getsockopt (2),
and manipulated with
.IR setsockopt (2).
These options are defined in
.IR <netinet/tcp.h> .
.TP
TCP_NODELAY
Under most circumstances, TCP sends data when it is presented;
when outstanding data has not yet been acknowledged, it gathers
small amounts of output to be sent in a single packet once
an acknowledgement is received.
For a small number of clients, such as window systems
that send a stream of mouse events which receive no replies,
this packetization may cause significant delays.
Therefore, TCP provides a boolean option, TCP_NODELAY,
to defeat this algorithm.
.TP
TCP_FASTACK
For certain applications, TCP's default behavior of delaying acknowledgements
may produce poor performance.  Therefore, it is possible to turn delayed
acknowledgements off using the
TCP_FASTACK option.  Use of this option is not generally recommended, as it
will cause more traffic than is normally desirable.
.PP
.I N.B.
Starting with IRIX 6.5, both TCP_NODELAY and TCP_FASTACK are inherited across
an 
.IR accept (2)
system call.
In previous IRIX releases this was not the case.
.PP
Options at the IP transport level may be used with TCP; see
.IR ip (7P).
Incoming connection requests that are source-routed are noted,
and the reverse source route is used in responding. 
The source route may be disabled by specifying a zero-length buffer with
the IP_OPTIONS option to
.IR setsockopt 
(see 
.IR ip (7P)).
.SH DIAGNOSTICS
A socket operation may fail with one of the following errors returned:
.TP 20
[EISCONN]
when trying to establish a connection on a socket which
already has one;
.TP 20
[ENOBUFS]
when the system runs out of memory for
an internal data structure;
.TP 20
[ETIMEDOUT]
when a connection was dropped
due to excessive retransmissions;
.TP 20
[ECONNRESET]
when the remote peer
forces the connection to be closed;
.TP 20
[ECONNREFUSED]
when the remote
peer actively refuses connection establishment (usually because
no process is listening to the port);
.TP 20
[EADDRINUSE]
when an attempt
is made to create a socket with a port which has already been
allocated;
.TP 20
[EADDRNOTAVAIL]
when an attempt is made to create a 
socket with a network address for which no network interface
exists.
.SH SEE ALSO
getsockopt(2), socket(2), intro(3), inet(7F), ip(7P)
.br
\f2IRIX Network Programming Guide\fP
'\".so /pubs/tools/origin.bsd

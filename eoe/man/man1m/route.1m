'\"macro stdmacro
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)route.8	8.3 (Berkeley) 3/19/94
.\"
.TH ROUTE 1M
.UC 4
.SH NAME
route \- manually manipulate the routing tables
.SH SYNOPSIS
\f3/usr/etc/route\f1
[\f3\-nqfF\f1] \f2command\f1 [[\f2modifiers\f1] \f2args\f1]
.SH DESCRIPTION
.I Route
is a utility used to manually manipulate the network
routing tables.  It normally is not needed, as a
system routing table management daemon such as
.IR routed (1M),
should tend to this task.
.PP
The
.I route
utility supports a limited number of general options,
but a rich command language, enabling the user to specify
any arbitrary request that could be delivered via the
programmatic interface
.\" discussed in
.\".Ir route 4 .
.TP 4
.B \-n
Bypasses attempts to print host and network names symbolically
when reporting actions.  (The process of translating between symbolic
names and numerical equivalents can be quite time consuming, and
may require correct operation of the network; thus it may be expedient
to forgo this, especially when attempting to repair networking operations),
.TP
.B \-v
(verbose) Print additional details.
.TP
.B \-q
Suppress all output.
.TP
.B \-F
Flush all entries, not just gateway entries, usually when restarting
the system.
Note that unless at least some of the major non-gateway routes
are immediately restored, the system will not work.
.PP
The
.I route
utility provides six commands:
.TP 10
.B add
Add a route.
.TP
.B flush
Remove all 'gateway' routes.
Non-gateway routes are added by device
drivers when the interface is configured, and so should
usually not be removed.
.TP
.B delete
Delete a specific route.
.TP
.B change
Change aspects of a route (such as its gateway).
.TP
.B get
Lookup and display the route for a destination.
.TP
.B monitor
Continuously report any changes to the routing information base, routing
lookup misses, or suspected network partitionings.
.PP
The monitor command has the syntax
.PP
	\f3route\f1 [\f3\-n\f1] \f3monitor\f1
.PP
The flush command has the syntax
.PP
	\f3route\f1 [\f3\-n\f1] [\f3\-F\f1] \f3flush\f1
.PP
If the
.B flush
command is specified,
.B route
will ``flush'' the routing tables of all gateway entries.
The \f3\-F\f1 flag flushes all entries are deleted.
.PP
The other commands have the following syntax:
.PP
    \f3route\f1 [\f3-n\f1] \f2command\f1 [\f3\-net\f1 | \f3-host\f1] \f2 destination gateway\f1
.PP
where
.I destination
is the destination host or network,
.I gateway
is the next-hop intermediary via which packets should be routed.
Routes to a particular host may be distinguished from those to
a network by interpreting the Internet address specified as the
.I destination
argument.
.PP
.I destination
may be specified with the keyword ``default''
(instead of an IP address or name) to specify a route to all possible
destinations; this is the route of last resort, used by the system if no better match
is found.
.PP
Configuring a static default route is often useful if there is only
one path available to get traffic out of the local subnet.  This can be 
accomplished easily by adding the route to
.BR /etc/config/static-route.options .
.\"It may also be desirable to disable
.\".IR routed (1M)
.\"with
.\".IR chkconfig (1M)
.\"in this case.
.PP
The optional modifiers
.B net
and
.B host
force the destination to be interpreted as a network or a host, respectively.
Otherwise, if the
.I destination
has a ``local address part'' of
INADDR_ANY ,
or if the
.I destination
is the symbolic name of a network, then the route is
assumed to be to a network; otherwise, it is presumed to be a
route to a host.
.PP
For example, 128.32 is interpreted as
.B \-host
128.0.0.32 ;
128.32.130
is interpreted as
.B \-host
128.32.0.130;
.B \-net
128.32 is interpreted as 128.32.0.0;
and
.B \-net
128.32.130 is interpreted as 128.32.130.0.
.PP
If the destination is directly reachable
via an interface requiring
no intermediary system to act as a gateway, the
.B \-interface
modifier should be specified;
the gateway given is the address of this host on the common network,
indicating the interface to be used for transmission.
.PP
The optional
.BR \-netmask
qualifier is intended
to achieve the effect of an OSI ESIS redirect with the netmask option,
or to manually add subnet routes with
netmasks different from that of the implied network interface
(as would otherwise be communicated using the OSPF or ISIS routing protocols).
One specifies an additional ensuing address parameter
(to be interpreted as a network mask).
The implicit network mask generated in the AF_INET case
can be overridden by making sure this option follows the destination parameter.
.PP
Routes have associated flags which influence operation of the protocols
when sending to destinations matched by the routes.
These flags may be set (or sometimes cleared)
by indicating the following corresponding modifiers:
.Ex
-cloning   RTF_CLONING    - generates a new route on use
-xresolve  RTF_XRESOLVE   - emit mesg on use (for external lookup)
-iface    ~RTF_GATEWAY    - destination is directly reachable
-static    RTF_STATIC     - manually added route
-nostatic ~RTF_STATIC     - pretend route added by kernel or daemon
-reject    RTF_REJECT     - emit an ICMP unreachable when matched
-blackhole RTF_BLACKHOLE  - silently discard pkts (during updates)
-proto1    RTF_PROTO1     - set protocol specific routing flag #1
-proto2    RTF_PROTO2     - set protocol specific routing flag #2
-llinfo    RTF_LLINFO     - validly translates proto addr to link addr
.Ee
.PP
The optional modifiers
.BR \-rtt ,
.BR \-rttvar ,
.BR \-sendpipe ,
.BR \-recvpipe ,
.BR \-mtu ,
.BR \-hopcount ,
.BR \-expire ,
and
.BR \-ssthresh
provide initial values to quantities maintained in the routing entry
by transport level protocols, such as TCP or TP4.
These may be individually locked by preceding each such modifier to
be locked by
the
.BR \-lock
meta-modifier, or one can
specify that all ensuing metrics may be locked by the
.BR \-lockrest
meta-modifier.
.PP
In a
.B change
or
.B add
command where the destination and gateway are not sufficient to specify
the route (as in the
.Tn ISO
case where several interfaces may have the
same address), the
.BR \-ifp
or
.BR \-ifa
modifiers may be used to determine the interface or interface address.
.PP
All symbolic names specified for a
.IR destination
or
.IR gateway
are looked up first as a host name using
.BR gethostbyname (3).
If this lookup fails,
.BR getnetbyname (3)
is then used to interpret the name as that of a network.
.PP
.B Route
uses a routing socket and the new message types
RTM_ADD,
RTM_DELETE,
RTM_GET,
and
RTM_CHANGE.
As such, only the super-user may modify
the routing tables.
.SH DIAGNOSTICS
.TP 4
.B "add [host \&| network ] %s: gateway %s flags %x"
The specified route is being added to the tables.  The
values printed are from the routing table entry supplied
in the
.BR ioctl (2)
call.
If the gateway address used was not the primary address of the gateway
(the first one returned by
.BR gethostbyname (3),
the gateway address is printed numerically as well as symbolically.
.TP
.B "delete [ host &| network ] %s: gateway %s flags %x"
As above, but when deleting an entry.
.TP
.B "%s %s done"
When the
.B flush
command is specified, each routing table entry deleted
is indicated with a message of this form.
.TP
.B "Network is unreachable"
An attempt to add a route failed because the gateway listed was not
on a directly-connected network.
The next-hop gateway must be given.
.TP
.B "not in table"
A delete operation was attempted for an entry which
wasn't present in the tables.
.TP
.B "routing table overflow"
An add operation was attempted, but the system was
low on resources and was unable to allocate memory
to create the new entry.
.SH SEE ALSO
netintro(7),
routed(1M).
.Bx 4.2 .
.SH BUGS
The first paragraph may have slightly exaggerated
.BR routed 's
abilities.
.SH FILES
/etc/config/static-route.options	static route configuration file

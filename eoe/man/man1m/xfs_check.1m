.TH xfs_check 1M
.SH NAME
xfs_check, xfs_check64 \- check XFS filesystem consistency
.SH SYNOPSIS
.nf
\f3xfs_check\f1 [ \f3\-i\f1 ino ] ... [ \f3\-b\f1 bno ] ... \c
[ \f3\-s\f1 ] [ \f3\-v\f1 ] xfs_special
.sp .8v
\f3xfs_check\f1 \f3\-f\f1 [ \f3\-i\f1 ino ] ... [ \f3\-b\f1 bno ] ... \c
[ \f3\-s\f1 ] [ \f3\-v\f1 ] file
.sp .8v
\f3xfs_check64\f1 [ \f3\-i\f1 ino ] ... [ \f3\-b\f1 bno ] ... \c
[ \f3\-s\f1 ] [ \f3\-v\f1 ] xfs_special
.sp .8v
\f3xfs_check64\f1 \f3\-f\f1 [ \f3\-i\f1 ino ] ... [ \f3\-b\f1 bno ] ... \c
[ \f3\-s\f1 ] [ \f3\-v\f1 ] file
.fi
.SH DESCRIPTION
.I xfs_check
checks whether an XFS filesystem is consistent.
It is normally run only when there is reason to believe that the
filesystem has a consistency problem.
The filesystem to be checked is specified by the
.I xfs_special
argument, which should be the disk or volume device for the filesystem.
Filesystems stored in files can also be checked, using the \f3\-f\f1 flag.
The filesystem should normally be unmounted or read-only
during the execution of
.IR xfs_check .
Otherwise, spurious problems are reported.
.PP
.I xfs_check64
is a 64-bit version of
.I xfs_check 
which is not as susceptible to running out of memory.
It is available only on 64-bit capable systems.
.PP
The options to \f2xfs_check\f1 are:
.TP 9
.B \-f
Specifies that the special device is actually a file (see the
\f2mkfs_xfs\f1 \f3\-d\f1 \f2file\f1 option).
This might happen if an image copy
of a filesystem has been made into an ordinary file.
.TP
.B \-s
Specifies that only serious errors should be reported.
Serious errors are those that make it impossible to find major data
structures in the filesystem.
This option can be used to cut down the
amount of output when there is a serious problem, when the output might make it
difficult to see what the real problem is.
.TP
.B \-v
Specifies verbose output; it is impossibly long for a
reasonably-sized filesystem.
This option is intended for internal use only.
.TP
.BI \-i " ino"
Specifies verbose behavior for a
specific inode.
For instance, it can be used to locate all the blocks
associated with a given inode.
.TP
.BI \-b " bno"
Specifies verbose behavior for a specific filesystem block.
For instance, it can be used to determine what a specific block
is used for.
The block number is a "file system block number".
Conversion between disk addresses (i.e. addresses reported by
.IR xfs_bmap )
and file system blocks may be accomplished using
.IR xfs_db 's
.B convert
command.
.PP
Any non-verbose output from
.I xfs_check
means that the filesystem has an inconsistency.
The filesystem can be repaired using either
.IR xfs_repair(1M)
to fix the filesystem in place,
or by using
.IR xfsdump (1M)
and
.IR mkfs_xfs (1M)
to dump the filesystem,
make a new filesystem,
then use
.IR xfsrestore (1M)
to restore the data onto the new filesystem.
Note that xfsdump may fail on a corrupt filesystem.
However, if the filesystem is mountable, xfsdump can
be used to try and save important data before
repairing the filesystem with xfs_repair.
If the filesystem is not mountable though, xfs_repair is
the only viable option.
.SH DIAGNOSTICS
Under one circumstance,
.I xfs_check
unfortunately might dump core
rather than produce useful output.
If the filesystem is completely corrupt, a core dump might
be produced instead of the message
.Ex
\f2xxx\f1\f7 is not a valid filesystem\f1
.Ee
.PP
If the filesystem is very large (has many files) then
.I xfs_check
might run out of memory.
In this case the message
.Ex
out of memory
.Ee
is printed, and if the system running xfs_check supports execution
of 64-bit binaries, then a suggestion to run
.I xfs_check64
is printed as well.
.PP
The following is a description of the most likely problems and the associated
messages.
Most of the diagnostics produced are only meaningful with an understanding
of the structure of the filesystem.
.TP
\f7agf_freeblks \f1\f2n\f1\f7, counted \f1\f2m\f1\f7 in ag \f1\f2a\f1
The freeblocks count in the allocation group header for allocation group
.I a
doesn't match the number of blocks counted free.
.TP
\f7agf_longest \f1\f2n\f1\f7, counted \f1\f2m\f1\f7 in ag \f1\f2a\f1
The longest free extent in the allocation group header for allocation group
.I a
doesn't match the longest free extent found in the allocation group.
.TP
\f7agi_count \f1\f2n\f1\f7, counted \f1\f2m\f1\f7 in ag \f1\f2a\f1
The allocated inode count in the allocation group header for allocation group
.I a
doesn't match the number of inodes counted in the allocation group.
.TP
\f7agi_freecount \f1\f2n\f1\f7, counted \f1\f2m\f1\f7 in ag \f1\f2a\f1
The free inode count in the allocation group header for allocation group
.I a
doesn't match the number of inodes counted free in the allocation group.
.TP
\f7block \f1\f2a/b\f1\f7 expected inum 0 got \f1\f2i\f1
The block number is specified as a pair
(allocation group number, block in the allocation group).
The block is used multiple times (shared), between multiple inodes.
This message usually follows a message of the next type.
.TP
\f7block \f1\f2a/b\f1\f7 expected type unknown got \f1\f2y\f1
The block is used multiple times (shared).
.TP
\f7block \f1\f2a/b\f1\f7 type unknown not expected\f1
The block is unaccounted for (not in the freelist and not in use).
.TP
\f7link count mismatch for inode \f1\f2nnn\f1\f7 (name \f1\f2xxx\f1\f7), nlink \f1\f2m\f1\f7, counted \f1\f2n\f1
The inode has a bad link count (number of references in directories).
.TP
\f7rtblock \f1\f2b\f1\f7 expected inum 0 got \f1\f2i\f1
The block is used multiple times (shared), between multiple inodes.
This message usually follows a message of the next type.
.TP
\f7rtblock \f1\f2b\f1\f7 expected type unknown got \f1\f2y\f1
The real-time block is used multiple times (shared).
.TP
\f7rtblock \f1\f2b\f1\f7 type unknown not expected\f1
The real-time block is unaccounted for (not in the freelist and not in use).
.TP
\f7sb_fdblocks \f1\f2n\f1\f7, counted \f1\f2m\f1
The number of free data blocks recorded
in the superblock doesn't match the number counted free in the filesystem.
.TP
\f7sb_frextents \f1\f2n\f1\f7, counted \f1\f2m\f1
The number of free real-time extents recorded
in the superblock doesn't match the number counted free in the filesystem.
.TP
\f7sb_icount \f1\f2n\f1\f7, counted \f1\f2m\f1
The number of allocated inodes recorded
in the superblock doesn't match the number allocated in the filesystem.
.TP
\f7sb_ifree \f1\f2n\f1\f7, counted \f1\f2m\f1
The number of free inodes recorded
in the superblock doesn't match the number free in the filesystem.
.SH SEE ALSO
mkfs_xfs(1M),
xfsdump(1M),
xfsrestore(1M),
xfs_ncheck(1M),
xfs_repair(1M),
xfs(4).

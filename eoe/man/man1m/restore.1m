.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)restore.1M	6.6 (Berkeley) 7/31/87
.\"
.TH restore 1M "July 31, 1987"
.SH NAME
restore, rrestore \- incremental filesystem restore
.SH SYNOPSIS
.nf
\f3restore\f1 key [ name ... ]
\f3rrestore\f1 key [ name ... ]
.fi
.SH DESCRIPTION
.IR restore,
and
.IR rrestore
are applicable only to dumps made by
.IR dump (1m)
from EFS filesystems,
but they can restore files into any type of filesystem,
not just an EFS filesystem.
.PP
.I restore
reads tapes dumped with the
.IR dump (1M)
command and restores them
\f2relative to the current directory\fP.
Its actions are controlled by the
.I key
argument.
The
.I key
is a string of characters containing
at most one function letter and possibly
one or more function modifiers.
Any arguments supplied for specific options are given as subsequent words
on the command line, in the same order as that of the options listed.
Other arguments to the command are file or directory
names specifying the files that are to be restored.
Unless the
.B h
key is specified (see below),
the appearance of a directory name refers to
the files and (recursively) subdirectories of that directory.
.PP
The function portion of
the key is specified by one of the following letters:
.TP 5n
.B r
Restore the entire tape.
The tape
is read and its full contents loaded into the current directory.
This should not be done lightly; the
.B r
key should only be used to restore
a complete level 0 dump tape onto a clear filesystem
or to restore an incremental dump tape after a full level 0 restore.
Thus
.sp .8v
.nf
.RS
	\f4/etc/mkfs /dev/dsk/dks0d2s0
	/etc/mount /dev/dsk0d2s0 /mnt
	cd /mnt
	restore r\f1
.RE
.fi
.IP
is a typical sequence to restore a complete dump.
Another
.I restore
can be done to get an incremental dump
in on top of this.
Note that
.I restore
leaves a file
.I restoresymtable
in the root directory to pass information between incremental
restore passes.
This file should be removed when the last incremental tape has been
restored.
Also, see the note in the
BUGS
section below.
.TP 5n
.B R
Resume restoring.
.I restore
requests a particular tape of a multi volume set on which to restart
a full restore
(see the
.B r
key above).
This allows
.I restore
to be interrupted and then restarted.
.TP 5n
.B x
The named files are extracted from the tape.
If the named file matches a directory whose contents
had been written onto the tape,
and the
.B h
key is
.B not
specified,
the directory is recursively extracted.
The owner, modification time,
and mode are restored (if possible).
If no file argument is given,
the root directory is extracted,
which results in the entire content of the
tape being extracted
unless the
.B h
key has been specified.
.TP 5n
.B t
The names of the specified files are listed if they occur
on the tape.
If no file argument is given,
the root directory is listed,
which results in the entire content of the
tape being listed
unless the
.B h
key has been specified.
Note that the
.B t
key replaces the function of the old
.I dumpdir
program.
.TP 5n
.B i
This mode allows interactive restoration of files from a dump tape.
After reading in the directory information from the tape,
.I restore
provides a shell like interface that allows the user to move
around the directory tree selecting files to be extracted.
The available commands are given below;
for those commands that require an argument,
the default is the current directory.
.RS
.TP 11
\f3ls\f1 [\f2arg\f1]
List the current or specified directory.
Entries that are directories are appended with a \f3/\f1.
Entries that have been marked for extraction are prepended with a \f3*\f1.
If the verbose key is set the inode number of each entry is also listed.
.TP
\f3cd\f1 \f2arg\f1
Change the current working directory to the specified argument.
.TP
.B pwd
Print the full pathname of the current working directory.
.TP
\f3add\f1 [\f2arg\f1]
The current directory or specified argument is added to the list of
files to be extracted.
If a directory is specified, it and all its descendents are
added to the extraction list
(unless the
.B h
key is specified on the command line).
Files that are on the extraction list are prepended with a \f3*\f1
when they are listed by
.BR ls .
.TP
\f3delete\f1 [\f2arg\f1]
The current directory or specified argument is deleted from the list of
files to be extracted.
If a directory is specified, it and all its descendents are
deleted from the extraction list
(unless the
.B h
key is specified on the command line).
The most expedient way to extract most of the files from a directory
is to add the directory to the extraction list and then delete
those files that are not needed.
.TP
.B extract
All the files that are on the extraction list are extracted
from the dump tape.
.I restore
asks which volume the user wishes to mount.
The fastest way to extract a few files is to
start with the last volume and work towards the first volume.
.TP
.B setmodes
All the directories that have been added to the extraction list
have their owner, modes, and times set;
nothing is extracted from the tape.
This is useful for cleaning up after a
.I restore
has been prematurely aborted.
.TP
.B verbose
The sense of the
.B v
key is toggled.
When set, the verbose key causes the
.B ls
command to list the inode numbers of all entries.
It also causes
.I restore
to print out information about each file as it is extracted.
.TP
.B help
List a summary of the available commands.
.TP
.B quit
.I restore
immediately exits,
even if the extraction list is not empty.
.RE
.PP
The following characters can be used in addition to the letter
that selects the function desired.
.TP 5n
.B b
The next \f2argument\fP to
.I restore
is used as the block size of the tape (in kilobytes).
If the \f3b\fP option is not specified,
.I restore
tries to determine the tape block size dynamically, but is only
able to do so if the block size is 32 or less.
For larger sizes, the
.B b
option must be used with
.IR restore .
.TP 5n
.B f
The next \f2argument\fP to
.I restore
is used as the name of the archive instead
of
.IR /dev/tape .
If the name of the file is \f3\-\f1,
.I restore
reads from standard input.
Thus,
.IR dump (1M)
and
.I restore
can be used in a pipeline to dump and restore a filesystem
with the command
.sp .8v
.RS
	\f4dump 0f - /usr | (cd /mnt; restore xf -)\f1
.RE
.IP
If the name of the file is of the format
.IR machine : device ,
the filesystem dump is restored from the specified machine over the
network.
.I restore
creates a remote server
.IR /etc/rmt ,
on the client machine to access the tape device.
Since
.I restore
is normally run by root, the name of the local
machine must appear
in the
.I .rhosts
file of the remote machine.
If the filename
.I argument
is of the form
.IR user@machine:device ,
.I restore
attempts to execute as the specified use on the remote machine.
The specified user must have a
.I .rhosts
file on the remote
machine that allows root from the local machine.
.TP 5n
.B v
Normally
.I restore
does its work silently.
The
.B v
(verbose)
key causes it to type the name of each file it treats
preceded by its file type.
.TP 5n
.B y
.I restore
does not ask whether it should abort the restore if gets a tape error.
It always tries to skip over the bad tape block(s) and continue as
best it can.
.TP 5n
.B m
.I restore
extracts by inode numbers rather than by filename.
This is useful if only a few files are being extracted,
and one wants to avoid regenerating the complete pathname
to the file.
.TP 5n
.B h
.I restore
extracts the actual directory,
rather than the files that it references.
This prevents hierarchical restoration of complete subtrees
from the tape.
.TP 5n
.B s
The next \f2argument\fP to
.I restore
is a number that
selects the dump file when there are multiple dump files on the same
tape.
File numbering starts at 1.
.TP 5n
.B n
Only those files that are newer than the file specified by the next
\f2argument\fP are considered for restoration.
.I restore
looks at the
modification time of the specified file using the
.BR stat (2)
system call.
.TP 5n
.B e
No existing files are overwritten.
.TP 5n
.B E
Restores only non-existent files or newer versions (as determined by
the file status change time stored in the dump file) of
existing files.
Note that the
.IR ls (1)
command shows the modification time and not the file status change time.
See
.IR stat (2)
for more details.
.TP 5n
.B d
Turn on debugging output.
.TP 5n
.B o
Normally
.I restore
does not use
.IR chown (2)
to restore files to the original user and group id
unless it is being run by the superuser (or with the effective user id of
zero).
This is to provide Berkeley-style semantics.
This can be overridden with the
.B o
option which results in
.I restore
attempting to restore the original ownership to the files.
.TP 5n
.B N
Do not write anything to the disk.
This option can be used to validate
the tapes after a dump.
If invoked with the \f3r\f1 option,
.I restore
goes through the motion of reading all the dump tapes without actually
writing anything to the disk.
.SH DIAGNOSTICS
.I restore
complains about bad key characters.
.PP
On getting a read error, \f2restore\fP prints out diagnostics.
If
.B y
has been specified, or the user responds \f3y\f1,
.I restore
attempts to continue the restore.
.PP
If the dump extends over more than one tape,
.I restore
asks the user to change tapes.
If the
.B x
or
.B i
key has been specified,
.I restore
also asks which volume the user wishes to mount.
The fastest way to extract a few files is to
start with the last volume and work towards the first volume.
.PP
There are numerous consistency checks that can be listed by
.IR restore .
Most checks are self-explanatory or can never happen.
Common errors are given below.
.TP
\f7Converting to new filesystem format.\f1
A dump tape created from the old filesystem has been loaded.
It is automatically converted to the new filesystem format.
.TP
\f2<filename>\f1\f7: not found on tape\f1
The specified filename was listed in the tape directory,
but was not found on the tape.
This is caused by tape read errors while looking for the file,
and from using a dump tape created on an active filesystem.
.TP
\f7expected next file\f1 \f2<inumber>\f1\f7, got\f1 \f2<inumber>\f1
A file that was not listed in the directory showed up.
This can occur when using a dump tape created on an active filesystem.
.TP
\f7Incremental tape too low\f1
When doing incremental restore,
a tape that was written before the previous incremental tape,
or that has too low an incremental level has been loaded.
.TP
\f7Incremental tape too high\f1
When doing incremental restore,
a tape that does not begin its coverage where the previous incremental
tape left off,
or that has too high an incremental level has been loaded.
.TP
\f7Tape read error while restoring\f1 \f2<filename>\f1
.PD 0
.TP
\f7Tape read error while skipping over inode\f1 \f2<inumber>\f1
.TP
\f7Tape read error while trying to resynchronize\f1
A tape read error has occurred.
If a filename is specified,
its contents are probably partially wrong.
If an inode is being skipped or the tape is trying to resynchronize,
no extracted files have been corrupted,
though files may not be found on the tape.
.PD
.TP
\f7resync restore, skipped\f1 \f2<num>\f1 \f7blocks\f1
After a tape read error,
.I restore
may have to resynchronize itself.
This message lists the number of blocks that were skipped over.
.TP
\f7Error while writing to file /tmp/rstdir*\f1
An error was encountered while writing to the temporary file containing
information about the directories on tape.
Use the TMPDIR environment
variable to relocate this file in a directory that has more space available.
.TP
\f7Error while writing to file /tmp/rstdir*\f1
An error was encountered while writing to the temporary file containing
information about the owner, mode and timestamp information of directories.
Use the TMPDIR environment
variable to relocate this file in a directory that has more space available.
.SH EXAMPLES
.Ex
\f4restore r\f1
.Ee
Restores the entire tape into the current directory, reading from the
default tape device
.IR /dev/tape .
.Ex
\f4restore rf guest@kestrel.sgi.com:/dev/tape\f1
.Ee
Restores the entire tape into the current directory, reading from the
remote tape device
.I /dev/tape
on host kestrel.sgi.com using the guest account.
.Ex
\f4restore x /etc/hosts /etc/fstab /etc/myfile\f1
.Ee
Restores the three specified files into the current directory, reading from
the default tape device
.IR /dev/tape .
.Ex
\f4restore x /dev/dsk\f1
.Ee
Restores the entire
.I /dev/dsk
directory and subdirectories recursively
into the current directory, reading from the
default tape device
.IR /dev/tape .
.Ex
\f4restore rN\f1
.Ee
Reads the entire tape and go through all the motions of restoring the
entire dump, without writing to the disk.
This can be used to validate the
dump tape.
.Ex
\f4restore xe /usr/dir/foo\f1
.Ee
Restores (recursively) all files in the given directory
.IR /usr/dir/foo .
However, no existing files are overwritten.
.Ex
\f4restore xn /usr/dir/bar\f1
.Ee
Restores (recursively) all files that are newer than the given
file
.IR /usr/dir/bar .
.SH FILES
.PD 0
.TP 16
/dev/tape
This is the default tape device used unless the environment variable
TAPE is set.
.TP
/tmp/rstdir*
This temporary file contains the directories on the tape.
If the
environment variable TMPDIR is set, the file is created
in that directory.
.TP
/tmp/rstmode*
This temporary file contains the owner, mode, and time stamps for directories.
If the
environment variable TMPDIR is set, the file is created
in that directory.
.TP
\&./restoresymtable	
Information is passed between incremental restores in this file.
.PD
.SH SEE ALSO
dump(1M),
mkfs(1M),
mount(1M),
rmt(1M),
rhosts(4),
mtio(7).
.SH NOTES
.I rrestore
is a link to
.IR restore .
.SH BUGS
.I restore
can get confused when doing incremental restores from
dump tapes that were made on active filesystems.
.PP
A level 0 dump must be done after a full restore.
Because
.I restore
runs in user code,
it has no control over inode allocation.
This results in the files being restored having an inode numbering
different from the filesystem that was originally dumped.
Thus a full dump must be done to get a new set
of directories
reflecting the new inode numbering,
even though the contents of the files is unchanged, so
that later incremental dumps will be correct.
.PP
Existing dangling symlinks are modified even if the
.B e
option is supplied, if the dump tape contains a hard link by the
same name.

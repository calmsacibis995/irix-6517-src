.\" @(#)snoop.1m 1.26 95/02/28 SMI;
.TH snoop 1M
.SH NAME
snoop \- capture and inspect network packets
.SH SYNOPSIS
.BR snoop
[
.BR \-aPDSvVNC
] [
.BI \-d " device"
] [
.BI \-s " snaplen"
]
.if n .ti +5n
[
.BI \-c " maxcount"
] [
.BI \-i " filename"
]
.if t .ti +5n
[
.BI \-o " filename"
]
.if n .ti +5n
[
.BI \-n " filename"
] [
.BR \-t
[
.BR r
|
.BR a
|
.BR d
] ]
.if n .ti +5n
[
.BI \-p " first"
[  ,
.I last
] ]
.if t .ti +5n
[
.BI \-x " offset"
[ ,
.I length
] ]
.if n .ti +5n
[
.I expression
]
.SH DESCRIPTION
.IX "snoop" "" "\fLsnoop\f1 \(em capture and inspec tnetwork packets"
.IX "network packets capture and inspection" "" "network packets capture and inspection \(em \fLsnoop\f1"
.BR snoop
captures packets from the network and displays their contents.
.BR snoop
uses both the network packet filter and streams buffer modules
to provide efficient capture of packets from the network.
Captured packets can be displayed as they are received, 
or saved to a file for later inspection.
.PP
.BR snoop
can display packets in a single-line summary form or in verbose
multi-line forms.  In summary form, only the data pertaining
to the highest level protocol is displayed.  For example, an 
.SM NFS
packet will have only 
.SM NFS
information displayed.  The underlying \s-1RPC\s0, \s-1UDP\s0, \s-1IP\s0,
and ethernet frame information is suppressed but can
be displayed if either of the verbose options are chosen.
.SH OPTIONS
.TP 15
.BI \-a
Listen to packets on
.BR /dev/audio
(warning: can be noisy).
.TP
.BI \-P
Capture packets in non-promiscuous mode.
Only broadcast, multicast, or packets addressed to the
host machine will be seen.
.TP
.BI \-d " device"
Receive packets from the network using the interface specified by
.IR device .
Usually 
.BR ec0 .
The program
.BR netstat (1M),
when invoked with the
.BR \-i
flag, lists all the interfaces that a machine has.
Normally,
.BR snoop
will automatically choose the first
non-loopback interface it finds.
.TP
.BI \-s " snaplen"
Truncate each packet after \f2snaplen\f1 bytes.
Usually the whole packet is captured.
This option is useful if only certain packet header information
is required. The packet truncation is done within the kernel
giving better utilization of the streams packet buffer.
This means less chance of dropped packets due to buffer
overflow during periods of high traffic.
It also saves disk space when capturing large traces to a
capture file.
To capture only
.SM IP
headers (no options) use a \f2snaplen\f1
of 34.  For
.SM UDP
use 42, and for
.SM TCP
use 54.
You can capture
.SM RPC
headers with a \f2snaplen\f1 of 80 bytes.
.SM NFS
headers can be captured in 120 bytes.
.TP
.BI \-c " maxcount"
Quit after capturing \f2maxcount\f1 packets.
Otherwise keep capturing until there is no disk left or until interrupted with
.SM CTRL-C.
.TP
.if t .BI \-i " filename"  
.if n .BI -i " filename"  
Display packets previously captured in
.\".if n .br
.IR filename .
Without this option,
.BR snoop
reads packets from the
network interface.
If a
.IB filename .names
file is present, it is automatically 
loaded into
.BR snoop 's
.SM IP
address-to-name mapping table
(See
.BR \-N 
flag below).
.br
.ne 5
.TP
.BI \-o " filename"
Save captured packets in
.I filename
as they are captured.
During packet capture, a count of the number of packets
saved in the file is displayed. If you wish just to
count packets without saving to a file, name the file
.BR /dev/null .
.br
.ne 3
.TP
.BI \-n " filename"
Use
.I filename
as an
.SM IP
address-to-name mapping table.
This file must have the same format as the 
.BR /etc/hosts
file (\s-2IP\s0 address followed by the hostname).
.TP
.BR \-D
Display number of packets dropped during capture on the
summary line.
.TP
.BR \-S
Display size of the entire ethernet frame in bytes on the
summary line.
.HP
.BR \-t
.BR " [" " r " | " a " | " d"
]
.br
Time-stamp presentation.  Time-stamps are accurate to within
a few microseconds.
The default is for times to be presented in
.BR "d"
(delta) format (the time since receiving the previous packet).
.br
Option
.BR "a"
(absolute) gives wall-clock time.
.br
Option
.BR "r"
(relative) gives time relative to the first packet displayed.
This can be used with the
.BR \-p
option to display time
relative to any selected packet.
.TP
.BR \-v
Verbose mode.  Print packet headers in lots of detail.
This display consumes many lines per packet and should
be used only on selected packets.
.TP
.if t .BR \-V
.if n .BR -V
Verbose summary mode.  This is halfway 
between summary mode and verbose mode in degree of verbosity. 
Instead of displaying just
the summary line for the highest level protocol in a packet, it
displays a summary line for each protocol layer in the packet.
For instance, for an 
.SM NFS
packet it will display a line each for the
.SM ETHER,
.SM IP,
.SM UDP,
.SM RPC
and 
.SM NFS
layers.  Verbose summary mode output may be
easily piped through 
.BR grep 
to extract packets of interest. For example to view only
.SM RPC
summary lines:
.sp .5
.BR "example# snoop \-i rpc.cap \-V | grep RPC"
.sp .5
.HP
.BI \-p " first"
[ ,
.I last
]
.br
Select one or more packets to be displayed from a capture file.
The \f2first\f1 packet in the file is packet #1.
.HP
.BI \-x " offset"
[ ,
.I length
]
.br
Display packet data in hexadecimal and
.SM ASCII
format.
The \f2offset\f1 and \f2length\f1 values select a portion
of the packet to be displayed.
To display the whole packet, use an \f2offset\f1 of 0.
If a \f2length\f1 value is not provided, the rest of the
packet is displayed.
.TP
.BR \-N
Create an
.SM IP
address-to-name file from a capture file.  This must
be set together with the
.BR \-i
option that names a capture file.
The address-to-name file has the same name as the
capture file with \f3.names\f1 appended.  
This file records the
.SM IP
address to hostname mapping at the
capture site and increases the portability of the capture file.
Generate a 
.BR .names
file if the capture file is to be analyzed
elsewhere.
Packets are not displayed when this flag is used.
.br
.ne 5
.TP
.BR \-C
List the code generated from the filter expression for either
the kernel packet filter, or
.BR snoop 's
own filter.
.TP
.I expression
Select packets either from the network or from a capture file.
Only packets for which the expression is true will be selected.
If no expression is provided it is assumed to be true.
.sp .2
Given a filter expression,
.BR snoop
generates code for either the
kernel packet filter or for its own internal filter.
If capturing packets with the network interface, code for the
kernel packet filter is generated.  This filter is implemented
as a streams module, upstream of the buffer module.  The buffer
module accumulates packets until it becomes full and passes
the packets on to
.BR snoop .
The kernel packet filter is very
efficient, since it rejects unwanted packets in the kernel before
they reach the packet buffer or
.BR snoop .
The kernel packet filter has some limitations in its
implementation \(em it is possible to construct filter expressions
that it cannot handle.
In this event,
.BR snoop
generates code for its own filter.
The
.BR \-C
flag can be used to view generated code for
either the kernel's or
.BR snoop 's
own packet filter.
If packets are read from a capture file using the
.BR \-i
option,
only
.BR snoop 's
packet filter is used.
.sp .2
A filter \f2expression\f1 consists of a series of one or more
boolean primitives that may be combined with boolean operators (
.SM AND ,
.SM OR ,
and
.SM NOT ).
Normal precedence rules
for boolean operators apply.
Order of evaluation of these operators may be controlled with
parentheses.
Since parentheses and other filter expression characters are
known to the shell, it is often necessary to enclose the the
filter expression in quotes.
The primitives are:
.RS
.TP
.BI host " hostname"
True if the source or destination address is that of
.IR hostname .
The keyword
.BR host
may be omitted if the name does not
conflict with the name of another expression primitive e.g.
"\f3pinky\f1"
selects packets transmitted to or received
from the host \f3pinky\f1 whereas
"\f3pinky and dinky\f1" selects packets exchanged between
hosts \f3pinky\f1 
.SM AND
\f3dinky\f1.
Normally the
.SM IP
address is used.  With the
.BR ether
qualifier
the ethernet address is used, for instance, "\f3ether pinky\f1".
.br
.ne 4
.TP
.IR "ipaddr " or " etheraddr"
Literal addresses, both
.SM IP
dotted and ethernet colon are
recognized. For example, 
"\f3129.144.40.13\f1" matches all packets with that
.SM IP
address as source or destination, and similarly,
"\f38:0:20:f:b1:51\f1" matches all packets with the
ethernet address as source or destination.
An ethernet address beginning with a letter is interpreted
as a hostname. To avoid this, prepend a zero when specifying 
the address. 
For example, if the ethernet address is "aa:0:45:23:52:44", 
then specify it by add a leading zero to make it "0aa:0:45:23:52:44".
.br
.ne 5
.TP
.BR "from" " or" " src"
A qualifier that modifies the following
.BR host ,
.BR net ,
.IR ipaddr ,
.IR etheraddr ,
.BR port
or
.BR rpc
primitive to match just the source address, port, or
.SM RPC
reply.
.TP
.BR "to" " or" " dst"
A qualifier that modifies the following
.BR host ,
.BR net ,
.IR ipaddr ,
.IR etheraddr ,
.BR port
or
.BR rpc
primitive to match just the destination address, port, or
.SM RPC
call.
.TP
.BR ether
A qualifier that modifies the following
.BR host
primitive
to resolve a name to an ethernet address.  
Normally,
.SM IP
address matching is performed.
.TP
.BI ethertype " number"
True if the ethernet type field has value \f2number\f1.
.br
Equivalent to "\f3ether[12:2] = \f2number\f1".
.TP
.BR ip  , " arp" , " rarp"
True if the packet is of the appropriate ethertype.
.TP
.BR broadcast
True if the packet is a broadcast packet.
.br
Equivalent to "\f3ether[2:4] = 0xffffffff\f1".
.TP
.BR multicast
True if the packet is a multicast packet.
.br
Equivalent to "\f3ether[0] & 1 = 1\f1".
.TP
.BR apple
True if the packet is an Apple Ethertalk packet.
.br
Equivalent to "\f3ethertype 0x809b or ethertype 0x803f\f1".
.TP
.BR decnet
True if the packet is a
.SM DECNET
packet.
.TP
.BI greater " length"
True if the packet is longer than \f2length\f1.
.TP
.BI less " length"
True if the packet is shorter than \f2length\f1.
.TP
.BR udp , " tcp" , " icmp"
True if the
.SM IP
protocol is of the appropriate type.
.TP
.BI net " net"
True if either the
.SM IP
source or destination address
has a network number of \f2net\f1.
The
.BR from
or
.BR to
qualifier may be used to
select packets for which the network number occurs only
in the source or destination address.
.TP
.BI port " port"
True if either the source or destination port is \f2port\f1.
The \f2port\f1 may be either a port number or name from
.BR /etc/services .
The
.BR tcp
or
.BR udp
primitives may be used to select
.SM TCP
or
.SM UDP
ports only.
The
.BR from
or
.BR to
qualifier may be used to
select packets for which the \f2port\f1 occurs only
as the source or destination.
.HP
.BI rpc " prog"
[ ,
.I vers
[ ,
.I proc
] ]
.br
True if the packet is an
.SM RPC
call or reply packet
for the protocol identified by \f2prog\f1.  
The \f2prog\f1 may be either the name of an
.SM RPC
protocol from
.BR /etc/rpc
or a program number.
The \f2vers\f1 and \f2proc\f1 may be used to further
qualify the program \f2version\f1 and \f2procedure\f1 number, for example, 
"\f3rpc nfs,2,0\f1" selects all calls and replies for the 
.SM NFS
null procedure.
The
.BR to
or
.BR from
qualifier may be used to
select either call or reply packets only.
.TP
.BI gateway " host"
True if the packet used \f2host\f1 as a gateway, that is,
the ethernet source or destination address was for \f2host\f1
but not the
.SM IP
address.
.br
Equivalent to "\f3ether host\f1 \f2host\f1 and not host \f2host\f1".
.TP
.BR nofrag
True if the packet is unfragmented or is the first in
a series of
.SM IP
fragments.
.br
Equivalent to "\f3ip[6:2] & 0x1fff = 0\f1".
.br
.ne 16
.TP
.\" .KS
\f2expr\ \ relop\ \ expr\f1
True if the relation holds, where \f2relop\f1 is one of
\f3>\f1, \f3<\f1, \f3>=\f1, \f3<=\f1, \f3=\f1, \f3!=\f1, and \f2expr\f1 is an arithmetic
expression composed of numbers, packet field selectors, the
\f3length\f1 primitive, and arithmetic operators
\f3+\f1,\f3 \-\f1,\f3 *\f1,\f3 &\f1,\f3 |\f1,\f3 ^\f1, and\f3%\f1.
The arithmetic operators within \f2expr\f1 are evaluated before
the relational operator and normal precedence rules apply between
the arithmetic operators, such as multiplication before addition.
Parentheses may be used to control the order of evaluation.
.\" .KE
To use the value of a field in the packet use the following
syntax:
.in +.5i
.nf
\f2base\f1[\f2expr\f1\ [\f3:\f1 \f2size\f1\ ]\ ]
.fi
.in -.5i
where \f2expr\f1 evaluates the value of an offset into
the packet from a \f2base\f1 offset which may be
.BR ether , 
.BR ip ,
.BR udp ,
.BR tcp ,
or
.BR icmp .
The \f2size\f1 value specifies the size of the field.
If not given, 1 is assumed.  Other legal values are 2 and 4.
.P
Examples:
.IP
"\f3ether[0] & 1 = 1\f1" is equivalent to
.BR multicast .
.IP
 "\f3ether[2:4] = 0xffffffff\f1\|" is equivalent to
.BR broadcast .
.IP
"\f3ip[ip[0] & 0xf * 4 : 2] = 2049\f1" is equivalent to "\f3udp[0:2] = 2049\f1".
.IP
"\f3ip[0] & 0xf > 5\f1" selects
.SM IP
packets with options.
.IP
"\f3ip[6:2] & 0x1fff = 0\f1" eliminates
.SM IP
fragments.
.IP
"\f3udp and ip[6:2]&0x1fff = 0 and udp[6:2] != 0\f1" finds all
packets with
.SM UDP
checksums.
.IP
The
.BR length
primitive may be used to obtain the length 
of the packet.  For instance "\f3length > 60\f1" is equivalent
to "\f3greater 60\f1", and "\f3ether[length \- 1]\f1" obtains the
value of the last byte in a packet.
.TP
.BR and
Perform a logical
.SM AND
operation between two boolean
values.  
The
.SM AND
operation is implied by the juxtaposition of
two boolean expressions, for example "\f3dinky pinky\f1" is the same
as "\f3dinky \s-2AND\s0 pinky\f1".
.TP
.BR or " or" " ,"
Perform a logical
.SM OR 
operation between two boolean
values.
A comma may be used instead, for example, "\f3dinky,pinky\f1" is the
same as "\f3dinky \s-2OR\s0 pinky\f1".
.TP
.BR not " or" " !"
Perform a logical
.SM NOT 
operation on the following
boolean value.
This operator is evaluated before
.SM AND
or
.SM OR .
.RE
.SH EXAMPLES
.LP
Capture all packets and display them as they are received:
.sp .5
.BR example# snoop
.sp .5
Capture packets with host 
.BR funky
as either the source or destination
and display them as they are received:
.sp .5
.BR example# snoop funky
.sp .5
.br
.ne 2
Capture packets between 
.BR funky 
and 
.BR pinky 
and save them to a file.
Then inspect the packets using times (in seconds) relative to the first
captured packet:
.sp .5
\f3example# snoop \-o cap\ \ funky pinky\f1
.sp .5
\f3example$ snoop \-i cap\ \ \-t r | more\f1
.sp .5
Look at selected packets in another capture file:
.sp .5
\f3example$ snoop \-i pkts\ \ \-p99,108\f1
.RS
.nf
.sp .5
.vs -3
\s-1\f3
 99   0.0027   boutique -> sunroof     NFS C GETATTR FH=8E6C
100   0.0046   sunroof -> boutique     NFS R GETATTR OK
101   0.0080   boutique -> sunroof     NFS C RENAME FH=8E6C MTra00192 to .nfs08
102   0.0102   marmot -> viper          NFS C LOOKUP FH=561E screen.r.13.i386
103   0.0072   viper -> marmot          NFS R LOOKUP No such file or directory
104   0.0085   bugbomb -> sunroof    RLOGIN C PORT=1023 h
105   0.0005   kandinsky -> sparky    RSTAT C Get Statistics
106   0.0004   beeblebrox -> sunroof  NFS C GETATTR FH=0307
107   0.0021   sparky -> kandinsky    RSTAT R 
108   0.0073   office -> jeremiah        NFS C READ FH=2584 at 40960 for 8192
\f1\s+1
.vs
.sp .5
.fi
.if t .ne 5
.RE
Packet 101 Looks interesting. Take a look in more detail:
.sp .5
\f3example$ snoop \-i pkts\ \ \-v \-p101\f1
.RS
.nf
.sp .5
.vs -3
\s-1\f3
ETHER:  ----- Ether Header -----
ETHER:  
ETHER:  Packet 101 arrived at 16:09:53.59
ETHER:  Packet size = 210 bytes
ETHER:  Destination = 8:0:20:1:3d:94, Sun
ETHER:  Source      = 8:0:69:1:5f:e,  Silicon Graphics
ETHER:  Ethertype = 0800 (IP)
ETHER:  
IP:   ----- IP Header -----
IP:   
IP:   Version = 4, header length = 20 bytes
IP:   Type of service = 00
IP:         ..0. .... = routine
IP:         ...0 .... = normal delay
IP:         .... 0... = normal throughput
IP:         .... .0.. = normal reliability
IP:   Total length = 196 bytes
IP:   Identification 19846
IP:   Flags = 0X
IP:   .0.. .... = may fragment
IP:   ..0. .... = more fragments
IP:   Fragment offset = 0 bytes
IP:   Time to live = 255 seconds/hops
IP:   Protocol = 17 (UDP)
IP:   Header checksum = 18DC
IP:   Source address = 129.144.40.222, boutique
IP:   Destination address = 129.144.40.200, sunroof
IP:   
UDP:  ----- UDP Header -----
UDP:  
UDP:  Source port = 1023
UDP:  Destination port = 2049 (Sun RPC)
UDP:  Length = 176 
UDP:  Checksum = 0
UDP:  
RPC:  ----- SUN RPC Header -----
RPC:  
RPC:  Transaction id = 665905
RPC:  Type = 0 (Call)
RPC:  RPC version = 2
RPC:  Program = 100003 (NFS), version = 2, procedure = 1
RPC:  Credentials: Flavor = 1 (Unix), len = 32 bytes
RPC:     Time = 06-Mar-90 07:26:58
RPC:     Hostname = boutique
RPC:     Uid = 0, Gid = 1
RPC:     Groups = 1 
RPC:  Verifier   : Flavor = 0 (None), len = 0 bytes
RPC:  
NFS:  ----- SUN NFS -----
NFS:  
NFS:  Proc = 11 (Rename)
NFS:  File handle = 000016430000000100080000305A1C47
NFS:                597A0000000800002046314AFC450000
NFS:  File name = MTra00192
NFS:  File handle = 000016430000000100080000305A1C47
NFS:                597A0000000800002046314AFC450000
NFS:  File name = .nfs08
NFS:  
\f1\s+1
.vs
.sp .5
.fi
.RE
.LP
View just the
.SM NFS
packets between 
.BR sunroof
and
.BR boutique :
.sp .5
\f3example$ snoop \-i pkts\ \ rpc nfs and sunroof and boutique\f1
.nf
.sp .5
.vs -3
\s-1\f3  1   0.0000   boutique -> sunroof    NFS C GETATTR FH=8E6C
  2   0.0046    sunroof -> boutique   NFS R GETATTR OK
  3   0.0080   boutique -> sunroof    NFS C RENAME FH=8E6C MTra00192 to .nfs08
\f1\s+1
.vs
.fi
.LP
Save these packets to a new capture file:
.sp .5
\f3$ snoop \-i pkts\ \-o pkts.nfs\ rpc nfs sunroof boutique\f1
.SH EXIT STATUS
Unless 
.BR snoop
receives an error signal, its Exit Status is zero. All abnormal exits return
.BR 1 .
.SH WARNINGS
.LP
The processing overhead is much higher for realtime packet
interpretation.  Consequently, the packet drop count may
be higher.
For more reliable capture, output raw packets to a file
using the
.BR \-o
option and analyze the packets off-line.
.LP
Unfiltered packet capture imposes a heavy processing load on the
host computer\(emparticularly if the captured packets are interpreted
realtime.  This processing load further increases if verbose options
are used.  Since heavy use of 
.BR snoop 
may deny computing resources
to other processes, it should not be used on production servers.
Heavy use of 
.BR snoop 
should be restricted to a dedicated computer.
.PP
.BR snoop
does not reassemble
.SM IP
fragments.  
Interpretation of higher level protocol halts at the end
of the first
.SM IP
fragment.
.br
.ne 7
.PP
.BR snoop
may generate extra packets as a side-effect
of its use.
For example it may use a network name service (\s-1NIS\s0 or \s-1NIS+\s0)
to convert
.SM IP
addresses to host names for display.
Capturing into a file for later display can be used to postpone
the address-to-name mapping until after the capture session
is complete.
Capturing into an \s-1NFS\s0-mounted file may also generate
extra packets.
.PP
Setting the 
.BR snaplen (
.BR \-s
option) to small values may remove
header information required for packet interpretation for
higher level protocols.
For complete 
.SM NFS
interpretation do not set 
.BR snaplen 
less
than 120 bytes.
.LP
.BR snoop
requires information from an 
.SM RPC
request to fully interpret 
an
.SM RPC
reply.
If an
.SM RPC
reply in a capture file or packet range does not 
have a request preceding it, then only the
.SM RPC
reply header 
will be displayed.
.SH NOTES
.LP
.BR snoop
requires an interactive interface.

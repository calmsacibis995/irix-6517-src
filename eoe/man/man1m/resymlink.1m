.nr X
.if \nX=0 .ds x} resymlink 1M "Essential Utilities" "\&"
.TH \*(x}
.SH NAME
resymlink \- force a recreation of a symbolic link file
.SH SYNOPSIS
.nf
\f3resymlink\f1 file1 [file2 file3 ...]
.fi
.SH DESCRIPTION
All named files are recreated with their current symbolic link information.
A symbolic link is a special kind of file whose contents are
the name of another file (see
.IR symlink (2)).
A symbolic link contains the name of the file to which it is linked,
and is created with the
.IR ln (1)
command.
.PP
The
.I resymlink
command allows a user to recreate a current symbolic link,
possibly using different filesystem creation policies.
In particular, if the Extent Filesystem global system parameter
.B efs_inline
is non-zero, symbolic link information is stored within an EFS file's
inode structure, and not in a separate (out-of-line) filesystem block.
This saves disk space and incore memory space and is faster to
interpret for symbolic link files that are currently being accessed
by the system.
For more information on the global system parameter
.BR efs_inline ,
see
.IR systune (1M)
and
.IR inode (4).
.SH WARNINGS
Inline symbolic links are not supported on systems prior to IRIX 5.3 (32-bit)
or IRIX 6.0.1 (64-bit).
If an EFS filesystem that contains inline symbolic links is to be moved to
a pre-5.3/6.0.1 system--moved either physically or logically, as when a
system
is downgraded to a previous release--all inline symbolic links must first
be recreated out-of-line.
This is accomplished by setting the
.B efs_inline
system parameter to 0 and running
.I resymlink
on all EFS symbolic links that have been created in-line.
For example:
.Ex
\f4find / \-local \-type l \-exec resymlink {} \\;\f1
.Ee
.SH SEE ALSO
find(1),
fsdb(1M),
systune(1M),
inode(4).

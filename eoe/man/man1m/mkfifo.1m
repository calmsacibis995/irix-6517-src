.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} mkfifo 1M "" "\&"
.TH \*(x}
.SH NAME
\f4mkfifo\f1 \- make FIFO special file
.SH SYNOPSIS
.nf
\f4mkfifo\f1 [\f4\-m\f1 \f2mode\f1] \f2path\f1 ...
.fi
.SH DESCRIPTION
\f4mkfifo\f1 creates the FIFO special files named by its
argument list.
The arguments are taken sequentially, in the order specified;
and each FIFO special file is either created completely or,
in the case of an error or signal, not created at all.
.P
For each \f2path\f1 argument, the \f4mkfifo\f1 command behaves as if
the function \f4mkfifo\f1 [see \f4mkfifo\fP(2)]
was called with the
argument \f2path\f1 set to \f2path\f1 and the \f2mode\f1 set to
the bitwise inclusive OR of \f4S_IRUSR\f1, \f4S_IWUSR\f1, \f4S_IRGRP\f1,
\f4S_IWGRP\f1, \f4S_IROTH\f1 and \f4S_IWOTH\f1.
.P
If \f4\-m\f1 option is specified, the file permission bits of the newly
created FIFO is set to the specified \f2mode\f1 value.
The \f2mode\f1
option argument is the same as the \f2mode\f1 operand defined for
the \f4chmod\f1 utility.
In the \f2symbolic_mode\f1 strings, the
\f2op\f1 characters \f3+\f1 and \f3\-\f1 are interpreted relative
to an assumed initial mode of a=rw.
.P
If errors are encountered in creating one of the special files,
\f4mkfifo\f1 writes a diagnostic message to the standard error
and continues with the remaining arguments, if any.
.SH SEE ALSO
\f4mkfifo\fP(2)
.SH DIAGNOSTICS
\f4mkfifo\f1 returns exit code \f40\f1 if all
FIFO special files were created normally;
otherwise it prints a diagnostic and returns a value greater than \f40\f1.

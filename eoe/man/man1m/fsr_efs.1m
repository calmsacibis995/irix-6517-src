.nr X
.if \nX=0 .ds x} fsr_efs 1M "Essential Utilities" "\&"
.TH \*(x}
.SH NAME
fsr_efs \- filesystem reorganizer for EFS
.SH SYNOPSIS
.nf
\f3/usr/etc/fsr_efs\f1 [\f3\-s\f1] [\f3\-v\f1] [\f3\-g\f1] [\f3\-M\f1] \c
[\f3\-t\f1 seconds] [\f3\-f\f1 leftoff] [\f3\-m\f1 mtab]
\f3/usr/etc/fsr_efs\f1 [\f3\-s\f1] [\f3\-v\f1] [\f3\-g\f1] [\f3\-M\f1] \c
[efsdev | dir | file] ...
.fi
.SH DESCRIPTION
.I fsr_efs
is applicable only to EFS filesystems.
.PP
.I fsr_efs
improves the organization of mounted filesystems.
The reorganization algorithm operates on one file at a time,
compacting or otherwise improving the layout of
the file extents (contiguous blocks of file data)
while simultaneously compacting the filesystem free space.
.PP
The following options are accepted by
.IR fsr_efs .
The
.BR \-m ,
.BR \-t ,
and
.B \-f
options have no meaning if any filesystems, directories,
or files are specified on the command line.
.TP 13 
.BI \-m " mtab"
Use this file for the list of filesystems to reorganize.
The default is to use
.IR /etc/mtab .
This file must be in
.IR mtab (4)
format.
.TP
.BI \-t " seconds"
How long to reorganize.
The default is 7200 (2 hours).
.TP
.BI \-f " leftoff"
Use this file instead of
.I /var/tmp/.fsrlast
to read the state of where to start and as the file
to store the state of where reorganization left off.
.TP
.B \-M
Reorganize only the metadata.
.TP
.B \-s
Print fragmentation statistics only.
The fragmentation percentage
reported is 100 divided by the average size of contiguous storage in
that category (%frag is file data, %free is free space).
Different
files are considered non-contiguous.
.TP
.B \-v
Verbose.
Print cryptic information about
each file being reorganized.
.TP
.B \-g
Print all output using
.IR syslog (3C).
This is the default if
.I fsr_efs
is not invoked on a tty.
If
.I fsr_efs
is invoked on a tty then output is printed to the tty by default.
.PP
The intended usage is to regularly run the
.I fsr
command which in turn invokes
.I fsr_efs 
when it encounters EFS filesystems.
By default this is done from
.I crontab
once per week.
.PP
When invoked with no arguments
.I fsr_efs
reorganizes all regular files in all mounted filesystems.
.I fsr_efs
makes many cycles over
.I /etc/mtab
each time making a single pass over each filesystem.
A pass consists of three sub-passes, the first of which organizes the
filesystem metadata (directories and indirect extents) to improve
.I fsck
performance, the second of which compacts files to improve performance,
and the last of which de-fragments filesystem free space.
The first
.I fsr_efs
pass in this mode does only the first sub-pass.
It runs for up to two hours after which it records the filesystem
where it left off, so it can start there the next time.
This information is stored in the file
.I /var/tmp/.fsrlast.
If the information found here
is somehow inconsistent or out of date
it is ignored
and reorganization starts at the beginning of the first
filesystem found in
.IR /etc/mtab .
.PP
.I fsr_efs
can be called with one or more arguments
naming filesystems (block or character device name),
directory hierarchies,
and files to reorganize.
In this mode
.I fsr_efs
does not read or write
.I /var/tmp/.fsrlast
nor does it run for a fixed time interval.
It makes one pass through each specified regular file,
all regular files in each specified filesystem and
all regular files in each specified directory hierarchy.
When descending a directory hierarchy
.I fsr_efs
reorganizes each regular file before
descending into subdirectories.
A command line name referring to a symbolic link
(except to a file system device),
FIFO, or UNIX domain socket
generates a warning message, but is otherwise ignored.
While traversing the filesystem or directory hierarchy these types
of files are silently skipped.
.SH FILES
.PD 0
.TP 21
/etc/mtab
contains default list of filesystems to reorganize.
.TP 21
/var/tmp/.fsrlast
records the state where reorganization left off.
.PD
.SH "SEE ALSO"
fsr(1M),
crontab(1),
fsck(1M),
mkfs(1M),
ncheck(1M),
efs(4),
fsctl(7).
.SH "NOTES"
An entry in
.I /etc/mtab
or the file specified using the
.B \-m
option must have the
.B rw
option specified, for example:
.Ex
/dev/root / efs rw 0 0
.Ee
If this option is not present, then
.I fsr_efs
skips the
filesystem described by that line.
If this option is not
present, make sure that it is present in the corresponding line
in
.I /etc/fstab
so that it will appear in
.I /etc/mtab
when the filesystem is mounted.
See the
.IR fstab (4)
and
.IR mtab (4)
reference pages for
more details.
.PP
.I fsr_efs
is a memory intensive program, and consumes memory proportional to
the number of file and directory inodes in the largest filesystem in
the system.
Running
.I fsr_efs
on a filesystem with 500,000 inodes, for
example, can require 40 to 50 megabytes of main memory.

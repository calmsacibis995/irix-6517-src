.nr X
.if \nX=0 .ds x} ml 1M "" "\&"
.TH \*(x}
.SH NAME
ml \- load dynamic kernel modules
.SH SYNOPSIS
.nf
\f3ml list\f1 [\f3\-rlb\f1]
\f3ml\f1 [\f3ld\f1|\f3reg\f1] \c
[\f3-d\f1] [\f3-v\f1] \f3\-\f1[\f3cbBfmljir\f1] module.o \c
\f3\-p\f1 prefix
	[\f3\-s\f1 major major ...] [\f3\-a\f1 modname] \c
[\f3\-t\f1 autounload_delay]
\f3ml\f1 [\f3unld\f1|\f3unreg\f1] [\f3-v\f1] id ...
\f3ml debug\f1 [\f3-vsn\f1]
.fi
.SH DESCRIPTION
The \f2ml\f1 command provides a means of loading and unloading
dynamic kernel modules.
The first argument to \f2ml\f1 specifies
its action from one of the following:  list, load, unload,
register, unregister.
With no options,
\f2ml\f1 acts as if it were invoked as \f3ml list \-b\f1.
The \f3ld\f1, \f3unld\f1, \f3reg\f1, and \f3unreg\f1 options are
available only to the superuser.
If successful, the \f2ml\f1
command executes silently, unless the \f3\-v\f1 option is
specified.
.PP
\f3ml list\f1 provides a list of modules that are currently known
by the kernel.
The following options to \f3ml list\f1 are recognized:
.TP 5
.B \-r
Print registered modules only.
.TP
.B \-l
Print loaded modules only.
.TP
.B \-b
Print both loaded and registered modules.
.PP
\f3ml ld\f1 causes a kernel module to be loaded into memory and
prepared to be executed as part of the kernel.
\f3ml reg\f1 is
similar to \f3ml ld\f1, except that the module is not loaded
until the first time the module is opened.
If the \f3\-v\f1 option is specified,
\f3ml ld\f1 and \f3ml reg\f1
list a module ID number on standard output that can be used for
subsequent unloading.
The \f3\-d\f1 option allows the module's
static symbols to be added to its symbol table.
This allows
symmon to have access to all of the module's symbols and is useful
for debugging.
The module type must be specified by
one of the following options to
\f3ml ld\f1 and \f3ml reg\f1:
.TP 5
.B \-c
Module is a character device driver.
.TP
.B \-b
Module is a block and character device driver.
.TP
.B \-B
Module is a block device driver only.
.TP
.B \-f
Module is a streams device driver.
.TP
.B \-m
Module is a pushable streams module.
.TP
.B \-l
Module is a library module.
.TP
.B \-j
Module is a filesystem.
.TP
.B \-i
Module is the kernel debug module.
.TP
.B \-r
Module is a symbol table module.
.PP
The argument following the
module type must be the name of the object file for the module.
.PP
With the exception of the kernel debug module,
a module prefix must be specified with the \f3-p\f1 option.
The module prefix is the string used to find the various entrypoints
within a module.
.PP
Modules of type \f3c\f1, \f3b\f1, \f3B\f1, or \f3f\f1 can
specify an external device major number with the \f3\-s\f1 option.
If a specific major number is not requested, one is provided
from the unused major numbers in the system.
If the major number
is already in use, the module is not loaded.
.PP
Modules of type \f3m\f1 can provide a streams module name
with the \f3-a\f1 option that is
entered into the \f3fmodsw\f1 structure in the kernel.
If a
streams module name is not provided, the module is given the
same name as the object file, with any trailing \f3.o\f1 removed.
If the module name is already in use, the module is not loaded.
.PP
Modules of type \f3i\f1 are special kernel debugging modules to be
used in conjunction with the \f3idbg\f1(1M) command.
.PP
Modules of type \f3r\f1 are symbol table modules.
A symbol table is
created from the ELF symbol information in the file specified.
This
symbol table can be used by other modules to link against when loaded.
A kernel runtime symbol table can be created manually using this command.
For more information, see \f2mload\f1(4).
.PP
Modules that are registered are automatically auto-unloaded after last
close by using a default auto-unload delay that is systuneable.
A
specific delay can be specified, in minutes, using the \f3-t\f1 option.
Modules can also be configured to not be auto-unloaded by using
\f3-t \-2\f1.
.PP
\f3ml unld\f1 unloads the loaded kernel modules specified by \f2id\f1.
Likewise,
\f3ml unreg\f1 unregisters the registered kernel modules specified
by \f2id\f1.
Both commands accept a list of module identifiers
as arguments.
If a registered module has been loaded into memory after its
first open, it must be unloaded before it can be unregistered.
.PP
\f3ml debug\f1 can be used to turn verbose debugging messages on or
off or to disable the loading and registering of modules:
.TP 5
.B \-v
Turn verbose debugging on.
.TP
.B \-n
Disable loading and registering of modules.
.TP
.B \-s
Silence verbose debugging and allow loading and registering of modules.
.SH WARNINGS
A loaded module has all of the system privileges of kernel mode
execution.
.SH EXAMPLES
List all loaded and registered modules:
.Ex
\f4ml\f1
.Ee
Load a streams driver with prefix \f3sdrv\f1 and major number 13:
.Ex
\f4ml ld -v -f strdrv.o -p sdrv -s 13\f1
.Ee
Register a streams module with prefix \f3tmod\f1 and module name \f3testmod\f1:
.Ex
\f4ml reg -m tmod.o -p tmod -a testmod\f1
.Ee
Register a streams module with prefix \f3tmod\f1 and default module name
\f3tmod\f1:
.Ex
\f4ml reg -m tmod.o -p tmod\f1
.Ee
Unload the module with \f2id\f1 1015:
.Ex
\f4ml unld 1015\f1
.Ee
Load the kernel debug module:
.Ex
\f4ml ld -i /var/sysgen/boot/idbg.o -p idbg\f1
.Ee
.SH FAILURES
\f2ml\f1 failure codes and descriptions are listed in the
header file \f2/usr/include/sys/mload.h\f1.
.SH "SEE ALSO"
mload(4).
.SH BUGS
The \f2ml\f1 command does not provide a way to create edt structures
for drivers.
Driver initialization can only be done from the
driver's \f3init\f1 and \f3start\f1 functions.
See the \f2lboot\f1(1M) reference
page for loading drivers with edt functions.

'\"macro stdmacro
.\" Copyright (c) 1988 Sun Microsystems, Inc. - All Rights Reserved.
.if n .pH g1a.swap @(#)swap	41.8 of 5/26/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} swap 1M "" "\&"
.if \nX=1 .ds x} swap 1M ""
.if \nX=2 .ds x} swap 1M "" "\&"
.if \nX=3 .ds x} swap "" "" "\&"
.TH \*(x}
.SH NAME
\f4swap\f1 \- swap administrative interface
.SH SYNOPSIS
\f4/sbin/swap \-a [\-i][\-p\f2pri\f4][\-v\f2vlen\f4] \f2name\f4 [\f2low\f4 [\f2len\f4]]\f1
.br
\f4/sbin/swap \-d\f2 name/lswap \f4[\f2low\f4]
.br
\f4/sbin/swap \-l [\-n][\-f][\-b]\f1
.br
\f4/sbin/swap \-s [\-b]\f1
.br
\f4/sbin/swap \-m\f1
.br
\f4/sbin/swap \-u\f1
.SH DESCRIPTION
\f4swap\fP provides a method of adding, deleting, and monitoring
the system swap areas used by the memory manager.
The following options are recognized:
.TP 5
\f4\-a\f1
Add the specified swap resource.
\f2name\f1 is the name of the block special partition, for example,
\f4/dev/dsk/dks0d1s1\f1 or a regular file.
Files on NFS mounted file systems are also permitted
(see 
.B "Swapping to NFS Files" 
below).
\f2low\f1 is the offset in 512-byte blocks into the
partition/file where the swap area should begin.
If \f2low\f1 is absent, a default of 0 is used.
This value is rounded up to a multiple of the system defined swap page size.
\f2len\f1 is the length of the swap area in 512-byte blocks.
If \f2len\f1 is absent, the new swap area will use the entire
partition/file.
This value is rounded down to a multiple of the system defined swap page size.
Files used as swap devices must exist and have been previously grown
to the appropriate size (see \f4mkfile\f1(1m)).
A maximum of 255 swap resources can be active at a given time.
This option can only be used by a privileged user.
.sp
Swap areas are normally added by modifying the \f4/etc/fstab\f1 file
to contain the various files and partitions that should be added
when the system is booted.
.sp
When using the \f4\-a\f1 or \f4\-m\f1 option, \f4/etc/fstab\f1 is
scanned for an entry whose \f2type\f1 field contains \f4swap\f1
and whose \f2filesystem\f1 field matches \f2name\f1.
\f2name\f1 is made into a full path name.
If an entry is found in \f4/etc/fstab\f1, any supplied options are used
to supplement any options given on the command line (e.g. priority).
.TP
\f4\-i\f1
Ignore safety checks.
Normally, when adding a block special device as a swap resource,
a check is made to try to be certain that the block device does
not overlap any existing file systems.
This option turns off that check.
.TP
\f4\-p \f2pri\f1
Swap resources have a priority between 0 and 7 inclusive where
lower priority swap resources are allocated from first.
Within a priority, allocations are done round-robin.
By default, block devices are assigned a priority of 0, files on
local file systems are assigned a priority of 2 and files on NFS
mounted file systems are assigned a priority of 4.
This option is only valid when adding a swap resource.
.TP
\f4\-v \f2vlength\f1
Set the virtual length of the swap area to \f2vlength\f1.
Normally, if this field is not specified, the amount of logical swap
is increased by the size of the physical swap device being added.
This option tells the system to increase the logical swap amount
by \f2vlength\fP.
Thus, the difference between \f2vlength\fP and the actual size of the
device is amount of \f2virtual\fP swap that is added.
The virtual length must be greater than or equal to the physical length
of the swap area.
If not specified,
the virtual length is set equal to the actual length.
See \f4swapctl\f1(2) for a discussion on virtual swap spaces.
In general, this option should only be used when there is no
other way to get enough swap resources (even via NFS) and it is
understood the potential problems creating virtual swap can cause.
See the discussion of Logical Swap Space below.
.TP
\f4\-d\f1
Delete the specified swap resource.
\f2name\f1 is the name of block special partition, for example,
\f4/dev/dsk/dks0d1s1\f1 or a regular file.
If \f2name\fP starts with a digit, it is interpreted as the logical swap
number of the device to be deleted.
This is useful when the file or device directory entry has been inadvertently
been removed.
\f2low\f1 is the offset in 512-byte blocks into the
swap area to be deleted.
If not specified, a default of 0 is used.
Using this option marks the swap area as ``\s-1INDEL\s+1''
(in the process of being deleted).
The system will not allocate any new blocks from the area,
and will try to free swap blocks from it.
The area will remain in use until all blocks from it
are freed.
This option can be used only by a privileged user.
.TP
\f4\-m\f1
Add all swap resources specified in \f4/etc/fstab\f1 (
.I type
field is
.BR swap ).
An entry with the name
.B "/dev/swap"
is ignored, as are all entries with the
.B noauto
option present.
This option is primarily for the system start up script \f4/etc/init.d/swap\f1
which, at boot time, adds all the administrator configured swap resources.
This option can be used only by a privileged user.
.TP
\f4\-u\f1
Delete all swap resources except the original boot swap resource.
This option is primarily for the system shutdown script \f4/etc/init.d/swap\f1
which, at system shutdown time, deletes all the configured swap resources.
The original boot swap resource may be explicitly deleted using the
.B \-d
option.
This option can be used only by a privileged user.
.TP
\f4\-l\f1
List the status of all the swap areas.
The output has either seven or nine columns depending on various options.
By default, the listing contains nine columns and all values are
in 512 byte blocks.
The \f4\-n\fP option enables a new easier to read output format which
defaults to printing the important seven columns (the additional two columns
are printed if the
\f4\-f\f1 option is specified).
Values with the \f4\-n\fP option are printed in either bytes,
or with the \f4\-b\f1 option, in
512-byte blocks.
The \f4\-f\fP and \f4\-b\fP options are only recognized when the new
output format is specified.
.RS 5
.TP 8
.SM
\f4#\f1
The logical swap number.
This ranges from 1 to 255.
This is column is labeled \f4lswap\fP in the default listing format.
.TP
.SM
\f4path\f1
The path name for the swap area.
.TP
.SM
\f4dev\f1
The major/minor device number in decimal.
This is printed in the default list format or
in the new format if the \f4\-f\f1 option is present.
If the swap resource is a block special device, this major/minor
pair refers to the special device itself.
If the swap resource is a regular file, the major/minor number is for
the underlying file system that the file resides on.
If the
.IR stat (2)
on \f4path\f1 fails, '?,?' is printed.
.TP
.SM
\f4pri\f1
The priority of the swap resource.
.TP
.SM
\f4swaplo\f1
The \f2swaplow\f1 value for the area in 512-byte blocks.
This is printed in the default list format or
in the new format if the \f4\-f\f1 option is present.
This value is rounded up to a multiple of the system defined swap page size.
.TP
.SM
\f4pswap\f1
The \f2swaplen\f1 value for the area.
This value is rounded down to a multiple of the system defined swap page size.
This is column is labeled \f4blocks\fP in the default listing format.
.TP
.SM
\f4free\f1
The amount of free swap in the area.
.TP
.SM
\f4maxswap\f1
The maximum size the area will be grown to.
.TP
.SM
\f4vswap\f1
The size over and above any physical space that the system is assuming
it can use (see the discussion of logical swap space below, and the \f4\-v\fP
option above).
.PP
There are four status flags that may be printed after the last column.
Normally functioning swap resources will not have any status flags.
These flags are:
.TP 8
.SM
\f4INDEL\f1
The swap area is being deleted.
No allocations will be made from this device.
.TP
.SM
\f4EACCES\f1
The swap area was on an NFS mounted file system and 'root'
does not have permission to write the file.
The swap area is immediately taken off line.
.TP
.SM
\f4ESTALE\f1
The swap area was on an NFS mounted file system and the file was
removed on the NFS server.
The swap area is immediately taken off line.
Processes with pages on the swap area will be terminated abnormally
the first time they attempt to access any page that had been stored on the
swap area.
.TP
.SM
\f4IOERR\f1
An I/O error occurred on the device.
This could result in the abnormal termination of a process.
Look in
.SM
.B /var/adm/SYSLOG
for more details.
Even with I/O errors, the swap area is still allocated from and used
until deleted.
.RE
.TP
\f4\-s\f1
Print information about total logical swap space usage.
Values are printed in either bytes, or with the \f4\-b\f1 option, in
512-byte blocks.
.RS
.TP 12
\f4allocated\f1
The amount of swap space allocated to private pages.
.TP
\f4reserved\f1
The amount of swap space not currently
allocated, but claimed by private memory mappings.
.TP
\f4used\f1
The total amount of logical swap space that is
either allocated or reserved.
.TP
\f4available\f1
The total logical swap space that is currently
available for future reservation and allocation.
.RE
.SH "SWAPPING TO NFS FILES"
Swapping to regular files on NFS mounted file systems is permitted
but should be done only with hard mounted file systems with the
\f2intr\f1 option turned off (see \f4fstab\f1(4)).
When using either soft mounted file systems or the \f2intr\f1 option,
NFS may return an error during a swap I/O operation.
An I/O error that occurs when swapping in a page causes the process
requesting the page to be killed, since it's address space 
is no longer accessible.
Since it is possible for the \f4init\f1 process to be swapped out to
the NFS file,
a timeout from a soft mounted file system that occurs
while the system is swapping in a page for \f4init\f1 will cause \f4init\f1 to die.
Since the system
is unable to run without \f4init\f1, the system will in turn panic.
Using hard mounted file systems without the \f2intr\f1 flag 
avoids these problems.
.PP
Even when using hard mounted NFS file systems,
the system may appear to hang if the NFS server fails to respond.
If the window manager, shell, or other key process is swapped out
to the NFS file and the server fails to respond during swap-in,
then the system will wait and retry the NFS file read indefinitely.
During this time, programs attempting to swap-in pages from
that server will not run and will appear to be hung.
Once the NFS server starts responding again,
normal system activity will resume.
.PP
Finally,
the system administrator must ensure that the swap file on the 
NFS server is not deleted.
This would cause subsequent swap-ins to fail and again cause the
associated processes to be killed.
.SH LOGICAL SWAP SPACE
Logical swap space is the sum total of physical memory (less space
occupied by the kernel) and all swap devices.
The system reserves logical swap space for the private portions
of a process's virtual address space (data, bss, stack, MAP_PRIVATE
mmap mappings, etc.) when virtual address spaces are
created (via \f4fork\f1(2)), when they are grown
(via \f4brk\f1(2), \f4sbrk\f1(2), or \f4malloc\f1(3C)), 
or when new segments are attached (via \f4mmap\f1(2),
or \f4shmat\f1(2)).
Logical swap space is not required for shared text or MAP_SHARED
mapped files (except for mappings of the \f2/dev/zero\f1 device).
If the amount of private virtual space requested exceeds the available
logical swap space, the system call fails with EAGAIN and an
"out of logical swap space"
message is logged on the console.
The system does this in order to prevent memory deadlocks from
occurring.
.PP
Note that the system may report being out of swap space when
the \f4\-l\f1 option shown above reports free swap space available.
This happens when the logical swap space has been reserved,
but physical space has not yet been allocated,
so the blocks are still marked as being free.
The \f4\-s\f1 option to the \f4swap\f1 command will report the
amount of logical swap space reserved and allocated.
.PP
Programs that have large address spaces and
large programs that fork, may receive EAGAIN along with the
"out of logical swap space" message on the console.
This can also happen when debugging a large program with
\f4dbx\f1 or other debugger.
There are two ways to avoid this error: adding more real
swap space, or adding virtual swap space.
Adding real swap space means allocating an additional disk
partition or a regular file (either local or remote via NFS)
to be used as a swap device (using the \f4\-a\f1 option shown
above and the examples below).
This is the required approach for programs that 
use most of the virtual addresses they allocate.
The advantage of this approach is that it continues to
avoid memory deadlocks, but requires physical disk space
to be allocated.
.PP
The alternative is to add virtual swap space using the 
\f4\-v\f1 option.
This increases the amount of logical swap space without using any
physical disk space.
This is suitable when the programs involved do not 
intend to use the virtual address
space they allocate (i.e., when the address space is sparse or
when a large program that forks intends
to exec soon afterwards without modifying many pages).
In these cases, physical swap space is not required and so adding
virtual swap space allows the kernel to complete the logical
swap space reservation and avoid the EAGAIN errors.
The advantage of this approach is that it does not require any
disk space, but adds the risk of encountering a memory
deadlock.
Memory deadlocks occur when the system has over-committed logical
swap space by allowing the total private virtual space of the processes on
the system to exceed real swap space.
When processes attempt to use the allocated virtual space,
the kernel has no place to store the data
(since virtual swap space has no associated disk space),
and a memory deadlock results.
In these instances,
the kernel kills one or more processes to free up enough logical
swap space to break the deadlock.
For this reason,
virtual swap space should not be used in cases where the program will
attempt to use the memory.
For example,
programs 
that expect \f4malloc\f1(3C) to return 
\f4NULL\f1 when there is no more memory will in fact be allocated
virtual memory that they could not use without causing a memory
deadlock.
The \f4\-v\f1 option should therefore be used with care.
.SH NOTES
The ability to request that a swap resource be automatically grown
has not been implemented.
\."Privileged use of this command is restricted to maintenance mode.
\."See the \%\f2System Administrator's Guide\fP for a description
\."of maintenance mode.
\.".PP
\."No check is done to see if a swap area being added
\."overlaps with an existing file system.
.SH EXAMPLES
The following \f4swap\fP example requests 10K of swap area (twenty
512-byte blocks) on the device \f4/dev/dsk/dks0d1s1\f1:
.sp
.RS
\f4/sbin/swap -a /dev/dsk/dks0d1s1 0 20\f1
.RE
.PP
The following adds 50Mb of swap space to the system using a file
in the \f2/swap\f1 directory:
.sp
.RS
\f4/usr/sbin/mkfile 50m /swap/swap1\f1
.sp
\f4/sbin/swap -a /swap/swap1\f1
.RE
.sp
To make this swap area permanent (automatically added at boot time)
add the following line to \f2/etc/fstab\f1:
.sp
.RS
\f4/swap/swap1 swap swap pri=3 0 0
.RE
.PP
The following example adds the regular file \f4swap1\f1
as a swap resource.
Its priority is set to 5, and the system is told that it should add
100 Mbytes (204800 512-byte blocks) to the virtual swap total.
The example assumes that \f4swap1\f1 is less
than 100 Mbytes in length:
.sp
.RS
\f4/sbin/swap -a -p 5 -v 204800 swap1\f1
.RE
.PP
The following line in \f4/etc/fstab\f1 will add the same swap resource
as the previous example, except that it will occur automatically at
system startup time:
.sp
.RS
\f4/swap/swap1 swap swap  pri=5,vlength=204800 0 0\f1
.RE
.SH "FILES"
/etc/fstab	swap and/or vswap to add at system boot
.br
/etc/config/vswap.options	sets default size of virtual swap at boot
.br
/etc/init.d/swap	adds/removes swap and/or vswap at boot/shutdown
.SH "SEE ALSO"
mkfile(1M),
mount(1M), swapctl(2), fstab(4).
.Ee

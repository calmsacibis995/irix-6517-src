.TH peer_encaps 1M
.SH NAME
peer_encaps \- Simple Network Management Protocol Agent Encapsulator
.SH SYNOPSIS
.nf
\f3/usr/etc/peer_encaps\fP [ \f3-t\fP \f2trapPort\fP ] 
                     [ \f3-s\fP \f2sendPort\fP ] 
                     [ \f3-h\fP \f2host\fP ] 
                     [ \f3-p\fP \f2port\fP ] 
                     [ \f3-w\fP \f2wait\fP ] 
                     [ \f3-c\fP \f2configFile\fP ]
.fi
.SH DESCRIPTION
\f2peer_encaps\fP is a daemon which provides a way to encapsulate proprietary
SNMP agents, and an integrated environment for hosts that also run an off-the-shelf
or custom, non-extensible SNMP Agent or proxy.

The \f2peer_snmpd\fP(1m) daemon implements the Simple Network Management Protocol
(SNMP).  Since only a single SNMP Agent can be listening to the standard SNMP port
(UDP port 161), this limits a Manager to access only variables associated with
one agent.  The \f2peer_encaps\fP daemon provides a mechanism to overcome this 
problem.  
.LP
The \f2peer_snmpd\fP agent is configured to listen at UDP port 161, so
that it receives ALL SNMP queries.  The other proprietary SNMP Agents are invoked
listening at alternate ports, not at 161.  The \f2peer_encaps\fP daemon is 
configured to recognize these SNMP Agents, the alternate port number at 
which they are listening, and the sub-trees (a sub-tree is a set of MIB 
variables subordinate to a node in the naming tree) they are managing.  
When the \f2peer_encaps\fP daemon is started up, it reads a configuration 
file containing all this information, and connects to the \f2\peer_snmpd\fP 
daemon, informing about these sub-trees.
.LP
When the \f2peer_snmpd\fP daemon receives a SNMP request corresponding to a
subtree associated with an encapsulated agent, it passes on them to 
the \f2peer_encaps\fP daemon, which converts the requests into SNMPv1 
packets, and sends the packets to the specific Agent at the specific 
alternate port.
.LP
The reverse is true for the responses and traps.
.LP
The \f2peer_snmpd\fP and \f2peer_encaps\fP daemons use SMUX protocol to 
communicate between each other.  Please refer to RFC 1227 for more information
on the SMUX protocol.
.SH OPTIONS
.TP
\f4-t trapPort\f1
The incoming trap port where peer_encaps listens to receive SNMP traps sent by encapsulated agents.

Default : no traps forwarded
.TP 
\f4-s sendPort\f1
The port from which peer_encaps sends requests to the encapsulated agents, and
to which the encapsulated agents send their responses.

Default : Assigned by the host
.TP
\f4-h host\f1
The address of the host where the peer_snmpd daemon is running, normally
the same host where the peer_encaps daemon is running.

Example : -h 192.146.153.3                                                         Default : localhost
.TP
\f4-p port\f1
The SMUX port number to which peer_encaps sends its SMUX traffic.

Default : /etc/services SMUX port, if provided ; else 199.
.TP
\f2-w wait\f1
The timeout in seconds, for the SNMP response from the encapsulated agent.

Default : 2 seconds
.TP
\f4-c configFile
The full path name of the configuration file.  For details on the format
of this configuration file, please see peer_encaps_config(4).

Default : /etc/peer_encaps_config
.SH FILES
.DT
/usr/etc/peer_encaps
.br
/etc/peer_encaps_config
.SH "SEE ALSO"
\f4peer_snmpd\fP(1m), \f4peer_snmpd_config\fP(4), \f4peer_encaps_config\fP(4)

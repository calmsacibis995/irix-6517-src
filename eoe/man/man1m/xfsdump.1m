.TH xfsdump 1M "July 25, 1995"
.SH NAME
xfsdump \- \&XFS filesystem incremental dump utility
.SH SYNOPSIS
.nf
\f3xfsdump\f1 \c
[ \f3-a\f1 ] \c
[ \f3\-b\f1 blocksize (use with minimal rmt flag) ] 
        [ \f3\-c\f1 media_change_alert_program ] \c
[ \f3\-f\f1 destination ... ] 
        [ \f3\-l\f1 level ] \c
[ \f3\-m\f1 force usage of minimal rmt ] 
        [ \f3\-o\f1 overwrite tape ] \c
[ \f3\-p\f1 report_interval ] 
        [ \f3\-s\f1 pathname ... ] \c
[ \f3\-v\f1 verbosity ] \c
[ \f3\-A\f1 ] 
        [ \f3\-B\f1 base_id ] \c
[ \f3\-E\f1 ] \c
[ \f3\-F\f1 ] \c
[ \f3\-I\f1 [ subopt=value ... ] ] 
        [ \f3\-J\f1 ] \c
[ \f3\-L\f1 session_label ] \c
[ \f3\-M\f1 media_label ... ] 
        [ \f3\-O\f1 options_file ] \c
[ \f3\-R\f1 ] \c
[ \f3\-T\f1 ] \c
[ \f3\-Y\f1 io_ring_length ] 
        [ \f3\-\f1 ] \c
filesystem
.fi
.SH DESCRIPTION
.I xfsdump
backs up files and their attributes in a filesystem.
The files are dumped to
storage media,
a regular file,
or standard output.
Options allow the operator to have all files dumped,
just files that have changed since a previous dump,
or just files contained in a list of pathnames.
.P
The
.IR xfsrestore (1M)
utility re-populates a filesystem with the contents of the dump.
.P
Each invocation of
.I xfsdump
dumps just one filesystem.
That invocation is termed a dump session.
The dump session splits the filesystem into one or more
dump streams,
one per destination.
The split is done in filesystem inode number (ino) order,
at boundaries selected to equalize the size of each stream.
Furthermore, the breakpoints between streams may be in the
middle of very large files (at extent boundaries) if necessary
to achieve reasonable stream size equalization.
Each dump stream can span several media objects,
and a single media object can contain several dump streams.
The typical media object is a tape cartridge.
The media object records the dump stream as one or more media files.
A media file is a self-contained partial dump.
The portion of a dump stream contained on a media object can
be split into several media files.
This minimizes the impact of media
dropouts on the entire dump stream,
and speeds subtree restores.
.P
.I xfsdump
maintains an online dump inventory in \f2/var/xfsdump/inventory\f1.
The
.B \-I
option displays the inventory contents hierarchically.
The levels of the hierarchy are:
filesystem,
dump session,
stream, and
media file.
.P
.TP 5
.B \-a
Specifies that files for which the Data Migration
Facility (DMF) has complete offline copies
be dumped as DMF state offline (OFL).
This means that the file data will not be dumped by
xfsdump, resulting in a smaller dump file.
If the file is later restored the file data is still accessible through DMF.
.TP 5
\f3\-b\f1 \f2blocksize\f1
Specifies the blocksize to be used for the dump. This option is
specified only with the minimal rmt option (see the
.B \-m
option below). For a QIC drive , blocksize must always be 512.
For other drives such as DAT or 8 mm , a blocksize of 245760 bytes
works well. The same blocksize must be specified to restore the tape.
When specified , this blocksize applies to all remote tape destinations.
.TP 5
\f3\-c\f1 \f2media_change_alert_program\f1
Use the specified program to alert the operator when a media change is
required. The alert program is typically a script to send a mail or
flash a window to draw the operator's attention.
.TP 5
\f3\-f\f1 \f2destination\f1
Specifies a dump destination.
A dump destination can be the pathname of a device (such as a tape drive),
a regular file,
or a remote tape drive (see \f2rmt\f1(1M)).
Up to 20 dump destinations can be specified, in which case
each destination receives an equal portion of the filesystem.
This option must be omitted if the standard output option
(a lone
.B \-
preceding the source filesystem specification)
is specified.
.TP 5
\f3\-l\f1 \f2level\f1
Specifies a dump level of 0 to 9.
The dump level determines the base dump to which this
dump is relative.
The base dump is the most recent dump at a lesser level.
A level 0 dump is absolute \- all files are dumped.
A dump level where 1 <= \f2level\f1 <= 9 is referred to as an incremental dump.
Only files that have been changed since the base dump are dumped.
Subtree dumps
(see the
.B \-s
option below)
cannot be used as the
base for incremental dumps.
.TP 5
.B \-m
Use the minimal rmt protocol for remote tape destinations. This is used when the
remote machine is a non-SGI machine. With this option,
.I xfsdump
uses version 1 rmt protocol for all remote tape drives. 
This option cannot be used without specifying a blocksize to be used (see 
.B \-b
option above). If all rmt destinations 
are SGI machines, it is preferable 
.B not 
to specify this option.
.TP 5
.B \-o
Overwrite the tape. With this option, 
.I xfsdump 
does not read the tape first to check the contents. This option may 
be used if 
.I xfsdump 
is unable to determine the block size of a tape .
.TP 5
\f3\-p\f1 \f2interval\f1
Causes progress reports to be printed at the specified interval.
.I
interval is given in seconds.
The progress report indicates
how many files have been dumped,
the total number of files to dump,
the percentage of data dumped,
and
the elapsed time.
.TP 5
\f3\-s\f1 \f2pathname\f1 ...
Restricts the dump to files contained in the specified pathnames
(subtrees).
Up to 100 pathnames can be specified.
A \f2pathname\f1 must be relative to the mount point of the filesystem.
For example, if a filesystem is mounted at \f2/d2\f1, the \f2pathname\f1
argument for the directory \f2/d2/users\f1 is ``users''.
A \f2pathname\f1 can be a file or a directory; if it is a directory,
the entire hierarchy of files and subdirectories rooted at that directory
is dumped.
Subtree dumps cannot be used as the base for incremental dumps
(see the
.B \-l
option above).
.TP 5
\f3\-v\f1 \f2verbosity_level\f1
Specifies the level of detail of the messages displayed during the course
of the dump.
The argument can be \f3silent\f1, \f3verbose\f1, or \f3trace\f1.
The default is \f3verbose\f1.
.TP 5
.B \-A
Do not dump extended file attributes.
Unless this option is specified,
extended file attributes are dumped.
Note that dumps containing extended file attributes
cannot be restored with older versions of \f2xfsrestore\f1(1M).
.TP 5
\f3\-B\f1 \f2base_id\f1
Specifies the ID
of the dump session upon which this dump session is to be based.
If this option is specified, the
.B \-l
(level)
and
.B \-R
(resume) options
are not allowed.
Instead,
.B xfsdump
determines if the current dump session should be incremental
and/or resumed,
by looking at the base session's level and interrupted attributes.
If the base session was interrupted,
the current dump session is a resumption of that base at the same level.
Otherwise, the current dump session is an incremental dump with a level
one greater than that of the base session.
This option allows incremental
and resumed dumps to be based on any previous dump,
rather than just the most recent.
.TP 5
.B \-E
Pre-erase media.
If this option is specified, media is erased prior to use.
The operator is prompted for confirmation,
unless the
.B \-F
option is also specified.
.TP 5
.B \-F
Don't prompt the operator.
When
.I xfsdump
encounters a media object containing non-xfsdump data,
.I xfsdump
normally asks the operator for permission to overwrite.
With this option the overwrite is performed, no questions asked.
When
.I xfsdump
encounters end-of-media during a dump,
.I xfsdump
normally asks the operator if another media object will be provided.
With this option the dump is instead interrupted.
.TP 5
.B \-I
Displays the \f2xfsdump\f1 inventory
(no dump is performed).
.I xfsdump
records each dump session in an online inventory
in \f2/var/xfsdump/inventory\f1.
.I xfsdump
uses this inventory to determine the base for incremental dumps.
It is also useful for manually identifying a dump session to be restored.
Suboptions to filter the inventory display are described later.
.TP 5
.B \-J
Inhibits the normal update of the inventory.
This is useful when the media being dumped to
will be discarded or overwritten.
.TP 5
\f3\-L\f1 \f2session_label\f1
Specifies a label
for the dump session.
It can be any arbitrary string up to 255 characters long.
.TP 5
\f3\-M\f1 \f2media_label\f1
Specifies a label
for the first media object (for example, tape cartridge)
written on the corresponding destination during the session.
It can be any arbitrary string up to 255 characters long.
Multiple media object labels can be specified,
one for each destination.
.TP 5
\f3\-O\f1 \f2options_file\f1
Insert the options contained in \f2options_file\f1
into the beginning of the command line.
The options are specified just as they would appear if typed into the
command line.
In addition, newline characters (\\n) can be used as whitespace.
The options are placed before all options actually given
on the command line,
just after the command name.
Only one \f3\-O\f1 option can be used.
Recursive use is ignored.
The source filesystem cannot be specified in \f2options_file\f1.
.TP 5
.B \-R
Resumes a previously interrupted dump session.
If the most recent dump at this dump's level (\f3\-l\f1 option)
was interrupted,
this dump contains only files not in the interrupted dump
and consistent with the incremental level.
However,
files contained in the interrupted dump that have been subsequently
modified are re-dumped.
.TP 5
.B \-T
Inhibits interactive dialogue timeouts.
When the
.B \-F
option is not specified,
.I xfsdump
prompts the operator for labels and media changes.
Each dialogue normally times out if no response is supplied.
This option prevents the timeout.
.TP 5
\f3\-Y\f1 \f2io_ring_length\f1
Specify I/O buffer ring length.
.I xfsdump
uses a ring of output buffers to achieve maximum throughput
when dumping to tape drives.
The default ring length is 3.
.TP 5
.B \-
A lone
.B \-
causes the dump stream to be sent to
the standard output,
where it can be piped to another utility such as \f2xfsrestore\f1(1M)
or redirected to a file.
This option cannot be used with the
.B \-f
option.
The
.B \-
must follow all other options and precede the filesystem specification.
.P
The filesystem, \f2filesystem\f1, can be specified either as a mount point or as
a special device file (for example, \f2/dev/dsk/dks0d1s0\f1).
The filesystem must be mounted to be dumped.
.SH NOTES
.SS Dump Interruption
A dump can be interrupted at any time and later resumed.
To interrupt, type control-C
(or the current terminal interrupt character).
The operator is prompted to select one of several operations,
including dump interruption.
After the operator selects dump interruption,
the dump continues until a convenient break point is
encountered (typically the end of the current file).
Very large files are broken into smaller subfiles,
so the wait for the end of the current file is brief.
.SS Dump Resumption
A previously interrupted dump can be resumed
by specifying the
.B \-R
option.
If the most recent dump at the specified level was interrupted,
the new dump does not include files already dumped,
unless they have changed since the interrupted dump.
.SS Media Management
A single media object can contain many dump streams.
Conversely, a single dump stream can span multiple media objects.
If a dump stream is sent to a media object already containing one or more dumps,
.I xfsdump
appends the new dump stream after the last dump stream.
Media files are never overwritten.
If end-of-media is encountered during the course of a dump,
the operator is prompted to insert a new media object
into the drive.
The dump stream continuation is appended after the last media file
on the new media object.
.SS Inventory
Each dump session updates an inventory database in \f2/var/xfsdump/inventory\f1.
.I xfsdump
uses the inventory to determine the base of incremental
and resumed dumps.
.P
This database can be displayed by invoking
.I xfsdump
with the
.B \-I
option.
The display uses tabbed indentation to present the inventory
hierarchically.
The first level is filesystem.
The second level is session.
The third level is media stream (currently only one stream is supported).
The fourth level lists the media files sequentially composing the stream.
.P
The following suboptions are available to filter the display.
.TP5
\f3\-I depth=\f1\f2n\f1
(where
.I n
is 1, 2, or 3) limits the hierarchical depth of the display. When
.I n
is 1, only the filesystem information from the inventory is displayed. When
.I n
is 2, only filesystem and session information are displayed. When
.I n
is 3, only filesystem, session and stream information are displayed.
.TP5
\f3\-I level=\f1\f2n\f1
(where
.I n
is the dump level) limits the display to dumps of that particular dump level.
.P
The display may be restricted to media files contained in a specific
media object.
.TP5
\f3\-I mobjid=\f1\f2value\f1
(where
.I value
is a media ID) specifies the media object by its media ID.
.TP5
\f3\-I mobjlabel=\f1\f2value\f1
(where
.I value
is a media label) specifies the media object by its media label.
.P
Similarly, the display can be restricted to a specific filesystem.
.TP5
\f3\-I mnt=\f1\f2host-qualified_mount_point_pathname\f1
(that is, hostname:pathname), identifies the filesystem by mountpoint.
.TP5
\f3\-I fsid=\f1\f2filesystem_id\f1
identifies the filesystem by filesystem ID.
.TP5
\f3\-I dev=\f1\f2host-qualified_device_pathname\f1
(that is, hostname:device_pathname) identifies the filesystem by device.
.P
More than one of these suboptions, separated by commas, may be specified
at the same time to limit the display of the inventory to
those dumps of interest.
However, at most four suboptions can be specified at once:
one to constrain the display hierarchy depth,
one to constrain the dump level,
one to constrain the media object,
and one to constrain the filesystem.
.P
For example,
.B \-I depth=1,mobjlabel="tape 1",mnt=host1:/test_mnt
would display only the filesystem information (depth=1) for
those filesystems that were mounted on \f2host1:/test_mnt\f1
at the time of the dump,
and only those filesystems dumped to the media object labeled "tape 1".
.P
Dump records may be removed (pruned) from the inventory using the
.I xfsinvutil
program.
.P
An additional media file is placed
at the end of each dump stream.
This media file contains the inventory information for the
current dump session.
This is currently unused.
.P
When operating in the miniroot environment,
.I xfsdump
does not create and does not reference the inventory database.
Thus incremental and resumed dumps are not allowed.
.SS Labels
The operator can specify a label to identify the dump
session
and a label to identify a media object.
The session label is placed in every media file produced
in the course of the dump,
and is recorded in the inventory.
.P
The media label is used to identify media objects,
and is independent of the session label.
Each media file on the media object contains a copy of the
media label.
An error is returned if the operator specifies a
media label that does not match the media label on a
media object containing valid media files.
Media labels are recorded in the inventory.
.SS UUIDs
UUIDs (Universally Unique Identifiers) are used in three places:
to identify the filesystem being dumped (using the filesystem UUID,
see
.IR xfs (4)
for more details),
to identify the dump session,
and to identify each media object.
The inventory display (\f3\-I\f1) includes all of these.
.SS Dump Level Usage
The dump level mechanism provides a structured form of incremental
dumps.
A dump of level \f2level\f1 includes only files that have changed since
the most recent dump at a level less than \f2level\f1.
For example, the operator can establish a dump schedule that involves
a full dump every Friday
and a daily incremental dump containing only files that
have changed since the previous dump.
In this case Friday's dump would be at level 0,
Saturday's at level 1,
Sunday's at level 2,
and so on,
up to the Thursday dump at level 6.
.P
The above schedule results in a very tedious restore procedure to
fully reconstruct the Thursday version of the filesystem;
\f2xfsrestore\f1 would need to be fed all 7 dumps in sequence.
A compromise schedule is to use level 1 on Saturday, Monday,
and Wednesday,
and level 2 on Sunday, Tuesday, and Thursday.
The Monday and Wednesday dumps would take longer,
but the worst case restore requires the
accumulation of just three dumps, one each at level 0, level 1, and level 2.
.SS Miniroot Restrictions
.I xfsdump
is subject to the following restrictions when operated in the miniroot
environment:
non-restartable,
no incrementals,
no online inventory,
synchronous I/O.
.SH FILES
.TP 25
/var/xfsdump/inventory
dump inventory database
.SH SEE ALSO
rmt(1M),
xfsrestore(1M),
xfsinvutil(1M),
attr_get(2).
.SH DIAGNOSTICS
The exit code is 0 on normal completion, non-zero if an error
occurs or the dump is terminated by the operator.
.PP
The message
``xfsdump: WARNING: unable to open directory: ino N: Invalid argument''
can occur with filesystems which are actively being modified while
.I xfsdump
is running.
This can happen to either directory or regular file inodes \- affected
files will not end up in the dump, files below affected directories will
be placed in the
.I orphanage
directory by
.IR xfsrestore .
.SH BUGS
.I xfsdump
does not dump unmounted filesystems.
.PP
The dump frequency field of \f2/etc/fstab\f1 is not supported.
.PP
.I xfsdump
uses the alert program only when a media change is required. 
.PP
.I xfsdump
requires root privilege (except for inventory display).
.PP
.I xfsdump
can only dump XFS filesystems.
.PP
The media format used by \f2xfsdump\f1 can only be understood
by \f2xfsrestore\f1.
.PP
\f2xfsdump\f1 does not know how to manage CD-ROM or other removable
disk drives.
.PP
When the minimal rmt option is specified, \f2xfsdump\f1 applies it to 
all remote tape destinations. The same blocksize (specified by the 
.B \-b
option) is used for all these remote drives.
.PP
\f2xfsdump\f1 can become confused when doing incremental or
resumed dumps
if on the same machine you dump two XFS filesystems and both
filesystems have the same filesystem identifier (UUID).
Since \f2xfsdump\f1 uses the filesystem identifier to identify
filesystems,
\f2xfsdump\f1 maintains one combined set of dump inventories
for both filesytems instead of two sets of dump inventories.
This scenario can happen only if
.I dd
or some other block-by-block copy program was used to make
a copy of an XFS filesystem.
See
.IR xfs_copy (1M)
and
.IR xfs (4)
for more details.

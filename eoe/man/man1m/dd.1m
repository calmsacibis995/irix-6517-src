.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} dd 1M "Essential Utilities" "\&"
.TH \*(x}
.SH NAME
\f4dd\f1 \- convert and copy a file
.SH SYNOPSIS
.nf
\f4dd\f1 [option\f4=\f1value] ...
.fi
.SH DESCRIPTION
\f4dd\fP
copies the specified input file
to the specified output with
possible conversions.
The standard input and output are used by default.
The input and output block sizes can be
specified to take advantage of raw physical I/O.
\f4dd\fP processes supplementary code-set characters
according to the locale specified in the LC_CTYPE
environment variable (see LANG in \f4environ\fP(5)),
except as noted below.
.TP 15
Option
Values
.TP
\f4if=\f2file\f1
Input filename; standard input is default.
.TP
\f4of=\f2file\f1
Output filename; standard output is default.
.TP
\f4ibs=\f2n\f1
Input block size is
.I n
bytes (default 512).
.TP
\f4obs=\f2n\f1
Output block size is
.I n
bytes (default 512).
.TP
\f4bs=\f2n\f1
Set both input and output block size,
superseding
.I ibs
and
.IR obs .
Also, if no conversion is specified,
preserve the input block size instead of packing short blocks
into the output buffer
(this is particularly efficient since no in-core copy need be done).
.TP
\f4cbs=\f2n\f1
Conversion buffer size (logical record length).
.TP
\f4files=\f2n\f1
Copy and concatenate
.I n
input files before terminating (makes sense only
where input is a magnetic tape or similar device).
.TP
\f4skip=\f2n\f1
Skip
.I n
input blocks before starting copy (appropriate for magnetic
tape, where
.I iseek
is undefined).
.TP
\f4iseek=\f2n\f1
Seek
.I n
blocks from beginning of input file before copying (appropriate
for disk files, where
.I skip
can be slow).
.TP
\f4oseek=\f2n\f1
Seek
.I n
blocks from beginning of output file before copying.
Preserves the contents (over the range of the seek)
of a previously existing output file.
.TP
\f4seek=\f2n\f1
Identical to
.IR oseek ","
retained for backward compatibility.
.TP
\f4count=\f2n\f1
Copy only
.I n
input blocks.
.TP
\f4conv=ascii\f1
Convert EBCDIC to ASCII.
Conversion results cannot be assured when
supplementary code-set characters are also subject to conversion.
.RS "\w'\f4conv=\fP'u"
.TP 10
\f4ebcdic\f1
Convert ASCII to EBCDIC.
Conversion results cannot be assured when
supplementary code-set characters are also subject to conversion.
.TP
\f4ibm\f1
Slightly different map of ASCII to EBCDIC.
Conversion results cannot be assured when
supplementary code-set characters are also subject to conversion.
.RE
.TP
\f4conv=block\f1
Convert newline-terminated ASCII records to fixed length.
.RS "\w'\f4conv=\fP'u"
.TP 10
\f4unblock\f1
Convert fixed-length ASCII records to newline-terminated records.
.TP
\f4lcase\f1
Map alphabetics to lowercase.
Multibyte characters are not converted.
.TP
\f4ucase\f1
Map alphabetics to uppercase.
Multibyte characters are not converted.
.TP
\f4swab\f1
Swap every pair of bytes.
.TP
\f4noerror\f1
Do not stop processing on an error (limit of five consecutive errors).
A message is printed on each input error, giving the statistics up to
that point.
.TP
\f4ignerror\f1
Do not stop processing on an error at all.  Unlike \f4noerror\f1, 
the read errors are skipped over if possible, by using
.IR lseek64 (2),
(if possible)
and there is no limit on the number of errors.  It is recommended
that either \f4ibs\fP or \f4bs\fP be used, and set to the minimum
size for the input device, in order to minimize the skipped data.
This can sometimes allow disk drives to be copied even if they
contain unreadable blocks, although the output copy will of course
have blocks of missing (zero-filled) data.
.TP
\f4notrunc\f1
Do not truncate a pre-existing output file.
.TP
\f4sync\f1
Pad every input block to \f2ibs\f1.
Pad with spaces if conv=block or conv=unblock is specified,
otherwise pad with nulls.
.TP
\&\f4..., ...\f1
several comma-separated conversions.
.RE
.PP
Where sizes are specified,
a number of bytes is expected.
A number can end with
\f4k\f1,
\f4b\f1,
or
\f4w\f1
to specify multiplication by
1024, 512, or 2, respectively;
a pair of numbers can be separated by
\f4x\f1
to indicate multiplication.
.PP
\f4cbs\f1
is used only if
\f4ascii\fP,
\f4unblock\fP,
\f4ebcdic\fP,
\f4ibm\fP,
or
\f4block\fP
conversion is specified.
In the first two cases,
\f4cbs\f1
characters are copied into the conversion buffer, any specified
character mapping is done,
trailing blanks are trimmed, and a newline is added
before sending the line to the output.
In the latter three cases, characters are read into the
conversion buffer and blanks are added to make up an
output record of size
\f4cbs\fP.
If
\f4cbs\fP
is unspecified or zero, the
\f4ascii\fP,
\f4ebcdic\fP,
and
\f4ibm\fP
options convert the character set without changing the block
structure of the input file; the
\f4unblock\f1
and
\f4block\f1
options become a simple file copy.
.PP
After completion,
\f4dd\fP
reports the number of whole and partial input and output blocks.
.SH EXAMPLE
This command reads an EBCDIC tape that is blocked ten 80-byte
EBCDIC card images per tape block into the ASCII file \f2x\f1:
.Ex
\f4dd if=/dev/rmt/0h of=x ibs=800 obs=8k cbs=80 conv=ascii,lcase\f1
.Ee
Note the use of raw magnetic tape.
\f4dd\f1
is especially suited to I/O on the raw
physical devices because it allows reading
and writing in arbitrary block sizes.
.SH FILES
.TP 15
\f4/usr/lib/locale/\f2locale\f4/LC_MESSAGES/uxcore.abi\f1
language-specific message file (see LANG on \f4environ\f1(5))
.SH "SEE ALSO"
cp(1),
lseek64(2).
.SH DIAGNOSTICS
.TP
\f2f\f4+\f2p\f4 records in(out)\f1
numbers of full and partial blocks read(written)
.SH NOTES
Do not use \f4dd\f1 to copy files between filesystems having
different block sizes.
.PP
Using a blocked device to copy a file results in extra
nulls being added to the file to pad the final block to the
block boundary.

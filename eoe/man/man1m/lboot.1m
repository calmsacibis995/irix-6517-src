.TH lboot 1M
.SH NAME
lboot \- configure bootable kernel
.SH SYNOPSIS
.nf
\f3lboot\fP \f2options\fP
.fi
.SH DESCRIPTION
The
\f2lboot\fP
command is used to configure a bootable
UNIX kernel.
Master files in the directory
\f2master\fP
contain configuration information used by
\f2lboot\fP
when creating a kernel.
System files in the directory
.I system
are used by
\f2lboot\fP
to determine which modules are to be configured into the kernel.
.PP
If a module in \f2master\f1 is specified in the \f2system\fP file
via "INCLUDE:",
that module is included in the bootable kernel.
For all included modules,
\f2lboot\fP searches the \f2boot\fP directory for an object file
with the same name as the file in \f2master\fP, but with a \f3.o\f1
or \f3.a\f1 appended.
If found, this object is included when building the bootable kernel.
.PP
For every module in the
.I system
file specified via "VECTOR:",
\f2lboot\fP
takes actions to determine if a hardware device corresponding
to the specified module exists.
Generally, the action is a memory read at a specified base,
of the specified size.
If the read succeeds, the device is assumed to exist,
and its module is also included in the bootable kernel.
.PP
Master files that are specified in the \f2system\fP file
via "EXCLUDE:" are also examined;
stubs are created for routines specified
in the excluded master files that are not found in the included objects.
.PP
Master files that are specified in the \f2system\fP file via "USE:" are
treated as though the file were specified via the "INCLUDE:" directive,
if an object file corresponding to the master file is
found in the \f2boot\fP directory.
If no such object file is found, "USE:" is treated as "EXCLUDE:".
.PP
To create the new bootable object file,
the applicable master files are read
and the configuration information is extracted and compiled.
The output of this compilation is then linked
with all included object files.
Unless directed otherwise in the \f2system\fP file, the information is
compiled with \f3$TOOLROOT/usr/bin/cc\fP and combined with the modules
in the \f2boot\fP directory using \f3$TOOLROOT/usr/bin/ld\fP.
.PP
The options are:
.PP
.TP 12
.BI \-m " master"
Specifies the directory
containing the master files to be used for the bootable kernel.
The default \f2master\f1 directory is
.IR $ROOT/var/sysgen/master.d .
.TP
.BI \-s " system"
Specifies the directory containing the system files.
The default \f2system\f1 directory is
.IR $ROOT/var/sysgen/system .
.TP
.BI \-b " boot"
Specifies the directory where object files are to be found.
The default \f2boot\f1 directory is
.IR $ROOT/var/sysgen/boot .
.TP
.BI \-n " mtune"
Specifies the directory where tunable parameters are to be found.
The default \f2mtune\f1 directory is
.IR $ROOT/var/sysgen/mtune .
.TP
.BI \-c " stune"
Specifies the name of the file defining customized tunable
parameter values.
The default \f2stune\f1 file is
.IR $ROOT/var/sysgen/stune .
.TP
.BI \-r " ROOT"
\f3ROOT\fP becomes the starting pathname
when finding files of interest to \f2lboot\fP.
Note that this option sets \f3ROOT\fP as the search path for include
files used to generate the target kernel.
If this option is not specified, the \f3ROOT\fP environment variable (if any)
is used instead.
.TP
.B \-v
Makes
\f2lboot\fP
slightly more verbose.
.TP
.BI \-u " unix"
Specifies the name of the target kernel.
By default,
it is
.BR unix.new ,
unless the \f3\-t\f1 option is used, in which case the default
is \f3unix.install\f1.
.TP
.B \-d
Displays debugging information about the devices and
modules put in the kernel.
.TP
.B \-a
Used to auto-register all dynamically loadable
kernel modules that contain a \f3d\f1 and an \f3R\f1 in
their master files.
Only the auto-register is performed, a kernel is not configured.
.TP
.B \-A
Disables auto-registering of all dynamically loadable
modules.
A kernel is produced, but no auto-registration is performed.
.TP
.B \-l
Used to ignore the \f3d\f1 in all master files and
link all necessary modules into the kernel.
.TP
.B \-e
Causes the result of whether an auto-config would have been
performed to be printed, but no actual configuration is built.
.TP
.B \-w
Used to specify a work directory into which the
\f2master.c\f1 and \f2edt.list\f1 files are written.
By default these files
are written into the \f2boot\f1 directory.
.TP
.B \-t
Tests if the existing kernel is up-to-date.
If the
kernel is not up-to-date, it prompts you to proceed.
It compares
the modification dates of the \f2system\f1 files, the object
files in the \f2boot\f1 directory, the modification time of the
boot directory, the configuration files in the \f2master.d\f1
directory and the modification time of the \f2stune\f1 file with that of
the existing kernel.
It also probes for the devices specified with "VECTOR:" lines
in the \f2system\f1 file.
If the devices have been added or removed, or
if the kernel is out-of-date, it builds a new kernel,
adding \f3.install\f1 to the target name.
.TP
.B \-T
Performs the same function as the \f3\-t\fP option,
but does not prompt you to proceed.
.TP
.BI \-O " tags"
Specifies tags to be used to select which tunable parameters
to use as part of the the kernel build.
Multiple \f3\-O\fP options may be given.
.TP
.BI \-L " master"
Specifies the name of the dynamically loadable kernel
module to load into the running kernel.
\f2master\f1 is the name
of a master file in the \f2$ROOT/var/sysgen/master.d\f1 directory.
.TP
.BI \-R " master"
Specifies the name of the dynamically loadable kernel
module to register.
\f2master\f1 is the name of a master file in
the \f2$ROOT/var/sysgen/master.d\f1 directory.
.TP
.BI \-U " id"
Used to unload a dynamically loadable kernel module.
\f2id\f1 is found by using the \f2lboot \-V\fP command.
.TP
.BI \-W " id"
Used to unregister a dynamically loadable kernel
module.
\f2id\f1 is found by using the \f2lboot \-V\fP command.
.TP
.B \-V
Used to list all of the currently registered and
loaded dynamically loadable kernel modules.
.PP
It is best to reconfigure the kernel on a system with the \f2autoconfig\fP
command.
.SH EXAMPLE
.Ex
\f4lboot -s \f2newsystem\f1
.Ee
Reads the file named
.I newsystem
to determine which objects should be configured into the bootable object.
.SH FILES
/var/sysgen/system
.br
/var/sysgen/master.d/*
.br
/var/sysgen/boot/*
.br
/var/sysgen/mtune/*
.br
/var/sysgen/stune
.SH SEE ALSO
autoconfig(1M),
setsym(1M),
systune(1M),
master(4),
mload(4),
mtune(4),
stune(4),
system(4).

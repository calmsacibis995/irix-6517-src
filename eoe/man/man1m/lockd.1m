.\" @(#)lockd.8c	1.2 87/08/23 3.2/4.3NFSSRC
.\" @(#)lockd.8c	1.2 86/12/31 NFSSRC
.\" @(#)lockd.8c 1.1 86/09/25 SMI;
.TH lockd 1M "16 July 1986"
.SH NAME
lockd \- NFS lock daemon
.SH SYNOPSIS
.nf
\f3/usr/etc/rpc.lockd\f1 [ \f3\-g\f1 \f2graceperiod\f1 ] [ \f3\-l\f1 ] [ \c
\f2nservers\f1 ]
.fi
.SH DESCRIPTION
.I lockd
provides the inherently stateful locking
services within the stateless NFS environment.
It
allows the locking of records and files between applications
running on different physical machines sharing the same
filesystems mounted with NFS.
.I nservers
is the number of lockd servers to start.
.LP
Locks are presently advisory only.
The lock style
implemented by
.I lockd
is that specified
in the SVID (see
.IR lockf (3C)
and
.IR fcntl (2)).
There is no interaction between the
.IR lockd 's
locks and
.IR flock (3B)
style locks.
.LP
.I lockd
is started during
system initialization if the
.IR chkconfig (1M)
.B lockd
flag is set on.
Command-line options belong in
.IR /etc/config/lockd.options .
.P
If
.IR nfsd (1M)
is running,
.I lockd
registers its RPC services and exits, leaving
.I nfsd
to handle the requests.
.P
.I lockd
processes lock requests that are either
sent locally by the kernel or remotely by another lock daemon.
In the case of local lock requests for remote data,
.I lockd
forwards the lock requests to the server site's
lock daemon through the
.IR RPC/XDR (3R)
package.
.I lockd
then requests the local status monitor daemon,
.IR statd (1M),
for monitor service of the server.
The reply to the lock request
is not sent to the kernel until
the status daemon and the server site's
lock daemon have replied.
.LP
When a server recovers,
it waits for a grace period for all client site
.IR lockd s
to submit reclaim requests.
Client site
.IR lockd s
are notified by the
.I statd
of the server recovery and promptly resubmit previously
granted lock requests.
If a
.I lockd
fails to secure a previously granted lock at the server site,
it sends
SIGUSR1
to the application process.
The process must explicitly handle this signal if the loss of
a lock should cause it to terminate.
.SH OPTIONS
.TP 17
.BI \-g " graceperiod"
\f2lockd\fP uses \f2graceperiod\fP (seconds) as the grace period duration
instead of the default value (see
.B TUNING
below).
.TP
.B \-l
Set SVID locks for files which are locked by DOS machines
running PC-NFS and compatible file sharing utilities.
Normally, \f2lockd\fP does not set SVID locks for such requests.
.SH TUNING
.I lockd
has four tunable parameters:
.IR lockd_grace_period ,
.IR lock_share_requests ,
.IR nlm_granted_timeout ,
and
.IR nlm_maxdupreqs .
.I lockd_grace_period
controls the starup grace period for the reclaiming of locks.
This was previously controlled by the -g command line option.
.I Lock_share_requests
tells
.I lockd
to preform UNIX file locking for share and unshare requests.
.I Nlm_granted_timeout
controls the timeout used in making NLM_GRANTED and NLMPROC_GRANTED
callbacks for blocked lock requests which have been granted.
This
value is specified in tenths of a second.
.I Nlm_maxdupreqs
controls how many NLM RPC duplicate request cache entries are allocated.
The default setting is 0.
This causes the allocation to be sized based
upon the memory size of the system.
.SH NOTE
The reply to a lock request for remote data
is delayed until all daemons become available.
.LP
In the Sun implementation,
.I lockd
sends
SIGLOST.
when a lock is lost.
The IRIX implementation sends
SIGUSR1.
Programs should establish a signal handler to catch this signal and exit.
.SH "SEE ALSO"
statd(1M),
fcntl(2),
signal(2),
lockf(3C).

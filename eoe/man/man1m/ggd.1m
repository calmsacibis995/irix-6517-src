.\"
.\"	Man page for guarantee granting daemon
.\"
.\"
.TH ggd 1M
.SH NAME
ggd \- rate-guarantee-granting daemon
.SH SYNOPSIS
.nf
\f3ggd\f1 [ \f3-v\f1 dbglevel ] [ \f3\-c\f1 cpunum ] [ \f3\-o iosize ]
.fi
.SH DESCRIPTION
.I ggd
manages the I/O-rate guarantees that have been granted to processes on
the system.
The daemon is started from a script in the
.I /etc/rc2.d
directory.
It reads the
.I /etc/grio_disks
file to obtain information about the available hardware devices.
Processes can make requests for I/O-rate guarantees by using the
.IR grio_action_list (3X),
.IR grio_reserve_file (3X),
or
.IR grio_reserve_fs (3X)
library calls.
After determining if the I/O rate can be guaranteed, the daemon
returns a confirmation or rejection to the calling process.
.PP
The
.I /etc/grio_disks
file is only read when the daemon is started.
If this file is edited, the daemon must be stopped and restarted
in order to use the new information.
.PP
The
.B \-v
option
causes the
.I ggd
daemon to display verbose execution information.
The dbglevel can be set from 0 to 10.
0 indicating no verbose output, and 10 indicating most verbose output.
The
.B \-o
option allows the specification of an optimal iosize other than the
default value of 64K. The iosize is specified as 64, 128, 256 or 512.
The
.B \-c
option causes the daemon to mark the given
.I cpunum
cpu as a real-time cpu.
The cpu is isolated from the rest of the processors on the system
and the
.I ggd
daemon is allowed to only run on this cpu.
See the \f2sysmp\f1(2) reference page for more information on real-time processing.
.SH FILES
.nf
/etc/grio_disks
.fi
.SH SEE ALSO
sysmp(2),
grio_associate_file(3X),
grio_query_fs(3X),
grio_action_list(3X),
grio_reserve_file(3X),
grio_reserve_fs(3X),
grio_unreserve_bw(3X),
grio_disks(4).
.SH NOTES
If the
.I ggd
daemon is killed and restarted, all previous rate guarantees
become invalid.
It creates a lock file, \f2/tmp/grio.lock\f1,
to prevent more than one copy of the daemon from running concurrently.
To make grio more secure, 
.I ggd 
has to be run with the priviledge of CAP_DEVICE_MGMT or as root.

'\"macro stdmacro
.if n .pH g2.mprotect @(#)mprotect	41.3 of 4/10/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
'\" ident	"@(#)svid_rt:rt_os/mprotect	1.2"
.\" @(#)mprotect 1.4 88/09/26 SMI;
'\" macro stdmacro
.\" Sun's mprotect.2
.nr X
.if \nX=0 .ds x} mprotect 2 "" "\&"
.if \nX=1 .ds x} mprotect 2 ""
.if \nX=2 .ds x} mprotect 2 "" "\&"
.if \nX=3 .ds x} mprotect "" "" "\&"
.TH \*(x}
.SH NAME
\f4mprotect\f1 \- set protection of memory mapping
.SH SYNOPSIS
.nf
\f4#include <sys/types.h>\f1
\f4#include <sys/mman.h>\f1
.sp .6v
\f4int mprotect(void \(**addr, size_t len, int prot);\f1
.fi
.SH DESCRIPTION
The function \f4mprotect\f1
changes the access protections on the mappings specified
by the range
[\f2addr, addr + len\f1)
to be that specified by
.IR prot .
Legitimate values for
\f2prot\f1
are the same as those permitted for
\f4mmap\f1 and are defined in
\f4<sys/mman.h>\f1 as:
.PP
.nf
.ft 4
PROT_READ       /* page can be read */
PROT_WRITE      /* page can be written */
PROT_EXEC       /* page can be executed */
PROT_NONE       /* page can not be accessed */
PROT_EXEC_NOFLUSH /* page can be executed - cache not synced */
.ft 1
.fi
.P
Not all implementations literally provide all possible combinations.
\f4PROT_WRITE\f1
is often implemented as
\f4PROT_READ\^|\^PROT_WRITE\f1
and
\f4PROT_EXEC\f1
as
\f4PROT_READ\^|\^PROT_EXEC\f1.
This is true for all SGI implementations.
In particular, MIPS processors do not support a separate execute
permission.
Any page that can be read can be executed from,
even if
\f4PROT_EXEC\f1
is not specified.
As described below,
the operating system uses
\f4PROT_EXEC\f1
as a flag to indicate it may need to perform certain platform
dependent functions that may be
needed to properly execute instructions from the associated
page.
However, no implementation will permit a store to succeed where
\f4PROT_WRITE\f1
has not been set.
.P
Applications such as compiling interpreters that generate code in
their data areas and then wish to execute it, should use \f4mprotect\f1
to add \f4PROT_EXEC\f1 permission to the corresponding pages.
This must be done after the code has been generated, but before it is
executed.
This causes any necessary machine dependent activities, such as cache flushing,
to occur that are required prior
to executing from any part of the
process's address space other than the program or library text segments.
If the generated instructions are altered after the previous call to
\f4mprotect\f1 was made to mark the data as executable,
then \f4mprotect\f1 must be called to again add \f4PROT_EXEC\f1
before the new code is
executed in order to prepare the new contents of the page(s) for proper
execution.
.P
In some cases, it may be better for performance reasons to keep execute
permissions on a page without syncing the instruction and data cache.  In
these cases, specify \f4PROT_EXEC_NOFLUSH\f1 to keep the cache from being
flushed.  However, it is then up to the programmer to call \f4mprotect\f1 with
\f4PROT_EXEC\f1 to sync the cache when instructions in a page change.
.SH RETURN VALUE
On success, \f4mprotect\f1 returns \f40\f1;
on failure, \f4mprotect\f1 returns \f4\-1\f1
and sets \f4errno\f1 to indicate an error.
.SH ERRORS
Under the following conditions, the function \f4mprotect\f1
fails and sets \f4errno\f1 to:
.TP .75i
\f4EACCES\f1
\f2prot\f1
specifies a protection that violates the access permission
the process has to the underlying memory object.
.TP
\f4EAGAIN\f1
\f2prot\f1
specifies
\f4PROT_WRITE\f1
over a
\f4MAP_PRIVATE\f1
mapping and there are insufficient
memory resources to reserve for locking the private page.
.TP
\f4EINVAL\f1
\f2addr\f1
is not a multiple of the page size as returned by
\f4sysconf\f1.
.TP
\f4ENOMEM\f1
The argument
\f2len\f1
has a value less than or equal to \f40\f1.
.TP
\f4ENOMEM\f1
Addresses in the range
[\f2addr, addr + len\f1)
are invalid for the address space of a process,
or specify one or more pages which are not mapped.
.P
When
\f4mprotect\f1
fails for reasons other than
\f4EINVAL\f1,
the protections on some of the pages in the range
[\f2addr, addr + len\f1)
may have been changed.
If the error occurs
on some page at \f2addr2\f1,
then the protections of
all whole pages in the range
[\f2addr, addr2\f1]
will have been modified.
.SH SEE ALSO
mmap(2),
plock(2),
sysconf(3C)

.if n .pH 2/gen/getdents @(#)getdents	40.13 of 6/3/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} getdents 2 "" "" "\&"
.if \nX=1 .ds x} getdents 2 "" ""
.if \nX=2 .ds x} getdents 2 "" "" "\&"
.if \nX=3 .ds x} getdents 2 "" "" "\&"
.TH \*(x}
.SH NAME
.Op c p a
.B getdents, getdents64, ngetdents, ngetdents64
\- read directory entries and put in a file system independent format
.Op
.Op f
.B getdents
\- read directory entries and put in a file system independent format
.Op
.Op c p a
.SH C SYNOPSIS
.B #include <sys/dirent.h>
.sp
.B "int getdents(int fildes, dirent_t \(**buf, unsigned nbyte);"
.sp
.B "int getdents64(int fildes, dirent64_t \(**buf, unsigned nbyte);"
.sp
.B "int ngetdents(int fildes, dirent_t \(**buf, unsigned nbyte, int *eof);"
.sp
.B "int ngetdents64(int fildes, dirent64_t \(**buf, unsigned nbyte, int *eof);"
.Op
.Op f
.SH FORTRAN SYNOPSIS
.B "integer *4 function getdents (fildes, buf, nbyte)"
.br
.B "integer *4 fildes"
.br
.B "character * (*) buf"
.br
.B "integer *4 nbyte"
.Op
.SH DESCRIPTION
.I fildes\^
is a
file descriptor
obtained from a
\f4creat\fP,
\f4open\fP,
\f4dup\fP,
\f4fcntl\fP,
\f4pipe\fP,
or \f4ioctl\fP
system call.
.PP
\f4getdents\fP
attempts to read
.I nbyte\^
bytes from the directory associated with
.I fildes\^
and to format them as file
system independent directory entries
in the buffer pointed to by
.IR buf .
Since the file system independent
directory entries are of variable length,
in most cases
the actual number of bytes returned
will be strictly
less than
.I nbyte\^.
See \f4dirent\fP(4) to calculate the number of bytes.
.PP
The file system independent directory
entry is specified by the
\f4dirent\fP
structure.
For a description of this see
\f4dirent\fP(4).
.PP
\f4getdents\fP
starts at a position in the file given by the file pointer
associated with
.IR fildes .
Upon return from
\f4getdents\fP,
the file pointer is incremented
to point to the next directory entry.
.PP
This system call was developed in order to
implement the 
\f4readdir\fP
routine
[for a description, see
\f4directory\fP(3C)],
and should not be used for other purposes.
.Op c p a
.PP
\f4getdents64\fP is identical to \f4getdents\fP except that
the \f4dirent64_t\fP structure is used instead of the \f4dirent_t\fP
structure.  The \f4dirent64_t\fP structure can return larger values
for some fields.
.PP
\f4ngetdents\fP and \f4ngetdents64\fP are identical to 
\f4getdents\fP and \f4getdents64\fP, respectively, except that the
.I eof\^
argument is present.
The value pointed to by 
.I eof
is set to 1 if end-of-file was encountered
during the current operation, 0 otherwise.
Use of this feature eliminates the necessity to call \f4getdents\fP
one more time (and get 0 returned) after the last data is returned.
.Op
.PP
\f4getdents\fP
will fail if one or more of the following are true:
.TP 15
\f4EBADF\fP
.I fildes\^
is not a valid file descriptor open for reading.
.TP
\f4EFAULT\fP
.I buf\^
points outside the allocated address space.
.TP
\f4EINVAL\fP
.I nbyte\^
is not large enough for one directory entry.
.TP
\f4ENOENT\fP
The current file pointer for the directory
is not located at a valid entry.
.TP
\f4ENOLINK\fP
.I fildes\^
points to a remote machine and the link to that
machine is no longer active.
is located on a remote file system which is not available [see \f4intro\fP(2)].
.TP
\f4ETIMEDOUT\fP
.I fildes\^
refers to a directory
on a remote file system which is not available [see \f4intro\fP(2)].
.TP
\f4ENOTDIR\fP
.I fildes\^
is not a directory.
.TP
\f4EIO\fP
An I/O error occurred while accessing the file system.
.TP
\f4EDIRCORRUPTED\fP
The directory is corrupted in the file system.
.SH "SEE ALSO"
\f4directory\fP(3C),
\f4dirent\fP(4)
.SH "DIAGNOSTICS"
Upon successful completion a non-negative integer is returned
indicating the number of bytes actually read.
A value of 0 indicates the end
of the directory has been reached.
If the system call failed,
a \-1 is returned and
\f4errno\fP
is set to indicate the error.

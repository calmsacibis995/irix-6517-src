'\"macro stdmacro
.if n .pH g2.pause @(#)pause	40.11 of 4/5/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} pause 2 "" "\&"
.if \nX=1 .ds x} pause 2 ""
.if \nX=2 .ds x} pause 2 "" "\&"
.if \nX=3 .ds x} pause "" "" "\&"
.TH \*(x}
.SH NAME
\f4pause\f1 \- suspend process until signal
.Op c p a
.SH C SYNOPSIS
\f4#include <unistd.h>
.PP
\f4int pause(void);
.Op
.Op f
.SH FORTRAN SYNOPSIS
\f4integer \(**4 function pause()\f1
.Op
.SH DESCRIPTION
\f4pause\fP
suspends the calling process until it receives a signal.
The signal must be one that is not currently set to be ignored by the
calling process.
.PP
If the signal causes termination of the calling process,
\f4pause\fP
does not return.
.PP
If the signal is
caught
by the calling process and control is returned from
the signal-catching function [see
\f4signal\fP(2)],
the calling process
resumes execution from the point of suspension;
with a return value of
\-1 from
\f4pause\fP
and
\f4errno\fP
set to
\f4EINTR\fP.
.SH SEE ALSO
\f4alarm\fP(2), \f4kill\fP(2), \f4signal\fP(2), \f4sigpause\fP(2), \f4wait\fP(2)
.\"	@(#)pause.2	6.2 of 9/6/83
.Ee

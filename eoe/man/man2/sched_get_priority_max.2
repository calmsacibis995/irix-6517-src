'\"macro stdmacro
.Op c p a
.TH sched_get_priority_max 2
.SH NAME
\f4sched_get_priority_max\fP, \f4sched_get_priority_min\fP
\- get scheduling policy priority range
.SH C SYNOPSIS
.nf
\f3#include <sched.h>\f1
.sp .6v
\f4int sched_get_priority_max (int \f2policy\fP);\f1
\f4int sched_get_priority_min (int \f2policy\fP);\f1
.fi
.SH DESCRIPTION
\f4sched_get_priority_max\fP and \f4sched_get_priority_min\fP return the
maximum and minimum priority values, respectively, for the specified
scheduling \f2policy\fP:
.IP \f3SCHED_FIFO\f1 8
The first-in-first-out real-time policy
.P
.IP \f3SCHED_RR\f1 8
The round-robin real-time scheduling policy
.P
.IP \f3SCHED_TS\f1 8
The timeshare earnings based scheduling policy
.P
.IP \f3SCHED_OTHER\f1 8
The scheduling policy is equivalent to the SCHED_TS
.P
Unlike IRIX 6.2 and earlier releases, processes having a
higher numerical priority value are more important than processes having
a lower numerical priority value.
.P
\f4Arbitrary priority values within the range should not be used\fP.
Developers must consider the needs of the application and how it should
interact with the rest of the system, before selecting a real-time priority.
To aid in this decision, the priorities of the system threads should be
considered. See the "Real-Time Priority Band" section of \f4realtime\fP(5)
for more detailed information.
.P
\f4sched_get_priority_max\fP and \f4sched_get_priority_min\fP will fail
if the following is true:
.TP 15
[EINVAL]
The \f2policy\fP argument does not represent a valid
scheduling policy.
.SH SEE ALSO
realtime(5),
sched_setparam(2),
sched_getparam(2),
sched_setscheduler(2),
sched_yield(2),
sched_rr_get_interval(2)
.SH DIAGNOSTICS
Upon successful completion, the scheduling priority maximum or minimum
for \f2policy\fP is returned to the calling process.  Otherwise, a
value of -1 is returned and \f4errno\fP is set to indicate the error.

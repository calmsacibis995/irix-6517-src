.TH arsop 2
.SH NAME
arsop \- perform an operation on an array session
.SH SYNOPSIS
.nf
\f3#include <sys/arsess.h>\f1
.sp .8v
\f3int arsop(int func, ash_t ash, void *bufptr, int buflen);\f1
.fi
.SH DESCRIPTION
The \f2arsop\fP function performs an operation on the array session
identified by the handle \f2ash\f1.
If \f2ash\f1 is less than 0, then the operation is performed on the
array session that is associated with the calling process.
.PP
Most array session operations take some sort of argument.
A pointer to the argument is passed as \f2bufptr\f1, and the length
of the argument is specified with \f2buflen\f1.
.PP
The particular operation to be performed is identified by the function
code \f2func\f1, which is defined in \f3<sys/arsess.h>\f1.
Available array session operations include:
.PP
.TP 0.75i
\f4ARSOP_NOP\f1
No operation involving the array session itself will be performed,
but the function will fail if the specified array session does not
exist.
This is a convenient way to determine if an array session is active.
.TP
\f4ARSOP_GETSPI\f1
Obtains the Service Provider Information associated with the array
session and stores it into the buffer pointed to by \f2bufptr\f1.
If the argument buffer is too small to accomodate all of the Service
Provider Information, the data will be truncated.
If the argument buffer is larger than the Service Provider Information
associated with the array session, the data will be padded on
the right with zeroes.
.TP
\f4ARSOP_SETSPI\f1
Sets the Service Provider Information associated with the array
session to the contents of the buffer pointed to by \f2bufptr\f1.
If the argument buffer is too small, the Service Provider Information
will be padded on the right with zeroes.
If the argument buffer is too large, an \f3EINVAL\f1 error will occur.
If \f2bufptr\f1 is \f3NULL\f1, then \f2buflen\f1 is ignored and
the array session will use the
system default service provider information (typically all zeroes,
though it can be changed with \f2arsctl\f1(2)).
The caller must be privileged to use this function.
.TP
\f4ARSOP_GETSPILEN\f1
Returns the number of bytes of storage that have been allocated
for the Service Provider Information
that is associated with the array session.
The value is stored as an \f3int\f1 at the location specified by
\f2bufptr\f1.
This can be used to determine the size of the buffer that is required
for the \f4ARSOP_GETSPI\f1 and \f4ARSOP_SETSPI\f1 functions.
.TP
\f4ARSOP_SETSPILEN\f1
Sets the length of the Service Provider Information associated with
the array session to value of the \f3int\f1 pointed to by \f2bufptr\f1.
An \f3EINVAL\f1 error will occur if the value is negative or
is greater than the system maximum value (typically 1024), and
the current setting will remain unchanged.
If the array session currently has non-default service provider
information associated with it, then that information will either be
truncated or extended with zeroes on the end to accomodate the new
length.
The caller must be privileged to use this function.
.TP
\f4ARSOP_FLUSHACCT\f1
Flushes any accounting data for the array session.
If array session accounting is active (see \f2extacct\f1(5)), then
a record reporting the resource usage information that has been
accumulated by the array session will be written.
As is always the case with array session accounting,
if two or more members of the array
session have different real UID's or GID's, it is unpredictable whose
UID/GID will be included in the array session accounting record.
If a flush operation has already been performed, then the
data reported by a subsequent flush or by the termination of the
array session will only include resources that have been consumed
since the last flush operation.
Array session accounting records that are written using this operation
will be marked as "flushed" to indicate that subsequent records for
the same array session may be forthcoming.
Under normal circumstances, the resource usage for an array session
only includes the resources used by processes that have already
terminated;
the flushed accounting data will not include the resources used by
any members of the array session that are still running.
The caller must be privileged to invoke this function.
.TP
\f4ARSOP_GETINFO\f1
Obtains information about the array session and stores it in the
buffer pointed to by \f2bufptr\f1.
The format of the data is defined by the \f3arsess_t\f1 structure,
which can be found in <sys/arsess.h>.
Note that the data in an \f3arsess_t\f1 is system-dependent and subject to
change without notice from one release of IRIX to another.
.TP
\f4ARSOP_GETCHGD\f1
Obtains information about resources that have already been charged
to the array session in some way.
Typically, this would be done by invoking the ARSOP_FLUSHACCT
function against the array session.
The format of the data is defined by the \f3shacct_t\f1 structure,
which can be found in <sys/extacct.h>, and is stored in the buffer
pointed to by \f2bufptr\f1.
Note that the data in an \f3shacct_t\f1 is system-dependent and subject to
change without notice from one release of IRIX to another.
.TP
\f4ARSOP_RESTRICT_NEW\f1
Restricts any process in the array session from starting a new array
session (for example, using \f2newarraysess\f1(2)).
If a privileged process in such an array session subsequently
decides that it needs to start a new array session, it must first
clear the restriction using the \f4ARSOP_ALLOW_NEW\f1 function.
A process can determine if its array session has been restricted by
using the \f4ARSOP_GETINFO\f1 function.
.TP
\f4ARSOP_ALLOW_NEW\f1
Removes any restrictions against starting new array sessions that may
have been placed on the array session by the \f4ARSOP_RESTRICT_NEW\f1
function.
The caller must be privileged to use this function.
.SH ERRORS
\f2arsop\f1 may fail if one or more of these conditions are true:
.TP 1i
\f4EFAULT\f1
\f2bufptr\f1 is not a valid address
.TP
\f4EINVAL\f1
\f2func\f1 is not a valid function code
.TP
\f4EINVAL\f1
The argument pointed to by \f2bufptr\f1 is not valid
.TP
\f4EPERM\f1
The current process does not have the appropriate privileges to
perform the operation specified by \f2func\f1.
.TP
\f4ESRCH\f1
The array session specified by \f2ash\f1 is not currently active.
.SH SEE ALSO
arsctl(2),
array_sessions(5).
.SH "DIAGNOSTICS"
Upon successful completion, \f2arsop\f1 returns a value of 0.
Otherwise, a value of -1 is returned and \f3errno\f1 is set to
indicate the error.


'\"macro stdmacro
.if n .pH man2.nfssvc @(#)nfssvc	30.3 of 2/1/86
.TH NFSSVC 2
.SH NAME
nfssvc, async_daemon \- NFS daemons
.SH SYNOPSIS
.nf
.ft 3
nfssvc(sock)
int sock;
.LP
.ft 3
async_daemon()
.pp
.ft 3
.\".I  nfssvc  ""  \fLnfssvc\fP
.\".I  "socket operations"  nfssvc  ""  \fLnfssvc\fP
.\".I  "network file system daemons"
.\".I  daemons  "network file system"
.\".I  async_daemon  ""  \fLasync_daemon\fP
.\".I  "socket operations"  async_daemon  ""  \fLasync_daemon\fP
.SH DESCRIPTION
.I Nfssvc
starts an NFS
daemon listening on socket
.IR sock .
The socket must be AF_INET, and SOCK_DGRAM (protocol UDP/IP).
The system call will return only if the process is killed.
.LP
.I Async_daemon
implements the NFS daemon
that handles asynchronous I/O for an NFS client.
The system call never returns.
.SH BUGS
These two system calls allow kernel processes to have user context.
.SH SEE ALSO
mountd(1M)

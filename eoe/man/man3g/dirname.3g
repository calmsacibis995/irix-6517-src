'\"! tbl | mmdoc
'\"macro stdmacro
.if n .pH g3g.dirname @(#)dirname	41.5 of 5/26/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} dirname 3G "Enhanced Programming Library" "\&"
.if \nX=1 .ds x} dirname 3G "Enhanced Programming Library"
.if \nX=2 .ds x} dirname 3G "" "\&"
.if \nX=3 .ds x} dirname "" "" "\&"
.TH \*(x}
.SH NAME
\f4dirname\f1 \- report the parent directory name of a file pathname
.SH SYNOPSIS
.nf
\f4cc\f1 [\f2flag\f1\f4 ...] \f1\f2file\f1\f4 ... \-lgen\f1 \c
[\f2library\f1\f4 ...] \f1
.sp .6v
\f4#include <libgen.h>\f1
.sp .6v
\f4char \(**dirname (char \(**path);\f1
.fi
.SH DESCRIPTION
Given a pointer to a null-terminated character string that contains
a filesystem pathname,
\f4dirname\fP
returns a pointer to a static constant string that is the parent directory of that file.
In doing this, it sometimes
places a null byte in the pathname after the next to last element,
so the content of
.I path
must be disposable.
Trailing ``\f4/\fP'' characters in the path are not counted as part of the path.
.PP
If
.I path
or
.I \(**path
is zero, a pointer to a static constant ``\f4.\fP'' is returned.
.P
\f4dirname\fP
and
\f4basename\fP
together yield a complete pathname.
\f4dirname (\f2path\fP)\f1
is the directory where
\f4basename (\f2path\fP)\f1
is found.
.SH EXAMPLES
A simple filename and the strings ``\f4.\fP'' and ``\f4..\fP'' all have ``\f4.\fP''
as their return value.
.columns 1 8
.TS
;
c c
lf4 lf4 .
Input string	Output pointer
_
/usr/lib	/usr
/usr/	/
usr	\&.
/	/
\&.	\&.
\&..	\&.
.TE
.PP
The following code reads a pathname,
changes directory to the appropriate directory
(see \f4chdir\fP(2)),
and opens the file.
.PP
.ft 4
.ft 1
.nf
char path[100], \(**pathcopy;
int fd;
gets (path);
pathcopy = strdup (path);
chdir (dirname (pathcopy) );
fd = open (basename (path), O_RDONLY);
.fi
.SH "SEE ALSO"
basename(1),
chdir(2),
basename(3G)

'\"!tbl|mmdoc
'\"macro stdmacro
.TH grio_reserve_file 3X
.SH NAME
grio_reserve_file \- request a guaranteed rate I/O reservation on a file
.SH SYNOPSIS
.nf
.B #include <grio.h>
.B int grio_reserve_file( int fd, grio_resv_t *griorp);
.fi
.SH DESCRIPTION
.I grio_reserve_file
tries to obtain the I/O-rate guarantee
specified by the
.I griop
structure on the file associated with 
.IR fd.
.PP
The contents of the structure pointed to by 
.I griop
includes the following members:
.TP
.B gr_start
Start time of the guarantee in seconds since January 1, 1970.
.TP
.B gr_duration
Duration of the guarantee in seconds.
.TP
.B gr_optime
The length of the rate guarantee time quantum in microseconds. 
.TP
.B gr_opsize
The amount of data guaranteed to be read/written within the time quantum.
.TP
.B gr_stream_id
This is the \f3stream identifier\f1 returned by the routine when a 
rate guarantee has been established.
.TP
.B gr_flags
The flags in this field determine the characteristics of the rate guarantee.
The following flags are defined:
.RS
.TP 17
.B PROC_PRIVATE_GUAR
Only the calling process can use the rate guarantee. If cannot be
transferred to other processes.
.TP
.B PROC_SHARE_GUAR
The rate guarantee can be transferred to other processes.
.TP
.B FIXED_ROTOR_GUAR
Obtain a "rotor" type of guarantee and do not allow the rotoration slot
to change once it has been established. (this is also known as a
VOD reservation)
.TP
.B SLIP_ROTOR_GUAR
This is the same type of rate guarantee as \f3FIXED_ROTOR_GUAR\f1 except
that the system will allow the process's rotation slot to change if necessary.
.TP
.B NON_ROTOR_GUAR
Obtain an ordinary type of rate guarantee (non-rotor).
.TP
.B REALTIME_SCHED_GUAR
Use realtime scheduling to satisfiy the rate guarantee. The process will
be suspended if it tries to perform I/O at a rate greater than its guarantee.
If not specified, the default behavior is to allow the process to exceed its
guaranteed rate, if there is available device bandwidth.
.TP
.B NON_SCHED_GUAR
Do not enforce the I/O rate scheduling. It is assumed that the calling
process will regulate the rate at which I/O requests are issued.
.SH DIAGNOSTICS
On success, a zero is returned indicating that a rate guarantee has
been granted and the stream indentifier of the rate guarantee is returned
in the \f3gr_stream_id\f1 field. In order to make use of this reservation,
a \f3grio_associate_file\f1 call has to be made at a future time when the
application needs the reservation to be activated.
If the desired rate cannot be guaranteed a -1 is returned. In case of
success, the system will make every effort to honour the guarantee if
the file is a realtime file on an XFS filesystem.
The
.B errno
variable is set to indicate the error.
The following error codes are defined:
.TP 10
[EIO]
The calling process could not communicate with the \f3ggd\f1 daemon.
.TP 10
[EBADF]
The specified file does not exist or already has a rate guarantee
from this process.
.TP 10
[EIO]
The specified start time is invalid, or there is an invalid set of flags
specified in the \f3gr_flags\f1 field.
.TP 10
[ENOSPC]
The requested bandwidth could not be guaranteed. Upon return the
\f3gr_opsize\f1 and \f3gr_optime\f1 fields describe the
maximum bandwidth left for reservation. The \f3gr_errordev\f1 field
contains the name of the device where the bandwidth was not available.
.TP 10
[ENOENT]
The specified file does not contain any extents. It is empty.
.TP 10
[EPERM]
The process does not have root permissions or CAP_DEVICE_MGMT priviledge.
.TP 10
[EINVAL]
The input fd or griorp is invalid.
.TP 10
[EACCESS]
All the disks in the xlv comprising the file system do not have the same
iosize, or the iosize of one or more disks was invalid.

.SH FILES
.nf
/etc/grio_disks
.fi
.SH SEE ALSO
ggd(1M),
grio_associate_file(3X),
grio_query_fs(3X),
grio_action_list(3X),
grio_reserve_fs(3X),
grio_unreserve_bw(3X),
grio_disk(4),
grio(5)

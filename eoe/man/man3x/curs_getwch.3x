'\"!  tbl | mmdoc
'\"macro stdmacro
.if n .pH g3x.curs_getwch @(#)curs_getwch	41.4 of 5/26/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1990 AT&T
.\" ident	"@(#)svid_ti:ti_lib/curs_getwch 1.0; curs_getch 1.5"
.nr X
.if \nX=0 .ds x} curs_getwch 3X "" "\&"
.if \nX=1 .ds x} curs_getwch 3X ""
.if \nX=2 .ds x} curs_getwch 3X "" "\&"
.if \nX=3 .ds x} curs_getwch "" "" "\&"
.if \nX=9 .ds x} curs_getwch 3X "SVR4 MNLS" "\&"
.TH \*(x}
.SH NAME
\f4curs_getwch\f2: \f4getwch\f1, \f4wgetwch\f1, \f4mvgetwch\f1, \f4mvwgetwch\f1, \f4ungetwch\f1 \- get (or push back) \f4wchar_t\fP characters from \f4curses\fP terminal keyboard
.SH SYNOPSIS
.nf
.ft 4
#include <curses.h>
.sp
int getwch(void);
.sp 0.5
int wgetwch(WINDOW *win);
.sp 0.5
int mvgetwch(int y, int x);
.sp 0.5
int mvwgetwch(WINDOW *win, int y, int x);
.sp .5
int ungetwch(int wch);
.ft 1
.fi
.SH DESCRIPTION
The \f4getwch\f1,
\f4wgetwch\f1,
\f4mvgetwch\f1, and
\f4mvwgetwch\f1 routines
read an \f2EUC\fP character from the terminal associated with the window,
transform it into a \f4wchar_t\fP character, and return a \f4wchar_t\fP
character.
In no-delay mode, if no input is waiting, the value
\f4ERR\fP is returned.
In delay mode,
the program waits until the system passes text through to the program.
Depending on the setting of \f4cbreak\f1,
this is after one character (\f4cbreak\fP mode),
or after the first newline (\f4nocbreak\fP mode).
In half-delay mode, the program waits until a
character is typed or the specified timeout has been reached.
Unless \f4noecho\f1 has been set,
the character will also be echoed into the designated window.
.P
If the window is not a pad, and it has been moved or modified since the
last call to \f4wrefresh\fP, \f4wrefresh\fP will be called before
another character is read.
.P
If
\f4keypad\f1 is \f4TRUE\f1,
and a function key is pressed, the token for that function
key is returned instead of the raw characters.
Possible function keys are defined in
\f4<curses.h>\f1 with integers beginning with
\f40401\fP, whose names begin with
\f4KEY_.\f1
If a character that could be the beginning of a function key
(such as escape) is received, \f4curses\fP sets a timer.
If the remainder of the sequence does not come in
within the designated time, the
character is passed through; otherwise, the function key value is
returned.
For this reason, many terminals experience a delay between the time a
user presses the escape key and the escape is returned to the program.
.ig
X Since tokens returned by these routines are outside
X the ASCII range, they are not printable.
..
.P
The \f4ungetwch\f1 routine places \f2wch\f1
back onto the input queue to be returned by the next call to
\f4wgetwch\f1.
.SS "Function Keys"
The following function keys, defined in \f4<curses.h>\f1,
might be returned by \f4getwch\f1 if \f4keypad\f1
has been enabled.
Note that not all of these may be supported on a particular terminal if the
terminal does not transmit a unique code when the key is pressed or if the
definition for the key is not present in the \f4terminfo\f1 database.
.br
.ne10
.TS H
l8 l
lfCW8 l .
_
Name	Key name
_
.sp 0.4v
.TH
KEY_BREAK	Break key
KEY_DOWN	The four arrow keys ...
KEY_UP
KEY_LEFT
KEY_RIGHT
KEY_HOME	Home key (upward+left arrow)
KEY_BACKSPACE	Backspace
KEY_F0	Function keys; space for 64 keys is reserved.
KEY_F(\f2n\fP)	For 0 \(<=\ \f2n\fP\ \(<= 63
KEY_DL	Delete line
KEY_IL	Insert line
KEY_DC	Delete character
KEY_IC	Insert char or enter insert mode
KEY_EIC	Exit insert char mode
KEY_CLEAR	Clear screen
KEY_EOS	Clear to end of screen
KEY_EOL	Clear to end of line
KEY_SF	Scroll 1 line forward
KEY_SR	Scroll 1 line backward (reverse)
KEY_NPAGE	Next page
KEY_PPAGE	Previous page
KEY_STAB	Set tab
KEY_CTAB	Clear tab
KEY_CATAB	Clear all tabs
KEY_ENTER	Enter or send
KEY_SRESET	Soft (partial) reset
KEY_RESET	Reset or hard reset
KEY_PRINT	Print or copy
KEY_LL	T{
Home down or bottom (lower left).
Keypad is arranged like this:
.ft 4
.nf
     A1    up    A3
    left   B2   right
     C1   down   C3
.fi
.ft
T}
KEY_A1	Upper left of keypad
KEY_A3	Upper right of keypad
KEY_B2	Center of keypad
KEY_C1	Lower left of keypad
KEY_C3	Lower right of keypad
KEY_BTAB	Back tab key
KEY_BEG	Beg(inning) key
KEY_CANCEL	Cancel key
KEY_CLOSE	Close key
KEY_COMMAND	Cmd (command) key
KEY_COPY	Copy key
KEY_CREATE	Create key
KEY_END	End key
KEY_EXIT	Exit key
KEY_FIND	Find key
KEY_HELP	Help key
KEY_MARK	Mark key
KEY_MESSAGE	Message key
KEY_MOVE	Move key
KEY_NEXT	Next object key
KEY_OPEN	Open key
KEY_OPTIONS	Options key
KEY_PREVIOUS	Previous object key
KEY_REDO	Redo key
KEY_REFERENCE	Ref(erence) key
KEY_REFRESH	Refresh key
KEY_REPLACE	Replace key
KEY_RESTART	Restart key
KEY_RESUME	Resume key
KEY_SAVE	Save key
KEY_SBEG	Shifted beginning key
KEY_SCANCEL	Shifted cancel key
KEY_SCOMMAND	Shifted command key
KEY_SCOPY	Shifted copy key
KEY_SCREATE	Shifted create key
KEY_SDC	Shifted delete char key
KEY_SDL	Shifted delete line key
KEY_SELECT	Select key
KEY_SEND	Shifted end key
KEY_SEOL	Shifted clear line key
KEY_SEXIT	Shifted exit key
KEY_SFIND	Shifted find key
KEY_SHELP	Shifted help key
KEY_SHOME	Shifted home key
KEY_SIC	Shifted input key
KEY_SLEFT	Shifted left arrow key
KEY_SMESSAGE	Shifted message key
KEY_SMOVE	Shifted move key
KEY_SNEXT	Shifted next key
KEY_SOPTIONS	Shifted options key
KEY_SPREVIOUS	Shifted prev key
KEY_SPRINT	Shifted print key
KEY_SREDO	Shifted redo key
KEY_SREPLACE	Shifted replace key
KEY_SRIGHT	Shifted right arrow
KEY_SRSUME	Shifted resume key
KEY_SSAVE	Shifted save key
KEY_SSUSPEND	Shifted suspend key
KEY_SUNDO	Shifted undo key
KEY_SUSPEND	Suspend key
KEY_UNDO	Undo key
.TE
.SH RETURN VALUE
All routines return the integer \f4ERR\f1 upon
failure and an integer value other than \f4ERR\f1
upon successful completion.
.SH NOTES
.P
The header file \f4<curses.h>\f1 automatically includes the header files
\f4<stdio.h>\f1 and \f4<unctrl.h>\f1.
.PP
Use of the escape key by a programmer for a single character function is
discouraged.
.P
When using \f4getwch\f1, \f4wgetwch\f1, \f4mvgetwch\f1,
or \f4mvwgetwch\f1, \f4nocbreak\fP mode
and \f4echo\fP mode should
not be used at the same time.
Depending on the state of the tty driver when each character
is typed, the program may produce undesirable results.
.P
Note that \f4getwch\f1, \f4mvgetwch\f1, and \f4mvwgetwch\f1 may
be macros.\f1
.SH SEE ALSO
.na
\f4curses\fP(3X),
\f4curs_inopts\fP(3X),
\f4curs_move\fP(3X),
\f4curs_refresh\fP(3X).
.ad

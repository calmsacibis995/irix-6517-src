'\"macro stdmacro
.if n .pH g3x.curs_scanw @(#)curs_scanw	40.5 of 4/10/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.\" ident	"@(#)svid_ti:ti_lib/curs_scanw	1.3"
.nr X
.if \nX=0 .ds x} curs_scanw 3X "" "\&"
.if \nX=1 .ds x} curs_scanw 3X ""
.if \nX=2 .ds x} curs_scanw 3X "" "\&"
.if \nX=3 .ds x} curs_scanw "" "" "\&"
.TH \*(x}
.SH NAME
\f4curs_scanw\f2: \f4 scanw\f1, \f4wscanw\f1, \f4mvscanw\f1, \f4mvwscanw\f1, \f4vwscanw\f1 \- convert formatted input from a \f4curses\fP widow
.SH SYNOPSIS
.nf
.ft 4
#include <curses.h>
.sp
int scanw(char *fmt \f1[\fP, arg\f1]\fP ...);
.sp 0.5
int wscanw(WINDOW *win, char *fmt \f1[\fP, arg\f1]\fP ...);
.sp 0.5
int mvscanw(int y, int x, char *fmt \f1[\fP, arg\f1]\fP ...);
.sp 0.5
\f4int mvwscanw(WINDOW *win, int y, int x,
	char *fmt \f1[\fP, arg]\fP ...);
.sp 0.5
int vwscanw(WINDOW *win, char *fmt, va_list varglist);
.ft 1
.fi
.SH DESCRIPTION
The \f4scanw\f1, \f4wscanw\f1 and \f4mvscanw\f1
routines correspond to \f4scanf\f1 [see \f4scanf\fP(3S)].
The effect of these routines is as though \f4wgetstr\f1 were called
on the window, and the resulting line used as input for the scan.
Fields which do not map to a variable in the \f2fmt\f1 field are lost.
.P
The \f4vwscanw\f1 routine is similar to \f4vwprintw\f1 in that
it performs a \f4wscanw\f1 using a variable argument list.
The third argument is a \f2va_list\f1, a pointer to a list of arguments,
as defined in \f4<varargs.h>\f1.\f1
.SH RETURN VALUE
\f4vwscanw\fP returns \f4ERR\fP on failure and an integer equal
to the number of fields scanned on success.
.PP
Applications may interrogate the return value from the \f4scanw\f1,
\f4wscanw\f1, \f4mvscanw\f1 and  \f4mvwscanw\f1 routines
to determine the number of fields which were mapped in the call.
.SH NOTES
The header file \f4<curses.h>\f1 automatically includes the header files
\f4<stdio.h>\f1 and \f4<unctrl.h>\f1.
.SH SEE ALSO
.na
\f4curses\fP(3X),
\f4curs_getstr\f1,
\f4curs_printw\f1,
\f4scanf\fP(3S)
.ad

'\"macro stdmacro
.if n .pH g3x.curs_overlay @(#)curs_overlay	40.5 of 4/10/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.\" ident	"@(#)svid_ti:ti_lib/curs_overlay	1.2"
.nr X
.if \nX=0 .ds x} curs_overlay 3X "" "\&"
.if \nX=1 .ds x} curs_overlay 3X ""
.if \nX=2 .ds x} curs_overlay 3X "" "\&"
.if \nX=3 .ds x} curs_overlay "" "" "\&"
.TH \*(x}
.SH NAME
\f4curs_overlay\f2: \f4 overlay\f1, \f4overwrite\f1, \f4copywin\f1 \- overlap and manipulate overlapped \f4curses\fP windows
.SH SYNOPSIS
.nf
.ft 4
#include <curses.h>
.sp
int overlay(WINDOW *srcwin, WINDOW *dstwin);
.sp 0.5
int overwrite(WINDOW *srcwin, WINDOW *dstwin);
.sp 0.5
int copywin(WINDOW *srcwin, WINDOW *dstwin, int sminrow,
	int smincol, int dminrow, int dmincol, int dmaxrow,
	int dmaxcol, int overlay);
.ft 1
.fi
.SH DESCRIPTION
The \f4overlay\f1 and \f4overwrite\f1 routines overlay \f2srcwin\f1
on top of \f2dstwin\f1.
\f2scrwin\f1 and \f2dstwin\f1 are not required to be the same size;
only text where the two windows overlap is copied.
The difference is that \f4overlay\f1 is non-destructive (blanks are
not copied) whereas \f4overwrite\f1 is destructive.
.P
The \f4copywin\f1 routine provides a finer granularity of control over the
\f4\%overlay\f1 and \f4overwrite\f1 routines.
Like in the \f4prefresh\f1
routine, a rectangle is specified in the destination window,
(\f2dminrow\f1, \f2dmincol\f1) and (\f2dmaxrow\f1, \f2dmaxcol\f1),
and the upper-left-corner coordinates of the source window,
(\f2sminrow\f1, \f2smincol\f1).
If the argument \f2overlay\f1 is \f4true\f1, then copying is non-destructive,
as in \f4overlay\f1.
.SH RETURN VALUE
Routines that return an integer return \f4ERR\f1 upon
failure and an integer value other than \f4ERR\f1
upon successful completion.
.SH NOTES
The header file \f4<curses.h>\f1 automatically includes the header files
\f4<stdio.h>\f1 and \f4<unctrl.h>\f1.
.PP
Note that \f4overlay\fP and \f4overwrite\fP may be macros.
.SH SEE ALSO
.na
\f4curses\fP(3X),
\f4curs_pad\fP(3X),
\f4curs_refresh\fP(3X)
.ad

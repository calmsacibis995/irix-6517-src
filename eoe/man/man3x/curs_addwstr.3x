'\"macro stdmacro
.if n .pH g3x.curs_addwstr @(#)curs_addwstr	41.3 of 5/26/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1990 AT&T
.\" ident	"@(#)svid_ti:ti_lib/curs_addwstr 1.0; curs_addstr 1.2"
.nr X
.if \nX=0 .ds x} curs_addwstr 3X "" "\&"
.if \nX=1 .ds x} curs_addwstr 3X ""
.if \nX=2 .ds x} curs_addwstr 3X "" "\&"
.if \nX=3 .ds x} curs_addwstr "" "" "\&"
.if \nX=9 .ds x} curs_addwstr 3X "SVR4 MNLS" "\&"
.TH \*(x}
.SH NAME
\f4curs_addwstr\f2: \f4addwstr\f1, \f4addnwstr\f1, \f4waddwstr\f1, \f4waddnwstr\f1, \f4mvaddwstr\f1, \f4mvaddnwstr\f1, \f4mvwaddwstr\f1, \f4mvwaddnwstr\f1 \- add a string of \f4wchar_t\fP characters to a \f4curses\fP window and advance cursor
.SH SYNOPSIS
.nf
.ft 4
#include <curses.h>
.sp
int addwstr(wchar_t *wstr);
.sp 0.5
int addnwstr(wchar_t *wstr, int n);
.sp 0.5
int waddwstr(WINDOW *win, wchar_t *wstr);
.sp 0.5
int waddnwstr(WINDOW *win, wchar_t *wstr, int n);
.sp 0.5
int mvaddwstr(y, int x, wchar_t *wstr);
.sp 0.5
int mvaddnwstr(y, int x, wchar_t *wstr, int n);
.sp 0.5
int mvwaddwstr(WINDOW *win, int y, int x, wchar_t *wstr);
.sp 0.5
int mvwaddnwstr(WINDOW *win, int y, int x, wchar_t *wstr, int n);
.ft
.fi
.SH DESCRIPTION
All of these routines write all the characters of the
null-terminated \f4wchar_t\fP character string \f2str\f1 on the given window.
The effect is similar to calling
\f4waddwch\f1
once for each \f4wchar_t\fP character in the string.
The four routines with \f2n\f1 as the last
argument write at most \f2n\f1 \f4wchar_t\fP characters.
If \f2n\f1 is negative,
then the entire string will be added.
.SH RETURN VALUE
All routines return the integer \f4ERR\f1 upon
failure and an integer value other than \f4ERR\f1
upon successful completion.
.SH NOTES
.P
The header file \f4<curses.h>\f1 automatically includes the header files
\f4<stdio.h>\f1 and \f4<unctrl.h>\f1.
.PP
Note that all of these routines except \f4waddwstr\f1
and \f4waddnwstr\f1 may be macros.
.SH SEE ALSO
\f4curses\fP(3X),
\f4curs_addwch\fP(3X).

'\"! tbl | mmdoc
'\"macro stdmacro
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.\" Copyright 1990, 1989 AT&T
.TH sem_open 3C
.SH NAME
\f4sem_open\f1 \- open a posix named semaphore
.Op c p a
.SH C SYNOPSIS
\f4#include <semaphore.h>\f1
.sp .6v
\f4sem_t *sem_open (const char *\f2name\fP, int \f2oflag\fP, ... /* mode_t 
\f2mode\fP, int \f2value\fP */);\f1
.fi
.SH DESCRIPTION
\f4sem_open\fP opens a semaphore named by the character string at address
\f2name\fP.

The \f2oflag\fP parameter is used when creating a semaphore, supporting
the following bit flags:
.TP
\f4O_CREAT\f1
If the semaphore already exists, this flag has no effect, except as
noted under \f4O_EXCL\f1 below. Otherwise, the semaphore is created.
The initial value of the semaphore may be specified by \f2value\fP,
where \f2value\fP is any non-negative number less than {SEM_VALUE_MAX}
[see \f4sysconf\fP(3C)].
.P
.in +.5i
Named semaphores are represented by files in the file namespace   
(commands like \f4ls\f1 will display named semaphores as regular files).
Because of this relationship, named semaphores inherit their access
semantics from files.  The owner ID of the semaphore is set to the
effective user IDs of the process, the group ID of the semaphore is set
to the effective group IDs of the process or to the group ID of the directory
in which the semaphore is being created. This is determined as follows:
.sp
.in +.5i
If the underlying filesystem was mounted with the BSD file creation 
semantics flag [see \f4fstab\fP(4)] or the \f4S_ISGID\fP bit is set
[see \f4chmod\fP(2)] on the parent directory, then the group ID of the new
file is set to the group ID of the parent directory, otherwise it is set to
the effective group ID of the calling process.
.sp
If the group ID of the semaphore does not match the effective
group ID, or one of the supplementary groups IDs, the \f4S_ISGID\f1
bit is cleared.  The access permission bits of the file mode are set to
the value of \f2mode\f1, modified as follows:
.IP "" 15n
All bits set in the file mode creation mask of the process are cleared
[see \f4umask\fP(2)].
.IP "" 15n
The ``save text image after execution bit'' of the mode is cleared
[see \f4chmod\fP(2)].
.TP 0.80i
\f4O_EXCL \f1
If \f4O_EXCL\f1 and \f4O_CREAT\f1 are set, \f4sem_open\f1 will fail if the
named semaphore exists. The check for the existence of the semaphore and 
the creation of the name in the file namespace is atomic with respect to
other processes executing \f4sem_open\fP naming the same semaphore 
in the same directory with \f4O_EXCL\fP and \f4O_CREAT\fP set.
.PP
If a named semaphore is opened multiple times by the same process (or threads
within the process) before \f4sem_unlink\fP is called, the same semaphore
descriptor is returned from each call to \f2sem_open\fP.
.P
Named semaphores persist until the semaphore is unlinked and all other
references are dropped [see \f4sem_unlink\fP(2) and \f4sem_close\fP(2)].
.P
If \f2name\fP is a symbolic link and \f4O_CREAT\fP and \f4O_EXCL\fP are set,
the link is not followed.
.P
There is a system enforced limit on the number of open named semaphores per
process \f4{_POSIX_SEM_NSEMS_MAX}\fP.
.P
If the character string pointed to by \f2name\fP
is prefixed with \f4/dev\fP, then unpredictable results may occur.
Devices are opened using the \f4open\fP(2) function. 
.P
POSIX semaphores are compatible across all MIPS ABIs: o32, n32 and 64.
.P
Once a named semaphore is opened, the process may execute the following
semaphore operations: \f4sem_post\fP, \f4sem_wait\fP, \f4sem_trywait\fP,
\f4sem_getvalue\fP, \f4sem_unlink\fP, \f4sem_close\fP.
.P
\f4sem_open\fP will fail if one or more of the following are true:
.TP 15
[EACCES]
The semaphore, named by \f2name\fP, does not exist and write permission
is denied by the parent directory of the semaphore to be created.
.TP
[EACCES]
\f4O_CREAT\fP is specified and write permission is denied.
.TP
[EACCES]
A component of the \f2name\fP prefix denies search permission.
.TP
[EACCES]
\f2oflag\fP permission is denied for an existing semaphore.
.TP
[EAGAIN]
The semaphore exists, \f4O_CREAT\fP is specified, mandatory file/record locking
is set, and there are outstanding record locks on the file 
naming the semaphore [see \f4chmod\fP(2)].
.TP
[EDQUOT]
\f4O_CREAT\fP
is specified, the semaphore does not exist,
and the directory in which the entry for the new semaphore
is being placed cannot be extended either because the
user's quota of disk blocks on the file system
containing the directory has been exhausted or
the user's quota of inodes on the file system on
which the file is being created has been exhausted.
.TP
[EEXIST]
\f4O_CREAT\f1
and
\f4O_EXCL\f1
are set, and the semaphore already exists.
.TP
[EFAULT]
\f2name\fP points outside the allocated address space of the process.
.TP
[EINTR]
A signal was caught during the \f4sem_open\fP system call.
.TP
[EINVAL]
\f2oflags\fP specified \f4O_CREAT\f1 and \f2value\fP was greater than
{SEM_VALUE_MAX}.
.TP
[EISDIR]
The semaphore \f2name\fP points to a directory.
.TP
[ELOOP]
Too many symbolic links were encountered in translating \f2name\f1.
.TP
[EMFILE]
The process has too many open semaphore or file descriptors [see
\f4getrlimit\fP(2)].
.TP
[ENAMETOOLONG]
The length of the \f2name\f1 argument exceeds {\f4PATH_MAX\fP}, or the
length of a \f2name\f1 component exceeds {\f4NAME_MAX\fP} while
{\f4_POSIX_NO_TRUNC\fP} is in effect.
.TP
[ENFILE]
The system file table is full.
.TP
[ENOENT]
\f4O_CREAT\f1
is not set and the semaphore does not exist.
.TP
[ENOENT]
\f4O_CREAT\f1
is set and a component of the \f2name\fP prefix
does not exist or is the null pathname.
.TP
[ENOSPC]
The system resources for semaphore allocation have been depleted.
.TP
[ENOTDIR]
A component of the \f2name\fP prefix is not a directory.
.TP
[ETIMEDOUT]
The semaphore is located on a remote system which is not
available [see \f4intro\fP(2)].
.TP
[EROFS]
The named semaphore resides on a read-only file system,
\f4O_CREAT\f1
is set in \f2oflag\fP, and the semaphore does not exist.
.SH SEE ALSO
sem_getvalue(3C),
sem_post(3C),
sem_wait(3C),
sem_trywait(3C),
sem_open(3C),
sem_close(3C),
sem_unlink(3C),
sysconf(3C)
.SH DIAGNOSTICS
Upon successful completion, the address of the semaphore is returned.
Otherwise, a value of \-1 is returned and \f4errno\fP is set to
indicate the error.

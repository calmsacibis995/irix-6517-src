'\"macro stdmacro
.if n .pH g3c.a64l @(#)a64l	30.3 of 1/18/86
.nr X
.if \nX=0 .ds x} A64L 3C "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} A64L 3C "C Programming Language Utilities"
.if \nX=2 .ds x} A64L 3C "" "\&"
.if \nX=3 .ds x} A64L "" "" "\&"
.TH \*(x}
.SH NAME
a64l, l64a \- convert between long integer and base-64 \s-1ASCII\s0 string
.SH SYNOPSIS
.B "long a64l(char \(**s);
.PP
.B "char \(**l64a(long l);
.SH DESCRIPTION
These functions are used to maintain numbers stored in
.I base-64\^
.SM ASCII
characters.
This is a notation by which
long integers can be represented by up to six characters; each character
represents a ``digit'' in a radix-64 notation.
.PP
The characters used to represent ``digits''
are
.B .
for 0,
.B /
for 1,
.B 0
through
.B 9
for 2\-11,
.B A
through
.B Z
for 12\-37, and
.B a
through
.B z
for 38\-63.
.PP
.I a64l\^
takes a pointer to a null-terminated base-64 representation and returns
a corresponding
.B long
value.
If the string pointed to by
.I s\^
contains more than six characters,
.I a64l\^
will use the first six.
.PP
.I a64l\^
scans the character string from left to right,
decoding each character as a 6 bit Radix 64 number.
.PP
.I l64a\^
takes a
.B long
argument and returns a pointer to the corresponding base-64 representation.
If the argument is 0,
.I l64a\^
returns a pointer to a
null string.
.SH CAVEAT
The value returned by
.I l64a\^
is a pointer into a static buffer, the contents of which are
overwritten by each call.
'\".so /pubs/tools/origin.att
.\"	@(#)a64l.3c	6.2 of 10/20/83
.Ee

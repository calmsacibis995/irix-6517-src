'\"macro stdmacro
.if n .pH g3C.acl_valid
.nr X
.if \nX=0 .ds x} ACL_VALID 3C "POSIX ACL Support" "\&"
.if \nX=1 .ds x} ACL_VALID 3C "POSIX ACL Support"
.if \nX=2 .ds x} ACL_VALID 3C "" "\&"
.if \nX=3 .ds x} ACL_VALID "" "" "\&"
.TH \*(x}
.SH NAME
acl_valid \- validate an ACL
.SH SYNOPSIS
.B #include <sys/acl.h>
.PP
.B int acl_valid( struct acl *aclp);
.SH DESCRIPTION
Check that the format of an ACL is valid.
.PP
First, \f2aclp\fP must be non null.
The three required entries (ACL_USER_OBJ, ACL_GROUP_OBJ, and ACL_OTHER) must
exist exactly once in the ACL.
If the ACL contains any ACL_USER, ACL_GROUP, or any implementation-defined
entries in the file group class, then one ACL_MASK entry is
required. The ACL may contain at most one ACL_MASK entry.
.PP
The qualifier field must be unique among all entries of the same
type.
.SH RETURN VALUES
.I acl_valid
returns 0 if the ACL is valid, -1 otherwise.
.SH ERRORS
.TP 16
EINVAL
ACL is not valid.
.SH SEE ALSO
acl(4).

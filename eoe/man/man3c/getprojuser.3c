.TH getprojuser 3c
.SH NAME
getprojuser, fgetprojuser \- get a user's project IDs
.SH SYNOPSIS
.nf
\f3#include <proj.h>\f1
.sp .8v
\f3int getprojuser(const char *name, projid_t *buf, int len);\f1
.sp .8v
\f3int fgetprojuser(PROJ token, const char *name, \c
projid_t *buf, int len);\f1
.SH DESCRIPTION
The \f2getprojuser\f1 function searches the \f3project\f1 file for the user
\f2name\f1 and stores information about the projects for which
\f2name\f1 is authorized into an array of \f3projid_t\f1 structs.
The array is pointed to by \f2buf\f1 and is assumed to have room for a
maximum of \f2len\f1 entries.
The \f3projid_t\f1 struct is defined in \f3<proj.h>\f1 and has the
following format:
.Ex
#define MAXPROJNAMELEN 32
typedef struct projid {
        char    proj_name[MAXPROJNAMELEN];      /* project name */
        prid_t  proj_id;                        /* project ID */
} projid_t;
.Ee
Note that project names that have more than \f3MAXPROJNAMELEN\f1-1
characters will be truncated.
The \f4proj_name\f1 field is always null-terminated.
.PP
The \f2fgetprojuser\f1 function is a variant of \f2getprojuser\f1
that uses a \f3PROJ\f1 token to make it more efficient for repeated use.
Otherwise its operation is identical.
For more details on creating a \f3PROJ\f1 token, see \f2openproj\f1(3C).
.SH FILES
.TP 15
\f3/etc/projid\f1
System project name to project ID mappings.
.TP
\f3/etc/project\f1
System project authorization file.
.SH "SEE ALSO"
closeproj(3C),
getdfltprojuser(3C),
getprojall(3C),
openproj(3C),
projid(4),
projects(5).
.SH DIAGNOSTICS
\f2getprojuser\f1 and \f2fgetprojuser\f1 both
return the number of \f3projid_t\f1's stored (which may be 0 if the
user was not found or if the user is not authorized for any projects)
or -1 if an error occurred.
.SH BUGS
Both functions use
\f2fopen\f1(3S)
and are thus subject to its limitations.
.PP
Project information should be (optionally) obtained via NIS.

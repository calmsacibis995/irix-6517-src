'\"macro stdmacro
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)getprotoent.3n	6.3 (Berkeley) 5/19/86
.\"
.if n .pH man3.getprotoent @(#)getprotoent	30.3 of 2/1/86
.TH GETPROTOENT 3N
.UC 5
.SH NAME
getprotoent, getprotobynumber, getprotobyname, getprotoent_r, getprotobynumber_r, getprotobyname_r, fgetprotoent, fgetprotoent_r, setprotoent, endprotoent \- get protocol entry 
.SH SYNOPSIS
.nf
.ft 3
.B #include <netdb.h>
.PP
.ft 3
struct protoent \(**getprotoent\|(void);
.PP
.ft 3
struct protoent \(**getprotoent_r\|(struct protoent *entry, char *buffer, int buflen);
.PP
.ft 3
struct protoent \(**getprotobyname\|(const char \(**name);
.PP
.ft 3
struct protoent \(**getprotobyname_r\|(const char *name, struct protoent *entry, char *buffer, int buflen);
.PP
.ft 3
struct protoent \(**getprotobynumber\|(int proto);
.PP
.ft 3
struct protoent \(**getprotobynumber_r\|(int proto, struct protoent *entry, char *buffer, int buflen);
.PP
.ft 3
struct protoent \(**fgetprotoent\|(FILE *f);
.PP
.ft 3
struct protoent \(**fgetprotoent_r\|(FILE *f, struct protoent *entry, char *buffer, int buflen);
.PP
.ft 3
void setprotoent\|(int stayopen);
.PP
.ft 3
void endprotoent\|(void)
.fi
.SH DESCRIPTION
.IR getprotoent ,
.IR getprotobyname ,
and
.I getprotobynumber
each return a pointer to an object with the
following structure
containing the broken-out
fields of a line in the network protocol data base file,
.IR /etc/protocols ,
or the NIS
.I protocols
map.
.RS
.PP
.nf
struct	protoent {
	char	*p_name;	/* official name of protocol */
	char	**p_aliases;	/* alias list */
	int	p_proto;		/* protocol number */
};
.ft 1
.ad
.fi
.RE
.PP
The members of this structure are:
.TP \w'p_aliases'u+2n
p_name
The official name of the protocol.
.TP \w'p_aliases'u+2n
p_aliases
A zero terminated list of alternate names for the protocol.
.TP \w'p_aliases'u+2n
p_proto
The protocol number.
.PP
.I Getprotoent
reads the next line of the file, opening the file if necessary.
.PP
.I Setprotoent
opens and rewinds the file.  If the
.I stayopen
flag is non-zero,
the net data base will not be closed after each call to 
.I getprotobyname
or
.IR getprotobynumber .
.PP
.I Endprotoent
closes the file.
.PP
.I Getprotobyname
and
.I getprotobynumber
sequentially search from the beginning
of the file until a matching
protocol name or
protocol number is found,
or until EOF is encountered.
.PP
The primitives documented in this manual entry first
consult Sun's NIS distributed lookup service, if NIS
is enabled, and then the file
.IR /etc/protocols .
.PP
.I getprotoent_r, getprotobynumber_r
and
.I getprotobyname_r
are reentrant versions of the corresponding function calls.
.PP
.I fgetprotoent
and
.I fgetprotoent_r
will read entries off of the passed file handle.
.SH NOTE
The Mips ABI specifies nothing but local files so applications which
wish to use anything else must compile with libc prior to libnsl in the
library list.  When nsd is running changes to the local protocols file
may not be noticed by getprotoent() until the enumeration cache file
has timed out.
.SH DIAGNOSTICS
All functions that return struct protoent * will return a null (0) pointer in
the case of EOF or failure.  
.SH FILES
/etc/protocols
.SH "SEE ALSO"
ypserv(1M), protocols(4)
.SH DIAGNOSTICS
Null pointer
(0) returned on EOF or error.
'\".so /pubs/tools/origin.bsd
'\".br
'\"NIS version from Sun Microsystems

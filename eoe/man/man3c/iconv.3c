'\"macro stdmacro
.if n .pH g3c.iconv @(#)iconv	41.5 of 5/26/91
.\" Copyright 1991
.\" Copyright 1989, 1990
'\"macro stdmacro
.if n .pH g3.iconv @(#)nls 1.1
.\" Copyright 1991
.nr X
.if \nX=0 .ds x} iconv 3C "" "\&"
.if \nX=1 .ds x} iconv 3C ""
.if \nX=2 .ds x} iconv 3C "" "\&"
.if \nX=3 .ds x} iconv "" "" "\&"
.TH \*(x}
.SH "NAME"
\f4iconv\fP \- code conversion function
.SH "SYNOPSIS"
.br

\f4#include <iconv.h>\fP
.PP
\f4size_t iconv(iconv_t cd, const char \(**\(**inbuf, size_t \(**inbytesleft,
             char \(**\(**outbuf, size_t \(**outbytesleft);\f1
.br
.SH "DESCRIPTION"
.PP
.br
.P


The \f4iconv\fP() converts a string of characters from one codeset,
in a input buffer, into a sequence of corresponding characters in
another codeset in a output buffer.

The \f2cd\fP is a conversion descriptor that was returned by the
preceding \f4iconv_open\fP() function call which specifies the
correct codeset converter.

The \f2inbuf\fP points to a variable that points to the beginning
of the input buffer that has the characters to be converted, and
the variable pointed by \f2inbuf\fP is updated to point to the
byte following the last byte successfully used in the conversion.
If the input buffer ends with an incomplete character or shift
sequence, conversion stops after the previous successfully
converted bytes.
If a sequence of input bytes does not form a valid character in
the codeset, conversion stops after the previous successfully
converted character.

The \f2inbytesleft\fP indicates the number of bytes to the end
of the buffer still to be converted and the value pointed to by
\f2inbytesleft\fP is decremented to reflect the number of bytes
still not converted in the input buffer.

The \f2outbuf\fP points to a variable that points to the first
available byte in the output buffer that contains the converted
characters, and the variable pointed to by \f2outbuf\fP is updated
to point to the byte following the last byte of converted output
characters.
If the output buffer is not large enough to contain all the
converted characters, conversion stops and the character that
causes the overflow is not converted.

The \f2outbytesleft\fP indicates the number of the free bytes to
the end of the buffer and the value pointed to by \f2outbytesleft\fP
is decremented to reflect the number of bytes still available in
the output buffer.
.br
.PP
.P
The \f4iconv\fP() function will fail under the following
conditions and set \f4errno\fP to the suitable value.
.TP
\f4[EINVAL]\f1
.br

Conversion stopped due to an incomplete
character or shift sequence at the end of the
input buffer.
.TP
\f4[EILSEQ]\f1
.br

Conversion stopped due to an input byte
that does not belong to the input codeset.
.TP
\f4[E2BIG]\f1
.br

Conversion stopped because of shortage
of space in the output buffer. The character in
the input buffer that caused the overflow was not
converted.
.TP
\f4[EBADF]\f1
.br

The \f2cd\fP argument does not specify a valid open
conversion descriptor.
.P
.br
.PP

The \f4iconv\fP() function returns a value of 0 if all
of characters in the input buffer is converted, and the
value pointed to by \f2inbytesleft\fP will be 0.
The \f4iconv\fP() returns \f4(size_t)-1\fP if an error
occurs, and the value pointed to by \f2inbytesleft\fP
will be non-zero. In such cases, \f4errno\fP is set to
indicate the condition.

.br
.SH "SEE ALSO"
.PP
.br

\f4iconv_open(3C)\fP , \f4iconv_close(3C)\fP

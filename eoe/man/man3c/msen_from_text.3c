'\"macro stdmacro
.if n .pH g3C.msen_from_text
.nr X
.if \nX=0 .ds x} MSEN_FROM_TEXT 3C "" "\&"
.if \nX=1 .ds x} MSEN_FROM_TEXT 3C "" "\&"
.if \nX=2 .ds x} MSEN_FROM_TEXT 3C "" "\&"
.if \nX=3 .ds x} MSEN_FROM_TEXT "" "" "\&"
.TH \*(x}
.SH NAME
msen_from_text, msen_to_text \- convert a MSEN string from/to msen_t
.SH SYNOPSIS
.B #include <sys/mac.h>
.PP
.B msen_t msen_from_text(const char *argp);
.br
.B char * msen_to_text(msen_t msenp, size_t *len_p);
.SH DESCRIPTION
These routines convert a textual name of a mandatory
sensitvity (MSEN) label from/to a \f2msen_t\fP \(em a pointer
to a structure representing the mandatory sensitivity component
of a MAC label.
.PP
\f2msen_from_text\fP translates a textual description of a MSEN label
into a \f2msen_t\fP and returns the result.  \f2msen_to_text\fP
translates a \f2msen_t\fP into a character string describing the
MSEN label.  Both of these routines allocate storage for the
information returned.  The allocated storage for both can be released
when no longer needed by calling
.IR msen_free (3c).
.PP
The \f2len_p\fP argument to \f2msen_to_text\fP is a pointer to a
\f2size_t\fP that can be used to hold the length of the returned string.
If this argument is not NULL, then the length of the string
is placed in this location on return from \f2msen_to_text.
.SH RETURN VALUES
If successful, \f2msen_from_text\fP returns a \f2msen_t\fP. Upon
failure \f2msen_from_text\fp returns a NULL pointer \(em a value
of ((msen_t)0).
.PP
If successful, \f2msen_to_text\fP returns a pointer to an
allocated null terminated character string containing a
representation of the MSEN label.
If an error occurs, \f2msen_to_text\fP returns a NULL pointer.
.SH ERRORS
.I msen_from_text:
.TP 16
EINVAL
input text is invalid
.TP 16
ENOMEM
could not allocate space for new label
.PP
.I msen_to_text:
.TP 16
EINVAL 
input label is invalid
.TP 16
ENOMEM 
could not allocate space for the return string
.SH "SEE ALSO"
msen_dom(3C), msen_equal(3C), msen_free(3C), msen_from_mac(3C) 

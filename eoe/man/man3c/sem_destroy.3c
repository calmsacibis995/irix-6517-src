'\"macro stdmacro
.Op c p a
.TH sem_destroy 3C
.SH NAME
\f4sem_destroy\f1 \- deinitialize a posix unnamed semaphore
.SH SYNOPSIS
.nf
\f4#include <semaphore.h>\f1
.sp .6v
\f4int sem_destroy(sem_t *\f2sem\fP);\f1
.fi
.SH DESCRIPTION
.P
\f4sem_destroy\f1 deinitializes the unnamed semaphore located at address 
\f2sem\fP.  The address \f2sem\fP may reside anywhere in the calling processes
address space, but the process must have read and write access to \f2sem\fP.
.P
Once an unnamed semaphore has been deinitialized, semaphore operations
performed on it will fail until the semaphore has been reinitialized.
.P
\f4sem_destroy\f1 will fail if one or more of the following are true:
.TP 12
[EINVAL]
The semaphore located at address \f2sem\fP is not a valid posix unnamed
semaphore.
.TP
[EBUSY]
The system has detected processes currently blocked on the semaphore. This
condition may not be detected if a \f4sem_post\fP operation is executed at
the same time as the \f4sem_destroy\fP operation.
.SH SEE ALSO
sem_init(3C),
sem_getvalue(3C),
sem_post(3C),
sem_wait(3C),
sem_trywait(3C),
sem_open(3C),
sem_close(3C),
sem_unlink(3C),
shm_open(3C),
mmap(3C)
.SH DIAGNOSTICS
Upon successful completion, a value of 0 is returned to the calling process. 
Otherwise, a value of -1 is returned and \f4errno\fP is set to indicate
the error.

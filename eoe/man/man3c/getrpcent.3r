'\"macro stdmacro
.if n .pH man3.getrpcent @(#)getrpcent	30.3 of 2/1/86
.TH GETRPCENT 3R
.SH NAME
getrpcent, getrpcent_r, fgetrpcent, fgetrpcent_r, getrpcbyname, getrpcbyname_r, getrpcbynumber, getrpcbynumber_r \- get RPC entry
.SH SYNOPSIS
.nf
.ft 3
#include <netdb.h>
.PP
.ft 3
struct rpcent \(**getrpcent\|(void);
.PP
.ft 3
struct rpcent \(**getrpcent_r\|(struct rpcent *rent, char *buffer, int bufsize);
.PP
.ft 3
struct rpcent \(**fgetrpcent\|(FILE *f);
.PP
.ft 3
struct rpcent \(**getrpcent_r\|(FILE *f, struct rpcent *rent, char *buffer, int bufsize);
.PP
.ft 3
struct rpcent \(**getrpcbyname\|(char *name);
.PP
.ft 3
struct rpcent \(**getrpcbyname_r\|(char *name, struct rpcent *rent, char *buffer, int bufsize);
.PP
.ft 3
struct rpcent \(**getrpcbynumber\|(int number);
.PP
.ft 3
struct rpcent \(**getrpcbynumber_r\|(int number, struct rpcent *rent, char *buffer, int bufsize);
.PP
.ft 3
void setrpcent\|(int stayopen);
.PP
.ft 3
void endrpcent\|(void);
.fi
.SH DESCRIPTION
.IR Getrpcent ,
.IR getrpcbyname ,
.IR getrpcbynumber
and their reentrant counterparts each return a pointer to an object with the
following structure containing the broken-out
fields of a line in the Sun RPC program number data base,
.IR /etc/rpc ,
or some other back-end database.
.\".RS
.PP
.nf
struct	rpcent {
	char	*r_name;	/* name of server for this rpc program */
	char	**r_aliases;	/* alias list */
	long	r_number;	/* rpc program number */
};
.ad
.fi
.\".RE
.PP
The members of this structure are:
.TP \w'r_aliases'u+4n
r_name
The name of the server for this rpc program.
.TP \w'r_aliases'u+4n
r_aliases
A zero terminated list of alternate names for the rpc program.
.TP \w'r_aliases'u+4n
r_number
The rpc program number for this service.
.PP
.I Getrpcent
reads the next line of the file, opening the file if necessary.
.PP
.I Setrpcent
opens and rewinds the file.  If the
.I stayopen
flag is non-zero,
the net data base will not be closed after each call to 
.I getrpcent
(either directly, or indirectly through one of
the other \*(lqgetrpc\*(rq calls).
.PP
.I Endrpcent
closes the file.
.PP
.I Getrpcbyname
and
.I getrpcbynumber
sequentially search from the beginning
of the file until a matching
rpc program name or
program number is found,
or until EOF is encountered.
.PP
The fgetrpcent and fgetrpcent_r routines will return the next line in the
supplied stream broken out into a struct rpcent structure.
.PP
The routines getrpcent, fgetrpcent, getrpcbyname and getrpcbynumber all
return results in static memory which is overwritten on each call.  Reentrant
versions of each of these routines getrpcent_r, fgetrpcent_r, getrpcbyname_r
and getrpcbynumber_r which parse the results into supplied memory.  They
each take three extra arguments, a pointer to a struct rpcent structure,
a pointer to a character buffer, and a length for the buffer.
.SH NOTE
The routines documented in this manual entry only parse files of the format
given in rpc(4).  Data from other sources can be supplied to these routines
as files by the nsd(1M) daemon as specified in the nsd configuration file
.IR /etc/nsswitch.conf .

The Mips ABI specifies nothing but local files so applications which
wish to use anything else must compile with libc prior to libnsl in the
library list.

When nsd is running changes to the local rpc file may not be noticed by
getrpcent() until the enumeration cache file has timed out.
.SH DIAGNOSTICS
All functions that return struct rpcent * will return a null (0) pointer in
the case of EOF or failure.  
.SH FILES
/etc/rpc
/etc/nsswitch.conf
/var/ns/cache/rpc.byname.m
/var/ns/cache/rpc.bynumber.m
.SH "SEE ALSO"
nsd(1M), rpc(4), rpcinfo(1M)
.SH DIAGNOSTICS
.LP
A
.SM NULL
pointer is returned on 
.SM EOF
or error.

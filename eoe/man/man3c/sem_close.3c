'\"macro stdmacro
.Op c p a
.TH sem_close 3C
.SH NAME
\f4sem_close\f1 \- close a posix named semaphore
.SH SYNOPSIS
.nf
\f4#include <semaphore.h>\f1
.sp .6v
\f4int sem_close (sem_t *\f2sem\fP);\f1
.fi
.SH DESCRIPTION
.P
\f4sem_close\f1 closes the connection to the named semaphore located at address 
\f2sem\fP.  The address \f2sem\fP may reside anywhere in the calling processes
address space, but the process must have read and write access to \f2sem\fP.
.P
If multiple threads within a common process (i.e., sprocs, pthreads)
are sharing \f2sem\fP, a single call to \f4sem_close\fP will close the
named semaphore for all threads within the calling process.
.P
Once a named semaphore has been closed, subsequent operations on the
semaphore by the calling process will fail until the semaphore has been reopened.
.P
If the calling process was the last process to close the semaphore, and the
semaphore has been unlinked via \f4sem_unlink\fP, then the named semaphore
will cease to exist.  Otherwise, the semaphore will persist.
.P
\f4sem_close\f1 will fail if the following is true:
.TP 15
[EINVAL]
The semaphore located at address \f2sem\fP is not a valid posix named
semaphore.
.SH SEE ALSO
sem_destroy(3C),
sem_init(3C),
sem_getvalue(3C),
sem_post(3C),
sem_wait(3C),
sem_trywait(3C),
sem_open(3C),
sem_unlink(3C),
shm_open(3C),
mmap(3C)
.SH DIAGNOSTICS
Upon successful completion, a value of 0 is returned to the calling process. 
Otherwise, a value of -1 is returned and \f4errno\fP is set to indicate
the error.

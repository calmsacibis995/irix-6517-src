'\"macro stdmacro
.if n .pH 2/gen/mq_unlink @(#)mq_unlink	43.5 of 8/4/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.\" Copyright 1990, 1989 AT&T
.TH mq_unlink 3c
.SH NAME
\f4mq_unlink\f1 \- remove a message queue
.Op c p a
.SH C SYNOPSIS
\f4#include <mqueue.h>\f1
.PP
\f4int mq_unlink (const char *\f2mq_name\fP);\f1
.Op
.Op
.SH DESCRIPTION
\f4mq_unlink\fP
removes the message queue named by the pathname, \f2mq_name\fP.
If one or more processes has the message queue opened, the queue will
be removed after all the processes close the queue. When all the references
to the queue are gone the space occupied by the queue is released.
After a successful
call to unlink, the queue, \f2mq_name\fP, will not be accessible by
any process that does not already have access to the queue, by a call
to \f4mq_open\fP(3c).
.P
\f4mq_unlink\fP
will fail if one or more of the following conditions are true:
.TP 15
[EACCES]
Permission to remove the queue is denied.
.TP
[EACCES]
A component of path prefix has no search permission or does not exist.
.TP
[EINTR]
A signal interrupted the
\f4mq_unlink\fP
function call.
.TP
[ENOENT]
The named queue does not exist.
.TP
[ENAMETOOLONG]
The length of the \f2mq_name\f1 argument exceeds {\f4PATH_MAX\fP}, or the
length of a \f2mq_name\f1 component exceeds {\f4NAME_MAX\fP} while
{\f4_POSIX_NO_TRUNC\fP} is in effect.
.SH "SEE ALSO"
\f4mq_open\fP(3c),
\f4mq_close\fP(3c),
\f4intro\fP(3c),
\f4mq_receive\fP(3c),
\f4mq_send\fP(3c),
\f4mq_getattr\fP(3c),
\f4mq_setattr\fP(3c),
\f4mq_notify\fP(3c)
.SH "DIAGNOSTICS"
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and \f4errno\fP
is set to indicate the error.

'\"macro stdmacro
.if n .pH g3c.strptime @(#)strptime	1.1 of 11/23/95
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} strptime 3C "C Development Set" "\&"
.if \nX=1 .ds x} strptime 3C "C Development Set"
.if \nX=2 .ds x} strptime 3C "" "\&"
.if \nX=3 .ds x} strptime "" "" "\&"
.TH \*(x}
.SH NAME
\f4strptime\f1 \- date and time conversion
.SH SYNOPSIS
\f4#include <time.h>\f1
.PP
.nf
\f4char *strptime (const char \(**buf, \f4const char \(**format, struct tm \(**tm);\f1
.fi
.SH DESCRIPTION
\f4strptime\fP
converts the character string pointed to by
.I buf
to values which are stored in the
.B tm
structure pointed to by
.I tm,
using the format specified by
.I format.
.PP
The \f2format\f1
string consists of zero or more directives and ordinary characters.
Each directive is composed of one of the following: one or more
white-space characters (as specified by \f2isspace()\f1; an
ordinary character (neither
.I "%"
nor a white-space character);  or a conversion specification. Each 
conversion specification is composed of a \f2%\f1 character followed by a 
conversion character which specifies the replacement required. There
must be white-space or other non-alphanumeric characters
between any two conversion specifications. The following conversion 
specifications are supported:
.TP 10n
.PD 0
\f4%%\^\f1
same as %
.TP
\f4%a\^\f1
is the day of week, using the locale's weekday names; either the 
abbreviated or full name may be specified.
.TP
\f4%A\^\f1
is the same as %a.
.TP
\f4%b\^\f1
is the month, using the locale's month names; either the abbreviated or 
full name may be specified.
.TP
\f4%B\^\f1
is the same as %b.
.TP
\f4%c\^\f1
is replaced by the locale's appropriate date and time representation.
.TP
\f4%C\^\f1
is the century number [0,99]; leading zeros are permitted but not required.
.TP
\f4%d\^\f1
day of month ( 01 - 31 ); leading zeroes are permitted but not required.
.TP
\f4%D\^\f1
date as \f4%m/%d/%y\f1
.TP
\f4%e\^\f1
is the same as %d.
.TP
\f4%h\^\f1
is the same as %b.
.TP
\f4%H\^\f1
is the hour (24-hour clock) ( 00 - 23 ); leading zeroes are permitted but not
required.
.TP
\f4%I\^\f1
hour ( 01 - 12 )
.TP
\f4%j\^\f1
day number of year ( 001 - 366 )
.TP
\f4%m\^\f1
month number ( 01 - 12 )
.TP
\f4%M\^\f1
minute ( 00 - 59 )
.TP
\f4%n\^\f1
is any white space.
.TP
\f4%p\^\f1
locale's equivalent of either AM or PM
.TP
\f4%r\^\f1
time as \f4%I:%M:%S %p\f1 [\f4AM\f1|\f4PM\f1]
.TP
\f4%R\^\f1
time as \f4%H:%M\f1
.TP
\f4%S\^\f1
seconds ( 00 - 61 ), allows for leap seconds
.TP
\f4%t\^\f1
is any white space.
.TP
\f4%T\^\f1
time as \f4%H:%M:%S\f1
.TP
\f4%U\^\f1
week number of year ( 00 - 53 ),
Sunday is the first day of week 1
.TP
\f4%w\^\f1
weekday number ( 0 - 6 ), Sunday = 0
.TP
\f4%W\^\f1
week number of year ( 00 - 53 ),
Monday is the first day of week 1
.TP
\f4%x\^\f1
locale's appropriate date representation
.TP
\f4%X\^\f1
locale's appropriate time representation
.TP
\f4%y\^\f1
year within century ( 00 - 99 )
.TP
\f4%Y\^\f1
year as ccyy ( e.g. 1986)
.PD
.PP
The difference between \f4%U\f1 and \f4%W\f1 lies in which day
is counted as the first of the week.
Week number 01 is
the first week in January starting with a 
Sunday for \f4%U\f1 or a Monday for \f4%W\f1.
Week number 00 contains
those days before the first Sunday or Monday in January for \f4%U\f1 and \f4%W\f1,
respectively.
.PP
.SS Selecting the Output's Language
By default, the output of \f4strptime\fP appears in U.S. English.
The user can request that the output of \f4strptime\fP
be in a specific language by
setting the \f2locale\f1 for \f2category\f1
\f4LC_TIME\fP
in \f4setlocale\fP.
.PP
.SS Timezone 
The timezone is taken from the environment variable
\f4TZ\f1 [see \f4ctime\fP(3C)
for a description of
\f4TZ\f1].
.SH "RETURN VALUE"
Upon successful completion, \f4strptime()\fP returns a pointer to the
character following the last character parsed.  Otherwise, a null pointer is
returned.
.SH FILES
\f4/usr/lib/locale/\f2locale\f4/LC_TIME\f1 \- file
containing locale-specific date and
time information
.SH "SEE ALSO"
\f4time(2)\fP, \f4ctime\fP(3C),
\f4strftime\fP(3C), \f4getenv\fP(3C), \f4setlocale\fP(3C),
\f4timezone\fP(4), \f4environ\fP(5).
.\"	@(#)strptime.3c	
.Ee

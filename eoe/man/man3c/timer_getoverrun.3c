'\"macro stdmacro
.Op c p a
.TH timer_getoverrun 3C
.SH NAME
\f4timer_getoverrun\f1 \- get the posix timer overrun count
.SH SYNOPSIS
.nf
\f4#include <time.h>\f1
.sp .6v
\f4int timer_getoverrun (timer_t \f2timerid\fP);\f1
.fi
.SH DESCRIPTION
.P
\f4timer_getoverrun\f1 returns the current expiration notification
overrun count for the posix timer named by \f2timerid\fP.
.P
An overrun count is the number of timer expiration notifications which
were not delivered to the process due to an already pending signal from
\f2timerid\fP.  This overrun condition may occur because a given posix
timer can only queue one signal to the process at any point in time. 
.P
If the returned overrun count is positive, then the count represents the
number of timer overruns up to, but not including {\f4DELAYTIMER_MAX\fP}
[see \f4sysconf\fP(3C)].
.P
If the returned overrun count is zero, then no timer expiration overruns
have occurred between the last expiration notification and the time of
the call to \f4timer_getoverrun\f1.
.P
\f4timer_getoverrun\f1 will fail if the following is true:
.TP 12
[EINVAL]
The \f2timerid\fP does not name a valid posix timer.
.SH SEE ALSO
timer_create(3C),
timer_delete(3C),
timer_gettime(3C),
timer_settime(3C),
sysconf(3C)
.SH DIAGNOSTICS
Upon successful completion, the timer overrun count is returned to the calling
process. Otherwise, a value of -1 is returned and \f4errno\fP is set to indicate
the error.

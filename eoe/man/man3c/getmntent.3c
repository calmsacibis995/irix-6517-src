'\"macro stdmacro
.if n .pH man3.getmntent @(#)getmntent	30.3 of 2/1/86
.TH GETMNTENT 3
.SH NAME
setmntent, getmntent, addmntent, getmntany, endmntent, hasmntopt \- get file system descriptor file entry
.SH SYNOPSIS
.B "#include <stdio.h>
.br
.B "#include <mntent.h>
.PP
.B "FILE \(**setmntent\|(char \(**filep, char \(**type);
.PP
.B "struct mntent \(**getmntent\|(FILE \(**filep);
.PP
.B "int addmntent\|(FILE \(**filep, struct mntent \(**mnt);
.PP
.B "int getmntany (FILE \(**filep, struct mntent \(**mp, struct mntent \(**mpref);
.PP
.B "char \(**hasmntopt\|(struct mntent \(**mnt, char \(**opt);
.PP
.B "int endmntent\|(FILE \(**filep);
.IX  "setmntent function"  ""  "\fLsetmntent\fP \(em get filesystem descriptor file entry"
.IX  "getmntent function"  ""  "\fLgetmntent\fP \(em get filesystem descriptor file entry"
.IX  "addmntent function"  ""  "\fLaddmntent\fP \(em get filesystem descriptor file entry"
.IX  "getmntany function"  ""  "\fLgetmntany\fP \(em get filesystem descriptor file entry"
.IX  "endmntent function"  ""  "\fLendmntent\fP \(em get filesystem descriptor file entry"
.IX  "hasmntopt function"  ""  "\fLhasmntopt\fP \(em get filesystem descriptor file entry"
.IX  "get filesystem descriptor file entry"  "setmntent"  ""  "\fLsetmntent\fP"
.IX  "get filesystem descriptor file entry"  "getmntent"  ""  "\fLgetmntent\fP"
.IX  "get filesystem descriptor file entry"  "addmntent"  ""  "\fLaddmntent\fP"
.IX  "get filesystem descriptor file entry"  "getmntany"  ""  "\fLgetmntany\fP"
.IX  "get filesystem descriptor file entry"  "endmntent"  ""  "\fLendmntent\fP"
.IX  "get filesystem descriptor file entry"  "hasmntopt"  ""  "\fLhasmntopt\fP"
.IX  "filesystem descriptor"  "get file entry"
.SH DESCRIPTION
These routines replace the
.I getfsent
routines for accessing the file system description file
.IR /etc/fstab .
They are also used to access the mounted file system description file
.IR /etc/mtab .
.PP
.I Setmntent
opens a file system description file and returns
a file pointer which can then be used with
.IR getmntent ,
.IR addmntent ,
.IR getmntany ,
or
.IR endmntent .
The 
.I type
argument is the same as in
.IR fopen (3S).
.PP
.I Getmntent
reads the next line from
.I filep
and returns a pointer to an object with the following structure
containing the broken-out fields of a line in the filesystem description file,
.IR <mntent.h> .
The fields have meanings described in
.IR fstab (4).
.PP
.Ex 8
struct mntent {
	char	*mnt_fsname;	/* file system name */
	char	*mnt_dir;	/* file system path prefix */
	char	*mnt_type;	/* dbg, efs, nfs */
	char	*mnt_opts;	/* ro, hide, etc. */
	int	mnt_freq;	/* dump frequency, in days */
	int	mnt_passno;	/* pass number on parallel fsck */
};
.Ee
.PP
.I Addmntent
adds the
.I mntent
structure
.I mnt
to the end of the open file
.IR filep .
Note that
.I filep
has to be opened for writing if this is to work.
.I Addmntent
returns 0 if successful, otherwise it returns 1.
.PP
.I Getmntany
searches the file referenced by
.I fp
until a match is found between a line in the file and
.IR mpref .
.I Mpref
matches the line if all
non-null
entries in
.I mpref
match the corresponding fields in the file.  Note that option string matching
is performed by matching the entire option string, not by matching indivudual
option substrings.  If a match is found, the matching entry is copied to the
area pointed by by
.IR mp ,
and
.I getmntany
returns 0.  Otherwise, -1 is returned.
.PP
.I Hasmntopt
scans the
.I mnt_opts
field of the
.I mntent
structure
.I mnt
for a substring that matches
.IR opt .
It returns the address of the substring if a match is found,
0 otherwise.
.PP
.I Endmntent
closes the file and always returns 1.
.SH FILES
/etc/fstab
.br
/etc/mtab
.SH "SEE ALSO"
delmntent(3),
fstab(4) 
.SH BUGS
The returned
.I mntent
structure points to static information that is overwritten in each call.

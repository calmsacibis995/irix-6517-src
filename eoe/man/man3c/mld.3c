'\"macro stdmacro
.TH mld 3
.SH NAME
mld_create, mld_destroy, process_mldlink, process_cpulink, numa_acreate \- 
memory locality domain operations
.SH SYNOPSIS
.nf
.B "#include <sys/types.h>"
.B "#include <sys/pmo.h>"
.PP
.B "pmo_handle_t mld_create(int radius, long size)"
.PP
.B "int mld_destroy(pmo_handle_t mld_handle)"
.PP
\fB
int process_mldlink(pid_t pid, pmo_handle_t mld_handle, rqmode_t rqmode)

int process_cpulink(pid_t pid, pmo_handle_t mld_handle, cpuid_t lcpuid,
                    rqmode_t rqmode)

void* numa_acreate(pmo_handle_t mld, size_t arena_size, size_t page_size)
\fP
.fi
.SH DESCRIPTION
\f4mld_create\fP creates a memory locality domain.
.PP
\f4mld_destroy\fP destroys a memory locality domain.
.PP
\f4process_mldlink\fP attaches a process to an MLD. When a process is attached
to an MLD, the process scheduler tries to activate the process on a CPU in the
node where the MLD has been placed.
.PP
\f4process_cpulink\fP attaches a process to a specific processor within an MLD.
This operation forces a process to always run on the same processor using
`mustrun' (see sysmp(2)).
.PP
\f4numa_acreate\fP creates an arena for memory allocation on a specific MLD.
.PP
\f4mld_create\fP
will fail and a MLD will not be created if one or more of the following are
true:
.TP 15
\f4EFAULT\fP
Arguments could not be copied into kernel space.
.TP 15
\f4ENOMEM\fP
No memory or kernel table space is available to create and hold the MLD.
.TP 15
\f4ENOTSUP\fP
Memory locality domains are not supported on this system architecture.
.PP
\f4mld_destroy\fP
will fail and no MLD will be destroyed if one or more of the following are
true:
.TP 15
\f4EINVAL\fP
The \f4mld_handle\fP is invalid.
.TP 15
\f4ENOTSUP\fP
Memory locality domains are not supported on this system architecture.
.PP
\f4process_mldlink\fP
will fail and the process will not be attached to an MLD if one ore more of
the following are true:
.TP 15
\f4EDEADLK\fP
The operation would cause a deadlock to occur.
.TP 15
\f4EINVAL\fP
The \f4mld_handle\fP is invalid or does not exist.
.TP 15
\f4ENOTSUP\fP
Memory locality domains are not supported on this system architecture.
.TP 15
\f4ESRCH\fP
The specified \f4pid\fP does not exist.
.TP 15
\f4EXDEV\fP
The MLD has not been placed. (Call \f4mldset_place(3c)\fP first.)
.PP
\f4process_cpulink\fP
will fail and the process will not be attached to an MLD if one or more of
the following are true:
.TP 15
\f4EDEADLK\fP
The operation would cause a deadlock to occur.
.TP 15
\f4EINVAL\fP
The specified mld_handle is invalid or does not exist.
.TP 15
\f4EINVAL\fP
The MLD is placed on a CPU which is not present.
.TP 15
\f4EINVAL\fP
The process could not be made to run on a CPU in the MLD.
.TP 15
\f4ENOTSUP\fP
Memory locality domains are not supported on this system architecture.
.TP 15
\f4ESRCH\fP
The specified \f4pid\fP does not exist.
.TP 15
\f4EXDEV\fP
The MLD has not been placed. (Call \f4mldset_place(3c)\fP first.)
.PP
\f4numa_acreate\fP
will fail and no memory arena will be created (and set \f4errno\fP) under the
same circumstances that \f4acreate(2)\fP will fail. It will also fail and no
memory arena will be created if one or more of the following are true:
.TP 15
\f4EFAULT\fP
Arguments could not be copied into kernel space.
.TP 15
\f4EINVAL\fP
The specified MLD is invalid.
.TP 15
\f4ENOTSUP\fP
Memory locality domains are not supported on this system architecture.
.TP 15
\f4ESRCH\fP
The specified MLD does not exist.
.PP
.SH SEE ALSO
acreate(2), numa(5), mmci(5), mldset(3c), pm(3c), amalloc(3p), sysmp(2),
migration(3c), pminfo(3c).
.SH "DIAGNOSTICS"
Upon successful completion, \f4mld_create\fP returns a value of type
pmo_handle_t.  Otherwise, a value of \-1 is returned and
.I errno\^
is set to indicate the error.

Upon successful completion, \f4mld_destroy\fP, \f4process_mldlink\fP, and
\f4process_cpulink\fP return 0.  Otherwise, a value of \-1 is returned and
.I errno\^
is set to indicate the error.

Upon successful completion, \f4numa_acreate\fP returns a pointer to the
memory arena which has been created.  Otherwise NULL will be returned and
.I errno\^
is set to indicate the error.

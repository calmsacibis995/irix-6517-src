'\"macro stdmacro
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)getnetent.3n	6.3 (Berkeley) 5/19/86
.\"
.if n .pH man3.getnetent @(#)getnetent	30.3 of 2/1/86
.TH GETNETENT 3N
.UC 5
.SH NAME
getnetent, getnetent_r, fgetnetent, fgetnetent_r, getnetbyaddr, getnetbyaddr_r, getnetbyname, getnetbyname_r, setnetent, endnetent \- get network entry
.SH SYNOPSIS
.nf
.ft 3
#include <netdb.h>
.PP
.ft 3
struct netent \(**getnetent\|(void);
.PP
.ft 3
struct netent \(**getnetent_r\|(struct netent *nent, char *buffer, int bufsize);
.PP
.ft 3
struct netent \(**fgetnetent\|(FILE *);
.PP
.ft 3
struct netent \(**fgetnetent_r\|(FILE *, struct netent *nent, char *buffer, int bufsize);
.PP
.ft 3
struct netent \(**getnetbyname\|(const char \(**name);
.PP
.ft 3
struct netent \(**getnetbyname_r\|(const char \(**name, struct netent *nent, char *buffer, int bufsize);
.PP
.ft 3
struct netent \(**getnetbyaddr\|(long net, int type);
.PP
.ft 3
struct netent \(**getnetbyaddr_r\|(long net, int type, struct netent *nent, char *buffer, int bufsize);
.PP
.ft 3
void setnetent\|(int stayopen);
.PP
.ft 3
void endnetent\|(void);
.fi
.SH DESCRIPTION
.IR Getnetent ,
.IR fgetnetent ,
.IR getnetbyname ,
.IR getnetbyaddr
and each of their reentrant counterparts
each return a pointer to an object with the
following structure containing the broken-out
fields of a line in the network data base file,
.IR /etc/networks ,
or some other back-end networks database.
.RS
.PP
.nf
struct	netent {
	char		*n_name;	/* official name of net */
	char		**n_aliases;	/* alias list */
	int		n_addrtype;	/* net number type */
	unsigned long	n_net;		/* net number */
};
.ft 1
.ad
.fi
.RE
.PP
The members of this structure are:
.TP \w'n_addrtype'u+2n
n_name
The official name of the network.
.TP \w'n_addrtype'u+2n
n_aliases
A zero terminated list of alternate names for the network.
.TP \w'n_addrtype'u+2n
n_addrtype
The type of the network number returned; currently only AF_INET.
.TP \w'n_addrtype'u+2n
n_net
The network number.  Network numbers are returned in machine byte
order.
.PP
.I Getnetent
reads the next line of the file, opening the file if necessary.
.PP
.I Setnetent
opens and rewinds the file.  If the
.I stayopen
flag is non-zero,
the net data base will not be closed after each call to 
.I getnetbyname
or
.IR getnetbyaddr .
.PP
.I Endnetent
closes the file.
.PP
.I Getnetbyname
and
.I getnetbyaddr
sequentially search from the beginning
of the file until a matching
net name or
net address and type is found,
or until EOF is encountered.
Network numbers are supplied in host order.
.PP
The routines fgetnetent and fgetnetent_r will return the next line in the
supplied file parsed into a struct netent structure.  The file must be in
the same format as the
.IR /etc/networks
file.
.PP
The routines getnetent, fgetnetent, getnetbyaddr, and getnetbyname all
return pointers into static space which is modified on each call.  Reentrant
versions of each routine getnetent_r, fgetnetent_r, getnetbyaddr_r and
getnetbyname_r.  These routines parse the result into supplied space.
They each take a pointer to a netent structure, a pointer to some buffer,
and a length for the buffer.
.PP
The routines documented in this file only parse files of the format given
in networks(4).  These can be static files on the system such as the
.IR /etc/networks
file, or files supplied dynamically by the nsd(1M) daemon from some other
backend database such as NIS.
.SH NOTE
The Mips ABI specifies nothing but local files so applications which
wish to use anything else must compile with libc prior to libnsl in the
library list.

When nsd is running changes in the local networks file may not be
noticed by getnetent() until the enumeration cache file has timed out.
.SH DIAGNOSTICS
All functions that return struct netent * will return a null (0) pointer in
the case of EOF or failure.  
.SH FILES
/etc/networks
/var/ns/cache/networks.byname.m
/var/ns/cache/networks.byaddr.m
.SH "SEE ALSO"
nsd(1M), networks(4)
.SH DIAGNOSTICS
Null pointer
(0) returned on EOF or error.
.SH BUGS
Only Internet network
numbers are currently understood.
.PP
Expecting network numbers to fit
in no more than 32 bits is probably
naive.

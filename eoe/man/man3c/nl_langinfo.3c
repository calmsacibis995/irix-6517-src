'\"macro stdmacro
.if n .pH g3c.nl_langinfo @(#)nl_langinfo	41.5 of 5/26/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
'\"macro stdmacro
.if n .pH g3.nl_langinfo @(#)nls 1.1
.\" Copyright 1991 UNIX System Laboratories, Inc.
.nr X
.if \nX=0 .ds x} nl_langinfo 3C "" "\&"
.if \nX=1 .ds x} nl_langinfo 3C ""
.if \nX=2 .ds x} nl_langinfo 3C "" "\&"
.if \nX=3 .ds x} nl_langinfo "" "" "\&"
.TH \*(x}
.SH "NAME"
\f4nl_langinfo\fP \- language information
.SH "SYNOPSIS"
\f4#include <nl_types.h>
.br
\f4#include <langinfo.h>
.PP
\f4char \(**nl_langinfo (nl_item item);\f1
.br
.SH "DESCRIPTION"
\f4nl_langinfo\fP
returns a pointer to a null-terminated string
containing information relevant to a particular
language or cultural area defined in the program's locale.
The manifest constant names and values of 
\f2item\fP
are defined by
\f4langinfo.h\fP.
.PP
For example:
.PP
	\f4nl_langinfo (ABDAY_1);\fP
.PP
would return a pointer to the string ``\f4Dim\fP'' if the identified
language was French and a French locale was correctly installed; or
``\f4Sun\fP'' if the identified language was English.
.PP
Another example follows which shows the mechanism to change a locale's
messages related to the following \f2items\f1 given in \f4nl_types\f1(5):
\f4T_FMT\f1, \f4D_FMT\f1, \f4D_T_FMT\f1, \f4YESSTR\f1, \f4NOSTR\f1. These
items are treated specially within \f4nl_langinfo\f1().  The items
\f4T_FMT\f1, \f4D_FMT\f1, \f4D_T_FMT\f1, \f4YESSTR\f1, and \f4NOSTR\f1 are
retrieved from a special message catalog named \f4Xopen_info\f1 which
should be generated for each locale supported and installed in the 
appropriate directory.  All of the following steps should be done as userid
\f2root\f1.
.PP
.in+0.5i
Create the file: \f2/tmp/Xopen_info.src\f1 containing 
the following five lines corresponding to the items: \f4T_FMT\f1, \f4D_FMT\f1,
\f4D_T_FMT\f1, \f4YESSTR\f1, and \f4NOSTR\f1, respectively:
.sp
.in+0.5i
%H:%M:%S
.br
%m/%d/%y
.br
%a %b %e %H:%M:%S %Y
.br
yes
.br
no
.in-0.5i
.sp
Execute the following command in order to create the new message catalog file:
\f4/usr/lib/locale/C/LC_MESSAGES/Xopen_info\f1:
.sp
.in+0.5i
mkmsgs -i C /tmp/Xopen_info.src Xopen_info
.in-0.5i
.sp
Execute the following command in order to create the new message catalog file:
\f4/usr/lib/locale/VSX4L0/LC_MESSAGES/Xopen_info\f1:
.sp
.in+0.5i
mkmsgs -i VSX4L0 /tmp/Xopen_info.src Xopen_info
.in-0.5i
.sp
.in-0.5i
.PP
.SH "SEE ALSO"
\f4gettxt\fP(3C),
\f4localeconv\fP(3C),
\f4setlocale\fP(3C),
\f4strftime\fP(3C),
\f4langinfo\fP(5),
\f4nl_types\fP(5).
.SH DIAGNOSTICS
If
\f4setlocale\fP
has not been called successfully, or if 
\f4langinfo\fP 
data for a supported language is either not available or
\f2item\fP
is not defined therein, then
\f4nl_langinfo\fP
returns a pointer to the corresponding string in the C locale.
In all locales, 
\f4nl_langinfo\fP
returns a pointer to an empty string
if \f2item\fP contains an invalid setting.
.SH NOTES
The array pointed to by the return value should not be modified by the program.
Subsequent calls to 
\f4nl_langinfo\fP
may overwrite the array.
.P
The 
\f4nl_langinfo\fP
function is built on the functions
\f4localeconv\fP, \f4strftime\fP,
and
\f4gettxt\fP [see \f4langinfo\fP(5)].
Where possible users are advised to use these interfaces to the required
data instead of using
calls to
\f4nl_langinfo\fP.
.Ee

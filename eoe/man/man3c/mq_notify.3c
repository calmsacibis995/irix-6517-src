'\"macro stdmacro
.if n .pH 2/gen/mq_notify @(#)mq_notify	43.5 of 8/4/92
.\" Copyright 1992, 1991 UNIX System Laboratories, Inc.
.\" Copyright 1990, 1989 AT&T
.TH mq_notify 3c
.SH NAME
\f4mq_notify\f1 \- register message notification request
.Op c p a
.SH C SYNOPSIS
\f4#include <mqueue.h>\f1
.PP
\f4int mq_notify (mqd_t \f2mqd\fP, const struct sigevent *\f2notification\fP);\f1
.Op
.Op
.SH DESCRIPTION
\f4mq_notify\fP registers a message \f2notification\fP request with the message
queue named by \f2mqd\fP. A message notification is an asynchronous event which
informs a process of a message that has arrived on a previously empty queue.
A message queue transition from empty to non-empty will result in a
\f2notification\fP delivery to the process that registered the request.
.P
There can be only one message notification registered with a queue at
any given time.
.P
If the \f2sigev_notify\fP member of \f2notification\fP is SIGEV_THREAD then
the function \f2sigev_notify_function\f1 will be called
by a new thread (see pthreads(5))
with \f2sigev_value\fP as the argument.
This thread is created when the event arrives with the attributes
specified in \f2sigev_notify_attributes\fP except that
it is automatically detached.
The calling process should ensure there are sufficient resources to
create the thread.
.P
If the \f2notification\fP argument is \f4NULL\fP and the calling process
already has a pending notification request, then the pending request will
be cleared. The message queue will then be available for notification
registration.
.P
Once a message notification is delivered to a process, or the requesting
process exits before receiving the notification, then the request is cleared.
The message queue will then be available for notification registration.
.P
If a message arrives at an empty queue, and a process is blocked in
\f4mq_receive\fP waiting for a message, then the waiting process will
receive the message.  In this case, the notification request registered
with the queue will have no effect.
.P
\f4mq_notify\fP
will fail if one or more of the following conditions are true:
.TP 15
[EBADF]
The message queue descriptor, \f2mqd\fP, is not valid.
.TP
[EBUSY]
A notification request is already registered with the queue.
.TP
[EINTR]
A signal interrupted the \f4mq_notify\fP function call.
.TP
[EAGAIN]
Insufficient memory to implement the SIGEV_THREAD service for
\f2notification\fP.
.SH "SEE ALSO"
\f4mq_open\fP(3c),
\f4intro\fP(3c),
\f4mq_unlink\fP(3c),
\f4mq_receive\fP(3c),
\f4mq_send\fP(3c),
\f4mq_getattr\fP(3c)
.SH "DIAGNOSTICS"
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and \f4errno\fP
is set to indicate the error.

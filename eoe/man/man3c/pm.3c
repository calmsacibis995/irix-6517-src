'\"macro stdmacro
.TH pm 3
.SH NAME
pm_create, pm_create_simple, pm_filldefault, pm_destroy, 
pm_attach, pm_setdefault, pm_getdefault, pm_getall, 
pm_getstat, pm_setpagesize \- Policy Module operations
.SH SYNOPSIS
.nf
.B "#include <sys/types.h>"
.B "#include <sys/pmo.h>"
.PP
.B "pmo_handle_t pm_create(policy_set_t* policy_set)"
.PP
\fB
pmo_handle_t
pm_create_simple(char* plac_name,
                 void* plac_args,
                 char* repl_name,
                 void* repl_args,
                 size_t page_size)
\fP
.PP
.B void pm_filldefault(policy_set_t* policy_set)
.PP
.B int pm_destroy(pmo_handle_t pm_handle)
.PP
.B int pm_attach(pmo_handle_t pm_handle, void* base_addr, size_t length)
.PP
.B pmo_handle_t pm_setdefault(pmo_handle_t pm_handle, mem_type_t mem_type)
.PP
.B pmo_handle_t pm_getdefault(mem_type_t mem_type)
.PP
.B int pm_getall(void* base_addr, size_t length, pmo_handle_list_t* pmo_handle_list)
.PP
.B int pm_getstat(pmo_handle_t pm_handle, pm_stat_t* pm_stat)
.PP
.B int pm_setpagesize(pmo_handle_t pm_handle, size_t page_size)
.PP
.fi
.SH DESCRIPTION
\f4pm_create\fP creates a policy module.
.PP
\f4pm_create_simple\fP creates a policy module with some predefined defaults.
.PP
\f4pm_filldefault\fP fills a policy_set with predefined default values.
.PP
\f4pm_destroy\fP destroys a policy module.
.PP
\f4pm_attach\fP connects a policy module to a virtual address space range.
.PP
\f4pm_setdefault\fP sets the default policy modules for a process' address
space.
.PP
\f4pm_getdefault\fP retrieves the current default policy modules associated
with a process' address space.
.PP
\f4pm_getall\fP retrieves all the policy modules associated with an address
space range.
.PP
\f4pm_getstat\fP retrieves the current state of a policy module (policies and
parameters for a specific policy module).
.PP
\f4pm_setpagesize\fP sets and synchronizes the page size for a policy module. 
.PP
\f4pm_create\fP and \f4pm_create_simple\fP will fail and a policy module will
not be created if one or more of the following are true:
.TP 15
\f4EBUSY\fP
The policy module structures were temporarily in use by another thread.
.TP 15
\f4EFAULT\fP
Arguments could not be copied into kernel space.
.TP 15
\f4EINVAL\fP
One or more of the specified policy settings are invalid.
.PP
\f4pm_destroy\fP will fail and the policy module will not be destroyed if
the following is true:
.TP 15
\f4EINVAL\fP
The specified \f4pm_handle\fP is invalid or does not exist.
.PP
\f4pm_attach\fP will fail and no policy module will be attached to a virtual
address space range if one or more of the following is true:
.TP 15
\f4EFAULT\fP
Arguments could not be copied into kernel space.
.TP 15
\f4EINVAL\fP
The specified \f4pm_handle\fP is invalid or does not exist.
.PP
\f4pm_setdefault\fP will fail and the default policy modules will not be set
if the following is true:
.TP 15
\f4EINVAL\fP
The specified memory type is invalid.
.PP
\f4pm_getall\fP will fail and no values will be returned if one or more of the
following are true:
.TP 15
\f4EFAULT\fP
Arguments could not be copied into or out of kernel space.
.TP 15
\f4EINVAL\fP
The specified list length is less than 1.
.TP 15
\f4E2BIG\fP
The specified list length is greater than the maximum supported length.
.PP
\f4pm_getstat\fP will fail and the policy module state will not be retrieved
if one or more of the following are true:
.TP 15
\f4EFAULT\fP
Data could not be copied out of kernel space.
.TP 15
\f4EINVAL\fP
The specified \f4pm_handle\fP is invalid or does not exist.
.PP
\f4pm_setpagesize\fP will fail and the policy module page size will be
unaffected if one or more of the following is true:
.TP 15
\f4EINVAL\fP
The specified \f4pm_handle\fP is invalid or does not exist.
.TP 15
\f4EINVAL\fP
The specified page size is invalid.
.PP
.SH SEE ALSO
numa(5), mmci(5), mldset(3c), mld(3c), migration(3c), pminfo(3c).
.SH "DIAGNOSTICS"
Upon successful completion, \f4pm_create\fP and \f4pm_create_simple\fP return
a value of type pmo_handle_t that represents the created policy module,
\f4pm_destroy\fP and \f4pm_attach\fP, \f4pm_getdefault\fP, \f4pm_setdefault\fP,
\f4pm_getall\fP, \f4pm_getstat\fP and \f4pm_setpagesize\fP return 0.
Otherwise, a value of \-1 is returned and
.I errno\^
is set to indicate the error.

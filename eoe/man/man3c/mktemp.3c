'\"macro stdmacro
.if n .pH g3c.mktemp @(#)mktemp	30.4 of 1/19/86
.nr X
.if \nX=0 .ds x} MKTEMP 3C "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} MKTEMP 3C "C Programming Language Utilities"
.if \nX=2 .ds x} MKTEMP 3C "" "\&"
.if \nX=3 .ds x} MKTEMP "" "" "\&"
.TH \*(x}
.SH NAME
mktemp, mkstemp \- make a unique file name
.SH SYNOPSIS
.B "#include <stdio.h>"
.PP
.B "char \(**mktemp (char \(**template);"
.PP
.B "int mkstemp(char \(**template);"
.SH DESCRIPTION
.I Mktemp\^
replaces the contents of the string pointed to by
.I template\^
by a unique file name, and returns the
address of
.IR template .
The string in
.I template\^
should look like a file name with six trailing
.BR X s;
.I mktemp\^
will replace the
.BR X s
with a string that can be used to create a unique file name.
.PP
.I Mkstemp
makes the same replacement to the template
but returns a file descriptor
for the template file open for reading and writing.
.I Mkstemp
avoids the race between testing whether the
file exists and opening it for use.
.PP
The
.I mkstemp
routine is from the 4.3BSD standard C library.
.SH SEE ALSO
getpid(2), tmpfile(3S), tmpnam(3S).
.SH DIAGNOSTICS
.I Mktemp\^
will assign a zero to the first character of \f2template\f1 
if it 
cannot create a unique name,
returning the empty string.
.PP
.I Mkstemp
returns an open file descriptor upon success.
It returns \-1 if no suitable file could be created.
.SH CAVEAT
.I Mktemp
makes 26 attempts to generate a filename which is not currently in use from
a given
.IR template .
Since the filename generated uses the process ID as a base, it is highly 
unlikely that these names will conflict with those generated by another process.
Variation in the contents of the actual string given to 
.IR mktemp ,
as well as the number of times 
.I mktemp
is called, will determine the likelihood of successfully generating a 
unique name.
'\".SH ORIGINS
'\"AT&T V.3 \- mktemp
'\".br
'\"4.3BSD \- mkstemp
.\"	@(#)mktemp.3c	6.2 of 10/20/83
.Ee

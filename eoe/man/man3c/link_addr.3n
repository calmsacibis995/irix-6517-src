'\"macro stdmacro
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Donn Seeley at BSDI.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)linkaddr.3	8.1 (Berkeley) 7/28/93
.\"
.TH link_addr
.UC 5
.SH NAME
link_addr \- elementary address specification routines for link level access
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <sys/socket.h>
.B #include <net/if_dl.h>
.PP
.B "void link_addr(const char *addr, struct sockaddr_dl *sdl);"
.PP
.B "char *link_ntoa(const struct sockaddr_dl *sdl);"
.SH DESCRIPTION
The routine
.I link_addr
interprets character strings representing
link-level addresses, returning binary information suitable
for use in system calls.
The routine
.I link_ntoa
takes a link-level
address and returns a
string representing some of the information present,
including the link level address itself, and the interface name
or number, if present.
This facility is experimental and is
still subject to change.
.PP
For
.IR link_addr ,
the string
may contain an optional network interface identifier of the form
.IR "name unit-number" ,
followed in all cases by a colon and
an interface address in the form of
groups of hexadecimal digits
separated by periods.
Each group represents a byte of address;
address bytes are filled left to right from
low order bytes through high order bytes.
.PP
.\" A regular expression may make this format clearer:
.\" .Bd -literal -offset indent
.\" ([a-z]+[0-9]+:)?[0-9a-f]+(\e.[0-9a-f]+)*
.\" .Ed
.\" .PP
Thus "ec0:8.0.9.13.d.30"
represents an ethernet address
to be transmitted on the first ethernet interface.
.SH RETURN VALUES
.I link_ntoa
always returns a null terminated string.
.I link_addr
has no return value.
.SH BUGS
The returned values for
.I link_ntoa
reside in a static memory area.
.PP
The function
.I link_addr
should diagnose improperly formed input, and there should be an unambiguous
way to recognize this.
.PP
If the
.I sdl_len
field of the link socket address
.I sdl
is 0,
.I link_ntoa
will not insert a colon before the interface address bytes.
If this translated address is given to
.I link_addr
without inserting an initial colon,
the latter will not interpret it correctly.

'\"macro stdmacro
.if n .pH g3c.sleep @(#)sleep	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} SLEEP 3C "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} SLEEP 3C "C Programming Language Utilities"
.if \nX=2 .ds x} SLEEP 3C "" "\&"
.if \nX=3 .ds x} SLEEP "" "" "\&"
.TH \*(x}
.SH NAME
sleep \- suspend execution for interval
.SH SYNOPSIS
.B "#include <unistd.h>
.PP
.B unsigned sleep (unsigned seconds);
.SH DESCRIPTION
The current thread is suspended from execution for the number
of
.I seconds\^
specified by the argument.
The actual suspension time may be less than that requested
because any caught signal will terminate the
.I sleep\^
following execution of that signal's catching routine.
Also, the suspension time may be longer than requested
by an arbitrary amount due to the scheduling of other
activity in the system.
The value returned by
.I sleep\^
will be the ``unslept'' amount
(the requested time minus the time actually slept)
in case of premature arousal due to a caught signal.
.SH NOTES
Unlike previous implementations,
.I sleep\^
is implemented with the
.I sginap(2)
system call rather than with
.I alarm(2).
Therefore,
there are no unusual side effects with the SIGALRM signal;
its effect is like that of any other signal.
.SH "SEE ALSO"
alarm(2), sginap(2), pause(2), sigaction(2), sigset(2)
.\"	@(#)sleep.3c	6.2 of 10/20/83
.Ee

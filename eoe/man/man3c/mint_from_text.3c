'\"macro stdmacro
.if n .pH g3C.mint_from_text
.nr X
.if \nX=0 .ds x} MINT_FROM_TEXT 3C "" "\&"
.if \nX=1 .ds x} MINT_FROM_TEXT 3C "" "\&"
.if \nX=2 .ds x} MINT_FROM_TEXT 3C "" "\&"
.if \nX=3 .ds x} MINT_FROM_TEXT "" "" "\&"
.TH \*(x}
.SH NAME
mint_from_text, mint_to_text \- convert a MINT string from/to mint_t
.SH SYNOPSIS
.B #include <sys/mac.h>
.PP
.B mint_t mint_from_text(const char *argp);
.br
.B char * mint_to_text(mint_t mintp, size_t *len_p);
.SH DESCRIPTION
These routines convert a textual name of a mandatory
integrity (MINT) label from/to a \f2mint_t\fP \(em a pointer
to a structure representing the mandatory integrity component
of a MAC label.
.PP
\f2mint_from_text\fP translates a textual description of a MINT label
into a \f2mint_t\fP and returns the result.  \f2mint_to_text\fP
translates a \f2mint_t\fP into a character string describing the
MINT label.  Both of these routines allocate storage for the
information returned.  The allocated storage for both can be released
when no longer needed by calling
.IR mint_free (3c).
.PP
The \f2len_p\fP argument to \f2mint_to_text\fP is a pointer to a
\f2size_t\fP that can be used to hold the length of the returned string.
If this argument is not NULL, then the length of the string
is placed in this location on return from \f2mint_to_text.
.SH RETURN VALUES
If successful, \f2mint_from_text\fP returns a \f2mint_t\fP. Upon
failure \f2mint_from_text\fp returns a NULL pointer \(em a value
of ((mint_t)0).
.PP
If successful, \f2mint_to_text\fP returns a pointer to an
allocated null terminated character string containing a
representation of the MINT label.
If an error occurs, \f2mint_to_text\fP returns a NULL pointer.
.SH ERRORS
.I mint_from_text:
.TP 16
EINVAL
input text is invalid
.TP 16
ENOMEM
could not allocate space for new label
.PP
.I mint_to_text:
.TP 16
EINVAL 
input label is invalid
.TP 16
ENOMEM 
could not allocate space for the return string
.SH "SEE ALSO"
mint_dom(3C), mint_equal(3C), mint_free(3C), mint_from_mac(3C) 

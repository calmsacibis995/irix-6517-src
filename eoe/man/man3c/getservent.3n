'\"macro stdmacro
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)getservent.3n	6.3 (Berkeley) 5/19/86
.\"
.if n .pH man3.getservent @(#)getservent	30.3 of 2/1/86
.TH GETSERVENT 3N
.UC 5
.SH NAME
getservent, getservent_r, fgetservent, fgetservent_r, getservbyport, getservbyport_r, getservbyname, getservbyname_r, setservent, endservent \- get service entry 
.SH SYNOPSIS
.nf
.ft 3
#include <netdb.h>
.PP
.ft 3
struct servent \(**getservent\|(void);
.PP
.ft 3
struct servent \(**getservent_r\|(struct servent *entry, char *buffer, int bufsize);
.PP
.ft 3
struct servent \(**fgetservent\|(FILE *);
.PP
.ft 3
struct servent \(**fgetservent_r\|(FILE *, struct servent *entry, char *buffer, int bufsize);
.PP
.ft 3
struct servent \(**getservbyname\|(const char \(**name, const char \(**proto);
.PP
.ft 3
struct servent \(**getservbyname_r\|(const char \(**name, const char \(**proto, struct servent *entry, char *buffer, int bufsize);
.PP
.ft 3
struct servent \(**getservbyport\|(int port, const char \(**proto);
.PP
.ft 3
struct servent \(**getservbyport_r\|(int port, const char \(**proto, struct servent *entry, char *buffer, int bufsize);
.PP
.ft 3
void setservent\|(int stayopen);
.PP
.ft 3
void endservent\|(void);
.fi
.SH DESCRIPTION
.IR getservent ,
.IR getservbyname ,
.IR getservbyport
and their reentrant counterparts
each return a pointer to an object with the
following structure containing the broken-out
fields of a line in the file
.IR /etc/services ,
or some other back-end database.
.RS
.PP
.nf
struct	servent {
	char	*s_name;	/* official name of service */
	char	**s_aliases;	/* alias list */
	int	s_port;		/* port service resides at */
	char	*s_proto;	/* protocol to use */
};
.ft 1
.ad
.fi
.RE
.PP
The members of this structure are:
.TP \w's_aliases'u+2n
s_name
The official name of the service.
.TP \w's_aliases'u+2n
s_aliases
A zero terminated list of alternate names for the service.
.TP \w's_aliases'u+2n
s_port
The port number at which the service resides.
Port numbers are returned as a 16-bit value in network byte order. 
.TP \w's_aliases'u+2n
s_proto
The name of the protocol to use when contacting the
service.
.PP
.I Getservent
reads the next line of the file, opening the file if necessary.
.PP
.I Setservent
opens and rewinds the file.  If the
.I stayopen
flag is non-zero,
the net data base will not be closed after each call to 
.I getservbyname
or
.IR getservbyport .
.PP
.I Endservent
closes the file.
.PP
.I Getservbyname
and
.I getservbyport
sequentially search from the beginning
of the file until a matching
protocol name or
port number is found,
or until EOF is encountered.
If a protocol name is also supplied (non-NULL),
searches must also match the protocol.
.PP
The routines fgetservent and fgetservent_r return the next entry from
the supplied stream as a struct servent structure.  The stream must be
of the same format as the file
.IR /etc/services .
.PP
The functions getservent, fgetservent, getservbyname and getservbyport
all return results in static memory which are overwritten on each call.
Reentrant versions of each of these routines getservent_r, fgetservent_t,
getservbyname_r and getservbyport_r are provided to parse the results
into supplied memory.  They take three extra arguments, a pointer to a
struct servent structure, a pointer to a character buffer, and a length
for the buffer.
.PP
The functions presented in this manual page only parse files of the
format given in services(4).  Other back-end databases and protocols,
such as NIS, can be supplied by the nsd(1M) daemon as specified in the
nsd configuration file
.IR /etc/nsswitch.conf .
.SH NOTE
The Mips ABI specifies nothing but local files so applications which
wish to use anything else must compile with libc prior to libnsl in the
library list.

When nsd is running changes in the local services file may not be
noticed by getservent() until the enumeration cache file has timed out.
.SH DIAGNOSTICS
All functions that return struct servent * will return a null (0) pointer in
the case of EOF or failure.  
.SH FILES
/etc/services
/etc/nsswitch.conf
/var/ns/cache/services.byname.m
/var/ns/cache/services.byport.m
.SH "SEE ALSO"
nsd(1M), getprotoent(3N), services(4)
.SH DIAGNOSTICS
Null pointer
(0) returned on EOF or error.
.SH BUGS
Expecting port
numbers to fit in a 32-bit
quantity is probably naive.

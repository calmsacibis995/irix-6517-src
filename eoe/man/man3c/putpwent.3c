'\"macro stdmacro
.if n .pH g3c.putpwent @(#)putpwent	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} PUTPWENT 3C "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} PUTPWENT 3C "C Programming Language Utilities"
.if \nX=2 .ds x} PUTPWENT 3C "" "\&"
.if \nX=3 .ds x} PUTPWENT "" "" "\&"
.TH \*(x}
.SH NAME
putpwent \- write password file entry
.SH SYNOPSIS
.B #include <pwd.h>
.PP
.B "int putpwent (const struct passwd \(**p, FILE \(**f);"
.SH DESCRIPTION
.I putpwent\^
is the inverse of
.IR getpwent (3C).
Given a pointer to a
passwd
structure created by
.I getpwent\^
(or
.I getpwuid 
or
.IR getpwnam ), 
.I putpwent\^
writes a line on the stream
.IR f ,
which matches the format of
.BR /etc/passwd .
.SH "SEE ALSO"
getpwent(3C), getspent(3C), putspent(3C).
.SH DIAGNOSTICS
.I putpwent\^
returns non-zero if an error was detected during its operation,
otherwise zero.
.SH WARNINGS
The above routine uses \f3<stdio.h>\fP, which causes 
it to increase the size of programs,
not otherwise using standard I/O, more
than might be expected.
.P
This call is only useful in a loop with
.IR getpwent (3C).
If NIS interpretation of '+' fields is not disabled,
the entire contents of the NIS passwd map will then end up in
.IR /etc/passwd .
This is most likely not the desired effect.  See the
.I _getpwnet_no_yp
and
.I _getpwent_no_shadow
variables in
.IR getpwent (3C)
for a solution.
'\".so /pubs/tools/origin.att
.\"	@(#)putpwent.3c	6.3 of 10/20/83
.Ee

'\"macro stdmacro
.if n .pH g3C.cap_get_file
.nr X
.if \nX=0 .ds x} CAP_GET_FILE 3C "Capabilities Library Routines" "\&"
.if \nX=1 .ds x} CAP_GET_FILE 3C "Capabilities Library Routines"
.if \nX=2 .ds x} CAP_GET_FILE 3C "" "\&"
.if \nX=3 .ds x} CAP_GET_FILE "" "" "\&"
.TH \*(x}
.SH NAME
.upperok
cap_get_file, cap_set_file \- get or set the capabilities for a pathname
.SH SYNOPSIS
.B #include <sys/capability.h>
.PP
.B cap_t cap_get_file(const char *path);
.br
.B "int cap_set_file(const char *path, cap_t cap);"
.SH DESCRIPTION
.I cap_get_file
returns a pointer to an allocated \f2cap_t\fP associated with the
pathname pointed to by \f2path\fP. If there is no capability set
associated with the file, \f2cap_get_file\fP returns a NULL pointer 
and sets \f2errno\fP to ENOATTR.
If
.B _POSIX_MAC
is in effect, then the process must have MAC read access to the object.
.PP
.I cap_set_file
sets the capabilities of the specified pathname.
For this
function to succeed, the process must have the
\f2CAP_SETFCAP\fP
capability enabled and either the effective user ID of the process must
match the file owner or the calling process must have the effective flag of
the
\f2CAP_FOWNER\fP
capability set. In addition, if
\f2_POSIX_MAC\fP
is defined, then the process must have MAC write access to the file.
.SH RETURN VALUES
.I cap_get_file
a pointer to an allocated \f2cap_t\fP if successful, NULL otherwise.
The storage should be freed with a call to \f2cap_free\fP with the returned
pointer as an argument when it is no longer needed.
.PP
.I cap_set_file
returns 0 if successful, -1 otherwise.
.SH ERRORS
.I cap_get_file:
.TP 16
ENOATTR
There is no capability set associated with the file.
.TP 16
EACCESS
Search permission is denied for a component
of the path prefix or the object exists and the process does not have
appropriate access rights.
.TP 16
ENAMETOLONG
The pathname or one of its components is too long.
.TP 16
ENOENT
The named object does not exist or \f2path\fP points to an empty string.
.TP 16
ENOMEM
allocation of the \f2cap\fP failed.
.TP 16
ENOSYS
Capability support is not available (not installed).
.TP 16
ENOTDIR
A component of the path prefix is not a directory.
.PP
.I cap_set_file:
.TP 16
EACCESS
Search permission is denied for a component
of the path prefix or the object exists and the process does not have
appropriate access rights.
.TP 16
ENAMETOLONG
The pathname or one of its components is too long.
.TP 16
ENOENT
The named object does not exist or \f2path\fP points to an empty string.
.TP 16
ENOSYS
Capability support is not available (not installed).
.TP 16
ENOTDIR
A component of the path prefix is not a directory.
.TP 16
EPERM
The process does not have appropriate privilege to
perform the operation to set the capabilities.
.TP 16
EROFS
This function requires modification of a file system which is currently
read-only.
.SH SEE ALSO
capabilities(4)

'\"! tbl | mmdoc
'\"macro stdmacro
.if n .pH g3c.getgrent @(#)getgrent	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} GETGRENT 3C "C Programming Language Utilities" "\&"
.if \nX=1 .ds x} GETGRENT 3C "C Programming Language Utilities"
.if \nX=2 .ds x} GETGRENT 3C "" "\&"
.if \nX=3 .ds x} GETGRENT "" "" "\&"
.TH \*(x}
.SH NAME
getgrent, getgrent_r, getgrgid, getgrgid_r, getgrnam, getgrnam_r, setgrent, endgrent, fgetgrent, fgetgrent_r \- get group file entry
.SH SYNOPSIS
.nf
.br
.B
\#include <grp.h>
.PP
.B "struct group \(**getgrent\|(void);"
.PP
.B "struct group \(**getgrent_r\|(struct group \(**grent, char \(**buffer, int bufsize);"
.PP
.B "struct group \(**getgrgid\|(gid_t gid);"
.PP
.B "int getgrgid_r\|(gid_t gid, struct group \(**grent, char \(**buffer, int bufsize, struct group \(**\(**grp);"
.PP
.B "struct group \(**getgrnam\|(const char \(**name);"
.PP
.B "int getgrnam_r\|(const char \(**name, struct group \(**grent, char *buffer, int bufsize, struct group \(**\(**grp);"
.PP
.B "void setgrent\|(void);"
.PP
.B "void endgrent\|(void);"
.PP
.B "struct group \(**fgetgrent\|(\s-1FILE\s+1 \(**f);"
.PP
.B "struct group \(**fgetgrent_r\|(\s-1FILE\s+1 \(**f, struct group \(**grent, char \(**buffer, int bufsize);"
.PP
.B "int getgrmember\|(const char \(**name, gid_t gid_array[], int maxgids, int vgids);"
.SH DESCRIPTION
.IR getgrent ,
.I getgrgid\^
and
.I getgrnam\^
and their reentrant counterparts each return pointers to an object
with the following structure containing the broken-out fields of a line in the
.I /etc/group
file or some other back-end group database.
Each line contains a ``group'' structure, defined in the
.I <grp.h>\^
header file.
.RS
.PP
.TS
l1 l1 l1 l.
struct	group {
	char	\(**gr_name;	\s-1/\(** the name of the group \(**/\s+1
	char	\(**gr_passwd;	\s-1/\(** the encrypted group password \(**/\s+1
	gid_t	gr_gid;	\s-1/\(** the numerical group ID \(**/\s+1
	char	\(**\(**gr_mem;	\s-1/\(** vector of pointers to member names \(**/\s+1
};
.TE
.RE
.PP
.I getgrent\^
when first called returns a pointer to the first group structure in the file;
thereafter, it returns a pointer to the next group structure in the file;
so, successive calls may be
used to search the entire file.
.I getgrgid\^
searches from the beginning of the file until a numerical group id
matching
.I gid\^
is found and returns a pointer to the particular structure in which 
it was found.
.I getgrnam\^
searches from the beginning of the file until a group name matching
.I name\^
is found and returns a
pointer to the particular structure in which it was found.
If an end-of-file or an error
is encountered on reading, these functions return a
.SM NULL
pointer.
.PP
The 
.I getgrnam_r
and
.I getgrgid_r
calls are reentrant versions of the 
.I getgrnam
and 
.I getgrgid 
calls.   The extra arguments grent and buffer are used for internal
storage, bufsize is size of buffer, and grp is the struct group used to
return the requested information.  A good size of buffer is BUFSIZ bytes.
.PP
A call to
.I setgrent\^
has the effect of rewinding the group file to allow repeated searches.
.I endgrent\^
may be called to close the group file when processing is complete.
.PP
.I fgetgrent\^
returns a pointer to the next group structure in the stream
.IR f ,
which matches the format of
.BR /etc/group .
.SH NOTES
In IRIX 4.0,
there were two versions of the getpwent primitives:
the standard version in libc and the NIS version in libsun.
This release contains only routines to parse files, an external
file supply mechanism nsd(1) supplies data from NIS and other
protocols as files.  To force these routines to not use nsd
supplied data set the external 
.I _getpwent_no_yp\^
variable to 1.  
This is useful for programs that must not generate any network traffic, 
and for programs that update the 
.I /etc/group\^
file. 

.PP
.I getgrmember\^
is used to get the ids of the groups of which the given user is a member.
.I name\^
is the name of the user.
The group ids are returned in the array
.I gid_array\^
which contains
.I maxgids\^
elements.
The first
.I vgid\^
elements of
.I gid_array\^
are not used by
.I getgrmember\^
and can be used by the caller to initialize default group ids.
.I getgrmember\^
is usually called by
.I initgroups\^.
.I getgrmember\^
returns the number of valid gids in the gid array or
-1 if an error is encountered.
.PP
The Mips ABI specifies nothing but local files so applications which
wish to use anything else must compile with libc prior to libnsl in the
library list.

When nsd is running changes in the group file may not be seen by
getgrent() until the nsd enumeration cache file has timed out.
.SH DIAGNOSTICS
All routines that return a struct group * will return a NULL pointer in the
case of EOF or failure.  
The reentrant functions return the errno(3C) for the call, and thus 0
implies success.
The getgrmember call returns the number of gids found, and -1 on failure.
.SH FILES
/etc/group
/var/ns/cache/group.byname.m
/var/ns/cache/group.bygid.m
/var/ns/cache/group.bymember.m
.SH "SEE ALSO"
nsd(1M), getgroups(2), errno(3C), getlogin(3C), getpwent(3C), group(4).
.SH WARNING
The above routines use the \f2stdio\fP library, which causes 
them to increase the size of programs,
not otherwise using standard \s-1I/O\s+1, more
than might be expected.  They also map an external cache
file which can cause the application to be larger than
expected.
'\".so /pubs/tools/origin.att
.\"	@(#)getgrent.3c	6.3 of 10/20/83
.Ee

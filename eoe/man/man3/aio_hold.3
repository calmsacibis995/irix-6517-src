'\"macro stdmacro
.TH AIO_HOLD 3 
.SH NAME
aio_hold, aio_hold64 \- Defer or resume reception of asynchronous I/O callbacks
.Op c p a
.SH C SYNOPSIS
.nf
.B #include <aio.h>
.PP
.B "void aio_hold(int should_ hold);
.PP
.B "void aio_hold64(int should_hold);
.fi
.PP
.Op
.SH DESCRIPTION
.PP
The
\f4aio_hold()\f1
function allows the calling process to defer or resume the reception
of callback notification invocations. If the should_hold parameter is
\f4AIO_HOLD_CALLBACK\f1, callbacks will be defered. If the should_hold
parameter is \f4AIO_RELEASE_CALLBACKS\f1 then callbacks will be released. If
the value is \f4AIO_ISHELD_CALLBACKS\f1 then nothing is done and the current
state is returned. Callbacks are the MIPS ABI preferred method for
notifications for completions of asynchronous I/O operations. 
.P
.SH "SEE ALSO"
aio_write(3), lio_listio(3), aio_error(3), aio_return(3), aio_cancel(3), mpadmin(1), realtime(5).
.SH "DIAGNOSTICS"
.PP
Upon successful completion the prior state is returned. A return value
of 1 indicates that callbacks were being held at the time of the call
and a return value of 0 indicates they were not. Otherwise a value of
-1 is returned and 
.Ierrno 
is set to indicate the error.
.TP 15
.SM
\%[EINVAL]
The value of should_hold is not one of AIO_ISHELD_CALLBACK,
AIO_HOLD_CALLBACK or AIO_RELEASE_CALLBACK.
.TP 15
.SM
\%[EIO]
It was not possible to perform this operation due to an error.

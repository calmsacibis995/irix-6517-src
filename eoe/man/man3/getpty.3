'\"macro stdmacro
.TH GETPTY 3 "7 March 1991"
.IX getpty#(3) "" "\fLgetpty\fP(3) \(em \*(Sd get a PTY or Pseudo-TTY"
.SH NAME
_getpty, mkpts \- get a PTY or Pseudo-TTY
.SH SYNOPSIS
.B "#include <sys/types.h>"
.br
.B "#include <sys/stat.h>"
.br
.B "#include <unistd.h>"
.br
.B "#include <fcntl.h>"
.PP
.B "char *_getpty(int *fildes, int oflag, mode_t mode,"
.br
.B "			int nofork);"
.SH DESCRIPTION
This function finds and allocates a pair of devices making a
pseudo-TTY, described in \f2pty\fP(7M).
.PP
If \f3filedes\fP is not null, then the file descriptor for the
master or controlling side of the pty is stored through the pointer.
If successful, a pointer to an internal, static area containing the
name of the slave device node is returned.
The file descriptor is opened with the value \f3oflag\fP, constructed
as described in \f2open\fP(2).
.PP
The access bits of the slave device node are set to \f3mode\fP.
The owner of the slave device is set to the real UID of the caller,
and the GID is reset.
.PP
If 
.B nofork
is 0 and the process does not have effective UID 0,
then this function may execute /usr/sbin/\f3mkpts\fP to change
the owner and permissions of the node for the slave device.
.PP
The slave device file in \f2/dev\fP will be created if it does not already
exist.
.PP
This function may also use the facilities described in \f2getgrent\fP(3C)
to set the group of the slave device node.
.SH "SEE ALSO"
chmod(2), chown(2), getgrent(3C), open(2), pty(7M), tty(1), tty(7)
.SH DIAGNOSTICS
A returned value of 0 indicates failure, with \f2errno\fP indicating
the nature of the problem.
.SH BUGS
When \f2_getpty\fP(3) uses /usr/sbin/\f3mkpts\fP, it waits for it to finish
with \f2waitpid\fP(2).
This requires that the caller not have set \f3SIGCLD\fP to \f3SIG_IGN\fP.
Instead, \f2_getpty\fP(3) should save and restore the signal handler.
See wait(2) and signal(2).
The \f3nofork\fP argument can used to avoid undesirable forks.
.TE

'\"macro stdmacro
.TH LIO_LISTIO 3 
.SH NAME
lio_listio, lio_listio64 \- linked asynchronous I/O operations
.Op c p a
.SH C SYNOPSIS
.nf
.B #include <aio.h>
.PP
.B "int lio_listio(int mode, aiocb_t * const list[], int nent, sigevent_t *sig);
.PP
.B "int lio_listio64(int mode, aiocb64_t * const list[], int nent, sigevent_t *sig);
.fi
.PP
.Op
.SH DESCRIPTION
.PP
The \f3lio_listio\f1
function allows the calling process to initiate a list of I/O requests with
a single function call.
.P
The \f3lio_listio64\f1() function is identical to \f3lio_listio\f1() except
that it takes an  array of \f3aiocb64_t\f1 * (see <\f2aio.h\f1>).
This structure allows for the specification of a file offset greater than
2 Gigabytes.
.P
The \f3mode\f1
argument takes a value of either LIO_WAIT or LIO_NOWAIT and determines
whether the function returns when the I/O operations have been
completed, or as soon as the operations have been queued. If the \f3mode\f1
argument is LIO_WAIT, the function waits until all I/O is complete and the
\f3sig\f1 argument is ignored.
.sp
If the \f3mode\f1 argument is LIO_NOWAIT, the function returns
immediately, and signal delivery shall occur, according to the 
\f3sig\f1 argument, when all the I/O operations complete. If \f3sig\f1
is NULL, then no signal delivery occurs at the completion of all the
items in the list, however notifications for each item in the list
will happen according to their \f3aiocb->aio_sigevent\f1 structures.
If \f3sig\f1 is not NULL then notification will happen according to 
\f3sig->sigev_notify\f1 when all items
in the list have completed their I/O operations.
.P
If \f3sigev_notify\f1 
is \f3SIGEV_NONE\f1, then no notification will be posted to the calling
application.
.P
If \f3sigev_notify\f1 is
\f3SIGEV_SIGNAL\f1, then the signal specified in
\f3sigev_signo\f1 will be sent to the calling
process. If \f3SA_SIGINFO\f1 is set for the signal (see
\f3sigaction(2)\f1) and the signal is in the range of \f3SIGRTMIN\f1
and \f3SIGRTMAX\f1 then the signal will be queued to the process and
the value in \f3sigev_value\f1 will be the \f3si_value\f1
in the generated signal.
.P
If \f3sigev_notify\f1 is \f3SIGEV_CALLBACK\f1 then
the function \f3sigev_func\f1 will be called
with \f3sigev_value\f1 as the argument. Only one callback
will be called at a time, however programs should be careful to note
that a callback may be run in parallel with the calling process.
.P
If \f3sigev_notify\f1 is \f3SIGEV_THREAD\f1 then
the function \f3sigev_notify_function\f1 will be called
by a new thread (see \f3pthreads(5)\f1)
with \f3sigev_value\f1 as the argument.
This thread is created when the event arrives with the attributes
specified in \f3sigev_notify_attributes\f1 except that
it is automatically detached.
The calling process should ensure there are sufficient resources to
create the thread.
.P
The \f3list\f1 argument is a pointer to an array of pointers to
\f3aiocb\f1 structures. The array contains \f3nent\f1 elements.
.sp
The I/O requests enumerated by list are submitted in an unspecified
order unless the file was opened with the \f3O_APPEND\f1 in which case
the write operations will happen in the order that they appear in the list.
.sp
The \f3aio_lio_opcode\f1 field of each \f3aiocb\f1
structure specifies the operation to be performed. The supported
operations are \f3LIO_READ\f1, \f3LIO_WRITE\f1, and \f3LIO_NOP\f1.
The \f3LIO_NOP\f1 operation causes that list entry to be ignored. If the
\f3aio_lio_opcode\f1 element is equal to \f3LIO_READ\f1, then 
an I/O operation is submitted as if by a call to \f3aio_read()\f1
with the \f3aiocbp\f1 equal to the address of the \f1aiocb\f3
structure. If the \f3aio_lio_opcode\f1 element is equal to 
\f3LIO_WRITE\f1, then an I/O operation is submitted as if by a call to
\f3aio_write()\f1 with the \f3aiocbp\f1 equal to the address of the 
\f3aiocb\f1 structure.
.SH "SEE ALSO"
aio_read(3), aio_write(3), aio_error(3), aio_return(3), aio_cancel(3),
aio_sgi_init(3), aio_hold(3), aio_fsync(3), read(2), lseek(2), close(2),
_exit(2), exec(2), fork(2), pthreads(5).
.SH "DIAGNOSTICS"
.PP
If the \f3mode\f1 argument has the value LIO_NOWAIT, the \f3lio_listio()\f1
function returns the value 0 to the calling process if the I/O operations are successfully queued; otherwise, the function shall return the value -1 and set 
.I errno
to indicate the error.
.sp
If the \f3mode\f1 argument has the value \f3LIO_WAIT\f1, the 
\f3lio_listio()\f1function returns the value 0 to the calling process 
when all the indicated I/O has completed successfully. Otherwise,
\f3lio_listio()\f1 returns -1 to the calling process, and sets 
.I errno
to indicate the error.
.sp

In either case, the return value only indicates the success or failure
of the \f3lio_listio()\f1 call itself, not the status of the
individual I/O requests. In some cases one or more of the I/O requests
contained in the list may fail. Failure of an individual request does
not prevent completion of any other individual request. To determine
the outcome of each I/O request, the application shall examine the
error status associated with each \f3aiocb\f1 control block.
The error statuses returned are identical to those returned 
as the result of an \f3aio_read(3)\f1 or \f3aio_write(3)\f1 function.
.sp
If any of the following conditions occur, the 
\f3lio_listio()\f1
function shall return -1 and set
.I errno
to the corresponding value:
.TP 15
.SM
\%[EAGAIN]
The resources necessary to queue all the I/O requests were not available. The application may check the error status for each
.I aiocb
to determine the individual request(s) that failed.
.TP 15
.SM
\%[EAGAIN]
The number of entries indicated by 
\f3nent\f1
would cause the system wide limit \f3_AIO_MAX\f1 to be exceeded.
.TP 15
.SM
\%[EINVAL]
The \f3mode\f1
argument is not a proper value. The value of \f3nent\f1
was greater than \f3_AIO_LISTIO_MAX\f1.
.TP 15
.SM
\%[EINTR]
A signal was delivered while waiting for all I/O requests to complete
during a \f3LIO_WAIT\f1 operation. Note that, since each I/O operation
invoked by \f3lio_listio()\f1
may possibly provoke a signal when it completes, this error return may
be caused by the completion of one (or more) of the very I/O
operations being awaited. Outstanding I/O requests are not canceled,
and the application shall examine each list element to determine
whether the request was initiated, canceled or completed.
.TP 15
.SM
\%[EIO]
One or more of the individual I/O operations failed. The application
may check the error status for each \f3aiocb\f1 structure to determine
the individual request(s) that failed. It is not possible to receive
this error return when the \f3mode\f1 argument to the
\f3lio_listio()\f1 request was \f3LIO_NOWAIT.\f1
.P
In addition to the errors returned by the \f3lio_listio()\f1 function,
if the \f3lio_listio()\f1 function succeeds or fails with errors of
EAGAIN, EINTR or ERIO, then some of the I/O operations specified by
the list may have been initiated. The I/O operation indicated by each
list element can encounter errors specific to the individual read or
write function being performed. In this event, the error status for
each \f3aiocb\f1 control block contains the associated error code. The
error codes which can be set are the same as would be set by a
.I read(2)
or
.I write(2)
function, with the following error codes possible:
.TP 15
.SM
\%[EAGAIN]
The requested asynchronous I/O operation was not queued due to system resource limitations.
.TP 15
.SM
\%[ECANCELED]
The requested I/O was canceled before the I/O completed due to an explicit
\f3aio_cancel(3)\f1
request.
.TP 15
.SM
\%[EINPROGRESS]
The requested I/O is in progress.

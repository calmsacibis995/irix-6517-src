'\"macro stdmacro
.TH AIO_RETURN 3 
.SH NAME
aio_return, aio_return64 \- return error status of an asynchronous I/O operation
.Op c p a
.SH C SYNOPSIS
.nf
.B #include <aio.h>
.PP
.B "ssize_t aio_return(aiocb_t *aiocbp);
.PP
.B "ssize_t aio_return64(aiocb64_t *aiocbp);
.fi
.PP
.Op
.SH DESCRIPTION
.PP
The
.I aio_return()
function returns the return status associated with the 
.I aiocbp
passed in. The return status for an asynchronous I/O operation is the 
value that would be returned by the corresponding 
.I read(2)
or
.I write(2)
or
.I fsync(2)
operation.
If the error status for the operation is equal to EINPROGRESS, then the return status for the operation is undefined.
.P
The
.I aio_return()
function may be called exactly once to retrieve the return status of a
given asynchronous operation; thereafter, if the same aiocb structure
is used in a call to aio_return() or aio_error(), an error may be
returned.
.P
The \f2aio_return64\f1() function is identical to \f2aio_return\f1() except
that it takes an \f2aiocb64_t\f1 * (see <\f3aio.h\f1>).
This structure allows for the specification of a file offset greater than
2 Gigabytes.
.SH "SEE ALSO"
aio_read(3), aio_write(3), lio_listio(3), aio_error(3), aio_cancel(3), aio_sgi_init(3), read(2), lseek(2), close(2),_exit(2), exec(2), fork(2).
.SH "DIAGNOSTICS"
.PP
If the asynchronous I/O operation has completed, then the return status, as described for
.I read(2),
.I write(2),
and 
.I fsync(2)
shall be returned. If the asynchronous operation has not yet completed, then the results of
.I aio_return()
are undefined.
.sp
If any of the conditions below occur, the 
.I aio_return()
function shall return -1 and set
.I errno
to the corresponding value.
.TP 15
.SM
\%[EINVAL]
The 
.I aiocbp
argument refers to an asynchronous operation whose return status has already been retrieved.


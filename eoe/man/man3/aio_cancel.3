'\"macro stdmacro
.TH AIO_CANCEL 3 
.SH NAME
aio_cancel, aio_cancel64 \- cancel an asynchronous I/O request
.Op c p a
.SH C SYNOPSIS
.nf
.B #include <aio.h>
.PP
.B "int aio_cancel(int fildes, aiocb_t *aiocbp);
.PP
.B "int aio_cancel64(int fildes, aiocb64_t *aiocbp);
.fi
.PP
.Op
.SH DESCRIPTION
.PP
The 
.I aio_cancel()
function attempts to cancel one or more asynchronous I/O requests currently outstanding against file descriptor
.I fildes.
The
.I aiocb
argument points to the asynchronous I/O control block for a particular request to be canceled. If
.I aiocbp
is NULL, then all outstanding cancelable asynchronous I/O requests against
.I fildes 
are canceled.
.P
The \f2aio_cancel64\f1() function is identical to \f2aio_cancel\f1() except
that it takes an \f2aiocb64_t\f1 * (see <\f3aio.h\f1>).
This structure allows for the specification of a file offset greater than
2 Gigabytes.
The user must define \f3_ABI_SOURCE\f1 and include \f3-labi\f1 to
access the \f2aio64\f1 routines.
.P
Normal signal delivery shall not occur for asynchronous I/O operations that are successfully canceled. If there are requests which can not be canceled, then the normal asynchronous completion process shall take place for those requests when they are completed.
.sp
For requested operations that are successfully canceled the associated error status is set to ECANCELED and the return status is -1. For requested operations that are not successfully canceled the 
.I aiocbp
is not modified by
.I aio_cancel().
.sp
If 
.I aiocbp
is no NULL, then if
.I fildes
does not have the same value as the file descriptor with which the asynchronous operation was initiated, unspecified results occur.
.SH "SEE ALSO"
aio_read(3), aio_write(3), aio_sgi_init(3).
.SH "DIAGNOSTICS"
.PP
The
.I aio_cancel()
function returns the value AIO_CANCELED to the calling process if the requested operation(s) were canceled. The value AIO_NOTCANCELED is returned if at least one of the requested operation(s) can not be canceled because it is in progress. In this case, the state of the other operations, if any, referenced in the call to
.I aio_cancel()
is not indicated by the return value of 
.I aio_cancel().
The application may determine the state of affairs for these operations by using
.I aio_error().
The value AIO_ALLDONE is returned if all of the operations have already completed. Otherwise, the function shall return -1, and sets
.I errno
to indicate the error.
.sp
If any of the conditions below occur, the 
.I aio_cancel()
function shall return -1 and set
.I errno
to the corresponding value.
.TP 15
.SM
\%[EBADF]
The 
.I fildes
argument is not a valid file descriptor.


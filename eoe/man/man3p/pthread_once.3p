'\"macro stdmacro
.\"
.\" ----------------
.TH pthread_once 3P
.\"
.\" ----------------
.SH NAME
pthread_once \- thread-safe initialization
.\"
.\" ----------------
.Op c p a
.SH C SYNOPSIS
.nf
.ft 3
#include <pthread.h>
.sp .8v
.ft 3
int pthread_once(pthread_once_t \(**once, void (\(**init)(void));
.ft 1
.fi
.Op
.\"
.\" ----------------
.SH DESCRIPTION
The
.IR pthread_once ()
function ensures that the function
.I init
is called exactly once for all callers using the
.I once
initialization variable.
This variable is initialized with the constant
.BR PTHREAD_ONCE_INIT .
While
.I init
is being executed all callers of
.IR pthread_once ()
will wait.
.\"
.PP
If a thread is cancelled while executing the
.I init
function [see
.IR pthread_setcancelstate ()],
then
.IR pthread_once ()
will permit another thread (possibly waiting) to make the call.
.\"
.\" ----------------
.SH DIAGNOSTICS
There are no errors for
.IR pthread_once .
.\"
.\" ----------------
.SH "SEE ALSO"
pthread_setcancelstate(3P).

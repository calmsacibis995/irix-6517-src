'\"macro stdmacro
.TH pthread_condattr_setpshared 3P
.SH NAME
pthread_condattr_setpshared, pthread_condattr_getpshared \-
set and get condition variable process-shared attribute
.Op c p a
.SH C SYNOPSIS
.nf
.ft 3
#include <pthread.h>
.HP
.ft 3
int pthread_condattr_setpshared(pthread_condattr_t \(**attr,
.br
int pshared);
.HP
.ft 3
int pthread_condattr_getpshared(const pthread_condattr_t \(**attr,
.br
int \(**pshared);
.ft 1
.SH DESCRIPTION
The
.IR pthread_condattr_getpshared ()
function obtains the value of the
.I process-shared
attribute from the attributes object referenced by
.IR attr .
The
.IR pthread_condattr_setpshared ()
function is used to set the
.I process-shared
attribute in an initialized attributes object referenced by
.IR attr .
.PP
The
.I process-shared
attribute is set to
.B PTHREAD_PROCESS_SHARED
to permit a condition variable to be operated upon by any
thread that has access to the memory where the condition
variable is allocated, even if the condition variable is
allocated in memory that is shared by multiple processes.
If the
.I process-shared
attribute is
.BR PTHREAD_PROCESS_PRIVATE ,
the condition variable will only be operated upon by threads
created within the same process as the thread that initialized
the condition variable; if threads of differing processes attempt to
operate on such a condition variable, the behavior is undefined.
The default value of the attribute is
.BR PTHREAD_PROCESS_PRIVATE .
.\"
.SH "DIAGNOSTICS"
If successful, the
.IR pthread_condattr_setpshared ()
function returns zero.
Otherwise, an error number is returned to indicate the error. 
.PP
If successful, the
.IR pthread_condattr_getpshared ()
function returns zero and stores the value of the
.I process-shared
attribute of
.I attr
into the object referenced by the
.I pshared
parameter.
Otherwise, an error number is returned to indicate the error. 
.TP 15
.B [EINVAL]
The new value specified for the attribute is outside the
range of legal values for that attribute. 
.PP
These functions will not return an error code of
.BR [EINTR] .
.\"
.SH "SEE ALSO"
pthread_condattr_init(3P),
pthread_create(3P),
pthread_mutex_init(3P),
pthread_cond_init(3P).

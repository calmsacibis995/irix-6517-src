'\"macro stdmacro
.TH USDUMPSEMA 3P
.SH NAME
usdumpsema \- dump out information about a specific semaphore
.Op c p a
.SH C SYNOPSIS
.nf
.B #include <ulocks.h>
.B #include <stdio.h>
.PP
.B "int usdumpsema (usema_t \(**sema, FILE \(**fd, const char \(**str);"
.fi
.Op
.Op f
.SH FORTRAN SYNOPSIS
.nf
.B #include <ulocks.h>
.PP
.B integer*4 function usdumpsema (sema, fd, str)
.B TYPE sema
.fi
.in +1i
where
.B TYPE
is
.B "integer*4"
in 32 bit mode, and is
.B "integer*8"
in 64 bit mode.
.in -1i
.B integer*4 fd
.br
.B "character \(**(\(**) str"
.Op
.SH DESCRIPTION
.I usdumpsema\^
dumps information about
.I sema
in a readable form.
This information is written to the file descriptor given by
.IR fd .
The information printed includes where in memory the semaphore resides, what its
count is, and the metering and debugging information (see
.IR usctlsema (3P)).
The argument
.I str
is simply printed as a string, and can be used to aid in identifying
where
.I usdumpsema
was called from.
.SH SEE ALSO
usinit(3P), usctlsema(3P). 
.SH DIAGNOSTICS
Upon successful completion, a value of 0 is returned. Otherwise, a
value of \-1 is returned and
.I errno\^
is set to indicate the error.

'\"macro stdmacro
.TH USFREELOCK 3P
.SH NAME
usfreelock \- free a lock 
.Op c p a
.SH C SYNOPSIS
.B #include <ulocks.h>
.PP
.B "void usfreelock (ulock_t lock, usptr_t \(**handle);"
.Op
.Op f
.SH FORTRAN SYNOPSIS
.B subroutine usfreelock (lock, handle)
.br
.B TYPE lock
.br
.B TYPE handle
.br
.in +1i
where
.B TYPE
is
.B "integer*4"
in 32 bit mode, and is
.B "integer*8"
in 64 bit mode.
.in -1i
.Op
.SH DESCRIPTION
.I usfreelock\^
frees all memory associated with the lock specified by
.I lock.\^
.PP
.I usfreelock\^
will cause unpredictable results if 
.I lock\^
is not a valid lock.
.SH SEE ALSO
usctllock(3P), ussetlock(3P), usconfig(3P), usinitlock(3P), usnewlock(3P).
.SH DIAGNOSTICS
.I usfreelock 
returns no value.

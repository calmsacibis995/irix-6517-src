'\"macro stdmacro
.TH USFREESEMA 3P
.SH NAME
usfreesema \- free a semaphore 
.Op c p a
.SH C SYNOPSIS
.B #include <ulocks.h>
.PP
.B "void usfreesema (usema_t \(**sema, usptr_t \(**handle);"
.Op
.Op f
.SH FORTRAN SYNOPSIS
.B #include <ulocks.h>
.PP
.B subroutine usfreesema (sema, handle)
.br
.B TYPE sema, handle
.br
.in +1i
where
.B TYPE
is
.B "integer*4"
in 32 bit mode, and is
.B "integer*8"
in 64 bit mode.
.in -1i
.Op
.SH DESCRIPTION
.I usfreesema\^
frees the previously allocated semaphore
(via
.IR usnewsema (3P))
specified by
.I sema.\^
Semaphores allocated via
.IR usnewpollsema (3P)
should be freed using
.IR usfreespollsema (3P).
.SH SEE ALSO
usfreepollsema(3P),
usinitsema(3P),
usinit(3P),
usnewsema(3P),
usnewpollsema(3P).
.SH DIAGNOSTICS
.I usfreesema 
returns no value.

'\"macro stdmacro
.\"
.\" ----------------
.TH pthread_setrunon_np 3P
.\"
.\" ----------------
.SH NAME
pthread_setrunon_np, pthread_getrunon_np
\- thread CPU scheduling affinity
.\"
.\" ----------------
.Op c p a
.SH C SYNOPSIS
.nf
.ft 3
#include <pthread.h>
.sp .8v
int pthread_setrunon_np(int cpu);
.HP
.ft 3
int pthread_getrunon_np(int \(**cur_cpu);
.ft 1
.fi
.Op
.\"
.\" ----------------
.SH DESCRIPTION
Executing threads run on the most eligible CPU determined by the kernel.
This choice may be changed for threads with the
.B PTHREAD_SCOPE_SYSTEM
attribute using the
.IR pthread_setrunon_np ()
interface.
This interface requests that the calling thread execute exclusively on
the named
.IR cpu .
The CPU should be chosen in the same way as for
.IR sysmp ()
interface with the
.B MP_MUSTRUN
command.
To further control execution the 
.B MP_RESTRICT
and
.B MP_ISOLATE
.IR sysmp ()
commands can be used as usual.
.\"
.PP
To determine the currently requested CPU affinity the
.IR pthread_getrunon_np ()
interface can be used.
It returns the the caller's CPU affinity (set by a previous call to
.IR pthread_setrunon_np ())
in
.IR cur_cpu .
.\"
.\" ----------------
.SH DIAGNOSTICS
On success
.IR pthread_setrunon_np ()
and
.IR pthread_getrunon_np ()
return zero; otherwise an error number is returned.
.\"
.PP
.IR pthread_setrunon_np ()
may return:
.TP 15
.B [EPERM]
The caller is not a
.B PTHREAD_SCOPE_SYSTEM
thread.
.TP 15
.B [EINVAL]
The
.I cpu
argument is not valid.
.\"
.PP
.IR pthread_getrunon_np ()
may return:
.TP 15
.B [EPERM] 
The caller is not a
.B PTHREAD_SCOPE_SYSTEM 
thread.
.TP 15
.B [EINVAL]
The caller has no affinity set.
.\"
.\" ----------------
.SH "SEE ALSO"
pthread_attr_setscope(3P), sysmp(2).
.\"
.\" ----------------
.SH "NOTES"
The
.I _np
suffix indicates that this is a non-portable interface and is not
covered by any standard.

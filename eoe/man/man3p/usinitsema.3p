'\"macro stdmacro
.TH USINITSEMA 3P
.SH NAME
usinitsema \- initialize a semaphore 
.Op c p a
.SH C SYNOPSIS
.B #include <ulocks.h>
.PP
.B "int usinitsema (usema_t \(**sema, int val);"
.Op
.Op f
.SH FORTRAN SYNOPSIS
.B #include <ulocks.h>
.PP
.B integer*4 function usinitsema (sema, val)
.br
.B integer*4 val
.br
.B TYPE sema
.br
.in +1i
where
.B TYPE
is
.B "integer*4"
in 32 bit mode, and is
.B "integer*8"
in 64 bit mode.
.in -1i
.Op
.SH DESCRIPTION
.I usinitsema\^
initializes the semaphore specified by
.IR sema .
The count of the semaphore is set to the value specified by
.I val.
A value of 0 implies no available resources, and the first process that
attempts a 'P' operation (via
.IR uspsema )
will block.
This can be viewed as a synchronizing semaphore, since the goal is to
always have a process block until another has completed an operation that
the first process requires.
Positive values for
.I val
can be used for tracking a collection of resources.
The simplest case of a value of 1 implements the common mutual exclusion
semaphore, namely one and only one process will be permitted through a semaphore
at a time.
Values greater than one imply that up to
.I val
resources may be simultaneously used, but requests for more than
.I val
resources cause the calling process to block until a resource comes free
(by a process holding a resource performing a
.IR usvsema ).
.P
Metering and debugging are reinitialized
and the history logging mechanism is set according to the global setting
(see
.IR usconfig (3P)).
.I usinitsema
should only be used for semaphores previously allocated using either
.IR usnewsema (3P)
or
.IR usnewpollsema (3P).
Note that
.I usinitsema
does not check whether any process is currently waiting for the semaphore.
Any such information is lost.
This means that any processes that are waiting for
the semaphore (either blocked or queued on a pollable semaphore) will not
be woken, nor will the internal counts kept in the operating system
be reset.
.P
.I usinitsema\^
will fail if the following is true:
.TP 15
.SM
\%[EINVAL]
.I val
must be greater than or equal to 0 and less than 30000;
.SH SEE ALSO
uscpsema(3P), usctlsema(3P), usfreesema(3P), usinit(3P),
usnewsema(3P), usnewpollsema(3P), uspsema(3P), usvsema(3P).
.SH DIAGNOSTICS
Upon successful completion, a value of 0 is returned. Otherwise, a
value of \-1 is returned and
.I errno\^
is set to indicate the error.

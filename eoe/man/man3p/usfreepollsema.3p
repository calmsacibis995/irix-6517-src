'\"macro stdmacro
.TH USFREEPOLLSEMA 3P
.SH NAME
usfreepollsema \- free a pollable semaphore 
.Op c p a
.SH C SYNOPSIS
.B #include <ulocks.h>
.PP
.B "int usfreepollsema (usema_t \(**sema, usptr_t \(**handle);"
.Op
.Op f
.SH FORTRAN SYNOPSIS
.B #include <ulocks.h>
.PP
.B integer*4 function usfreepollsema (sema, handle)
.br
.B TYPE sema, handle
.br
.in +1i
where
.B TYPE
is
.B "integer*4"
in 32 bit mode, and is
.B "integer*8"
in 64 bit mode.
.in -1i
.Op
.SH DESCRIPTION
.B usfreepollsema\^
frees the previously allocated pollable semaphore
(via
.BR usnewpollsema (3P))
specified by
.I sema.\^
Before freeing a pollable semaphore all the file descriptors acquired
for the semaphore must be closed.
For processes in a single share group, all of which are sharing
file descriptors, if one process calls \f4usclospollsema\fP(3P),
all the file descriptors for all processes will be closed.
If there are processes in the share group that are not sharing
file descriptors, then each process that acquired a file descriptor
via a call to \f4usopenpollsema\fP(3P) should call \f4usclosepollsema\fP(3P).
Semaphores allocated via
.BR usnewsema (3P)
should be freed using
.BR usfreesema (3P).
.SH SEE ALSO
usclosepollsema(3P),
usfreesema(3P),
usinitsema(3P),
usinit(3P),
usnewsema(3P),
usnewpollsema(3P),
usopenpollsema(3P).
.SH DIAGNOSTICS
Upon successful completion 0 is returned.
Otherwise, a value of \-1 is returned and
.I errno\^
is set to indicate the error.

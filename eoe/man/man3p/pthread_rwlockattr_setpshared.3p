'\"macro stdmacro
.TH pthread_rwlockattr_setpshared 3P
.SH NAME
pthread_rwlockattr_setpshared, pthread_rwlockattr_getpshared \-
set/get a read-write lock attribute object's process-shared attribute
.Op c p a
.SH C SYNOPSIS
.nf
.ft 3
#include <pthread.h>
.HP
.ft 3
int pthread_rwlockattr_setpshared(pthread_rwlockattr_t \(**attr,
.br
int pshared);
.HP
.ft 3
int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t \(**attr,
.br
int \(**opshared);
.ft 1
.SH DESCRIPTION
These functions manipulate the initialized
read-write lock attribute object
.I attr
[see
.IR pthread_rwlockattr_init ()].
.LP
The function
.IR pthread_rwlockattr_setpshared ()
sets the process-shared attribute value of the read-write lock.
The attribute value may be
.B PTHREAD_PROCESS_PRIVATE
or
.BR PTHREAD_PROCESS_SHARED .
.LP
The function
.IR pthread_rwlockattr_getpshared ()
returns the process-shared attribute value of
.I attr
via
.IR opshared .
The default value is
.BR PTHREAD_PROCESS_PRIVATE .
.LP
A read-write lock with a process-shared attribute of
.B PTHREAD_PROCESS_PRIVATE
may only be operated on by threads created within
the same process as the thread which initialized the read-write lock.
.LP
A read-write lock with a process-shared attribute of
.B PTHREAD_PROCESS_SHARED
may be operated on by any thread that has access to the memory 
where the read-write lock is allocated, even if the read-write
lock is allocated in memory that is shared by multiple
processes.
.SH "DIAGNOSTICS"
The read-write lock attribute process-shared functions return
zero on success; otherwise, an error number is returned:
.TP 15
.B [EINVAL]
The attribute value specified by
.I pshared
is invalid.
.SH "SEE ALSO"
pthread_rwlock_rdlock(3P),
pthread_rwlock_unlock(3P),
pthread_rwlock_wrlock(3P),
pthread_rwlockattr_init(3P).

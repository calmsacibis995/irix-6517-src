'\"macro stdmacro
.\"
.\" ----------------
.TH pthread_sigmask 3P
.\"
.\" ----------------
.SH NAME
pthread_sigmask \- examine and change blocked signals
.\"
.\" ----------------
.Op c p a
.SH C SYNOPSIS
.nf
.ft 3
#include <signal.h>
.sp .8v
int pthread_sigmask(int operation, const sigset_t *set, sigset_t *old_set);
.ft 1
.fi
.Op
.\"
.\" ----------------
.SH DESCRIPTION
The
.IR pthread_sigmask ()
function manipulates the set of signals which are blocked from delivery to
the calling thread.
.PP
A
.RB non- NULL
.I set
specifies the set of signals to use in modifying the currently active set.
The incoming signals may be added to, deleted from or completely replace
the active set, as specified by the
.I operation
parameter which may have the following values:
.TP 1.3i
.B SIG_BLOCK
Add specified signals to those in current mask.
.TP
.B SIG_UNBLOCK
Remove the specified signals from the current mask.
.TP
.B SIG_SETMASK
Replace the current mask with
.IR set .
.PP
If
.I old_set
is not
.BR NULL ,
the current set of blocked signals (before modification) is
returned in the space to which it points.  In this way, with a
.B NULL
.I set
the user can determine the current signal mask.
.PP
Routines described in
.IR sigsetops ()
are used to create and examine the
.I set
and
.I old_set
signal masks.
.PP
It is not possible to block
.BR SIGKILL
or
.BR SIGSTOP .
This restriction is silently imposed by the system.
.\"
.\" ----------------
.SH DIAGNOSTICS
On success,
.IR pthread_sigmask ()
returns zero; otherwise, an error number is returned:
.\"
.TP 15
.B [EINVAL]
The value specified by
.I operation
is not equal to one of the defined values.
.\"
.\" ----------------
.SH "SEE ALSO"
sigaction(2), sigprocmask(2), sigsetops(3), pthread_kill(3P), signal(5).
.\"
.\" ----------------
.SH NOTES
In IRIX,
.IR sigprocmask ()
it is equivalent to pthread_sigmask().

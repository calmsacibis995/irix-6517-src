'\"macro stdmacro
.TH USNEWSEMA 3P
.SH NAME
usnewsema \- allocate and initialize a semaphore 
.Op c p a
.SH C SYNOPSIS
.B #include <ulocks.h>
.PP
.B "usema_t \(**usnewsema (usptr_t \(**handle, int val);"
.Op
.Op f
.SH FORTRAN SYNOPSIS
.B #include <ulocks.h>
.PP
.B TYPE function usnewsema (handle, val)
.br
.B TYPE handle
.br
.B integer*4 val
.br
.in +1i
where
.B TYPE
is
.B "integer*4"
in 32 bit mode, and is
.B "integer*8"
in 64 bit mode.
.in -1i
.Op
.SH DESCRIPTION
.I usnewsema\^
allocates a semaphore and initializes its count to the value specified by
.I val.
Initially, metering and debugging are off (and can be turned on through a
call to 
.IR usctlsema (3P))
and the history logging mechanism is set according to the global setting
(see
.IR usconfig (3P)).
The semaphore is allocated from the shared arena designated by
.I handle
as returned from
.IR usinit (3P).
A semaphore allocated via
.I usnewsema
is a blocking semaphore - if the semaphore is unavailable, the caller will
block.
A pollable semaphore may be allocated via
.IR usnewpollsema (3P).
.P
A
.I val
of 0 implies no available resources, and the first process that
attempts a 'P' operation (via
.IR uspsema (3P))
will block.
This can be viewed as a synchronizing semaphore, since the goal is to
always have a process block until another has completed an operation that
the first process requires.
Positive values for
.I val
can be used for tracking a collection of resources.
The simplest case of a value of 1 implements the common mutual exclusion
semaphore, where one and only one process will be permitted through a semaphore
at a time.
Values greater than one imply that up to
.I val
resources may be simultaneously used, but requests for more than
.I val
resources cause the calling process to block until a resource comes free
(by a process holding a resource performing a
.IR usvsema (3P)).
.PP
.I usnewsema\^
will fail if one or more of the following is true:
.TP 15
.SM
\%[ENOMEM]
There is no memory available in the arena to allocate the semaphore structure
(see
.IR usconfig (3P)).
.TP
.SM
\%[EINVAL]
.I val
is less than zero or greater than 30000.
.SH SEE ALSO
amalloc(3P), uscpsema(3P), usconfig(3P), usctlsema(3P), 
usdumpsema(3P),
usfreesema(3P),
usfreepollsema(3P),
usinit(3P),
usnewpollsema(3P),
usvsema(3P).
.SH "DIAGNOSTICS"
Upon successful completion, a value of pointer to a
.I usema_t
structure
is returned. Otherwise, a value of NULL is returned and
.I errno\^
is set to indicate the error.

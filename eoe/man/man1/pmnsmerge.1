'\"macro stdmacro
.\" $Id: pmnsmerge.1,v 1.2 1999/05/25 10:29:49 kenmcd Exp $
.nr X
.if \nX=0 .ds x} PMNSMERGE 1 "Performance Co-Pilot" "\&"
.if \nX=1 .ds x} PMNSMERGE 1 "Performance Co-Pilot"
.if \nX=2 .ds x} PMNSMERGE 1 "" "\&"
.if \nX=3 .ds x} PMNSMERGE "" "" "\&"
.TH \*(x}
.SH NAME
\f3pmnsmerge\f1 \- merge multiple versions of a Performance Co-Pilot PMNS
.SH SYNOPSIS
.B /usr/pcp/bin/pmnsmerge
[\f3\-adfv\f1]
.I infile
[...]
.I outfile
.SH DESCRIPTION
.B pmnsmerge
merges multiple instances of a
Performance Metrics Name Space (PMNS),
as used by the components of the
Performance Co-Pilot (PCP).
.P
Each
.I infile
argument names a file that includes the root of a PMNS, of the form
.sp0.5v
.in+1i
.ftCW
.nf
root {
    /* arbitrary stuff */
}
.fi
.ft1
.in-1i
.sp0.5v
.P
The order in which the
.I infile
files are processed is determined by the presence or absence of
embedded control lines of the form
.ftCW
#define _DATESTAMP \f(COYYYYMMDD\fP
.ft1
.P
Files without a control line are processed first and in the
order they appear on the command line.
The other files are then processed in order of ascending
\f(CW_DATESTAMP\fP.
.P
The
.B \-a
option suppresses the argument re-ordering and processes all files
in the order they appear on the command line.
.P
The merging proceeds by matching names in PMNS, only those
\fBnew\fP names in each PMNS are considered, and these are
added after any existing metrics with the longest possible
matching prefix in their names.
For example, merging these two input PMNS
.sp0.5v
.in+1i
.ftCW
.nf
root {                    root {
                              surprise  1:1:3
    mine       1:1:1          mine      1:1:1
    foo                       foo
                              yawn
    yours      1:1:2 
}                         }
foo {                     foo {
    fumble     1:2:1
                              mumble    1:2:3
    stumble    1:2:2          stumble   1:2:2
}                         }
                          yawn {
                              sleepy    1:3:1
                          }
.fi
.ft1
.in-1i
.P
Produces the resulting PMNS in
.IR out .
.sp0.5v
.in+1i
.ftCW
.nf
root {
    mine      1:1:1
    foo
    yours     1:1:2 
    surprise  1:1:3
    yawn
}
foo {
    fumble    1:2:1
    stumble   1:2:2
    mumble    1:2:3
}
yawn {
    sleepy    1:3:1
}
.fi
.ft1
.P
To avoid accidental over-writing of PMNS files,
.I outfile
is expected to not exist when
.B pmnsmerge
starts.
The
.B \-f
option forces the removal of
.I outfile
(if it exists), before the check is made.
.PP
The
.B \-d
option allows the resultant PMNS to optionally contain
duplicate PMIDs with different names in the PMNS.  By default
this condition is considered an error.
.PP
The
.B \-v
option produces one line of diagnostic output as each
.I infile
is processed.
.PP
Once all of the merging has been completed,
.B pmnsmerge
will attempt to compile
the resultant namespace using
.BR pmnscomp (1)
\- if this fails for any reason,
.I outfile
will still be created, but
.B pmnsmerge
will report the problem and exit with non-zero status.
.SH CAVEAT
Once the writing of the new
.I outfile
file has begun, the signals SIGINT, SIGHUP and SIGTERM will be ignored
to protect the integrity of the new file.
.SH SEE ALSO
.BR pmnscomp (1),
.BR pmnsadd (1),
.BR pmnsdel (1)
and
.BR pmns (4).

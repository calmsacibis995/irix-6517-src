'\"macro stdmacro
.if n .pH g1.intro @(#)intro	30.9 of 3/24/86
.nr X
.if \nX=0 .ds x} INTRO 1 "" "\&"
.if \nX=1 .ds x} INTRO 1 ""
.if \nX=2 .ds x} INTRO 1 "" "\&"
.if \nX=3 .ds x} INTRO "" "" "\&"
.TH \*(x}
.SH NAME
intro \- introduction to commands, application programs,
and programming commands.
.SH DESCRIPTION
This section describes, in alphabetical order, publicly-accessible commands.
Certain distinctions of purpose are made in the headings:
.ta 0.25i 0.75i
.sp
.nf
	(1)	Commands of general utility.
	(1C)	Commands for communication with other systems.
	(1G)	Graphics utilities.
.\".sp1
.\"The following Utility packages are delivered with the computer:
.\".sp1
.\".ta 0.25i 0.5i
.\".nf
.\"	Advanced C Utilities
.\"	Basic Networking Utilities
.\"	C Programming Language Utilities
.\"	Cartridge Tape Controller Utilities
.\"	Directory and File Management Utilities
.\"	Editing Utilities
.\"	Essential Utilities
.\"	Extended Software Generation System Utilities
.\"	Graphics Utilities
.\"	Help Utilities
.\"	Inter-process Communications
.\"	Line Printer Spooling Utilities
.\"	Performance Measurement Utilities
.\"	Security Administration Utilities
.\"	Software Generation System Utilities
.\"	Source Code Control System Utilities
.\"	Spell Utilities
.\"	Terminal Filters Utilities
.\"	Terminal Information Utilities
.\"	User Environment Utilities
.\".sp1
.\"The following Utility Packages are available for purchase:
.\".sp1
.\"	Networking Support Utilities
.\"	Remote File Sharing Utilities
.\".fi
.SS Manual Page Command Syntax
Unless otherwise noted, commands described in the
.B \s-1SYNOPSIS\s0
section of a manual page accept options and
other arguments according to the following syntax
and should be interpreted as explained below.
.PP
.I name
.RI [ \f3\0\-\fPoption\0 ...\0]
.RI [ \0cmdarg\0 ...\0]
.br
where:
.TP 13
[\ ]
Surround an
.I option\^
or
.I cmdarg\^
that is not required.
.TP
.I "..."
Indicates multiple occurrences of the
.I option\^
or
.IR cmdarg\^ .
.TP
.I name
The name of an executable file.
.TP
.I option\^
This is either
.br
.IR noargletter\^ ...
.br
or
.br
.I argletter\^
.IR optarg [\f3,\fP...]
.br
It is always preceded by a ``\-''.
.TP
.in +.5i
.I noargletter\^
A single letter representing an option without an option-argument.
Note that more than one
.I noargletter\^
option can be grouped after one
.RB `` \- ''
(Rule 5, below).
.TP
.in +.5i
.I argletter\^
A single letter representing an option requiring an option-argument.
.TP
.in +.5i
.I optarg\^
An option-argument (character string) satisfying a preceding
.IR argletter .
Note that groups of
.I optargs\^
following an
.I argletter\^
must be separated by commas,
or separated by white space and quoted (Rule 8, below).
.TP
.in +.5i
.I cmdarg\^
Path name (or other command argument)
.I not\^
beginning with
.RB `` \- '',
or
.RB `` \- ''
by itself indicating the standard input.
.in -.5i
.SS "Command Syntax Standard:  Rules"
These command syntax rules are not followed by all current commands,
but all new commands will obey them.
.IR getopts\^ (1)
should be used by all shell procedures to parse positional parameters 
and to check for legal options.
It supports Rules 3-10 below.
The enforcement of the other rules must be done by the command itself.
.PP
Since almost all commands are run via the shells (
.IR bsh (1), sh (1), csh (1),
.IR ksh (1), and\ tcsh(1))
diagnostic messages may be issued by the shells, prior to, or even
instead of, the command itself being executed.  A common case is
too many arguments to the command.  See the manual page
for your shell for details.
.PP
.RS
.TP 5
1.
Command names (\f2name\f1 above) must be between two and nine characters long.
.TP
2.
Command names must include only lower-case letters and digits.
.TP
3.
Option names (\f2option\f1 above) must be one character long.
.TP
4.
All options must be preceded by
.RB `` \- ''.
.TP
5.
Options with no arguments may be grouped after a single
.RB `` \- ''.
.TP
6.
The first
option-argument
.RI ( optarg\^
above)
following an option must be preceded by white space.
.TP
7.
Option-arguments cannot be optional.
.TP
8.
Groups of option-arguments following an option must either be separated by
commas or separated by white space and quoted
(e.g., \f7\-o xxx,z,yy\f1 or \f7 \-o "xxx z yy"\f1).
.TP
9.
All options must precede operands
.RI ( cmdarg\^
above)
on the command line.
.TP
10.
.RB `` \-\^\- ''
may be used to indicate the end of the options.
.TP
11.
The order of the options relative to one another should not matter.
.TP
12.
The relative order of the operands (\f2cmdarg\f1 above)
may affect their significance
in ways determined by the command with which they appear.
.TP
13.
.RB `` \- ''
preceded and followed by white space should only be used to mean standard input.
.P
Throughout the manual pages there are references to 
\f2TMPDIR, BINDIR, INCDIR, LIBDIR,\f1 and \f2LLIBDIR\f1.
These represent directory names whose value
is specified on each manual page as necessary.
For example, \f2TMPDIR\f1 might refer to /tmp or /usr/tmp.
These are not environment variables and cannot be set.
(There is also an environment variable called \f3TMPDIR\f1 which
can be set.  See \f2tmpnam\f1(3S).)
.RE
.SH SEE ALSO
getopts(1), exec(2), exit(2), wait(2), getopt(3C).
.PD 0
.br
.ne 5
.SH DIAGNOSTICS
Upon termination, each command returns two bytes of status,
one supplied by the system and giving the cause for
termination, and (in the case of ``normal'' termination)
one supplied by the program
(see
.IR wait (2)
and
.IR exit (2)).
The former byte is 0 for normal termination; the latter
is customarily 0 for successful execution and non-zero
to indicate troubles such as erroneous parameters, or bad or inaccessible data.
It is called variously ``exit code'', ``exit status'', or
``return code'', and is described only where special
conventions are involved.
.\".SH PATHNAMES
.\"The window manager commands (1W) are found in 
.\".I /usr/people/gifts/mextools/tools
.\"and
.\".I /usr/people/gifts/mextools/imgtools.
.\"Before executing these commands, \f2cd\f1 to those directories and
.\"execute \f2make\f1.
.SH WARNINGS
Some commands produce unexpected results
when processing files containing null characters.
These commands often treat text input lines as strings and therefore
become confused upon encountering a null character (the string terminator) 
within a line.
.\"	@(#)intro.1	6.2 of 9/2/83
.Ee
'\".so /pubs/tools/origin.att

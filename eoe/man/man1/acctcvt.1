.TH acctcvt 1
.SH NAME
acctcvt \- convert accounting data to a different format
.SH SYNOPSIS
.nf
\f3acctcvt \f1[\f2options...\f1] [\f2infile\f1]
.SH DESCRIPTION
The \f2acctcvt\f1 command is used to convert accounting data from
one format to another.
The data can come from a file or stdin (such as when used as an
audit filter) and similarly can be
written to another file or stdout.
Both SGI extended accounting and standard SVR accounting formats
are supported.
.PP
In addition, output can be in ASCII text.  The output can be in the form of
human-readable text, either in the format similar to that produced by
\f2sat_interpret\f1(1M) or by \f2acctcom\f1(1).  The output can also be in the
format that can be fed into a post-processing tool like \f2awk\f1(1).
.PP
Some input formats may contain data records that are not related
to accounting (such as system audit information in the extended
accounting formats).
These records will not be contained in the reformatted output.
However, they can be copied verbatim to stdout in case \f2acctcvt\f1
is being used together with other tools that may need that information.
See \f2audit_filters\f1(5) and the Examples section below
for information on how this might work
with the System Audit Trail.
.SH OPTIONS
.TP 0.5i
\f4-d\f1
Sets debug mode.
.TP 0.5i
\f4-i\f1
Read input data as the second or later stage in a pipeline of
audit filters.
Equivalent to specifying
"\f4\-\-input_source\ \-\f1",
"\f4\-\-input_format\ extacct6.5\f1",
and
"\f4\-\-input_noheader\f1".
.TP 0.5i
\f4-o\f1
Run in "filter" mode: all input is copied unchanged to stdout,
with the exception that a file header will be discarded.
This option cannot be specified if
"\f4\-\-output_destination\ -\f1" was also specified.
.TP 0.5i
\f4-q\f1
Suppresses warning messages (usually concerning invalid record
types) to stderr.
.TP 0.5i
\f4-v\f1
When used with the \f4text\f1 or \f4text_acctcom\f1 output format, this
specifies that audit information not related to accounting should be included
in the output.  Otherwise, the option is ignored.
.TP 0.5i
\f4\-\-filter\f1
Same as \f4\-o\f1.
.TP 0.5i
\f4\-\-filter_hdr\f1
Same as \f4\-\-filter\f1 except that a file header (if present)
from the input source will also be copied to stdout.
.TP 0.5i
\f4\-\-input_format \f2format\f1
Specifies the format of the input data.
Valid values of \f2format\f1 are:
.RS 0.5i
.TP 1.5i
\f4extacct6.2\f1
IRIX 6.2 extended accounting format
.TP 1.5i
\f4extacct6.4\f1
IRIX 6.4 extended accounting format
.TP 1.5i
\f4extacct6.5\f1
IRIX 6.5 extended accounting format
.TP 1.5i
\f4svr4\f1
Standard SVR4 process accounting data
.RE
.PP
.RS 0.5i
The default is \f4extacct6.5\f1.
Note that for the SAT/extended accounting input formats,
records unrelated to accounting will not be included in the
reformatted output.
.RE
.TP 0.5i
\f4--input_header\f1
Indicates that the input data starts with a file header.
This is the default for all input formats except \f4svr4\f1,
for which this option is illegal (the \f4svr4\f1 accounting
data format does not define a file header).
.TP 0.5i
\f4--input_noheader\f1
Indicates that the input data does not begin with a file header.
This would be useful if \f2acctcvt\f1 were being used in a
pipeline of audit filters and the previous stage of the pipe
discards the header.
It is also the normal behavior for the \f4svr4\f1 input format.
.TP 0.5i
[\f4\-\-input_source\f1] { \f4\-\f1 | \f2path\f1 }
Specifies the source from which input data should be taken.
If "\f4-\f1" is specified (or the option is not specified
at all) data is taken from stdin.
Otherwise, the pathname of a file from which data is to be
read should be specified for \f2path\f1.
Notice that it is not strictly necessary to specify
"\f4\-\-input_source\f1" unless the input file begins with
a "-" character; the first unrecognized command line argument
that does not begin with a "-" will be taken as the input source.
.TP 0.5i
\f4\-\-output_destination \f1{ \f4-\f1 | \f4|\f2cmd\f1 | \f2path\f1 }
Specifies the destination to which reformatted output should be
written.
If "\f4-\f1" is specified (or the option
is not specified at all) data is written to stdout.
If the first character of the destination is the
character "\f4|\f1", then the remainder of the destination
will be taken as a command line and executed with "/bin/sh -c";
the stdin of this second process will receive the output from
\f2acctcvt\f1.
Note that with most shells it will be necessary to enclose
\f2cmd\f1 in quotes, both to protect the "|" character and
so that \f2cmd\f1 will be treated as a single argument to \f2acctcvt\f1.
If the destination does not begin with "|" then it is
assumed to be the name of a file to which the output
data will be written.
.TP 0.5i
\f4\-\-output_format \f2format\f1
Specifies the format of the output data.
Valid values of \f2format\f1 are:
.RS 0.5i
.TP 1.5i
\f4extacct6.2\f1
IRIX 6.2 extended accounting format
.TP 1.5i
\f4extacct6.4\f1
IRIX 6.4 extended accounting format
.TP 1.5i
\f4extacct6.5\f1
IRIX 6.5 extended accounting format
.TP 1.5i
\f4svr4\f1
Standard SVR4 accounting format
.TP 1.5i
\f4text\f1
Human-readable text in row format
.TP 1.5i
\f4text_acctcom\f1
Human-readable text in acctcom-like format
.TP 1.5i
\f4text_awk\f1
Text in awkable format; can only be specified with \f4extacct\f1 input format.
.RE
.PP
.RS 0.5i
The default output format is \f4text\f1.
.RE
.TP 0.5i
\f4\-\-output_header\f1
Indicates that a file header appropriate to the output format should
be written before any accounting data.
For the extended accounting output formats, this would be useful when
output is being sent to a file that will later be processed by
audit tools (such as \f2sat_interpret\f1(1)) or other software that
is expecting standard System Audit Trail data.
This option cannot be specified along with the \f4svr4\f1 or \f4text_awk\f1
output format.
.TP 0.5i
\f4\-\-output_noheader\f1
Indicates that no file header should be included with the reformatted
output.
This is the default behavior.
.TP 0.5i
\f4-A \f2ash\f1
Selects only processes that have an array session handle that
matches the \f2ash\f1 argument.
.TP 0.5i
\f4-C \f2sec\f1
Selects only processes with total CPU time (system plus user time)
exceeding \f2sec\f1 seconds.
.TP 0.5i
\f4-I \f2chars\f1
Selects only processes that transfer more characters than the
cutoff number given by \f2chars\f1.
.TP 0.5i
\f4-M \f2kbytes\f1
Selects only processes with mean core size exceeding \f2kbytes\f1 KB.
.TP 0.5i
\f4-n \f2pattern\f1
Selects only commands matching \f2pattern\f1 that may be a regular
expression, as in \f2ed\f1(1), except that a + symbol indicates one or more
occurrences.
.TP 0.5i
\f4-O \f2sec\f1
Selects only processes with CPU system time exceeding \f2sec\f1 seconds.
.PP
.nf
 
.fi
There are several "shorthand" versions of some of the longer option names.
These are:
.RS 0.5i
.nf
.sp .8v
short   full option name
.sp .8v
\f4-f\f1      \-\-output_destination
\f4-i\f1      \-\-input_format extacct6.5 \-\-input_noheader \c
\-\-input_source \-
\f4-i62\f1    \-\-input_format extacct6.2
\f4-i62nh\f1  \-\-input_format extacct6.2 \-\-input_noheader
\f4-i64\f1    \-\-input_format extacct6.4
\f4-i64nh\f1  \-\-input_format extacct6.4 \-\-input_noheader
\f4-i65\f1    \-\-input_format extacct6.5
\f4-i65nh\f1  \-\-input_format extacct6.5 \-\-input_noheader
\f4-isvr4\f1  \-\-input_format svr4
\f4-o\f1      \-\-filter
\f4-oh\f1     \-\-filter_hdr
\f4-o62\f1    \-\-output_format extacct6.2
\f4-o62nh\f1  \-\-output_format extacct6.2 \-\-output_noheader
\f4-o64\f1    \-\-output_format extacct6.4
\f4-o64nh\f1  \-\-output_format extacct6.4 \-\-output_noheader
\f4-o65\f1    \-\-output_format extacct6.5
\f4-o65nh\f1  \-\-output_format extacct6.5 \-\-output_noheader
\f4-osvr4\f1  \-\-output_format svr4
\f4-otext\f1  \-\-output_format text
\f4-oacctcom\f1  \-\-output_format text_acctcom
\f4-oawk\f1  \-\-output_format text_awk
.fi
.RE
.PP
.nf
 
.fi
The following options only apply to the \f4text_acctcom\f1 output format:
.TP 0.5i
\f4-a\f1
Prints array session handle; can only be specified with \f4extacct\f1 input
format.
.TP 0.5i
\f4-c\f1
Prints the number of logical I/O requests; can only be specified with
\f4extacct\f1 input format.
.TP 0.5i
\f4-e\f1
Prints the system exit status; can only be specified with \f4svr4\f1 input
format.
.TP 0.5i
\f4-g\f1
Prints group ID.
.TP 0.5i
\f4-h\f1
Excludes column headings from the output.  Options \f4-h\f1 and \f4-H\f1 are
mutually exclusive.
.TP 0.5i
\f4-H\f1
Prints column headings on every page.
.TP 0.5i
\f4-io\f1
Prints columns containing the I/O counts.
.TP 0.5i
\f4-k\f1
Instead of memory size, prints total kcore-minutes, which is the average
resident set size of the process (in KB) if its execution time is normalized
to one minute.  This is computed by keeping a cumulative sum of the process's
resident set size (the process's current resident set size is added to the sum
HZ times a second).  This sum is converted to KB and then divided by 60*HZ to
yield kcore-minutes.
.TP 0.5i
\f4-l\f1
Prints the tty information.
.TP 0.5i
\f4-m\f1
Prints mean core size.  This is average resident set size of the
process (in KB) during its execution.  It is computed by taking the cumulative
resident set size (as computed for the \f4-k\f1 option) and dividing it by the
sum of the system and user CPU times.
.PP
.RS 0.5i
This is the default print option.  If you do not specify any other print
options, \f4-m\f1 is selected.  If you do specify other print options and you
want mean core size to print, you must specify \f4-m\f1.
.RE
.TP 0.5i
\f4-p\f1
Prints process ID and parent process ID; can only be specified with
\f4extacct\f1 input format.
.TP 0.5i
\f4-P\f1
Prints project ID; can only be specified with \f4extacct\f1 input format.
.TP 0.5i
\f4-r \f2rppage\f1
Sets the number of records per page to \f2rppage\f1; must be specified with
the \f4-H\f1 option.  The default is 75.
.TP 0.5i
\f4-s\f1
Prints the service provider information (SPI) for array session records; can
only be specified with \f4extacct\f1 input format.
.TP 0.5i
\f4-t\f1
Prints separate system and user CPU times.
.TP 0.5i
\f4-V\f1
Combines some I/O fields; must be specified with the \f4-c\f1, \f4-io\f1, or
\f4-w\f1 option; can only be specified with \f4extacct\f1 input format.
.TP 0.5i
\f4-w\f1
Prints wait times; can only be specified with \f4extacct\f1 input format.
.PP
.nf
 
.fi
The following option only applies to the \f4text_awk\f1 output format:
.TP 0.5i
\f4-fs \f2fsep\f1
Sets the field separator to \f2fsep\f1.  The default is a blank.
.PP
.nf
 
.fi
The \f4text_awk\f1 output format prints the following fields separated by a
delimiter:
.RS 0.5i
.nf
Command name
User name
TTY information
Start time
End time
Elapsed time in seconds
System CPU time in seconds
User CPU time in seconds
Number of characters transferred
Number of blocks transferred
Mean core size in KB
Total kcore-minutes
Number of characters read
Number of characters written
Number of blocks read
Number of blocks written
Array session handle
Project ID
Group name
Number of logical read requests
Number of logical write requests
Process ID
Parent process ID
Run queue wait time in seconds
Block I/O wait time in seconds
Raw I/O wait time in seconds
Service provider information
.fi
.RE
.SH EXAMPLES
.SS Converting IRIX 6.5 Extended Accounting Records To IRIX 6.2 Format
The format of the SAT (System Audit Trail) data stream used by extended
accounting changed between IRIX 6.2, IRIX 6.4 and IRIX 6.5.
If it is necessary to read accounting data from one version of IRIX
using tools from a different release of IRIX, \f2acctcvt\f1 can be
used to convert the data from the format used by the one release of
IRIX to the other.
For example,
if the file "auditdata" contains IRIX 6.5 data, it can be converted
to IRIX 6.2 format and written to the file "acctdata" with the
following command:
.nf
.sp .8v
    \f4acctcvt --input_format extacct6.5 --input_source auditdata
             --output_format extacct6.2 --output_destination acctdata\f1
.sp .8v
.fi
This can also be done more tersely by taking advantage of the default
option settings and shorthand option names:
.nf
.sp .8v
    \f4acctcvt -o62 < auditdata > acctdata\f1
.sp .8v
.fi
The file "acctdata" can now be used with other tools that may be
expecting the IRIX 6.2 extended accounting format.
.SS Converting Accounting Data With Audit Filters
Some accounting software may read extended accounting records directly
from the System Audit Trail (SAT) using
"audit filters" (see \f2audit_filters\f1(5) for more
details on this technique).
Software that does this and that was designed for an earlier release
of IRIX may in many cases still be able to run on more recent releases
of IRIX by using \f2acctcvt\f1 as an audit filter.
For example, suppose a program that was used to process
IRIX 6.2 extended accounting records was invoked by placing
its command line in the file \f4/etc/config/satd.filter-1\f1.
In IRIX 6.5 this same software could be used in the same way
by adding \f2acctcvt\f1 as an additional filter that occurs
\f2before\f1 the accounting software.
To do so, the file \f4/etc/config/satd.filter-0\f1 could be
created, containing:
.nf
.sp .8v
    \f4acctcvt --output_format extacct6.2\f1
.sp .8v
.fi
If the accounting software did not expect to see a SAT file header,
the \f4--output_noheader\f1 option should be used as well:
.nf
.sp .8v
    \f4acctcvt --output_format extacct6.2 --output_noheader\f1
.sp .8v
.fi
.SS Using \f2acctcvt\fP With Other Audit Filters 
If the system audit facility is being used for conventional
audit purposes in addition to collecting accounting data, it may
be necessary to pass unmodified audit data on to other filters
via stdout as well as writing reformatted data to a separate output
file or accounting program.
\f2acctcvt\f1 provides the \f4-o\f1 and \f4-f\f1 options
(or their long forms, \f4\-\-filter\f1 and \f4\-\-output_destination\f1)
for handling this situation.
The \f4-o\f1 option instructs \f2acctcvt\f1 to copy all input data
(except a file header, if present) to stdout, where it can be read by
a subsequent audit filter.
The \f4-f\f1 option instructs \f2acctcvt\f1 to write the converted
accounting data to a specified file or command.
Thus, a sample \f4satd.filter-\f1* file that causes IRIX 6.2 accounting
records to be written to the file \f4/var/adm/acctdata\f1 while passing
unmodified audit records along to stdout would look like this:
.nf
.sp .8v
    \f4acctcvt -o -f /var/adm/acctdata -o62\f1
.sp .8v
.fi
If it is necessary to pass the reformatted data along to another
program rather than a file, \f2acctcvt\f1 can create a "tee" in
the audit filter pipeline by starting a second command to which
it passes the converted data while still copying the unmodified
audit data to stdout.
To do this, use the \f4-f\f1 option as before, but specify the
command preceded by the character "|" instead of a filename.
For example, if the \f4satd.filter-\f1* file contained this:
.nf
.sp .8v
    \f4acctcvt -o -f '|/usr/bin/myacct -i -dir /acct' -o62\f1
.sp .8v
.fi
then the command "\f4/usr/bin/myacct\ \-i\ \-dir\ /acct\f1" would
be started in a second process
and it would receive IRIX 6.2-style extended accounting
records from \f2acctcvt\f1 via stdin.
In the meantime, \f2acctcvt\f1 would still continue to copy
unmodified IRIX 6.5 audit records to stdout for use by
other filters.
Notice that the command is enclosed in single quotes to protect
it from interpretation by the shell.
In more complicated cases it may be helpful to write a simple
wrapper script for the second command to avoid confusion.
.SS Handling SVR4 Accounting Data
In addition to converting between different audit formats, \f2acctcvt\f1
can also convert accounting data to or from the older SVR4 "pacct"
format.
The following command could be used
to convert IRIX 6.5 extended accounting records into SVR4
format, which could then be passed along to SVR4 accounting
tools like \f2acctcom\f1(1):
.nf
.sp .8v
    \f4acctcvt -osvr4 -f /var/adm/pacct < /var/adm/sat_9707201833\f1
.sp .8v
.fi
Conversely, SVR4 accounting data could be converted into SAT
format for use with tools which expect extended accounting format
data
(although much of the extended accounting information will be missing):
.nf
.sp .8v
    \f4acctcvt -isvr4 -o65 -f /usr/tmp/satacct < /var/adm/pacct\f1
.sp .8v
.fi
.SS Outputting in Text Format
The following command can be used to print IRIX 6.5 extended accounting data
in \f4text_acctcom\f1 format.  The output includes the I/O counts and wait
times.
.nf
.sp .8v
    \f4acctcvt -oacctcom -io -w /var/adm/sat_9707201833\f1
.sp .8v
.fi
The following command can be used to print IRIX 6.5 extended accounting data
in \f4text_awk\f1 format, with the field separator being ",".
.nf
.sp .8v
    \f4acctcvt -oawk -fs , /var/adm/sat_9707201833\f1
.sp .8v
.fi
.SH NOTES
The SVR4 accounting format contains considerably less data than
SGI extended accounting formats.
When converting extended accounting data to SVR4 format, metrics
not supported by SVR4 will be discarded silently.
When converting SVR4 data to an extended accounting format,
metrics not supported by SVR4 will be reported as 0.
In addition, SVR4 does not split I/O metrics into separate
counts for units read or units written.
When converting SVR4 data to extended accounting format, these
combined I/O counts will be reported simply as "read" data and
the write counts will be 0.
.SH "SEE ALSO"
acct(1M),
acctcom(1),
satd(1M),
sat_interpret(1M),
acct(4),
audit_filters(5),
extacct(5),
awk(1),
ed(1).

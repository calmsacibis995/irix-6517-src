'\"macro stdmacro
.if n .pH g1.xargs @(#)xargs	30.3 of 3/10/86
.nr X
.if \nX=0 .ds x} XARGS 1 "User Environment Utilities" "\&"
.if \nX=1 .ds x} XARGS 1 "User Environment Utilities"
.if \nX=2 .ds x} XARGS 1 "" "\&"
.if \nX=3 .ds x} XARGS "" "" "\&"
.TH \*(x}
.SH NAME
xargs \- construct argument list(s) and execute command 
.SH SYNOPSIS
.B xargs
[\|options\|] [ command [\|initial-arguments\|] ]
.SH DESCRIPTION
\f4xargs\f1 constructs a command line consisting of the
\f2command\f1
and \f2initial-arguments\f1 
operands specified followed by as many
arguments read in sequence from standard input as will fit 
in length and number constraints specified by the options.
\f4xargs\f1 then invokes the constructed command line and 
waits for its completion. This sequence is repeated until
an end-of-file condition is detected on standard input or
an invocation of a constructed command line returns an
exit status of 255.
.PP
.IR command ,
which may be a shell file,
is searched for, using one's \f3\s-1$PATH\s+1\fP.
If
.I command\^
is omitted,
.B /bin/echo
is used.
.PP
Arguments read in from standard input are defined to be contiguous
strings of characters delimited by one or more blanks, tabs, or new-lines;
empty lines are always discarded.
Blanks and tabs may be embedded as part of an argument if escaped or quoted.
Characters enclosed in quotes (single or double) are taken literally,
and the delimiting quotes are removed.
Outside of quoted strings a backslash
.RB "(" \e ")"
will escape the next character.
.PP
The generated command line length will be the sum of the
size in bytes of the command name and each argument treated 
as strings, including a null byte terminator for each of
these strings. The 
\f4xargs\f1
command will limit the command line length such that when the
command line is invoked, the combined argument and environment
lists will not exceed ARG_MAX-2048 bytes. Within this constraint,
if neither the \f4\-n\f1 nor the \f4\-s\f1 option is specified,
the default command line length will be at least LINE_MAX.
.SH OPTIONS

.TP 10
.BI \-L number\^
.I command\^
is executed for each non-empty
.I number\^
lines of arguments from standard input.
The last invocation of
.I command\^
will be with fewer lines of arguments if fewer than
.I number\^
remain.
A line is considered to end with the first new-line
unless the last character of the line is a blank or a tab;
a trailing blank/tab signals continuation through the next non-empty line.
.TP 10
\f4\-l\f1[\f2number\f1]
Same as -L, except: if
.I number\^
is omitted, 1 is assumed;
option
.B \-x
is forced.
.TP 10
.BI \-I replstr\^
Insert mode:
.I command\^
is executed for each line from standard input,
taking the entire line as a single arg, inserting it in
.I initial-arguments\^
for each occurrence of
.IR replstr .
A maximum of 5 arguments in
.I initial-arguments\^
may each contain one or more instances of
.IR replstr .
Blanks and tabs at the beginning of each line are ignored.
Constructed arguments may not grow larger than what the kernel
.I ncargs
value allows (the default as shipped is 20480), including room
for pointers.  This may be further reduced,
depending on environment size and other arguments),
and option
.B \-x
is forced.
.TP 10
\f4\-i\f1[\f2replstr\f1]\^
Same as \f4\-I\f1 except that
.B "{\|}"
is assumed for
.I replstr\^
if omitted. The \f4\-I\f1 and \f4\-i\f1 options are mutually
exclusive; the last one specified takes effect.
.TP 10
.BI \-n number\^
Execute
.I command\^
using as many standard input arguments as possible, up to
.I number\^
arguments maximum.
Fewer arguments will be used if their total size is greater than
.I size\^
characters, and for the last invocation if there are fewer than
.I number\^
arguments remaining.  In any case, a maximum of 1024 arguments will be
passed per command invocation.
This is further reduced by any extra command
arguments given on the xargs command line.
If option
.B \-x
is also coded, each
.I number\^
arguments must fit in the
.I size\^
limitation, else
.I xargs\^
terminates execution. The \f4\-L\f1, \f4\-l\f1 and \f4\-n\f1
options are mutually exclusive; the last one specified takes
effect.
.TP 10
.B \-t
Trace mode: The
.I command\^
and each constructed argument list are echoed to file descriptor 2
just prior to their execution.
.TP 10
.B \-p
Prompt mode: The user is asked whether to execute
.I command\^
each invocation. Trace mode (\c
.B \-t\c
) is turned on to print the command instance to be executed,
followed by a \f3?.\|.\|.\fP prompt.
A reply of
.B y
(optionally followed by anything) will execute the command; anything else, including
just a carriage return, skips that particular invocation of
.IR command .
.TP 10
.B \-x
Causes
.B xargs
to terminate if any argument list would be greater than
.I size\^
characters;
.B \-x
is forced by the options
.B \-i
and
.BR \-l .
When neither of the options
.BR \-i ,
.BR \-l ,
or
.B \-n
are coded, the total length of all arguments must be within the
.I size\^
limit.
.TP 10
.BI \-s size\^
Invoke command using as many standard input arguments as possible 
yielding a command line length less than \f2size\f1 (a positive
decimal integer) bytes. Fewer arguments will be used if the total
number of arguments (lines) exceeds that specified by the 
\f4\-n\f1 (\f4\-L\f1) option or end of file is encoutered on
standard input before \f2size\f1 bytes are accumulated.
The maximum
.I size\^
depends partly on the size of the environment, but is limited to
a maximum of the kernel value of
.I ncargs
(the default as shipped is 20480), including room
for pointers. If
.B \-s
is not coded, the maximum is taken as the default.
.TP 10
\f4\-E\f2eofstr\f1
Specify a logical end-of-file string to replace the default underscore. 
.BI xargs\^
reads standard input until either end-of-file or the logical 
\f3\s-1EOF\s+1\fP string is encountered.
.TP 10
\f4\-e\f1[\f2eofstr\f1]
Same as \f4\-E\f1 except that
the option
\f3\-e\fP with no
.I eofstr\^
coded turns off the logical \f3\s-1EOF\s+1\fP string capability
(underbar is taken literally).
.PP
Note: The \f4\-e\f1, \f4\-i\f1 and \f4\-l\f1 take optional option-arguments
that cannot be separate arguments.
.PP
.B xargs
will terminate if either it receives a return code of
.B \-1
from,
or if it cannot execute,
.IR command .
When
.I command\^
is a shell program,
it should explicitly
.I exit\^
(see
.IR sh (1))
with an appropriate value to avoid accidentally returning with
.BR \-1 .
.SH EXAMPLES
The following will move all files from directory $1 to directory $2, and echo each move
command just before doing it:
.PP
.RS 10
ls \|$1 \|| \|xargs \|\-i \|\-t \|mv \|$1/{\|} \|$2/{\|}
.RE
.PP
or
.RS 10
ls \|$1 \|| \|xargs \|\-I /{\|} \|\-t \|mv \|$1/{\|} \|$2/{\|}
.RE
.PP
The following will combine the output of the parenthesized commands onto one line,
which is then echoed to the end of file \f2log\fP:
.PP
.RS 10
(logname; \|date; \|echo \|$0 \|$\(**) \|| \|xargs \|>>log
.RE
.PP
The user is asked which files in the current directory are to be archived
and archives them into \f2arch\fP (1.) one at a time, or (2.) many at a time.
.PP
.RS 10
1.\ \|\ \|ls \|| \|xargs \|\-p \|\-l \|ar \|r \|arch
.br
2.\ \|\ \|ls \|| \|xargs \|\-p \|\-l \|| \|xargs \|ar \|r \|arch
.RE
.PP
The following will execute
.IR diff "(1)"
with successive
pairs of arguments originally typed as shell arguments:
.PP
.RS 10
echo \|$\(** \|| \|xargs \|\-n2 \|diff
.RE
.SH DIAGNOSTICS
\f4xargs\f1
exits with 0 when all invocations of command returned exit status zero.
\f4xargs\f1 exits with 126 when the command specified was found but 
could not be invoked. \f4xargs\f1 exits with 127 when the command specified
could not be found.
.SH "SEE ALSO"
sh(1).
.Ee

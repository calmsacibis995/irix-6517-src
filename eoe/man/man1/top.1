.\" NOTE:  changes to the manual page for "top" should be made in the
.\"        file "top.X" and NOT in the file "top.1".
.nr N -1
.nr D 4
.TH TOP 1 Local
.UC 4
.SH NAME
top \- display and update information about the top cpu processes
.SH SYNOPSIS
.B top
[
.B \-SbiInqTu
] [
.BI \-d count
] [
.BI \-s time
] [
.BI \-o field
] [
.BI \-U username
] [
.I number
]
.SH DESCRIPTION
.\" This defines appropriate quote strings for nroff and troff
.ds lq \&"
.ds rq \&"
.if t .ds lq ``
.if t .ds rq ''
.\" Just in case these number registers aren't set yet...
.if \nN==0 .nr N 10
.if \nD==0 .nr D 5
.I Top
displays the top
.if !\nN==-1 \nN
processes on the system and periodically updates this information.
.if \nN==-1 \
\{\
If standard output is an intelligent terminal (see below) then
as many processes as will fit on the terminal screen are displayed
by default.  Otherwise, a good number of them are shown (around 20).
.\}
Raw cpu percentage is used to rank the processes.  If
.I number
is given, then the top
.I number
processes will be displayed instead of the default.
.PP
.I Top
makes a distinction between terminals that support advanced capabilities
and those that do not.  This
distinction affects the choice of defaults for certain options.  In the
remainder of this document, an \*(lqintelligent\*(rq terminal is one that
supports cursor addressing, clear screen, and clear to end of line.
Conversely, a \*(lqdumb\*(rq terminal is one that does not support such
features.  If the output of
.I top
is redirected to a file, it acts as if it were being run on a dumb
terminal.
.SH OPTIONS
.TP
.B \-S
Show system processes in the display.  The definition of system
processes is system dependent (See below).
.TP
.B \-b
Use \*(lqbatch\*(rq mode.  In this mode, all input from the terminal is
ignored.  Interrupt characters (such as ^C and ^\e) still have an effect.
This is the default on a dumb terminal, or when the output is not a terminal.
.TP
.B \-i
Use \*(lqinteractive\*(rq mode.  In this mode, any input is immediately
read for processing.  See the section on \*(lqInteractive Mode\*(rq
for an explanation of
which keys perform what functions.  After the command is processed, the
screen will immediately be updated, even if the command was not
understood.  This mode is the default when standard output is an
intelligent terminal.
.TP
.B \-I
Do (or do not) display idle processes (toggle).
By default, top displays only active (ready to run or running
on a processor) processes.
.TP
.B \-n
Use \*(lqnon-interactive\*(rq mode.  This is indentical to \*(lqbatch\*(rq
mode.
.TP
.B \-q
Renice
.I top
to -20 so that it will run faster.  This can be used when the system is
being very sluggish to improve the possibility of discovering the problem.
This option can only be used by root.
.TP
.B \-T
List data for individual kernel threads.
Normally the information presented is a summation across all threads
of the process.
This is of use when examining POSIX threaded processes.
.TP
.B \-u
Do not take the time to map uid numbers to usernames.  Normally,
.I top
will read as much of the file \*(lq/etc/passwd\*(rq as is necessary to map
all the user id numbers it encounters into login names.  This option
disables all that, while possibly decreasing execution time.  The uid
numbers are displayed instead of the names.
.TP
.BI \-d count
Show only
.I count
displays, then exit.  A display is considered to be one update of the
screen.  This option allows the user to select the number of displays he
wants to see before
.I top
automatically exits.  For intelligent terminals, no upper limit
is set.  The default is 1 for \*(lqbatch\*(rq mode and dumb terminals.
.TP
.BI \-s time
Set the delay between screen updates to
.I time
seconds.  The default delay between updates is \nD seconds.
.TP
.BI \-o field
Sort the process display area on the specified field.  The field name is
the name of the column as seen in the output, but in lower case.  Likely
values are \*(lqcpu\*(rq, \*(lqsize\*(rq, \*(lqres\*(rq, and \*(lqtime\*(rq,
but may vary on different operating systems.  Note that
not all operating systems support this option.
.TP
.BI \-U username
Show only those processes owned by
.IR username .
This option currently only accepts usernames and will not understand
uid numbers.
.PP
Both
.I count
and
.I number
fields can be specified as \*(lqinfinite\*(rq, indicating that they can
stretch as far as possible.  This is accomplished by using any proper
prefix of the keywords
\*(lqinfinity\*(rq,
\*(lqmaximum\*(rq,
or
\*(lqall\*(rq.
The default for
.I count
on an intelligent terminal is, in fact,
.BI infinity .
.PP
The environment variable
.B TOP
is examined for options before the command line is scanned.  This enables
a user to set his or her own defaults.  The number of processes to display
can also be specified in the environment variable
.BR TOP .
The options
.BR \-I ,
.BR \-S ,
and
.B \-u
are actually toggles.  A second specification of any of these options
will negate the first.  Thus a user who has the environment variable
.B TOP
set to \*(lq\-I\*(rq may use the command \*(lqtop \-I\*(rq to
see only active processes.
.SH "INTERACTIVE MODE"
When
.I top
is running in \*(lqinteractive mode\*(rq, it reads commands from the
terminal and acts upon them accordingly.  In this mode, the terminal is
put in \*(lqCBREAK\*(rq, so that a character will be
processed as soon as it is typed.  Almost always, a key will be
pressed when
.I top
is between displays; that is, while it is waiting for
.I time
seconds to elapse.  If this is the case, the command will be
processed and the display will be updated immediately thereafter
(reflecting any changes that the command may have specified).  This
happens even if the command was incorrect.  If a key is pressed while 
.I top
is in the middle of updating the display, it will finish the update and
then process the command.  Some commands require additional information,
and the user will be prompted accordingly.  While typing this information
in, the user's erase and kill keys (as set up by the command
.IR stty )
are recognized, and a newline terminates the input.
.PP
These commands are currently recognized (^L refers to control-L):
.TP
.B ^L
Redraw the screen.
.IP "\fBh\fP\ or\ \fB?\fP"
Display a summary of the commands (help screen).
.TP
.B q
Quit
.IR top.
.TP
.B d
Change the number of displays to show (prompt for new number).
Remember that the next display counts as one, so typing
.B d1
will make
.I top
show one final display and then immediately exit.
.TP
.B n or #
Change the number of processes to display (prompt for new number).
.TP
.B s
Change the number of seconds to delay between displays
(prompt for new number).
.TP
.B k
Send a signal (\*(lqkill\*(rq by default) to a list of processes.  This
acts similarly to the command
.IR kill (1)).
.TP
.B r
Change the priority (the \*(lqnice\*(rq) of a list of processes.
This acts similarly to the command
.IR renice (8)).
.TP
.B u
Display only processes owned by a specific username (prompt for username).
If the username specified is simply \*(lq+\*(rq, then processes belonging
to all users will be displayed.
.TP
.B e
Display a list of system errors (if any) generated by the last
.BR k ill
or
.BR r enice
command.
.TP
.B i
(or
.BR I)
Toggle the display of idle processes.
.SH "BATCH MODE"
In \*(lqbatch\*(rq mode, all input from the terminal is ignored.
Interrupt characters (such as ^C and ^\e) still have an effect.
This is the default on a dumb terminal, or when the output is not a terminal.
.PP
By default in \*(lqbatch\*(rq mode,
only one screen is displayed before
.I top
automatically exits.
.PP
It should be noted that much of the information displayed by
.I top
is based on calculations across the interval between the previous
screen and the current screen.
If only one screen is displayed, as is the the default for
\*(lqbatch\*(rq mode, then there is no previous screen to use as a base,
so some of the information will not be available on the first screen.
For example, it will only display information on processes that are
currently running, and some of the percentages may be zero.
.PP
To get more useful information using \*(lqbatch\*(rq mode,
it is recommended that more than one screen be requested.
For example, the command "top -b -d2" will display two screens of information.
The second screen will contain more useful information than the first.
.SH "THE DISPLAY"
The actual display varies depending on the specific variant of Unix
that the machine is running.  This description may not exactly match
what is seen by top running on this particular machine.  Differences
are listed at the end of this manual entry.
.PP
The top few lines of the display show general information
about the state of the system, including
the last process id assigned to a process (on most systems),
the three load averages,
the current time,
the number of existing processes,
the number of processes in each state
(sleeping, running, starting, zombies, and stopped),
and a percentage of time spent in each of the processor states
(excuting in user mode, executing in kernel mode, idle, etc).
It also includes information about physical and virtual memory allocation.
.PP
The remainder of the screen displays information about individual
processes.  This display is similar in spirit to
.IR ps (1)
but it is not exactly the same.  PID is the process id,
PGRP is the process group id,
USERNAME is the name of the process's owner (if
.B \-u
is specified, a UID column will be substituted for USERNAME),
PRI is the current priority of the process,
SIZE is the total size of the process (text, data, and stack),
RES is the current amount of resident memory (both SIZE and RES are
given in kilobytes),
STATE is the current state (one of \*(lqsleep\*(rq, \*(lqWAIT\*(rq,
\*(lqrun\*(rq, \*(lqidl\*(rq, \*(lqzomb\*(rq, or \*(lqstop\*(rq),
TIME is the number of system and user cpu seconds that the process has used,
WCPU, when displayed, is the weighted cpu percentage (this is the same
value that
.IR ps (1)
displays as CPU),
CPU is the raw percentage and is the field that is sorted to determine
the order of the processes, and
COMMAND is the name of the command that the process is currently running
(if the process is swapped out, this column is marked \*(lq<swapped>\*(rq).
.SH NOTES
The \*(lqABANDONED\*(rq state (known in the kernel as \*(lqSWAIT\*(rq) was
abandoned, thus the name.  A process should never end up in this state.
.SH AUTHOR
William LeFebvre, EECS Department, Northwestern University
.SH ENVIRONMENT
.DT
TOP	user-configurable defaults for options.
.SH FILES
.DT
/dev/kmem		kernel memory
.br
/dev/mem		physical memory
.br
/etc/passwd	used to map uid numbers to user names
.br
/vmunix		system image
.SH BUGS
The default for
.B \-I
is "do not show idle processes".
This may be confusing if you're expecting
.I top
to display a screenful of processes by default.
To appease folks who can't stand that behavior, I have added the
ability to set \*(lqdefault\*(rq options in the environment variable
.B TOP
(see the OPTIONS section).  Those who want idle processes displayed
need only set the environment variable
.B TOP
to \*(lq\-I\*(rq.
.PP
The command name for swapped processes should be tracked down, but this
would make the program run slower.
.PP
As with
.IR ps (1),
things can change while
.I top
is collecting information for an update.  The picture it gives is only a
close approximation to reality.
.SH "SEE ALSO"
kill(1),
ps(1),
stty(1),
mem(4),
renice(8)
.SH "SGI/IRIX NOTES"
Multiprocessor support was added. Both number of CPUs and the CPU-ID
for running processes are shown.
On MP systems the sum of %CPU (or %WCPU) numbers may be higher than 100%
(one full CPU utilization) but never higher than 100 * the number of CPUs.
.PP
The IRIX implementation doesn't
.IR nlist(2)
the kernel to get addresses
of symbols which makes it less system dependent. All values are
retrieved using the
.IR sysmp(2),
.IR syssgi(2),
and
.IR proc(4)
interfaces.
The same executable should run on any SGI hardware
(Uniprocessor, SMP, and S2MP) running IRIX 6.2 and up.
.PP
"last pid" is not supported.
.PP
A process is considered to be a "system" process if it has uid=0
and ppid=1. This is a compromise for the sake of backward compatibility.
In new IRIX systems many of the traditional "system processes" are
implemented either within the kernel as threads, or as real-time
processes.
.PP
System processes display can be toggled interactively using the 'S' key.
.PP
Idle processes display can be toggled interactively using the 'i' key.
.PP
Memory sizes are followed by their units: K (Kilobytes), M (Megabytes),
G (Gigabytes) or T (Terabytes).
.PP
The CPU states are sampled every clock tick
and provide a "best estimate" of the system CPU activity
summed across all processors. On IRIX they are:
.PP
.nf
		idle 	the cpu was idle and not waiting for anything
		usr  	the cpu was executing some user mode code
		ker  	the cpu was executing some kernel mode code
		wait 	the cpu was idle with some i/o outstanding
		xbrk 	the cpu was executing code in a fault path
		intr 	the cpu was handling an interrupt
.fi
.PP
For example: a high "wait" number means that the
system is I/O bound. A close to 100% "usr" number indicates
CPU bound processes with little system activity.
"xbrk" and "intr" should be close to 0.0% under normal
circumstances. Larger numbers may indicate pathologically
high low-level driver activity, memory shortage (high VM activity) etc.
in which case
.IR osview(1)
should give a better picture of the system state.

.PP
The PRI (priority) field supports advanced IRIX real-time and
scheduling schemes using the following formats where <pri> is
a decimal priority number:
.PP
.nf
		+<pri>		Real-Time
		<pri>		Normal (timeshared)
		g<pri>		Gang scheduled
		bc			Batch Critical
		b			Batch
		w			Weightless
.fi
.PP
On pre 6.4 systems the supported formats are:
.PP
.nf
		+<pri> 		Real-Time
		<pri>		Normal (timeshared)
		b<pri>		Batch
.fi
.PP
For more details on new IRIX scheduling and priorities, see
.IR npri(1),
.IR nice(2),
.IR realtime(5),
and all the
.IR sched_XXX(2)
services.
.PP
%WCPU (weighted CPU) is a decaying average of %CPU
over a longer period than just the last sampling period. For short
running processes %WCPU should be close to %CPU as the two values
only diverge over time.
.PP
This version of top supports sorting by various fields via the
command line -o (order) option or the 'o' interactive option.
The aliases 'mem' (equivalent to 'size'), and 'rss' (equivalent to 'res')
are accepted for friendliness.
In addition, the IRIX version of top understands prefixes of
field names, like '-os', instead of '-osize', to be used.
In case of prefix ambiguities, the first one to match will be used.
Use 'h' (help) to list the supported orders.
.PP
The old IRIX
.IR gr_top
is now implemented as a perl script on top of the new
.IR top
to reduce bloat. In addition to the -Bcolor option to set
the background color, you may now control the foreground color
with -Fcolor, and the title bar color with -Tcolor. Colors
are either RGB values or Xwindow color names, e.g.
.IR purple.
(See
.IR showrgb
for legal color names.)
.PP
SGI specific "See Also" should include:
.IR osview(1),
.IR npri(1),
.IR realtime(5),
and
.IR schedctl(2).
.PP
Several more sophisticated performance tools are optionally provided
by SGI notably PCP (the Performance CoPilot).
.PP
Unlike other
.IR top
versions, the IRIX version should support thousands of processors and
an even larger number of processes.  Thus it avoids pre-allocating
a maximum size for process data.  In case the number of processes
grows too far a new initialization of data structures is performed
by the program restarting itself.  This restarting forgets any
interactive settings and may cause a change in the Weighted CPU%
averages.  This should be an extremely rare occurence but should
be noted here.

.SH "CREDITS"
Original porting to SGI/IRIX 5.x was done by Sandeep Cariapa.
Later enhancements and further IRIX ports by Larry McVoy,
John Schimmel, and Ariel Faigon.


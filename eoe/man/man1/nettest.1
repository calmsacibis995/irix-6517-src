'\"macro stdmacro
'\"
'\" Copyright 1992 Cray Research, Inc.
'\" All Rights Reserved.
'\"
'\"
'\" Permission to use, copy, modify and distribute this software, in
'\" source and binary forms, and its documentation, without fee is
'\" hereby granted, provided that:  1) the above copyright notice and
'\" this permission notice appear in all source copies of this
'\" software and its supporting documentation; 2) distributions
'\" including binaries display the following acknowledgement:  ``This
'\" product includes software developed by Cray Research, Inc.'' in
'\" the documentation or other materials provided with the distribution
'\" and in all advertising materials mentioning features or use of
'\" this software; 3) the name Cray Research, Inc. may not be used to
'\" endorse or promote products derived from this software without
'\" specific prior written permission; 4) the USMID revision line and
'\" binary copyright notice are retained without modification in all
'\" source and binary copies of this software; 5) the software is
'\" redistributed only as part of a bundled package and not as a
'\" separate product (except that it may be redistributed separately if
'\" if no fee is charged); and 6) this software is not renamed in any
'\" way and is referred to as Nettest.
'\"
'\" THIS SOFTWARE IS PROVIDED AS IS AND CRAY RESEARCH, INC.
'\" DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
'\" ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
'\" PARTICULAR PURPOSE.  IN NO EVENT SHALL CRAY RESEARCH, INC. BE
'\" LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY
'\" DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
'\" WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
'\" ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
'\" PERFORMANCE OF THIS SOFTWARE.
'\"
.TH NETTEST 1
.SH NAME
\*Cnettest\f1, \*Cnettestd\f1 \- Performs client and server functions for timing data throughput
.SH SYNOPSIS
.QS
\*C/etc/nettest\f1
\%[\*C-c\f1]
\%[\*C-C\f1]
\%[\*C-d\f1]
\%[\*C-f\f1]
\%[\*C-F\f1]
\%[\*C-h\f1]
\%[\*C-b\f1\ \f2bufsize\f1]
\%[\*C-S\f1\ \f2tos\f1]
\%[\*C-n\f1\ \f2conns\f1]
\%[\*C-p\f1\ \*Ctcp\f1|\*Cudp\f1|\*Ciso\f1]
\%[\*C-s\f2n\f1]
\%[\*C-m\f1]
\%[\*C-w\f1]
\%[\f2host\f1\ [\f2count\f1\ [\f2size\f1\ [\f2port\f1]]]]
.br
\*C/etc/nettest\f1
\%[\*C-c\f1]
\%[\*C-C\f1]
\%[\*C-d\f1]
\%[\*C-f\f1]
\%[\*C-h\f1]
\%[\*C-b\f1\ \f2bufsize\f1]
\%\*C-p\ unix\f1|\*Cunixd\f1|\*Cpipe\f1
\%[\*C-n\f1\ \f2conns\f1]
\%[\*C-w\f1]
\%[\f2count\f1\ [\f2size\f1\ [\f2filename\f1]]]
.br
\*C/etc/nettest\f1
\%[\*C-c\f1]
\%[\*C-C\f1]
\%[\*C-d\f1]
\%[\*C-f\f1]
\%[\*C-h\f1]
\%[\*C-b\f1\ \f2bufsize\f1]
\%\*C-p\ file\f1\ \f2writefile\ readfile\f1
\%[\f2count\f1\ [\f2size\f1]]
.br
\*C/etc/nettest\f1
\%\*C-V\f1
.sp
\*C/etc/nettestd\f1
\%[\*C-d\f1]
\%[\*C-p\ tcp\f1|\*Cudp\f1|\*Ciso\f1]
\%[\f2port\f1]
.br
\*C/etc/nettestd\f1
\%[\*C-d\f1]
\%\*C-p\ unix\f1|\*Cunixd\f1|\*Cpipe\f1
\%[\f2filename\f1]
.br
\*C/etc/nettestd\f1
\%[\*C-d\f1]
\%\*C-p\ file\f1\ \f2readfile\ writefile\f1
.br
\*C/etc/nettestd\f1
\%\*C-V\f1
.QE
.SH DESCRIPTION
The \*Cnettest\f1 and \*Cnettestd\f1 commands invoke client
and server programs that are used for timing data throughput of various
methods of interprocess communication.  For \s-1TCP\s+1 and \s-1OSI\s+1
connections,
the \*Cnettest\f1 program establishes a connection with
the \*Cnettestd\f1 program, and then it does \f2count\fP writes
of \f2size\fP bytes, followed by \f2count\fP reads of
\f2size\fP bytes.  For \s-1UDP\s+1, the \*Cnettest\f1 program performs
only writes; reads are not performed.
The \*Cnettestd\f1 program, if used with \s-1UDP\s+1 connections, reads
the data packets and prints a message for each data packet it
receives.
The number and size of the reads and writes may not
correlate with the number and size of the actual data packets
that are transferred; it depends on the protocol that is chosen.
If you append an optional \*Ck\f1 (or \*CK\f1) to
the \f2size\fP, \f2count\fP, or \f2bufsize\fP value,
the number specified is multiplied by 1024.
.PP
The \*Cnettest\f1 and \*Cnettestd\f1 commands accept the following
arguments:
.QS
.TP
\*C-c\fP
To specify that the data must be checked
to verify its accuracy, use the \*C-c\f1 flag.
.QE
Because this is done by comparing one character at a time,
using the \*C-c\fP option can cause noticeable throughput degradation.
The data is verified by filling up the data buffer with a 32-byte repeating
pattern of all the lower case letters and the first 6 upper case
letters of the alphabet.
This option is useful for detecting data that has been corrupted.
If there is a problem with lost or duplicated data, this option
may generate a large number of error messages.
.QS
.TP
\*C-C\fP
Similar to \*C-c\f1, except that the data is written out as
a sequence of sequential 64-bit numbers in network byte order.
.QE
Because this is done by comparing one word at a time,
it is slightly faster than the \*C-c\f1 option, but it
can still cause noticeable throughput degradation.
This option is useful for detecting data that has been lost
or duplicated, as it resynchronizes itself when an error is
encountered.  However, if the size of the lost or duplicated
data is not an even multiple of 8, it may not resynchronize
properly.
.QS
.TP
\*C-d\fP
For \s-1TCP\s+1, \s-1UDP\s+1, and \s-1OSI\s+1 connections, the \*C-d\f1 flag
turns on the socket-level debugging flag.
.QE
.br
.ift .ne 7vs
.br
.QS
.TP
\*C-f\fP
Indicates that a full-size read must be issued.
.QE
Usually, when a read returns a short count,
both \*Cnettest\f1 and \*Cnettestd\f1 issue a
read for the remaining data for that buffer,
whether or not a short count was received.
(The total number of bytes is not changed.)
.QS
.TP
\*C-F\fP
For \s-1TCP\s+1 connections,
the \*C-F\f1 flag turns on the \*CTCP_NODELAY\f1 socket option.
.QE
The \s-1TCP\s+1 code in the kernel usually tries to send only
full-sized packets over the network; this is accomplished
by delaying some writes until a full packet size
accumulates.  The \*C-F\f1 flag disables this algorithm.
.QS
.TP
\*C-h\fP
To turn on hash marks to be printed,
.QE
use the \*C-h\f1 flag.
Each time a complete buffer is written or read, a hash mark is printed.
If a read returns a partial count and the \*C-f\f1 flag
is not specified, a period is printed.
If the \*C-f\f1 flag is specified,
a hash mark is printed each time a read completes,
regardless of the amount of data read.
.QS
.TP
\*C-b\fP \f2bufsize\fP
This option applies only to \*Cnettest\f1.
For \s-1TCP\s+1 and \s-1UDP\s+1 connections, use the \*C-b\f1 flag 
to specify the amount of kernel buffering allowed.
.QS
.TP
\*C-b\fP
This option applies only to \*Cnettestd\f1.
Run as a background daemon.  In this mode, \*Cnettestd\f1
will detach itself from its controlling terminal, and put itself
into the background.
In addition, all error messages are logged
via \*Csyslog\f1(3), instead of via \*Cperror\f1(3).
Note that if both the \*C-C\f1 and \*C-v\f1 options are used
in conjunction with the \*C-b\f1 option, any errors that are
detected in the data stream will not be reported.
.QE
.QS
.TP
\*C-S \f2tos\fP
For \s-1TCP\s+1 and \s-1UDP\s+1 connections, the \*C-S\f1 option
can be used to specify the Type-of-Service (\s-1TOS\s+1) value for the
connection. (Not Supported)
.QE
A check for the symbolic name \f2tos\f1 in \*C/etc/iptos\f1
determines the actual order.
(The \*C-t\f1 \f2tos\f1 option is a valid synonym, for historical
compatibility.)
.QS
.TP
\*C-n\fP \f2nconns\fP
For \s-1TCP\s+1, \s-1UNIX\s+1 and \s-1ISO\s+1 connections,
the \*C-n\f1 option specifies the number of
simultaneous connections to be opened.
.QE
For each connection, a subprocess is created.
Each subprocess, after establishing a connection to the
server and negotiating the options, suspends itself.
When all the connections have been established, a continue
signal is sent to all the subprocesses to start them running
at the same time.
As each subprocess completes, it returns its timing results,
and returns that information to the main process, which
then prints out the individual timing information.
After all the subprocesses have completed, aggregate timing
results given.
The aggregate timings are based on the total amount of data
transferred by all the subprocesses, the start time of the first
subprocess to begin writing its data to its server, and end time
of the last subprocess to complete reading its data from its server.
The synchronization information shows when each subprocess began running,
the duration of the data transfer for each subprocess, and
ending time of each subprocess.
These times are relative to the start time of
the first subprocess to began running.
.br
.ne 10v
.QS
.TP
\*C-p \f2protocol\fP
Specifies the protocol in use.
.QE
The valid values for \f2protocol\f1 are
\*Ctcp\f1, \*Cudp\f1, \*Ciso\f1, \*Cunix\f1, \*Cunixd\f1, \*Cpipe\f1, and \*Cfile\f1. 
.sp
If the \*C-p\f1 option is not specified, \*Ctcp\f1 is the default.
.sp
The \*Cunix\f1 protocol uses \s-1UNIX\s+1 domain stream sockets;
\f2filename\f1 can be specified to override
the default file name \*Cnt_socket\f1.
.sp 
The \*Cunixd\f1 protocol uses \s-1UNIX\s+1 domain datagram sockets;
\f2filename\f1 can be specified to override
the default file name \*Cnt_dsocket\f1.
.sp 
For \*Cpipe\f1 protocol connections, two named pipes are created when
you specify \f2filename\f1, one for
reading and one for writing.  The \*Cnettest\f1 program creates
the names of these files by appending \*CR\f1 and \*CW\f1
to \f2filename\f1.  The default names are \*Cnt_pipeR\f1 and
\*Cnt_pipeW\f1.
.sp 
For \*Cfile\f1 protocols, \f2writefile\fP is the name of the special file
to which information is written; \f2readfile\fP is the name of the special file
that is read.  The order of \f2writefile\fP
and \f2readfile\fP is reversed between \*Cnettest\f1 and \*Cnettestd\f1.
This allows the same file names to be specified in the same order
for both \*Cnettest\f1 and \*Cnettestd\f1,
because the file to which \*Cnettest\f1
writes is the file from which \*Cnettestd\f1 reads, and vice versa.
The intent of this option is to allow \*Cnettest\f1 to be run
across arbitrary devices that have a character-device interface that
can be accessed just by opening up a special character file for
reading or writing.  It is not intended for reading or writing to
a regular file.
.QS
.TP
\*C-s\f2n\fP
Increases the maximum \s-1TCP\s+1 window by a factor of 2^\f2n\f1;
1 \(<= \f2n\f1 \(<= 14.
.QE
.QS	
.TP
\*C-m\fP
Indicates that for datagram connections
(\*C-p udp\f1 and \*C-p unixd\f1) that \*Cnettest\f1
should use the \*Csendmsg\f1 system call
insted of the \*Csendto\f1 system call (see \*Csend\f1(2)),
and that \*Cnettestd\f1
should use the \*Crecvmsg\f1 system call
insted of the \*Crecvfrom\f1 system call (see \*Crecv\f1(2)),
For other protocols this option is ignored.
.QE
.QS
.TP
\*C-w\fP
Use the MSG_WAITALL flag when calling \*Crecv\f1(2).
This allows the kernel to accumulate incoming data so that
the read buffer is filled before returning control to
the application.
The use of this option negates the
need for the \*C-f\f1 option.
.QE
.QS
.TP
\*C-V\fP
Print out information about the version of the program.
.QE
.QS
.TP
\f2host\fP
For \s-1TCP\s+1, \s-1UDP\s+1, and \s-1OSI\s+1 connections, 
\f2host\f1 is the name
of the machine on which the server is running.
.QE
If this is omitted or specified as \*C-\f1, the
name that \*Cgethostname\f1(2) returns is used.
.QS
.TP
\f2count\f1
Specifies the number of read or write operations. 
.QE
A value of \*C-\f1
indicates that the default value must be used.  The default value is
\*C100\f1.
.QS
.TP
\f2size\f1
Specifies the number of bytes to be read or written. 
.QE
A value of \*C-\f1 indicates that the default value must be used.
The default value is \*C4096\f1.
.QS
.TP
\f2port\fP
For \s-1TCP\s+1 and \s-1UDP\s+1 connections, specify \f2port\fP 
to select an alternate port number.
.QE
The \f2port\fP must be a decimal number.
.PP
The output from \*Cnettest\f1 is timing information and a
histogram of the various sizes that the read operations returned.
System load affects the results because
all throughput times are calculated from wall-clock times.
The percentages listed for system and user times are
percentages of wall-clock time.
.PP
The write time is measured from the time
at which the application starts its first write until the time
it completes its last write.
The read time begins when the last write is complete and ends when
the last read is complete.
Because the kernel may buffer outgoing data,
if everything on the network is working correctly, it
is normal for the write times to be slightly faster than the
read times.  This difference in throughput represents the
amount of buffering in the kernel and the network round-trip
time.
The read and write time is measured from the time the first write
is started to the time the last read is completed; thus, if
the speed of the network is the same in both directions and
both machines have the same processing power and load,
the read and write times are
the most accurate.
.PP
The histogram output shows the sizes that
the read system calls return.
These may not have any correlation to the size and number
of packets that are actually sent and received over the network.
This is especially true for \s-1TCP\s+1 connections.
.SH FILES
.TP 30
\*C/etc/iptos\fP
\s-1IP\s+1 (\s-1TOS\s+1) database (TOS is not supported)
.TP
\*Cnt_socket\f1 and \*Cnt_dsocket\f1
Default name for stream and datagram \s-1UNIX\s+1 domain sockets
.TP
\*Cnt_pipeW\f1, \*Cnt_pipeR\f1
Default names for named pipes
.br
.ne 10v
.SH BUGS
The \*C-p pipe\f1, \*C-p unix\f1 and \*C-p unixd\f1 options create named pipes
and \s-1UNIX\s+1 domain sockets, respectively, that remain after
the programs exit.
.PP
If \*C-p pipe\f1 \f2filename\fP is specified and \f2filename\f1
is either a relative or absolute path name,
neither \*Cnettest\f1 nor \*Cnettestd\f1
insert the \*CW\f1 and \*CR\f1 before the final component
of the path name; they are always prepended to the entire
file name.
.br
.ift .ne 6vs
.br
.SH SEE ALSO
\*Cgethostname\f1(2), \*Crecv\f1(2), and \*Csend\f1(2) 
'\" Principal developer: D.Borman
.UI "USMID @(#)man/man1/nettest.1	80.16	11/05/92 16:06:59"
.FP

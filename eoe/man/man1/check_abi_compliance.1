'\"macro stdmacro
.TH check_abi_compliance 1
.SH NAME
\f4check_abi_compliance\f1 \- check abi compliance of an object file
.SH SYNOPSIS
\f4/usr/bin/check_abi_compliance [\-abidir \f2directory\f4]
.in +6
[\-liblist \f2library_list\f4] [\-required] [\-abi] \f2file\f1
.in -6
.SH DESCRIPTION
\f4check_abi_compliance\fP
checks an object file for abi compliance and
optionally displays references to routines which are not
part of the abi and required routines which are missing from
the object file.
.P
Note however that specifying an object file (.o) to 
\f4check_abi_compliance\fP
may not be very meaningful since symbols may be linked from
other libraries and .o files at link time. It is a better
idea to check an executable for abi compliance.
.TP 5
\f4\-abidir \f2directory\f1
This specifies a directory which contains files which
specify abi routines.  The filenames are of the form
LIBRARY.names.
.TP
\f4\-liblist \f2library_list\f1
This specifies a list of shared objects on which this
object file depends.  This defaults to the liblist of
the object file.
.TP
\f4\-required\f1
Display only missing required routines.  An example of
this is \f4_end\fP.
.TP
\f4\-abi\f1
Display only undefined references which are not part of
the abi.
.RE
.SH FILES
/usr/lib/abi/data	directory containing ABI entry points
.SH SEE ALSO
check_abi_interface(1), check_for_syscalls(1), elfdump(1).
'\".so /pubs/tools/origin.sgi

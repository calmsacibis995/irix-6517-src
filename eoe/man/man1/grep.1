'\"macro stdmacro
.if n .pH xenix_compat/g1.grep @(#)grep	40.8 of 5/22/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.\" Copyright 1989, 1990 AT&T
.nr X
.if \nX=0 .ds x} GREP 1 "Essential Utilities" "\&"
.if \nX=1 .ds x} GREP 1 "Essential Utilities"
.if \nX=2 .ds x} GREP 1 "" "\&"
.if \nX=3 .ds x} GREP "" "" "\&"
.TH \*(x}
.SH NAME
\f4grep\f1 \- search a file for a pattern
.SH SYNOPSIS
\f4grep\f1
[\f4\-E\f1| \f4\-F\f1]
[\f4\-c\f1| \f4\-l\f1| \f4\-q\f1]
[\f4\-insvx\f1] \f4-e\f1 \f2pattern_list\f1[\f4\-f\f1
\f2pattern_file\f1]. . .[\f2file\f1 . . .]
.sp
\f4grep\f1
[\f4\-E\f1| \f4\-F\f1]
[\f4\-c\f1| \f4\-l\f1| \f4\-q\f1]
[\f4\-insvx\f1][\f4-e\f1 \f2pattern_list\f1\f4\-f\f1
\f2pattern_file\f1]. . .[\f2file\f1 . . .]
.sp
\f4grep\f1
[\f4\-E\f1| \f4\-F\f1]
[\f4\-c\f1| \f4\-l\f1| \f4\-q\f1]
[\f4\-insvx\f1] \f2pattern_list\f1[\f2file\f1 . . .]
.SH DESCRIPTION
The \f2grep\f1 utility searches the input files, selecting lines matching one 
or more patterns; the types of patterns are controlled by the options 
specified.  The patterns are specified by the \f4\-e\f1 option, \f4\-f\f1
option, or the \f2pattern_list\f1 operand. The \f2pattern_list\f1's value 
consists of one or more patterns separated by newline characters; the
\f2pattern_file\f1's contents consist of one or more patterns terminated by 
newline characters.  By default, an input line will be selected if any pattern,
treated as an entire basic regular expression (BRE) as described in the 
\f4regcomp\f1(5) man page under the section titled: 
\f2Basic Regular Expressions\f1, matches any part of the line; a null BRE 
will match every line. By default, each selected input line will be written 
to the standard output.
.sp
Regular expression matching will be based on text lines.  Since a newline 
character separates or terminates patterns (see the \f4\-e\f1 and \f4\-f\f1
options below), regular expressions cannot contain a newline character.
Similarly, since patterns are matched against individual lines of the input, 
there is no way for a pattern to match a newline character found in the input.
.PP
Command line options are:
.sp
.PP
.PD 0
.TP 8
\f4\-E\f1
Match using extended regular expressions. Treat each pattern specified as an 
ERE, as described in the \f4regcomp\f1(5) man page under the section titled:
\f2Extended Regular Expressions\f1.  If any entire ERE pattern matches an 
input line, the line will be matched. A null ERE matches every line.
.sp
.TP
\f4\-F\f1
Match using fixed strings.  Treat each pattern specified as a string instead 
of a regular expression. If an input line contains any of the patterns as a 
contiguous sequence of bytes, the line will be matched. A null string matches 
every line. 
.sp
.TP
\f4\-c\f1
Write only a count of selected lines to standard output.
.sp
.TP
\f4\-e\f1 \f2pattern_list\f1
Specify one or more patterns to be used during the search for input. Patterns 
in \f2pattern_list\f1 must be separated by a newline character.  A null 
pattern can be specified by two adjacent newline characters in 
\f2pattern_list\f1. Unless the \f4\-E\f1 or \f4\-F\f1 option is also specified,
each pattern will be treated as a BRE, as described in the \f4regcomp\f1(5) man
page under the section titled: \f2Basic Regular Expressions\f1. Multiple
\f4\-e\f1 and \f4\-f\f1 options are accepted by the \f2grep\f1 utility.  All 
of the specified patterns are used when matching lines, but the order of 
evaluation is unspecified.
.sp
.TP
\f4\-f\f1 \f2pattern_file\f1
Read one or more patterns from the file named by the pathname pattern_file.
Patterns in \f2pattern_file\f1 are terminated by a newline character.  A null 
pattern can be specified by an empty line in \f2pattern_file\f1.  Unless the 
\f4\-E\f1 or \f4\-F\f1 option is also specified, each pattern will be treated 
as a BRE, as described in the \f4regcomp\f1(5) man page under the section
titled: \f2Basic Regular Expressions\f1.
.sp
.TP
\f4\-i\f1
Perform pattern matching in searches without regard to case. See the 
\f4regcomp\f1(5) man page under the section titled: 
\f2Regular Expression General Requirements\f1.
.sp
.TP
\f4\-l\f1
Write only the names of files containing selected lines to standard output.
Pathnames are written once per file searched.  If the standard input is 
searched, a pathname of "(\f4standard input\f1)" will be written, in the 
POSIX locale.  In other locales, \f4standard input\f1 may be replaced by 
something more appropriate in those locales.
.sp
.TP
\f4\-n\f1
Precede each output line by its relative line number in the file, each file 
starting at line 1. The line number counter will be reset for each file 
processed.
.sp
.TP
\f4\-q\f1
Quiet.  Do not write anything to the standard output, regardless of matching 
lines. Exit with zero status if an input line is selected. 
.sp
.TP
\f4\-s\f1
Suppress the error messages ordinarily written for non-existent or unreadable 
files. Other error messages will not be suppressed.
.sp
.TP
\f4\-v\f1
Select lines not matching any of the specified patterns.  If the \f4\-v\f1
option is not specified, selected lines will be those that match any of the 
specified patterns.
.sp
.TP
\f4\-x\f1
Consider only input lines that use all characters in the line to match an 
entire fixed string or regular expression to be matching lines.
.sp
.PD
.SH OPERANDS
The following operands are supported:
.sp
.TP .5i
\f2pattern\f1
Specify one or more patterns to be used during the search for input.  This 
operand is treated as if it were specified as \f4\-e\f1 \f2pattern_list\f1.
.TP
\f2file\f1
A pathname of a file to be searched for the patterns.  If no \f2file\f1
operands are specified, the standard input will be used.
.SH STDIN
The standard input will be used only if no \f2file\f1 operands are specified.
See \f4INPUT FILES\f1.
.SH INPUT FILES
The input files must be text files.
.SH STDOUT
If the \f4\-l\f1 option is in effect, and the \f4\-q\f1 option is not, the 
following will be written for each file containing at least one selected 
input line:
.sp
.in+0.5i
"%s\\n", \f2file\f1
.in-0.5i
.sp
Otherwise, if more than one \f2file\f1 argument appears, and \f4\-q\f1 is not 
specified, the \f2grep\f1 utility will prefix each output line by:
.sp
.in+0.5i
"%s:", \f2file\f1
.in-0.5i
.sp
The remainder of each output line depends on the other options specified:
.sp
.TP .3i
\f4o\f1
If the \f4\-c\f1 option is in effect, the remainder of each output line will 
contain:
.sp
.in+0.5i
"%d\\n", \f2<count>\f1
.in-0.5i
.sp
.TP
\f4o\f1
Otherwise, if \f4\-c\f1 is not in effect and the \f4\-n\f1 option is in effect,
the following will be written to standard output:
.sp
.in+0.5i
"%d:", \f2<line number>\f1
.in-0.5i
.sp
.TP
\f4o\f1
Finally, the following will be written to standard output:
.sp
.in+0.5i
"%s", \f2<selected\-line contents>\f1
.in-0.5i
.sp
.SH STDERR
Used only for diagnostic messages.
.SH SEE ALSO
\f4ed\fP(1),
\f4egrep\fP(1),
\f4fgrep\fP(1),
\f4regcomp\fP(5),
\f4sed\fP(1),
\f4sh\fP(1)
.SH EXIT STATUS
Exit status is 0 if any matches are found,
1 if none, >1 for syntax errors or inaccessible files
(even if matches were found).
.SH "CONSEQUENCES OF ERRORS"
If the \f4\-q\f1 option is specified, the exit status will be zero if an 
input line is selected, even if an error was detected.
.sp
If the requested action cannot be performed on a file, 
\f4grep\f1 will issue a diagnostic message to standard error and
continue processing the next operand in sequence, but the
final exit status is returned as non-zero.
.SH APPLICATION USAGE
Care should be taken when using characters in \f2pattern_list\f1 that may 
also be meaningful to the command interpreter. It is safest to enclose the 
entire \f2pattern_list\f1 argument in single quotes:
.sp
.in+0.5i
'...'
.in-0.5i
.sp
The \f4\-e\f1 \f2pattern_list\f1 option has the same effect as the 
\f2pattern_list\f1 operand, but is useful when \f2pattern_list\f1 begins with 
the hyphen delimiter. It is also useful when it is more convenient to provide 
multiple patterns as separate arguments.
.sp
Multiple \f4\-e\f1 and \f4\-f\f1 options are accepted and \f2grep\f1 will use 
all of the patterns it is given while matching input text lines. (Note that 
the order of evaluation is not specified. If an implementation finds a null 
string as a pattern, it is allowed to use that pattern first, matching every 
line, and effectively ignore any other patterns.)
.sp
The \f4\-q\f1 option provides a means of easily determining whether or not a 
pattern (or string) exists in a group of files.  When searching several files, 
it provides a performance improvement (because it can quit as soon as it 
finds the first match) and requires less care by the user in choosing the 
set of files to supply as arguments (because it will exit zero if it finds a 
match even if \f2grep\f1 detected an access or read error on earlier file 
operands).
.SH EXAMPLES
.sp
.TP .5i
1.
To find all uses of the word Posix in a bunch of files where some of the
files cannot be opened due to permission restrictions:
.sp
.in+0.5i
\f2grep -q -n Posix /etc/*\f1
.in-0.5i
.sp
Note the above use of the \f2-q\f1 command line option to \f2grep\f1.  If the
\f2-q\f1 is not used in the above command line, then when the first file
is encountered that is not readable \f2grep\f1 will error terminate even if
there were some matches found.
.TP
2.
To find all uses of the word Posix (in any case) in file \f4text.mm\f1 and 
write with line numbers:
.sp
.in+0.5i
\f2grep -i -n posix text.mm\f1
.in-0.5i
.sp
.TP
3.
To find all empty lines in the standard input:
.sp
.in+0.5i
\f2grep ^$\f1
.br
or:
.br
\f2grep \-v .\f1
.in-0.5i
.sp
.TP
4.
Both of the following commands print all lines containing strings \f4abc\f1 or
\f4def\f1 or both:
.sp
.in+0.5i
\f2grep \-E 'abc\f1
.br
\f2def'\f1
.br
\f2grep \-F 'abc\f1
.br
\f2def'\f1
.in-0.5i
.sp
.TP
5.
Both of the following commands print all lines matching exactly \f4abc\f1 or 
\f4def\f1:
.sp
.in+0.5i
\f2grep \-E 'abc$\f1
.br
\f2^def$'\f1
.br
\f2grep \-F \-x 'abc\f1
.br
\f2def'\f1
.in-0.5i
.sp
.SH BUGS
If there is a line with embedded nulls,
\f4grep\fP
will only match up to the first null;
if it matches, it will print the entire line.
.\"	@(#)grep.1	6.2 of 9/2/83
.Ee

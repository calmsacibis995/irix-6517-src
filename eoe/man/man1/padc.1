'\"macro stdmacro
.nr X
.if \nX=0 .ds x} PADC 1 "" "\&"
.if \nX=1 .ds x} PADC 1 ""
.if \nX=2 .ds x} PADC 1 "" "\&"
.if \nX=3 .ds x} PADC "" "" "\&"
.TH \*(x}
.SH NAME
\f4padc\fP \- process activity data collector
.SH SYNOPSIS
\f4padc\fP
\f4\-qrsk\fP
[\f4\-I \f2len\f1]
[\f4\-h \f2pri\f1]
[\f4\-b \f2bufsz\f1]
[\f4\-t \f2time\f1]
.PP
\f4padc\fP
\f4\-qrsk\fP
[\f4\-i\fP]
[\f4\-I \f2len\f1]
[\f4\-h \f2pri\f1]
[\f4\-b \f2bufsz\f1]
[\f4\-t \f2time\f1]
.br
.ti +10
[\f4\-p \f2pid\f1]
.SH DESCRIPTION
\f4padc\fP
traces the activity of a process or group of processes
and writes the raw event data to the standard output.
System calls, scheduling actions, and disk i/o operations
are activities that \f4padc\fP can trace.
In addition to kernel-generated events, \f4padc\fP
collects any events created by processes through the
\f4rtmon_log_user_tstamp\fP(3) library routine.
.PP
\f4padc\fP is normally invoked by the \f4par\fP(1) program
which reads and formats its output.
\f4padc\fP can also be invoked by itself with the event data written
to a file for later processing by \f4par\fP or \f4rtmon-dump\fP(1).
.PP
By default,
\f4padc\fP
traces the requested events for all processes on a system.
System call event collection can be restricted to
a specific set of processes with one or more
.BR \-p
options.
If the
.B \-i
option is given, all future children of the specified processes will
also have their system calls traced.
If the
.B \-t
option is specified, \f4padc\fP will collect trace data for
a limited amount of time.
.PP
\f4padc\fP
collects trace data until: the time specified with the
.B \-t
option has elapsed,
\f4padc\fP
receives a
.B SIGINT
or a
.B SIGHUP
signal, or all processes to be traced have terminated.
.PP
The execution of traced processes is not affected when
\f4padc\fP is collecting event data.
.SH OPTIONS
.TP 10
.BI \-b " bufsz"
Use a buffer
.I bufsz
bytes large to buffer event data written to the standard output.
By default \f4padc\fP buffers up to 128 Kilobyte of data before
writing the data to the standard output.
Setting
.I bufsz
to zero causes \f4padc\fP to buffer its output as little as
possible.
.TP
.BI \-h " pri"
Run \f4padc\fP with a nondegrading realtime scheduling priority
.IR pri .
By default
.I padc
tries to use the same realtime scheduling priority that the system
event collection process uses.
This will only happen if 
.I padc
is started by the super-user.
.I padc
tries to match scheduling priority so that it can compete equally
for CPU time when doing system-wide event collection.
.TP
.B \-k
Trace all disk i/o operations on the system.
.TP
.BI \-I " max"
Set the maximum amount of data returned by the kernel for indirect
parameter values returned with a system call event.
Some system calls (e.g. \f4read\fP) have potentially lots of data
associated with them.
\f4padc\fP always collects direct system call arguments; this
option can be used to control the amount of indirect data.
If
.I max
is 0, then no indirect parameter values will be collected.
Otherwise
.I max
can be any value up to a maximum determined by the operating
system; by default 4096 bytes.
Note that setting this value to a large number
increases the probability of losing events.
.TP
.B \-i
Inherit system call tracing to future children of the
processes specified with
.B \-p
options.
.TP
.BI \-p " pid"
Enable system call event tracing for the specified
.IR pid .
This option may be specified multiple times to enable
system call tracing for multiple processes.
Processes specified with this
option must belong to the current user unless the user
has super-user privilege.
.TP
.B \-q
Trace scheduling events for all processes on the system.
.TP
.B \-r
Trace scheduling events for processes specified with the
.B \-p
and
.B \-i
options.  If no processes are specified, trace events for all processes on
the system.
.TP
.B \-s
Trace system calls for processes specified with the
.B \-p
and
.B \-i
options.
.TP
.BI \-t " time"
Collect data for a
.IR time -second
interval.
.SH NOTES
\f4padc\fP
reads its information from the \f4rtmond\fP(1) server process
on the machine where the traced processes are located.
The \f4rtmon-client\fP(1) program may be used to collect trace
data from an \f4rtmond\fP process on a different machine; the
only restriction is that you cannot (easily) collect system
call event data.
.PP
\f4padc\fP's main task is to merge multiple streams of event data
that are collected on multi-processor systems.
This work may require a significant amount of memory if the system
is heavily loaded because much event data may need to be buffered
to insure events are properly sorted by time.
For this reason \f4padc\fP
does not merge event data when doing system-wide event collection;
instead \f4par\fP recognizes that it needs to sort-merge the event
data when displaying event traces (since it typically is run after
the event data has been collected).
.PP
Event data collected by \f4padc\fP is time stamped with a
high resolution timer.
The resolution of this timer depends on the system hardware;
this value is recorded in the event stream so that post-processing
programs such as \f4par\fP can properly calculate time values.
.PP
To reduce system load, system call events generated by
\f4padc\fP itself are not recorded.
This can lead to some inexplicable gaps in the schedule trace.
.SH DIAGNOSTICS
.IR "Unable to contact rtmon service on local host" .
There is no \f4rtmond\fP server process running on the system.
Usually this is because the rtmond service has been disabled; consult
\f4chkconfig\fP(1M).
.PP
.IR "Cannot reach rtmon service on local host, access denied" .
The \f4rtmond\fP server process has been configured to deny access
to all users on the local host.
.PP
.IR "Unable to start data collection; server disallowed event collection" .
The \f4rtmond\fP server process has been configured to restrict
the set of events that may be collected and you have requested collection
of events that are unavailable.
.PP
.IR "Unable to start data collection; temporarily out of resources" .
The \f4rtmond\fP server process was unable to start event collection
because it ran out of system resources such as threads or memory.
.SH FILES
.ta \w'\f4/tmp/.rtmond_socket\fP    'u
.nf
\f4/dev/par\fP	for enabling system call tracing
\f4/tmp/.rtmond_socket\fP	UNIX domain socket for client connections
.fi
.SH "SEE ALSO"
\f4par\fP(1),
\f4rtmon-client\fP(1),
\f4rtmon-dump\fP(1),
\f4rtmond\fP(1),
\f4par\fP(7).

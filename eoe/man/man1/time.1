'\"macro stdmacro
.if n .pH g1.time @(#)time	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} TIME 1 "User Environment Utilities" "\&"
.if \nX=1 .ds x} TIME 1 "User Environment Utilities"
.if \nX=2 .ds x} TIME 1 "" "\&"
.if \nX=3 .ds x} TIME "" "" "\&"
.TH \*(x}
.SH NAME
time \- time a command
.SH SYNOPSIS
\fBtime\fR [ \fB\-f\fR \fIformat\fR | \fB\-l\fR | \fB\-p\fR ] command
.SH DESCRIPTION
The \fIcommand\fR is executed; after it exits, \fBtime\fR prints resource
usage statistics to standard error.  By default, this report includes the
elapsed time the command spent running, the CPU time spent in execution of
the command its reaped children, and the CPU time spent executing system
code by the command and its reaped children.  Times are reported in seconds.
.PP
\fBtime\fP may be directed to produce other resource usage reports via
command line options.  Additionally, the environment variable \fBTIME\fP
may be used to establish a default report format.  See below for a
description of how the contents of this report format specification are
interpreted.
.SH OPTIONS
.TP
\fB\-f\fR \fIformat\fR
Specify a resource usage report format.  See below for a description of how
the contents of this string are interpreted.
.TP
\fB\-l\fR
Use a long resource usage report that covers all resource usage statistics
that are collected.
.TP
\fB\-p\fR
Use the standard default resource usage report format:
.sp
.in +3en
.nf
\fCreal \fIelapsed time\fR
\fCuser \fIuser CPU time\fR
\fCsys  \fIsystem CPU time\fR
.fi
.in -3en
.sp
This is useful when the \fBTIME\fR environment variable has been set to
establish a differnt default resource usage report format.
.SH RESOURCE USAGE REPORT FORMAT SPECIFICATION
\fBtime\fR may be directed to produce a customized resource usage report
format either via the \fB\-f\fR \fIformat\fR command line option or the
\fBTIME\fP environment variable.  In both cases the specified string is
scanned for \fBprintf\fR(3)-like percent ("%") escape sequences.  These
sequences cause various resource usage statistics to be output.
Additionally several backslash ("\e\|") escapes are also provided to help in
outputting special characters.  All other non-escape characters are output as
is.  The set of escape sequences recognized and their interpretations are:
.TP
\fB\e\e\fR
A backslash "\e".
.TP
\fB\en\fR
A newline.  Note: if the last character output by the format string
is not a newline, one will be automatically appended.
.TP
\fB\er\fR
A carriage return.
.TP
\fB\et\fR
A tab.
.TP
\fB\e\fInnn\fR
The character corresponding to the octal number \fInnn\fR which may
be up to three digits.
.TP
\fB%%\fR
A percent sign "%".
.TP
\fB%E\fR
The elapsed time.
.TP
\fB%U\fR
The user CPU time for \fIcommand\fP and all of its children which were
\fIreaped\fR by \fIcommand\fR.  (A child is reaped by calling one of the
\fBwait\fR(2) system calls.)
.TP
\fB%S\fR
The system CPU time for \fIcommand\fP and all of its children which were
\fIreaped\fR
.TP
\fB%P\fR
The percent CPU utilization followed by a percent sign "%".  This is
calculated as (\fB%U\fR+\fB%S\fR)/\fB%E\fR*100.  Note that this percentage
can be greater that 100% on multiprocessor systems.  This can happen because
\fB%U\fR and \fB%S\fR include all the CPU time accumulated by \fIcommand\fR
and its reaped children.  Since those children can execute in parallel on an
MP system, CPU time can accumulate faster than elapsed time ...
.TP
\fB%R\fR
The number of page faults that resulted in a page being reclaimed from the
page cache.
.TP
\fB%F\fR
The number of page faults that resulted in a page being read from disk.
.TP
\fB%V\fR
The sum of \fB%R\fR and \fB%F\fR.
.TP
\fB%w\fR
The number of voluntary context switches.  These result from explicit yields
via calls to \fBsleep\fR(2), \fBsginap\fR(2), etc. and from contention on a
resource.  High voluntary context switches and large amounts of idle time
often indicate an MP resource contention problem.
.TP
\fB%c\fR
The number of involuntary context switches.  These result from a process
being switched out at the end of its CPU time slice or being preempted by
a higher priority process.
.TP
\fB%W\fR
The number of times the process was swapped.  Non-zero values here indicate
that the system memory is probably desperately oversubscribed.
.TP
\fB%C\fR
The sum of \fB%w\fR, \fB%c\fR, and \fB%W\fR.
.TP
\fB%I\fR
The number of disk input operations that were performed for the process.
Note that not all \fBread\fR(2) calls result in disk input operations.
If the requested data is found in the system buffer cache, no disk input
operation will be necessary.
.TP
\fB%O\fR
The number of disk output operations that were performed for the process.
Note that this number is somewhat fuzzy since \fBwrite\fR(2) calls are
performed asynchronously by copying the requested output data into the
system buffer cache and scheduling the actual output operation to occur
at a later time.  If the process exits before the actual output operation,
it won't be charged against the process.
.TP
\fB%?\fR
The sum of \fB%I\fR and \fB%O\fR.
.TP
\fB%k\fR
The number of signals received by the process.
.SH EXIT STATUS
If the \fIcommand\fR is invoked, the exit status of \fBtime\fR will be the
exit status of \fIcommand\fR.  \fBtime\fR will exit with an exit status of
1-125 if an error occurred in the \fBtime\fR command itself.  An exit status
of 126 will be returned if the \fIcommand\fR specified was found but could
not be invoked.  If the \fIcommand\fR could not be found, the exit status
will be 127.
.SH ENVIRONMENT
.TP
\fBTIME\fR
Used to establish a default resource usage report format.  The \fB\-p\fR
option may be used to force the built in default.
.SH NOTES
Users of \fBcsh\fR(1), \fBtcsh\fR(1), and \fBksh\fR(1) (and most other
shells) beware: these shells have builtin \fBtime\fR commands which perform
the same function as \fBtime\fR(1) but print the results in a different
format.  Also note that the \fBtime\fR commands in \fBcsh\fR and \fBtcsh\fR
have similar, but not identical output formatting capability.
.PP
Note that timing shell pipe lines may not produce the results that you think
they should.  In particular, the Bourne and Korn shells both return as soon
as the last command in a pipe line terminates.  For instance, note that in
the second example below, \fB/bin/time\fP outputs a real time of
approximately 5 seconds even though the first command in the pipe line won't
terminate for another 5 seconds.
.PP
.EX
    % /bin/time /bin/sh -c 'sleep 5 | sleep 10'

    real 10.100
    user 0.010
    sys  0.040
    % /bin/time /bin/sh -c 'sleep 10 | sleep 5'

    real 5.060
    user 0.010
    sys  0.040
.EE
.SH SEE ALSO
\fBcsh\fR(1), \fBtcsh\fR(1), \fRksh\fR(1),
\fBgetrusage\fR(2), \fBperfex\fR(1), \fBssrun\fR(1)*
.PP
* The \fBssrun\fR(1) command is part of the \fBSpeedShop\fR image in the
IRIX\*(Tm Development Option.

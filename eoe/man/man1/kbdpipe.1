'\"macro stdmacro
.if n .pH g1.kbdpipe @(#)kbdpipe	41.5 of 5/26/91
.\" Copyright 1991 UNIX System Laboratories, Inc.
.nr X
.if \nX=0 .ds x} kbdpipe 1 "" "\&"
.if \nX=1 .ds x} kbdpipe 1 ""
.if \nX=2 .ds x} kbdpipe "" "\&"
.if \nX=3 .ds x} kbdpipe "" "\&"
.TH \*(x}
.SH NAME
\f4kbdpipe\fP \- use the \f4kbd\fP module in a pipeline
.SH SYNOPSIS
\f4kbdpipe \-t\fP \f2table\fP [\f4\-f\fP \f2tablefile\fP] [\f4\-F\fP] [\f4\-o\fP \f2outfile\fP] [\f2infile(s)\fP]
.SH DESCRIPTION
The \f4kbdpipe\fP command allows the use of \f4kbd\fP tables as pipeline
elements between user programs.
[See \f4kbdcomp\fP(1M) and \f4kbd\fP(7) for descriptions of the module and its
capabilities.]
\f4kbdpipe\fP is mostly useful in code set conversion
applications.
If an output file is given, then all
\f2infiles\fP are piped to the given output file.
With no
arguments other than \f4\-t\fP, standard input is converted
and sent to standard output.
.PP
The required option argument \f4\-t\fP identifies the table
to be used for conversion.
If the table has already been loaded
as a shared table [see \f4kbdload\fP(1M)] it is attached.
If, however, the table has not been loaded,
an attempt is made to load it.
If the given table name is not an absolute pathname then the name of the
system mapping library is prepended to
the argument, and an attempt is made to load the table from
the resulting pathname (that is, it becomes
an argument to the loader, \f4kbdload\fP).
Assuming the table can be loaded, it is attached.
.PP
The argument to \f4\-f\fP defines the filename from which the table
will be loaded,
overriding the default action described above.
The file is loaded (in its entirety), and the named table attached.
This option should be used if the default action would fail.
.PP
The output file specified by \f4\-o\fP must not already exist
(a safety feature.)
The option \f4\-F\fP may be used
to override the check for existence of the output file; in this
case, any existing \f2outfile\fP will be truncated before being
written.
.SH EXAMPLES
The following example converts two input files into relative
nonsense by mapping ASCII into Dvorak keyboard equivalents using
the \f4Dvorak\fP table.
The table is assumed to reside in the
file \f4/usr/lib/kbd/Dvorak\fP.
The existing output file
is overwritten:
.nf
.sp .5
	\f4kbdpipe \-F \-t Dvorak \-o iapxai.vj file1 file2\fP
.sp .5
.fi
.PP
The following example loads the \f4Dvorak\fP table from a
different file, then converts standard input to standard output.
The \f4Dvorak\fP table (assumed to be non-resident) is explicitly
loaded from an absolute path beginning at the user's home directory:
.nf
.sp .5
	\f4kbdpipe \-t Dvorak \-f $HOME/tables/Dvorak.tab\fP
.sp .5
.fi
.ft 1
.SH FILES
\f4/usr/lib/kbd\fP \- directory containing system standard table files.
.SH SEE ALSO
\f4kbdload\fP(1M), \f4kbdset\fP(1), \f4kbd\fP(7).
.SH NOTES
Because \f4kbdpipe\fP uses \f4kbdload\fP(1) to load tables, it cannot
resolve link references.
Therefore, if a composite table is to be
used, the relevant portions must either be already loaded and
public, or be contained in the file
indicated (via the \f4\-f\fP option) on the command line; in this
case, the composite elements must be loaded earlier than
the link entry.
.PP
Users may use \f4kbd\fP tables in programs at user level by opening a pipe,
pushing the module, and setting via related commands; hence, there is no real
need to use the \f4kbdpipe\f1 command.
\f4kbdpipe\fP may not be supported in future releases.

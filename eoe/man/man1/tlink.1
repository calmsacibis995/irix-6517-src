'\"macro stdmacro
.TH TLINK 1 local "Silicon Graphics, Inc."
.SH NAME
tlink \- clone a file tree using symbolic links
.SH SYNOPSIS
.B tlink 
.RB [ \-chnprvX ]
.RB [ \-d \f2pattern\fP ]
.RB [ \-x \f2pattern\fP ]
.I source
.I target
.RI [ path ...]
.SH  DESCRIPTION
.I Tlink 
creates a directory tree rooted at
.I target
identical to the directory tree rooted at
.IR source ,
populating the directories in the target tree with symbolic links to
corresponding files under the source tree.
If optional
.I paths
are supplied after
.I source
and
.IR target ,
only the sub-trees named by concatenating each path with
.I source
are linked under
.IR target .
.PP
The 
.B \-c
(clean) option causes 
.I tlink 
to walk the target tree removing
any directory which lacks a counterpart in the source tree, any symbolic
link which does not name its non-directory counterpart in the source tree,
and any file which is not a directory or a link.
.PP
The 
.B \-d
option symbolically links a directory in the source tree into
the corresponding place in the target tree.
The link's pathname must match the regular expression given by
.IR pattern .
Regular expressions are as described in 
.IR regcmp (3X).
When used with
.BR \-c ,
this option prevents
.I tlink
from cleaning symbolic links to source directories.
.PP
The 
.B \-h
option creates hard rather than symbolic links, to conserve
inodes and disk blocks in a filesystem.
A hard-linked tree has the drawback that a file linked in it
may become stale (i.e. diverge from its prototype source node) if its
source is unlinked and recreated, whereas a symbolic link to the source
always denotes the same pathname, whether or not the source exists.
This option fails if source and target are directories in different
filesystems.
.PP
The 
.B \-n
option causes 
.I tlink 
to operate without actually constructing
a target tree.
With this option, 
.I tlink 
will traverse the source tree,
formulating pathnames, changing current directory, and calling 
.IR stat (2) 
on source files.
.PP
The
.B \-p
(prune) option causes tlink to remove symbolic links to non-existent source
pathnames from the target tree.
Prior
.I tlink
invocations may have created links to source files that no longer exist, and
also directories containing only links to obsolete source;
.B tlink \-p
prunes such deadwood.
.PP
To create relative rather than absolute symbolic links, use the
.B \-r
option.
.I Tlink
relates targets to sources by computing the path up from each target
to the closest ancestor directory common to source and target, and
appending the source path down from this ancestor.
.PP
The 
.B \-v
(verbose) option prints the name of each directory and symbolic
link created (or removed with the 
.B \-c 
option).
If a non-directory file exists in the target tree and its source file
is a directory, 
.B tlink \-v
prints the target's pathname and ``Not a directory.''
If a directory in the target tree has a non-directory source, verbose 
.I tlink 
prints the
target's pathname and ``Is a directory.''  If a symbolic link in the
target tree names no existent file, then 
.I tlink 
will attempt to unlink
the stale link.
Upon successful removal, verbose 
.I tlink 
will print the target's pathname and ``No such file or directory.''
.PP
The 
.B \-x
option adds
.I pattern
to a list of regular expression describing filenames to be
excluded from the tree walk.
The list's initial contents are:
.Ex
^\^\\\^.{1,2}$
^RCS$
^.*,v$
.Ee
.PP
If
.I pattern
contains slashes, then
.I tlink
matches full pathnames rather than filenames against the expression.
Specifying 
.B \-X
eliminates all but the first of the above expressions from the
exclusion list.
.SH AUTHOR
Brendan Eich, 01/14/87
.SH "SEE ALSO"
stat(2), 
regexp(3X).

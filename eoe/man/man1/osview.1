'\"macro stdmacro
.nr X
.if \nX=0 .ds x} osview 1 "" "\&"
.if \nX=1 .ds x} osview 1 ""
.if \nX=2 .ds x} osview 1 "" "\&"
.if \nX=3 .ds x} osview "" "" "\&"
.TH \*(x}
.SH NAME
osview \- monitor operating system activity data
.SH SYNOPSIS
.B osview
.BR [\-i n ]
.BR [\-n n ]
.BR [\-u namelist ]
.B [\-s]
.B [\-a]
.B [\-c]
.SH DESCRIPTION
.I osview
monitors various portions of the activity of the operating system and
displays them using the full screen capabilities of the current terminal.
.PP
A large number of activity counters are monitored, and the display may
be dynamically altered to hide or show only those counters in which 
the user is interested.  The default is no longer to display all the
statistics initially, instead there is a selection menu at the bottom
of the display; enter the number of the selection to switch displays.
See the \f4-a\fP option for the older behavior.
It is assumed that the 
.I osview
user is somewhat familiar with the internal workings of an AT&T V.4
based kernel.
.PP
.I osview
lays out as much information as possible in the screen area available.
Each data item is grouped similarly to the grouping shown by
.IR sar ( 1 ).
A header line gives the group name, and members of the group are indented
below along with the one-second average value over the last interval
(or total value over the interval; see below).
If a graphics subsystem is not present on the machine being monitored, 
.I osview
suppresses all graphics related statistics in the display.
.PP
The 
.B \-i
parameter sets the delay between screen updates in seconds.
By default, a 5 second rate is used.
The
.B \-n
parameter is used to override the default number of lines to use, which is
usually the entire size of the display area.
This can be useful if the display is called up in a long window, to keep
the counters grouped together at the top of the window.
The
.B \-s
option informs
.I osview
to not reduce relevant values to the average over a second.
One second averaging allows instant performance estimates,
but may show inaccuracies because of the short interval involved.
The
.B \-a
option gives behavior like the older versions, with all
possible statistics displayed at once (the same as the
.B 0
option on the selection line, if this option isn't given.
The
.B \-c
option causes a running count to be displayed, rather than an interval
count.
The counts can be reset to zero by pressing the
.B C
key.
Finally, the
.B \-u
option allows the specification of a different namelist file for those
symbols which must be read from the running kernel.
By default, the normal namelist file
.I /unix
is used.
.PP
In general, those parameters dealing with data throughput rather than events
are presented as the number of bytes involved.
For instance, memory usage is reported in bytes, as well as buffer cache
traffic.
Those parameters dealing with events to the system, such as page fault
activity, interrupts or system activity are reported as actual counts.
This allows an instant estimate of the activity and throughput of the 
system.
.PP
A group can be suppressed along with all its members to allow hidden groups
to be brought into view if the screen area is too small.
This is done by moving the cursor over the header line of the group to
suppress and typing a suppression character.
The cursor may be positioned in any of the standard ways; keyboard arrow keys,
the h-j-k-l keys, or the backspace-return-tab keys.
.I osview
highlights the line the cursor is on unless the cursor is on the top screen
line (which is reserved for status information).
When positioned over a group name, typing the 
.B D
character or one of the
.I delete
keys on the keyboard will suppress the group.
The group name will remain, with an asterisk (*) prefix to indicate that the
group has been suppressed.
The group may be expanded again by positioning the cursor over the group name
and typing the 
.B I
character or one of the 
.I insert
keys on the keyboard.
The 
.I home
key moves the cursor to the 
.I osview
status line.
.SH OVERVIEW
The information which
.I osview
displays and how to interpret it is given below.
See the documentation for
.IR sar ( 1 )
or
.IR gr_osview ( 1 )
for additional information.
Some headers, including
.IR "Swap" ,
and
.I "Interrupts"
are suppressed by default.
See above description of how to get them to display.
Some headers, including
.IR "PathName Cache" ,
.IR "EfsAct" ,
and
.I "Getblk"
contain information that is subject
to change and is of use primarily by IRIX development groups.
Tiles information is only displayed if the kernel
supports that feature.
.PP
Load Average
.br
.in +3
These counters give load average over the last minute, 5 minutes and 15 minutes.
.in -3
.sp
CPU Usage
.br
.in +3
These counters display the proportion of the available processor cycles which
were used by each of the following activities.
If multiple processors are present, then the CPU number will be added to
the header line.
.sp
.nf
\f3user\f1		- user programs
\f3sys\f1		- system on behalf of user
\f3intr\f1		- interrupt handling
\f3gfxc\f1		- graphics context switching
\f3gfxf\f1		- waiting on graphics input FIFO
\f3sxbrk\f1	- waiting for memory
\f3idle\f1		- doing nothing
.fi
.in -3
.sp
Wait Ratio
.br
.in +3
These counters display the proportion of time no processes were available
to run, and any processes were waiting for I/O to complete.
.sp
.nf
\f3%IO\f1		- waiting on IO
\f3%Swap\f1	- waiting on swap IO
\f3%Physio\f1	- waiting on physical IO
.fi
.in -3
.sp
System Memory
.br
.in +3
.sp
.nf
\f3Phys\f1		- physical memory size
\f3 kernel\f1	- memory consumed by kernel text and data
\f3  heap\f1	- part of kernel used by heap
\f3   stream\f1	- part of heap used by streams
\f3  zone\f1	- part of kernel used by zone allocator
\f3  ptbl\f1	- part of kernel used by process page tables
\f3 fs ctl\f1	- memory holding filesystem meta-data
\f3 fs data\f1	- memory holding filesystem file data
\f3  delwri\f1	- modified filesystem file data
\f3 free\f1	- memory not in use
\f3 userdata\f1	- in use holding valid user data
\f3 pgalloc\f1	- physical pages allocated from free pool
.fi
.in -3
.sp
System Activity
.in +3
.sp
.nf
\f3syscall\f1	- system calls
\f3 read\f1	- read system calls
\f3 write\f1	- write system calls
\f3 fork\f1	- fork system calls
\f3 exec\f1	- exec system calls
\f3readch\f1	- characters read via read()
\f3writech\f1	- characters written via write()
\f3iget\f1		- efs inode searches
.fi
.in -3
.sp
Block Devices
.in +3
.sp
.nf
\f3lread\f1	- amount of logical buffer reads
\f3bread\f1	- amount of physical buffer reads
\f3%rcache\f1	- read hit ratio on buffer cache
\f3lwrite\f1	- amount of logical buffer writes
\f3bwrite\f1	- amount of physical buffer writes
\f3wcancel\f1	- amount of delayed writes cancelled
\f3%wcache\f1	- write hit ratio; negative for write-behind
\f3phread\f1	- amount of raw physical reads
\f3phwrite\f1	- amount of raw physical writes
.fi
.in -3
.sp
Swap
.in +3
.sp
.nf
\f3freeswap\f1	- amount of free physical swap
\f3vswap\f1	- amount of free virtual swap
\f3swapin\f1	- page swapins
\f3swapout\f1	- page swapouts
\f3bswapin\f1	- bytes swapped in
\f3bswapout\f1	- bytes swapped out
.fi
.in -3
.sp
System VM
.br
.in +3
.sp
.nf
\f3Dynamic VM\f1	- total dynamic system VM
\f3 avail\f1	- system VM available
\f3 in use\f1	- system VM in use
\f3  fs data\f1	- in use by FS buffer cache
\f3 allocs\f1	- pages of system VM allocated
\f3 frees\f1	- pages of system VM freed
.fi
.in -3
.sp
Memory Faults
.br
.in +3
.sp
.nf
\f3vfault\f1	- page faults
\f3pfault\f1	- protection faults
\f3demand\f1	- demand zero and demand fill faults
\f3cw\f1		- copy-on write faults
\f3steal\f1	- page steals
\f3onswap\f1	- page found on swap
\f3oncache\f1	- page found in page cache
\f3onfile\f1	- page read from file
\f3freed\f1	- pages freed by paging daemon
\f3unmodswap\f1	- clean swap page, dirty incore page
\f3unmodfile\f1	- clean file page, dirty incore page
\f3iclean\f1	- number of icache cleans
.fi
.in -3
.sp
TLB Actions
.br
.in +3
.sp
.nf
\f3newpid\f1	- new process ID allocated
\f3tfault\f1	- second level TLB misses
\f3rfault\f1	- reference faults (during paging)
\f3flush\f1	- flush of entire TLB
\f3sync\f1		- cross-processor TLB synchronizations
.fi
.in -3
.sp
Graphics
.in +3
.sp
.nf
\f3griioctl\f1	- graphics ioctl's
\f3gintr\f1	- graphics interrupts
\f3swapbuf\f1	- swapbuffer completes
\f3switch\f1	- context switches
\f3fifowait\f1	- wait on FIFO
\f3fifonwait\f1	- wait on FIFO, below low-water mark on check
.fi
.in -3
.sp
Tiles
.in +3
.sp
.nf
\f3tavail\f1	- tiles available, no locked pages
\f3 avfree\f1	- free pages in available tiles
\f3tfrag\f1	- tiles fragmented with locked pages
\f3 fraglock\f1	- locked pages within tfrags
\f3 fragfree\f1	- free pages within tfrags
\f3tfull\f1	- tiles full, all pages locked
\f3 ttile\f1	- tiles allocated
\f3pglocks\f1	- tile page locks
\f3tallocmv\f1	- pages relocated for tile_alloc
\f3tiledmv\f1	- pages relocated by tiled daemon
.fi
.in -3
.sp
TCP
.in +3
.sp
.nf
\f3conns\f1     - connections accepted
\f3sndtotal\f1  - packets sent
\f3rcvtotal\f1  - packets received
\f3sndbyte\f1   - bytes sent
\f3rcvbyte\f1   - bytes received
.fi
.in -3
.sp
UDP
.in +3
.sp
.nf
\f3ipackets\f1  - packets received
\f3opackets\f1  - packets sent
\f3dropped\f1   - packets dropped
\f3errors\f1    - input errors
.fi
.in -3
.sp
IP
.in +3
.sp
.nf
\f3ipackets\f1  - packets received
\f3opackets\f1  - packets sent
\f3forward\f1   - packets forwarded
\f3dropped\f1   - output errors
\f3errors\f1    - input errors
.fi
.in -3
.sp
NetIF
.in +3
These counters display the activity on a particular network interface.
If multiple interfaces are present, than a separate set of counters is
displayed for each interface.
The interface name is displayed as part of the header.
.sp
.nf
\f3Ipackets\f1	- packets received
\f3Opackets\f1	- packets transmitted
\f3Ierrors\f1	- packets received in error
\f3Oerrors\f1	- errors transmitting a packet
\f3collisions\f1- collisions detected
.fi
.in -3
.sp
Scheduler
.in +3
.sp
.nf
\f3runq\f1		- number of processes on run queue
\f3swapq\f1	- number of processes on swap queue
\f3switch\f1	- context switches
.fi
.in -3
.sp
Interrupts
.in +3
.sp
.nf
\f3all\f1		- total interrupts handled
\f3vme\f1		- VMEBus interrupts
.fi
.in -3
.SH "SEE ALSO"
\f4gr_osview\f1(1),
\f4top\f1(1),
\f4sar\f1(1).
.SH BUGS
.I osview
cannot atomically get all the data it needs.
On a very busy system,
some percentages could sum to greater than 100, since there could be a gap
between the time
.I osview
reads the current time and when it reads the data counters.

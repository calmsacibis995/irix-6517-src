'\"macro stdmacro
.if n .pH g1.fgrep @(#)fgrep	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} FGREP 1 "Directory and File Management Utilities" "\&"
.if \nX=1 .ds x} FGREP 1 "Directory and File Management Utilities"
.if \nX=2 .ds x} FGREP 1 "" "\&"
.if \nX=3 .ds x} FGREP "" "" "\&"
.TH \*(x}
.SH NAME
fgrep \- search a file for a character string
.SH SYNOPSIS
.B fgrep
[options] string [file ...]
.SH DESCRIPTION
.I fgrep\^
(fast 
.IR grep\^ )
searches files for a character string and prints all lines that contain that string.
.I fgrep\^
is different from
.I grep(1)\^
and
.I egrep(1)\^
because it searches for a string, instead of searching for a
pattern that matches an expression.
It uses a fast and compact algorithm.
.PP
The characters
.BR $ ,
.BR * ,
.BR [ ,
.BR ^ ,
\(bv,
.BR ( ,
.BR ) ,
and
.B \e
are interpreted literally by 
.I fgrep\^,
that is,
.I fgrep\^
does not recognize full regular expressions as does
.IR egrep\^ .
Since these characters have special meaning to the shell, 
it is safest to enclose the entire
.I string\^
in single quotes
.BR \&\|\(fm \|.\|.\|.\| \(fm .
.PP
If no files are specified,
.I fgrep\^
assumes standard input.
Normally, each line found is copied to the standard output.
The file name is printed before each line found if there is more than one 
input file.
.PP
Command line options are:
.PP
.PD 0
.TP 6
.B \-b
Precede each line by the block number on which it was found.
This can be useful in locating block numbers by context (blocks are
512 bytes long and number from 0).
.TP
.B \-c
Print only a count of the lines that contain the pattern.
.TP
.B \-i
Ignore upper/lower case distinction during comparisons.
.TP
.B \-l
Print the names of files with matching lines once,
separated by new-lines.
Does not repeat the names of files when the pattern is found
more than once.
.TP
.B \-n
Precede each line by its line number in the file (first line is 1).
.TP
.B \-s
Silent mode.  No pattern matches or error messages are printed.
This option allows command expressions to check
.IR fgrep\^ 's
exit status without having to deal with output.
.TP
.B \-v
Print all lines except those that contain the pattern.
.TP
.B \-x
Print only lines matched entirely.
.TP
.BI \-e " special_string\^"
Search for a
.I "special string\^"
.RI ( string\^
begins with a
.BR \- ).
.TP
.BI \-f " file\^"
Take the list of
.I strings\^
from 
.IR file .
.PD
.PP
.SH SEE ALSO
ed(1),
egrep(1),
grep(1),
sed(1),
sh(1).
.SH DIAGNOSTICS
Exit status is 0 if any matches are found,
1 if none, 2 for syntax errors or inaccessible files
(even if matches were found).
.SH BUGS
Ideally there should be only one 
.I grep
command, but there is not a single algorithm that spans a wide enough
range of space-time tradeoffs.  Lines are limited to BUFSIZ characters;
longer lines are truncated.  BUFSIZ is defined in
.BR /usr/include/stdio.h .
.Ee
'\".so /pubs/tools/origin.att

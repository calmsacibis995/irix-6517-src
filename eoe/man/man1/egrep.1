'\"macro stdmacro
.if n .pH g1.egrep @(#)egrep	30.2 of 12/25/85
.nr X
.if \nX=0 .ds x} EGREP 1 "Directory and File Management Utilities" "\&"
.if \nX=1 .ds x} EGREP 1 "Directory and File Management Utilities"
.if \nX=2 .ds x} EGREP 1 "" "\&"
.if \nX=3 .ds x} EGREP "" "" "\&"
.TH \*(x}
.SH NAME
egrep \- search a file for a pattern using full regular expressions
.SH SYNOPSIS
.B egrep
[options] full regular expression [file ...]
.SH DESCRIPTION
.I egrep\^
(\f2expression grep\f1) searches files for a pattern of characters and
prints all lines that contain that pattern.
.I egrep\^
uses full regular expressions (expressions that have string values that
use the full set of alphanumeric and special characters) to match the patterns.
It uses a fast deterministic algorithm that sometimes needs exponential space.
.PP
.I egrep\^
accepts full regular expressions as in
.IR ed (1),
except for
.B \e(
and
.BR \e) ,
and except for
.B \e<
and
.BR \e> ,
with the addition of:
.PP
.PD 0
.TP 6
1.
A full regular expression followed by
.B +
that matches one or more occurrences of the full regular
expression.
.TP
2.
A full regular expression followed by
.B ?
that matches 0 or 1 occurrences of the full regular expression.
.TP
3.
Full regular expressions separated by 
.B \(bv
or
by a new-line that match strings that are matched by any of the expressions.
.TP
4.
A full regular expression that may be enclosed in parentheses
.B (\|)
for grouping.
.PD
.PP
Be careful using the characters
.BR $ ,
.BR * ,
.BR [ ,
.BR ^ ,
\(bv,
.BR ( ,
.BR ) ,
and
.B \e
in
\f2full regular expression\f1, because they are
also meaningful to the shell.
It is safest to enclose the entire
.I full regular expression\^
in single quotes
.BR \&\|\(fm \|.\|.\|.\| \(fm .
.PP
The order of precedence of operators is
.BR [\|] ,
then
.BR \(**\|?\|+ ,
then concatenation, then 
.B \(bv 
and new-line.
.PP
If no files are specified,
.I egrep\^
assumes standard input.
Normally, each line found is copied to the standard output.
The file name is printed before each line found if there is more than one input file.
.PP
Command line options are:
.PP
.PD 0
.TP 6
.B \-b
Precede each line by the block number on which it was found.
This can be useful in locating block numbers by context (blocks 
are 512 bytes long and number from 0).
.TP
.B \-c
Print only a count of the lines that contain the pattern.
.TP
.B \-h
Suppresses printing of filenames when searching multiple files.
.TP
.B \-i
Ignore upper/lower case distinction during comparisons.
.TP
.B \-l
Print the names of files with matching lines once,
separated by new-lines.
Does not repeat the names of files when the pattern is found
more than once.
.TP
.B \-n
Precede each line by its line number in the file (first line is 1).
.TP
.B \-s
Silent mode.  No pattern matches or error messages are printed.
This option allows command expressions to check
.IR egrep\^ 's
exit status without having to deal with output.
.TP
.B \-v
Print all lines except those that contain the pattern.
.TP
.BI \-e " special_expression\^"
Search for a
.I "special expression\^"
.RI ( "full regular expression\^"
that begins with a
.BR \- ).
.TP
.BI \-f " file\^"
Take the list of
.I full regular expressions\^
from 
.IR file .
.PD
.SH SEE ALSO
ed(1),
fgrep(1),
grep(1),
sed(1),
sh(1).
.SH DIAGNOSTICS
Exit status is 0 if any matches are found,
1 if none, 2 for syntax errors or inaccessible files
(even if matches were found).
.SH BUGS
Ideally there should be only one
.I grep\^
command, but there is not a single algorithm that spans a wide enough
range of space-time tradeoffs.  Lines are limited to BUFSIZ characters;
longer lines are truncated.  BUFSIZ is defined in 
.B /usr/include/stdio.h.
.Ee
'\".so /pubs/tools/origin.att

'\"macro stdmacro
.if n .pH man1.rtmon-client @(#)rtmon-client 30.3 of 2/1/86
.TH RTMON-CLIENT 1
.SH NAME
rtmon-client  \- client for collecting real-time event data from rtmond
.SH SYNOPSIS
.B rtmon-client
[
.B \-d
] [
.BI \-f " filename"
] [
.BI \-h " hostname"
] [
.BI \-p " cpu-list"
] [
.BI \-m " event-mask"
] [
.B \-n
] [
.B \-O
] [
.BI \-t " timeout"
] [
.B \-v
]
.SH DESCRIPTION
.IX  "network file system"  "rtmond-client"  ""
.B rtmon-client
connects to the
.B rtmond
daemon running on the
machine
.I hostname
and collects event data for one or more CPUs.
This event data can be displayed by programs such as
.BR par (1),
.BR rtmon-dump (1),
and the optional
.BR IRIXview (1)
product.
.PP
If event collection is done for an unspecified period of time
(see the
.B \-t
option below) then
.B rtmon-client
will collect event data until it is interrupted.
.SH OPTIONS
.TP
.B \-d
Enable debugging.
Debugging enables additional error messages and the creation of
a debugging file that contains
a human readable list of the events that were collected (see the 
.B \-f
option below).
.TP
.BI \-f " filename"
Write event data to one or more files with names derived from
.IR filename .
In normal operation
.B rtmon-client
will write all event data to a single file named
.IR filename .
If the
.B \-O
option is specified then event data is written to multiple files,
one for each CPU where data is collected, and these files are named
\fIfilename\fP.\fBwvr\fP.\fIcpu\fP, where
.I cpu
is the number of the CPU on which data was collected.
In addition, if debugging is enabled with the
.B \-d
option, per-CPU debugging information is written to files named
\fIfilename\fP.\fBdbg\fP.\fIcpu\fP.
By default
.B rtmon-client
uses the string
.B default
in constructing file names.
.TP
.B \-h " hostname"
Connect to the server on the specified host.
.B rtmon-client
first tries to use
.I hostname
as the pathname of a UNIX domain socket on the local host; that
failing it tries it as a host name or Internet address (specified
using the usual ``dot notation'').
If
.I hostname
is an empty string then
.B rtmon-client
uses the default scheme for connecting to a server: first try to
reach a server through the default UNIX domain socket, if that fails
contact a server through the loopback interface.
.TP
.BI \-p " cpu-list"
Collect data on the set of CPUs specified by
.IR cpu-list .
CPUs are specified as a comma-separated list of CPU numbers or
range of CPU numbers.
CPUs are numbered starting at zero.
For example, 
.BI \-p " 1,4-7,11"
means processors 1, 4, 5, 6, 7, and 11.
An open-ended range
is interpreted as all CPUs to the maximum CPU number; e.g.
.IR 2-
on an 8-processor system is the same as
.IR 2-7 .
The CPU list must be one string with no white space.
By default,
.B rtmon-client
collects data for all CPUs.
.TP
.BI \-m " event-mask"
Collect only events specified by
.IR event-mask .
An
.I "event mask"
specifies a set of events; it is a set of
.I "event classes"
with each class specified symbolically as one of the following:
.nf
.sp
.ta \w'framesched  'u
\fBName	Description\fP
all	All events (default)
alloc	Memory allocation 
.\"debug	...
disk	Disk i/o work
.\"framesched	...
intr	Hardware interrupts
io	I/O-related events (disk+intr)
netflow	Network I/O flow
netsched	Network I/O scheduling
network	Network-related events (netflow+netsched)
profile	Kernel profiling
scheduler	Process and thread scheduler
signal	Signal delivery and reception
syscall	System calls and their arguments
task	Process and thread scheduling
taskproc	Process scheduling (system threads are not included)
vm	Virtual memory operation
.sp
.fi
Event class names are case insensitive; i.e. ``SIGNAL'' is interpreted
the same as ``signal''.
Multiple event classes may be included by using a ``+'', ``|'', or ``,''
symbol to separate the names.
Event classes may be excluded by using a ``-'' to separate the name.
For example, ``network+io-disk'' indicates all network and i/o events
should be included except for disk-related events.
In addition to the above names, a number may be used
to specify a value, where the various events are selected
by bits in the value, as defined in ``<sys/rtmon.h>''.
.IP
Note that under some circumstances events not in the specified
classes may also be collected.
This can happen when ``unclassified events'', such as those generated
by user applications, are collected.
.TP
.B \-n
Do not merge the per-CPU event data streams.
This can be useful if merging slows down 
.B rtmon-client
so much that it causes data to dropped by the server.
.TP
.BI \-t " timeout"
Collect data for
.I timeout
seconds.
.TP
.B \-v
When
.B rtmon-client
is used to collect data from a remote system (via the
.B \-h
option) it is not normally possible to collect system call event data for
processes unless the remote processes are specially marked to allow the data
to be collected.  This marking must be performed on the remote system via
.BR rtmon-run (1).
Permissions to perform this marking are handled via standard process
permissions on the remote system.  Access to the system call data is
controlled via a security cookie that is granted by the remote
.BR rtmond .
When the
.B -v
option is provided to
.B rtmon-client
this security cookie is printed.  The security cookie must then be used
in the
.B rtmon-run
command on the remote system in order to properly tag the collected system
call data.
.SH DIAGNOSTICS
.IR "Unable to contact rtmon service on host <hostname>" .
There is no
.B rtmond
server process running on the target system.
.SH "SEE ALSO"
.BR par (1),
.BR rtmon-run (1),
.BR rtmond (1),
.BR IRIXview (1),
.BR rtmon_log_user_tstamp (3)

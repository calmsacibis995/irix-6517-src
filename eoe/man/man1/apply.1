.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)apply.1	6.1 (Berkeley) 4/29/85
.\"
.nr X
.if \nX=0 .ds x} APPLY 1 "User Environment Utilities" "\&"
.TH \*(x}
.SH NAME
apply \- apply a command to a set of arguments
.SH SYNOPSIS
.nf
\f3apply\f1 [ \f3\-a\f1c ] [ \f3\-\f1n ] command args ...
.fi
.SH DESCRIPTION
.I apply
runs the named
.I command
on each
argument
.I arg
in turn.
Normally, arguments are chosen singly; the optional number
.I n
specifies the number of arguments to be passed to
.I command.
If
.I n
is zero,
.I command
is run without arguments once for each
.I arg.
Character sequences of the form
.RI % d
in
.IR command ,
where
.I d
is a digit from 1 to 9,
are replaced by the
.IR d th
following unused
.IR arg .
If any such sequences occur,
.I n
is ignored
and the number of arguments passed to
.I command
is the maximum value of
.I d
in
.I command.
The character `%' may be changed by the
.B \-a
option.
.SH EXAMPLES
.RS
apply echo *
.RE
is similar to
.IR ls (1);
.PP
.RS
apply \-2 cmp a1 b1 a2 b2 ...
.RE
compares the `a' files to the `b' files
.PP
.RS
apply \-0 who 1 2 3 4 5
.RE
runs
.IR who (1)
5 times
.PP
.RS
apply \(aaln %1 /usr/joe\(aa *
.RE
links all files in the current directory to the directory /usr/joe
.SH "SEE ALSO"
'\".SH AUTHOR
'\"Rob Pike
sh(1).
.SH BUGS
Shell metacharacters in
.I command
may have bizarre effects; it is best to enclose complicated
commands in single quotes (\(aa\ \(aa).
.sp .8v
There is no way to pass a literal `%2' if `%' is the
argument expansion character.
'\".SH ORIGIN
'\"4.3 BSD

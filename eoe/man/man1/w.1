'\"macro stdmacro
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	@(#)w.1	6.3 (Berkeley) 4/28/87
.\"
.TH W 1
.UC 4
.SH NAME
w \- who is on and what they are doing
.SH SYNOPSIS
.B w
[
.B \-fhlsuW
] [ user ]
.SH DESCRIPTION
.I w
prints a summary of the current activity on the system,
including what each user is doing.
The heading line shows the current time of day,
how long the system has been up,
the number of users logged into the system,
and the load averages.
The load average numbers give the number of jobs in the run queue
averaged over 1, 5 and 15 minutes.
.PP
The fields output are:
the user's login name,
the name of the tty the user is on,
the host from which the user is logged in (generally the session's
$DISPLAY variable: see \f4xdm\f1(1)),
the time the user logged on,
the length of time since the user last typed anything,
the CPU time used by all processes and their children on that terminal,
the CPU time used by the currently active processes,
the name and arguments of the current process.
.PP
The options are:
.TP 5
.B \-h
suppresses the heading.
.TP
.B \-u
displays the heading only (same as
.IR uptime (1)).
.TP
.B \-s
displays a short form of output.
In the short form, the tty is abbreviated, the login time and cpu times
are left off, as are the arguments to commands.
.TP
.B \-l
gives the long output, which is the default.
.TP
.B \-f
suppresses the ``from'' field.
.TP
.B \-W
shows a wider field for the program name and
displays the ``from'' field on a separate line, untruncated.
(The \f4utmpx\f1 \f4ut_host\f1 field accommodates a 256-character string,
but most commands truncate before displaying it).
.PP
If a
.I user
name is included,
the output will be restricted to that user.
.SH NOTES
\f4w\f1(1) and \f4who\f1(1) can report different 
idle times for the same line.  \f4w\f1 
will report the time elapsed since input occurred, while \f4who\f1 
will report the time elapsed since output occurred (roughly speaking).  If there is a 
job running that produces output, the idle times will differ 
between the two programs:
.PP
\fr
.nf
\f4babylon:\f1 who -Hu
NAME       LINE         TIME          IDLE    PID  COMMENTS
root       ttyd1        Jul  6 10:37   .     1955  alt console
.fi
.PP
.nf
\f4babylon:\f1 w
User     tty from        login@  idle   JCPU   PCPU  what
root     d1             10:37am  5:54     23     23  tail -f SYSLOG
.fi
.PP
.nf
\f4wanda:\f1 w -W
  6:06am  up 755 days, 13:53,  6 users,  load average: 0.11, 0.10, 0.11
User     tty       login@  idle   JCPU   PCPU  what
jimclark ttyq36    6:06am  1:56                -ksh 
         192.111.17.42
tj       ttyq33    Fri 8am         8:21      6  rlogin peanut.csd 
         :0.0
ed       ttyq38    6:11am            1         w -W 
         gate-bonnie.wpd.sgi.com:0.0
.fi
.PP
.SH FILES
.ta 1i
/var/adm/utmp
.br
/dev/kmem
.SH "SEE ALSO"
\f4xdm\f1(1), \f4who\f1(1), \f4ps\f1(1), \f4uptime(1)\f1
'\".SH AUTHOR
'\"Mark Horton
.SH BUGS
The notion of the ``current process'' is muddy.
The current algorithm is ``the highest numbered process on
the terminal that is not ignoring interrupts,
or, if there is none, the highest numbered process on the terminal''.
This fails, for example, in critical sections of programs
like the shell and editor,
or when faulty programs running in the background
fork and fail to ignore interrupts.
(In cases where no process can be found,
.I w
prints ``\-''.)
.PP
When calculating load average,
certain sleeping processes are counted as runnable.
.PP
The CPU time is only an estimate, in particular, if someone leaves a
background process running after logging out, the person currently
on that terminal is ``charged'' with the time.
.PP
Background processes are not shown, even though they account for
much of the load on the system.
.PP
Sometimes processes, typically those in the background, are
printed with null or garbaged arguments.
In these cases, the name of the command is printed in parentheses.
.PP
.I w
does not know about the new conventions for detection of background jobs.
It will sometimes find a background job instead of the right one.

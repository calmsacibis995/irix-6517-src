<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1996, v.4001
<!DOCTYPE SGIDOCBK PUBLIC "-//Silicon Graphics, Inc.//DTD DocBook V2.3-based Subset V1.5//EN" [
<!ENTITY a11342.drw SYSTEM "a11342.drw" NDATA drw>
<!ENTITY a11934 SYSTEM "online/a11934.gif" NDATA gif>
<!ENTITY a11933 SYSTEM "online/a11933.gif" NDATA gif>
<!ENTITY a11932 SYSTEM "online/a11932.gif" NDATA gif>
<!ENTITY a11931 SYSTEM "online/a11931.gif" NDATA gif>
<!ENTITY a11930 SYSTEM "online/a11930.gif" NDATA gif>
<!ENTITY a11929 SYSTEM "online/a11929.gif" NDATA gif>
<!ENTITY a11928 SYSTEM "online/a11928.gif" NDATA gif>
<!ENTITY a11927 SYSTEM "online/a11927.gif" NDATA gif>
<!ENTITY a11926 SYSTEM "online/a11926.gif" NDATA gif>
<!ENTITY a11981 SYSTEM "online/a11981.gif" NDATA gif>
<!ENTITY AppA.sgml SYSTEM "AppA.sgml">
<!ENTITY a11342 SYSTEM "a11342" NDATA eps>
<!ENTITY a11342.eps SYSTEM "a11342.eps" NDATA eps>
<!ENTITY chap06limit.sgml SYSTEM "chap06limit.sgml">
<!ENTITY fig9 SYSTEM "online/fig9.gif" NDATA gif>
<!ENTITY fig8 SYSTEM "online/fig8.gif" NDATA gif>
<!ENTITY fig7 SYSTEM "online/fig7.gif" NDATA gif>
<!ENTITY fig6 SYSTEM "online/fig6.gif" NDATA gif>
<!ENTITY fig5 SYSTEM "online/fig5.gif" NDATA gif>
<!ENTITY fig4 SYSTEM "online/fig4.gif" NDATA gif>
<!ENTITY fig3 SYSTEM "online/fig3.gif" NDATA gif>
<!ENTITY fig2 SYSTEM "online/fig2.gif" NDATA gif>
<!ENTITY fig1 SYSTEM "online/fig1.gif" NDATA gif>
<!ENTITY a10111.gif SYSTEM "a10111.gif" NDATA gif>
<!ENTITY a10112.gif SYSTEM "a10112.gif" NDATA gif>
<!ENTITY a11292.gif SYSTEM "a11292.gif" NDATA gif>
<!ENTITY a11293.gif SYSTEM "a11293.gif" NDATA gif>
<!ENTITY a11294.gif SYSTEM "a11294.gif" NDATA gif>
<!ENTITY a11295.gif SYSTEM "a11295.gif" NDATA gif>
<!ENTITY a11296.gif SYSTEM "a11296.gif" NDATA gif>
<!ENTITY a11297.gif SYSTEM "a11297.gif" NDATA gif>
<!ENTITY chap04miser.sgml SYSTEM "chap04miser.sgml">
<!ENTITY chap03numa.sgml SYSTEM "chap03numa.sgml">
<!ENTITY chap02sched.sgml SYSTEM "chap02sched.sgml">
<!ENTITY chap01intro.sgml SYSTEM "chap01intro.sgml">
]>
-->
<chapter>
<title>Accounting</title>
<para><indexterm><primary>accounting</primary></indexterm><indexterm><primary>Share II</primary></indexterm>This chapter discusses the three types of IRIX accounting and how you can use them to log and charge for certain types of system activity. Using accounting data, you can determine how system resources are used and if a particular user is using more than a reasonable share; trace significant system events, such as security breaches, by examining the list of all processes invoked by a particular user at a particular time; and set up billing systems to charge login accounts for using system resources. <note><para>Ask your Silicon Graphics sales representative for information on additional tools available for accounting. For example, SHARE II<superscript>&trade;</superscript> for IRIX systems
is an optional product allowing additional administrative control of system resources including disk space, CPU entitlement, memory (real or virtual), number of processes, printer pages, terminal and modem connect-time, network packets, and more.</para>
</note></para>
<para>This chapter contains the following sections:</para>
<itemizedlist>
<listitem><para>Overview, <xref linkend="Z893788062janelle"></para>
</listitem>
<listitem><para>Concepts and Terminology, <xref linkend="Z895169553janelle"></para>
</listitem>
<listitem><para>Differences in the IRIX Accounting Types, <xref linkend="Z890938990janelle"></para>
</listitem>
<listitem><para>Activating the Accounting Types, <xref linkend="Z895169611janelle"></para>
</listitem>
<listitem><para>Files and Directories, <xref linkend="Z895169633janelle"></para>
</listitem>
<listitem><para>Basic Process Accounting, <xref linkend="Z889630861glen"></para>
</listitem>
<listitem><para>IRIX Extended Accounting, <xref linkend="Z889631314glen"></para>
</listitem>
<listitem><para>IRIX CSA, <xref linkend="Z182215011289howie"></para>
</listitem>
<listitem><para>Reports, </para>
</listitem>
<listitem><para>Migrating Accounting Data, <xref linkend="Z890941622janelle"></para>
</listitem>
<listitem><para>Accounting Commands, <xref linkend="Z890941642janelle"></para>
</listitem></itemizedlist>
<para>The following abbreviations and definitions are used throughout this chapter: <deflist>
<colheads>
<head1>Abbreviation</head1><head2>Definition</head2></colheads>
<deflistentry>
<term><replaceable>MMDD</replaceable></term>
<listitem><para>Month, day</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>hhmm</replaceable></term>
<listitem><para>Hour, minute</para>
</listitem></deflistentry>
</deflist></para>
<para><comment><emphasis>Issues</emphasis></comment></para>
<para><comment>Need to clarify the name and definition of &ldquo;session file&rdquo; throughout. Should it be called spacct for sorted pacct?</comment></para>
<para><comment>Need to check session refs to see if they should say job instead.</comment></para>
<para><comment>Once we know all the man page extensions, we need to add this to all referenced commands.</comment></para>
<para><comment>What is the official name for IRIX CSA?</comment></para>
<para><comment>Need to add index entries</comment></para>
<para><comment>Need to add terms to the master glossary</comment></para>
<para><comment>Need to update, add to the kernel tunable parameters in Appendix A of the IRIX Admin: Systems Config and Operation manual</comment></para>
<para><comment>Are there two modes of operation for the acctcom command? If so, we need to distinguish between them and document that here.</comment></para>
<para><comment>Consider putting accounting report examples in an appendix.</comment></para>
<para><comment>Need to look at overall organization.</comment></para>
<para><comment>Should we add a section on what happens/what to do if the system crashes?</comment></para>
<para><comment>Need to check usage of monthly and periodic accounting terms throughout.</comment></para>
<section id="Z893788062janelle">
<title>Overview</title>
<para><indexterm><primary>accounting</primary></indexterm><indexterm><primary>accounting</primary><secondary>basic accounting</secondary></indexterm><indexterm><primary>accounting</primary><secondary>extended accounting</secondary></indexterm><indexterm><primary>accounting</primary><secondary>IRIX CSA</secondary></indexterm><indexterm><primary>accounting</primary><secondary><command>runacct</command></secondary></indexterm><indexterm><primary>accounting</primary><secondary><command>csarun</command></secondary></indexterm>The IRIX system has three types of accounting: basic process accounting, extended accounting, and IRIX CSA (<comment>define</comment>). You can use either one type of accounting or a combination of them, depending on your site's accounting needs.</para>
<para>Basic process accounting consists of standard UNIX accounting features. Basic accounting is process oriented&mdash;a new accounting record is produced for each process that has been run, containing statistics about the resources used by that individual process. The <command sectionref="1m">runacct</command> command is the main daily accounting shell script.</para>
<para>Extended accounting is an IRIX feature that has extended process accounting capabilities, along with project and array session accounting features. Unlike basic processing accounting and IRIX CSA which write accounting data to the <literal>pacct</literal> file, extended accounting writes data files using the system audit trail (SAT) facility. Audit data is collected directly from the kernel by the <command sectionref="1m">satd</command> program. The extended accounting data is a superset of the data collected and reported by basic process accounting.</para>
<para>IRIX CSA provides additional capabilities that provide more detailed, accurate accounting data. It also contains data from some system daemons. The data collected is a superset of the both basic process and extended accounting data. IRIX CSA also has a front-end formatting interface for data reporting purposes. The <command sectionref="1m">csarun</command> command is the primary daily accounting shell script.</para>
<para>For more detailed information on the three types of IRIX accounting, refer to the following sections:<itemizedlist>
<listitem><para><xref linkend="Z889630861glen"></para>
</listitem>
<listitem><para><xref linkend="Z889631314glen"></para>
</listitem>
<listitem><para><xref linkend="Z182215011289howie"></para>
</listitem></itemizedlist></para>
</section>
<section id="Z895169553janelle">
<title>Concepts and Terminology</title>
<para><comment>What other concepts need to be defined? </comment></para>
<para><indexterm><primary>accounting</primary><secondary>concepts</secondary></indexterm><indexterm><primary>accounting</primary><secondary>terminology</secondary></indexterm>The following concepts and terms are important to understand when using the accounting features:</para>
<deflist>
<colheads>
<head1>Term</head1><head2>Description</head2></colheads>
<deflistentry>
<term><indexterm><primary>accounting</primary><secondary>array session accounting</secondary></indexterm>Array session accounting</term>
<listitem><para>Accounting that contains data similar to process accounting records, except that the counters and values reflect the accumulated total of all processes that were members of the array session (an array session is a set of processes all related to each other by a single unique identifier&mdash;the array session handle). Array session accounting is available in extended accounting and IRIX CSA.</para>
</listitem></deflistentry>
<deflistentry>
<term><indexterm><primary>accounting</primary><secondary>daily accounting</secondary></indexterm>Daily accounting</term>
<listitem><para>In basic process accounting, daily accounting can only be run once a day.</para>
<para>With IRIX CSA, it can be run as many times as necessary during a day; however, this feature is still referred to as daily accounting.</para>
</listitem></deflistentry>
<deflistentry>
<term><indexterm><primary>accounting</primary><secondary>job accounting</secondary></indexterm><indexterm><primary>accounting</primary><secondary>jobs</secondary></indexterm><indexterm><primary>jobs</primary><secondary>accounting, in</secondary></indexterm>Job accounting</term>
<listitem><para>A job is a grouping of processes that the system treats as a single entity.</para>
<para>IRIX CSA is the only accounting type to organize accounting data by jobs and boot times and then place the data into a record file.</para>
<para>For non-NQS jobs, a job consists of all accounting data for a given job ID during a single boot period.</para>
<para>A job for an NQS job consists of the accounting data for all job IDs associated with the job's NQS sequence number/machine name identifier. NQS jobs may span multiple boot periods. If a job is restarted, it has the same job ID associated with it during all boot periods in which it runs. Rerun NQS jobs have multiple job IDs. IRIX CSA treats all phases of an NQS job as being in the same job.</para>
</listitem></deflistentry>
<deflistentry>
<term>Monthly accounting</term>
<listitem><para>In basic process accounting, this refers to accounting that is run on a monthly basis.</para>
<para>IRIX CSA, however, lets system administrators specify the time periods for which monthly or cumulative accounting is to be run. Thus, monthly accounting can be run more than once a month.</para>
</listitem></deflistentry>
<deflistentry>
<term>Project accounting</term>
<listitem><para>Accounting that is based off a project ID. A project ID enables a user's work to be billed to more than one department. Project accounting is available in extended accounting and IRIX CSA.</para>
</listitem></deflistentry>
<deflistentry>
<term>Recycled data</term>
<listitem><para>By default, accounting data for active jobs is recycled until the job terminates. IRIX CSA reports only data for terminated jobs unless <command>csarun</command> is invoked with the <literal>-A</literal> option. <command>csarun</command> places recycled data into data files in the <filename>/var/adm/acct/day</filename> directory. These data files are suffixed with a <literal>0</literal>; for example, process accounting data for active jobs from previous accounting periods is in the <filename>/var/adm/acct/day/pacct0</filename> file.</para>
</listitem></deflistentry>
<deflistentry>
<term>Session file</term>
<listitem><para>A sorted <literal>pacct</literal> file (<literal>spacct</literal>). The session file is also known as the Super-record or Session-Record file.</para>
</listitem></deflistentry>
<deflistentry>
<term>Uptime period or boot period</term>
<listitem><para>A period delineated by the system boot times found in <filename>/etc/csainfo</filename> and in the <literal>pacct</literal> file as configuration (<literal>cfg</literal>) records. The <command>csaboots</command> command writes to this file during system boot.</para>
</listitem></deflistentry>
</deflist>
</section>
<section id="Z890938990janelle">
<title>Differences in the IRIX Accounting Types</title>
<para>The following table outlines the differences and features of the three IRIX accounting types:</para>
<table frame="all" pgwide="wide" id="Z889736526janelle">
<tbltitle>Differences in the IRIX Accounting Types</tbltitle>
<tgroup cols="4" colsep="1" rowsep="1">
<?PubTbl tgroup dispwid="4.70in">
<colspec colwidth="1.31in">
<colspec colwidth="1.07in">
<colspec colwidth="1.06in">
<colspec colwidth="1.06in">
<thead>
<row><entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"></entry><entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para><emphasis>Basic Process Accounting</emphasis></para></entry><entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para><emphasis>IRIX Extended Accounting</emphasis></para></entry><entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para><emphasis>IRIX CSA</emphasis></para></entry></row></thead>
<tbody>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Data output file for:</para><para>- processes</para><para>- array sessions</para><para>- jobs</para><para>- NQS daemon</para><para>- tape daemon</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>  </para><para>pacct</para><para>&mdash;</para><para>&mdash;</para><para>&mdash;</para><para>&mdash;</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para> </para><para>SAT</para><para>SAT</para><para>&mdash;</para><para>&mdash;</para><para>&mdash;</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para> </para><para>pacct</para><para>pacct</para><para>pacct</para><para>pacct</para><para>pacct</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Data written from</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>kernel</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>daemon</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>kernel</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Units of accumulation</para><para></para><para></para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>process</para><para></para><para></para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>process</para><para>array session</para><para></para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>process</para><para>array session</para><para>job</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Record types</para><para> </para><para> </para><para> </para><para> </para><para> </para><para>  </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>base</para><para> </para><para> </para><para> </para><para> </para><para> </para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>extended</para><para>eoa (end-of-array session)</para><para> </para><para>  </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>base</para><para>extended</para><para>multitasking</para><para>MPP</para><para>eoj (end-of-job)</para><para>soj (start-of-job/restart-of-job)</para><para>configuration</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Daemons supported</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>none</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>none</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>NQS (batch)</para><para>tape</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Report capabilities</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>System V</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ISV<footnote><para>Independent Software Vendor</para>
</footnote></para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>System V</para><para>CSA</para><para>ISV</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>User job accounting</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>no</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>no</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>yes</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Disk accounting</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>user ID</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>user ID</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>user ID</para><para>group ID</para><para>project ID</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Accounting periods</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>daily</para><para>monthly</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ISV?</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>flexible</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>System billing</para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>none</para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ISV</para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ISV</para><para>SBUs<footnote><para>System Billing Units</para>
</footnote></para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Front-end report formatting interface</para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>none</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ISV</para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt" Weight="light"><para>ISV</para><para>csagcon(8)</para><para>csagfef(8)</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Additional ID fields</para><para> </para><para> </para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>none</para><para> </para><para> </para><para> </para><para> </para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ASH<footnote><para>array session handle</para>
</footnote></para><para>PID<footnote><para>process ID</para>
</footnote></para><para>PPID<footnote><para>parent process ID</para>
</footnote></para><para>PRID<footnote><para>project ID</para>
</footnote></para><para></para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ASH</para><para>job</para><para>PID</para><para>PPID</para><para>PRID</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Machine independent time accounting</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>no</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>yes</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>yes</para></entry></row>
<row>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>Time measurements</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>ticks</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>nanoseconds</para></entry>
<entry align="left" valign="top"><?Pub _cellfont FontStyle="serifed" TypeSize="9pt"><para>microseconds</para></entry></row></tbody></tgroup></table>
</section>
<section id="Z895169611janelle">
<title>Activating the Accounting Types</title>
<para><comment>(Need information on how to turn on all the types of accounting; the following sections should be combined, if possible.)</comment></para>
<para>The following sections desribe how to activate the accounting types.</para>
<section>
<title>Turning On Process Accounting</title>
<para>To turn on basic process accounting: </para>
<orderedlist><listitem><para>Log in to the system as root. </para>
</listitem><listitem><para>Make sure the <filename>eoe.sw.acct</filename> subsystem is installed. If not, install it by following the instructions in the <citetitle>IRIX Admin: Software Installation and Licensing</citetitle> manual.</para>
</listitem><listitem><para>Enter the following command: </para>
<literallayout><userinput>chkconfig acct on</userinput>   </literallayout>
</listitem><listitem><para>Enter the following command: </para>
<literallayout><userinput>/var/lib/acct/startup</userinput>   </literallayout>
<para>This starts the kernel writing information into the file <filename>/var/adm/pacct</filename>. </para>
</listitem></orderedlist>
<para>Basic process accounting is started every time you boot the system. Therefore, every time the system boots, you should see a message similar to the following: </para>
<literallayout>System accounting started </literallayout>
<para>Note that basic process accounting files, especially <filename>/var/adm/pacct</filename>, can grow very large. If you turn on basic process accounting, especially on a server, you should watch the amount of free disk space carefully. See <xref linkend="Z889631798glen"> for more information.</para>
<para></para>
<para>To turn off basic process accounting, follow these steps:</para>
<orderedlist><listitem><para>Log in as root. </para>
</listitem><listitem><para>Enter the following command: </para>
<literallayout><userinput>chkconfig acct off</userinput>   </literallayout>
</listitem><listitem><para>Enter the following command: </para>
<literallayout><userinput>/var/lib/acct/shutacct</userinput>   </literallayout>
<para>This stops the kernel from writing accounting data into the file <filename>/var/adm/pacct.</filename> Basic process accounting is now turned off.</para>
</listitem></orderedlist>
</section>
<section>
<title>Turning on Extended Accounting</title>
<para>To begin using extended accounting, follow these steps:</para>
<orderedlist><listitem><para>Enable session accounting in the kernel by using the <command sectionref="1m">systune</command> command to set the <literal>do_sessacct</literal> or <literal>do_extpacct</literal> parameters to non-zero values; see the <command sectionref="blank">systune</command> man page for more information.</para>
</listitem><listitem><para>Install the <filename>eoe.sw.audit</filename> subsystem from IRIX distribution media; see the <citetitle>IRIX Admin: Software Installation and Licensing</citetitle> manual for more information.</para>
</listitem><listitem><para>Enable the audit facility with the following command:</para>
<literallayout><userinput>chkconfig audit on</userinput>   </literallayout>
</listitem><listitem><para>Use the <command sectionref="1m">satconfig</command> command to enable the <literal>sat_proc_acct</literal> or <literal>sat_session_acct</literal> audit events; see the <command sectionref="blank">satconfig</command> man page for more information. If you are using the audit facility for accounting purposes only, you should turn off all other events to conserve disk space.</para>
</listitem></orderedlist>
</section>
<section>
<title>Turning on IRIX CSA</title>
<para></para>
</section>
</section>
<section id="Z895169633janelle">
<title>Files and Directories</title>
<para>The following sections describe the basic accounting and IRIX CSA files and directories. For information on extended accounting data records, see the System Audit Trail information in the <citetitle>IRIX Admin: Backup and Security</citetitle> manual.</para>
<section id="Z889631227glen">
<title>Basic Process and IRIX CSA Files and Directories</title>
<para>The directory <filename>/var/lib/acct</filename> contains the programs and shell scripts necessary to run the accounting system. Basic process accounting and IRIX CSA use a login (<filename>/var/adm</filename>) to perform certain tasks <comment>such as what?</comment>. <filename>/var/adm</filename> contains active data collection files used by the basic process accounting and IRIX CSA. The following figure depicts the primary subdirectories in <filename>/var/adm</filename>:</para>
<para><figure id="Z895085587janelle">
<graphic entityref="a11926" magnification="85"></graphic>
<title>The <filename>/var/adm/acct</filename> Directory</title>
</figure></para>
<para> As distributed, only the directory <filename>/var/adm/acct/day</filename> is readable by all users. Within the <literal>day</literal> directory, only the <literal>pacct*</literal> files are readable by all users. This allows any user to examine the <literal>pacct*</literal> files by using the <command>acctcom</command> or <command>csaja</command> command. All other directories and files within <filename>/var/adm/acct</filename> are accessible only by <literal>root</literal> and users in the group <literal>adm</literal>. </para>
<para><warning><title>Warning</title><para>Both <command>acctcom</command> and <command>csaja</command> on a IRIX security-enhanced system are considered to be covert channels. You may want to consider restricting access to these commands to the <literal>adm</literal> group.</para>
</warning></para>
<para><comment>(Not sure where to put this&ndash;I moved it from the files and directories section.)</comment>During IRIX CSA data processing, sites may select to archive the raw and/or processed data offline. <xref role="section" linkend="Z523909151189howie">, describes how to do this. By default, all raw data files are deleted after use and are not archived.</para>
<para>Besides the <filename>/var/adm/acct</filename> directory, there are several other system directories used for basic process and IRIX CSA accounting. See the following sections for more information on all these accounting directories.</para>
<section><title>Files in the <filename>/var/adm</filename> Directory</title>
<para>The following files are in the <filename>/var/adm</filename> directory:</para>
<deflist>
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename>diskdiag</filename> </term>
<listitem><para>Diagnostic output during the execution of disk accounting programs. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>dtmp</filename> </term>
<listitem><para>Output from the <command>acctdusg</command> program. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>fee</filename> </term>
<listitem><para>Output from the <command>chargefee</command> program, ASCII <filename>tacct</filename> records. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>pacct</filename> </term>
<listitem><para>Active basic process accounting file. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>pacct</filename>? </term>
<listitem><para>Basic process accounting files switched by <filename>turnacct</filename>.   </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Spact?.<replaceable>MMDD</replaceable></filename> </term>
<listitem><para>Basic process accounting files for <replaceable>MMDD</replaceable> during execution of <command>runacct</command>.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Files in the <filename>/var/adm/acct/</filename> Directory</title>
<para>The <filename>/var/adm/acct</filename> directory contains the following directories: </para>
<deflist termlength="narrow">
<colheads>
<head1>Directory</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>day</literal></term>
<listitem><para>Contains the current accounting files and most of the unprocessed accounting files. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>work</literal></term>
<listitem><para>(Used by IRIX CSA as a temporary work area.) Contains the raw files that were moved from <filename>/var/adm/acct/day</filename> at the start of an IRIX CSA daily accounting run.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>sum</command></term>
<listitem><para>Contains the cumulative daily accounting summary files and reports updated by <command>runacct</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>fiscal</literal></term>
<listitem><para>Contains monthly and periodic accounting summary files and reports created by <command>monacct</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>nite</literal></term>
<listitem><para>Contains processing messages and errors and files that are used daily by <command>runacct</command>.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Files in the <filename>/var/adm/acct/day</filename> Directory</title>
<para>The following files are located in the <filename>/var/adm/acct/day</filename> directory:</para>
<deflist id="Z895088413janelle">
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename>dacct????</filename></term>
<listitem><para>Disk accounting data.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>pacct*</filename></term>
<listitem><para>Process and daemon accounting data.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>dtmp</filename></term>
<listitem><para>Disk accounting data (ASCII) created by <command>dodisk</command>.</para>
</listitem></deflistentry>
</deflist>
<para><note><para>Accounting files in <filename>/var/adm/acct/day</filename> with names that include the suffix <literal>0</literal> contain data from jobs that did not complete during the previous accounting periods.</para>
</note></para>
</section>
<section><title>Files in the <filename>/var/adm/acct/work</filename> Directory (IRIX CSA Only)</title>
<para>The following files are located in the <filename>/var/adm/acct/work</filename> directory:</para>
<deflist>
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename>BAD.Wpacct*</filename></term>
<listitem><para>Unprocessed accounting data containing incorrect records (verified by <command>csapacct</command>).</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Ever.tmp</filename></term>
<listitem><para>Data verification work file.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Pctime*</filename></term>
<listitem><para>Preprocessed connect-time data.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Puptime*</filename></term>
<listitem><para>Uptimes.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Rctime0</filename></term>
<listitem><para>Connect data to be recycled in the next accounting run.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Rpacct0</filename></term>
<listitem><para>Process and daemon accounting data to be recycled in the next accounting run.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Ruptime0</filename></term>
<listitem><para>Uptimes to be recycled in the next accounting run.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Wctime*</filename></term>
<listitem><para>Verified, unprocessed connect-time data.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Wdisktacct</filename></term>
<listitem><para>Disk accounting data (<literal>cacct.h</literal> format) created by <command>acctdisk</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Wdtmp</filename></term>
<listitem><para>Disk accounting data (ASCII) created by <command>diskusg</command> or <command>acctdusg</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>Wpacct*</literal></term>
<listitem><para>Raw process and daemon accounting data.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>Wwtmp</filename></term>
<listitem><para>Raw connect-time data.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Files in the <filename>/var/adm/acct/sum</filename> Directory</title>
<para>The following files are located in the <filename>/var/adm/acct/sum</filename> directory:</para>
<deflist>
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename>cms</filename> </term>
<listitem><para>Total command summary file for current fiscal period in internal
summary format.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>cmsprev</filename> </term>
<listitem><para>Command summary file without latest update. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>daycms</filename> </term>
<listitem><para>Command summary file for yesterday in internal summary format. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>loginlog</filename> </term>
<listitem><para>Login record file created by <command>lastlogin</command>.
  </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>pact.MMDD</filename> </term>
<listitem><para>Concatenated version of all <filename>pacct</filename> files
for <replaceable>MMDD</replaceable>, removed by remove procedure after reboot <comment>(see remove()?)</comment>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>rprtMMDD</filename> </term>
<listitem><para>Saved output of <command>prdaily</command> programs. Contains
the daily accounting reports for <replaceable>MMDD</replaceable>. See (1.8.3.7)
and ?? for more information on the reports.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>tacct</filename> </term>
<listitem><para>Cumulative total accounting file for current fiscal period.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>tacctprev</filename> </term>
<listitem><para>Same as <command>tacct</command> without latest update. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>tacctMMDD</filename> </term>
<listitem><para>Total accounting file for <replaceable>MMDD</replaceable>.
  </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>wtmp.MMDD</filename> </term>
<listitem><para>Saved copy of <filename>wtmp</filename> file for <replaceable>MMDD</replaceable>, removed by remove procedure after reboot; see <command sectionref="1m">remove</command> for more information.</para>
</listitem></deflistentry>
</deflist>
<section><title>Files in the <filename>/var/adm/acct/sum/data</filename> Directory (IRIX CSA Only)</title>
<para>The following data files are located in the <filename>/var/adm/acct/sum/data</filename> directory:</para>
<deflist termlength="standard">
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename><replaceable>MMDDhhmm</replaceable>/cacct</filename></term>
<listitem><para>Consolidated daily data in <literal>cacct.h</literal> format. This file is deleted by <command>csaperiod</command> if the <literal>-r</literal> option is specified.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename><replaceable>MMDDhhmm</replaceable>/cms</filename></term>
<listitem><para>Daily command usage data in command summary (<literal>cms</literal>) record format. This file is deleted by <command>csaperiod</command> if the <literal>-r</literal> option is specified.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename><replaceable>MMDDhhmm</replaceable>/dacct</filename></term>
<listitem><para>Daily disk usage data in <literal>cacct.h</literal> format. This file is deleted by <command>csaperiod</command> if the <literal>-r</literal> option is specified.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Files in the <filename>/var/adm/acct/sum/rpt</filename> Directory</title>
<para>The following reports are located in the <filename>/var/adm/acct/sum/rpt</filename> directory:</para>
<deflist termlength="standard">
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename><replaceable>MMDDhhmm</replaceable>/rprt</filename></term>
<listitem><para>Daily accounting report.</para>
</listitem></deflistentry>
</deflist>
</section>
</section>
<section><title>Files in the <filename>/var/adm/acct/fiscal</filename> Directory</title>
<para>The following files are located in the <filename>/var/adm/acct/fiscal</filename> directory:</para>
<deflist>
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename>cms?</filename> </term>
<listitem><para>Total command summary file for <replaceable>fiscal?</replaceable> <comment>(What is &ldquo;fiscal?&rdquo;?)</comment>in internal summary format.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>fiscrpt?</filename> </term>
<listitem><para>Report similar to <command>prdaily</command> for <replaceable>fiscal?</replaceable>.  </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>tacct?</filename> </term>
<listitem><para>Total accounting file for <replaceable>fiscal?</replaceable>.
  </para>
</listitem></deflistentry>
</deflist>
<section><title>Files in the <filename>/var/adm/acct/fiscal/data</filename>
Directory</title>
<para>The following data files are located in the <filename>/var/adm/acct/fiscal/data</filename> directory:</para>
<para><deflist id="Z895089535janelle">
<deflistentry>
<term><filename><replaceable>MMDDhhmm</replaceable>/pdacct</filename></term>
<listitem><para>Consolidated periodic data generated on <replaceable>MMDD</replaceable> at <replaceable>hhmm</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename><replaceable>MMDDhhmm</replaceable>/cms</filename></term>
<listitem><para>Periodic command usage data in command summary (<literal>cms</literal>) record format.</para>
</listitem></deflistentry>
</deflist></para>
</section>
<section><title>Files in the <filename>/var/adm/acct/fiscal/rpt</filename>
Directory</title>
<para>The following reports are located in the <filename>/var/adm/acct/fiscal/rpt</filename> directory:</para>
<deflist termlength="standard">
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename><replaceable>MMDDhhmm</replaceable>/rprt</filename></term>
<listitem><para>Periodic accounting report generated on <replaceable>MMDD</replaceable> at <replaceable>hhmm</replaceable>.</para>
</listitem></deflistentry>
</deflist>
</section>
</section>
<section><title>Files in the <filename>/var/adm/acct/nite</filename> Directory</title>
<para>The following files are located in the <filename>/var/adm/acct/nite</filename> directory:</para>
<deflist>
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><filename>active</filename> </term>
<listitem><para>Used by <command>runacct</command> and <command>csarun</command> to record progress and print warning and error messages. <filename>active<replaceable>MMDD</replaceable></filename> is the same as <filename>active</filename> after <command>runacct</command> or <command>csarun</command> detects an error.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>clastdate</filename></term>
<listitem><para>(IRIX CSA only) Last two times <command>csarun</command> was executed; in <replaceable>MMDD hhmm</replaceable> format.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>cms</filename> </term>
<listitem><para>(Basic process accounting only) ASCII total command summary used by <command>prdaily</command>.   </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>ctacct.MMDD</filename> </term>
<listitem><para>(Basic process accounting only) Connect accounting records in <filename>tawcct.h</filename> format.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>ctmp</filename> </term>
<listitem><para>(Basic process accounting only) Output of <literal>acctcon1</literal> program, connect session records in <filename>ctmp.h</filename>
format. See <command sectionref="1m">acctcon</command> for more information.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>daycms</filename> </term>
<listitem><para>(Basic process accounting only) ASCII daily command summary
used by <command>prdaily</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>daytacct</filename> </term>
<listitem><para>(Basic process accounting only) Total accounting records for one day in <filename>tacct.h</filename> format.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>disktacct</filename> </term>
<listitem><para>Disk accounting records in <filename>tacct.h</filename> format or <filename>cacct.h</filename> , created by <command>dodisk</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>dk2log</filename></term>
<listitem><para>(IRIX CSA only) Diagnostic output created during execution of <command>dodisk</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>E*<replaceable>MMDDhhmm</replaceable></filename></term>
<listitem><para>(IRIX CSA only) Error/warning messages for an accounting run done on <replaceable>MMDD</replaceable> at <replaceable>hhmm</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term>   <filename>fd2log</filename> </term>
<listitem><para>Diagnostic output created during execution of <command>runacct</command> or <command>csarun</command> (see <literal>cron</literal> entry <comment>(What is this referring to&mdash;the cron man page??)</comment>). </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>lastdate</filename> </term>
<listitem><para>(Basic process accounting only) Last day <command>runacct</command> executed in date <replaceable>+%m%d</replaceable> format <comment>(Is this format correct???)</comment></para>
</listitem></deflistentry>
<deflistentry>
<term><filename>lineuse</filename></term>
<listitem><para>tty line usage report used by <command>prdaily</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>lock lock1</filename> </term>
<listitem><para>Used to control serial use of <command>runacct</command> or <command>csarun</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>log</filename> </term>
<listitem><para>(Basic process accounting only) Diagnostic output from <command>acctcon1</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>log<replaceable>MMDD</replaceable></filename> </term>
<listitem><para>(Basic process accounting only) Same as <literal>log</literal> after <command>runacct</command> detects an error.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>pd2log</filename></term>
<listitem><para>(IRIX CSA only) Diagnostic output created during execution
of <command>csaperiod</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>pdact</filename></term>
<listitem><para>(IRIX CSA only) Progress and status of <command>csaperiod</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>pdact<replaceable>MMDDhhmm</replaceable></filename></term>
<listitem><para>(IRIX CSA only) Progress and status of <command>csaperiod</command> after an error has been detected.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>reboots</filename> </term>
<listitem><para>The start and end dates from <filename>wtmp</filename> and a listing of reboots. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>statefile</filename> </term>
<listitem><para>Used to record current state during execution of <command>runacct</command> or <command>csarun</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>tmpwtmp</filename> </term>
<listitem><para>The <filename>wtmp</filename> file corrected by <command>wtmpfix</command>; see <command>fwtmp</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>wtmperror</filename> </term>
<listitem><para>Place for <command>wtmpfix</command> error messages.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>wtmperrorMMDD </filename></term>
<listitem><para>Same as <filename>wtmperror</filename> after <command>runacct</command> or <command>csarun</command> detects an error.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>wtmp.MMDD</filename> </term>
<listitem><para>Previous day's <filename>wtmp</filename> file.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title><filename>/var/lib/acct</filename> Directory (IRIX CSA Only)</title>
<para>The <filename>/var/lib/acct</filename> directory contains virtually all of the programs and scripts used by IRIX CSA. The only IRIX CSA program not located here is <command>/etc/csaboots</command> (see the <command>csaboots</command> man page), which records boot times at system startup. Programs used only by IRIX CSA begin with the characters <literal>csa</literal>.</para>
<para>The <filename>/var/lib/acct</filename> directory contains the following
programs and shell scripts used by IRIX CSA: </para>
<deflist>
<colheads>
<head1>Program/script</head1><head2>Description</head2></colheads>
<deflistentry>
<term><command>csaaddc</command></term>
<listitem><para>Merges consolidated (<literal>cacct</literal>) accounting
files.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>csaboots</command></term>
<listitem><para>Creates a sorted <literal>pacct</literal> file. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csabuild</command></term>
<listitem><para>Creates a session file. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csacon</command></term>
<listitem><para>Creates a consolidated (<literal>cacct</literal>) accounting
file. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csacrep</command></term>
<listitem><para>Generates consolidated accounting reports. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csadrep</command></term>
<listitem><para>Reports daemon usage based on the session file. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csaedit</command></term>
<listitem><para>Verifies, deletes records, and prints various data files. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csagcon</command></term>
<listitem><para>Consolidates accounting data for <literal>session</literal>
and <literal>pacct</literal> files.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>csagfef</command></term>
<listitem><para>Formats consolidated accounting data.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>csajrep</command></term>
<listitem><para>Generates job reports from a session file. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csaline</command></term>
<listitem><para>Preprocesses connect-time data (<filename>/etc/wtmp</filename>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command>csaperiod</command></term>
<listitem><para>Performs monthly accounting. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csaperm</command></term>
<listitem><para>Changes the group ID and permissions on the accounting files.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>csarecy</command></term>
<listitem><para>Recycles session data for unfinished jobs. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csarun</command></term>
<listitem><para>Performs daily accounting. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>csaswitch</command></term>
<listitem><para>Enables or disables kernel and daemon accounting.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>csaverify</command></term>
<listitem><para>Verifies various data files. </para>
</listitem></deflistentry>
<deflistentry>
<term><command>getconfig</command></term>
<listitem><para>Extracts values from the configuration file. </para>
</listitem></deflistentry>
</deflist>
<para>The <filename>/var/lib/acct</filename> directory may also contain the following programs if your site uses the accounting user exits: </para>
<deflist>
<colheads>
<head1>Program/script</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>csa.archive1</literal></term>
<listitem><para>Site-generated user exit for <command>csarun</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>csa.archive2</literal></term>
<listitem><para>Site-generated user exit for <command>csarun</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>csa.fef</literal></term>
<listitem><para>Site-generated user exit for <command>csarun</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>csa.user</literal></term>
<listitem><para>Site-generated user exit for <command>csarun</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>csa.puser</literal></term>
<listitem><para>Site-generated user exit for <command>csaperiod</command>.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title><filename>/etc</filename> Directory (IRIX CSA Only)</title>
<para>The <filename>/etc</filename> directory contains uptime and connect-time data in the following files:</para>
<deflist>
<colheads>
<head1>File</head1><head2>Description</head2></colheads>
<deflistentry>
<term><command>csaboots</command></term>
<listitem><para>Captures system boot times.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>csainfo</literal></term>
<listitem><para>Output file of <command>csaboots</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>wtmp</command></term>
<listitem><para>Current connect-time accounting data.</para>
<para><warning><title>Warning</title><para> On an IRIX security-enhanced system, <filename>/etc/wtmp</filename> is considered a covert channel. You may want to consider restricting access to this file to the <literal>adm</literal> group. </para>
</warning></para>
</listitem></deflistentry>
</deflist>
</section>
<section><title><filename>/etc/config</filename> Directory (IRIX CSA Only)</title>
<para>The <filename>/etc/config</filename> directory is the location of the <literal>csa_config</literal> file that contains the configurable parameters used by the accounting commands. Use a text editor to change these parameters. </para>
</section>
<section><title><filename>/tmp/AC.<replaceable>MMDD</replaceable></filename> Directory (IRIX CSA Only)</title>
<para>The <filename>/tmp</filename> directory is used while <command>csarun</command> is running. It contains the sorted <filename>pacct</filename> file (<filename>spacct</filename>). <comment>(Need more info.)</comment></para>
</section>
</section>
</section>
<section id="Z889630861glen">
<title>Basic Process Accounting</title>
<para>The basic process accounting system is based on standard System V accounting. This standard UNIX accounting system provides the following information:</para>
<itemizedlist>
<listitem><para>The number of commands a user runs </para>
</listitem>
<listitem><para>The size and duration of user commands </para>
</listitem>
<listitem><para>Data throughput (I/O) </para>
</listitem>
<listitem><para>Per-process resource utilization</para>
</listitem>
<listitem><para>Record connect sessions</para>
</listitem>
<listitem><para>Disk usage</para>
</listitem>
<listitem><para>Usage information to charge fees to specific logins</para>
</listitem></itemizedlist>
<section>
<title>Basic Process Accounting Data Processing</title>
<para><comment>(Need to verify the following section. I combined the info from the existing two sections into this one section on data processing. Does it make sense this way? Is is correct?)</comment></para>
<para>When the basic process accounting system is turned on, it processes
accounting data in the following way: </para>
<itemizedlist>
<listitem><para>When the IRIX system enters multiuser mode, <filename>/var/lib/acct/startup</filename> is executed as follows: </para>
<para>The <command>acctwtmp</command> program adds a boot record to <filename>/etc/wtmp</filename>. This record is signified by using the system name as
the login name in the <filename>wtmp</filename> record.</para>
<para>Process accounting is started by <command>turnacct</command>, which
in turn executes <command>acct</command> on<filename>/var/adm/pacct</filename>. </para>
<para><command>remove</command> is executed to clean up the saved <filename> pacct</filename> and <filename>wtmp</filename> files left in the <filename> sum</filename> directory by <command>runacct</command>. </para>
</listitem>
<listitem><para>The IRIX kernel writes a record of each process on the system
that terminates into the file <filename>/var/adm/pacct</filename>. The file
contains one record per terminated process, organized according to the format
defined in <filename>/var/include/sys/acct.h.</filename></para>
</listitem>
<listitem><para>The <command>chargefee</command> program can be used to bill
users. It adds records to <filename>/var/adm/fee</filename> that are picked
up and processed by the next execution of <command>runacct</command> and merged
into the total accounting records. </para>
</listitem>
<listitem><para>The cron program executes monthly accounting (<filename>monacct</filename>) as specified in <filename>/var/spool/cron/crontabs/adm</filename>. </para>
</listitem>
<listitem><para>The <command>ckpacct</command> procedure is run through <command>cron</command> every hour of the day to check the size of <command>/var/adm/pacct</command>. If the file grows past 1000 blocks (default), the <command>turnacct</command><command> switch</command> is executed. The advantage of having
several smaller <filename>pacct</filename> files becomes apparent when you
try to restart <command>runacct</command> after a failure processing these
records. <comment>Need more info here&mdash;where do you set these up???</comment>
See ???? for more information.</para>
</listitem>
<listitem><para><command>runacct</command> is executed through <command>cron</command> each night. It processes the active accounting files, <filename>/var/adm/pacct</filename>, <filename>/etc/wtmp</filename>, <filename>/var/adm/acct/nite/disktacct </filename>, and <filename>/var/adm/fee</filename>. <command>runacct</command>
produces command summaries and usage summaries by login name. </para>
</listitem>
<listitem><para>The root <literal>crontab</literal> file runs the <command>dodisk</command> program, which provides a report on current disk usage. 
The disk utilization programs <command>acctdusg</command> and <command>diskusg</command> break down disk usage by login and prepare reports. These programs
are run by the <command>dodisk</command> script. For details, see the <command sectionref="1m">acct</command>, <command sectionref="1m">acctsh</command>,
and <command sectionref="blank">diskusg</command> man pages.</para>
<para>Note that for XFS filesystems, disk quotas (installed with the subsystem <literal> eoe.sw.quotas</literal>) can be used as an efficient accounting tool to keep
track of disk usage. Refer to <citetitle>IRIX Admin: Disks and Filesystems</citetitle> for more information. <comment>(Need to verify whether this feature
was completed.)</comment></para>
</listitem>
<listitem><para>The <command>login</command> and <command>init</command> programs
record connect sessions by writing records into <filename>/etc/wtmp</filename>.
This happens by default, as long as the <filename>wtmp</filename> file exists. </para>
</listitem>
<listitem><para>Records of date changes, reboots, and shutdowns are copied
from <filename>/etc/utmp</filename> to <filename>/etc/wtmp</filename> by the <command> acctwtmp</command> command. </para>
</listitem>
<listitem><para>The <command>acctwtmp</command> utility is automatically called
by <command>runacct</command>, <command>/var/lib/acct/startacct</command>,
and <filename>/var/lib/shutacct</filename>, once basic process accounting
is turned on. </para>
</listitem>
<listitem><para>When the system is shut down using <command>shutdown</command>,
the <command> shutacct</command> shell procedure is executed. It writes a
shutdown reason record into <filename>/etc/wtmp</filename> (see <command sectionref="4">utmp </command>)and turns basic process accounting off. </para>
</listitem>
<listitem><para><comment>(How should we handle this paragraph&mdash;most systems
do not reboot each morning...)</comment>After the first reboot each morning,
you should execute <filename>/var/lib/acct/prdaily</filename> to print the
previous day's accounting report.</para>
</listitem></itemizedlist>
</section>
<section id="Z889631798glen">
<title>Accounting File Size Control</title>
<para>Process and disk accounting files can grow very large. On a busy system,
they can grow quite rapidly. <comment>more info needed&mdash;example?</comment></para>
<para>To help keep the size of the file <filename>/var/adm/pacct</filename>
under control, the <command>cron</command> command runs <filename>/var/lib/acct/ckpacct</filename> to check the size of the file and the available disk space on
the file system.  <command>cron</command> is run once per hour by default.</para>
<para>If the size of the <filename>pacct</filename> file exceeds 1000 blocks (by default), it runs the <command>turnacct</command> command with argument &ldquo;switch.&rdquo; The &ldquo;switch&rdquo; argument causes <command>turnacct</command> to back up the <filename>pacct</filename> file (removing any existing backup copy) and start a new, empty <filename>pacct</filename> file. This means that at any time, no more than 2000 blocks of disk space are taken by <filename>pacct</filename> file information.</para>
<para><comment>This will change.</comment>If the amount of free space in the file system falls below 500 blocks, <command>ckpacct</command> automatically turns off basic process accounting by running the <command>turnacct</command> command with the &ldquo;off&rdquo; argument. When at least 500 blocks of disk space are free, accounting is activated again the next time <command>cron</command> runs <command>ckpacct</command>.</para>
</section>
<section>
<title>Setting Up the Accounting System</title>
<para>If you have installed the system accounting option, all the files and command lines for implementation have been set up properly <comment>(can/should they change any of these files? are there configurable parameters they can change?)</comment>. You may wish to verify that the entries in the system configuration files are correct. In order to automate the operation of the accounting system, you should check that the following have been done: </para>
<orderedlist><listitem><para>The file <filename>/etc/init.d/acct</filename> should contain the following lines (among others):</para>
<literallayout><filename>/var/lib/acct/startup</filename>
<filename>/var/lib/acct/shutacct</filename></literallayout>
<para>The first line starts basic process accounting during the system startup process; the second stops it before the system is brought down.</para>
</listitem><listitem><para>For most installations, the following entries should be in    <filename>/var/spool/cron/crontabs/adm</filename> so that <command>cron</command> automatically runs the daily accounting. These lines should already exist:</para>
<literallayout width="standard" fontsize="9pt">0 4 * * 1-6 if /etc/chkconfig acct; then /var/lib/acct/runacct 2>
/var/adm/acct/nite/fd2log; fi
5 * * * 1-6 if /etc/chkconfig acct; then /var/lib/acct/ckpacct; fi</literallayout>
<para>Note that the above <command>cron</command> commands must constitute
only one line in the <filename>crontabs</filename> file. The following command,
which also constitutes only one line in the <filename>crontabs</filename>
file, should be in <filename>/var/spool/cron/crontabs/root</filename>:</para>
<literallayout>0 2 * * 4 if /etc/chkconfig acct; then /var/lib/acct/dodisk >
/var/adm/acct/nite/disklog; fi</literallayout>
</listitem><listitem><para>To facilitate monthly merging of accounting data,
the following entry in <filename>/var/spool/cron/crontabs/adm</filename> allows <command>monacct</command> to clean up all daily reports and daily total accounting
files, and deposit one monthly total report and one monthly total accounting
file in the fiscal directory: </para>
<literallayout fontsize="9pt">0 5 1 * * if /etc/chkconfig acct; then /var/lib/acct/monacct; fi</literallayout>
<para>The above command is all on one line in the source file, and takes advantage
of the default action of <command>monacct</command> that uses the current
month's date as the suffix for the file names. Notice that the entry is executed
when <command>runacct</command> has sufficient time to complete. This will,
on the first day of each month, create monthly accounting files with the entire
previous month's data. </para>
</listitem><listitem><para>You may wish to verify that an project exists for <filename>adm</filename>. Also, verify that the PATH shell variable is set in <filename>/var/adm/.profile</filename> to:</para>
<literallayout>PATH=/var/lib/acct:/bin:/var/bin </literallayout>
</listitem><listitem><para>To start up basic process accounting, simply type
the following commands:</para>
<para><userinput>chkconfig acct on </userinput></para>
<para>and </para>
<para><userinput>/var/lib/acct/startup </userinput></para>
</listitem></orderedlist>
<para>The next time the system is booted, basic process accounting starts. <comment>(How can they start basic acct w/o rebooting?) </comment></para>
</section>
<section id="Z889631286glen">
<title>Daily System Accounting With <command>runacct</command></title>
<para>The <command>runacct</command> command is the main daily accounting
shell procedure. It is normally initiated by <command>cron</command> during
nonpeak hours. <command>runacct</command> processes connect, fee, disk, and
basic process accounting files. It also prepares daily and cumulative summary
files for use by <command>prdaily</command> or for billing purposes.</para>
<section><title><command>runacct</command> Summary Files</title>
<para>The following files produced by <command>runacct</command> and located
in <filename>/var/adm</filename> are of particular interest: </para>
<deflist>
<deflistentry>
<term><filename>nite/lineuse</filename> </term>
<listitem><para>Produced by <command>acctcon</command>, reads the <filename>wtmp</filename> file and produces usage statistics for each terminal line
on the system. This report is especially useful for detecting bad lines. If
the ratio between the number of logoffs to logins exceeds about 3:1, it is
quite possible that the line is failing. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>nite/daytacct</filename> </term>
<listitem><para>The total accounting file for the previous day in <filename>tacct.h </filename>format. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>sum/tacct</filename> </term>
<listitem><para>The accumulation of each day's <filename>nite/daytacct</filename>
can be used for billing purposes. It is restarted each month or fiscal period
by the <command>monacct</command> procedure. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>sum/daycms</filename> </term>
<listitem><para>Produced by the <command>acctcms</command> program. It contains
the daily command summary. The ASCII version of this file is <filename>nite/daycms</filename>. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>sum/cms</filename> </term>
<listitem><para>The accumulation of each day's command summaries. It is restarted
by the execution of <command>monacct</command>. The ASCII version is <filename>nite/cms</filename>.</para>
</listitem></deflistentry>
<deflistentry>
<term><filename>sum/loginlog</filename> </term>
<listitem><para>Produced by the last login shell procedure. It maintains a
record of the last time each <command>login</command> name was used. </para>
</listitem></deflistentry>
<deflistentry>
<term><filename>sum/rprtMMDD </filename></term>
<listitem><para>Each execution of <command>runacct</command> saves a copy
of the daily report that can be printed by <command>prdaily</command>. </para>
</listitem></deflistentry>
</deflist>
<para><command>runacct</command> takes care not to damage files in the event
of errors. A series of protection mechanisms are used that attempt to recognize
an error, provide intelligent diagnostics, and terminate processing in such
a way that <command>runacct</command> can be restarted with minimal intervention. </para>
<para><command>runacct</command> records its progress by writing descriptive
messages into the file <filename>active</filename>. (Files used by <command>runacct</command> are assumed to be in the <filename>nite</filename> directory
unless otherwise noted.) All diagnostics output during the execution of <command>runacct</command> are written into <filename>fd2log.runacct</filename> complains
if the files <filename>lock</filename> and <filename>lockl</filename> exist
when invoked. The <filename>lastdate</filename> file contains the month and
day <command>runacct</command> was last invoked and is used to prevent more
than one execution per day. If <command>runacct</command> detects an error,
a message is written to <filename>/dev/console</filename>, mail is sent to <literal>root</literal> and <literal>adm</literal>, locks are removed, diagnostic files
are saved, and execution is terminated.</para>
</section>
<section><title><command>runacct</command> Reentrant States</title>
<para>To allow <command>runacct</command> to be restartable, processing is
broken down into separate reentrant states. A file is used to remember the
last state completed. When each state completes, <filename>statefile</filename>
is updated to reflect the next state. After processing for the state is complete, <filename>statefile</filename> is read and the next state is processed. When <command>runacct</command> reaches the <literal>CLEANUP</literal> state, it removes
the locks and terminates. States are executed as follows: </para>
<deflist>
<deflistentry>
<term><literal>SETUP</literal></term>
<listitem><para>The command <command>turnacct</command> switch is executed.
The basic process accounting files, <filename>/var/adm/pacct?</filename>,
  are moved to <filename>/var/adm/Spacct?.MMDD</filename>. The <filename>/etc/wtmp</filename> file is moved to <filename>/var/adm/acct/nite/wtmp.MMDD</filename> with the current time added on the end. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>WTMPFIX</literal></term>
<listitem><para>The <command>wtmpfix</command> program checks the <filename>wtmp</filename> file <comment>(see fwtmp()?)</comment> in the <filename>nite</filename> directory for correctness. Some date changes cause <command>acctcon1</command> to fail, so <command>wtmpfix</command> attempts to adjust the time
stamps in the <filename>wtmp</filename> file if a date change record appears.</para>
<para><comment>Should we add: If <literal>WTMPFIX</literal> is unable to fix
the <filename>wtmp</filename> file, you need to manually repair the file.
Refer to Fixing <literal>wtmp</literal> errors for more information.</comment></para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CONNECT</literal></term>
<listitem><para>Connect session records are written to <filename>ctmp</filename>
in the form of <filename>ctmp.h</filename>. The lineuse file is created, and
the reboots file is created showing all of the boot records found in the <filename>wtmp</filename> file.</para>
<para><filename>ctmp</filename> is converted to <filename>ctacct.MMDD</filename>,
which are connect accounting records. (Accounting records are in <filename>tacct.h</filename> format.)</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>PROCESS</literal></term>
<listitem><para>The <command>acctprc1</command> and <command>acctprc2</command>
programs are used to convert the basic process accounting files, <filename>/var/adm/Spacct?.MMDD</filename>, into total accounting records in<filename>   ptacct?.MMDD</filename>. The <filename>Spacct</filename> and <filename>ptacct</filename> files are correlated by number so that if <command>runacct</command> fails, the unnecessary reprocessing of <filename>Spacct</filename>
files will not occur. One precaution should be noted: when restarting <command>runacct</command> in this state, remove the last <filename>ptacct</filename>
file, because it will not be complete. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MERGE</literal></term>
<listitem><para>Merge the basic process accounting records with the connect
accounting records to form <filename>daytacct</filename>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>FEES</literal> </term>
<listitem><para>Merge in any ASCII <filename>tacct</filename> records from
the file <filename>fee</filename> into <filename>daytacct</filename>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>DISK</literal> </term>
<listitem><para>On the day after the <command>dodisk</command> procedure runs,
merge <filename>disktacct</filename> with <filename>daytacct</filename>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MERGETACCT</literal></term>
<listitem><para>Merge <filename>daytacct</filename> with <filename>sum/tacct</filename>, the cumulative total accounting file. Each day, <filename>daytacct</filename> is saved in <filename>sum/tacctMMDD</filename>, so that <filename>sum/tacct</filename> can be recreated in case it is corrupted or lost. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CMS</literal></term>
<listitem><para>Merge in today's command summary with the cumulative command
summary file <filename>sum/cms</filename>. Produce ASCII and internal format
command summary files. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>USEREXIT</literal></term>
<listitem><para>Any installation-dependent (local) accounting programs can
be included here.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CLEANUP</literal></term>
<listitem><para>Clean up temporary files, run <command>prdaily</command> and
save its output in <filename>sum/rprtMMDD</filename>, remove the locks, then
exit.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Recovering from <command>runacct</command> Failures</title>
<para>The <command>runacct</command> procedure can fail for a variety of reasons&mdash;usually
due to a system crash, <filename>/var</filename> running out of space, or
a corrupted wtmp file. If the <filename>activeMMDD</filename> file exists,
check it first for error messages. If the <filename>active</filename> file
and lock files exist, check <filename>fd2log</filename> for any mysterious
messages. </para>
<para>The following are error messages produced by runacct and the recommended
recovery actions: </para>
<itemizedlist>
<listitem><para><literal>ERROR: locks found, run aborted </literal></para>
<para>The files <filename>/var/adm/acct/nite/lock</filename> and <filename>/var/adm/acct/nite/lock1</filename> were found. These files must be removed
before runacct can restart. </para>
</listitem>
<listitem><para><literal>ERROR: acctg already run for date: check /var/adm/acct/nite/lastdate </literal></para>
<para>The date in <filename>lastdate</filename> and today's date are the same.
Remove <filename>lastdate</filename>. </para>
</listitem>
<listitem><para><literal>ERROR: turnacct switch returned rc=? </literal></para>
<para>Check the integrity of <filename>turnacct</filename> and <filename>accton</filename>. The <command>accton</command> program must be owned by
root and have the <literal>setuid</literal> bit set. </para>
</listitem>
<listitem><para><literal>ERROR: Spacct?.MMDD already exists </literal></para>
<para>File setups probably already run. Check status of files, then run setups
manually. </para>
</listitem>
<listitem><para><literal>ERROR: /var/adm/acct/nite/wtmp.MMDD already exists,
run setup manually </literal></para>
<para>Self-explanatory. </para>
</listitem>
<listitem><para><literal>ERROR: wtmpfix detected a corrupted wtmp file. Use
fwtmp to correct the corrupted file. </literal></para>
<para>Self-explanatory.</para>
</listitem>
<listitem><para><literal>ERROR: connect acctg failed: check /var/adm/acct/nite/log </literal></para>
<para>The <command>acctcon1</command> program encountered a bad <filename>wtmp</filename> file. Use <command>fwtmp</command> to correct the bad file. </para>
</listitem>
<listitem><para><literal>ERROR: Invalid state, check /var/adm/acct/nite/active </literal></para>
<para>The file <filename>statefile</filename> is probably corrupted. Check <filename>statefile</filename> for irregularities and read <filename>active</filename>
before restarting.</para>
</listitem></itemizedlist>
</section>
<section><title>Restarting <command>runacct</command></title>
<para>The <command>runacct</command> program, called without arguments, assumes that this is the first invocation of the day. The argument MMDD is necessary if <command>runacct</command> is being restarted and specifies the month and day for which <command>runacct</command> will rerun the accounting. The entry point for processing is based on the contents of <filename>statefile</filename>. To override <filename>statefile</filename>, include the desired state on the command line. </para>
<para>For example, to start <command>runacct</command>, use the command: </para>
<para><userinput>nohup runacct 2 /var/adm/acct/nite/fd2log &amp;</userinput>   </para>
<para>To restart <command>runacct</command>: </para>
<para><userinput>nohup runacct 0601 2 /var/adm/acct/nite/fd2log &amp;</userinput>   </para>
<para>To restart runacct at a specific state: </para>
<para><userinput>nohup runacct 0601 WTMPFIX 2 /var/adm/acct/nite/fd2log &amp;</userinput>   </para>
</section>
</section>
<section>
<title>Fixing Corrupted Accounting Files</title>
<para>Sometimes, errors occur in the accounting system, and a file is corrupted or lost. You can ignore some of these errors, or simply restore lost or corrupted files from a backup. However, certain files must be fixed in order to maintain the integrity of the accounting system.</para>
<section><title>Fixing <filename>wtmp</filename> Errors</title>
<para>The <filename>wtmp</filename> files are the most delicate part of the accounting system. When the date is changed and the IRIX system is in multiuser mode, a set of date change records is written into <filename>/etc/wtmp</filename>. The <command>wtmpfix</command> program <comment>(see fwtmp()?)</comment>is designed to adjust the time stamps in the <filename>wtmp</filename> records when a date change is encountered. However, some combinations of date changes and reboots will slip through <command>wtmpfix</command> and cause <command>acctcon1</command> to fail. </para>
<para>The following steps show how to fix a <filename>wtmp</filename> file: </para>
<orderedlist><listitem><para><userinput>cd /var/adm/acct/nite</userinput>
  </para>
</listitem><listitem><para><userinput>fwtmp &lt; wtmp.MMDD > xwtmp</userinput>
  </para>
</listitem><listitem><para><userinput>ed xwtmp</userinput>   </para>
</listitem><listitem><para>Delete any corrupted records or delete all records
from beginning up to the date change.</para>
</listitem><listitem><para><userinput>fwtmp -ic &lt;wtmp> wtmp.MMDD</userinput>
  </para>
</listitem></orderedlist>
<para> If the wtmp file is beyond repair, remove the file and create an empty
wtmp file:</para>
<orderedlist><listitem><para><userinput>rm /etc/wtmp</userinput>   </para>
</listitem><listitem><para><userinput>touch /etc/wtmp</userinput>   </para>
</listitem></orderedlist>
<para>This prevents any charging of connect time. <command>acctprc1</command>
cannot determine which login owned a particular process, but it is charged
to the login that is first in the password file for that user ID.</para>
</section>
<section><title>Fixing <filename>tacct</filename> Errors</title>
<para>If the installation is using the accounting system to charge users for
system resources, the integrity of <filename>sum/tacct</filename> is quite
important. Occasionally, mysterious <filename>tacct</filename> records appear
with negative numbers, duplicate user IDs, or a user ID of 65,535. First check <filename>sum/tacctprev </filename>with <command>prtacct</command>. If it looks all
right, the latest <filename>sum/tacct.MMDD</filename> should be patched up,
then <filename>sum/tacct</filename> recreated. A simple patchup procedure
would be: </para>
<orderedlist><listitem><para>Enter the command:</para>
<literallayout><userinput>cd /var/adm/acct/sum</userinput>   </literallayout>
</listitem><listitem><para>Enter the command:</para>
<literallayout><userinput>acctmerg -v &lt; tacct.MMDD > xtacct</userinput>   </literallayout>
</listitem><listitem><para>Enter the command:</para>
<literallayout><userinput>ed xtacct</userinput><userinput>   </userinput></literallayout>
</listitem><listitem><para>Remove the bad records. </para>
</listitem><listitem><para>Write duplicate UID records to another file. </para>
</listitem><listitem><para>Enter the command: </para>
<literallayout><userinput>acctmerg -i &lt; xtacc t > tacct.MMDD</userinput><userinput>   </userinput></literallayout>
</listitem><listitem><para>Enter the command:</para>
<literallayout><userinput>acctmerg tacctprev &lt;tacct.MMDD> tacct</userinput><userinput>   </userinput></literallayout>
</listitem></orderedlist>
<para>Remember that the <command>monacct</command> procedure removes all the <filename>tacct.MMDD </filename>files; therefore, you can recreate <filename>sum/tacct</filename> by merging these files.</para>
</section>
</section>
<section>
<title>Updating Holidays for Accounting</title>
<para>The file <filename>/var/lib/acct/holidays</filename> contains the prime/nonprime
table for the accounting system. The table should be edited to reflect your
location's holiday schedule for the year. The format is composed of three
types of entries:</para>
<itemizedlist>
<listitem><para>Comment Lines, which may appear anywhere in the file as long
as the first character in the line is an asterisk. </para>
</listitem>
<listitem><para>Year and Time Designation Line, which should be the first
data line (noncomment line) in the file and must appear only once. The line
consists of three fields of four digits each (leading white space is ignored).
For example, to specify the year as 1992, prime time at 9:00 a.m., and nonprime
time at 4:30 p.m., the following entry is appropriate: </para>
<literallayout><literal>1992 0900 1630</literal>   </literallayout>
<para>A special condition allowed for in the time field is that the time 2400
is automatically converted to 0000. </para>
</listitem>
<listitem><para>Company Holidays Lines, which follow the year designation
line and have the following general format: </para>
<literallayout><literal>day-of-year Month Day Description of Holiday</literal>   </literallayout>
<para>The day-of-year field is a number in the range of 1 through 366, indicating
the day for the corresponding holiday (leading white space is ignored). The
other three fields are actually commentary and are not currently used by other
programs.</para>
</listitem></itemizedlist>
</section>
</section>
<section id="Z889631314glen">
<title>IRIX Extended Accounting</title>
<para><comment>Should we reword the first paragraph at all?</comment></para>
<para><comment>Should we add a note about the performance issues involved
with using extended accounting???</comment></para>
<para>Large computing sites often have many unrelated users and must be able
to charge them separately for resource usage. Basic process accounting is
often inadequate for these sites because it lacks some important metrics,
uses lots of disk space, and provides little flexibility for usage billing.
Third-party accounting software addresses some of these issues, but is still
limited by data provided by the IRIX system. Array clusters and hypercubes
compound these problems by allowing a single user's resource usage to be spread
over multiple systems.</para>
<para>Extended accounting helps larger sites by providing a superset of the
data reported by basic process accounting. It enables extended process accounting,
along with project and array session accounting. Project accounting allows
users to bill multiple projects separately. Array session accounting groups
processes together across the nodes of a system array under a single identifier
to provide such features as unified accounting and job control. </para>
<para>In particular, the following data items are reported for IRIX extended
accounting: <itemizedlist>
<listitem><para>array session handle (see <command sectionref="5">array_sessions</command>)</para>
</listitem>
<listitem><para>service provider information (see <command>array_sessions</command>)</para>
</listitem>
<listitem><para>project ID (see <command sectionref="5">projects</command>)</para>
</listitem>
<listitem><para>number of swaps</para>
</listitem>
<listitem><para>number of bytes read, number of bytes written</para>
</listitem>
<listitem><para>number of read requests, number of write requests</para>
</listitem>
<listitem><para>time spent waiting for block I/O</para>
</listitem>
<listitem><para>time spent waiting for raw I/O</para>
</listitem>
<listitem><para>time spent waiting on the run queue </para>
</listitem></itemizedlist> </para>
<para><comment>(need to change the reference in the extacct(5) man page to
the new manual name.)</comment></para>
<section>
<title>About Extended Accounting</title>
<para>In basic process accounting, whenever a process exits, the kernel writes
a record containing resource usage information to a file. Because the kernel
itself does this file I/O, basic process accounting can become a minor bottleneck
on heavily loaded systems. Another problem with basic process accounting is
with the format of data written: usage information is stored using a compressed
format that amounts to a 16-bit floating point number. Values quickly lose
a significant amount of accuracy, and have a maximum value that is not difficult
to exceed on modern systems (around 2<superscript>34</superscript>, or 16
GB). Finally, there is no room for expansion in the basic process accounting
records. Metrics provided are fairly limited, and many customers need additional
data. However, with no room for expansion, additional fields would require
increasing the record size, which would break virtually all the existing software
that uses accounting data.</para>
<para>One significant change to address these issues in extended accounting
is the delivery mechanism: records are written using the system audit trail
(SAT) facility, which uses a daemon to collect audit records from the kernel
using special system calls <comment>(see IRIX Admin: Backup, Security, ???
for more information on the SAT facility)</comment>. SAT writes records out
to destinations chosen by the system administrator; see the <command sectionref="1m">satd</command> command. This gets the kernel out of the file I/O business,
and gives you flexibility in the handling of accounting data.</para>
<para>The <command>sat_select</command> command can be used to select accounting
events for the audit subsystem to monitor; see <command sectionref="1m">sat_select</command> for details.</para>
<para>Housekeeping tasks such as rotating audit files and handling file-system-full
conditions are handled by the <command>satd</command> program. Third party
software can either read the audit files in their entirety (files may contain
records for non-accounting events if a site has elected to audit them) or
use the existing <command>sat_reduce</command> program to filter out only
relevant accounting records; see <command sectionref="1m">sat_reduce</command>.
Contents of individual records can be dumped in ASCII format using the <command>sat_interpret</command> program; see <command sectionref="1m">sat_interpret</command>.</para>
<para>Resource data contained in extended accounting records is stored as
uncompressed 64-bit values, which should be sufficient for most metrics into
the near future. Records contain spare fields to allow for future expansion,
and a version code to allow software to handle future format changes gracefully.</para>
<para>For more information on IRIX extended accounting, see the <command sectionref="1m">extacct</command> and <command sectionref="5">audit_filters</command> man
pages. For information on kernel parameters for extended
accounting, see Appendix A of the <citetitle>IRIX Admin: System Configuration
and Operation</citetitle> manual.</para>
</section>
<section>
<title>Array Session Accounting</title>
<para>To reduce disk space consumption and processing time for accounting
records, the IRIX system can accumulate and report accounting information
by array session. Array session accounting records contain data similar to
process accounting records, except that counters and values reflect the accumulated
total of all processes that were members of the session.</para>
<para>An array session is a set of processes all related to each other by
a single unique identifier, the array session handle (ASH). A child process
ordinarily inherits the ASH of its parent when created, thus becoming a member
of its parent's array session. However, the <command sectionref="2">newarraysess</command> system call is provided to allow a process to leave its parent's
array session and start a new one. Programs like <command>login</command>
and <command>rshd</command> use this system call so that logging into the
system effectively starts a new session. Programs like <command>cron</command>, <command>su</command>, and several batch queuing systems also use this system call
so that work done on behalf of another user can have its own session. When
the last process with a given ASH exits, the array sessions ends, and a session
accounting record is written.</para>
<para>The ASH is a 64-bit value. A unique, increasing value (similar to a
process ID) is assigned by default to each new array session as its handle.
However, the <command sectionref="2">setash</command> system call is provided
to change an array session's handle if desired. This can be used to synchronize
the handles of array sessions on several systems in an array, thus allowing
a distributed job to be considered a single entity for accounting purposes.</para>
<para>The range of handles that this system assigns can be configurable, so
it is possible to ensure that automatically assigned handles never conflict
with process-specified ones. The system ensures that a particular ASH is never
in use by more than one array session on that local system at one time.</para>
<para>In addition to accumulated totals of various process accounting data,
session accounting records contain a 64-byte field intended for service provider
information. In particular, batch queuing systems can use this field to record
data about the queue name, initiator, and so forth. By default, the service
provider information for a new array session is inherited from the array session
of its parent process.</para>
<para>The standard <command>init</command> program always has its service
provider information set to all zeroes, and standard login utilities (<command>login</command>, <command>su</command>, <command>rshd</command>) never change
service provider information. Batch queuing systems, on the other hand, are
always expected to set service provider information to some non-zero value.
Thus, it is possible to distinguish batch jobs from interactive sessions by
checking if the service provider information is all zeroes or not.</para>
<para>For more information on array sessions, see the <command sectionref="5">array_sessions</command> man page.</para>
</section>
<section>
<title>Project Accounting</title>
<para>Many sites must be able to charge individual departments separately
for their usage of a given system. Typically, this is done by billing total
usage for each system user ID to the appropriate department. However, some
sites have users that work for more than one department, so billing all usage
to a single department is not appropriate. </para>
<para>To solve this accounting problem, project accounting and the project
ID (PRID) were introduced into the IRIX system. A project ID is similar to
a group ID, except that: </para>
<itemizedlist>
<listitem><para>the current project ID is associated with an array session,
not an individual process </para>
</listitem>
<listitem><para>the project ID does not affect access permissions; its only purpose is for accounting</para>
</listitem></itemizedlist>
<para>A default project ID is associated with every user ID. Whenever it is necessary for a user to do work that should be billed to a different project, the <command>newproj</command> command may be used to change project ID; see the <command sectionref="1">newproj</command> man page for details. This command starts a new shell and array session. Background processes under the old shell continue being accounted for under the original project ID. Furthermore, the user ID and group ID remain unchanged, so access permissions are unaffected. To prevent users from specifying a project ID for which they are not authorized, the <command>newproj</command> command consults a file listing valid project IDs for each user.</para>
<para>The file that contains user IDs and their authorized projects, <filename>/etc/project</filename>, is similar in style to <filename>/etc/passwd</filename> or <filename>/etc/group</filename>; see the <command sectionref="4">project</command> man page for details. This file also specifies the default project for each user in order to avoid modifying <command>/etc/passwd</command>. Because the project ID is a simple number, an additional file, <filename>/etc/projid</filename>, associates mnemonic ASCII names with numeric project IDs; see the <command sectionref="4">projid</command> man page for details. You can configure a standard default project ID using the <replaceable>dfltprid</replaceable> variable of <command sectionref="1m">systune</command>.</para>
<para>By default, an array session inherits the project ID of the session that spawned it. The standard login utilities (<command>login</command>, <command>su</command>, <command>rshd</command>) that start new array sessions have been updated to change project ID to the default project ID of the new user.</para>
<para>Library routines for reading project ID files are also provided, comparable to library routines for reading password file data. See <command>projid</command>(3C) for more information.</para>
</section>
</section>
<section id="Z182215011289howie">
<title>IRIX CSA</title>
<para><comment>Need more info on how it is different from extended accounting.</comment>IRIX CSA is designed to meet the unique accounting requirements
of larger system sites. IRIX CSA is typically used by sites that depend on
detailed, accurate accounting because their systems run in a timeshare fashion
and generate money per CPU second. To provide more detailed, accurate data,
IRIX CSA provides all of the data available in both process and extended accounting,
along with the following additional features:<itemizedlist>
<listitem><para>per-job accounting</para>
</listitem>
<listitem><para>daemon accounting information</para>
</listitem>
<listitem><para>disk accounting by group and project IDs</para>
</listitem>
<listitem><para>flexible accounting periods</para>
</listitem>
<listitem><para>flexible system billing units (SBUs)</para>
</listitem>
<listitem><para>front-end formatting interface; see <xref linkend="Z890941535janelle">,
for more information</para>
</listitem>
<listitem><para>data record types and control</para>
</listitem>
<listitem><para>support for specific hardware capabilities (i.e. MPP, multitasking)</para>
</listitem>
<listitem><para>more accurate time accounting than basic process accounting</para>
</listitem>
<listitem><para>additional identification fields (i.e. project ID) </para>
</listitem>
<listitem><para>user job accounting (<command>csaja</command> command)</para>
</listitem>
<listitem><para>support for the multi-PE application API</para>
</listitem></itemizedlist> </para>
<para>IRIX CSA also includes configurable parameters located in a single file, <filename>/etc/config/csa_config</filename>, and a set of user-defined exits that allows
sites to tailor the daily run of accounting to their specific needs.</para>
<section>
<title>Daily Operation Overview</title>
<para>When the IRIX operating system is run in multiuser mode, accounting
behaves in a manner similar to the following process. However, because sites
may customize IRIX CSA, the following may not reflect the actual process at
a particular site:</para>
<orderedlist><listitem><para>System boot time is written to <filename>/etc/csainfo</filename>. Each time the system is booted, the boot time is written to <filename>/etc/csainfo</filename> by the <command>/etc/csaboots</command> command, which
is invoked by <command>rc</command> (see <command sectionref="1m">brc</command>)
during system startup.</para>
</listitem><listitem><para>Process accounting is enabled. When the system
is switched to multiuser mode, the <command>/var/lib/acct/startup</command>
(see <command sectionref="1m">acctsh</command>) script is called by <command>/etc/rc</command> and performs the following functions:<itemizedlist>
<listitem><para>Writes an <literal>acctg on</literal> record to <filename>/etc/wtmp</filename>; the <command>acctwtmp</command> program is used to write
this record.</para>
</listitem>
<listitem><para>Enables process accounting with the command line <filename>/var/lib/acct/turnacct on</filename>; <command sectionref="1m">turnacct</command>
calls the <literal>accton</literal> program with the argument <filename>/var/adm/acct/day/pacct</filename>.</para>
</listitem>
<listitem><para>Removes lock files and saved <filename>pacct</filename> and <filename>wtmp</filename> files. <filename>/var/lib/acct/remove</filename> is invoked to clean up saved <filename>pacct</filename> and <filename>wtmp</filename> files in <filename>/var/adm/acct/sum</filename>. Unlike the standard accounting package, IRIX CSA does not leave files in this directory. In addition, the lock files are removed from <filename>/var/adm/acct/nite</filename>.</para>
</listitem></itemizedlist></para>
</listitem><listitem><para>By default, daemon accounting for NQS and tape daemons is handled by the <filename>/var/lib/acct/startup</filename> script. However, to run NQS and tape daemon accounting, you must modify the appropriate subsystem. <xref role="section" linkend="Z541313171089howie">, describes this process in detail.</para>
</listitem><listitem><para>The amount of disk space used by each user is determined periodically. The <command>/var/lib/acct/dodisk</command> command (see <command sectionref="1m">dodisk</command>) is run periodically by the <command>cron</command> command to generate a snapshot of the amount of disk space being used by each user. The <command>dodisk</command> command should be run at most once for each time <command>/var/lib/acct/csarun</command> is run (see <command sectionref="1m">csarun</command>). Multiple invocations of <command>dodisk</command> during the same accounting period write over previous <command>dodisk</command> output.</para>
</listitem><listitem><para>A fee file is created. Sites desiring to charge fees to certain users can do so by invoking <command>/var/lib/acct/chargefee</command> (see <command sectionref="1m">chargefee</command>). Each accounting period's fee file (<filename>/var/adm/acct/day/fee</filename>) is merged into the consolidated accounting records by <command>/var/lib/acct/csaperiod</command> (see <command sectionref="1m">csaperiod</command>).</para>
</listitem><listitem><para>Daily accounting is run. At specified times during the day, <command>csarun</command> is executed by the <command>cron</command> command to process the current accounting data. The output from <command>csarun</command> is a consolidated daily accounting file and an ASCII report.</para>
</listitem><listitem><para>Monthly accounting is run. At a specific time during the day, or on certain days of the month, <command>/var/lib/acct/csaperiod</command> (see <command>csaperiod</command>) is executed by the <command>cron</command> command to process consolidated accounting data from previous accounting periods. The output from <command>csaperiod</command> is a consolidated monthly accounting file and an ASCII report.</para>
</listitem><listitem><para>Accounting is disabled. When the system is shut down gracefully, the script<command>/var/lib/acct/shutacct</command> (see <command sectionref="1m">shutacct</command>) is executed by <command>/etc/shutdown</command> (see <command sectionref="1m">shutdown</command>). <command>shutacct</command> writes an <literal>acctg off</literal> record to <filename>/etc/wtmp</filename>. It then calls <command>/var/lib/acct/turnacct</command> to disable
process and daemon accounting (see <command sectionref="1m">turnacct</command>).</para>
</listitem></orderedlist>
</section>
<section id="Z541313171089howie">
<title>Setting up IRIX CSA</title>
<para>The following is a brief description of setting up IRIX CSA. Site-specific
modifications are discussed in detail in <xref role="section" linkend="Z025813281290cas">.
As described in this section, IRIX CSA is run by a person with super-user
permissions. IRIX CSA also can be run by users who have <literal>acct</literal>
permissions and are in the <literal>adm</literal> group. See <xref role="section" linkend="Z253017200690howie">, for the necessary modifications.</para>
<orderedlist><listitem><para>Change the default system billing unit (SBU)
weighting factors, if necessary. By default, no SBUs are calculated. If your
site wants to report SBUs, you must modify the configuration file <filename>/etc/config/csa_config</filename>.</para>
</listitem><listitem><para>Modify any necessary parameters in the <filename>/etc/config/csa_config</filename> file, which contains configurable parameters
for the accounting system. Ensure that parameters, such as <literal>MEMINT</literal>, reflect the needs of your site.</para>
</listitem><listitem><para id="Z335716200690howie">If you want daemon accounting,
you must enable daemon accounting at system startup time by performing the
following steps:</para>
<orderedlist><listitem><para>Ensure that the variables in <filename>/etc/config/csa_config</filename> for the subsystems for which you want to enable daemon accounting are set to <literal>on</literal>. Set <literal>NQS_START</literal> and <literal>TAPE_START</literal> to <literal>on</literal> to enable NQS and online tapes.</para>
</listitem><listitem><para>If necessary, enable accounting from the daemon's side. Specifically, NQS and tape accounting must also be enabled by the associated daemon. Use the <command>qmgr</command> <literal>set accounting on</literal> command to turn on NQS accounting. To enable tape daemon accounting, execute <command>tpdaemon</command> with the <literal>-c</literal> option. </para>
</listitem></orderedlist>
</listitem><listitem><para>Prior to setting up the following <command>cron</command> jobs, ensure that the <filename>/etc/checklist</filename> file exists. By default, <command>dodisk</command> performs disk accounting on the special files listed in <literal>checklist</literal>. For most installations, entries similar to the following should be made in <filename>/var/spool/cron/crontabs/root</filename> so that <command sectionref="1m">cron</command> automatically runs daily accounting:</para>
<programlisting fontsize="8pt">0 4 * * 1-6 /var/lib/acct/csarun 2> /var/adm/acct/nite/fd2log
0 3 * * 1-6 /var/lib/acct/dodisk -a -v 2> /var/adm/acct/nite/dk2log</programlisting>
<para>The <command sectionref="1m">csarun</command> command should be executed at such a time that <command>dodisk</command> has sufficient time to complete. If <command>dodisk</command> does not complete before <command>csarun</command> executes, disk accounting information may be missing or incomplete.</para>
<para>The <literal>dodisk</literal> command must be invoked with either the <literal>-a</literal> or the <literal>-A</literal> option. If it is not, <command sectionref="1m">csaperiod</command> aborts when it attempts to merge the disk usage information with other accounting data.</para>
</listitem><listitem><para>Periodically check the size of the <command>acct</command> files. An entry similar to the following should be made in <filename>/var/spool/cron/crontabs/root</filename>:</para>
<programlisting>0 * * * * /var/lib/acct/ckpacct</programlisting>
<para>The <command>cron</command> command should periodically execute the <command sectionref="1m">ckpacct</command> shell script.  If the <filename>pacct</filename>
file grows larger than 500 blocks (default), <command>ckpacct</command> calls
the command <filename>/var/lib/acct/turnacct switch</filename> to start a
new <literal>pacct</literal> file. The <command>ckpacct</command> script also
makes sure that there are at least 500 free blocks on the file system containing <filename>/var/adm/acct</filename> (located in the <filename>/var</filename> directory
by default). If there are not enough blocks, process accounting is turned
off. The next time <command>ckpacct</command> is executed, it turns process
accounting back on if there are enough free blocks.</para>
<para>Ensure that the <literal>ACCT_FS</literal> and <literal>MIN_BLKS</literal> variables have been set correctly in the <filename>/etc/config/csa_config</filename> configuration file. <literal>ACCT_FS</literal> is the file system containing <filename>/var/adm/acct</filename>; the default directory is <filename>/var</filename>. <literal>MIN_BLKS</literal> is the minimum number of free blocks needed in the <literal>ACCT_FS</literal> file system. The default is 500.</para>
<para>It is very important that <command>ckpacct</command> be run periodically so that an administrator is notified when the accounting file system (located in the <filename>/var</filename> directory by default) runs out of disk space. After the file system is cleaned up, the next invocation of <command>ckpacct</command> enables process and daemon accounting. You can manually reenable accounting by invoking <command>turnacct</command> with the <literal>on</literal> operand.</para>
<para>If <command>ckpacct</command> is not run periodically, and the accounting file system runs out of space, an error message is written to the console stating that a write error occurred and that accounting is disabled. If you do not free disk space as soon as possible, a vast amount of accounting data can be lost unnecessarily. Additionally, lost accounting data can cause <command>csarun</command> to abort or report erroneous information.</para>
</listitem><listitem><para>To run monthly accounting, an entry similar to the command shown below should be made in <filename>/var/spool/cron/crontabs/root</filename>. This command generates a monthly report on all consolidated data files found in <filename>/var/adm/acct/sum/data/*</filename> and then deletes those data files:</para>
<programlisting fontsize="8pt">15 5 1 * * /var/lib/acct/csaperiod -r 2> /var/adm/acct/nite/pd2log</programlisting>
<para>This entry is executed at such a time that <command>csarun</command> has sufficient time to complete. This example results in the creation of a monthly accounting file and report on the first day of each month. These files contain information about the previous month's accounting. You can create a site-specific monthly accounting program or script using the <command>csaperiod</command> user exit.</para>
</listitem><listitem><para>Update the <filename>holidays</filename> file. The <filename>/var/lib/acct/holidays</filename> file contains the prime/nonprime time table for the accounting system, which should be edited to reflect your site's holiday schedule for the year.</para>
<para>By default, the <filename>holidays</filename> file is located in the <filename>/var/lib/acct</filename> directory. You can change this location by modifying the <replaceable>HOLIDAY_FILE</replaceable> variable in <filename>/etc/config/csa_config</filename>. If necessary, modify the <replaceable>NUM_HOLIDAYS</replaceable> variable (also located in <filename>/etc/config/csa_config</filename>), which sets the upper limit on the number of holidays that can be defined in <replaceable>HOLIDAY_FILE</replaceable>. The format of this file is composed of the following types of entries:</para>
<orderedlist><listitem><para>Comment lines: These lines may appear anywhere in the file as long as the first character in the line is an asterisk (<literal>*</literal>).</para>
</listitem><listitem><para>Version line: This line must be the first uncommented line in the file and must only appear once. It denotes that the new holidays file format is being used. This line should not be changed by the site.</para>
</listitem><listitem><para>Year designation line: This line must be the second uncommented line in the file and must only appear once. The line consists of two fields. The first field is the keyword <literal>YEAR</literal>. The second field must be either the current year or the wildcard character, asterisk (<literal>*</literal>). If the year is wildcarded, the current year is automatically substituted for the year. The following are examples of two valid entries:<literallayout>    YEAR        1995
    YEAR        *</literallayout></para>
</listitem><listitem><para>Prime/nonprime time designation lines: These must be uncommented lines 3, 4, and 5 in the file. The format of these lines is:<literallayout><replaceable>period</replaceable>    <replaceable>prime_time_start</replaceable>    <replaceable>nonprime_time_start</replaceable></literallayout></para>
<para>The variable, <replaceable>period</replaceable>, is one of the following: <literal>WEEKDAY</literal>, <literal>SATURDAY</literal>, or <literal>SUNDAY</literal>. The <replaceable>period</replaceable> can be specified in either uppercase or lowercase.</para>
<para>The prime and nonprime start time can be one of two formats: </para>
<itemizedlist>
<listitem><para>Both start times are 4&ndash;digit numeric values between 0000 and 2359. The <replaceable>nonprime_time_start</replaceable> value must
be greater than the <replaceable>prime_time_start </replaceable> value. For
example, it is incorrect to have prime time start at 07:30 A.M. and nonprime
time start at 1 minute after midnight. Therefore, the following entry is wrong
and can cause incorrect accounting values to be reported.<literallayout>WEEKDAY   0730    0001</literallayout></para>
<para>It is correct to specify prime time to start at 07:30 A.M. and nonprime
time to start at 5:30 P.M. on weekdays. You would enter the following in the
holiday file: <literallayout>WEEKDAY   0730    1730</literallayout></para>
</listitem>
<listitem><para><literal>NONE</literal><literal>/ALL</literal> or <literal>ALL</literal>/<literal>NONE</literal>. These start times specify that the
entire period is to be either all prime time or all nonprime time. To specify
that the entire period is to be considered prime time, set <replaceable>prime_time_start</replaceable> to <literal>ALL</literal> and <replaceable>nonprime_time_start</replaceable> to <literal>NONE</literal>. If the period is to be considered
all nonprime time, set <replaceable>prime_time_start</replaceable> to <literal>NONE</literal> and <replaceable>nonprime_time_start</replaceable> to <literal>ALL</literal>. For example, to specify Monday through Friday as all prime
time, you would enter the following: <literallayout><userinput>WEEKDAY ALL NONE</userinput> </literallayout></para>
<para>To specify all of Sunday to be nonprime time, you would enter the following:<literallayout><userinput>SUNDAY NONE ALL</userinput></literallayout></para>
</listitem></itemizedlist>
</listitem><listitem><para>Company holidays lines: These entries follow the
year designation line and have the following general format: <literallayout><replaceable>day-of-year  Month Day  Description of Holiday</replaceable></literallayout></para>
<para>The <replaceable>day-of-year</replaceable> field is either a number
in the range of 1 through 366, indicating the day for a given holiday (leading
white space is ignored), or it is the month and day in the <replaceable>mm/dd</replaceable> format. The other three fields are commentary and are not currently
used by other programs. Each holiday is considered all nonprime time.</para>
<para>If the <filename>holidays</filename> file does not exist or there is
an error in the year designation line, the default values for all lines are
used.</para>
<para>If there is an error in a prime/nonprime time designation line, the
entry for the erroneous line is set to a default value. All other lines in
the <filename>holidays</filename> file are ignored and default values are
used.</para>
<para>If there is an error in a company holidays line, all holidays are ignored.</para>
<para>The defaults values are as follows:</para>
<deflist termlength="narrow">
<deflistentry>
<term><literal>YEAR</literal></term>
<listitem><para>The current year</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>WEEKDAY</literal></term>
<listitem><para>Monday through Friday is all prime time</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>SATURDAY</literal></term>
<listitem><para>Saturday is all nonprime time</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>SUNDAY</literal></term>
<listitem><para>Sunday is all nonprime time</para>
<para>No holidays are specified</para>
</listitem></deflistentry>
</deflist>
</listitem></orderedlist>
</listitem></orderedlist>
</section>
<section id="Z523909151189howie">
<title>The <command>csarun</command> Command</title>
<para>The <command>/var/lib/acct/csarun</command> command is the primary daily accounting shell script. It processes connect, disk, process, and daemon accounting files and is normally initiated by <command>cron</command> during nonprime hours.</para>
<para>The <command>csarun</command> command also contains four user-exit points, allowing sites to tailor the daily run of accounting to their specific needs<?Pub Caret>.</para>
<para>The <command>csarun</command> command does not damage files in the event of errors. It contains a series of protection mechanisms that attempt to recognize an error, provide intelligent diagnostics, and terminate processing in such a way that <command>csarun</command> can be restarted with minimal intervention.</para>
<section><title>Daily Invocation</title>
<para>The <command>csarun</command> command is invoked periodically by <command>cron</command>. It is very important that you ensure that the previous invocation of <command>csarun</command> completed successfully before invoking <command>csarun</command> for a new accounting period. If this is not done, information about unfinished jobs will be inaccurate.</para>
<para>Data for a new accounting period can also be interactively processed by executing the following:</para>
<literallayout>nohup csarun 2> /var/adm/acct/nite/fd2log &amp;</literallayout>
<para>Before executing <command>csarun</command> in this manner, ensure that the previous invocation completed successfully. To do this, look at the files <filename>active</filename> and <filename>statefile</filename> in <filename>/var/adm/acct/nite</filename>. Both files should specify that the last invocation completed successfully.</para>
</section>
<section><title>Error and Status Messages</title>
<para>The <command>csarun</command> error and status messages are placed in the <filename>/var/adm/acct/nite</filename> directory. The progress of a run is tracked by writing descriptive messages to the file <filename>active</filename>. Diagnostic output during the execution of <command>csarun</command> is written to <literal>fd2log</literal>. The <filename>lock</filename> and <filename>lock1</filename> files prevent concurrent invocations of <command>csarun</command>; <command>csarun</command> will abort if these two files exist when it is invoked. The <filename>clastdate</filename> file contains the month, day, and time of the last two
executions of <command>csarun</command>.</para>
<para>Errors and warning messages from programs called by <command>csarun</command> are written to files that have names beginning with <literal>E</literal> and ending with the current date and time. For example, <filename>Ebld.11121400</filename> is an error file from <command>csabuild</command>
for a <command>csarun</command> invocation on November 12, at 14:00.</para>
<para>If <command>csarun</command> detects an error, it sends an informational
message to the operator, sends mail to <literal>root</literal> and <literal>adm</literal>, removes the locks, saves the diagnostic files, and terminates
execution. When <command>csarun</command> detects an error, it will send mail
either to <literal>MAIL_LIST</literal> if it is a fatal error, or to <literal>WMAIL_LIST</literal> if it is a warning message, as defined in the configuration
file <filename>/etc/config/csa_config</filename>.</para>
</section>
<section id="Z230109270493jeanne"><title>States</title>
<para>Processing is broken down into separate reentrant states so that <command>csarun</command> can be restarted. As each state completes, <filename>/var/adm/acct/nite/statefile</filename> is updated to reflect the next state. When <command>csarun</command> reaches the <literal>CLEANUP</literal> state, it removes various data files and the locks, and then terminates.</para>
<para>The following describes the events that occur in each state. <replaceable>MMDD</replaceable> refers to the month and day <command>csarun</command> was invoked. <replaceable>hhmm</replaceable> refers to the hour and minute of invocation.</para>
<deflist termlength="narrow">
<colheads>
<head1>State</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>SETUP</literal></term>
<listitem><para>The current accounting files are switched via <command>turnacct</command>. These files are then moved to the <filename>/var/adm/acct/work/<replaceable>MMDDhhmm</replaceable></filename> directory. File names are prefaced with <literal>W</literal>. <filename>/etc/wtmp</filename> and <filename>/etc/csainfo</filename> are also moved to this directory.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>WTMPFIX</literal></term>
<listitem><para>The <command>wtmp</command> file in the <literal>work</literal> directory is checked for accuracy by <command>wtmpfix</command> (see <command sectionref="1m">fwtmp</command>). Some date changes cause <command sectionref="1m">csaline</command> to fail, so <command>wtmpfix</command> attempts to adjust the time stamps in the <filename>wtmp</filename> file if a date change record appears.</para>
<para>If <command>wtmpfix</command> is unable to fix the <filename>wtmp</filename> file, the <filename>wtmp</filename> file must be manually repaired. This is described in <xref role="section" linkend="Z223907171089howie">.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>VERIFY</command></term>
<listitem><para>By default, process and NQS accounting files are checked for
valid data. In addition, tape accounting files are verified. Records with
invalid data are removed. Names of bad data files are prefixed with <literal>BAD.</literal> in the <filename>/var/adm/acct/work/*</filename> directory.
The corrected files do not have this prefix.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>PREPROC</literal></term>
<listitem><para>The NQS and connect-time (<command>wtmp</command>) accounting
files are run through preprocessors. File names of preprocessed files are
prefixed with a <literal>P</literal> in the <filename>/var/adm/acct/work/<replaceable>MMDDhhmm</replaceable></filename> directory.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ARCHIVE1</literal></term>
<listitem><para>First user exit of the <command>csarun</command> script. If
a script named <filename>/var/lib/acct/csa.archive1</filename> exists, it
will be executed through the shell . (dot) command. The . (dot) command will
not execute a compiled program, but the user exit script can. You might use
this user exit to archive the accounting files in <literal>${WORK}</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>BUILD</command></term>
<listitem><para>The process, NQS, and tape connect accounting data is organized
into a session record file.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ARCHIVE2</literal></term>
<listitem><para>Second user exit of the <command>csarun</command> script. If a script named <filename>/var/lib/acct/csa.archive2</filename> exists, it will be executed through the shell . (dot) command. The . (dot) command will not execute a compiled program, but the user exit script can. You might use this exit to archive the session record file.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CMS</literal></term>
<listitem><para>Produces a command summary file in <literal>cacct.h</literal> format. The <literal>cacct</literal> file is put into the <filename>/var/adm/acct/sum/data/<replaceable>MMDDhhmm</replaceable></filename> directory for use by <command>csaperiod</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>REPORT</literal></term>
<listitem><para>Generates the daily accounting report and puts it into <filename>/var/adm/acct/sum/rpt/<replaceable>MMDDhhmm</replaceable>/rprt</filename>. A consolidated data file, <filename>/var/adm/acct/sum/data/<replaceable>MMDDhhmm</replaceable>/cacct</filename>, is also produced from the session record file. In addition, accounting data for unfinished jobs is recycled.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>DREP</literal></term>
<listitem><para>Generates a daemon usage report based on the session file. This report is appended to the daily accounting report, <filename>/var/adm/acct/sum/rpt/<replaceable>MMDDhhmm</replaceable>/rprt</filename>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>FEF</literal></term>
<listitem><para>Third user exit of the <command id="Z370109270493jeanne">csarun</command> script. If a script named <filename>/var/lib/acct/csa.fef</filename> exists, it will be executed through the shell . (dot) command.
The . (dot) command will not execute a compiled program, but the user exit
script can. The <command>csarun</command> variables are available, without
being exported, to the user exit script. You might use this exit to convert
the session record file to a format suitable for a front-end system.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>USEREXIT</literal></term>
<listitem><para>Fourth user exit of the <command>csarun</command> script.
If a script named <filename>/var/lib/acct/csa.user</filename> exists, it will
be executed through the shell . (dot) command. The . (dot) command will not
execute a compiled program, but the user exit script can. The <command>csarun</command> variables are available, without being exported, to the user exit
script. You might use this exit to run local accounting programs.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CLEANUP</literal></term>
<listitem><para>Cleans up temporary files, removes the locks, and then exits.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Restarting <command>csarun</command></title>
<para>If <command>csarun</command> is executed without arguments, the previous
invocation is assumed to have completed successfully.</para>
<para>The following operands are required with <command>csarun</command> if
it is being restarted:</para>
<programlisting>csarun [<replaceable>MMDD</replaceable> [<replaceable>hhmm</replaceable> [<replaceable>state</replaceable>]]]</programlisting>
<para><replaceable>MMDD</replaceable> is month and day, <replaceable>hhmm</replaceable> is hour and minute, and <replaceable>state</replaceable> is
the <command>csarun</command> entry state.</para>
<para>To restart <command>csarun</command>, follow these steps:</para>
<orderedlist><listitem><para>Remove all lock files, by using the following
command line: <literallayout>rm -f /var/adm/acct/nite/lock*</literallayout></para>
</listitem><listitem><para>Execute the appropriate <command>csarun</command>
restart command, using the following examples as guides:</para>
<orderedlist><listitem><para>To restart <command>csarun</command> using the
time and state specified in <literal>clastdate</literal> and <literal>statefile</literal>, execute the following command: <literallayout>nohup csarun 0601 2> /var/adm/acct/nite/fd2log &amp;</literallayout></para>
<para>In this example, <command>csarun</command> will be rerun for June 1,
using the time and state specified in <literal>clastdate</literal> and <literal>statefile</literal>.</para>
</listitem><listitem><para>To restart <command>csarun</command> using the
state specified in <literal>statefile</literal>, execute the following command: <literallayout>nohup csarun 0601 0400 2> /var/adm/acct/nite/fd2log &amp;</literallayout></para>
<para>In this example, <command>csarun</command> will be rerun for the June
1 invocation that started at 4:00 A.M., using the state found in <literal>statefile</literal>.</para>
</listitem><listitem><para>To restart <command>csarun</command> using the
specified date, time, and state, execute the following command: <literallayout>nohup csarun 0601 0400 BUILD 2> /var/adm/acct/nite/fd2log &amp;</literallayout></para>
<para>In this example, <command>csarun</command> will be restarted for the
June 1 invocation that started at 4:00 A.M., beginning with state <command>BUILD</command>.</para>
</listitem></orderedlist>
</listitem></orderedlist>
<para>Before <command>csarun</command> is restarted, the appropriate directories
must be restored. If the directories are not restored, further processing
is impossible. These directories are as follows:</para>
<literallayout>/var/adm/acct/work/<replaceable>MMDD</replaceable>/<replaceable>hhmm</replaceable>
/var/adm/acct/sum/data/<replaceable>MMDD</replaceable>/<replaceable>hhmm</replaceable>
/var/adm/acct/sum/rpt/<replaceable>MMDD</replaceable>/<replaceable>hhmm</replaceable>
/tmp/AC.<replaceable>MMDD</replaceable>/<replaceable>hhmm</replaceable></literallayout>
<para>If you are restarting at state <literal>ARCHIVE2</literal>, <literal>CMS</literal>, <literal>REPORT</literal>, <literal>DREP</literal>, or <literal>FEF</literal>, the session file must already exist in <filename>/tmp/AC.<replaceable>MMDD</replaceable>/<replaceable>hhmm</replaceable></filename>. If the file
does not exist, <command>csarun</command> automatically will restart at the <command>BUILD</command> state. Depending on the tasks performed during the site-specific <literal>USEREXIT</literal> state, the session file may or may not need to exist.</para>
</section>
</section>
<section>
<title>Editing Data Files</title>
<para>This section describes how to remove bad data from various accounting
files.</para>
<section id="Z223907171089howie"><title>Fixing <command>wtmp</command> Errors</title>
<para>The <command>wtmp</command> files generally cause the highest number of errors in the day-to-day operation of the accounting subsystem. When the date is changed, and the IRIX system is in multiuser mode, a set of date change records is written into the <command>/etc/wtmp</command> file. The <command>wtmpfix</command> (see <command sectionref="1m">fwtmp</command>) program is designed to adjust the time stamps in the <command>wtmp</command> records when a date change is encountered.</para>
<para>Some combinations of date changes and reboots, however, slip by <command>wtmpfix</command> and cause <command sectionref="1m">csaline</command> to fail. The following example shows how to repair a <command>wtmp</command> file:</para>
<programlisting>$ <userinput>cd /var/adm/acct/work/</userinput><replaceable>MMDD</replaceable>/<replaceable>hhmm</replaceable>
$ <userinput>/var/lib/acct/fwtmp &lt; Wwtmp > xwtmp</userinput>
$ <userinput>ed xwtmp</userinput>
<lineannotation>(delete corrupted records)</lineannotation>$ <userinput>/var/lib/acct/fwtmp -ic &lt; xwtmp > Wwtmp</userinput><lineannotation>(restart <command>csarun</command> <replaceable>at the</replaceable> <literal>WTMPFIX</literal> state)</lineannotation></programlisting>
<para>If the <command>wtmp</command> file is beyond repair, create a null <literal>Wwtmp</literal> file. This prevents any charging of connect time.</para>
</section>
<section><title>Verifying Data Files</title>
<para>The <command>csapacct</command> command verifies and deletes bad data records, while <command>csaverify</command> only flags bad records. By default, <command>csapacct</command> and <command>csaverify</command> are invoked in <command>csarun</command> to verify the data files.</para>
<para>Note that these commands may allow files that contain bad data, such as very large values, to be successfully verified.</para>
</section>
<section><title>Editing Data Files</title>
<para>You can use the <command sectionref="1m">csapacct</command> commands to verify and remove records from various accounting files. The following example shows how you can use <command>csapacct</command> to verify and remove bad records from a process (<literal>pacct</literal>) accounting file.</para>
<para>In this example, <command>csapacct</command> is invoked with verbose mode enabled (valid data records are written to the file <filename>pacct.NEW</filename>):</para>
<literallayout>/var/lib/acct/csapacct -v pacct pacct.NEW</literallayout>
<para>The output produced by this command line is as follows:</para>
<screen fontsize="8pt">Bad record - starting byte offset is 077740 (32736)
   invalid pacct record - bad base parent process id 97867
Found the next magic word at byte offset 0100130, ignored 120 bytes


Found 96669 BASE records
Found 20 MPP records
Found 106 SOJ records
Found 101 EOJ records
Found 4232 CONFIG records
Output  101108 records total
Ignored 120 bytes from the input file</screen>
<para>You can use <command>csapacct</command> in conjunction with <command>csaverify</command>, by first running <command>csaverify</command> and noting the byte offsets of the first bad record. Next, execute <command>csapacct</command>, and remove the record at the specified offset. The following example shows how you can verify and then edit a bad <filename>pacct</filename> accounting file:</para>
<orderedlist><listitem><para>The <filename>pacct</filename> file is verified with the following command line, and the following output is received:</para>
<screen width="wide" fontsize="9pt">$  <userinput>/var/lib/acct/csaverify -P pacct</userinput>
/var/lib/acct/csaverify: pacct: invalid pacct record - bad base parent process id 97867
  byte offset: start = 077740 (32736)  word offset: start = 07774 (4092)
/var/lib/acct/csaverify: pacct: invalid pacct record - bad magic word 03514000
  byte offset: start = 0100070 (32824)  word offset: start = 010007 (4103)</screen>
</listitem><listitem><para>The record found at byte offset 32736 is deleted
as follows (valid records are written to <filename>pacct.NEW</filename>):</para>
<literallayout>/var/lib/acct/csapacct -o 32736 pacct pacct.NEW</literallayout>
</listitem><listitem><para>The new <filename>pacct</filename> file is reverified
as follows to ensure that all the bad records have been deleted:</para>
<literallayout>/var/lib/acct/csaverify -P pacct.NEW</literallayout>
</listitem></orderedlist>
<para>You can use <command>csapacct</command> to produce an abbreviated ASCII
version of some of the daemon accounting files and <command>acctcom</command>
to generate a similar ASCII version of <filename>pacct</filename> files.</para>
</section>
</section>
<section>
<title>IRIX CSA Data Processing</title>
<para>The flow of data among the various IRIX CSA programs is explained in
this section and is illustrated in <xref linkend="Z851630383smg">.</para>
<figure id="Z515115160590howie" width="wide">
<graphic entityref="a11927"></graphic>
<title id="Z851630383smg">IRIX CSA Data Processing</title>
</figure>
<orderedlist><listitem><para>Generate raw accounting files. Various daemons
and system processes write to the raw accounting files. These accounting files
include <filename>pacct</filename>, <command>wtmp</command>, and <filename>csainfo</filename>.</para>
</listitem><listitem><para>Create a fee file. Sites that want to charge fees
to certain users can do so with the <command sectionref="1m">chargefee</command>
command. The <command>chargefee</command> command creates a fee file that
is processed by <command sectionref="1m">csaaddc</command>.</para>
</listitem><listitem><para>Produce disk usage statistics. The <command sectionref="1m">dodisk</command> shell script allows sites to take snapshots of disk usage. <command>dodisk</command> does not report dynamic usage; it only reports the disk usage
at the time the command was run. Disk usage is processed by <command>csaaddc</command>.</para>
</listitem><listitem><para>Organize the accounting data. <command sectionref="1m">csabuild</command> organizes the raw and preprocessed accounting data by jobs
and boot times. With the exception of disk usage statistics and fees, the <command>csabuild</command> output file contains all of the accounting data available
about each job.</para>
<para>Sometimes data for terminated jobs are continually recycled. This can
occur when accounting data is lost. To prevent data from recycling forever,
edit <command>csarun</command> so that <command>csabuild</command> is executed
with the <literal>-o</literal><?Pub _hardspace><replaceable>nday</replaceable>
option, which causes all jobs older than <replaceable>nday</replaceable> days
to terminate. Select an appropriate <replaceable>nday</replaceable> value
(see the <command>csabuild</command> man page for more information).</para>
</listitem><listitem><para>Recycle information about unfinished jobs. Accounting data about uncompleted jobs is saved and processed again during the next accounting period. This information is recycled until the job completes or until manual intervention occurs. Accounting data for unfinished jobs is reported during each accounting period.</para>
</listitem><listitem><para>Generate the daemon usage report, which is appended to the daily report. <command sectionref="1m">csadrep</command> outputs information about interactive, NQS, and tape usage.</para>
</listitem><listitem><para>Convert the session record file to a front-end format. Sites that process IRIX accounting data on a front-end system can convert the session file to a format suitable for use on the front end by using the <command sectionref="1m">csagcon</command> and <command sectionref="1m">csagfef</command> commands. It is suggested that you use the user exit in the <literal>FEF</literal> section of <command>csarun</command> (see <xref linkend="Z230109270493jeanne">) to convert the session record file to your front-end format.</para>
</listitem><listitem><para>Generate command usage data. The information output by <command sectionref="1m">acctcms</command> is reported in the daily and monthly reports.</para>
</listitem><listitem><para>Consolidate the session record file. Session files are too large to retain on disk for any amount of time. Consequently, IRIX CSA consolidates the data and keeps the condensed version on disk. The accounting reports are based on the consolidated data. Data consolidation is done by <command sectionref="1m">csacon</command>.</para>
</listitem><listitem><para>Generate an accounting report based on the consolidated data. <command sectionref="1m">csacrep</command> outputs the report.</para>
</listitem><listitem><para>Create the daily accounting report. The daily accounting report includes the following:</para>
<itemizedlist>
<listitem><para>Connect-time statistics (step 4)</para>
</listitem>
<listitem><para>Disk usage statistics (step 3)</para>
</listitem>
<listitem><para>Unfinished session information (step 6)</para>
</listitem>
<listitem><para>Command summary data (step 9)</para>
</listitem>
<listitem><para>Consolidated accounting report (step 11)</para>
</listitem>
<listitem><para>Last login information</para>
</listitem>
<listitem><para>Daemon usage report (step 7)</para>
</listitem></itemizedlist>
</listitem><listitem><para>Generate monthly accounting data. Monthly accounting
data is an accumulation of the consolidated data created in step 10. <command sectionref="1m">csaaddc</command> merges condensed data files together. The
resulting file contains accounting information for numerous accounting periods.</para>
</listitem><listitem><para>Generate monthly command usage data. <command sectionref="1m">acctcms</command> merges command usage data from multiple accounting periods.
The usage information was created in step 9. Both an ASCII and a binary file
are created.</para>
</listitem><listitem><para>Produce a monthly accounting report. <command sectionref="1m">csacrep</command> is used to generate a report based on a monthly accounting
file.</para>
</listitem></orderedlist>
<para>Steps 4 through 12 are performed during each accounting period by <command sectionref="1m">csarun</command>. Monthly accounting (steps 13 through 15) is initiated by the <command sectionref="1m">csaperiod</command> command. Daily and monthly accounting, as well as fee and disk usage generation (steps 2 through 3), can be scheduled by <command sectionref="1m">cron</command> to execute regularly. See <xref role="section" linkend="Z541313171089howie">, for more information.</para>
</section>
<section>
<title>Data Recycling</title>
<para>A system administrator must correctly maintain recycled data to ensure accurate accounting reports. The following sections discuss data recycling and describe how an administrator can purge unwanted recycled accounting data.</para>
<para>Data recycling allows IRIX CSA to properly bill jobs that are active during multiple accounting periods. By default, <command>csarun</command> reports data only for jobs that terminate during the current accounting period. Through data recycling, IRIX CSA preserves data for active jobs until the jobs terminate.</para>
<para>In the session file <command>csabuild</command> flags each job as being either active or terminated. <command>csarecy</command> reads the session file and recycles data for the active jobs. <command>csacon</command> consolidates the data for the terminated jobs, which <command>csaperiod</command> uses later. <command>csabuild</command>, <command>csarecy</command>, and <command>csacon</command> are all invoked by <command>csarun</command>.</para>
<para><command>csarun</command> puts recycled data in the <filename>/var/adm/acct/day</filename> directory. Data files with names suffixed with <literal>0</literal> contain recycled data. For example, <literal>ctime0</literal>, <literal>pacct0</literal>, and <literal>uptime0</literal> are generally the recycled data files that are found in <filename>/var/adm/acct/day</filename>.</para>
<para>Normally, an administrator should not have to manually purge the recycled accounting data. This purge should only be necessary if accounting data is missing. Missing data can cause jobs to recycle forever and consume valuable CPU cycles and disk space.</para>
<section><title>How Sessions Are Terminated</title>
<para>Interactive jobs, <command>cron</command> jobs, and <command>at</command> jobs terminate when the last process in the job exits. Normally, the last process to terminate is the login shell. The kernel writes an end-of-job (<literal>EOJ</literal>) record to the <literal>pacct</literal> file when the job terminates.</para>
<para>When the NQS daemon delivers an NQS request's output, the request terminates. The daemon then writes an <literal>NQ_DISP</literal> record type to the <literal>pacct</literal> accounting file, while the kernel writes an <literal>EOJ</literal> record to the <literal>pacct</literal> file.</para>
<para>Unlike interactive jobs, NQS requests can have multiple <literal>EOJ</literal> records associated with them. In addition to the request's <literal>EOJ</literal> record, there can be <literal>EOJ</literal> records for pipe clients, net clients, and checkpointed portions of the request. The pipe client and net client perform NQS processing on behalf of the request.</para>
<para>The <command>csabuild</command> command flags jobs in the session file as being terminated if they meet one of the following conditions:</para>
<itemizedlist>
<listitem><para>The job is an interactive, <command>cron</command>, or <command>at</command> job, and there is an <literal>EOJ</literal> record for the job in the <literal>pacct</literal> file.</para>
</listitem>
<listitem><para>The job is an NQS request, and there is both an <literal>EOJ</literal> record for the request and an <literal>NQ_DISP</literal> record type in the <literal>pacct</literal> file.</para>
</listitem>
<listitem><para>The job is an interactive, <command>cron</command>, or <command>at</command> job and is active at the time of a system crash.</para>
</listitem>
<listitem><para>The job is manually terminated by the administrator using one of the methods described in <xref role="section" linkend="Z184816230493jeanne">.</para>
</listitem></itemizedlist>
</section>
<section id="Z084916190493jeanne"><title>Why Recycled Sessions Should Be Scrutinized </title>
<para>Recycling unnecessary data can consume large amounts of disk space and CPU time. The session file and recycled data can occupy a vast amount of disk space on the file systems containing <filename>/tmp</filename> and <filename>/var/adm/acct/day</filename>. Sites that archive data also require additional offline media. Wasted CPU cycles are used by <command>csarun</command> to reexamine and recycle the data. Therefore, to conserve disk space and CPU cycles, unnecessary recycled data should be purged from the accounting system.</para>
<para>Any of the following situations can cause IRIX CSA erroneously to recycle terminated jobs:</para>
<itemizedlist>
<listitem><para>Kernel or daemon accounting is turned off. At boot time, the <command>rc</command> command must execute <filename>/var/lib/acct/startup</filename> to start kernel and daemon accounting.</para>
<para>The kernel or<command sectionref="1m">ckpacct</command> command can turn off accounting when there is not enough space on the file system containing <filename>/var/adm/acct/day</filename>.</para>
</listitem>
<listitem><para>Accounting files are corrupt. Accounting data can be lost or corrupted during a system or disk crash.</para>
</listitem>
<listitem><para>Boot times are not recorded in <filename>/etc/csainfo</filename>. The <command>csaboots</command> command must be invoked by <command>rc</command> to write a boot time record to <filename>/etc/csainfo</filename>.</para>
</listitem>
<listitem><para>Recycled data is erroneously deleted in a previous accounting period.</para>
</listitem></itemizedlist>
</section>
<section id="Z184816230493jeanne"><title>How to Remove Recycled Data</title>
<para>Before choosing to delete recycled data, you should understand the repercussions, as described in <xref role="section" linkend="Z465216230493jeanne">. Data removal can affect billing and can alter the contents of the consolidated data file, which is used by <command>csaperiod</command>.</para>
<para>You can remove recycled data from IRIX CSA in the following ways:</para>
<itemizedlist>
<listitem><para>Interactively execute the <command>csarecy<?Pub _hardspace>-A</command> command. Administrators can select the active jobs that are to be recycled by running <command>csarecy</command> with the <literal>-A</literal> option. Users are not billed for the resources used in the jobs terminated in this manner. Deleted data is also not included in the consolidated data file.</para>
<para>The following example is one way to execute <command>csarecy<?Pub _hardspace>-A</command> (which generates two accounting reports and two consolidated files):</para>
<orderedlist><listitem><para>Run <command>csarun</command> at the regularly scheduled time.</para>
</listitem><listitem><para>Edit a copy of <filename>/var/lib/acct/csarun</filename>. Change the <literal>-r</literal> option on the <command>csarecy</command> invocation line to <literal>-A</literal>. Also, do not redirect standard output to <literal>${CRPT}/recyrpt</literal>. The result should be similar to the following: <comment>(Do the nqacct and tpacct lines need to be deleted?)</comment></para>
<literallayout>    csarecy -A -s ${SESSION_FILE}
     -N ${WORK}/Rnqacct -P ${WORK}/Rpacct
     -T ${WORK}/Rtpacct -U ${WORK}/Ruptime
     -C ${WORK}/Rctime -u ${WORK}/Rusacct
     2> ${NITE}/Erec.${DTIME}</literallayout>
<para>Since both the <literal>-A</literal> and <literal>-r</literal> options write output to <literal>stdout</literal>, the <literal>-r</literal> option is not invoked and <literal>stdout</literal> is not redirected to a file. As a result, the recycled job report is not generated.</para>
</listitem><listitem><para>Execute the <command>jstat</command> command, as follows, to display a list of currently active jobs:</para>
<literallayout>    jstat > jstat.out</literallayout>
</listitem><listitem><para>Execute the <command>qstat</command> command to display a list of NQS requests. The <command>qstat</command> command is used for seeing whether there are requests that are not currently running. This includes requests that are checkpointed, held, queued, or waiting.</para>
<para>To list all NQS requests, execute the <command>qstat</command> command, as follows, using a login that has either NQS manager or NQS operator privilege:</para>
<literallayout>    qstat -a > qstat.out</literallayout>
</listitem><listitem><para>Interactively run the modified version of <command>csarun</command>. If you execute <command>csarun</command> soon after the first step is complete, this invocation of <command>csarun</command> completes quickly because not very much data exists.</para>
<para>For each active job, <command>csarecy</command> asks you if you want to preserve the job. Preserve the active and nonrunning NQS jobs found in the third and fourth steps. All other jobs are candidates for removal.</para>
</listitem></orderedlist>
</listitem>
<listitem><para>Execute <command>csabuild</command> with the <literal>-o</literal><?Pub _hardspace><replaceable>ndays</replaceable> option, which terminates all active jobs older than the specified number of days. Resource usage for these terminated jobs is reported by <command>csarun</command>, and users are billed for the jobs. The consolidated data file also includes this resource usage.</para>
<para>To execute <command>csabuild</command> with the <literal>-o</literal> option, edit <filename>/var/lib/acct/csarun</filename>. Add the <literal>-o</literal><?Pub _hardspace><replaceable>ndays</replaceable> option to the <command>csabuild</command> invocation line. Specify for <replaceable>ndays</replaceable> an appropriate value for your site.</para>
<para>Recycled data for currently active jobs will be removed if you specify an inappropriate value for <replaceable>ndays</replaceable>.</para>
</listitem>
<listitem><para>Execute <command>csarun</command> with the <literal>-A</literal> option. It reports resource usage for both active and terminated jobs, so users are billed for recycled sessions. This data is also included in the consolidated data file.</para>
<para>None of the data for the active jobs, including the currently active jobs, is recycled. No recycled data files are generated in the <filename>/var/adm/acct/day</filename> directory.</para>
</listitem>
<listitem><para>Remove the recycled data files from the <filename>/var/adm/acct/day</filename> directory. You can delete data for all of the recycled jobs, both terminated and active, by executing the following command:</para>
<literallayout>rm /var/adm/acct/day/*[a-z]0</literallayout>
<para>The next time <command>csarun</command> is executed, it will not find data for any recycled jobs. Thus, users are not billed for the resources used in the recycled jobs, and this data is not included in the consolidated data file. <command>csarun</command> recycles the data for currently active jobs.</para>
</listitem></itemizedlist>
</section>
<section id="Z465216230493jeanne"><title>Adverse Effects of Removing Recycled Data</title>
<para>IRIX CSA assumes that all necessary accounting information is available to it, which means that IRIX CSA expects kernel and daemon accounting to be enabled and recycled data not to have been mistakenly removed. If some data is unavailable, IRIX CSA may provide erroneous billing information. Sites should be aware of the following facts before removing data:</para>
<itemizedlist>
<listitem><para>Users may or may not be billed for terminated recycled jobs. Administrators must understand which of the previously described methods cause the user to be billed for the terminated recycled jobs. It is up to the site to decide whether or not it is valid for the user to be billed for these jobs.</para>
<para>For those methods that cause the user to be billed, both <command>csarun</command> and <command>csaperiod</command> report the resource usage.</para>
</listitem>
<listitem><para>It may be impossible to reconstruct a terminated recycled job. If a recycled job is terminated by the administrator, but the job actually terminates in a later accounting period, information about the job is lost. If a user questions the resource billing, it may be extremely difficult or impossible for the administrator to correctly reassemble all accounting information for the job in question.</para>
</listitem>
<listitem><para>Manually terminated recycled jobs be improperly billed in a future billing period. If the accounting data for the first portion of a job has been deleted, IRIX CSA may be unable to correctly identify the remaining portion of the job. Errors may occur, such as NQS requests being flagged as interactive sessions, or NQS requests being billed at the wrong queue rate. This is explained in detail in <xref role="section" linkend="Z453317230493jeanne">.</para>
</listitem>
<listitem><para>IRIX CSA programs may detect data inconsistencies. When accounting data is missing, IRIX CSA programs may detect errors and abort.</para>
</listitem></itemizedlist>
<para>The following table summarizes the effects of using the methods described in <xref role="section" linkend="Z184816230493jeanne">.</para>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>Possible effects of removing recycled data</tbltitle>
<tgroup align="left" charoff="50" cols="4" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.80in">
<colspec charoff="50" colname="c1" colwidth="91*">
<colspec charoff="50" colname="c2" colwidth="141*">
<colspec charoff="50" colname="c3" colwidth="129*">
<colspec charoff="50" colname="c4" colwidth="129*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="bottom"><para>Method</para></entry><entry align="left" rotate="0" valign="bottom"><para>Underbilling?</para></entry><entry align="left" rotate="0" valign="bottom"><para>Incorrect billing?</para></entry><entry align="left" rotate="0" valign="bottom"><para>Consolidated data file</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>csarecy -A</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes. Users are not billed for the portion of the session that was terminated by <literal>csarecy<?Pub _hardspace>-A</literal>.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Possible. Manually terminated recycled sessions may be billed improperly in a future billing period.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Does not include data for sessions terminated by <literal>csarecy<?Pub _hardspace>-A</literal>.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>csabuild -o</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>No. Users are billed for the portion of the session that was terminated by <literal>csabuild<?Pub _hardspace>-o</literal>.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Possible. Manually terminated recycled sessions may be billed improperly in a future billing period.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Includes data for sessions terminated by <literal>csabuild<?Pub _hardspace>-o</literal>.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>csarun -A</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>No. All active and recycled sessions are billed.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Possible. All active and recycled sessions that eventually terminate may be billed improperly in a future billing period, because no data is recycled.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Includes data for all active and recycled sessions.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><command>rm</command></para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes. All users are not billed for the portion of the session that was recycled.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Possible. All recycled sessions that eventually terminate may be billed improperly in a future billing period.</para></entry>
<entry align="left" rotate="0" valign="top"><para>Does not include data for any recycled session.</para></entry></row></tbody></tgroup></table>
<para>By default, the consolidated data file contains data only for terminated jobs. Manual termination of recycled data may cause some of the recycled data to be included in the consolidated file. These cases are noted in the previous table.</para>
</section>
<?Pub _newpage>
<section id="Z453317230493jeanne"><title>NQS Requests and Recycled Data</title>
<para>For IRIX CSA to identify all NQS requests, data must be properly recycled. When an administrator manually purges recycled data for an NQS request, errors such as the following can occur:</para>
<itemizedlist>
<listitem><para>IRIX CSA flags the NQS request as an interactive job. This causes the request to be billed at interactive rates.</para>
</listitem>
<listitem><para>The request is billed at the wrong queue rate.</para>
</listitem>
<listitem><para>The wrong queue wait time is associated with the request.</para>
</listitem></itemizedlist>
<para>These errors occur because valuable NQS accounting information was purged by the administrator. Only a few NQS accounting records are written by the NQS daemon, and all of the records are needed for IRIX CSA to properly bill NQS requests.</para>
<para>NQS accounting records are only written under the following circumstances:</para>
<itemizedlist>
<listitem><para>The NQS daemon receives a request.</para>
</listitem>
<listitem><para>A request is routed to a queue.</para>
</listitem>
<listitem><para>A request executes. This includes executing a request for the first time, and restarting and rerunning a request.</para>
</listitem>
<listitem><para>A request terminates. A request can terminate because it is completed, requeued, preempted, held, checkpointed, or rerun by the operator.</para>
</listitem>
<listitem><para>Output is delivered.</para>
</listitem></itemizedlist>
<para>Thus, for long running requests that span days, there can be days when no NQS data is written. Consequently, it is extremely important that accounting data be recycled. If the site administrator manually terminates recycled jobs, care must be taken to be sure that only nonexistent NQS requests are terminated.</para>
</section>
</section>
<section id="Z025813281290cas">
<title>Tailoring IRIX CSA</title>
<para>This section describes the following actions in IRIX CSA: </para>
<itemizedlist>
<listitem><para>Setting up SBUs</para>
</listitem>
<listitem><para>Setting up daemon accounting</para>
</listitem>
<listitem><para>Setting up user exits</para>
</listitem>
<listitem><para>Modifying the front-end formatting templates</para>
</listitem>
<listitem><para>Modifying the charging of NQS jobs based on NQS termination status</para>
</listitem>
<listitem><para>Tailoring IRIX CSA shell scripts</para>
</listitem>
<listitem><para>Using <command sectionref="1">at</command> instead of <command sectionref="1m">cron</command> to periodically execute <command>csarun</command></para>
</listitem>
<listitem><para>Allowing users without super-user permissions to execute IRIX CSA</para>
</listitem>
<listitem><para>Using an alternate configuration file</para>
</listitem></itemizedlist>
<section id="Z394314230890howie"><title>System Billing Units (SBUs)</title>
<para>A <replaceable>system billing unit</replaceable> (SBU) is a unit of measure that reflects use of machine resources. You can alter the weighting factors associated with each field in each accounting record to obtain an SBU value suitable for your site. SBUs are defined in the accounting configuration file, <filename>/etc/config/csa_config</filename>. By default, all SBUs are set to <literal>0.0</literal>.</para>
<para>The default SBU algorithms are defined in <filename>/var/src/cmd/acct/lib/acct/user_sbu.c</filename>. By modifying <filename>/var/src/cmd/acct/lib/acct/user_sbu.c</filename>, compiling, and relinking the accounting programs, your site can use local SBU calculations.</para>
<para id="Z392017150590howie">Accounting allows different periods of time to be designated either prime or nonprime time (the time periods are specified in <filename>/var/lib/acct/holidays</filename>).</para>
<para>Following is an example of how the prime/nonprime algorithm works:</para>
<para>Assume a user uses 10 seconds of CPU time, and executes for 100 seconds of prime wall-clock time, and pauses for 100 seconds of nonprime wall-clock time. Therefore, elapsed time is 200 seconds (100+100). If</para>
<literallayout><replaceable>prime</replaceable> = <replaceable>prime time</replaceable> / <replaceable>elapsed time</replaceable>
<replaceable>nonprime</replaceable> = <replaceable>nonprime time</replaceable> / <replaceable>elapsed time</replaceable>
<replaceable>cputime[PRIME]</replaceable> = <replaceable>prime</replaceable> * <replaceable>CPU time</replaceable>
<replaceable>cputime[NONPRIME]</replaceable> = <replaceable>nonprime</replaceable> * <replaceable>CPU time</replaceable></literallayout>
<para>then</para>
<literallayout><replaceable>cputime[PRIME]</replaceable> == 5 seconds
<replaceable>cputime[NONPRIME]</replaceable> == 5 seconds</literallayout>
<para>Under IRIX CSA, an SBU value is associated with each record in the session file when that file is assembled by <command>csabuild</command>. Final summation of the SBU values is done by <command>csacon</command> during the creation of the <literal>cacct</literal> record file.</para>
<para>Billing for SBU values is intended to be a combination of all the SBU values from each record associated with a job, as follows:</para>
<literallayout><replaceable>Total SBU = (NQS queue SBU value) * (sum of all process record SBUs</replaceable>
     <replaceable>+ sum of all tape record SBUs</replaceable>
     <replaceable>+ sum of all ctmp record SBUs)</replaceable></literallayout>
<para>This allows a site to bill different NQS queues at differing rates. </para>
<section><title><literal>pacct</literal> SBUs</title>
<para>The SBUs for <literal>pacct</literal> data are  separated into prime and nonprime values. Prime and nonprime use is calculated by a ratio of elapsed time. If you do not want to make a distinction between prime and nonprime time, set the nonprime time SBUs and the prime time SBUs to the same value. Prime time is defined in <filename>/var/lib/acct/holidays</filename>. By default, Saturday and Sunday are considered nonprime time.</para>
<para>The following is a list of prime time <literal>pacct</literal> SBU weights. Descriptions and factor units for the nonprime time SBU weights are similar to those listed here. SBU weights are defined in <filename>/etc/config/csa_config</filename>.</para>
<deflist>
<colheads><comment>(Need to change these)</comment>
<head1>Value</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>P_BASIC</literal></term>
<listitem><para>Prime-time weight factor. <literal>P_BASIC</literal> is multiplied
by the sum of prime time SBU values to get the final SBU factor for the <literal>pacct</literal> base record.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_TIME</literal></term>
<listitem><para>General-time weight factor. <literal>P_TIME</literal> is multiplied
by the time SBUs (made up of <literal>P_STIME</literal>, <literal>P_ITIME</literal>, <literal>P_SCTIME</literal>, and <literal>P_INTTIME</literal>)
to get the time contribution to the <literal>pacct</literal> base record SBU
value.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_STIME</literal></term>
<listitem><para>System CPU-time weight factor. The unit used for this weight
is <replaceable>billing units</replaceable> per second. <literal>P_STIME</literal>
is multiplied by the system CPU time to get the system CPU factor.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_UTIME</literal></term>
<listitem><para>User CPU-time weight factor. The unit used for this weight
is billing units per second. <literal>P_UTIME</literal> is multiplied by the
user CPU time to get the user CPU factor.</para>
<para>User time is the sum of user times after weighting for multitasking.
Multitasking may affect the user CPU cost if the <literal>MUTIME_WEIGHT</literal>
parameters have been set to values other than 1.0. See the following explanation
of these values.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_RTIME</literal></term>
<listitem><para>Remote CPU time weight factor. The unit used for this weight
is billing units per second. <literal>P_RTIME</literal> is multiplied by the
user CPU time to get the user CPU factor.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_ITIME</literal></term>
<listitem><para>This is the weight factor for the time spent waiting in the
kernel for I/O. The unit used for this weight is <replaceable>billing units</replaceable> per second. <literal>P_ITIME</literal> is multiplied by the
I/O wait time.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_SCTIME</literal></term>
<listitem><para>Weight factor for system call time. The unit used for this
weight is <replaceable>billing units</replaceable> per second.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_INTTIME</literal></term>
<listitem><para>Weight factor for interrupt time. The unit used for this weight
is <replaceable>billing units</replaceable> per second.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_MEM</literal></term>
<listitem><para>General-memory-integral weight factor. <literal>P_MEM</literal>
is multiplied by the memory SBUs (made up of <literal>P_XMEM</literal> and <literal>P_IMEM</literal> to get the memory contribution to the <literal>pacct</literal>
base record SBU value.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_XMEM</literal></term>
<listitem><para>CPU-time-memory-integral weight factor. The unit used for
this weight is <replaceable>billing units</replaceable> per Kword-minute <comment>(Delete ref to word?)</comment>. <literal>P_XMEM</literal> is multiplied by
the memory integral (see <xref role="section" linkend="Z334307271089howie">).
This value is affected by your site's choice of <literal>MEMINT</literal>
(in the accounting configuration file <filename>/etc/config/csa_config</filename>).</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_IMEM</literal></term>
<listitem><para>The weight factor used with the I/O wait time memory integral.
This integral includes the I/O wait time while the process is locked in memory.
The unit used for this weight is <replaceable>billing units</replaceable>
per Kword-minute <comment>(delete ref to word?)</comment>. <literal>P_IMEM</literal> is multiplied by the I/O-wait-time memory integral.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_IO</literal></term>
<listitem><para>General-I/O weight factor. <literal>P_IO</literal> is multiplied
by the I/O SBUs (made up of <literal>P_BYTEIO</literal>, <literal>P_PHYIO</literal>, and <literal>P_LOGIO</literal>) to get the I/O contribution to
the <literal>pacct</literal> base record SBU value.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_BYTEIO</literal></term>
<listitem><para>Characters-transferred weight factor. The unit used for this
weight is <replaceable>billing units</replaceable> per character transferred. <literal>P_BYTEIO</literal> is multiplied by the bytes of I/O transferred.</para>
<para>If tape or device I/O is to be charged at a rate other than <literal>P_BYTEIO</literal>, the tape and device weight factors need to be adjusted
accordingly. See <xref role="section" linkend="Z260417220890howie">,
(field <literal>ac_io</literal>) for more information.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_LOGIO</literal></term>
<listitem><para>Logical-I/O-request weight factor. The unit used for this
weight is <replaceable>billing units</replaceable> per logical I/O request. <literal>P_LOGIO</literal> is multiplied by the number of logical I/O requests made.
The number of logical I/O requests is the total number of <command sectionref="2">read</command>, <command sectionref="2">write</command>, <command sectionref="2">reada</command>, and <command sectionref="2">writea</command> system calls.
The number of strides, multiplied by the number of requests processed by each <command sectionref="2">listio</command> call, is also added to the total.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Multitasking SBUs </title>
<para>The <literal>MUTIME_WEIGHT</literal> <replaceable>i</replaceable> variables
define the weighting factors that are used to charge user CPU time for multitasking
programs. It is used in conjunction with the <literal>ac_mutime</literal>
array (see <filename>/var/include/sys/acct.h</filename>), which defines the
amount of CPU time the multitasking program spent with <replaceable>i</replaceable>
+ 1 CPUs connected.</para>
<para><literal>MUTIME_WEIGHT</literal> <replaceable>i</replaceable> defines
the marginal cost of getting the <replaceable>i</replaceable> + 1 CPU at one
instant. If these values are set to less than 1.0, there is an incentive for
multitasking. If the values are set to 1.0, multitasking programs are charged
for user CPU time just as all other programs.</para>
<para>For more information on multitasking incentives, see <xref role="section" linkend="Z483813171089howie">.</para>
</section>
<section><title>MPP SBUs</title>
<para>Massively parallel processing (MPP) system billing units (P_MPP/NP_MPP)
are calculated from the statistics on MPP in the <literal>pacct</literal>
file. The SBU factors are defined in <filename>/etc/config/csa_config</filename>.</para>
<para>The <literal>P_MPPPE</literal> or <literal>NP_MPPPE</literal> SBUs are
the MPP processing elements (PEs) weight factors, prime and nonprime charges.
The prime time billing units for PEs are calculated using the following equation: <graphic entityref="a11928" magnification="80" width="wide"></graphic></para>
<para>The nonprime time billing units for PEs are calculated using the following
equation:<graphic entityref="a11929" magnification="80" width="wide"></graphic> </para>
<para>The unit used for these weights is billing units per PE-second.</para>
<para>The <literal>P_MPPBESU</literal> or <literal>NP_MPPBESU</literal> SBUs
are the MPP barrier|eureka sync units (BESU) weight factors, prime and nonprime
charges. The prime time billing units for BESUs are calculated using the following
equation: <graphic entityref="a11930" magnification="80" width="wide"></graphic></para>
<para>The nonprime time billing units for BESUs are calculated using the following
equation: <graphic entityref="a11931" magnification="80" width="wide"></graphic></para>
<para>The unit used for these weights is billing units per BESUs-second.</para>
<para>The <literal>P_MPPTIME</literal> or <literal>NP_MPPTIME</literal> SBUs
are the MPP time weight factors, prime and nonprime charges. The prime time
billing units for MPP time are calculated using the following equation: <graphic entityref="a11932" magnification="80" width="wide"></graphic></para>
<para>The nonprime time billing units for MPP time are calculated using the
following equation: <graphic entityref="a11933" magnification="80" width="wide"></graphic></para>
<para>The unit used for these weights is billing units per second.</para>
<para>The SBU values should be very small, which will prevent these numbers
from dominating the SBU values. Values of 0 result in no charge.</para>
</section>
<section><title>Connect-time SBUs</title>
<para>There are SBUs for both prime- and nonprime-time connect data. The SBU
values should reflect the system billing units per second of connect time.
The weight factors, <literal>CON_PRIME</literal> and <literal>CON_NONPRIME</literal>, are defined in <filename>/etc/config/csa_config</filename>.</para>
</section>
<section id="Z460017260490howie"><title>NQS SBUs</title>
<para>The <filename>/etc/config/csa_config</filename> file contains the configurable
parameters that pertain to NQS SBUs. </para>
<para>The <literal>NQS_NUM_QUEUES</literal> parameter sets the number of queues
for which you want to set SBUs (the value must be set to at least 1). Each <literal>NQS_QUEUE</literal> <replaceable>x</replaceable> variable in the configuration
file has a queue name and an SBU pair associated with it (the total number
of queue/SBU pairs must equal <literal>NQS_NUM_QUEUES</literal>). The queue/SBU
pairs define weights for the queues. If an SBU value is less than 1.0, there
is an incentive to run jobs in the associated queue; if the value is 1.0,
jobs are charged as though they are non-NQS jobs; and if the SBU is 0.0, there
is no charge for jobs running in the associated queue. SBUs for queues not
found in the configuration file are automatically set to 1.0.</para>
<para>The <literal>NQS_NUM_MACHINES</literal> parameter sets the number of
originating machines for which you want to set SBUs (the value must be at
least 1). Each <literal>NQS_MACHINE</literal> <replaceable>x</replaceable>
variable in the configuration file has an originating machine and an SBU pair
associated with it (the total number of machine/SBU pairs must equal <literal>NQS_NUM_MACHINES</literal>). SBUs for originating machines not specified in <filename>/etc/config/csa_config</filename> are automatically set to 1.0.</para>
<para>The queue and machine SBUs are multiplied together to give an NQS multiplier.
If the SBUs are set to less than 1.0, there is an incentive to run jobs in
these queues or from these machines. SBUs of 1.0 indicate that jobs in the
queues or from associated hosts are billed normally.</para>
</section>
<section id="Z574910230890howie"><title>Tape SBUs</title>
<para>There is a set of weighting factors for each group of tape devices.
By default, there are only two groups, <command>tape</command> and <literal>cart</literal>. The <literal>TAPE_SBU</literal> <replaceable>i</replaceable>
parameters in <filename>/etc/config/csa_config</filename> define the weighting
factors for each group. There are SBUs associated with the following:</para>
<itemizedlist>
<listitem><para>Number of mounts</para>
</listitem>
<listitem><para>Device reservation time (seconds)</para>
</listitem>
<listitem><para>Number of bytes read</para>
</listitem>
<listitem><para>Number of bytes written</para>
</listitem></itemizedlist>
</section>
<section><title>Example SBU Settings</title>
<para>The following section provides an example to show how you could set up the SBU system. This example is restricted to <filename>pacct</filename> base records.</para>
<para>The formula for calculating the whole <filename>pacct</filename> base record SBU is as follows <comment>(Need to change this)</comment>:<programlisting>PSBU = ((P_TIME * (P_STIME * <replaceable>stime</replaceable> + P_UTIME * <replaceable>utime</replaceable> + P_ITIME *
<replaceable>iowtime</replaceable>)) + (P_MEM * (P_XMEM * <replaceable>cpumem</replaceable> + P_IMEM * <replaceable>iowmem</replaceable>)) +
(P_IO * (P_BYTEIO * <replaceable>bytes</replaceable> + P_PHYIO * <replaceable>phy</replaceable> + P_LOGIO * <replaceable>log</replaceable>)));

NSBU = ((NP_TIME * (NP_STIME * <replaceable>stime</replaceable> + NP_UTIME * <replaceable>utime</replaceable> + NP_ITIME
* <replaceable>iowtime</replaceable>)) + (NP_MEM * (NP_XMEM * <replaceable>cpumem</replaceable> + NP_IMEM * <replaceable>iowmem</replaceable>)) +
(NP_IO*(NP_BYTEIO * <replaceable>bytes</replaceable> + NP_PHYIO * <replaceable>phy</replaceable> + NP_LOGIO * <replaceable>log</replaceable>)));

SBU = P_BASIC * PSBU + NP_BASIC * NSBU;</programlisting></para>
<para>The variables in this formula are as follows:<deflist termlength="narrow">
<colheads>
<head1>Variable</head1><head2>Description</head2></colheads>
<deflistentry>
<term><replaceable>stime</replaceable></term>
<listitem><para>System CPU time in seconds.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>utime</replaceable></term>
<listitem><para>User CPU time in seconds. User CPU time is the sum of user times after weighting for multitasking.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>iowtime</replaceable></term>
<listitem><para>Time (in seconds) spent waiting in the kernel for I/O while
the process is locked in memory.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>cpumem</replaceable></term>
<listitem><para>Memory integral (see <xref role="section" linkend="Z334307271089howie">).</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>iowmem</replaceable></term>
<listitem><para>I/O-wait-time memory integral.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>bytes</replaceable></term>
<listitem><para>Number of bytes of data transferred.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>phy</replaceable></term>
<listitem><para>Number of physical I/O requests made.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>log</replaceable></term>
<listitem><para>Number of logical I/O requests made.</para>
</listitem></deflistentry>
</deflist></para>
<para>All time is considered prime time. Therefore, the nonprime time SBUs
should be set to the same values as their prime time counterparts. In particular,
system time varies greatly due to system load, and will cause this example
to be nonrepeatable. For information about which fields generate repeatable
values, see <xref role="section" linkend="Z260417220890howie">.</para>
<para>In this example, users are charged for each logical request (<literal>P_LOGIO</literal>) and the total data moved (<literal>P_BYTEIO</literal>).
This provides users with an incentive to use larger I/O requests, which may
be more efficient.</para>
<para>In this example, users are charged the following amounts for time (the
accounting record fields associated with the charge are also identified):</para>
<itemizedlist>
<listitem><para>$100 per hour of user CPU time. This is equal to $100 per
3600 seconds, which is $0.02777777 per second (<literal>P_UTIME</literal>).
To produce repeatable billing, system time must be excluded. Thus, <literal>P_STIME</literal> is set to <literal>0.0</literal>.</para>
</listitem>
<listitem><para>$25 for each megaword <comment>(delete ref to word?)</comment>of
memory per hour of CPU time. The memory integrals are in units of Kword <comment>(delete ref to word?)</comment>-minutes, so the weighting factor is $25/(60
minutes * 210 Kwords) <comment>(delete ref to word?)</comment>or 0.0004069010
(<literal>P_XMEM</literal>).</para>
</listitem>
<listitem><para>$3 for each hour spent waiting on I/O. The wait time is in
units of seconds, so the weighting factor is $3/3600 seconds or .0008333333
(<literal>P_ITIME</literal>).</para>
</listitem>
<listitem><para>$25 for each megaword <comment>(delete ref to word?)</comment>of
memory per hour of I/O wait time. This is the same value as the memory charge
because the process is using memory during this time in the same way it would
when executing. The weighting factor is $25/(60 seconds * 2<superscript>10</superscript> Kwords <comment>(delete ref to word?)</comment>) or 0.0004069010
(<literal>P_IMEM</literal>).</para>
</listitem>
<listitem><para>Assume an average I/O rate to disks of 9.6 Mbytes per second.
Assume that the original cost of the drive was $125,000, and it will be paid
for in 2 years. Also assume that it is busy 5% of the time (63072000 seconds
* 5% = 3153600 seconds). The amount of I/O that can be completed in 2 years
is 31745177026560 bytes (9.6 Mbytes/second * 3153600 seconds). Thus, you would
charge $125,000/31745177026560 bytes or $0.00000000393760 per byte, which
is approximately $0.33/10 Mwords <comment>(delete ref to word?)</comment>(<literal>P_BYTEIO</literal>).</para>
</listitem>
<listitem><para>$0.01 per thousand logical I/O requests. This charge encourages
the user to perform larger I/O requests by charging less for a lower number
of larger I/O requests (instead of a lot of small I/O requests). The weighting
factor is computed as $0.01/1000 I/O requests or 0.00001 (<literal>P_LOGIO</literal>).</para>
</listitem></itemizedlist>
<para>Therefore, in this example, the <literal>pacct</literal> base record
charges are as follows (the nonprime time SBUs are set to the same value as
their prime time counterparts):</para>
<deflist>
<colheads>
<head1>Weight factor</head1><head2>Charge</head2></colheads>
<deflistentry>
<term><literal>P_BASIC</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_TIME</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_UTIME</literal></term>
<listitem><para>0.02777777777777</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_STIME</literal></term>
<listitem><para>0.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_ITIME</literal></term>
<listitem><para>0.00083333333333</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_MEM</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_XMEM</literal></term>
<listitem><para>0.00040690104166</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_IMEM</literal></term>
<listitem><para>0.00040690104166</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_IO</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_BYTEIO</literal></term>
<listitem><para>0.00000000393760</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_LOGIO</literal></term>
<listitem><para>0.00001000000000</para>
</listitem></deflistentry>
</deflist>
<para><literal>P_BASIC</literal>, <literal>P_TIME</literal>, <literal>P_MEM</literal>, and <literal>P_IO</literal> are used to weight different factors
of the equation; you can use these depending on how your other groups of weighting
factors are picked. For example, you could change the <literal>P_IO</literal>
and <literal>P_BYTEIO</literal> factors as follows and receive the same results:</para>
<deflist>
<colheads>
<head1>Weight factor</head1><head2>Charge</head2></colheads>
<deflistentry>
<term><literal>P_BASIC</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_TIME</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_UTIME</literal></term>
<listitem><para>0.02777777777777</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_STIME</literal></term>
<listitem><para>0.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_ITIME</literal></term>
<listitem><para>0.00083333333333</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_MEM</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_XMEM</literal></term>
<listitem><para>0.00040690104166</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_IMEM</literal></term>
<listitem><para>0.00040690104166</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_IO</literal></term>
<listitem><para>0.00001</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_BYTEIO</literal></term>
<listitem><para>0.000393760</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_LOGIO</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Example SBU Settings for MPP Usage</title>
<para>The following section provides an example to show how you could set
up the SBU system for MPP records.</para>
<para>The formula for calculating MPP specific SBUs (added to SBUs from the <command>pacct</command> base record) is as follows:</para>
<programlisting>PSBU = P_MPP * (P_MPPPE * <replaceable>mpptime</replaceable> * <replaceable>mpppe</replaceable> + 
                P_MPPBESU * <replaceable>mpptime</replaceable> * <replaceable>mppbesu</replaceable> +
                P_MPPTIME * <replaceable>mpptime</replaceable>)

NPSBU = NP_MPP * (NP_MPPPE * <replaceable>mpptime</replaceable> * <replaceable>mpppe</replaceable> +
                NP_MPPBESU * <replaceable>mpptime</replaceable> * <replaceable>mppbesu</replaceable> +
                NP_MPPTIME * <replaceable>mpptime</replaceable>)

SBU = P_BASIC * PSBU + NP_BASIC * NPSBU</programlisting>
<para>The variables in this formula are as follows:<deflist termlength="narrow">
<colheads>
<head1>Variable</head1><head2>Description</head2></colheads>
<deflistentry>
<term><replaceable>mpptime</replaceable></term>
<listitem><para>Time you've been connected to a PE.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>mpppe</replaceable></term>
<listitem><para>Number of PEs.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>mppbesu</replaceable></term>
<listitem><para>Number of barrier/eureka synchronization units.</para>
</listitem></deflistentry>
</deflist></para>
<para>All time is considered prime time, so the nonprime time SBUs should
be set to the same values as their prime time counterparts.</para>
<para>In this example, users are charged the following amount for time:<itemizedlist>
<listitem><para>$0.1 per hour per PE for multi-PE applications. This accounts
for the fact that time spent on application PEs is <firstterm>exclusive</firstterm>.
This is equal to $0.0000277777 per second per PE.</para>
</listitem></itemizedlist></para>
<para>Therefore, in this example, the MPP record charges are as follows:<deflist>
<colheads>
<head1>Weight factor</head1><head2>Charge</head2></colheads>
<deflistentry>
<term><literal>P_MPP</literal></term>
<listitem><para>1.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_MPPPE</literal></term>
<listitem><para>0.0000277777</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_MPPBESU</literal></term>
<listitem><para>0.0</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>P_MPPTIME</literal></term>
<listitem><para>0.0</para>
</listitem></deflistentry>
</deflist></para>
</section>
</section>
<section id="Z165916260490howie"><title>Daemon Accounting</title>
<para>Accounting information is available from the NQS and online tape daemons.
Data is written to the <literal>pacct</literal> file in the <filename>/var/adm/acct/day</filename> directory.</para>
<para>In most cases, daemon accounting must be enabled by both the IRIX CSA
subsystem and the daemon. <xref role="section" linkend="Z541313171089howie">,
describes how to enable daemon accounting at system startup time. You can
also enable daemon accounting after the system has booted.</para>
<para>You can enable accounting for a specified deamon by using the <command>csaswitch</command> command. For example, tos tart tape accounting, you should
do the following:<literallayout>/var/lib/acct/csaswitch -c on -n tape</literallayout></para>
<para>The NQS and online tape daemon, also, must enable accounting. Use the <literal>qmgr set accounting on</literal> command to turn on NQS accounting. Tape daemon
accounting is enabled when <command sectionref="1m">tpdaemon</command> is
executed with the <literal>-c</literal> option.</para>
<para>Daemon accounting is disabled by <command sectionref="1m">shutacct</command>
at system shutdown (see <xref role="section" linkend="Z541313171089howie">).
It can also be disabled at any time by the <command>csaswitch</command> command
when used with the <literal>off</literal> operand. For example, to disable
NQS accounting, execute the following command:</para>
<literallayout>/var/lib/acct/csaswitch -c off -n nqs</literallayout>
</section>
<section id="Z352508080895glen"><title>Setting up User Exits</title>
<para>IRIX CSA accommodates the following user exits, which can be called
from certain <command id="Z131014040393jeanne">csarun</command> states:</para>
<deflist>
<colheads>
<head1><command>csarun</command> state</head1><head2>User exit</head2></colheads>
<deflistentry>
<term><literal>ARCHIVE1</literal></term>
<listitem><para><filename>/var/lib/acct/csa.archive1</filename></para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ARCHIVE2</literal></term>
<listitem><para><filename>/var/lib/acct/csa.archive2</filename></para>
</listitem></deflistentry>
<deflistentry>
<term><literal>FEF</literal></term>
<listitem><para><filename>/var/lib/acct/csa.fef</filename></para>
</listitem></deflistentry>
<deflistentry>
<term><literal>USEREXIT</literal></term>
<listitem><para><filename>/var/lib/acct/csa.user</filename></para>
</listitem></deflistentry>
</deflist>
<para>These exits allow an administrator to tailor the <command>csarun</command>
procedure to the individual site's needs by creating scripts to perform additional
site-specific processing during daily accounting.</para>
<para>While executing, <command>csarun</command> checks in the <literal>ARCHIVE1</literal>, <literal>ARCHIVE2</literal>, <literal>FEF</literal>, and <literal>USEREXIT</literal> states for a shell script with the appropriate name.</para>
<para>If the script exists, it is executed via the shell . (dot) command.
If the script does not exist, the user exit is ignored. The . (dot) command
will not execute a compiled program, but the user exit script can. <command>csarun</command> variables are available, without being exported, to the user
exit script. <command>csarun</command> checks the return status from the user
exit and if it is nonzero, the execution of <command>csarun</command> is terminated.</para>
<para>If IRIX CSA is run by a user without super-user permissions, the user
exits must be both readable and executable by this user (see <xref role="section" linkend="Z253017200690howie" pagnumber="no">).</para>
</section>
<section><title>Charging for NQS Jobs</title>
<para>By default, SBUs are calculated for all NQS jobs regardless of the job's
NQS termination code. If you do not want to bill portions of an NQS request,
set the appropriate <literal>NQS_TERM_</literal><replaceable>xxxx</replaceable>
variable (termination code) in <filename>/etc/config/csa_config</filename>
to <literal>0</literal>, which sets the SBU for this portion to <literal>0.0</literal>. By default, all portions of a request are billed.</para>
<para>The following table describes the termination codes:</para>
<deflist>
<colheads>
<head1>Code</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>NQS_TERM_EXIT</literal></term>
<listitem><para>Generated when the request finishes running and is no longer
in a queued state. At NQS shutdown time, requests that specified both the <literal>-nc</literal> (no checkpoint) and <literal>-nr</literal> (no rerun) options
for <command>qsub</command> also have <literal>NQS_TERM_EXIT</literal> records
written. In addition, this record is written for requests that specified the <literal>-nr</literal> option for <command>qsub</command> and were running at the time
of a system crash.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>NQS_TERM_REQUEUE</literal></term>
<listitem><para>Written for running requests that are checkpointed and then
requeued when NQS shuts down.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>NQS_TERM_PREEMPT</literal></term>
<listitem><para>Written when a request is preempted with the <literal>qmgr
preempt request</literal> command.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>NQS_TERM_HOLD</literal></term>
<listitem><para>Written for a request that is checkpointed with the <literal>qmgr hold request</literal> command. The <literal>hold request</literal> command
differs from the checkpoint done at daemon shutdown time because a "hold"
keeps the job from being scheduled until a <literal>qmgr release</literal>
command is executed.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>NQS_TERM_OPRERUN</literal></term>
<listitem><para>Written when a request is rerun with the <literal>qmgr rerun request</literal> command.</para>
<para>At NQS shutdown time, jobs that cannot be checkpointed and do not have the <literal>-nr</literal> (no rerun) option for <command>qsub</command> specified have this type of termination record written. The requests are requeued with this status.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Tailoring IRIX CSA Shell Scripts and Commands</title>
<para>Modify the following variables in <filename>/etc/config/csa_config</filename> if necessary: </para>
<deflist>
<colheads>
<head1>Variable</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>ACCT_FS</literal></term>
<listitem><para>File system on which <filename>/var/adm/acct</filename> resides. The default is <filename>/var</filename>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MAIL_LIST</literal></term>
<listitem><para>List of users to whom mail is sent if fatal errors are detected in the accounting shell scripts. The default is <literal>root</literal> and <literal>adm</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>WMAIL_LIST</literal></term>
<listitem><para>List of users to whom mail is sent if warning errors are detected
by the <command>csarun</command> script at cleanup time. The default is <literal>root</literal> and <literal>adm</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MIN_BLKS</literal></term>
<listitem><para>Minimum number of free blocks needed in <literal>${ACCT_FS}</literal> to run <command>csarun</command> or <command>csaperiod</command>.
The default is 500 free blocks.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Using <command>at</command> to Execute <command>csarun</command></title>
<para>You can use the <command>at</command> command instead of <command>cron</command> to execute <command>csarun</command> periodically. If your system
is down when <command>csarun</command> is scheduled to run via <command>cron</command>, <command>csarun</command> will not be executed until the next
scheduled time. On the other hand, <command>at</command> jobs execute when
the machine reboots if their scheduled execution time was during a down period.</para>
<para>You can execute <command>csarun</command> by using <command>at</command>
in several ways. For example, a separate script can be written to execute <command>csarun</command> and then resubmit the job at a specified time. Also, an <command>at</command> invocation of <command>csarun</command> could be placed in a
user exit script, <filename>/var/lib/acct/csa.user</filename>, that is executed
from the <literal>USEREXIT</literal> section of <command>csarun</command>.
For more information, see <xref role="section" linkend="Z352508080895glen">.</para>
</section>
<section id="Z253017200690howie"><title>Allowing Nonsuper Users to Execute
IRIX CSA</title>
<para>Your site may want to allow users without super-user permissions to
run IRIX CSA accounting. IRIX CSA can be run by users who are in the group <literal>adm</literal>.</para>
<note><title>Note</title><para> If <literal>root</literal> has run IRIX CSA,
you must execute the shell script <command>/var/lib/acct/csaperm</command>
(see <command sectionref="1m">csaperm</command>) to change the group ID and
file permissions of all accounting files in <filename>/var/adm/acct</filename>
so they can be accessed by a nonsuper user running IRIX CSA. </para>
</note>
<para>The following steps describe the process of setting up IRIX CSA so it
is executed automatically on a daily basis by a user without super-user permissions.
In this example, the user without super-user permissions is <literal>adm</literal>:</para>
<orderedlist><listitem><para>Ensure that user <literal>adm</literal> is a
member of group <literal>adm</literal> and has the permission bit <command>acct</command> set in its UDB entry (see <command sectionref="1m">udbgen</command>).</para>
</listitem><listitem><para>As <literal>root</literal>, execute the shell script <command>csaperm</command> to change the group ID and file permissions of all accounting
files in <filename>/var/adm/acct</filename> so they can be accessed by a nonsuper
user.</para>
</listitem><listitem><para>Ensure that, if they exist, the following user
exits have the group ID <literal>adm</literal> and are both readable and executable
by group <literal>adm</literal>: <filename>/var/lib/acct/csa.archive1</filename>, <filename>/var/lib/acct/csa.archive2</filename>, <filename>/var/lib/acct/csa.fef</filename>,
and <filename>/var/lib/acct/csa.user</filename>.</para>
</listitem><listitem><para>Follow steps 1 through 5 of <xref role="section" linkend="Z541313171089howie">, to set up system billing units, record
system boot times, and turn off accounting before system shutdown.</para>
</listitem><listitem><para>Include an entry similar to the one shown below
in <filename>/var/spool/cron/crontabs/root</filename> so that <command>cron</command> automatically runs <command sectionref="1m">dodisk</command>: <literallayout fontsize="8pt">0 3 * * 1-6 /var/lib/acct/dodisk -a -v 2> /var/adm/acct/nite/dk2log</literallayout></para>
<para>The <command>dodisk</command> command must be executed by <literal>root</literal>, because no other user has the correct permissions to read <filename>/dev/dsk/*</filename>.</para>
</listitem><listitem><para>Include entries similar to the ones shown below
in <filename>/var/spool/cron/crontabs/adm</filename> so that user <literal>adm</literal> automatically runs daily accounting by using <command>cron</command>: <literallayout>0 4 * * 1-6 /var/lib/acct/csarun 2> /var/adm/acct/nite/fd2log
0 * * * * /var/lib/acct/ckpacct</literallayout></para>
<para>The <command>csarun</command> command should be executed at a time that
allows <command>dodisk</command> to complete. If <command>dodisk</command>
does not complete before <command>csarun</command> executes, disk accounting
information may be missing or incomplete.</para>
</listitem><listitem><para>To run monthly accounting, place an entry similar
to the one below in <filename>/var/spool/cron/crontabs/adm</filename> (this
command generates a monthly report on all consolidated data files found in <filename>/var/adm/acct/sum/data/*</filename> and then deletes those data files): </para>
<literallayout width="standard" fontsize="8pt">15 5 1 * * /var/lib/acct/csaperiod -r 2>/var/adm/acct/nite/pd2log</literallayout>
</listitem><listitem><para>Update the holidays file as described in <xref role="section" linkend="Z541313171089howie">.</para>
</listitem></orderedlist>
</section>
<section id="Z495617030791jeanne"><title>Using an Alternate Configuration
File</title>
<para>By default, the <filename>/etc/config/csa_config</filename> configuration
file is used when any of the IRIX CSA commands are executed. You can specify
a different file by setting the shell variable <literal>CSACONFIG</literal>
to another configuration file, and then executing the IRIX CSA commands.</para>
<para>For example, you would execute the following commands to use the configuration
file <filename>/tmp/myconfig</filename> while executing <command>csarun</command>: </para>
<literallayout width="wide">CSACONFIG=/tmp/myconfig /var/lib/acct/csarun 2> /var/adm/acct/nite/fd2log</literallayout>
</section>
<section><title>Disk Usage Reporting (<command>diskusg</command>)</title>
<para>The <command sectionref="1m">diskusg</command> command can be configured
at your site. The <literal>site.c</literal> module of <command>diskusg</command>
contains an example to help you in customizing a report for your site. You
can delete your choice of comment-protection characters in the example, compile
the routine, relink <command>diskusg</command>, then print a sample report
of disk usage for your site. You can execute your modified <command>diskusg</command> command in the <literal>USEREXIT</literal> state in <command>csarun</command> or <command>runacct</command> scripts.</para>
</section>
</section>
<section id="Z881008321janelle">
<title>IRIX CSA Process Accounting Data</title>
<para>This section describes some of the fields found in the <literal>pacct</literal> file. <filename>/var/include/sys/acct.h</filename> defines the
structure of this file.</para>
<section id="Z260417220890howie"><title>Base Accounting Record</title>
<para>One base accounting record per process is written; each record contains
the following fields: </para>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>Base accounting record fields by function</tbltitle>
<tgroup align="left" charoff="50" cols="3" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.91in">
<colspec charoff="50" colname="c1" colwidth="122*">
<colspec charoff="50" colname="c3" colwidth="136*">
<colspec charoff="50" colname="c6" colwidth="240*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Field</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para>Header</para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>ac_header</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Accounting header record
word. (see <filename>/usr/include/sys/acct.h</filename>)</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para>Identifiers</para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>ac_uid</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>User ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal></literal></para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>ac_gid</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Group ID.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_ash</literal></para></entry>
<entry align="left" valign="top"><para>Array session ID.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_jid</literal></para></entry>
<entry align="left" valign="top"><para>Job ID.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_prid</literal></para></entry>
<entry align="left" valign="top"><para>Project ID.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_pid</literal></para></entry>
<entry align="left" valign="top"><para>Process ID.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_ppid</literal></para></entry>
<entry align="left" valign="top"><para>Parent process ID.</para></entry></row>
<row>
<entry align="left" valign="top"><para>Process Information</para></entry>
<entry align="left" valign="top"><para><literal>ac_btime</literal></para></entry>
<entry align="left" valign="top"><para>Beginning time of the process in usecs
since 1970.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_comm</literal></para></entry>
<entry align="left" valign="top"><para>Command name.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_himem</literal></para></entry>
<entry align="left" valign="top"><para>Memory-use high water mark in Mbytes.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_nice</literal></para></entry>
<entry align="left" valign="top"><para>Nice value, measured at the end of
1 second of system and user time or the most expensive value used thereafter.
This allows a process to set the value at which most of its work should be
done; only charges for increased cost are levied.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_stat</literal></para></entry>
<entry align="left" valign="top"><para>Process' exit value. See the <command sectionref="2">wait</command> man page for more information.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_tty</literal></para></entry>
<entry align="left" valign="top"><para>Controlling tty device.</para></entry></row>
<row>
<entry align="left" valign="top"><para>Counters<footnote><para>For multi-PE
processes, these counters represent the sum values for all PEs. For example, <literal>ac_utime</literal> is the sum of the user CPU time for all PEs.</para>
</footnote></para></entry>
<entry align="left" valign="top"><para><literal>ac_ctime</literal></para></entry>
<entry align="left" valign="top"><para>Process connect time.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para>For single-PE processes, this is the
user time in microseconds.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para>For multi-PE processes, this is the
connect time in microseconds. An application is considered connected to a
PE if it is not suspended. Connect time continues to accumulate until the
last PE exits. <literal>ac_ctime</literal> is the total connect time for <literal>ac_mppe</literal> PEs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para>Each of the <literal>ac_mppe</literal>
PEs was connected for (<literal>ac_ctime</literal> / <literal>ac_mppe</literal>)
microseconds.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_etime</literal></para></entry>
<entry align="left" valign="top"><para>Elapsed time while process executed
in usecs. This number is not repeatable.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_io</literal></para></entry>
<entry align="left" valign="top"><para>Number of characters transferred by
the process. This number is not repeatable.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_iobtime</literal></para></entry>
<entry align="left" valign="top"><para>I/O wait time unlocked in usecs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_iosw</literal></para></entry>
<entry align="left" valign="top"><para>I/O swap count.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_iowtime</literal></para></entry>
<entry align="left" valign="top"><para>I/O wait time locked in usecs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>???ac_iobtime</literal></para></entry>
<entry align="left" valign="top"><para>I/O wait time unlocked in usecs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_lio</literal></para></entry>
<entry align="left" valign="top"><para>Number of logical I/O requests. This
is a count of read<command></command>, <command>write</command>, <command>reada</command>, <command>writea</command>, and <command>listio</command>
(list entries) system calls made. This number is repeatable.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_rtime</literal></para></entry>
<entry align="left" valign="top"><para>Remote CPU time used in usecs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>???ac_sctime</literal></para></entry>
<entry align="left" valign="top"><para>System call CPU time in usecs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_stime</literal></para></entry>
<entry align="left" valign="top"><para>System CPU time used in usecs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_utime</literal></para></entry>
<entry align="left" valign="top"><para>User CPU time in usecs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_rw</literal></para></entry>
<entry align="left" valign="top"><para>Blocks read or written.</para></entry></row>
<row>
<entry align="left" valign="top"><para>Integrals</para></entry>
<entry align="left" valign="top"><para><literal>ac_iowmem</literal></para></entry>
<entry align="left" valign="top"><para>I/O wait-time memory integral locked
in memory. </para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_mem1</literal></para></entry>
<entry align="left" valign="top"><para>First memory integral selected when <literal>MEMINT = 1</literal> (in Mbytes * usecs). <literal>MEMINT</literal> is located
in <filename>/etc/config/csa_config</filename>. See <xref role="section" linkend="Z334307271089howie">,
for more information.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_mem2</literal></para></entry>
<entry align="left" valign="top"><para>Second memory integral selected when <literal>MEMINT = 2</literal> (in Mbytes 8 usecs). <literal>MEMINT</literal> is located
in <filename>/etc/config/csa_config</filename>. See <xref role="section" linkend="Z334307271089howie">,
for more information.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal></literal></para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>ac_mem3</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Third memory integral selected
when <literal>MEMINT = 3</literal> (in Mbytes * usecs). <literal>MEMINT</literal>
is located in <filename>/etc/config/csa_config</filename>. See <xref role="section" linkend="Z334307271089howie">, for more information.</para></entry></row></tbody></tgroup></table>
</section>
<section><title>End-of-job Accounting Record</title>
<para>There is one end-of-job record per job. The record is written when the
last process of a job is terminated. The record contains the following fields:</para>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>end-of-job accounting record fields by function</tbltitle>
<tgroup align="left" charoff="50" cols="3" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.91in">
<colspec charoff="50" colname="c1" colwidth="122*">
<colspec charoff="50" colname="c3" colwidth="136*">
<colspec charoff="50" colname="c6" colwidth="240*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Field</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para>Header</para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>ac_header</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Accounting header record
word. (see <filename>/usr/include/sys/acct.h</filename>)</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para>Identifiers</para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>ac_jid</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Job ID of the job to which
this record belongs.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_uid</literal></para></entry>
<entry align="left" valign="top"><para>User ID from the job table.</para></entry></row>
<row>
<entry align="left" valign="top"><para>Job Information</para></entry>
<entry align="left" valign="top"><para><literal>ac_btime</literal></para></entry>
<entry align="left" valign="top"><para>Start time of the job.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_Etime</literal></para></entry>
<entry align="left" valign="top"><para>End time of the job (in seconds since
1970).</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_fsblkused</literal></para></entry>
<entry align="left" valign="top"><para>Implementation deferred. Sum of the
file system storage used. This value may be negative if more space was freed
up than was consumed.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_himem</literal></para></entry>
<entry align="left" valign="top"><para>High-water memory use of job; sum of
all single-PE processes in a job at any given time (in clicks). This can vary
because of scheduling differences.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_mpphimem</literal></para></entry>
<entry align="left" valign="top"><para>High-water memory use of job; sum of
the processes of all multi-PE applications in a job at any given time (in
clicks). This can vary because of scheduling differences.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal></literal></para></entry>
<entry align="left" valign="top"><para><literal>ac_nice</literal></para></entry>
<entry align="left" valign="top"><para>Last nice value of the job.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal></literal></para></entry>
<entry align="left" rotate="0" valign="top"><para></para></entry>
<entry align="left" rotate="0" valign="top"><para></para></entry></row></tbody></tgroup></table>
</section>
<section><title>Multitasking Accounting Record</title>
<para>If a process is multitasked, a multitasking accounting record is written
when the last member of the multitasked group is terminated. The record contains
the following fields:</para>
<deflist>
<colheads>
<head1>Field</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>ac_smwtime</literal></term>
<listitem><para>Semaphore wait time (in clocks)</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ac_mttime[MUSIZE]</literal></term>
<listitem><para>Time connected to (<replaceable>i</replaceable> + <literal>1</literal>) CPUs. These values are in 1/100ths of a second and are compressed
as 16-bit, pseudo floating-point numbers. The compression and unit changes
were made so that multitasking information for a maximum of 32 CPUs can be
stored in the <literal>pacct</literal> file without changing the size of the
records.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>MPP Accounting Record</title>
<para>If a process uses more than one PE at a time, an MPP accounting record
is written that contains the following fields:</para>
<deflist>
<colheads>
<head1>Field</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>ac_header</literal></term>
<listitem><para>Accounting header record word. (see <filename>/var/include/sys/acct.h</filename>)</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ac_max_himem</literal></term>
<listitem><para>Maximum high-water memory used (in clicks).</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ac_mpbesu</literal></term>
<listitem><para>Number of BESUs used.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ac_mpp</literal></term>
<listitem><para>A structure that contains three arrays. The arrays provide
information by PE and are indexed by PE number. The arrays consist of the
following: <literal>io</literal> (number of bytes transferred), <literal>rstime</literal> (combined remote and system CPU time in microseconds), and <literal>utime</literal> (user CPU time in microseconds).</para>
<para>The sum of the <literal>ac_mpp.io</literal> values is <literal>ac_io</literal>. The sum of the <literal>ac_mpp.rstime</literal> values is (<literal>ac_rtime + ac_stime</literal>). The sum of the <literal>ac_mpp.utime</literal>
values is <literal>ac_utime</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ac_mppe</literal></term>
<listitem><para>Number of PEs used.</para>
</listitem></deflistentry>
</deflist>
</section>
</section>
<section id="Z483813171089howie">
<title>Multitasking Incentives </title>
<para>Some sites may want to provide accounting incentives for the use of
multitasking. Several of these are available through the appropriate setting
of installation parameters.</para>
<section id="Z334307271089howie"><title>Memory Integrals</title>
<para>Three different memory integrals are available to the accounting software.
The differences among them are important to those sites that want to give
incentives for use of multitasking.</para>
<para><replaceable>Memory integral #1</replaceable> &mdash; At each change
in memory size, memory integral #1 is incremented by the total CPU time used
since the last memory change, multiplied by the memory size, as follows:</para>
<literallayout><replaceable>MI #1: memory size * (total CPU time since last size change)</replaceable></literallayout>
<para>Thus, a program that is connected to two CPUs for some period will pay
twice the memory cost for that period. When using memory integral #1, a multitasking
program incurs the same charges, no matter how many CPUs it gets. This is
helpful if consistent billing is important to your site, but not as helpful
if incentives for multitasking are important.</para>
<para><replaceable>Memory integral #2</replaceable> &mdash; The calculations
for memory integral #2 are similar to those for #1, except that the increment
is the sum of times when at least one CPU was connected, multiplied by the
memory size, as follows:</para>
<literallayout fontsize="9pt"><replaceable>MI #2: memory size * (total time when program was connected to at least one CPU
 since last size change)</replaceable></literallayout>
<para>A multitasking program pays (in memory charges) only for the first CPU
it receives; additional CPUs do not increase the memory charge. Using memory
integral #2, a multitasking program can potentially decrease its memory charge
by a factor equal to the number of CPUs in the machine. This is an incentive
for using multitasking. However, because the amount of time a program is connected
to a number of CPUs varies from run to run, memory integral #2 is not consistent.
The maximum value for #2 is equal to #1 (if no connect time overlap occurs).
Note that this also means that #1 is equal to #2 for single-tasked programs.</para>
<para><replaceable>Memory integral #3</replaceable> &mdash; Some sites with
multi-CPU machines may wish to allow an individual program to use a proportionally
large amount of memory only if it is also able to use more than one CPU. For
instance, in a four-CPU machine, allowing one program to use 90% of memory
may idle some CPUs if the program uses only one CPU.</para>
<para>Memory integral #3 allows the site to control this aspect of CPU use
by adding an extra factor into the calculation for memory integral #2. The
total memory available to user programs is divided by the number of CPUs to
derive the value of "one CPU worth of memory." The memory size of the program
is then divided by the "CPU worth" factor to get the extra factor in memory
integral #3, as follows (this extra factor cannot be less than 1):</para>
<literallayout fontsize="9pt"><replaceable>MI #3: memory size * (total time when program was connected to at least one CPU
 since last size change) * (memory size / "one CPU worth of memory")</replaceable></literallayout>
<para>Memory integral #3 provides an incentive for single-tasked programs
to limit themselves to one CPU worth of memory. Multitasked programs will
also pay more in memory charges for lots of memory, but they can reduce their
memory charges by using multiple CPUs. However, memory integral #3 is as inconsistent
as #2, and it can also affect the memory charges for single-tasked programs.</para>
<para>Note that the changes from #1 to 2 and #2 to 3 are, in a sense, opposite
for multitasking programs. The changes from #1 to 2 reward multitasking programs
by a factor of up to the number of CPUs. The changes from #2 to 3 penalize
large-memory programs by up to the number of CPUs. Thus, if a multitasking
program has used all memory (on a four-CPU machine), memory integrals #1 and
#3 would be nearly equal, and the value of #2 would be approximately one-quarter
the value of #1 or #3.</para>
<para>The accounting software is released with memory integral #2 as the default.
The <literal>MEMINT</literal> variable in <filename>/etc/config/csa_config</filename> can be changed to match the site's needs.</para>
</section>
<section><title>Reducing Charges</title>
<para>Another incentive you can provide for the use of multitasking is to
reduce the charges for CPU time for multitasking programs. This can be accomplished
with weighting factors. The operating system kernel maintains counters of
the length of time spent by a user program with one processor connected, two
processors connected, and so on.</para>
<para>By default, the charges for a multitasking program would be calculated
as follows:</para>
<literallayout>sum = 0;
for (<replaceable>i</replaceable>=0; <replaceable>i</replaceable> &lt; ncpu; <replaceable>i</replaceable>++)
                sum += ac_mutime[<replaceable>i</replaceable>] * (<replaceable>i</replaceable>+1);</literallayout>
<para>This calculation assumes that all CPU time is charged equally. With
the weighting factors, the site can specify, for instance, that a second CPU
should be only 75% as expensive as the first CPU. Therefore, a program that
gets two CPUs as it executes would have its CPU time charges reduced. Note
that, because this charge depends on how much overlap a program gets, charges
may vary from execution to execution. However, charges are never more than
the full price for all CPUs.</para>
<para>The accounting software is released with all CPUs having a cost of 1.
The <literal>MUTIME_WEIGHT<replaceable>x</replaceable></literal> variables,
defined in <filename>/etc/config/csa_config</filename>, can be changed to
meet the site's needs.</para>
<para>Note that the user time reported by the <command>time</command> command
is adjusted so that there is no charge for wait-semaphore time. (This is to
provide consistent CPU time charges.) The multitasking overlap times do not
adjust for wait-semaphore times and, hence, may actually calculate to a greater
CPU time than the sum of the user times. In this case, the CPU charge is limited
to the sum of the user times.</para>
</section>
</section>
<section>
<title>Switching <literal>/</literal> and <filename>/var</filename> File Systems</title>
<para>Occasionally, sites run on numerous <literal>/</literal> and <filename>/var</filename> file systems and want to maintain the same accounting files
throughout. The easiest way to accomplish this is to put <filename>/var/adm</filename> or <filename>/var/adm/acct</filename> on a separate file system
and mount this file system along with each different system.</para>
<para><comment>(Delete paragraph?)</comment>In addition, two other files, <filename>/etc/csainfo</filename> and <filename>/etc/wtmp</filename>, must be copied
from the previously booted <literal>/</literal> directory. These files must
be copied to the new root file system before it is brought up. Failure to
correctly copy <filename>/etc/csainfo</filename> to the new <literal>/</literal>
directory can cause <command>csarun</command> to abort abnormally. Incorrect
connect-time data is reported when <filename>/etc/wtmp</filename> is not copied.</para>
</section>
<section id="Z233209030490howie">
<title>Logging Information</title>
<para><comment>(Need to verify this entire section)</comment></para>
<para>The following sections describe log files found in the IRIX operating
system. </para>
<section id="Z022813081189howie"><title>Boot Log</title>
<para>The boot log contains the date and time the system was booted. It is
located in <filename>/etc/boot.log</filename> and can be accessed through
normal file manipulations such as <command sectionref="1">tail</command>, <command sectionref="1">cat</command>, <command sectionref="1">pg</command>, and <command sectionref="1">more</command>. The <command>/etc/rc</command> (see <command sectionref="1m">brc</command>) script appends the record to the <literal>boot.log</literal> file. The format is as follows:</para>
<cmdsynopsis><command><replaceable>date</replaceable>, uname -a <replaceable>yy</replaceable>/<replaceable>mm</replaceable>/<replaceable>dd</replaceable> <replaceable>hh</replaceable>:<replaceable>mm</replaceable> <replaceable>system</replaceable> <replaceable>node</replaceable> <replaceable>release</replaceable> <replaceable>version</replaceable> <replaceable>hardware</replaceable></command></cmdsynopsis>
<?Pub _newpage>
<para>Example:</para>
<literallayout>97/02/10 08:07 sn6546 hubble 1.4.0tk dev.6 CRAY T3E</literallayout>
<para>See <command sectionref="1">date</command> and <command sectionref="1">uname</command> for further information. See also <command sectionref="1">who</command>, and the sample <command>wtmp</command> and <command>utmp</command>
files in this section.</para>
</section>
<section><title><command>cron</command> Log</title>
<para>The <command>cron</command> log contains the history of all actions
taken by the <command>cron</command> command. It is located in <filename>/var/lib/cron/log</filename> and can be accessed by using normal file manipulations
such as <command sectionref="1">tail</command>, <command sectionref="1">cat</command>, <command sectionref="1">pg</command>, and <command sectionref="1">more</command>. The format of this file is as follows:</para>
<cmdsynopsis><command>CMD: <replaceable>command_executed username  process_id  job_type
 start_time username  process_id</replaceable><?Pub _hardspace><?Pub _hardspace><?Pub _hardspace> <replaceable>job_type  end_time</replaceable>  rc=<replaceable>error return code</replaceable></command></cmdsynopsis>
<para>The <replaceable>job_type</replaceable> variable can have one of the
following values:</para>
<deflist termlength="narrow">
<deflistentry>
<term><literal>a</literal></term>
<listitem><para><command>at</command> job</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>b</literal></term>
<listitem><para>Batch job</para>
</listitem></deflistentry>
<deflistentry>
<term><command>c</command></term>
<listitem><para><command>cron</command> job</para>
</listitem></deflistentry>
</deflist>
<para>Example:</para>
<literallayout>>  CMD: 645827040.a
>  user1 7191 a Tue Jun 19 15:24:00 1990
>  CMD: /var/lib/sa/sa1 120 1
>  root 7192 c Tue Jun 19 15:24:00 1990
&lt;  root 7192 c Tue Jun 19 15:24:00 1990
&lt;  user1 7191 a Tue Jun 19 15:24:00 1990
>  CMD: 645827059.b
>  user1 7273 b Tue Jun 19 15:24:19 1990
&lt;  user1 7273 b Tue Jun 19 15:24:20 1990 rc=1</literallayout>
</section>
<section><title>Dump Log</title>
<para>The dump log contains the time and a reason for each dump. The system
supplies the time and the user supplies the reason. By default, the dump is
located in <filename>/etc/dump.log</filename> and can be accessed by using
the normal file manipulations such as <command>tail</command>, <command>cat</command>, <command>pg</command>, and <command>more</command>. When the system
is changing out of single-user mode, <command sectionref="1m">brc</command>
calls <command sectionref="1m">coredd</command> to copy a dump file to a file
system. The location of the dump can be reconfigured by using the install
tool. Note that the user may also change the location of the log file by using
the <literal>-l</literal> option with the <command>cpdmp</command> command.</para>
<para>Example of <filename>/etc/dump.log</filename>:</para>
<literallayout fontsize="8pt">cpdmp: 035120 blocks on dump device - waiting to be copied
04/26/93 07:27:09   coredd: Copying system dump into /core//04260727.
Unicos-E dump copied to=/core//04260727/dump
        dump taken: 04/26/93 at 07:18:51
        reason: PANIC: master.s: EEX interrupt in UNICOS kernel</literallayout>
</section>
<section><title>New User Log</title>
<para>The new user log contains information on new users given logins on the
system; this data includes who added the users, the times at which they were
added, and information about their environment defaults and IDs. This log
is located in <filename>/var/adm/nu.log</filename> and can be accessed by
using normal file manipulations such as <command>tail</command>, <command>cat</command>, <command>pg</command>, and <command>more</command>. It is created
by the <command sectionref="1m">nu</command> command. An example of the format
follows:</para>
<literallayout>user1:co:user login #1
user1:ui:10702:di:/j/user1:sh:/bin/csh:dr:/:pw:qQfHS6B8XYdzg
user1:gi:128,129,130,131,132
user1:ai:0
user1:dl:0:mx:0:mn:0:lk:0:tp:0
user1:dc:default:cm:default:pm:default
        added by adm1 on Wed Jul 20 08:43:20 1988</literallayout>
</section>
<section><title><command>su</command> Log</title>
<para>The <command>su</command> log records <command sectionref="1">su</command>
attempts for the current day. It is located in the <filename>/var/adm/sulog</filename> file and can be accessed by using normal file manipulations such
as <command>tail</command>, <command>cat</command>, <command>pg</command>,
and <command>more</command>. It is written by the <command>su</command> command.
The format of the log is as follows:</para>
<cmdsynopsis><command>SU <replaceable>MM/DD hh:mm flag tty olduser-newuser</replaceable></command></cmdsynopsis>
<para>The <replaceable>flag</replaceable> variable can have the following
values:<deflist termlength="narrow" id="Z850747213susanm">
<deflistentry>
<term><literal>+</literal></term>
<listitem><para><literal>su</literal> was successful.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>-</literal></term>
<listitem><para><literal>su</literal> was not successful.</para>
</listitem></deflistentry>
</deflist></para>
<para>The <replaceable>olduser</replaceable> variable specifies the login
name of the user executing <command>su</command>, and <replaceable>newuser</replaceable> specifies the name of the user that the executing user is becoming.
For example:</para>
<literallayout>SU 06/19 15:13 + console operator-root
SU 06/19 15:13 + ttyp025 user1-root
SU 06/19 15:14 + ttyp021 user2-adm
SU 06/19 15:19 - ttyp026 user3-root
SU 06/19 15:19 - ttyp022 user4-root</literallayout>
</section>
<section><title><literal>OLDsu</literal> Log</title>
<para>The <literal>OLDsu</literal> log is a directory containing all files
of daily <command>su</command> attempts. It is located in <filename>/var/adm/OLDsu/*</filename> and can be accessed using normal file manipulations such as <command>tail</command>, <command>cat</command>, <command>pg</command>, and <command>more</command>. The <filename>/etc/rc</filename> script moved the <filename>/var/adm/sulog</filename> file to the <filename>/var/adm/OLDsu</filename>
directory at system startup. An example of the format follows:</para>
<screen>$ <userinput>ls -al OLDsu</userinput>

-rw-rw-rw-  1 root    2864 Oct 31 19:02 Oct31
-rw-rw-rw-  1 root   20211 Sep 12 09:15 Sep01
-rw-rw-rw-  1 root     938 Sep 12 09:15 Sep02

$ <userinput>cat Sep01</userinput>

SU 09/01 16:29 + tty?? root-root
SU 09/01 16:30 + tty?? root-sys
SU 09/01 16:32 + tty?? root-sys
SU 09/01 16:32 + tty?? root-root
SU 09/01 16:34 + tty?? root-sys
SU 09/01 16:35 + tty?? root-root
SU 09/01 16:36 + tty?? root-sys</screen>
</section>
<section id="Z850775161janelle"><title>System Logs</title>
<para>The system logs are files into which the <command sectionref="1m">syslogd</command> command has logged messages. They are located in the <filename>/var/adm/syslog/*</filename> directory. Note that these files are described
by the configuration file <filename>/etc/syslog.conf</filename>. They can
be accessed using normal file manipulations such as <command>tail</command>, <command>cat</command>, <command>page</command>, and <command>more</command>. They
are written by the <filename>/etc/syslogd</filename> command; the <command sectionref="1">logger</command> command also makes entries in the system logs.</para>
<para>These logs consist of ASCII messages, which may include debug messages,
kernel messages, and so on.</para>
<para>The following example is the configuration file for <filename>/etc/syslogd</filename> (these fields are described on the <command sectionref="1m">syslogd</command> and <command sectionref="3">syslog</command> man pages):</para>
<screen fontsize="8pt">$ <userinput>cat /etc/syslog.conf</userinput>

# USMID @(#)man/2302/02.accounting      92.1    12/11/95 16:48:26
#
#       This is a configuration file for /etc/syslogd
#
#*.debug                                /var/adm/syslog/debug
#
mail.debug                              /var/spool/mqueue/syslog
#
kern.debug                              /var/adm/syslog/kern
#
daemon,auth.debug                       /var/adm/syslog/auth
#
#*.err;kern.debug;auth.notice           /dev/console
#
*.err;kern.debug;daemon,auth.notice;    /var/adm/syslog/daylog
#
#*.alert;kern.err;daemon.err            operator
*.alert                                 root</screen>
<note><para>The <filename>/etc/syslogd.conf</filename> file does not work
if spaces are in it; only tabs can be used to separate items in this file.</para>
</note>
<para>The following example shows a listing of the files in the <filename>/var/adm/syslog</filename> directory:</para>
<screen>$ <userinput>ls -l /var/adm/syslog</userinput>
total 10
-rw-r--r--   1 root     root         168 Jun 19 15:35 auth
-rw-r--r--   1 root     root        5164 Jun 19 15:45 daylog
-rw-r--r--   1 root     root        4107 Jun 19 15:45 kern
drwxr-xr-x   2 root     root       16864 Jun 19 15:09 oldlogs</screen>
</section>
<section><title>Error Log</title>
<para>The error log is a file containing error records from the operating
system. The default error file is <filename>/var/adm/errfile</filename>. To
generate reports from the data collected by the error-logging mechanism, use <command sectionref="1m">errpt</command>, which processes error reports from the data.</para>
<para>The <filename>/etc/errdemon</filename> command (see <command sectionref="1m">errdemon</command>) reads <filename>/dev/error</filename> and places the error
records from the operating system into either the specified file, or <command>errfile</command>, by default. The <filename>/etc/rc</filename> (see <command>brc</command>) script starts <filename>/etc/errdemon</filename>, and <filename>/etc/mverr</filename> is used to start a new <command>errfile</command>.</para>
<para>The following example shows sample <command>errpt</command> output:</para>
<literallayout fontsize="8pt">Tue Jun 7 12:01:49 1988
       Error reported from IOS 0 for device S49-0-21
       Major:0  Minor:6         Block:140868   status: Recovered
       Iop:0  Channel:21        Unit:0
       Cylinder:1156  Head:5    Sector:0
       Function:Read  Requested:344064 bytes   Received:344064 bytes

       IOS 0 ERROR LOGGING ENABLED</literallayout>
<para>See <command>errpt</command> for further information.</para>
</section>
<section><title>Security Log</title>
<para>The security log is a file containing security-relevant event loggings.
The security log, <filename>/var/adm/sl/slogfile</filename>, can be analyzed
by using the <command sectionref="1m">reduce</command> command. <command>reduce</command> extracts, formats, and outputs entries from IRIX security
event files. For more information regarding the format of the security log
and on the IRIX security enhancement feature, see the <command>reduce</command>
man page and IRIX Admin: Backup, Security, ??????.</para>
</section>
<section><title>System Activity Log</title>
<para>The system activity report facility provides commands for generating
various system activity reports. Two reporting capabilities exist (one automatic
and one user-driven); however, the actual reports are created by the <command sectionref="1m">sar</command> program in either case. The system activity
log is located in <filename>/var/adm/sa/sa<replaceable>DD</replaceable></filename>
and can be accessed with <command>sar</command>.</para>
<warning><title>Warning</title><para> The log files located in <filename>/var/adm/sa/sa<replaceable>DD</replaceable></filename> on a IRIX security-enhanced
system are considered to be covert channels. You may want to consider restricting
access to these files to the <literal>adm</literal> group. </para>
</warning>
<para>With this command, you can generate system activity reports in real
time and save system activities in a file for later use. The <command>sa1</command>, <command>sa2</command>, and <command>sadc</command> commands (see <command>sar</command>) generate system activity data on a routine basis, with <command>sa2</command> calling <command>sar</command> to generate the report.</para>
<para>IRIX counters are incremented as various system actions occur. These
counters provide system-wide measurements. <command>sadc</command> accesses <filename>/dev/kmem</filename> to read these system activity counters.</para>
<para>Refer to the <command sectionref="1m">sar</command> man page for more
information on the format of the system activity log.</para>
</section>
<section><title>Message Log</title>
<para>The message log contains messages and replies to the operator. It is
located in <filename>/var/spool/msg/msglog.log</filename> and can be accessed
using normal file manipulations, such as <command sectionref="blank">tail</command>, <command>cat</command>, <command>pg</command>, and <command>more</command>. All messages and replies to and from the operator console are
put into this file by the console. An example of the file format follows:</para>
<literallayout fontsize="8pt">Apr  1 07:11:06  Message daemon stopped
Apr  1 09:36:54  Message daemon started
Apr  1 08:09:49  Message   1: TM122 - mount tape WK1102(sl) on a CART
 device for user1 50,  () or reply cancel / device name</literallayout>
<warning><title>Warning</title><para> The <literal>msglog.log</literal> file
is considered a covert channel on a IRIX security-enhanced system. You may
want to consider restricting access to this file to the <literal>adm</literal>
group. </para>
</warning>
</section>
<section><title>Accounting Logs</title>
<para>The accounting logs are files containing various accounting information,
as follows:</para>
<deflist>
<colheads>
<head1>Log</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>csainfo</literal></term>
<listitem><para>A file containing boot times. It can be accessed by using
the <command sectionref="1">od</command> command (the <literal>-d</literal>
option will give the seconds). Each time the system is booted, the boot time
is written to <filename>/etc/csainfo</filename> by the <filename>/etc/csaboots</filename> (see <command>csaboots</command>) command. <command>csaboots</command>
is invoked by <filename>/etc/rc</filename> (see <command>brc</command>). See
also the description of the boot login <xref role="section" linkend="Z022813081189howie">.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>utmp</command></term>
<listitem><para><comment>(Used only in basic acct?)</comment>A file containing
active system and terminal connection information. This log is used by <command sectionref="1">write</command>, <command sectionref="1">who</command>, <command sectionref="1m">wall</command>, and <command sectionref="1">mail</command>
in getting user information. It is located in <filename>/etc/utmp</filename>
and can be accessed by using the <command>who</command> and <command sectionref="1">last</command> commands. It is written to by <command sectionref="1m">init</command>, <command sectionref="1">date</command>, <command sectionref="1">login</command>, and <command sectionref="1m">getty</command>. For information
on the format of <command>utmp</command>, see <command sectionref="4">utmp</command>.</para>
<warning><title>Warning</title><para> On IRIX security-enhanced systems, <command>utmp</command> and <command>wtmp</command> are considered to be covert channels.
You may want to consider restricting access to these files to the <literal>adm</literal> group. </para>
</warning>
</listitem></deflistentry>
<deflistentry>
<term><command>wtmp</command></term>
<listitem><para><comment>(Used only in basic acct?)</comment>A file containing
a system and terminal connection history record. This log includes usage statistics
for each terminal, date change, time stamp, boot records, reboots, shutdowns,
and state changes. <command>wtmp</command> must exist; programs that access
it do not create it (the <filename>/etc/rc</filename> script creates <filename>/etc/wtmp</filename> by default).</para>
<para>Records are in the form of <command>utmp</command>; <command>acctcon</command> and <command>csaline</command>convert <filename>/etc/wtmp</filename>
into session and charging records. This data is merged into the system accounting
reports. <command>wtmp</command> can also be accessed by using the <command>who</command> and <command>last</command> commands.</para>
<para><command>wtmp</command> is written by <command>init</command>, <command>date</command>, <command>login</command>, and <command>getty</command>. For
information on the format of <command>wtmp</command>, see <command sectionref="4">utmp</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>pacct</literal></term>
<listitem><para>Files containing process and daemon accounting data; these
are located in <filename>/var/adm/acct/day/pacct*</filename> and can be accessed
by using the <command>acctcom</command> command. Note that these files are
read by system accounting programs, and the information appears in the accounting
reports. <literal>pacct</literal> is written by the kernel, and its format
is described in <filename>/var/include/sys/acct.h</filename>.</para>
<warning><title>Warning</title><para> On systems running IRIX security enhancements,
access to <literal>pacct*</literal> files should be restricted to the <literal>adm</literal> group. </para>
</warning>
</listitem></deflistentry>
</deflist>
<para>The following data files are accessed by system accounting programs,
and their information appears in the accounting reports:</para>
<deflist>
<colheads>
<head1>Log</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>disktacct</literal></term>
<listitem><para>A file containing disk accounting data, located in <filename>/var/adm/acct/nite/disktacct</filename>. The <filename>/var/lib/acct/dodisk</filename> (see the <command>dodisk</command> man page) command writes this
file.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>fee</literal></term>
<listitem><para>A file containing user fees for accounting data, located in <filename>/var/adm/acct/day/fee</filename>. This file is written by <filename>/var/lib/acct/chargefee</filename> (see the <command>chargefee</command> man page).</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>NQS Log</title>
<para>The NQS log contains NQS information. Its default location is the ASCII
file <filename>/var/spool/nqs/log</filename> (you can change the location
of the log file by using the <literal>qmgr set log_file</literal> command;
to see where the current log file resides, use the <literal>qmgr show parameters</literal> command). Access to <filename>/var/spool/nqs</filename> is restricted;
however, if you have the correct permissions, you can access the NQS log file
using normal file manipulations, such as <command>tail</command>, <command>cat</command>, <command>pg</command>, and <command>more</command>. This log
is created by the NQS log daemon.</para>
<warning><title>Warning</title><para> On systems running IRIX security enhancements,
access to the NQS log should be restricted to the <literal>adm</literal> group. </para>
</warning>
<para>An example of the log file's format is as follows: </para>
<literallayout width="standard" fontsize="8pt">05/13 08:00:00 I getpkt(): Received packet from local process: &lt;89775>.
05/13 08:00:00 I getpkt(): Client process real UID=&lt;900>.
05/13 08:00:00 I getpkt(): Packet type=&lt;PKT_QUEREQVLPQ(30)>.
05/13 08:00:00 I getpkt(): Packet contents are as follows:
05/13 08:00:00 I getpkt(): Pkt_str[1] = &lt;batnam1>.
05/13 08:00:00 I getpkt(): Pkt_int[1] = &lt;40>.
05/13 08:00:00 I getpkt(): Pkt_int[2] = &lt;119>.
05/13 08:00:00 T nqs_quereq(): Request &lt;40.cool>: Attempting to read request.
05/13 08:00:00 T nqs_quereq(): Request &lt;40.cool>: Request was read.</literallayout>
</section>
</section>
</section>
<section>
<title>Reports</title>
<para>With basic process accounting and IRIX CSA, you can create accounting
reports. The reports can be used to help track system usage, monitor performance,
and charge users for their time on the system.<note><para>Extended accounting
does not have any intrinsic reporting capability. To produce reports for extended
accounting data, you need to use software from an independent service provider. </para>
</note></para>
<para>The basic accounting and IRIX CSA daily reports are located in the <filename>/var/adm/acct/sum</filename> directory; their monthly and periodic reports
are located in the <filename>/var/adm/acct/fiscal</filename> directory. To
view the reports,  use the <command>prdaily</command> command, or go to the
ASCII file <literal>rprt<replaceable>MMDD</replaceable></literal> in the report
directories.</para>
<para>For examples of the accounting reports, see Appendix A.</para>
<section>
<title>Basic Accounting Reports</title>
<para>The <command>runacct</command> command generates five basic reports
into a report file upon each invocation. These reports cover the areas of
connect time, usage by person on a daily basis, command usage reported by
daily and monthly totals, and a report of the last time users were logged
in. The <command>monacct</command> command generates the periodic reports. </para>
<para>You must format these reports using software from an independent software
vendor. </para>
<section><title>Daily Connect Time Report</title>
<para>In the first part of the connect time report, the from/to banner alerts
you to the period reported on. This period runs from the time the last accounting
report was generated until the time the current accounting report was generated.
It is followed by a log of system reboots, shutdowns, power fail recoveries,
and any other record dumped into <filename>/etc/wtmp</filename> by the <command>acctwtmp</command> program. See the   <command sectionref="1m">acct</command>
man page for more information on <command>acctwtmp</command>.</para>
<para>The second part of the report is a breakdown of line utilization. The <literal>TOTAL DURATION</literal> field tells how long the system was in multiuser
state (able to be accessed through the terminal lines). The columns are as
follows: </para>
<deflist>
<deflistentry>
<term><literal>LINE</literal></term>
<listitem><para>The terminal line or access port. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MINUTES</literal></term>
<listitem><para>The total number of minutes the line was in use during the
accounting period.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>PERCENT</literal></term>
<listitem><para>The total number of minutes the line was in use divided into
the total duration of the accounting period. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal># SESS</literal></term>
<listitem><para>The number of times this port was accessed for a <command>login</command> session. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal># ON</literal></term>
<listitem><para>This column has little significance. It previously gave the
number of times that the port was used to log a user on; but since <command>login</command> can no longer be executed explicitly to log in a new user,
this column should be identical with <literal>SESS</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal># OFF</literal></term>
<listitem><para>The number of times a user logged off and also any interrupts
that occur on that line. Generally, interrupts occur on a port when the <command>getty</command> is first invoked after the system is brought to multiuser
state. This column comes into play when the <literal># OFF</literal> exceeds
the <literal># ON</literal> by a large factor. This usually indicates that
the multiplexer, modem, or cable is going bad, or that there is a bad connection
somewhere. The most common cause of this is an unconnected cable dangling
from the multiplexer. </para>
</listitem></deflistentry>
</deflist>
<para>During real time, <filename>/etc/wtmp</filename> should be monitored,
since this is the file from which connect accounting is geared. If it grows
rapidly, execute <command>acctcon1</command> to see which line is the noisiest.
If the interrupting is occurring at a furious rate, general system performance
will be affected.</para>
</section>
<section><title>Daily Usage Report</title>
<para>The daily usage report gives a by-user breakdown of system resource
utilization. Its data consists of the following: </para>
<deflist>
<deflistentry>
<term><literal>UID</literal></term>
<listitem><para>The user ID. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>LOGIN NAME</literal></term>
<listitem><para>The login name of the user; more than one login name can exist
for a single user ID, and this entry identifies which login name used the
resource. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CPU (MINS)</literal></term>
<listitem><para>The amount of time the user's process used the central processing
unit. This category is broken down into <literal>PRIME</literal> and <literal>NPRIME</literal> (nonprime) utilization. The accounting system's idea of this
breakdown is located in the <filename>/var/lib/acct/holidays</filename> file.
As delivered, prime time is defined to be 0900 through 1700 hours. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>KCORE-MINS</literal></term>
<listitem><para>A cumulative measure of the amount of memory a process uses
while running. The amount shown reflects kilobyte segments of memory used
per minute. This measurement is also broken down into <literal>PRIME</literal>
and <literal>NPRIME</literal> amounts. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CONNECT (MINS)</literal></term>
<listitem><para>The amount of time that a user was logged into the system.
If this time is high and <literal># OF PROCS</literal> is low, this indicates
that the user was logged in for a long period of time without actually using
the system. This column is also subdivided into <literal>PRIME</literal> and <literal>NPRIME</literal> utilization. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>DISK BLOCKS</literal></term>
<listitem><para>When the disk accounting programs have been run, the output
is merged into the total accounting record (<filename>tacct.h</filename>)
and shows up in this column. This disk accounting is accomplished by the program <command>acctdusg</command>. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal># OF PROCS</literal></term>
<listitem><para>The number of processes invoked by the user. Large numbers
in this column indicate that a user may have had a shell running out of control. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal># O SESS</literal></term>
<listitem><para>Number of times the user logged onto the system. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal># DISK SAMPLES</literal></term>
<listitem><para>Number of times disk accounting was run to obtain the average
number of <literal>DISK BLOCKS</literal> listed earlier. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>FEE</literal></term>
<listitem><para>The <literal>FEE</literal> field represents the total accumulation
of a system resource charged against the user by the <command>chargefee</command>
shell procedure. See <command sectionref="1m">acctsh</command>. The   <command>chargefee</command> procedure is used to levy charges against a user for special
services performed such as file restores, and so on.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Daily Command and Monthly Command Summary Report</title>
<para>The daily command and monthly command summaries reports are virtually
the same except that daily command summary reports only on the current accounting
period, while the monthly total command summary tells the story for the start
of the fiscal period to the current date. In other words, the monthly report
reflects the data accumulated since the last invocation of <command>monacct</command>. </para>
<para>The data included in these reports tell you which commands are used
most heavily. Based on those commands' characteristics of system resource
utilization, you can decide what to weigh more heavily when system tuning.
These reports are sorted by <literal>TOTAL KCOREMIN</literal>, which is an
arbitrary yardstick but often a good one for calculating &ldquo;drain&rdquo;
on a system. <comment>Is this true for larger systems?</comment></para>
<deflist>
<deflistentry>
<term><literal>COMMAND NAME</literal></term>
<listitem><para>The name of the command. Unfortunately, all shell procedures
are lumped together under the name <command>sh</command>, since only object
modules are reported by the basic process accounting system. You should monitor
the frequency of programs called <filename>a.out</filename> or <filename>core</filename> or any other name that does not seem quite right. <command>acctcom</command> is also a good tool for determining who executed a suspiciously
named command and also to see whether superuser privileges were abused. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>NUMBER CMDS</literal></term>
<listitem><para>The total number of invocations of this particular command. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>TOTAL KCOREMIN</literal></term>
<listitem><para>The total cumulative measurement of the amount of kilobyte
segments of memory used by a process per minute of run time. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>TOTAL CPU-MIN</literal></term>
<listitem><para>The total processing time this program has accumulated. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>TOTAL REAL-MIN</literal></term>
<listitem><para>The total real-time (wall-clock) minutes this program has
accumulated. This total is the actual &ldquo;waited for&rdquo; time as opposed
to kicking off a process in the background. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MEAN SIZE-K</literal></term>
<listitem><para>The mean of the <literal>TOTAL KCOREMIN</literal> over the
number of invocations reflected by NUMBER CMDS. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MEAN CPU-MIN</literal></term>
<listitem><para>The mean derived between <literal>NUMBER CMDS</literal> and <literal>TOTAL CPU-MIN</literal>. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>HOG FACTOR</literal></term>
<listitem><para>This gives a relative measure of the total available CPU time
consumed by the process during its execution. It is a measurement of the ratio
of system availability to system utilization. It is computed by the formula:<literallayout>total CPU time / elapsed time   </literallayout></para>
</listitem></deflistentry>
<deflistentry>
<term><literal>CHARS TRNSFD</literal></term>
<listitem><para>This column, which may contain a negative value, is a total
count of the number of characters pushed around by the <command>read</command>
and <command>write</command> system calls.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>BLOCKS READ</literal></term>
<listitem><para>A total count of the physical block reads and writes that
a process performed.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Last Login Report</title>
<para>The last login report lists the last login time for each user on the
system. The login is written in <replaceable>YY-MM-DD</replaceable> format.</para>
</section>
</section>
<section>
<title>IRIX CSA Reports</title>
<para>The IRIX CSA reports contain more detailed data than the other accounting
reports. For IRIX CSA accounting, daily reports are generated by the <command>csarun</command> command. The daily report includes the following:<itemizedlist>
<listitem><para>connect-time statisitcs</para>
</listitem>
<listitem><para>disk usage statistics</para>
</listitem>
<listitem><para>unfinished job information</para>
</listitem>
<listitem><para>command summary data</para>
</listitem>
<listitem><para>consolidated accounting report</para>
</listitem>
<listitem><para>last login information</para>
</listitem>
<listitem><para>daemon usage report</para>
</listitem></itemizedlist></para>
<para>Monthly and periodic reports are generated by the <command>csaperiod</command> command. You can also create a disk usage report using the <command>diskusg</command> command. </para>
<para>IRIX CSA has a front-end formatter that enables you to format your IRIX
CSA reports; no independent software vendor program is needed. See <xref linkend="Z890941535janelle">,
for more information.</para>
</section>
<section id="Z890941535janelle">
<title>IRIX CSA Front-end Formatter</title>
<para>IRIX CSA front-end formatting facilities let you customize accounting
reports and generate output files that can be processed on a front-end computer
system. The front-end formatting process consists of two main parts:</para>
<itemizedlist>
<listitem><para>Consolidating the accounting data you have collected to select
useful information and to reduce it to a manageable amount of data for the
front-end system.</para>
</listitem>
<listitem><para>Formatting the consolidated data into meaningful reports and
files for further processing on the front-end system.</para>
</listitem></itemizedlist>
<para>Accounting data is consolidated using identifier keys. These keys may
include user ID (<literal>uid</literal>), project ID (<command>prid</command>),
job ID (<literal>jid</literal>), group ID (<literal>gid</literal>), and job
class (<literal>jclass</literal>). The front-end formatters then can send
the consolidated data output to either an ASCII report or to a binary file.</para>
<note><title>Note</title><para> Disk usage information is not available on
a job basis in the IRIX operating system; thus, it cannot be consolidated
by job ID or job class. However, output from the <command>dodisk</command>
utility can be used for billing disk usage on a user ID or project ID basis. </para>
</note>
<section><title>Why Use Front-end Formatting</title>
<para>Sites may want to use a front-end formatter to customize IRIX CSA accounting
data in the following situations:</para>
<itemizedlist>
<listitem><para>All billing is done on a single system. When accounting data
from several systems are processed on a single system, the units of measure
may need to be standardized. For example, all CPU time should be expressed
in milliseconds.</para>
</listitem>
<listitem><para>Only a few fields are important to the billing system; these
usually include CPU time, memory use, disk use, and swap use.</para>
</listitem>
<listitem><para>The generic front-end formatter, <command>csagfef</command>,
accepts as input a generic consolidated data file or multiple <literal>pacct</literal> (process accounting data) files. It delivers output as either an
ASCII report or a binary file. <command>csagfef</command> cannot convert output
to VM or MVS format.</para>
</listitem></itemizedlist>
</section>
<section><title>Preparing to Use the Formatter</title>
<para>Before you attempt to execute the IRIX CSA formatter, you must make
several decisions based on what you want the final report or data file to
contain. The issues you must decide upon include the following:</para>
<itemizedlist>
<listitem><para>Identifying the data that needs to be reported.</para>
<para>A multitude of data can be extracted from a session or a <literal>pacct</literal> file. For efficiency and the conservation of disk space, only the
necessary data should be consolidated by <command>csagcon</command>.</para>
</listitem>
<listitem><para>Selecting the consolidation keys.</para>
<para>You can use various keys to consolidate the data. The formatter supports
data consolidation by project ID, group ID, job ID, and user ID or some combination
thereof. <command>csagcon</command> also supports data consolidation by job
class, which is either interactive or batch through the Network Queuing System
(NQS).</para>
</listitem>
<listitem><para>Determining which sessions should be consolidated when the
input is a session file.</para>
<para>You can consolidate data for only terminated jobs, only active jobs,
or both terminated and active jobs.</para>
</listitem>
<listitem><para>Selecting the format of the ASCII report or binary data file.</para>
<para>Among the things to be decided are the units of the various fields,
the precision, the order of the data, the character set, the length of character
strings, and the size and format of binary integer and floating point numbers.</para>
</listitem></itemizedlist>
<para>After making these decisions, you should modify or set up the front-end
formatter to generate reports or data files based on these specifications.
Normally, front-end formatters are executed by <command>csarun</command> in
either the <literal>FEF</literal> or the <literal>USEREXIT</literal> state.
See <xref role="section" linkend="Z352508080895glen">, for more information
on these user exits.</para>
</section>
<section id="Z868637467janelle"><title><command>csagcon</command> and <command>csagfef</command></title>
<para>The generic accounting data consolidator <command>csagcon</command>
and the generic front-end formatter <command>csagfef</command> are more flexible
versions of the <command>csacon</command> and <command>csacrep</command> utilities.
They let you do the following tasks:</para>
<itemizedlist>
<listitem><para>Consolidate a session file</para>
</listitem>
<listitem><para>Consolidate one or more <literal>pacct</literal> accounting
files</para>
</listitem>
<listitem><para>Generate an ASCII report or a binary file based on a file
created by <command>csagcon</command></para>
</listitem></itemizedlist>
<para>The <command>csagcon</command> and <command>csagfef</command> utilities
let you specify the fields to be consolidated and the format of the report.
In contrast, <command>csacon</command> and <command>csacrep</command> have
hardcoded data specifications and formats that cannot be changed without source
code and local modifications.</para>
<para>The <command>csagcon</command> and <command>csagfef</command> utilities
can be executed from the <command>csarun</command> user exit scripts. Both
commands can be invoked from either the <literal>FEF</literal> or <literal>USEREXIT</literal> state of <command>csarun</command>. See <xref role="section" linkend="Z352508080895glen">, for more information on user exits.</para>
<para>To invoke <command>csagcon</command> and <command>csagfef</command>
from the <literal>FEF</literal> state, put these or similar commands in the
file <filename>/var/lib/acct/csa.fef</filename>:</para>
<literallayout>csagcon -S ${SESSION_FILE} -s <replaceable>username</replaceable> -o ${SESSION_DIR}/gacct

csagfef -f ${SESSION_DIR}/gacct <replaceable>source_file</replaceable> > ${CRPT_DIR}/site.rpt</literallayout>
<para>Alternately, the same two commands can be placed into the <filename>/var/lib/acct/csa.user</filename> file. Then <command>csagcon</command> and <command>csagfef</command> execute from the <command>csarun</command> <literal>USEREXIT</literal> state.</para>
</section>
<section><title>Data Consolidation</title>
<para>The <command>csagcon</command> command consolidates data either from
a session file, which is created by <command>csabuild</command> or from <literal>pacct</literal> files. You can choose the data that is to be consolidated
by using the <command>csagcon<?Pub _hardspace><literal>-R</literal></command>
option. If a data list is not specified, a set of default variables is selected.
In addition, some variables are always selected.</para>
<para>The variable names listed throughout this section are used by both <command>csagcon</command> and <command>csagfef</command>.</para>
</section>
<section id="Z580017110895glen"><title>Required Data Variables</title>
<para>The following table lists the required variables that are always included
in the consolidated data file. <caution><para>You must not include any of
these variables in a <command>csagcon</command> request file (<literal>-R</literal> option). If you do, <command>csagcon</command> will terminate with
an error.</para>
</caution></para>
<table frame="topbot" tocentry="1" pgwide="wide" id="Z443117110895glen">
<tbltitle>Required data variables </tbltitle>
<tgroup align="left" charoff="50" cols="4" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.86in">
<colspec charoff="50" colname="c1" colwidth="92*">
<colspec charoff="50" colname="c2" colwidth="121*">
<colspec charoff="50" colname="c3" colwidth="53*">
<colspec charoff="50" colname="col4" colwidth="228*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="bottom"><para>Variable</para></entry><entry align="left" rotate="0" valign="bottom"><para>Type or
Value</para></entry><entry align="left" nameend="col4" namest="c3" rotate="0" valign="bottom"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="bottom"><para><command>prid</command>
*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Project ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>con_key</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para><command>csagcon</command> consolidation option(s) you specify. If you specify multiple
options, the values are added together.</para></entry></row>
<row rowsep="1">
<entry align="left" rowsep="0" valign="bottom"><literal></literal></entry>
<entry align="left" rowsep="0" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>Value</para></entry>
<entry align="left" valign="top"><para><command>csagcon</command> consolidation
option</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0001</para></entry>
<entry align="left" valign="top"><para><literal>-a</literal> (consolidate
by the account ID (<command>acid</command>) variable)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0002</para></entry>
<entry align="left" valign="top"><para><literal>-c</literal> (consolidate
by the job class (<literal>jclass</literal>) variable; job class is either
interactive or NQS)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0004</para></entry>
<entry align="left" valign="top"><para><literal>-g</literal> (consolidate
by the group ID (<literal>gid</literal>) variable)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0010</para></entry>
<entry align="left" valign="top"><para><literal>-j</literal> (consolidate
by the job ID (<literal>jid</literal>) variable)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0020</para></entry>
<entry align="left" valign="top"><para><literal>-u</literal> (consolidate
by the user ID (<literal>uid</literal>) variable)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0040</para></entry>
<entry align="left" valign="top"><para><literal>-N</literal> (consolidate
NQS requests strictly by job ID)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0100</para></entry>
<entry align="left" valign="top"><para><literal>-A</literal> (consolidate
active and terminated sessions)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0200</para></entry>
<entry align="left" valign="top"><para><literal>-C</literal> (consolidate
only active sessions)</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>creatime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Creation time of the file in seconds since 00:00:00 GMT, 1<?Pub _hardspace>January<?Pub _hardspace>1970.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>file_end</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>If the input was a <literal>pacct</literal> file, this is the latest process
end time found in the file. If the input was a session file, this is the end
time of the last uptime period. Measured in seconds.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>file_start</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>If the input was a <literal>pacct</literal> file, this is the earliest process
end time found in the file. If the input was a session file, this is the start
time of the first uptime period. Measured in seconds.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>gid</literal>
*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Group ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>jclass</literal>
*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Job class. A value of 1 specifies an interactive job; a value of 2 specifies
an NQS job.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>jid</literal>
*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Job ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>njobs</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of jobs. Calculated as the number of <literal>pacct</literal> end-of-job
records found. This is meaningful only when the input was a sorted <literal>pacct</literal> file.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>nproc</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of processes.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>num_datarec</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of data records in the file.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>sort_opt</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para><command>csagcon</command> sort option used.</para></entry></row>
<row rowsep="1">
<entry align="left" rowsep="0" valign="bottom"><literal></literal></entry>
<entry align="left" rowsep="0" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>Value</para></entry>
<entry align="left" valign="top"><para><command>csagcon</command> sort option</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>0</para></entry>
<entry align="left" valign="top"><para>None (unsorted)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>1</para></entry>
<entry align="left" valign="top"><para><literal>-s acid</literal> (sorted
by account ID then user ID)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>2</para></entry>
<entry align="left" valign="top"><para><literal>-s acname</literal> (sorted
by account name then user name)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>3</para></entry>
<entry align="left" valign="top"><para><literal>-s jclass</literal> (sorted
by job class then job ID)</para></entry></row>
<row>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>4</para></entry>
<entry align="left" valign="top"><para><literal>-s uid</literal> (sorted by
user ID then account ID)</para></entry></row>
<row>
<entry align="left" valign="bottom"><para></para></entry>
<entry align="left" valign="top"><literal></literal></entry>
<entry align="left" valign="top"><para>5</para></entry>
<entry align="left" valign="top"><para><literal>-s uname</literal> (sorted
by user name then account name)</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_devgrp</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>An array that is indexed by 0 through [<literal>tp_ndevgrp</literal><?Pub _hardspace>&ndash;1]
and contains the names of the tape device groups. The names are prefixed with <literal>tp_</literal>. If there are fewer than <literal>tp_ndevgrp</literal> tape
device groups, the unused entries have values of <literal>tp_null0</literal>, <literal>tp_null1</literal>, and so on. This field is reported when the input was a
session file and tape information was requested.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_ndevgrp</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of tape device groups. This field is reported when the input was a
sorted <literal>pacct</literal> file and tape information was requested.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>uid</literal>
*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>User ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>BYTE_CLICK</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of bytes per click.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>BYTE_WORD</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of bytes per word.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>MACHINE</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Machine name.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>NODENAME</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Network node name.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>RELEASE</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Release of the operating system.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>SITES</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of active sites.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>SYSNAME</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Operating system name.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>VERSION</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Release version of the operating system.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="bottom"><para><literal>WORD_CLICK</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" nameend="col4" namest="c3" rotate="0" valign="top"><para>Number of words per click.</para></entry></row></tbody></tgroup></table>
<para>* If this variable is not selected as a consolidation key, its value
is &ndash;9. For example, the following command consolidates session record
file by job ID:</para>
<literallayout>  csagcon -jN -S Session-Record.0928 -o gacct.0928</literallayout>
<para>In the file <filename>gacct.0928</filename>, the values for the <command>prid</command>, <literal>gid</literal>, <literal>jclass</literal>, and <literal>uid</literal> variables will be &ndash;9 for records. This is because these
variables were not selected as consolidation keys on the command line.</para>
</section>
<section><title>Default and Optional Data Variables</title>
<para>The following sections describe the data that you can specify in a <command>csagcon</command> request file (when using the <literal>-R</literal> option).
The request file contains a list of variables that will be consolidated by <command>csagcon</command>. By default, <command>csagcon</command> consolidates the
same data as <command>csacon</command>.</para>
<para>The <command>csagcon</command> utility gets the default and optional
data variables from the file <filename>/var/lib/acct/table_init</filename>.
Specifying a different file by using the <literal>-T</literal> option is not
recommended because <command>csagcon</command> expects the data variable names
given in this file. Use caution in specifying the <literal>-T</literal> option;
normally it is used only for debugging source code.</para>
<para>The column headings used throughout the following sections are defined
as follows:</para>
<deflist termlength="narrow">
<colheads>
<head1>Heading</head1><head2>Meaning</head2></colheads>
<deflistentry>
<term>Variable</term>
<listitem><para>The name that <command>csagcon</command> and <command>csagfef</command> use for the data item. This name, except where noted, should appear
in the request file when you use the <command>csagcon -R</command> option.</para>
</listitem></deflistentry>
<deflistentry>
<term>Type</term>
<listitem><para>The data type of the variable. Valid types are <literal>integer</literal>, <literal>float</literal>, and <command>string</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term>Unit</term>
<listitem><para>The unit, if any, of the data item. The item can be converted
to another unit by <command>csagfef</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term>Default</term>
<listitem><para>Specifies whether a data item is consolidated when the <command>csagcon -R</command> option is omitted.</para>
<deflist termlength="narrow">
<deflistentry>
<term>Yes</term>
<listitem><para>The data item is consolidated by default.</para>
</listitem></deflistentry>
<deflistentry>
<term>No</term>
<listitem><para>The data item is not consolidated by default.</para>
</listitem></deflistentry>
</deflist>
</listitem></deflistentry>
<deflistentry>
<term>Job</term>
<listitem><para>Specifies whether the <command>csagcon -j</command> option
must be used when the data item is consolidated.</para>
<deflist termlength="narrow">
<deflistentry>
<term>Yes</term>
<listitem><para>The <command>csagcon -j</command> option must be used. For
this data item to be consolidated when <literal>-j</literal> is specified,
either the <literal>-R</literal> option is not used and this is a default
item, or the <literal>-R</literal> option is used and this item is listed
in the request file.</para>
</listitem></deflistentry>
<deflistentry>
<term>No</term>
<listitem><para>The <command>csagcon -j</command> option does not have to
be used.</para>
</listitem></deflistentry>
</deflist>
</listitem></deflistentry>
</deflist>
<?Pub _newpage>
<section><title>IRIX CSA Process Record Variables</title>
<para>This section describes the variables that contain <literal>pacct</literal>
process information. These variables are available when the <command>csagcon</command> input is either a session file or one or more <literal>pacct</literal>
files.</para>
<note><para>The values in <xref linkend="Z869080918janelle"> are only available when using the <literal>csagcon -I</literal> option.</para>
</note>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle id="Z869080918janelle"> IRIX CSA process base record variables &mdash; process values</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.87in">
<colspec charoff="50" colname="c1" colwidth="92*">
<colspec charoff="50" colname="c2" colwidth="66*">
<colspec charoff="50" colname="c3" colwidth="71*">
<colspec charoff="50" colname="c4" colwidth="71*">
<colspec charoff="50" colname="c5" colwidth="58*">
<colspec charoff="50" colname="c6" colwidth="137*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_cmd</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Command name (first 16 characters).</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_code</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>High-order 8 bits of exit status. (See the <command>wait</command>(2) man page.)</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_data</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Low-order 8 bits of exit status. (See the <command>wait</command>(2) man page.)</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_flag</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Record flags. (See <literal>ah_flag</literal> in <filename>/usr/include/</filename></para><para><filename>sys/acct.h</filename>)</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_nice</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Nice value.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_pid</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Process ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_ppid</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Parent process ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal></literal><literal>pp_p_stat</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Exit status.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pp_p_tty</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Controlling tty device (a maximum of 16 characters).</para></entry></row></tbody></tgroup></table>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>IRIX CSA process base record variables &mdash; total values</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.34in">
<colspec charoff="50" colname="c1" colwidth="118*">
<colspec charoff="50" colname="c2" colwidth="63*">
<colspec charoff="50" colname="c3" colwidth="65*">
<colspec charoff="50" colname="c4" colwidth="66*">
<colspec charoff="50" colname="c5" colwidth="41*">
<colspec charoff="50" colname="c6" colwidth="103*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_btime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Process start time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_ctime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Process connect time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_etime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Elapsed time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_io</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Bytes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of characters transferred.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_iobtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_iosw</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O swap count.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_iowmem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Click- micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait time memory integral while locked in memory.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_iowtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait while locked in memory.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_kcore</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Kiloword-minute</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para><!--I'm not familiar with the abbreviations "Kcore"; will your readers be? susanm -->Kcore-minutes.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_lio</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para></para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of logical I/O requests.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_mem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Click- micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Memory integral.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_phimem_max</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Words</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Maximum process highwater memory mark.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_phimem_min</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Words</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Minimum process highwater memory mark.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_rtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Remote CPU time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_sctime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>System call time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_t_stime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>System CPU time.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pb_t_utime</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>User CPU time.</para></entry></row></tbody></tgroup></table>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>IRIX CSA process base record variables &mdash; prime time values</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.34in">
<colspec charoff="50" colname="c1" colwidth="102*">
<colspec charoff="50" colname="c2" colwidth="66*">
<colspec charoff="50" colname="c3" colwidth="62*">
<colspec charoff="50" colname="c4" colwidth="78*">
<colspec charoff="50" colname="c5" colwidth="56*">
<colspec charoff="50" colname="c6" colwidth="92*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_ctime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Process connect time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_etime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Elapsed time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_io</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Bytes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of characters transferred.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_iobtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_iosw</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O swap count.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_iowmem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Click-ticks</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait time memory integral
while locked in memory.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_iowtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait while locked in
memory.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_kcore</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Kiloword-minute</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Kcore-minutes.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_lio</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of logical I/O requests.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_mem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Click-micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Memory integral.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_rtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Remote CPU time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_sctime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>System call time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_p_stime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>System CPU time.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pb_p_utime</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>Yes</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>User CPU time.</para></entry></row></tbody></tgroup></table>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>IRIX CSA process base record variables &mdash; nonprime time values</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.87in">
<colspec charoff="50" colname="c1" colwidth="110*">
<colspec charoff="50" colname="c2" colwidth="63*">
<colspec charoff="50" colname="c3" colwidth="83*">
<colspec charoff="50" colname="c4" colwidth="79*">
<colspec charoff="50" colname="c5" colwidth="59*">
<colspec charoff="50" colname="c6" colwidth="101*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_ctime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Process connect time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_etime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Elapsed time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_io</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Bytes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of characters transferred.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_iobtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_iosw</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O swap count.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_iowmem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Click- micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait time memory integral
while locked in memory.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_iowtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>I/O wait while locked in
memory.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_kcore</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Kiloword-minute</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Kcore-minutes.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_lio</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of logical I/O requests.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_mem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Click- micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Memory integral.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_rtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Remote CPU time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_sctime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>System call time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pb_n_stime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>System CPU time.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pb_n_utime</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>Yes</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>User CPU time.</para></entry></row></tbody></tgroup></table>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle id="Z869080661janelle"> <comment>(Should the rest of these also say
IRIX CSA process accounting??)</comment><literal>pacct</literal> end-of-job
record variables</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.84in">
<colspec charoff="50" colname="c1" colwidth="134*">
<colspec charoff="50" colname="c2" colwidth="73*">
<colspec charoff="50" colname="c3" colwidth="69*">
<colspec charoff="50" colname="c4" colwidth="62*">
<colspec charoff="50" colname="c5" colwidth="52*">
<colspec charoff="50" colname="c6" colwidth="102*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" valign="top"><para><literal>pe_t_fsblkal</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><literal>-</literal></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Yes</para></entry>
<entry align="left" valign="top"><para>Number of file system blocks allocated.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pe_t_fsblkrm</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><literal>-</literal></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Yes</para></entry>
<entry align="left" valign="top"><para>Number of file system blocks removed.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pe_t_fsblkused</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of file system blocks
used.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pe_t_jbtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Job start time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pe_t_jetime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Time the job ended.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pe_t_jhimem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Clicks</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Job highwater memory mark.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pe_t_jnice</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para></para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Nice value at job termination.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pe_t_mpphimem</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Clicks</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>MPP highwater memory mark.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pe_t_sdshiwat</literal><footnote><para><literal>pe_t_sdshiwat</literal> is always set to 0. This variable is
only kept for compatibility reasons.</para>
</footnote></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>SDS allocation units</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Job SDS highwater mark.</para></entry></row></tbody></tgroup></table>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle> <literal>pacct</literal> massively parallel processing (MPP) record
variables &mdash; total values</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<colspec charoff="50" colname="c1" colwidth="89*">
<colspec charoff="50" colname="c2" colwidth="57*">
<colspec charoff="50" colname="c3" colwidth="44*">
<colspec charoff="50" colname="c4" colwidth="52*">
<colspec charoff="50" colname="c5" colwidth="42*">
<colspec charoff="50" colname="c6" colwidth="112*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" valign="top"><para><literal>pm_t_besu</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><literal>-</literal></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top">Number of PEs used.</entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_t_besu_max</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><literal>-</literal></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top">Number of BESUs used.</entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_t_mhimem_max</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><para>Clicks</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top">Maximum <!--Is it necessary to abbreviate
this and is it necessary to abbreviate it this way? (i.e., "mem hiwater")?
If not, suggest you use "memory highwater" susanm -->mem hiwater (clicks).</entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_t_mhimem_min</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><para>Clicks</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top">Minimum memory Hiwater (clicks).</entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pm_t_pe</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Sum of MPP processing elements
used by all processes.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pm_t_pe_max</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Largest number of MPP processing
elements used by a single process.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pm_t_pe_time</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro-seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Sum of (#PEs used &times;
time used)</para></entry></row></tbody></tgroup></table>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle> <literal>pacct</literal> MPP record variables &mdash; total prime
time values</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="1">
<?PubTbl tgroup dispwid="6.91in">
<colspec charoff="50" colname="c1" colwidth="96*">
<colspec charoff="50" colname="c2" colwidth="59*">
<colspec charoff="50" colname="c3" colwidth="76*">
<colspec charoff="50" colname="c4" colwidth="80*">
<colspec charoff="50" colname="c5" colwidth="51*">
<colspec charoff="50" colname="c6" colwidth="136*">
<thead>
<row><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row rowsep="0">
<entry align="left" valign="top"><para><literal>pm_p_pe</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>-</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Sum of MPP processing elements used
by all processes.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_p_pe_time</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Sum of (#PEs used &times; time used).</para></entry></row></tbody></tgroup></table>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle> <literal>pacct</literal> MPP record variables &mdash; total nonprime
time values</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="1">
<?PubTbl tgroup dispwid="6.91in">
<colspec charoff="50" colname="c1" colwidth="96*">
<colspec charoff="50" colname="c2" colwidth="59*">
<colspec charoff="50" colname="c3" colwidth="76*">
<colspec charoff="50" colname="c4" colwidth="80*">
<colspec charoff="50" colname="c5" colwidth="51*">
<colspec charoff="50" colname="c6" colwidth="136*">
<thead>
<row><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row rowsep="0">
<entry align="left" valign="top"><para><literal>pm_n_pe</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>-</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Sum of MPP processing elements used
by all processes.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_n_pe_time</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Sum of (#PEs used &times; time used).</para></entry></row></tbody></tgroup></table>
<note><title>Note</title><para> Each item in <xref linkend="Z869080800janelle">
is an array that is indexed by PE number. Generally, array elements 0 thru
(<literal>pm_t_pe_max -1</literal>) are nonzero.</para>
</note>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle id="Z869080800janelle"> <literal>pacct</literal> MPP record variables &mdash;
total values by PE</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.91in">
<colspec charoff="50" colname="c1" colwidth="96*">
<colspec charoff="50" colname="c2" colwidth="59*">
<colspec charoff="50" colname="c3" colwidth="76*">
<colspec charoff="50" colname="c4" colwidth="80*">
<colspec charoff="50" colname="c5" colwidth="51*">
<colspec charoff="50" colname="c6" colwidth="136*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" valign="top"><para><literal>pm_s_pe_io</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><para>Bytes</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Amount of I/O transferred.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_s_pe_rstime</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>System and remote CPU.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_s_pe_utime</literal></para></entry>
<entry align="left" valign="top"><para>Integer</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>User CPU.</para></entry></row></tbody></tgroup></table>
<note><title>Note</title><para> Each item in <xref linkend="Z869080832janelle">
is an array that is indexed by PE number. Array elements 0 thru (<literal>pm_t_pe_max -1</literal>) are nonzero unless there is no prime time data.</para>
</note>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle id="Z869080832janelle"> <literal>pacct</literal> MPP record variables &mdash;
prime time values by PE</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.91in">
<colspec charoff="50" colname="c1" colwidth="96*">
<colspec charoff="50" colname="c2" colwidth="59*">
<colspec charoff="50" colname="c3" colwidth="76*">
<colspec charoff="50" colname="c4" colwidth="80*">
<colspec charoff="50" colname="c5" colwidth="51*">
<colspec charoff="50" colname="c6" colwidth="136*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" valign="top"><para><literal>pm_p_pe_io</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Bytes</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>Amount of I/O transferred.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_p_pe_rstime</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>System and remote CPU.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_p_pe_utime</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>User CPU.</para></entry></row></tbody></tgroup></table>
<note><title>Note</title><para> Each item in <xref linkend="Z869080864janelle"> is an array that is indexed by PE number. Array elements 0 thru (<literal>pm_t_pe_max -1</literal>) are nonzero unless there is no prime time data.</para>
</note>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle id="Z869080864janelle"> <literal>pacct</literal> MPP record variables &mdash; nonprime time values by PE</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.87in">
<colspec charoff="50" colname="c1" colwidth="114*">
<colspec charoff="50" colname="c2" colwidth="64*">
<colspec charoff="50" colname="c3" colwidth="74*">
<colspec charoff="50" colname="c4" colwidth="65*">
<colspec charoff="50" colname="c5" colwidth="55*">
<colspec charoff="50" colname="c6" colwidth="123*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pm_n_pe_io</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Bytes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Amount of I/O transferred.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_n_pe_rstime</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>System and remote CPU.</para></entry></row>
<row>
<entry align="left" valign="top"><para><literal>pm_n_pe_utime</literal></para></entry>
<entry align="left" valign="top"><para>Float</para></entry>
<entry align="left" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>No</para></entry>
<entry align="left" valign="top"><para>User CPU.</para></entry></row></tbody></tgroup></table>
<table frame="topbot" tocentry="1" pgwide="wide" id="Z501217141194">
<tbltitle> <literal>pacct</literal> multitasking record variables &mdash; total values </tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="1">
<colspec charoff="50" colname="c1" colwidth="1.84in">
<colspec charoff="50" colname="c2" colwidth="1.07in">
<colspec charoff="50" colname="c3" colwidth="1.02in">
<colspec charoff="50" colname="c4" colwidth="0.95in">
<colspec charoff="50" colname="c5" colwidth="0.76in">
<colspec charoff="50" colname="c6" colwidth="1.28in">
<thead>
<row><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row rowsep="0">
<entry align="left" rotate="0" valign="top"><para><literal>pu_t_mttime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Time connected to [i+1] CPUs.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pu_t_smwtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Semaphore wait time.</para></entry></row></tbody></tgroup></table>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle> <literal>pacct</literal> multitasking record variables &mdash; prime
time values </tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="1">
<colspec charoff="50" colname="c1" colwidth="1.87in">
<colspec charoff="50" colname="c2" colwidth="0.83in">
<colspec charoff="50" colname="c3" colwidth="0.90in">
<colspec charoff="50" colname="c4" colwidth="0.94in">
<colspec charoff="50" colname="c5" colwidth="0.69in">
<colspec charoff="50" colname="c6" colwidth="1.63in">
<thead>
<row><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row rowsep="0">
<entry align="left" rotate="0" valign="top"><para><literal>pu_p_mttime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Time connected to [i+1]
CPUs.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pu_p_smwtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Semaphore wait time.</para></entry></row></tbody></tgroup></table>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle> <literal>pacct</literal> multitasking record variables &mdash; nonprime
time values </tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="1">
<colspec charoff="50" colname="c1" colwidth="1.51in">
<colspec charoff="50" colname="c2" colwidth="0.95in">
<colspec charoff="50" colname="c3" colwidth="0.98in">
<colspec charoff="50" colname="c4" colwidth="1.00in">
<colspec charoff="50" colname="c5" colwidth="0.67in">
<colspec charoff="50" colname="c6" colwidth="1.76in">
<thead>
<row><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row rowsep="0">
<entry align="left" rotate="0" valign="top"><para><literal>pu_n_mttime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Time connected to [i+1]
CPUs.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>pu_n_smwtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Semaphore wait time.</para></entry></row></tbody></tgroup></table>
</section>
<section><title>Daemon Accounting Variables</title>
<para>The accounting variables that contain daemon usage information are available
only when the <command>csagcon</command> input file is a session file.</para>
<para>In <xref linkend="Z851628876smg">, each item is an array that
is indexed by the tape device group names prefixed by <literal>tp_</literal>
or by 0 through [<literal>tp_ndevgrp</literal><?Pub _hardspace> &ndash; 1].</para>
<?Pub _newpage>
<table frame="topbot" tocentry="1" pgwide="wide" id="Z530912090895glen">
<tbltitle id="Z851628876smg">Tape accounting variables</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.87in">
<colspec charoff="50" colname="c1" colwidth="110*">
<colspec charoff="50" colname="c2" colwidth="80*">
<colspec charoff="50" colname="c3" colwidth="71*">
<colspec charoff="50" colname="c4" colwidth="72*">
<colspec charoff="50" colname="c5" colwidth="52*">
<colspec charoff="50" colname="c6" colwidth="110*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_nmount</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of volumes mounted.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_nread</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Bytes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of bytes read.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_nwrite</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Bytes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of bytes written.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_rtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Reservation time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_stime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>System CPU time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>tp_utime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>User CPU time.</para></entry></row></tbody></tgroup></table>
<para>In <xref linkend="Z851628905smg">, the values for <literal>nq_init</literal>, <literal>nq_disp</literal>, and <literal>nq_term</literal> are found in <filename>/var/include/acct/dacct.h</filename>.</para>
<table frame="topbot" tocentry="1" pgwide="wide" id="Z221112090895glen">
<tbltitle id="Z851628905smg">NQS accounting variables</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.92in">
<colspec charoff="50" colname="c1" colwidth="129*">
<colspec charoff="50" colname="c2" colwidth="80*">
<colspec charoff="50" colname="c3" colwidth="72*">
<colspec charoff="50" colname="c4" colwidth="72*">
<colspec charoff="50" colname="c5" colwidth="46*">
<colspec charoff="50" colname="c6" colwidth="99*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_btime</literal>*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Start time of the request.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_disp</literal>*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Dispose subtype (<literal>NQ_DISP</literal>).</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_elapse</literal>**</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Wall-clock time used while the request was running.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_init</literal>*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Initiation subtype (<literal>NQ_INIT</literal>).</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_machname</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Originating machine name (16 characters).</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_mid</literal>*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Originating machine ID.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_nreq</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of NQS requests.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_quename</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Name of the last queue in which the request was located (16 characters).</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_qwtime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Queue wait time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_reqname</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>String</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Request name (16 characters).</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_seqno</literal>*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Sequence number.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_stime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Shepherd system CPU time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_term</literal>*</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>-</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Termination subtype (<literal>NQ_TERM</literal>).</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_utime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Micro- seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para><!--Will your audience know what a "shepherd user" is? I don't, and I don't see it explained anywhere else in text. susanm -->Shepherd user CPU time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>nq_wallclock</literal>***</para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>Total wall-clock time for the request to complete.</para></entry></row></tbody></tgroup></table>
<para>* If the value for this field is unknown, or if this is an interactive
session, this field is set automatically to -9.</para>
<para>** <literal>nq_elapse</literal> is the amount of wall-clock time which
elapsed while the request was running on a CPU. This does not include queue
wait time, system down time, or the period when the request was suspended,
checkpointed, or held.</para>
<para>*** <literal>nq_wallclock</literal> is the total amount of wall-clock
time it took the request to complete. This includes queue wait time and system
down time. This value is reported only once for a request. It is possible
that the amount of CPU time the request uses is greater than the wall-clock
time, because the request could have created additional processes, been multitasked,
or done work in the background.</para>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>Connect-time accounting variables</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.92in">
<colspec charoff="50" colname="c1" colwidth="105*">
<colspec charoff="50" colname="c2" colwidth="79*">
<colspec charoff="50" colname="c3" colwidth="72*">
<colspec charoff="50" colname="c4" colwidth="72*">
<colspec charoff="50" colname="c5" colwidth="49*">
<colspec charoff="50" colname="c6" colwidth="121*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>ct_con_n</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Nonprime time connect time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>ct_con_p</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para>Seconds</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Prime time connect time.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>ct_nlogin</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Integer</para></entry>
<entry align="left" rotate="0" valign="top"><para></para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of interactive logins.</para></entry></row></tbody></tgroup></table>
</section>
<section><title>System Billing Units (SBU) Variables</title>
<para>The following table describes the variables that contain information
about the system billing units (SBUs). If the input to <command>csagcon</command>
is a session file, all the SBUs are multiplied by the appropriate NQS weighting
factor. The NQS weighting factors are defined in the accounting configuration
file <filename>/etc/config/csa_config</filename>.</para>
<table frame="topbot" tocentry="1" pgwide="wide">
<tbltitle>System billing units (SBU) variables</tbltitle>
<tgroup align="left" charoff="50" cols="6" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.91in">
<colspec charoff="50" colname="c1" colwidth="106*">
<colspec charoff="50" colname="c2" colwidth="75*">
<colspec charoff="50" colname="c3" colwidth="69*">
<colspec charoff="50" colname="c4" colwidth="74*">
<colspec charoff="50" colname="c5" colwidth="51*">
<colspec charoff="50" colname="c6" colwidth="123*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Type</para></entry><entry align="left" rotate="0" valign="top"><para>Unit</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Job</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>sb_pacct</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Billing units</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>pacct</literal>
SBUs.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>sb_tape</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Billing units</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Tape SBUs.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>sb_ctime</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Billing units</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Connect-time SBUs.</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>sb_total</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Float</para></entry>
<entry align="left" rotate="0" valign="top"><para>Billing units</para></entry>
<entry align="left" rotate="0" valign="top"><para>Yes</para></entry>
<entry align="left" rotate="0" valign="top"><para>No</para></entry>
<entry align="left" rotate="0" valign="top"><para>Total SBU value.</para></entry></row></tbody></tgroup></table>
</section>
</section>
<section><title>Data File Format</title>
<para>The <command>csagcon</command> consolidated data file consists of header
and data records. The header records describe both the machine on which the
data was collected and the data records.</para>
<para>The <command>csagfef -h</command> option displays some of the information
found in the header records.</para>
<para>The file is organized as follows:</para>
<deflist termlength="standard">
<colheads>
<head1>Record Type</head1><head2>Description</head2></colheads>
<deflistentry>
<term>Header word</term>
<listitem><para>File identifier that is defined in <filename>/var/include/sys/acct.h</filename>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-defs</literal></term>
<listitem><para>Definitions record.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-imeta</literal></term>
<listitem><para>Meta record for integer data.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-fmeta</literal></term>
<listitem><para>Meta record for floating point data.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-cmeta</literal></term>
<listitem><para>Meta record for character string data. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-data</literal></term>
<listitem><para>Indicator for the start of data record 1.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-int</literal></term>
<listitem><para>Data record 1 containing integer data.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-float</literal></term>
<listitem><para>Data record 1 containing floating point data.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-char</literal></term>
<listitem><para>Data record 1 containing character string data. </para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-data</literal></term>
<listitem><para>Indicator for the start of data record 2.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-int</literal></term>
<listitem><para>Data record 2 containing integer data.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-float</literal></term>
<listitem><para>Data record 2 containing floating point data.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>gc-char</literal></term>
<listitem><para>Data record 2 containing character string data.</para>
</listitem></deflistentry>
</deflist>
<para>(There are additional <literal>gc-data</literal>, <literal>gc-int</literal>, <literal>gc-float</literal>, and <literal>gc-char</literal> records for each data record.)</para>
<section><title>Header Records</title>
<para>Header records appear only once, at the beginning of the consolidated
data file. There are three types of header records:</para>
<deflist termlength="standard">
<colheads>
<head1>Header Record Type</head1><head2>Description</head2></colheads>
<deflistentry>
<term>Header word</term>
<listitem><para>Identifies the file according to the format specified in the
file <filename>/var/include/sys/acct.h</filename>. This word allows other
accounting programs to check for a valid input file type before attempting
to process the file.</para>
</listitem></deflistentry>
<deflistentry>
<term>Definitions record</term>
<listitem><para>Contains constants and character strings that describe the
machine on which the data was consolidated and array element names. These
variables can be accessed by <command>csagfef</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term>Meta record</term>
<listitem><para>Describes the data in the data records. A meta record lists
the name, type, and size of each item or array in the data records and the
order of the data found in the data records. There is a separate meta record
for integer data, floating point data, and character string data.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Data Records</title>
<para>Data records follow the header records in a file. The <literal>gc-data</literal> record denotes the start of the data for a unique consolidation
identifier.</para>
</section>
</section>
<section><title><command>csagfef</command> Source Scripts</title>
<para>The <command>csagfef</command> command is a translator that formats <command>csagcon</command> output into an ASCII report or a binary file according to
the directives found in a source script.</para>
<para>The <command>csagfef</command> scripts are based on four sections, including
the body, any of which may be empty or missing. Scripts can contain any of
the following sections in any order:</para>
<literallayout>BEGIN <replaceable>{ statements }</replaceable>
END <replaceable>{ statements }</replaceable>
function <replaceable>name ( arglist ) { statements }</replaceable>
<replaceable>statements</replaceable></literallayout>
<para>The <command>csagfef</command> command can process multiple source scripts, and one script can contain multiple <literal>BEGIN</literal>, <literal>END</literal>, or body sections. In these cases, <command>csagfef</command> executes the statements for all like sections in the order that they appear in the scripts or script.</para>
<para>For example, all statements in the various <literal>BEGIN</literal> sections will be combined into one <literal>BEGIN</literal> section. The statements will be in the same order as they appear in the scripts or script.</para>
<section><title><literal>BEGIN</literal> Section</title>
<para>The statements associated with <literal>BEGIN</literal> comprise the preamble. The preamble is executed once after the definition and meta-data records are read. The preamble can be used to print report headings and to initialize variables used in the body</para>
</section>
<section><title><literal>END</literal> Section</title>
<para>The statements associated with <literal>END</literal> comprise the postamble. The postamble is executed once after all the records in the data file have been read. You can instruct <command>csagfef</command> in this section to process and print summary data.</para>
</section>
<section><title><literal>function</literal> Section</title>
<para>The statements in the <literal>function</literal> section of <command>csagfef</command> define functions as specified by you. Functions always begin with the word <literal>function</literal> followed by the function name and the argument list. The <replaceable>arglist</replaceable> consists of names separated by commas. These argument names are the formal parameters of the function and the variables that are local to the function. Function calls may be nested and recursive. The return statement can be used to return a
value.</para>
</section>
<section><title>Body</title>
<para>Statements that are not in any of the preceding sections form the body
of the <command>csagfef</command> source script. Typically, these statements
print out information from the data records. This section is executed once
for each data record encountered.</para>
</section>
<section><title>Example Source Scripts</title>
<para>Examples of <command>csagfef</command> source scripts can be found in
the <filename>/var/src/cmd/acct/src/csa/csagfef/examples</filename> directory.</para>
<para>For sites that have source, the examples can also be found in the <filename>/var/src/cmd/acct/src/csa/csagfef/examples</filename> directory.</para>
</section>
<section><title><command>csagfef</command> Language Description</title>
<para>The <command>csagfef</command> language is the action language of <command>nawk</command> without the string processing operations. If you are familiar
with <command>nawk</command>, you will have little difficulty writing and
understanding <command>csagfef</command> scripts. The pattern part of <command>nawk</command> is unnecessary in <command>csagfef</command>, because the data
format is defined in the data file. You merely select the data items to process
by name.</para>
<para>The <command>csagfef</command> script implements a version of the <command>awk</command> language (new <command>awk</command>, or <command>nawk</command>)
described in <citetitle>The AWK Programming Language</citetitle>, by Alfred
Aho, Brian Kernighan, and Peter Weinberger (1988).</para>
<para>A <command>csagfef</command> script can include any of the following
statements:</para>
<literallayout>if ( <replaceable>expression</replaceable> ) <replaceable>statement</replaceable> [ else <replaceable>statement</replaceable> ]
while ( <replaceable>expression</replaceable> ) <replaceable>statement</replaceable>
do <replaceable>statement</replaceable> while ( <replaceable>expression</replaceable> )
for ( <replaceable>expression</replaceable>; <replaceable>expression</replaceable>; <replaceable>expression</replaceable> ) <replaceable>statement</replaceable>
break
continue
{ [ <replaceable>statements</replaceable> ] }
<replaceable>expression</replaceable>
print <replaceable>expression-list</replaceable> [ ><replaceable>expression</replaceable> ]
printf <replaceable>format</replaceable>[, <replaceable>expression-list</replaceable> ] [ ><replaceable>expression</replaceable> ]
next
exit [ <replaceable>expression</replaceable> ]
return [ <replaceable>expression</replaceable> ]</literallayout>
<para>The <command>csagfef</command> script also contains the following items:</para>
<itemizedlist>
<listitem><para>Statement terminators. Statements are terminated by semicolons,
right braces, or newlines.</para>
</listitem>
<listitem><para>Statement continuation. Statements can be continued on successive
lines by using <literal>\</literal> as the last character of the line. Statements
can also be continued after the following symbols:</para>
<literallayout>,       (comma)
{       (left brace)
&amp;&amp;      (logical AND)
||      (logical OR)
do
else)       (right parenthesis in an "if" or "for" statement)</literallayout>
</listitem>
<listitem><para>Comments. Nonexecutable comments begin with a <literal>#</literal>
symbol and end with a newline. They can appear anywhere in the source script.</para>
</listitem>
<listitem><para>Expressions. Expressions include constants, variables, and
operators. Parentheses can be used to control the grouping of the operations
in an expression.</para>
</listitem>
<listitem><para>Logical expressions. Logical expressions have a value of 1
(true) and 0 (false). As in the C language, any nonzero value is taken to
be true.</para>
</listitem>
<listitem><para>Numbers. Numbers can be integers or floating points. The format
is the same as that recognized by <command>strtod</command> and <command>strtol</command>(3C): digits, decimal point, digits, <literal>e</literal>
or <literal>E</literal>, signed exponent. At least one digit or a decimal
point must be present; the other components are optional. Octal integers begin
with 0. Hexadecimal integers begin with 0 <replaceable>x</replaceable>.</para>
</listitem>
<listitem><para>Variable names. Variable names consist of a letter followed
by a string of letters, numbers, or the <literal>_</literal> character. Variables
are used to name the data items found in the data records of the consolidated
file.</para>
<para>Some variables in the consolidated data file are arrays. The elements of these arrays can be referenced by indexing. For example, the variable, <literal>pu_t_mutime</literal>, is an array that contains the time a process was connected to (i+1) CPUs. The time a process was connected to one CPU is referenced by <literal>pu_t_mutime</literal> [0].</para>
<para>You can also define additional variables within the <command>csagfef</command> source script; however, user-defined arrays are not supported.</para>
</listitem></itemizedlist>
<para>A <command>csagfef</command> script can include prefix, infix, and suffix operators as follows: </para>
<deflist termlength="narrow">
<deflistentry>
<term>Prefix operators</term>
<listitem><para>The <command>csagfef</command> command applies a prefix operator immediately preceding a term and any suffix operators. It then applies any prefix operators to the left of that operator, grouping them from right to left.</para>
<deflist termlength="narrow">
<colheads>
<head1>Operator</head1><head2>Action</head2></colheads>
<deflistentry>
<term><literal>++X</literal></term>
<listitem><para>Preincrement</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>--X</literal></term>
<listitem><para>Predecrement</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>+X</literal></term>
<listitem><para>Plus</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>-X</literal></term>
<listitem><para>Minus</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>!X</literal></term>
<listitem><para>Logical NOT</para>
</listitem></deflistentry>
</deflist>
</listitem></deflistentry>
<deflistentry>
<term>Infix operators</term>
<listitem><para>The <command>csagfef</command> command applies infix operators,
in descending order of precedence, as follows:</para>
<deflist termlength="narrow">
<colheads>
<head1>Operator</head1><head2>Action</head2></colheads>
<deflistentry>
<term><literal>X^Y</literal></term>
<listitem><para>Exponentiation</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X*Y</literal></term>
<listitem><para>Multiplication</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X/Y</literal></term>
<listitem><para>Division</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X%Y</literal></term>
<listitem><para>Remainder</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X+Y</literal></term>
<listitem><para>Addition</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X-Y</literal></term>
<listitem><para>Subtraction</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X&lt;Y</literal></term>
<listitem><para>Less than</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X&lt;=Y</literal></term>
<listitem><para>Less than or equal</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X>Y</literal></term>
<listitem><para>Greater than</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X>=Y</literal></term>
<listitem><para>Greater than or equal</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X==Y</literal></term>
<listitem><para>Equals</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X!=Y</literal></term>
<listitem><para>Not equals</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X&amp;&amp;Y</literal></term>
<listitem><para>Logical AND</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X||Y</literal></term>
<listitem><para>Logical OR</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>Z?X:Y</literal></term>
<listitem><para>Conditional</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X=Y</literal></term>
<listitem><para>Assignment</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X*=Y</literal></term>
<listitem><para>Multiply assign</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X/=Y</literal></term>
<listitem><para>Divide assign</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X%=Y</literal></term>
<listitem><para>Remainder assign</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X+=Y</literal></term>
<listitem><para>Add assign</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X-=Y</literal></term>
<listitem><para>Subtract assign</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X,Y</literal></term>
<listitem><para>Comma</para>
</listitem></deflistentry>
</deflist>
</listitem></deflistentry>
<deflistentry>
<term>Suffix operators</term>
<listitem><para>The <command>csagfef</command> command applies a suffix operator
immediately following a term before it applies any other operator. It then
applies any suffix operators to the right of that operator, grouping them
from left to right. The following list shows the suffix operators:</para>
<deflist termlength="narrow">
<colheads>
<head1>Operator</head1><head2>Action</head2></colheads>
<deflistentry>
<term><literal>X++</literal></term>
<listitem><para>Postincrement</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X--</literal></term>
<listitem><para>Postdecrement</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X[Y]</literal></term>
<listitem><para>Subscript</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>X(Y)</literal></term>
<listitem><para>Function call</para>
</listitem></deflistentry>
</deflist>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Built-in Functions</title>
<para>The <command>csagfef</command> command has the following built-in functions,
with the function parameters (given in parentheses) defined at the end of
the list:</para>
<deflist>
<colheads>
<head1>Function name</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>abs</literal> (<replaceable>exp</replaceable>)</term>
<listitem><para>Returns the absolute value of <replaceable>exp</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>prid2nam</command>(<replaceable>num</replaceable>)</term>
<listitem><para>Returns the character string associated with the project ID
(<replaceable>num</replaceable>). If there is no associated string, it returns <literal>Unknown</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>bytes_to</literal>(<replaceable>num</replaceable>[, <replaceable>unit</replaceable>])</term>
<listitem><para>Converts bytes to some other unit. If [, <replaceable>unit</replaceable>] is not specified, kilobytes are returned.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>clicks_to</literal>(<replaceable>num</replaceable>[, <replaceable>unit</replaceable>])</term>
<listitem><para>Converts clicks to some other unit. If [, <replaceable>unit</replaceable>] is not specified, kilobytes are returned.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>close</literal>(<replaceable>str</replaceable>)</term>
<listitem><para>Closes the file stream specified by <replaceable>str</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>frac</literal>(<replaceable>exp</replaceable>)</term>
<listitem><para>Returns the fractional part of <replaceable>exp</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>gid2nam</command>(<replaceable>num</replaceable>)</term>
<listitem><para>Returns the character string associated with the group ID
(<replaceable>num</replaceable>). If there is no associated string, it returns <literal>Unknown</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>imax</literal>(<replaceable>arr</replaceable>)</term>
<listitem><para>Returns the index of the maximum element of array <replaceable>arr</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>imin</literal>(<replaceable>arr</replaceable>)</term>
<listitem><para>Returns the index of the minimum element of array <replaceable>arr</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>int</literal>(<replaceable>exp</replaceable>)</term>
<listitem><para>Returns the integer part of <replaceable>exp</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>isdefined</literal>(<replaceable>sym</replaceable>)</term>
<listitem><para>Returns 1 if <replaceable>sym</replaceable> is defined. Otherwise,
it returns 0.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>nam2prid</command>(<replaceable>str</replaceable>)</term>
<listitem><para>Returns the numeric project ID associated with the project
name (<replaceable>str</replaceable>). If there is no project ID, it returns &ndash;1.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>nam2gid</command>(<replaceable>str</replaceable>)</term>
<listitem><para>Returns the numeric group ID associated with the group name
(<replaceable>str</replaceable>). If there is no group ID, it returns &ndash;1.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>nam2uid</command>(<replaceable>str</replaceable>)</term>
<listitem><para>Returns the numeric ID associated with the user name (<replaceable>str</replaceable>). If there is no user ID, it returns &ndash;1.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>strcmp</command>(<replaceable>str1, str2</replaceable>)</term>
<listitem><para>Compares two strings. Returns a value that is greater than,
equal to, or less than 0 according to whether <replaceable>str1</replaceable>
is greater than, equal to, or less than <replaceable>str2</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>strftime</command>(<replaceable>fmt</replaceable>)</term>
<listitem><para>Formats the time into a string according to (<replaceable>fmt</replaceable>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command>strlen</command>(<replaceable>str</replaceable>)</term>
<listitem><para>Returns the number of characters in string (<replaceable>str</replaceable>).</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>sum(</literal><replaceable>arr</replaceable>)</term>
<listitem><para>Returns the sum of the elements in array <replaceable>arr</replaceable>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>system(</literal><replaceable>str</replaceable>)</term>
<listitem><para>Passes <replaceable>str</replaceable> to the shell for execution.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>ticks_to</literal>(<replaceable>num</replaceable>[, <replaceable>tunit</replaceable>])</term>
<listitem><para>Converts microseconds to some other unit. If [,&nbsp;<replaceable>tunit</replaceable>] is not specified, seconds are returned. This function name has been retained for compatibility with UNICOS. It calls <command>time_td</command>().</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>time_to</literal>(<replaceable>num</replaceable>[,<replaceable>tunit</replaceable>])</term>
<listitem><para>Converts microseconds to some other unit. If [,&nbsp;<replaceable>tunit</replaceable>] is not specified, seconds are returned.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>uid2nam</command>(<replaceable>num</replaceable>)</term>
<listitem><para>Returns the character string associated with the user ID (<replaceable>num</replaceable>). If there is no associated string, it returns <literal>Unknown</literal>.</para>
</listitem></deflistentry>
</deflist>
<para>The definitions of the function parameters are as follows:</para>
<deflist termlength="standard">
<colheads>
<head1>Parameter</head1><head2>Definition</head2></colheads>
<deflistentry>
<term><replaceable>arr</replaceable></term>
<listitem><para>An array name. For example:<literallayout><literal>imax</literal> (<literal>pd_t_cioch</literal>)</literallayout></para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>exp</replaceable></term>
<listitem><para>A variable name or a function invocation. An example variable
name is <literal>abs</literal> (<literal>pb_t_rw</literal>).</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>fmt</replaceable></term>
<listitem><para>NULL or a valid <command>strftime</command>(3C) format that
is enclosed in double quotes. An example NULL format is <literal>strftime</literal> (); an example <command>strftime</command> format is <literal>strftime</literal> (" <literal>%X</literal> ").</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>num</replaceable></term>
<listitem><para>Either an integer value or the name of a variable that contains
an integer value. Example variable names include <literal>bytes_to</literal>
(<literal>pb_t_io</literal>) and <literal>uid2nam</literal> (<replaceable>uid</replaceable>).</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>str</replaceable>, <replaceable>str1</replaceable>, <replaceable>str2</replaceable></term>
<listitem><para>Either character strings enclosed in double quotation marks
or the names of a variables whose values are character strings. An example
character string is <literal>close</literal> (" <literal>cpu_data</literal>
"). </para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>sym</replaceable></term>
<listitem><para>A variable name. Names of array elements are not valid symbols. <replaceable>sym</replaceable> can be defined by the <literal>csagfef<?Pub _hardspace>-D</literal> option. For example, <literal>if</literal> (<literal>isdefined</literal> (<literal>ios_e</literal>)) is valid, whereas <literal>if</literal> (<literal>isdefined</literal> (<literal>us_stime</literal> [<literal>us_Dispose</literal>])) is not valid. An example of a symbol defined by the <command>csagfef -D</command> option is <literal>if</literal> (<literal>isdefined</literal> (<literal>CPU</literal>)).</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>unit</replaceable></term>
<listitem><para>May be one of the following:</para>
<deflist termlength="standard">
<deflistentry>
<term><literal>B</literal></term>
<listitem><para>Converts to bytes</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>KB</literal></term>
<listitem><para>Converts to kilobytes (2<superscript>10</superscript> bytes)</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MB</literal></term>
<listitem><para>Converts to megabytes (2<superscript>20</superscript> bytes)</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>GB</literal></term>
<listitem><para>Converts to gigabytes (2<superscript>30</superscript> bytes)</para>
<para></para>
</listitem></deflistentry>
<deflistentry>
<term><literal>number</literal></term>
<listitem><para>Uses <literal>number</literal> as the divisor and divides the value by number</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>variable_name</literal></term>
<listitem><para>Uses <literal>variable_name</literal> as the divisor</para>
</listitem></deflistentry>
</deflist>
<para>An examples of using the <command>unit</command> function is as follows: <literal>bytes_to</literal> (<literal>tp_nread, MB</literal>). This example would convert
bytes to megabytes.</para>
</listitem></deflistentry>
<deflistentry>
<term><replaceable>tunit</replaceable></term>
<listitem><para>May be one of the following:</para>
<deflist termlength="narrow">
<deflistentry>
<term><literal>SEC</literal></term>
<listitem><para>Converts to seconds</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>MIN</literal></term>
<listitem><para>Converts to minutes</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>HOUR</literal></term>
<listitem><para>Converts to hours</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>DAY</literal></term>
<listitem><para>Converts to days</para>
</listitem></deflistentry>
</deflist>
<para>For example, <literal>time_to</literal> (<literal>pb_t_iowtime</literal>, <command>MIN</command>) would convert time to minutes.</para>
</listitem></deflistentry>
</deflist>
</section>
<section><title>Built-in Variables</title>
<para>The <command>csagfef</command> command has the following built-in variables:</para>
<table frame="topbot" tocentry="1" id="Z423417110895glen">
<tbltitle>Built-in variables</tbltitle>
<tgroup align="left" charoff="50" cols="3" colsep="0" rowsep="0">
<?PubTbl tgroup dispwid="6.27in">
<colspec charoff="50" colname="c1" colwidth="119*">
<colspec charoff="50" colname="c2" colwidth="124*">
<colspec charoff="50" colname="c3" colwidth="208*">
<thead>
<row rowsep="1"><entry align="left" rotate="0" valign="top"><para>Variable</para></entry><entry align="left" rotate="0" valign="top"><para>Default</para></entry><entry align="left" rotate="0" valign="top"><para>Description</para></entry></row></thead>
<tbody valign="top">
<row>
<entry align="left" rotate="0" valign="top"><para><literal>FILENAME</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>None</para></entry>
<entry align="left" rotate="0" valign="top"><para>Name of the current input
file</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>NR</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>None</para></entry>
<entry align="left" rotate="0" valign="top"><para>Number of data records read
so far</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>OFMT</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>%.6g</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Output format for printing
numbers</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>OFS</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>" "</para></entry>
<entry align="left" rotate="0" valign="top"><para>Output field separator</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>ORS</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para><literal>\n</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>Output record separator</para></entry></row>
<row>
<entry align="left" rotate="0" valign="top"><para><literal>RSIZE</literal></para></entry>
<entry align="left" rotate="0" valign="top"><para>None</para></entry>
<entry align="left" rotate="0" valign="top"><para>Size of the data records
in bytes</para></entry></row></tbody></tgroup></table>
</section>
<section><title>Generic Front-end Formatting Example</title>
<para>The extended example presented here illustrates how you can consolidate
and format data for NQS requests using <command>csagcon</command> and <command>csagfef</command>. It assumes input from a session file.</para>
<orderedlist><listitem><para>Identify the data that needs to be reported.</para>
<para>Determine the information that is useful to your site. In this case,
for each NQS request the example will report the following fields:</para>
<itemizedlist>
<listitem><para>User name</para>
</listitem>
<listitem><para>Project name</para>
</listitem>
<listitem><para>Request name</para>
</listitem>
<listitem><para>Request ID</para>
</listitem>
<listitem><para>Queue name</para>
</listitem>
<listitem><para>CPU time</para>
</listitem>
<listitem><para>Memory high-water value</para>
</listitem>
<listitem><para>Queue wait time</para>
</listitem>
<listitem><para>Locked I/O wait time</para>
</listitem>
<listitem><para>Unlocked I/O wait time</para>
</listitem></itemizedlist>
<para>Because some of these items are not default <command>csagcon</command>
consolidation items, you must specify a request file when executing <command>csagcon</command>. The following variable names must be in the request file
(<filename>nqs.req</filename>). You can find a copy of this file in either
the <filename>/var/src/cmd/acct/src/csa/csagfef/examples</filename> directory
or the <filename>/var/lib/acct/gfef</filename> directory.</para>
<literallayout>  nq_reqname
  nq_seqno
  nq_quename
  pb_t_stime
  pb_t_utime
  pb_t_phimem_max
  nq_qwtime
  pb_t_iowtime
  pb_t_iobtime</literallayout>
</listitem><listitem><para>Pass the request file name (<filename>nqs.req</filename>)
to <command>csagcon</command> by using the <literal>-R</literal> option (<literal>-R<?Pub _hardspace>nqs.req</literal>).</para>
</listitem><listitem><para>Select the <command>csagcon</command> consolidation
keys.</para>
<para>To extract information for each NQS request, you must select consolidation
keys: job ID (<literal>-j</literal> option) and job class (<literal>-c</literal>
option). However, you must be certain that all portions of an NQS request
are processed as though they have the same job ID, which is the default. (For
this example, do not specify the <literal>-N</literal> option, which consolidates
each portion of an NQS request according to its job ID).</para>
<para>To report the username and project name that is associated with each
request, you also must specify the <literal>-u</literal> and <literal>-a</literal>
options. If these two keys are not specified, the username and project name
will not be known.</para>
<note><para> All consolidation keys (<command>prid</command>, <literal>gid</literal>, <literal>jclass</literal>, <literal>jid</literal>, and <literal>uid</literal>) that are not selected on the <command>csagcon</command> command
line by the <literal>-p</literal>, <literal>-g</literal>, <literal>-c</literal>, <literal>-j</literal>, and <literal>-u</literal> options, will have a value of &ndash;9.</para>
<para>For example, if you do not specify the <literal>-u</literal> option,
the <literal>uid</literal> variable will always have a value of &ndash;9.</para>
</note>
<para>If you want to sort the output, use the <literal>-s</literal> option.
In this example, the output is sorted alphabetically by <replaceable>username</replaceable> (<literal>-s</literal> <replaceable>username</replaceable>option).</para>
<para>To summarize, the consolidation and sort options used in this example
are the following: <literal>-j<?Pub _hardspace>-c<?Pub _hardspace>-u<?Pub _hardspace>-p<?Pub _hardspace>-s<?Pub _hardspace><replaceable>username</replaceable></literal>.</para>
</listitem><listitem><para>Determine which sessions should be consolidated.</para>
<para>This example will consolidate only terminated sessions (default option).
You can use the <literal>-A</literal> or <literal>-C</literal> option to consolidate
all sessions or only active sessions.</para>
<para>The data to be consolidated now is identified and you are ready to execute <command>csagcon</command>. If you assume that the input comes from a session file
named <filename>Super-Record.1130</filename> and the output is written to
the file <filename>gacct.1130</filename>, you would execute the following
command:</para>
<literallayout width="standard" fontsize="8pt">csagcon -S Super-Record.1130 -o gacct.1130 -R nqs.req -jcua -s username</literallayout>
</listitem><listitem><para>Format the consolidated data into a report.</para>
<para>You must decide the units and length of the various fields. In this
example, memory highwater is reported in megawords <comment>(Delete ref to
words?)</comment>and CPU time, queue wait time, locked I/O wait time, and
unlocked I/O wait time is reported in seconds. Data that is not already in
the correct units is converted by <command>csagfef</command>. </para>
<para>After deciding on the format, you must write a <command>csagfef</command>
source script that tells <command>csagfef</command> how to generate the report.
The following script can be used as input to <command>csagfef</command> and
is found in the following file:<literallayout>/var/src/cmd/acct/src/csa/csagfef/examples/nqs.ss</literallayout>The script contains variables that control the writing of
the header and summary lines. When <literal>-D<?Pub _hardspace>HEADER</literal>
is specified on the command line, <command>csagfef</command> outputs the header.
When <literal>-D<?Pub _hardspace>SUMMARY</literal> is specified, summary information
is written. </para>
<para>If you assume that the consolidated data file is named <filename>gacct.1130</filename>, and the source script is named <filename>nqs.ss</filename>, the
following command will generate a report without the header and summary lines:<literallayout>csagfef -f gacct.1130 nqs.ss</literallayout></para>
<para>If you want both the header and summary information, execute the following
command: <literallayout>csagfef -f gacct.1130 -D HEADER -D SUMMARY nqs.ss</literallayout></para>
<para>The <literal>nqs.ss</literal> source script listing follows:</para>
<note><para>The calls to the <command>clocks_to</command>() function can be
replaced by <command>time_to</command>().</para>
</note>
</listitem></orderedlist>
<?Pub _newpage>
<programlisting width="wide" fontsize="9pt"><comment>(Need to verify this example.)</comment>BEGIN {
#
#
#       Figure out which jobs were consolidated.
#
if (con_key &amp; 0100) {
        CONSOL = "ACTIVE AND COMPLETED JOBS"
} else if (con_key &amp; 0200) {
        CONSOL = "ONLY ACTIVE JOBS"
} else {
        CONSOL = "ONLY COMPLETED JOBS"
}

#
#       Initialize counters.
ntot_job = 0                    # Total number of jobs
nnqs = 0                        # Number of NQS jobs
#
#       Print the header if "-D HEADER" was specified on the command line.
#
if ( isdefined(HEADER) ) {
        printf("%s   DAILY REPORT FOR %s (Rel %s, %s)\n\n",
           strftime("%c", creatime), SYSNAME, RELEASE, VERSION)

        printf("INCLUDES DATA FOR %s BETWEEN\n", CONSOL)
        printf("    %s AND %s\n\n",
           strftime("%c", file_start), strftime("%c", file_end))

        printf("                                               REQUEST  ")
        printf("                 CPU TIME    MEM HIWAT QWAIT   LCK IO  ")
        printf("UNLCK  \n")

        printf("USER NAME    PROJECT NAME     REQUEST NAME     ID       ")
        printf("QUEUE NAME       [SECS]      [MW]      [SECS]  WAIT    ")
        printf("IO WAIT\n")

        printf("============ ================ ================ ======== ")
        printf("================ =========== ========= ======= ======= ")
        printf("=======\n")
}
}

ntot_jobs++             # count the total number of jobs

if ( jclass == 2 ) {    # output information only about NQS requests
        nnqs++          # count the number of NQS requests

        username = uid2nam(uid)                   # user name
        project = prid2nam(prid)                  # project name

        cputime = clocks_to(pb_t_stime, SEC) + \ 
        clocks_to(pb_t_utime, SEC)
                                                  # CPU time in seconds
        memhiwat = words_to(pb_t_phimem_max, MW)  # memory high water in megwords

<comment>(Delete refs to words?)</comment>        lockio = clocks_to(pb_t_iowtime, SEC)     # locked I/O wait in seconds
        ulockio = clocks_to(pb_t_iobtime, SEC)    # unlocked I/O wait in seconds

        printf("%-12.12s %-16.16s %-16.16s %-8d %-16.16s ",
           username, project, nq_reqname, nq_seqno, nq_quename)
        printf("%11.3f %8.0f %7d %7.1f %7.1f\n",
           cputime, memhiwat, nq_qwtime, lockio, ulockio)

}

#
#       Print summary information about the input file if "-D SUMMARY"
#       was specified on the command line.
#
END {
if ( isdefined(SUMMARY) ) {
        printf("\n\nInput file: %s\nTotal number of jobs: %d\n",
           FILENAME, ntot_jobs)
        printf("Number of NQS requests: %d\n", nnqs)
        printf("Number of non-NQS requests: %d\n", ntot_jobs - nnqs)
}
}</programlisting>
<para>The preceding script produces the following output. Both the header
and summary information are included. <comment>(Need to verify this example&mdash;it
was taken from UNICOS/mk)</comment></para>
<screen width="wide" fontsize="8pt">Wed Nov 5 10:04:50 1997   DAILY REPORT FOR IRIX (Rel 6.5)

INCLUDES DATA FOR ONLY COMPLETED JOBS BETWEEN
    Wed Nov 5 07:58:09 1997 AND Wed Nov 5 09:51:45 1997

                                    REQ            CPU TIME MEM HIWAT QWAIT  LCK IO  UNLCK
USER NAME PROJECT NAME REQUEST NAME ID  QUEUE NAME [SECS]   [MW]      [SECS] WAIT    IO WAIT
========= ============ ============ ==  ========== ======== ========= ====== ======= =======
fe        Xydev        STDIN        3   b_30_1     0.411       1       4       0.1     0.4
fe        Xydev        STDIN        4   b_30_1     0.414       1       3       0.1     0.3
pds       SysAdm       STDIN        6   b_30_1     0.570       0       4       0.0     0.4
root      SysAdm       STDIN        6   b_30_1     0.544       0       0       0.0     0.5
root      SysAdm       SLSCRUB      7   b_1200_1   0.958       0       0       0.0     1.6
root      SysAdm       STDIN        5   b_30_1     0.531       0       0       0.0     0.1
root      Xydev        STDIN        4   b_30_1     0.558       0       0       0.0     0.3
root      Xydev        STDIN        3   b_30_1     0.552       0       0       0.1     0.4
user1     SysAdm       SLSCRUB      7   b_1200_1   2.079       0       9       0.1    14.8


Input file: gacct
Total number of jobs: 175
Number of NQS requests: 10
Number of non-NQS requests: 165</screen>
</section>
</section>
</section>
</section>
<section id="Z890941622janelle">
<title>Migrating Accounting Data</title>
<para>Most IRIX accounting data files are portable between different IRIX
platforms and are upward release compatible. The following commands can be
used to convert existing accounting data files to different platforms:<deflist id="Z893772229janelle">
<deflistentry>
<term><command sectionref="8">csaconvert</command></term>
<listitem><para>Administrators can use this command to convert an existing <literal>pacct</literal> file to a new format. Note: data files are not compatible
between the IRIX operating system and other operating systems, such as the
Cray Research UNICOS and UNICOS/mk opearating systems. See the <command sectionref="8">csaconvert</command> man page for more information.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1">acctcvt</command></term>
<listitem><para>Users can use this command to convert IRIX accounting data
from one format to another. Valid accounting formats include: IRIX extended
accounting 6.2, 6.4, and 6.5 formats; all basic process accounting formats;
and the IRIX CSA format. See the <command sectionref="1">acctcvt</command>
man page for more information.</para>
</listitem></deflistentry>
</deflist></para>
<para><comment>Are there other commands or tools that can be used?? csagcon,
csagfef????</comment></para>
</section>
<section id="Z890941642janelle">
<title>Accounting Commands</title>
<para>All of the IRIX accounting commands are listed below. For more information
on the commands, see the related man pages. </para>
<para><comment>(Do we need to add the scripts, too?)</comment></para>
<para></para>
<para><emphasis>General Accounting Commands</emphasis><deflist id="Z893787641janelle">
<colheads>
<head1>Command</head1><head2>Purpose</head2></colheads>
<deflistentry>
<term><command sectionref="1">acctcvt</command></term>
<listitem><para>Converts accounting records to current or previous record
formats.</para>
</listitem></deflistentry>
</deflist></para>
<para></para>
<para><emphasis>Basic Process Accounting Commands</emphasis><deflist id="Z893777908janelle">
<colheads>
<head1>Command</head1><head2>Purpose</head2></colheads>
<deflistentry>
<term><command sectionref="1m">acctcms</command></term>
<listitem><para>Summarizes command usage from process accounting records.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1">acctcom</command></term>
<listitem><para>Searches and prints process accounting files.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctcon</command></term>
<listitem><para>Performs a combination of the <command>acctcon1</command>
and <command>acctcon2</command> functions.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctcon1</command></term>
<listitem><para>Performs connect-time accounting. <comment>(How is this different
from acctcon2?)</comment></para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctcon2</command></term>
<listitem><para>Performs connect-time accounting. </para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctdisk</command></term>
<listitem><para>Converts disk data to a consolidated accounting format (<literal>cacct</literal>) or total accounting format (<literal>tacct</literal>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctdusg</command></term>
<listitem><para>Computes and displays disk resource consumption by login.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctmerg</command></term>
<listitem><para>Merges or adds total accounting files (<literal>tacct</literal>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">accton</command></term>
<listitem><para>Controls basic process accounting.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctprc</command></term>
<listitem><para>Processes accounting data (<literal>pacct</literal> &mdash;><literal> tacct</literal>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctprc1</command></term>
<listitem><para>Processes accounting data (<literal>pacct</literal> &mdash;><literal> ptmp</literal>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctprc2</command></term>
<listitem><para>Processes accounting data (<literal>ptmp</literal> &mdash;><literal> tacct</literal>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">acctwtmp</command></term>
<listitem><para>Creates a user accounting record.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>closewtmp</command></term>
<listitem><para>Called by <command>runacct</command> to write records in the <literal>wtmp</literal> file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">diskusg</command></term>
<listitem><para>Generates disk accounting data by user, project, or group
ID.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">fwtmp</command></term>
<listitem><para>Manipulates connect accounting records.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>utmp2wtmp</command><comment>(extension?)</comment></term>
<listitem><para>Called by <command>runacct</command> to write records in the <literal>wtmp</literal> file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">wtmpfix</command></term>
<listitem><para>Manipulates connect accounting records.</para>
</listitem></deflistentry>
</deflist></para>
<para></para>
<para><emphasis>Extended Accounting Commands</emphasis><deflist id="Z893782572janelle">
<colheads>
<head1>Command</head1><head2>Purpose</head2></colheads>
<deflistentry>
<term><command sectionref="5">extacct</command></term>
<listitem><para>Provides an overview of IRIX extended accounting.</para>
</listitem></deflistentry>
</deflist></para>
<para></para>
<para><emphasis>Extended Accounting&mdash;Array Sessions Commands</emphasis><deflist id="Z893783328janelle">
<deflistentry>
<term><command sectionref="5">array_sessions</command></term>
<listitem><para>Provides an introduction to array sessions.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="2">getash</command></term>
<listitem><para>Gets an array session handle.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="2">newarraysess</command></term>
<listitem><para>Starts a new array session.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1">newsess</command></term>
<listitem><para>Starts a new array session, comparable to <command>newgrp</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="2">setash</command></term>
<listitem><para>Sets an array session handle.</para>
</listitem></deflistentry>
</deflist></para>
<para></para>
<para><emphasis>Extended Accounting&mdash;Project Commands</emphasis><deflist id="Z893783662janelle">
<colheads>
<head1>Command</head1><head2>Purpose</head2></colheads>
<deflistentry>
<term><command sectionref="3c">getdfltprojuser</command></term>
<listitem><para>Gets a user's default project ID.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="2">getprid</command></term>
<listitem><para>Gets a project ID.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="3c">getprojall</command></term>
<listitem><para>Enumerates all project IDs.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="3c">getprojuser</command></term>
<listitem><para>Enumerates a user's project ID.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="2">getspinfo</command></term>
<listitem><para>Gets service provider information.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1">newproj</command></term>
<listitem><para>Starts a shell with a new project ID, comparable to <command>newgrp</command>.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="3c">openproj/closeproj</command></term>
<listitem><para>Creates/destroys a <literal>PROJ</literal> token.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="4">project</command></term>
<listitem><para>Describes the project membership file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="5">projects</command></term>
<listitem><para>Provides an introduction to IRIX projects.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="4">projid</command></term>
<listitem><para>Describes the project name to project ID mapping file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="3c">projid/projname</command></term>
<listitem><para>Provides functions to convert between project names and project
IDs.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="2">setprid</command></term>
<listitem><para>Sets a project ID.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="2">setspinfo</command></term>
<listitem><para>Sets Service Provider information.</para>
</listitem></deflistentry>
</deflist></para>
<para></para>
<para><emphasis>IRIX CSA Commands</emphasis><deflist id="Z893784682janelle">
<colheads>
<head1>Command</head1><head2>Purpose</head2></colheads>
<deflistentry>
<term><command sectionref="1">chproj</command></term>
<listitem><para>Changes the project ID of disk files.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaaddc</command></term>
<listitem><para>Adds consolidated accounting records (<literal>cacct</literal>).</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaboots</command></term>
<listitem><para>Records system boot times for the accounting subsystem.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csabuild</command></term>
<listitem><para>Generates a sorted <literal>pacct</literal> file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csacon</command></term>
<listitem><para>Condenses a session record file into a <literal>cacct</literal>
file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaconfig</command></term>
<listitem><para>Searches the accounting configuration file for the specified
argument.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaconvert</command></term>
<listitem><para>Converts previous level accounting files into the current
level.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csacrep</command></term>
<listitem><para>Reports on consolidated accounting data.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csadrep</command></term>
<listitem><para>Reports daemon usage from the <literal>pacct</literal> file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaedit</command></term>
<listitem><para>Displays, verifies, and deletes records from various accounting
files.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csagcon</command></term>
<listitem><para>Generic accounting data consolidator for session and <literal>pacct</literal> files.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csagfef</command></term>
<listitem><para>Generic accounting front-end formatter.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1">csaja</command></term>
<listitem><para>Reports the user job accounting information.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csajrep</command></term>
<listitem><para>Prints a job report from the session record file.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaline</command></term>
<listitem><para>Preprocesses connect-time sessions.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csarecy</command></term>
<listitem><para>Recycles unfinished sessions into the next accounting run.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaswitch</command></term>
<listitem><para>Enables or disables process, daemon, and record accounting.</para>
</listitem></deflistentry>
<deflistentry>
<term><command sectionref="1m">csaverify</command></term>
<listitem><para>Checks accounting records for valid data.</para>
</listitem></deflistentry>
</deflist></para>
</section>
</chapter>
<?Pub *0000413583>

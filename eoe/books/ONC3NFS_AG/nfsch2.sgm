<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="2"><TITLE><XREFTARGET ID="14518">Planning ONC3/NFS Service</TITLE><PARAGRAPH>To plan the ONC3/NFS service for your environment, it is important to understand how ONC3/NFS processes work and how they can be configured. This chapter provides prerequisite information on ONC3/NFS processes and their configuration options. It also explains the conditions under which certain options are recommended.</PARAGRAPH>
<PARAGRAPH>This chapter explores these variables in the following sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="12193" TYPE="TITLE">&ldquo;File System Export Process&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="14643" TYPE="TITLE">&ldquo;/etc/fstab Mount Process&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="99067" TYPE="TITLE">&ldquo;Automatic Mount Process&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="33373" TYPE="TITLE">&ldquo;Planning a CacheFS File System&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="12193">File System Export Process</TITLE><PARAGRAPH>Access to files on an NFS server is provided by means of the <INDEXTARGET ID="nfsch21"><!-- POSTPROCESSDATA: nfsch21|exported filesystems:<COMMAND>exportfs</COMMAND> command. <ITALICS>See exportfs</ITALICS> command. --><INDEXTARGET ID="nfsch22"><!-- POSTPROCESSDATA: nfsch22|<ITALICS>/etc/init.d/network</ITALICS> script --><INDEXTARGET ID="nfsch23"><!-- POSTPROCESSDATA: nfsch23|exported filesystems:local to server --><INDEXTARGET ID="nfsch24"><!-- POSTPROCESSDATA: nfsch24|<ITALICS>exportfs</ITALICS> command --><COMMAND>exportfs</COMMAND> command (see the <REFPAGE>exportfs(1M)</REFPAGE> reference page). The <COMMAND>exportfs</COMMAND> command reads the file <FILENAME>/etc/exports</FILENAME> for a list of file systems and directories to be exported from the server to NFS clients. Normally, <COMMAND>exportfs</COMMAND> is executed at system startup by the <FILENAME>/etc/init.d/network</FILENAME> script. It can also be executed by the superuser from a command line while the server is running. Exported file systems must be local to the server. A file system that is NFS-mounted from another server cannot be exported (see <XREF IDREF="57726" TYPE="TITLE">&ldquo;NFS Mount Restrictions&rdquo; in Chapter&nbsp;1</XREF> regarding <ITALICS>multihop</ITALICS>).</PARAGRAPH>
<PARAGRAPH>This section describes various aspects of the export process in the following subsections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="30232" TYPE="TITLE">&ldquo;Customizing exportfs&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="26813" TYPE="TITLE">&ldquo;Operation of /etc/exports and Other Export Files&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="24611" TYPE="TITLE">&ldquo;/etc/exports Options&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="72712" TYPE="TITLE">&ldquo;Sample /etc/exports File&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="65198" TYPE="TITLE">&ldquo;Efficient Exporting&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="30232">Customizing exportfs</TITLE><PARAGRAPH>The <COMMAND>exportfs</COMMAND> command has several options used to configure its operation. Four of these options are briefly described below. For more complete information on <COMMAND>exportfs</COMMAND> options, see the <REFPAGE>exportfs(1M)</REFPAGE> reference page.</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;a</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(all) Export all resources listed in <INDEXTARGET ID="nfsch25"><!-- POSTPROCESSDATA: nfsch25|<ITALICS>/etc/exports</ITALICS> file --><FILENAME>/etc/exports</FILENAME>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;i</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(ignore) Do not use the options set in the <FILENAME>/etc/exports</FILENAME> file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;u</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(unexport) Terminate exporting designated resources.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;v</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(verbose) Display any output messages during execution.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>Invoking <COMMAND>exportfs</COMMAND> without options reports the file systems that are currently exported.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Operation of <XREFTARGET ID="26813">/etc/exports and Other Export Files</TITLE><PARAGRAPH>Exporting starts when <INDEXTARGET ID="nfsch26"><!-- POSTPROCESSDATA: nfsch26|<ITALICS>/etc/xtab</ITALICS> file --><COMMAND>exportfs</COMMAND> reads the file <FILENAME>/etc/exports</FILENAME> for a list of file systems and directories to be exported from the server. As it executes, <COMMAND>exportfs</COMMAND> writes a list of file systems it successfully exported, and information on how they were exported, in the <FILENAME>/etc/xtab</FILENAME> file. Anytime the <FILENAME>/etc/exports</FILENAME> file is changed, <COMMAND>exportfs</COMMAND> must be executed to update the <FILENAME>/etc/xtab</FILENAME> file. If an entry is not listed in <FILENAME>/etc/xtab</FILENAME>, it has not been exported, even if it is listed in <FILENAME>/etc/exports</FILENAME>.</PARAGRAPH>
<PARAGRAPH>In addition to the <INDEXTARGET ID="nfsch27"><!-- POSTPROCESSDATA: nfsch27|<ITALICS>/etc/rmtab</ITALICS> file --><INDEXTARGET ID="nfsch28"><!-- POSTPROCESSDATA: nfsch28|<ITALICS>showmount</ITALICS> command --><FILENAME>/etc/xtab</FILENAME> file, the server maintains a record of the exported resources that are currently mounted and the names of clients that have mounted them. The record is maintained in a file called <FILENAME>/etc/rmtab</FILENAME>. Each time a client mounts a directory, an entry is added to the server's <FILENAME>/etc/rmtab</FILENAME> file. The entry is removed when the directory is unmounted. The information contained in the <FILENAME>/etc/rmtab</FILENAME> file can be viewed using the <COMMAND>showmount</COMMAND> command.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The information in <FILENAME>/etc/rmtab</FILENAME> may not be current, since clients can unmount file systems without informing the server.</NOTE>
<SECTION3 LBL="" HELPID = ""><TITLE><FILENAME><XREFTARGET ID="24611"></FILENAME>/etc/exports Options</TITLE><PARAGRAPH>There are a number of export options for managing the export process. Some commonly used export options are briefly described below. For a complete explanation of options, see the <INDEXTARGET ID="nfsch29"><!-- POSTPROCESSDATA: nfsch29|exported filesystems:export options --><INDEXTARGET ID="nfsch210"><!-- POSTPROCESSDATA: nfsch210|export options --><REFPAGE>exports(4)</REFPAGE> reference page.</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>ro</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(read only) Export this file system with read-only privileges.<INDEXTARGET ID="nfsch211"><!-- POSTPROCESSDATA: nfsch211|<BOLD>ro</BOLD> export option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>rw</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(read, write) Export this file system with read and write privileges. <INDEXTARGET ID="nfsch212"><!-- POSTPROCESSDATA: nfsch212|<BOLD>rw</BOLD> export option --><CMDLINEOPT>rw</CMDLINEOPT> is the default.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>rw=</CMDLINEOPT><SCREENDISPLAY></SCREENDISPLAY>
</HANGITEM>
<HANGBODY><PARAGRAPH><SCREENDISPLAY></SCREENDISPLAY>(read mostly) Export this file system read-only to all clients except those listed.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>Directories are exported either <CMDLINEOPT>ro</CMDLINEOPT>&space;or <CMDLINEOPT>rw</CMDLINEOPT>, not both ways. The option specified first is used.</NOTE>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>anon=</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(anonymous UID) If a request comes from the user root (UID = 0), use the specified UID as the effective UID instead. By default, the effective UID is nobody (UID = &ndash;2). Specifying a UID of &ndash;1 disables access by unknown users or by root on a host not specified by the <INDEXTARGET ID="nfsch213"><!-- POSTPROCESSDATA: nfsch213|<BOLD>anon</BOLD> export option --><CMDLINEOPT>root</CMDLINEOPT> option. Use the <CMDLINEOPT>root</CMDLINEOPT> option to permit accesses by the user root.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>root=</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Give superuser privileges to root users of NFS-mounted directories on systems specified in <INDEXTARGET ID="nfsch214"><!-- POSTPROCESSDATA: nfsch214|<BOLD>root</BOLD> export option --><CMDLINEOPT>root</CMDLINEOPT> access list. By default, <CMDLINEOPT>root</CMDLINEOPT> is set to <CMDLINEOPT>none</CMDLINEOPT>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>access=</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Grant mount privileges to a specified list of clients only. Clients can be listed individually or as an NIS netgroup (see <INDEXTARGET ID="nfsch215"><!-- POSTPROCESSDATA: nfsch215|<BOLD>access</BOLD> export option --><INDEXTARGET ID="nfsch216"><!-- POSTPROCESSDATA: nfsch216|netgroups --><REFPAGE>netgroup(4)</REFPAGE>).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>nohide</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(IRIX enhancement) By default, the contents of a child file system are hidden when only the parent file system is mounted. Allow access to this file system without performing a separate mount if its parent file system is mounted.<INDEXTARGET ID="nfsch217"><!-- POSTPROCESSDATA: nfsch217|<BOLD>nohide</BOLD> export option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>wsync</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(IRIX enhancement for NFS2 only) Perform all write operations to disk before sending an acknowledgment to the client. Overrides delayed writes. (See <INDEXTARGET ID="nfsch218"><!-- POSTPROCESSDATA: nfsch218|<BOLD>wsync</BOLD> export option --><INDEXTARGET ID="nfsch219"><!-- POSTPROCESSDATA: nfsch219|synchronous writes --><XREF IDREF="39875" TYPE="TITLE">&ldquo;NFS Input/Output Management&rdquo; in Chapter&nbsp;1</XREF> for details.)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>32bitclients</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Causes the server to mask off the high-order 32 bits of directory cookies in NFS3 directory operations. This option may be required when clients run 32-bit operating systems such as IRIX 5.3.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>When a file system or directory is exported without specifying options, the default options are <CMDLINEOPT>rw</CMDLINEOPT> and <CMDLINEOPT>anon=nobody</CMDLINEOPT>.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="72712">Sample /etc/exports File</TITLE><PARAGRAPH>A default version of the <FILENAME>/etc/exports</FILENAME> file is shipped with NFS software and stored in <FILENAME>/etc/exports</FILENAME> when NFS is installed. You must add your own entries to the default version as part of the NFS setup procedure (given in <XREF IDREF="33183" TYPE="TITLE">&ldquo;Setting Up the NFS Server&rdquo; in Chapter&nbsp;4</XREF>). This sample <FILENAME>/etc/exports</FILENAME> illustrates entries and how to structure them with various options:</PARAGRAPH>
<CODE>
/dev/root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-ro
/reports&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-access=finance,rw=susan,nohide&lbreak;/usr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-nohide&lbreak;/usr/demos&nbsp;&nbsp;&nbsp;&nbsp;-nohide,ro,access=client1:client2:client3&lbreak;/usr/catman&nbsp;&nbsp;&nbsp;-nohide
</CODE>
<PARAGRAPH>In this sample <FILENAME>/etc/exports</FILENAME>, the first entry exports the root directory (/) with read-only privileges. The second entry exports a separate file system, <FILENAME>/reports,</FILENAME> read-only to the netgroup finance, with write permission specified for susan. Users who mount the root directory can access the <FILENAME>/reports</FILENAME>, <FILENAME>/usr</FILENAME>, <FILENAME>/usr/demo</FILENAME> and <FILENAME>/usr/catman </FILENAME>file systems (if they are in finance) because <CMDLINEOPT>nohide</CMDLINEOPT> is specified.</PARAGRAPH>
<PARAGRAPH>The fourth entry uses the access list option. It specifies that client1, client2, and client3 are authorized to access <FILENAME>/usr/demos</FILENAME> with read-only privileges. To avoid possible problems, client1, client2, and client3 should be fully qualified domain names.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>If you are using an access list to export to a client with multiple network interfaces, the <FILENAME>/etc/exports</FILENAME> file must contain all names associated with the client's interfaces. For example, a client named <ITALICS>octopus</ITALICS> with two interfaces needs two entries in the <FILENAME>/etc/exports</FILENAME> file, typically <ITALICS>octopus</ITALICS> and <ITALICS>gate-octopus</ITALICS>. </NOTE>
<PARAGRAPH>The fifth entry is an example of an open file system. It exports <FILENAME>/usr/catman</FILENAME> to the entire world with read-write access (the default when neither <CMDLINEOPT>ro</CMDLINEOPT> or <CMDLINEOPT>rw</CMDLINEOPT> is specified) to its contents. </PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="65198">Efficient Exporting </TITLE><PARAGRAPH>Consider these suggestions for setting up exports on your NFS service:<INDEXTARGET ID="nfsch220"><!-- POSTPROCESSDATA: nfsch220|exported filesystems:recommendations --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Use the <CMDLINEOPT>ro</CMDLINEOPT> option unless clients must write to files. This reduces accidental removal or changes to data.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>In secure installations, set <INDEXTARGET ID="nfsch221"><!-- POSTPROCESSDATA: nfsch221|secure installations --><INDEXTARGET ID="nfsch222"><!-- POSTPROCESSDATA: nfsch222|<BOLD>anon</BOLD> export option --><CMDLINEOPT>anon</CMDLINEOPT> to <CMDLINEOPT>&ndash;1</CMDLINEOPT> to disable root on any client (except those specified in the <CMDLINEOPT>root</CMDLINEOPT> option) from accessing the designated directory as root.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Be cautious with your use of the <INDEXTARGET ID="nfsch223"><!-- POSTPROCESSDATA: nfsch223|<BOLD>root</BOLD> export option --><CMDLINEOPT>root</CMDLINEOPT> option.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are using NIS, consider using netgroups for long <INDEXTARGET ID="nfsch224"><!-- POSTPROCESSDATA: nfsch224|<BOLD>access</BOLD> export option --><INDEXTARGET ID="nfsch225"><!-- POSTPROCESSDATA: nfsch225|NIS:netgroups for access lists --><INDEXTARGET ID="nfsch226"><!-- POSTPROCESSDATA: nfsch226|netgroups --><CMDLINEOPT>access</CMDLINEOPT> lists.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Use <INDEXTARGET ID="nfsch227"><!-- POSTPROCESSDATA: nfsch227|<BOLD>nohide</BOLD> export option --><CMDLINEOPT>nohide</CMDLINEOPT> to export related but separate file systems to minimize the number of mounts clients must perform.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Use <INDEXTARGET ID="nfsch228"><!-- POSTPROCESSDATA: nfsch228|<BOLD>wsync</BOLD> export option --><INDEXTARGET ID="nfsch229"><!-- POSTPROCESSDATA: nfsch229|synchronous writes --><CMDLINEOPT>wsync</CMDLINEOPT> when minimizing risk to data is more important than optimizing performance (NFS2 only).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are serving NFS3 to Solaris, IRIX 5.3, or other clients with 32-bit operating systems, you may need the <CMDLINEOPT>32bitclients</CMDLINEOPT> option.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="14643">/etc/fstab Mount Process</TITLE><PARAGRAPH>An NFS client mounts directories at startup via <INDEXTARGET ID="nfsch230"><!-- POSTPROCESSDATA: nfsch230|<ITALICS>mount</ITALICS> command:how invoked --><INDEXTARGET ID="nfsch231"><!-- POSTPROCESSDATA: nfsch231|mounting:process description --><INDEXTARGET ID="nfsch232"><!-- POSTPROCESSDATA: nfsch232|<ITALICS>mount</ITALICS> command:mount process description --><FILENAME>/etc/fstab</FILENAME> entries, or by executing the <COMMAND>mount</COMMAND> command. The <COMMAND>mount</COMMAND> command can be executed during the client's boot sequence, from a command line entry, or graphically, using the System Manager tool. The <COMMAND>mount</COMMAND> command supports the NFS3 protocol if that protocol is also running on the server.</PARAGRAPH>
<PARAGRAPH>Mounts must reference directories that are exported by a network server and mount points that exist on the client. Directories that serve as mount points may or may not be empty. If using the System Manager for NFS mounting, the mount points must be empty. If the directory is not empty, the original contents are hidden and inaccessible while the NFS resources remain mounted.<INDEXTARGET ID="nfsch233"><!-- POSTPROCESSDATA: nfsch233|mounting:exported directories --><INDEXTARGET ID="nfsch234"><!-- POSTPROCESSDATA: nfsch234|mount points:empty or not? --><INDEXTARGET ID="nfsch235"><!-- POSTPROCESSDATA: nfsch235|mounting:mount point directories --></PARAGRAPH>
<PARAGRAPH>This section discusses aspects of the <FILENAME>/etc/fstab</FILENAME> mount process in these subsections: </PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="31713" TYPE="TITLE">&ldquo;Customizing mount and umount Commands&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="56149" TYPE="TITLE">&ldquo;Operation of /etc/fstab and Other Mount Files&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="24414" TYPE="TITLE">&ldquo;/etc/fstab Options&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="62634" TYPE="TITLE">&ldquo;Sample /etc/fstab File&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="49411" TYPE="TITLE">&ldquo;Efficient Mounting with /etc/fstab&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE>Customizing <COMMAND><XREFTARGET ID="31713"></COMMAND>mount and umount Commands</TITLE><PARAGRAPH>The <INDEXTARGET ID="nfsch236"><!-- POSTPROCESSDATA: nfsch236|<ITALICS>mount</ITALICS> command:options --><INDEXTARGET ID="nfsch237"><!-- POSTPROCESSDATA: nfsch237|<ITALICS>unmount</ITALICS> command --><COMMAND>mount</COMMAND> and <COMMAND>umount</COMMAND> commands have many options for customizing mounting and unmounting that can apply to either XFS or NFS file systems. Several commonly-used options are briefly described below in their NFS context (see <REFPAGE>mount(1M)</REFPAGE> for full details).</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;t</CMDLINEOPT>&space;<VARIABLE>type</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>(type) Set the type of directories to be mounted or unmounted. <VARIABLE>type</VARIABLE> can be <CMDLINEOPT>nfs2</CMDLINEOPT> for NFS2 mounting, <CMDLINEOPT>nfs3</CMDLINEOPT> for the NFS3 protocol, and <CMDLINEOPT>nfs</CMDLINEOPT> and <CMDLINEOPT>nfs3pref</CMDLINEOPT> for mounts that attempt the NFS3 protocol, but fall back to <CMDLINEOPT>nfs2</CMDLINEOPT> if the attempt fails. The mount command, by default, uses <CMDLINEOPT>nfs3pref</CMDLINEOPT>. To mount NFS3, the server must support NFS3.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;a</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(all) Attempt to mount all directories listed in <INDEXTARGET ID="nfsch238"><!-- POSTPROCESSDATA: nfsch238|<ITALICS>/etc/mtab</ITALICS> file --><FILENAME>/etc/fstab</FILENAME>, or unmount all directories listed in <FILENAME>/etc/mtab</FILENAME>. If a filesystem type has been specified with the <CMDLINEOPT>-t</CMDLINEOPT> option, all filesystems of that type are mounted or unmounted.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;h</CMDLINEOPT>&space;<VARIABLE>hostname</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>(host) Attempt to mount all directories listed in <FILENAME>/etc/fstab</FILENAME> that are remote-mounted from the server <VARIABLE>hostname</VARIABLE>, or unmount directories listed in <FILENAME>/etc/mtab</FILENAME> that are remote-mounted from server <VARIABLE>hostname</VARIABLE>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-b</CMDLINEOPT>&space;<VARIABLE>list</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>(all but) Attempt to mount or unmount all file systems listed in <FILENAME>/etc/fstab</FILENAME> except those associated with the directories in <VARIABLE>list</VARIABLE>. <VARIABLE>list</VARIABLE> contains one or more comma-separated directory names.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;o</CMDLINEOPT>&space;<VARIABLE>options</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>(options) Use these options, instead of the options in <FILENAME>/etc/fstab</FILENAME>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="56149">Operation of /etc/fstab and Other Mount Files</TITLE><PARAGRAPH>Mounting typically occurs when the<INDEXTARGET ID="nfsch239"><!-- POSTPROCESSDATA: nfsch239|<ITALICS>/etc/fstab</ITALICS> file --><COMMAND>&space;mount</COMMAND> command reads the <FILENAME>/etc/fstab</FILENAME> file. Each NFS entry in <FILENAME>/etc/fstab</FILENAME> contains up to six fields. An NFS entry has this format:</PARAGRAPH>
<PARAGRAPH><VARIABLE>file_system</VARIABLE>&space;<VARIABLE>directory</VARIABLE>&space;<VARIABLE>type</VARIABLE>&space;<VARIABLE>options</VARIABLE>&space;<VARIABLE>frequency</VARIABLE>&space;<VARIABLE>pass</VARIABLE></PARAGRAPH>
<PARAGRAPH>where:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><VARIABLE>file_system</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>is the remote server directory to be mounted.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>directory</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>is the mount point on the client where the directory is attached.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>type</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>is the file system type. This can be <CMDLINEOPT>nfs2</CMDLINEOPT> for NFS2 mounting, <CMDLINEOPT>nfs3</CMDLINEOPT> for the NFS3 protocol, and <CMDLINEOPT>nfs</CMDLINEOPT> and <CMDLINEOPT>nfs3pref</CMDLINEOPT> for mounts that attempt the NFS3 protocol, but fall back to <CMDLINEOPT>nfs2</CMDLINEOPT> if the attempt fails. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>options</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>is mount options (see <XREF IDREF="24414" TYPE="TITLE">&ldquo;/etc/fstab Options&rdquo;</XREF> in this chapter).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>frequency</ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>is always set to zero (0) for NFS and CacheFS entries.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>pass</ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>is always set to zero (0) for NFS and CacheFS entries.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The <COMMAND>mount</COMMAND> command maintains a list of successfully mounted directories in the file<FILENAME>&space;/etc/mtab</FILENAME>. When <FILENAME>mount</FILENAME> successfully completes a task, it automatically updates the <FILENAME>/etc/mtab</FILENAME> file. It removes the <FILENAME>/etc/mtab</FILENAME> entry when the directory is unmounted. The contents of the <FILENAME>/etc/mtab</FILENAME> file can be viewed using the <COMMAND>mount</COMMAND> command without any options. See the <REFPAGE>mount(1M)</REFPAGE> reference page for more details.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE><ITALICS><XREFTARGET ID="24414"></ITALICS>/etc/fstab Options</TITLE><PARAGRAPH>There are several options for configuring mounts. When you use these options, it is important to understand that export options (specified on a server) override mount options, in the sense that the more restrictive options take precedence. NFS <INDEXTARGET ID="nfsch240"><!-- POSTPROCESSDATA: nfsch240|mounting:options --><FILENAME>/etc/fstab</FILENAME>&space;options are briefly described below (see the<REFPAGE>&space;fstab(4)</REFPAGE> reference page for complete information):</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>ro</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Read-only permissions are set for files in this directory. <INDEXTARGET ID="nfsch241"><!-- POSTPROCESSDATA: nfsch241|<BOLD>ro</BOLD> mount option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>rw</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Read write permissions are set for files in this directory (default). <INDEXTARGET ID="nfsch242"><!-- POSTPROCESSDATA: nfsch242|<BOLD>rw</BOLD> mount option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>hard</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Specifies how the client should handle access attempts if the server fails. If the NFS server fails while a directory is hard-mounted, the client keeps trying to complete the current NFS operation until the server responds (default).<INDEXTARGET ID="nfsch243"><!-- POSTPROCESSDATA: nfsch243|failure:of server --><INDEXTARGET ID="nfsch244"><!-- POSTPROCESSDATA: nfsch244|<BOLD>hard</BOLD> mount option --><INDEXTARGET ID="nfsch245"><!-- POSTPROCESSDATA: nfsch245|hard-mounted filesystems --><INDEXTARGET ID="nfsch246"><!-- POSTPROCESSDATA: nfsch246|soft-mounted filesystems --><INDEXTARGET ID="nfsch247"><!-- POSTPROCESSDATA: nfsch247|mounting:hard mounts --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>soft</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Alternative to hard mounting. If the NFS server fails while a directory is soft-mounted, the client attempts a limited number of tries to complete the current NFS operation before returning an error.<INDEXTARGET ID="nfsch248"><!-- POSTPROCESSDATA: nfsch248|<BOLD>soft</BOLD> mount option --><INDEXTARGET ID="nfsch249"><!-- POSTPROCESSDATA: nfsch249|mounting:soft mounts --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>nointr</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(non-interruptible) Disallows NFS operations to be interrupted by users. The default setting is <INDEXTARGET ID="nfsch250"><!-- POSTPROCESSDATA: nfsch250|<BOLD>nointr</BOLD> mount option --><CMDLINEOPT>off</CMDLINEOPT> (that is, interruptible).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>bg</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(background) Mounting is performed as a background task if the first attempt fails. The default setting is <INDEXTARGET ID="nfsch251"><!-- POSTPROCESSDATA: nfsch251|<BOLD>bg</BOLD> mount option --><CMDLINEOPT>off</CMDLINEOPT>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>fg</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(foreground) Mounting is performed as a foreground task. The default setting is <INDEXTARGET ID="nfsch252"><!-- POSTPROCESSDATA: nfsch252|<BOLD>fg</BOLD> mount option --><CMDLINEOPT>on</CMDLINEOPT>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>private</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(IRIX enhancement) Uses local file and record locking instead of a remote lock manager and minimizes delayed write flushing. Diskless clients are the primary users of this option. <INDEXTARGET ID="nfsch253"><!-- POSTPROCESSDATA: nfsch253|<BOLD>private</BOLD> mount option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>proto</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Specifies the protocol that NFS uses. Available options are <INDEXTARGET ID="nfsch254"><!-- POSTPROCESSDATA: nfsch254|<BOLD>proto</BOLD> mount option --><CMDLINEOPT>udp</CMDLINEOPT> and <CMDLINEOPT>tcp</CMDLINEOPT>. The default setting is <CMDLINEOPT>udp</CMDLINEOPT>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>rsize</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(read size) Changes the read buffer to the size specified (default is 8K for NFS2, 32K for NFS3).<INDEXTARGET ID="nfsch255"><!-- POSTPROCESSDATA: nfsch255|<BOLD>rsize</BOLD> mount option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>wsize</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(write size) Changes the write buffer to the size specified (default is 8K for NFS2, 32K for NFS3).<INDEXTARGET ID="nfsch256"><!-- POSTPROCESSDATA: nfsch256|<BOLD>wsize</BOLD> mount option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>timeo</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(NFS timeout) Sets a new timeout limit (default is <INDEXTARGET ID="nfsch257"><!-- POSTPROCESSDATA: nfsch257|<BOLD>timeo</BOLD> mount option --><INDEXTARGET ID="nfsch258"><!-- POSTPROCESSDATA: nfsch258|timeout limit --><CMDLINEOPT>.11</CMDLINEOPT> seconds.)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>retrans</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>(retransmit) Specifies an alternative to the number of times NFS operations are retried (default is <INDEXTARGET ID="nfsch259"><!-- POSTPROCESSDATA: nfsch259|<BOLD>retrans</BOLD> mount option --><CMDLINEOPT>5</CMDLINEOPT>).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>port</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Specifies an alternative UDP port number for NFS on the server (default port number is <INDEXTARGET ID="nfsch260"><!-- POSTPROCESSDATA: nfsch260|<BOLD>port</BOLD> mount option --><CMDLINEOPT>2049</CMDLINEOPT>).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>noauto</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Tells <INDEXTARGET ID="nfsch261"><!-- POSTPROCESSDATA: nfsch261|<BOLD>noauto</BOLD> mount option --><INDEXTARGET ID="nfsch262"><!-- POSTPROCESSDATA: nfsch262|<ITALICS>mount</ITALICS> command:ignoring <ITALICS>fstab</ITALICS> entries --><COMMAND>mount</COMMAND>&space;<COMMAND>&ndash;a</COMMAND> to ignore this <FILENAME>/etc/fstab</FILENAME> entry.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>grpid</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Allows files created in a file system to have the parent directory's group ID, not the process' group ID.<INDEXTARGET ID="nfsch263"><!-- POSTPROCESSDATA: nfsch263|<BOLD>grpid</BOLD> mount option --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>nosuid</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Turns setuid execution off for nonsuperusers (default is <INDEXTARGET ID="nfsch264"><!-- POSTPROCESSDATA: nfsch264|<BOLD>nosuid</BOLD> mount option --><CMDLINEOPT>off</CMDLINEOPT>).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>nodev</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Disallows access to character and block special files (default is <INDEXTARGET ID="nfsch265"><!-- POSTPROCESSDATA: nfsch265|<BOLD>nodev</BOLD> mount option --><CMDLINEOPT>off</CMDLINEOPT>).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>vers=</CMDLINEOPT><VARIABLE>n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Use NFS protocol version <VARIABLE>n</VARIABLE> (accepted values are 2, 3). For example use <CMDLINEOPT>vers=2</CMDLINEOPT> to specify NFS2. By default, NFS3 is tried; if the mount is unsuccessful, NFS2 is then tried.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>In addition to these options, <INDEXTARGET ID="nfsch266"><!-- POSTPROCESSDATA: nfsch266|attribute caching --><FILENAME>/etc/fstab</FILENAME> also offers several options dedicated to attribute caching. Using these options, you can direct NFS to cache file attributes, such as size and ownership, to avoid unnecessary network activity. See the<REFPAGE>&space;fstab(4)</REFPAGE> reference page for more details.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="62634">Sample /etc/fstab File</TITLE><PARAGRAPH>NFS entries in <FILENAME>/etc/fstab</FILENAME> are designated by the <CMDLINEOPT>nfs</CMDLINEOPT> identifier, while XFS (local file systems) entries are designated by<CMDLINEOPT>&space;xfs</CMDLINEOPT>. This sample <FILENAME>/etc/fstab</FILENAME> file includes a typical NFS entry:</PARAGRAPH>
<CODE>
/dev/root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xfs rw,raw=/dev/rroot 0 0&lbreak;redwood:/usr/demos&nbsp;&nbsp;/n/demos&nbsp;&nbsp;nfs ro,bg 0 0
</CODE>
<PARAGRAPH>In this example, the NFS directory <FILENAME>/usr/demos</FILENAME> on server redwood is mounted at mount point <FILENAME>/n/demos</FILENAME> on the client system with read-only (<CMDLINEOPT>ro</CMDLINEOPT>) permissions (see <XREF IDREF="32513" TYPE="GRAPHIC">Figure&nbsp;1-2</XREF>). Mounting executes as a background task (<CMDLINEOPT>bg</CMDLINEOPT>) if it didn't succeed the first time. By default, if the server fails after the mount has taken place, the client attempts to complete any NFS transactions indefinitely (<CMDLINEOPT>hard</CMDLINEOPT>) or until it receives an interrupt.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="49411">Efficient Mounting with /etc/fstab</TITLE><PARAGRAPH>Some recommendations for<INDEXTARGET ID="nfsch267"><!-- POSTPROCESSDATA: nfsch267|mounting:recommendations --><FILENAME>&space;/etc/fstab</FILENAME> mounting are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Use conventional mounting for clients that are inoperable without NFS directories (such as diskless workstations) and for directories that need to be mounted most of the time.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The <INDEXTARGET ID="nfsch268"><!-- POSTPROCESSDATA: nfsch268|<BOLD>nointr</BOLD> mount option --><CMDLINEOPT>intr</CMDLINEOPT> option is no longer needed. Specify <CMDLINEOPT>nointr</CMDLINEOPT> if NFS operations are not to be interrupted.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The <INDEXTARGET ID="nfsch269"><!-- POSTPROCESSDATA: nfsch269|<BOLD>bg</BOLD> mount option --><CMDLINEOPT>bg</CMDLINEOPT> option should always be specified to expedite the boot process if a server is unavailable when the client is booting. In other words, a client hangs until the server comes back up unless you specify <CMDLINEOPT>bg</CMDLINEOPT>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you use <INDEXTARGET ID="nfsch270"><!-- POSTPROCESSDATA: nfsch270|<BOLD>nohide</BOLD> export option --><CMDLINEOPT>nohide</CMDLINEOPT> when exporting file systems on the server, the client can mount the top-most directory in the exported file system hierarchy. This gives access to all related file systems while reducing individual mount calls and the complexity of the <FILENAME>/etc/fstab</FILENAME> file.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Use <INDEXTARGET ID="nfsch271"><!-- POSTPROCESSDATA: nfsch271|<BOLD>private</BOLD> mount option --><CMDLINEOPT>private</CMDLINEOPT> when the NFS directory on the server is not shared among multiple NFS clients.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Do not put NFS mount points in the root (<FILENAME>/</FILENAME>) directory of a client. Mount points in the root directory can slow the performance of the client and can cause the client to be unusable when the server is unavailable.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="99067">Automatic Mount Process</TITLE><PARAGRAPH>The automatic mounters (<INDEXTARGET ID="nfsch272"><!-- POSTPROCESSDATA: nfsch272|automatic mounters:process description --><COMMAND>automount</COMMAND> and <COMMAND>autofs</COMMAND>) dynamically mount NFS directories on a client when a user references the directory. They can be set up to execute when a client is booted, or can be executed by the superuser from a command line while the client is running.</PARAGRAPH>
<PARAGRAPH>To start an automatic mounter at boot time, either the <INDEXTARGET ID="nfsch273"><!-- POSTPROCESSDATA: nfsch273|<ITALICS>chkconfig</ITALICS> command:automatic mounters flag --><INDEXTARGET ID="nfsch274"><!-- POSTPROCESSDATA: nfsch274|<ITALICS>/etc/init.d/network</ITALICS> script --><INDEXTARGET ID="nfsch275"><!-- POSTPROCESSDATA: nfsch275|<ITALICS>/etc/config/automount.options</ITALICS> file<ITALICS>/etc/config/autofs.options</ITALICS> file --><COMMAND>automount</COMMAND> or <COMMAND>autofs</COMMAND> flag must be set to <CMDLINEOPT>on</CMDLINEOPT> (see the <REFPAGE>chkconfig(1M)</REFPAGE> reference page for details). If the flag is <CMDLINEOPT>on</CMDLINEOPT>, the automatic mounter is invoked by the <COMMAND>/etc/init.d/network</COMMAND> script and started with any <COMMAND>automount</COMMAND> or <COMMAND>autofs</COMMAND> options specified in the <FILENAME>/etc/config/automount.options</FILENAME> or <FILENAME>/etc/config/autofs.options</FILENAME> file, respectively.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX><COMMAND>autofs</COMMAND> and <COMMAND>automount</COMMAND> cannot co-exist on the same system. If both are <COMMAND>chkconfig</COMMAND>'d on, <COMMAND>autofs</COMMAND> is configured.</NOTE>
<PARAGRAPH>This section discusses aspects of the automounter commands in these subsections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="45930" TYPE="TITLE">&ldquo;Customizing automount Commands&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="48046" TYPE="TITLE">&ldquo;autofsd and autofs Command Options&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="22306" TYPE="TITLE">&ldquo;Operation of Automatic Mounter Files and Maps&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="58578" TYPE="TITLE">&ldquo;About Automatic Mounter Map Types&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="23135" TYPE="TITLE">&ldquo;Effective Automatic Mounting&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="45930">Customizing automount Commands</TITLE><PARAGRAPH>The <INDEXTARGET ID="nfsch276"><!-- POSTPROCESSDATA: nfsch276|<ITALICS>automount</ITALICS> command --><COMMAND>automount</COMMAND> command offers many options that allow you to configure its operation (for a complete description, see the <REFPAGE>automount(1M)</REFPAGE> reference page). Some commonly used options are:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;D</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Assign a value to an environment variable. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;f</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Read the specified local master file before the NIS master map.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;m</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Do not read the NIS master map.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;M</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Use the specified directory as the <COMMAND>automount</COMMAND> mount point.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;n</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Disable dynamic mounts.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;T</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Trace and display each NFS call.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;tl </CMDLINEOPT><VARIABLE>n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Maintain the mount for a specified duration of client inactivity (default duration is 5 minutes).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;tm </CMDLINEOPT><VARIABLE>n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Wait a specified interval between mount attempts (default interval is 30 seconds).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;tp </CMDLINEOPT><VARIABLE>n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Hold information about server availability in a cache for a specified time (default interval is 5 seconds).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;tw </CMDLINEOPT><VARIABLE>n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Wait a specified interval between attempts to unmount file systems that have exceeded cache time (default interval is 60 seconds).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;v</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Display any output messages during execution.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="48046">autofsd and autofs Command Options</TITLE><PARAGRAPH>The <COMMAND>autofs<INDEXTARGET ID="nfsch277"><!-- POSTPROCESSDATA: nfsch277|<ITALICS>autofs </ITALICS>command --></COMMAND> command installs AutoFS mount points and associates a map with each mount point. For a complete description, see the <REFPAGE>autofs(1M)</REFPAGE> reference page).</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>-t</CMDLINEOPT>&space;<VARIABLE>duration</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Specify a duration, in seconds, that the file system should remain mounted when not in use (default interval is 5 minutes).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-v</CMDLINEOPT> </HANGITEM>
<HANGBODY><PARAGRAPH>Display any output message during AutoFS mounts and unmounts.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH><COMMAND>autofsd</COMMAND> and <COMMAND>autofs</COMMAND> share the configuration options file <FILENAME>/etc/config/autofs.options</FILENAME>.</PARAGRAPH>
<PARAGRAPH>The<COMMAND>&space;autofsd<INDEXTARGET ID="nfsch278"><!-- POSTPROCESSDATA: nfsch278|<ITALICS>autofsd</ITALICS> command --></COMMAND> command answers filesystem mount requests and uses the local files or name service maps to locate the filesystems. For a complete description, see the <REFPAGE>autofsd(1M)</REFPAGE> reference page. Options for <COMMAND>autofsd </COMMAND>are:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>-m</CMDLINEOPT><VARIABLE>&space;n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Make <COMMAND>autofsd</COMMAND> multi-threaded. <ITALICS>n</ITALICS> is the number of threads available. The maximum number of threads available is 16.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-p</CMDLINEOPT><VARIABLE>&space;priority</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set process priority.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-tp</CMDLINEOPT>&space;<VARIABLE>duration</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Specify how long, in seconds, the return of a query of server availability will remain cached. The default is 5 seconds.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-v</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Log status messages to the console.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-D</CMDLINEOPT>&space;<VARIABLE>name=value</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Assign a value to the indicated AutoFS map substitution variable.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-T</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Trace each RPC call by expanding and displaying call output.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="22306">Operation of Automatic Mounter Files and Maps</TITLE><PARAGRAPH>Just as the conventional mount process reads <INDEXTARGET ID="nfsch279"><!-- POSTPROCESSDATA: nfsch279|<ITALICS>/etc/mtab</ITALICS> file --><FILENAME>/etc/fstab</FILENAME> and writes to <FILENAME>/etc/mtab</FILENAME>, <COMMAND>automount </COMMAND>and<COMMAND>&space;autofs </COMMAND>can be set up to read input files for mounting information. <COMMAND>automount</COMMAND> and <COMMAND>autofs</COMMAND> also record their mounts in the <FILENAME>/etc/mtab</FILENAME> file and remove <FILENAME>/etc/mtab</FILENAME> entries when they unmount directories.</PARAGRAPH>
<PARAGRAPH>Details of the automatic mounters <COMMAND>automount</COMMAND> and <COMMAND>autofs</COMMAND> are explained in these subsections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="39877" TYPE="TITLE">&ldquo;automount Files and Maps&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="90007" TYPE="TITLE">&ldquo;automount Mount Points&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="86641" TYPE="TITLE">&ldquo;autofs Files and Maps&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="48096" TYPE="TITLE">&ldquo;autofs Mount Points&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="39877">automount Files and Maps</TITLE><PARAGRAPH>By default, when <INDEXTARGET ID="nfsch280"><!-- POSTPROCESSDATA: nfsch280|<ITALICS>/etc/config/automount.options</ITALICS> file --><INDEXTARGET ID="nfsch281"><!-- POSTPROCESSDATA: nfsch281|automatic mounters:maps --><INDEXTARGET ID="nfsch282"><!-- POSTPROCESSDATA: nfsch282|maps:definition --><COMMAND>automount</COMMAND> executes at boot time, it reads the <FILENAME>/etc/config/automount.options</FILENAME> file for initial operating parameters. The information contained in the <FILENAME>/etc/config/automount.options</FILENAME> file can contain the complete information needed by the automounter or the information can direct <COMMAND>automount</COMMAND> to a set of files that contain customized automounting instructions. <FILENAME>/etc/config/automount.options</FILENAME> cannot have comments in it.</PARAGRAPH>
<PARAGRAPH>The default version of <FILENAME>/etc/config/automount.options</FILENAME> is:</PARAGRAPH>
<CODE>
-v /hosts -hosts -nosuid,nodev
</CODE>
<PARAGRAPH>This <INDEXTARGET ID="nfsch283"><!-- POSTPROCESSDATA: nfsch283|<ITALICS>/etc/exports</ITALICS> file --><INDEXTARGET ID="nfsch284"><!-- POSTPROCESSDATA: nfsch284|<ITALICS>/tmp_mnt</ITALICS> directory --><INDEXTARGET ID="nfsch285"><!-- POSTPROCESSDATA: nfsch285|host database --><FILENAME>/etc/config/automount.options</FILENAME> directs <COMMAND>automount</COMMAND> to execute with the verbose (<CMDLINEOPT>&ndash;v</CMDLINEOPT>) option. It also specifies that <COMMAND>automount</COMMAND> should use <FILENAME>/hosts</FILENAME> as its daemon mount point. When a user accesses a file or directory under <FILENAME>/hosts</FILENAME>, the <CMDLINEOPT>&ndash;hosts</CMDLINEOPT> argument directs <COMMAND>automount</COMMAND> to use the pathname component that follows <CMDLINEOPT>/hosts</CMDLINEOPT> as the name of the NFS server. All accessible file systems exported by the server are mounted to the default mount point <FILENAME>/tmp_mnt/hosts/hostname</FILENAME> with the <CMDLINEOPT>nosuid</CMDLINEOPT> and <CMDLINEOPT>nodev</CMDLINEOPT> options.</PARAGRAPH>
<PARAGRAPH>&space;For example, if the system redwood has the following entry in <FILENAME>/etc/exports</FILENAME>:</PARAGRAPH>
<CODE>
/
/usr 	-ro,nohide
</CODE>
<PARAGRAPH>And a client system is using the default <FILENAME>/etc/config/automount.options</FILENAME> file, as above, then executing the following command on the client lists the contents of the directory <FILENAME>/usr </FILENAME>on redwood:</PARAGRAPH>
<CODE>
ls -l /hosts/redwood/usr/*
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="90007">automount Mount Points</TITLE><PARAGRAPH>Mount points for <INDEXTARGET ID="nfsch286"><!-- POSTPROCESSDATA: nfsch286|mount points:for automatic mounters --><COMMAND>automount</COMMAND> serve the same function as mount points in conventional NFS mounting. They are the access point in the client's file system where a remote NFS directory is attached. There are two major differences between <COMMAND>automount</COMMAND>&space;mount points and conventional NFS mount points.</PARAGRAPH>
<PARAGRAPH>With<COMMAND>&space;automount</COMMAND>, mount points are automatically created and removed as needed by the <COMMAND>automount</COMMAND> program. When the <COMMAND>automount</COMMAND> program is started, it reads configuration information from <FILENAME>/etc/config/automount.options</FILENAME>, additional<COMMAND>&space;automount</COMMAND> maps, or both, and creates all mount points needed to support the specified configuration.</PARAGRAPH>
<PARAGRAPH>By default, <COMMAND>automount</COMMAND> mounts everything in the directory <FILENAME>/tmp_mnt</FILENAME> and creates a link between the mounted directory in <FILENAME>/tmp_mnt </FILENAME>and the accessed directory. For example, in the default configuration, mounts take place under <FILENAME>/tmp_mnt/hosts/</FILENAME><VARIABLE>hostname</VARIABLE>. The automounter creates a link from the access point <FILENAME>/hosts/</FILENAME><VARIABLE>hostname</VARIABLE> to the actual mount point under <FILENAME>/tmp_mnt/hosts/</FILENAME><VARIABLE>hostname</VARIABLE>. The command <COMMAND>ls /hosts/redwood/tmp</COMMAND> displays the contents of server redwood's <FILENAME>/tmp</FILENAME> directory. You can change the default root mount point with the <COMMAND>automount</COMMAND>&space;<COMMAND>&ndash;M</COMMAND> option. </PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="86641">autofs Files and Maps</TITLE><PARAGRAPH>By default, when <INDEXTARGET ID="nfsch287"><!-- POSTPROCESSDATA: nfsch287|<ITALICS>/etc/config/autofs.options</ITALICS> file --><INDEXTARGET ID="nfsch288"><!-- POSTPROCESSDATA: nfsch288|automatic mounters:maps --><INDEXTARGET ID="nfsch289"><!-- POSTPROCESSDATA: nfsch289|maps:definition --><COMMAND>autofs </COMMAND>executes at boot time, it reads the <FILENAME>/etc/config/autofs.options</FILENAME> and <FILENAME>/etc/auto_master</FILENAME> files for initial operating parameters. <FILENAME>/etc/config/autofs.options</FILENAME> cannot have comments in it.</PARAGRAPH>
<PARAGRAPH>The default version of <FILENAME>/etc/config/autofs.options</FILENAME> is:</PARAGRAPH>
<CODE>
-v 
</CODE>
<PARAGRAPH>This <INDEXTARGET ID="nfsch290"><!-- POSTPROCESSDATA: nfsch290|<ITALICS>/etc/exports</ITALICS> file --><INDEXTARGET ID="nfsch291"><!-- POSTPROCESSDATA: nfsch291|host database --><FILENAME>/etc/config/autofs.options</FILENAME> directs <COMMAND>autofs </COMMAND>to execute with the verbose (<CMDLINEOPT>&ndash;v</CMDLINEOPT>) option. </PARAGRAPH>
<PARAGRAPH>The default <COMMAND>/etc/auto_master</COMMAND> contains: </PARAGRAPH>
<CODE>
/hosts -hosts -nosuid,nodev
</CODE>
<PARAGRAPH>This file specifies that <COMMAND>autofs</COMMAND> should use <FILENAME>/hosts</FILENAME> as its daemon mount point. When a user accesses a file or directory under <FILENAME>/hosts</FILENAME>, the <CMDLINEOPT>&ndash;hosts</CMDLINEOPT> argument directs <COMMAND>autofs </COMMAND>to use the pathname component that follows <CMDLINEOPT>/hosts</CMDLINEOPT> as the name of the NFS server. All accessible file systems exported by the server are mounted to the default mount point <FILENAME>/hosts/hostname </FILENAME>with the <CMDLINEOPT>nosuid </CMDLINEOPT>and <CMDLINEOPT>nodev</CMDLINEOPT> options.</PARAGRAPH>
<PARAGRAPH>For example, if the system redwood has the following entries in <FILENAME>/etc/exports</FILENAME>:</PARAGRAPH>
<CODE>
/
/usr -ro,nohide
</CODE>
<PARAGRAPH>and a client system is using the default <FILENAME>/etc/auto_master</FILENAME> file, as above, then executing the following command on the client lists the contents of the directory <FILENAME>/usr </FILENAME>on redwood:</PARAGRAPH>
<CODE>
ls -l /hosts/redwood/usr/*
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="48096">autofs Mount Points</TITLE><PARAGRAPH>Mount points for <INDEXTARGET ID="nfsch292"><!-- POSTPROCESSDATA: nfsch292|mount points:for automatic mounters --><COMMAND>autofs</COMMAND> serve the same function as mount points in conventional NFS mounting. They are the access point in the client's file system where a remote NFS directory is attached. Noticeably different from <COMMAND>automount</COMMAND>, <COMMAND>autofs</COMMAND> performs mounts in place; it does not link <FILENAME>/hosts</FILENAME> with <FILENAME>/tmp_mnt</FILENAME>.</PARAGRAPH>
<PARAGRAPH>With AutoFS, mount points are automatically created and removed as needed by the <COMMAND>autofs</COMMAND> program. When the <COMMAND>autofs</COMMAND> program is started, it reads configuration information from <FILENAME>/etc/config/autofs.options</FILENAME>, additional<COMMAND>&space;autofs</COMMAND> maps, or both, and creates all mount points needed to support the specified configuration.</PARAGRAPH>
<PARAGRAPH>The <COMMAND>autofs</COMMAND> command installs AutoFS mount points and associates an AutoFS map with each mount point. The AutoFS file system monitors attempts to access directories within it and notifies the <COMMAND>autofsd</COMMAND> daemon. The daemon uses the map to locate a file system, and then mounts it at the point of reference within the AutoFS file system. Maps can be assigned to an AutoFS mount using an entry in the <FILENAME>/etc/auto_master</FILENAME> map or they can be combined in another map file referenced in an <FILENAME>/etc/auto_maste</FILENAME>r entry.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="58578">About Automatic Mounter Map Types</TITLE><PARAGRAPH>The <INDEXTARGET ID="nfsch293"><!-- POSTPROCESSDATA: nfsch293|maps:automatic mounters --><INDEXTARGET ID="nfsch294"><!-- POSTPROCESSDATA: nfsch294|maps:types --><INDEXTARGET ID="nfsch295"><!-- POSTPROCESSDATA: nfsch295|automatic mounters:map types --><COMMAND>automount</COMMAND> and <COMMAND>autofs</COMMAND> features use various maps, discussed in the following subsections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="62181" TYPE="TITLE">&ldquo;Master Maps for the Automatic Mounter&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="57329" TYPE="TITLE">&ldquo;Direct Maps for the Automatic Mounter&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="15197" TYPE="TITLE">&ldquo;Indirect Maps for the Automatic Mounter&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="62181">Master Maps for the Automatic Mounter</TITLE><PARAGRAPH>The master map is the first file read by the <INDEXTARGET ID="nfsch296"><!-- POSTPROCESSDATA: nfsch296|master maps --><INDEXTARGET ID="nfsch297"><!-- POSTPROCESSDATA: nfsch297|<ITALICS>/etc/auto.master</ITALICS> file<ITALICS>/etc/auto_master</ITALICS> file --><COMMAND>automount</COMMAND> or <COMMAND>autofs</COMMAND> program. There is only one master map on a client. It specifies the types of supported maps, the name of each map to be used, and options that apply to the entire map (if any). By convention, the master map is called <FILENAME>/etc/auto.master </FILENAME>with <COMMAND>automount</COMMAND> (but the name can be changed) and<FILENAME>&space;/etc/auto_master </FILENAME>with<COMMAND>&space;autofs </COMMAND>(this name cannot be changed). </PARAGRAPH>
<PARAGRAPH>With <COMMAND>automount</COMMAND>, for complex automatic mounter configurations, a master map can be specified in the <FILENAME>/etc/config/automount.options</FILENAME> file. For example, <FILENAME>/etc/config/automount.options</FILENAME> might contain:</PARAGRAPH>
<CODE>
-v -f /etc/auto.master
</CODE>
<PARAGRAPH>The <INDEXTARGET ID="nfsch298"><!-- POSTPROCESSDATA: nfsch298|NIS:and maps --><INDEXTARGET ID="nfsch299"><!-- POSTPROCESSDATA: nfsch299|maps:NIS databases --><COMMAND>automount</COMMAND> master map can be a local file or an NIS database file. For <COMMAND>autofs</COMMAND>, it must be a local file named <FILENAME>/etc/auto_master</FILENAME>. The master map contains three fields: <ITALICS>mount point</ITALICS>, <ITALICS>map name,</ITALICS> and <ITALICS>map options</ITALICS>. A crosshatch (#) at the beginning of a line indicates a comment line. A sample of master map entries is:</PARAGRAPH>
<CODE>
#Mount Point&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map Name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map Options
/hosts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-hosts&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-nosuid,nodev&lbreak;/net&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/etc/auto_irix.misc&nbsp;&nbsp;&nbsp;-nosuid&lbreak;/home&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/etc/auto_home&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-timeo=20&lbreak;/-&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/etc/auto_direct&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-ro&lbreak;/net2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/etc/indirect2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-ro,vers=2
</CODE>
<PARAGRAPH>The mount point field serves two purposes. It determines whether a map is a direct or indirect map, and it provides mount point information. A slash followed by a dash (/&ndash;) in the mount point field designates a direct map. It signals the automatic mounter to use the mount points specified in the direct map for mounting this map. For example, to mount the fourth entry in the sample above, the automatic mounter gets a mount point specification from the direct map <INDEXTARGET ID="nfsch2100"><!-- POSTPROCESSDATA: nfsch2100|/&ndash; mount point --><INDEXTARGET ID="nfsch2101"><!-- POSTPROCESSDATA: nfsch2101|direct maps --><INDEXTARGET ID="nfsch2102"><!-- POSTPROCESSDATA: nfsch2102|maps:direct --><FILENAME>/etc/auto_direct</FILENAME>. In the fifth entry, an entire indirect map, which includes all its entries, is declared to use the NFS version 2 protocol. The default for <FILENAME>automount</FILENAME> is NFS version 2; the default for <FILENAME>autofs</FILENAME> is NFS version 3, and if it is not available on the server, the mount tries to NFS version 2. </PARAGRAPH>
<PARAGRAPH>A directory name in the mount point field designates an indirect map. It specifies the mount point the automatic mounter should use when mounting this map. For example, the second entry in the sample above tells the automatic mounter to mount the indirect map <INDEXTARGET ID="nfsch2103"><!-- POSTPROCESSDATA: nfsch2103|indirect maps --><INDEXTARGET ID="nfsch2104"><!-- POSTPROCESSDATA: nfsch2104|maps:indirect --><FILENAME>/etc/auto.irix.misc</FILENAME> at mount point <FILENAME>/net</FILENAME>. A mount point for direct and indirect maps can be several directory levels deep.</PARAGRAPH>
<PARAGRAPH>The map name field in a master map specifies the full name and location of the map. Notice that <INDEXTARGET ID="nfsch2105"><!-- POSTPROCESSDATA: nfsch2105|<BOLD>&ndash;hosts</BOLD> map --><CMDLINEOPT>&ndash;hosts</CMDLINEOPT> is considered an indirect map whose mount point is <FILENAME>/hosts</FILENAME>. The <CMDLINEOPT>&ndash;hosts </CMDLINEOPT>map mounts all the exported file systems from a server. If frequent access to just a single file system is required for a server with many exports that do not use the<CMDLINEOPT>&space;-nohide</CMDLINEOPT> option, it is more efficient to access that file system with a map entry that mounts just that file system.</PARAGRAPH>
<PARAGRAPH>The map options field can be used to specify any options that should apply to the entire map. Options set in a master map can be overridden by options set for a particular entry within a map.<INDEXTARGET ID="nfsch2106"><!-- POSTPROCESSDATA: nfsch2106|maps:options --></PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="57329">Direct Maps for the Automatic Mounter </TITLE><PARAGRAPH>Direct maps allow mounted directories to be distributed throughout a client's local file system. They contain the information that the automatic mounter needs to determine when, what, and how to mount a remote NFS directory. You can have as many direct maps as needed. A direct map for AutoFS is typically called <INDEXTARGET ID="nfsch2107"><!-- POSTPROCESSDATA: nfsch2107|/&ndash; mount point --><FILENAME>/etc/auto.</FILENAME><VARIABLE>mapname</VARIABLE>, where <VARIABLE>mapname</VARIABLE> is some logical name that reflects the map's contents. </PARAGRAPH>
<PARAGRAPH>All direct maps contain three fields: <ITALICS>directory</ITALICS>,<ITALICS>&space;options</ITALICS>, and <ITALICS>location</ITALICS>. An example of an <FILENAME>/etc/auto_direct</FILENAME> direct map is:</PARAGRAPH>
<CODE>
#Directory&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Options&nbsp;&nbsp;&nbsp;Location
/usr/local/tools&nbsp;&nbsp;&nbsp;&nbsp;-nodev&nbsp;&nbsp;&nbsp;&nbsp;ivy:/usr/cooltools
/usr/frame&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redwood:/usr/frame
/usr/games&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-nosuid&nbsp;&nbsp;&nbsp;peach:/usr/games 
</CODE>
<PARAGRAPH>In a direct map, users access the NFS directory with the pathname that is identical to the directory field value in the direct map. For example, a user gives the command <USERINPUT>cd /usr/local/tools</USERINPUT> to mount <FILENAME>/usr/cooltools</FILENAME> from server ivy as specified in the direct map <FILENAME>/etc/auto_direct</FILENAME>. Notice that the directory field in a direct map can include several subdirectory levels.</PARAGRAPH>
<PARAGRAPH>The options field can be used to set options for an entry in the direct map. Options set within a map for an individual entry override the general option set for the entire map in the master map. The location field contains the NFS server's name and the remote directory to mount.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="15197">Indirect Maps for the Automatic Mounter </TITLE><PARAGRAPH>Indirect maps allow remotely mounted directories to be housed under a specified shared top-level location on the client's file system. They contain the specific information the automatic mounter program needs to determine when, what, and how to NFS mount a remote directory. You can have as many indirect maps as needed. <INDEXTARGET ID="nfsch2108"><!-- POSTPROCESSDATA: nfsch2108|indirect maps --><INDEXTARGET ID="nfsch2109"><!-- POSTPROCESSDATA: nfsch2109|maps:indirect --></PARAGRAPH>
<PARAGRAPH>An indirect map is typically called <FILENAME>/etc/auto.</FILENAME><VARIABLE>mapname </VARIABLE>(for <COMMAND>automount</COMMAND>) and <FILENAME>/etc/auto_</FILENAME><VARIABLE>mapname </VARIABLE>(for <COMMAND>autofs</COMMAND>), where <VARIABLE>mapname</VARIABLE> is some logical name that reflects the map's contents. Indirect maps can be grouped according to logical characteristics. For example, in the master map above, the indirect map <FILENAME>/etc/auto_home</FILENAME>, indicated by the mount point <FILENAME>/home</FILENAME>, can include mounting information for all home directories on various servers. </PARAGRAPH>
<PARAGRAPH>Indirect maps contain three fields: <ITALICS>directory</ITALICS>, <ITALICS>options</ITALICS>, and <ITALICS>location</ITALICS>. Entries might look something like this for the <FILENAME>/etc/auto_home</FILENAME> indirect map:</PARAGRAPH>
<CODE>
#Directory&nbsp;&nbsp;&nbsp;&nbsp;Options&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Location
willow&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;willow:/usr/people
rudy&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-nosuid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pine:/usr/people/rudy
bruiser&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-ro,nointr&nbsp;&nbsp;&nbsp;&nbsp;ivy:/usr/people/bruiser
jinx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-ro,vers=2&nbsp;&nbsp;&nbsp;&nbsp;jinx:/usr
</CODE>
<PARAGRAPH>With an indirect map, user access to an NFS directory is always relative to the mount point specified in the master map entry for the indirect map. That is, the directory is the concatenation of the mount-point field in the master map and the directory field in the indirect map. For example, given our sample <FILENAME>/etc/auto_master</FILENAME> and indirect map <FILENAME>/etc/auto_home</FILENAME>, a user gives the command <USERINPUT>cd /home/willow</USERINPUT> to access the NFS directory <FILENAME>willow:/usr/people</FILENAME>.</PARAGRAPH>
<PARAGRAPH>If a user changes the current working directory to the <FILENAME>/home</FILENAME> directory and tries to list its contents, the directory appears empty unless a subdirectory of <FILENAME>/home</FILENAME>, such as <FILENAME>/home/willow</FILENAME>, was previously accessed, thereby mounting <FILENAME>/home</FILENAME> subdirectories. Access to the mount point of an indirect map only shows information for mounts currently in effect; it does not trigger mounts, as with direct maps. Users must access a subdirectory to trigger a mount.</PARAGRAPH>
<PARAGRAPH>The directory field in an indirect map is limited to one subdirectory level. Additional subdirectory levels for indirect maps must be indicated in the mount point field in the master map, or on the command line for <FILENAME>automount</FILENAME>.</PARAGRAPH>
<PARAGRAPH>The options field can be used to set options for an entry in the indirect map. For example, the fourth entry attempts to mount using the NFS2 protocol, all other entries are unaffected. Options set within a map for an entry override the general options set for the entire map in the master map. The location field contains the NFS server's name and the remote directory to mount.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="23135">Effective Automatic Mounting</TITLE><PARAGRAPH>Some recommendations for automatic mounting are:<INDEXTARGET ID="nfsch2110"><!-- POSTPROCESSDATA: nfsch2110|automatic mounters:recommendations --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Use the automatic mounter when the overhead of a mount operation is not important, when a file system is used more often than the automatic mounter time limit (5 minutes by default), or when file systems are used infrequently. Although directories that are used infrequently do not consume local or remote resources, they can slow down applications that report on file systems, such as <COMMAND>df</COMMAND>. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The default configuration in <FILENAME>/etc/config/automount.options </FILENAME>or<FILENAME>&space;/etc/auto_master</FILENAME> is usually sufficient because it allows access to all systems. It performs the minimal number of mounts necessary when it is used in conjunction with the <CMDLINEOPT>nohide</CMDLINEOPT> export option on the server. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Use indirect maps whenever possible. Direct maps create more <INDEXTARGET ID="nfsch2111"><!-- POSTPROCESSDATA: nfsch2111|<ITALICS>/etc/mtab</ITALICS> file --><FILENAME>/etc/mtab </FILENAME>entries, which means more mounts are performed, so system overhead is increased. With indirect maps, mounts occur when a process references a subdirectory of the daemon or map mount point. With direct maps, when a process reads a directory containing one or more direct mount points, all of the file systems are mounted at the mount points. This can result in a flurry of unintended mounting activity when direct mount points are used in well-traveled directories.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Try not to mount direct map mount points into routinely accessed directories. This can cause unexpected mount activity and slow down system performance.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Use a direct rather than an indirect map when directories cannot be grouped, but must be distributed throughout the local file system.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Plan and test maps on a small group of clients before using them for a larger group. Some changes to the <COMMAND>automount</COMMAND> environment require that systems be rebooted (see <XREF IDREF="33151" TYPE="TITLE">Chapter&nbsp;5, &ldquo;Maintaining ONC3/NFS&rdquo;</XREF> for details on changing the map environment).</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="33373">Planning a CacheFS File System</TITLE><PARAGRAPH>CacheFS is a file system layered above other standard IRIX file systems, and is installed as part of the ONC3/NFS software package. CacheFS automatically stores consistent local copies of the NFS file system on a local disk cache, in order to shift part of the typical server burden to the local machine. The original or back file system acts as the authoritative source of data, and the front file system acts as a specially managed cache. Either the <INDEXTARGET ID="nfsch2112"><!-- POSTPROCESSDATA: nfsch2112|cached file systems: back file system back file system --><INDEXTARGET ID="nfsch2113"><!-- POSTPROCESSDATA: nfsch2113|cached file systems: front file system front file system --><CMDLINEOPT>xfs</CMDLINEOPT> or <CMDLINEOPT>efs</CMDLINEOPT> file system types can be used for the front file system. </PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The default directory for the cache on the front file system is <FILENAME>/cache</FILENAME>. </NOTE>
<PARAGRAPH>The back file system can be of the types <CMDLINEOPT>nfs2</CMDLINEOPT>, <CMDLINEOPT>nfs</CMDLINEOPT>, <CMDLINEOPT>nfs3</CMDLINEOPT>, <CMDLINEOPT>iso9660</CMDLINEOPT>, <CMDLINEOPT>cdfs</CMDLINEOPT>, <CMDLINEOPT>hfs</CMDLINEOPT>, <CMDLINEOPT>kfs</CMDLINEOPT>, and <CMDLINEOPT>dos</CMDLINEOPT>. </PARAGRAPH>
<PARAGRAPH>CacheFS is most useful in a &ldquo;read-mostly&rdquo; file system, such as <FILENAME>/usr/local </FILENAME>or <FILENAME>/usr/share/man</FILENAME>. Once data has been cached, file read and read-only directory operations are as fast as those on a local disk (XFS file systems). Write performance, however, is closer to an NFS write operation. </PARAGRAPH>
<PARAGRAPH>Planning and setting up a CacheFS configuration is similar to that of an NFS client-server configuration. For detailed information refer to the <REFPAGE>cachefs(4)</REFPAGE> reference page. To administer CacheFS, see <XREF IDREF="32549" TYPE="TITLE">&ldquo;Cached File System Administration&rdquo;</XREF>. Instructions for setting up the CacheFS file system are given on <XREF IDREF="40941" TYPE="TEXT">page&nbsp;66</XREF>. This section discusses recent additions and options to CacheFS and contains the following subsections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="94275" TYPE="TITLE">&ldquo;Customizing CacheFS&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="62462" TYPE="TITLE">&ldquo;Consistency Checking with mount Command in CacheFS&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="32549" TYPE="TITLE">&ldquo;Cached File System Administration&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="59635" TYPE="TITLE">&ldquo;Cache Resource Parameters in CacheFS&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="89466" TYPE="TITLE">&ldquo;CacheFS Tunable Parameters&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="94275">Customizing CacheFS</TITLE><PARAGRAPH>CacheFS-specific options have been added to the conventional <COMMAND>mount</COMMAND> command and <FILENAME>/etc/fstab</FILENAME> file and are described in this section. For the complete description of these commands and files, refer to <XREF IDREF="14643" TYPE="TITLE">&ldquo;/etc/fstab Mount Process&rdquo;</XREF>. The <COMMAND>cfsadmin</COMMAND> and <COMMAND>cfsstat</COMMAND> commands are new with CacheFS (see <REFPAGE>cfsadmin(1M)</REFPAGE> and<REFPAGE>&space;cfsstat(1M)</REFPAGE>).</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="12525">mount and umount Options for CacheFS</TITLE><PARAGRAPH>When mounting and unmounting a CacheFS file system, the following option is used for CacheFS. For descriptions of the other options, see <XREF IDREF="31713" TYPE="TITLE">&ldquo;Customizing mount and umount Commands&rdquo;</XREF>.</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>&ndash;t</CMDLINEOPT>&space;<VARIABLE>type</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>(type) Set the type of directories to be mounted or unmounted. <VARIABLE>type</VARIABLE> is <CMDLINEOPT>cachefs</CMDLINEOPT> for all CacheFS mounting.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="22623">/etc/fstab Additions for CacheFS</TITLE><PARAGRAPH>For an example of a fundamental <FILENAME>/etc/fstab</FILENAME> file and an explanation of the <FILENAME>/etc/fstab</FILENAME> mount process, see <XREF IDREF="14643" TYPE="TITLE">&ldquo;/etc/fstab Mount Process&rdquo;</XREF>. The <INDEXTARGET ID="nfsch2114"><!-- POSTPROCESSDATA: nfsch2114|<ITALICS>/etc/fstab </ITALICS> file --><INDEXTARGET ID="nfsch2115"><!-- POSTPROCESSDATA: nfsch2115|options: CacheFS --><FILENAME>/etc/fstab</FILENAME> file also has several added options that are used with CacheFS for mounting and unmounting.</PARAGRAPH>
<PARAGRAPH>Any mount options not recognized by CacheFS are passed to the back file system mount if one is performed.</PARAGRAPH>
<PARAGRAPH>These added options for CacheFS are:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>backfstype=</CMDLINEOPT><VARIABLE>file_system_type</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Specifies the back file system type (<CMDLINEOPT>nfs2</CMDLINEOPT>, <CMDLINEOPT>nfs</CMDLINEOPT>, <CMDLINEOPT>nfs3</CMDLINEOPT>, <CMDLINEOPT>iso9660</CMDLINEOPT>, <CMDLINEOPT>cdfs</CMDLINEOPT>, <CMDLINEOPT>hfs</CMDLINEOPT>, <CMDLINEOPT>kfs</CMDLINEOPT>, and <CMDLINEOPT>dos</CMDLINEOPT>). If this option is not specified, the back file system type is determined from the file system name. File system names of the form <VARIABLE>hostname</VARIABLE>:<VARIABLE>path</VARIABLE> are assumed to be of the type <CMDLINEOPT>nfs</CMDLINEOPT>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>backpath=</CMDLINEOPT><VARIABLE>path</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Specifies the path where the back file system is already mounted. If this argument is not specified, CacheFS determines a mount point for the back file system.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>cachedir=</CMDLINEOPT><VARIABLE>directory</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Specifies the name of the cache directory. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>cacheid=</CMDLINEOPT><VARIABLE>ID</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Allows you to assign a string to identify each separate cached file system. If you do not specify the <CMDLINEOPT>cacheid</CMDLINEOPT> value, CacheFS generates one. You need the cache ID when you delete a cached file system with<COMMAND>&space;cfsadmin &ndash;d</COMMAND>. A cache ID you choose is easier to remember than one automatically generated. The <COMMAND>cfsadmin</COMMAND> command with the <CMDLINEOPT>&ndash;l</CMDLINEOPT> option includes the <CMDLINEOPT>cacheid</CMDLINEOPT> value in its display.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>write-around | non-shared</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Determines the write modes for CacheFS. In the <CMDLINEOPT>write-around</CMDLINEOPT> mode, as writes are made to the back file system, the affected file is purged from the cache. </PARAGRAPH>
<PARAGRAPH>In the <CMDLINEOPT>non</CMDLINEOPT>-<CMDLINEOPT>shared</CMDLINEOPT> mode, all writes are made to both the front and back file systems, and the file remains in the cache.</PARAGRAPH>
<PARAGRAPH>Either mode can be used in an environment where more than one client may be writing to the same file, in spite of what the names imply. File locking is required to ensure consistency in this case. In both modes, file locking is performed through the back file system. The default mode is <CMDLINEOPT>non-shared</CMDLINEOPT>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>noconst</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Disables consistency checking between the front and back file systems. Use <CMDLINEOPT>noconst</CMDLINEOPT>&space;when the back file system and cache file system are read-only. Otherwise, always allow consistency checking. The default is to enable consistency checking.&space;</PARAGRAPH>
<PARAGRAPH>If none of the files in the back file system are to be modified, you can use the <CMDLINEOPT>noconst</CMDLINEOPT> option to mount when mounting the cached file system. Changes to the back file system may not be reflected in the cached file system.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>private</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Causes file and record locking to be performed locally. Additionally, files remain cached when file and record locking are performed. By default, files are not cached when file and record locking are performed and all file and record locking is handled by the back file system.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>local-access</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Causes the front file system to interpret the access mode bits used for access checking (see <REFPAGE>chmod(1M)</REFPAGE>). By default, the back file system interprets the access mode bits used for access checking to ensure data integrity.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>purge</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Remove any cached information for the specified file system.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>suid | nosuid</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Allow set-uid (default) or do not allow set-uid.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>bg</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Causes <COMMAND>mount</COMMAND> to run in the background if the back file system mount times out.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>disconnect</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Causes the cache file system to operate in disconnected mode when the back file system fails to respond. This allows read accesses to files already cached to be performed from the front file system even when the back files system does not respond.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="62462">Consistency Checking with mount Command in CacheFS</TITLE><PARAGRAPH>To ensure that the cached directories and files are kept up to date, CacheFS periodically checks consistency of files stored in the cache. To check consistency, CacheFS compares the current modification time to the previous modification time; if the modification times are different, all data and attributes for the directory or file are purged from the cache and new data and attributes are retrieved from the back file system.<INDEXTARGET ID="nfsch2116"><!-- POSTPROCESSDATA: nfsch2116|options:mount, consistency --></PARAGRAPH>
<PARAGRAPH>When an operation on a directory or file is requested, CacheFS checks to see if it is time to verify consistency. If so, CacheFS obtains the modification time from the back file system and performs the comparison. If the write mode is <CMDLINEOPT>write-around</CMDLINEOPT>, CacheFS checks on every operation.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="24319" TYPE="TABLE">Table&nbsp;2-1</XREF> provides more information on <COMMAND>mount</COMMAND> consistency checking parameters. </PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="2-1"><PREFIX>Table 2-1 </PREFIX><XREFTARGET ID="24319">Consistency Checking Arguments for the <COMMAND>-</COMMAND>o mount Option</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="87"><PARAGRAPH>Parameter</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="299"><PARAGRAPH>Description</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="87"><PARAGRAPH><CMDLINEOPT>acdirmin=</CMDLINEOPT>
<VARIABLE></VARIABLE><VARIABLE>n</VARIABLE></PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="299"><PARAGRAPH>Specifies that cached attributes are held for at least <VARIABLE>n</VARIABLE> seconds after a 
directory update. After <VARIABLE>n</VARIABLE> seconds, if the directory modification time on the 
back file system has changed, all information about the directory is purged 
and new data is retrieved from the back file system. The default for <VARIABLE>n</VARIABLE> is 30 
seconds.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="87"><PARAGRAPH><CMDLINEOPT>acdirmax=</CMDLINEOPT>
<VARIABLE></VARIABLE><VARIABLE>n</VARIABLE></PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="299"><PARAGRAPH>Specifies that cached attributes are held for no more than <VARIABLE>n</VARIABLE> seconds after a 
directory update. After <VARIABLE>n</VARIABLE> seconds, the directory is purged from the cache 
and new data is retrieved from the back file system. The default for <VARIABLE>n</VARIABLE> is 30 
seconds.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="87"><PARAGRAPH><CMDLINEOPT>acregmin=</CMDLINEOPT>
<VARIABLE></VARIABLE><VARIABLE>n</VARIABLE></PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="299"><PARAGRAPH>Specifies that cached attributes are held for at least <VARIABLE>n</VARIABLE> seconds after file 
modification. After <VARIABLE>n</VARIABLE> seconds, if the file modification time on the back file 
system has changed, all information about the file is purged and new data 
is retrieved from the back file system. The default for <VARIABLE>n</VARIABLE> is 30 seconds.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="87"><PARAGRAPH><CMDLINEOPT>acregmax=</CMDLINEOPT>
<VARIABLE></VARIABLE><VARIABLE>n</VARIABLE></PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="299"><PARAGRAPH>Specifies that cached attributes are held for no more than <VARIABLE>n</VARIABLE> seconds after a 
file modification. After <VARIABLE>n</VARIABLE> seconds, all file information is purged from the 
cache. The default for <VARIABLE>n</VARIABLE> is 30 seconds.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="87"><PARAGRAPH><CMDLINEOPT>actimeo=</CMDLINEOPT>
<VARIABLE></VARIABLE><VARIABLE>n</VARIABLE></PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="299"><PARAGRAPH>Sets <CMDLINEOPT>acregmin</CMDLINEOPT>, <CMDLINEOPT>acregmax</CMDLINEOPT>, <CMDLINEOPT>acdirmin</CMDLINEOPT>, and <CMDLINEOPT>acdirmax</CMDLINEOPT> to <VARIABLE>n.</VARIABLE></PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="32549">Cached File System Administration</TITLE><PARAGRAPH>The<INDEXTARGET ID="nfsch2117"><!-- POSTPROCESSDATA: nfsch2117|<ITALICS>cfsadmin</ITALICS> command --><COMMAND>&space;cfsadmin</COMMAND> command is used to administer the cached file system on the local system. It can be used to:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Create a cached file system.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>List the contents and statistics about the cache.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Delete the cached file system.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Modify the resource parameters when the file system is unmounted.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The <COMMAND>cfsadmin</COMMAND> command works on a cache directory, which is the directory where the cache is actually stored. A pathname in the front file system identifies the cache directory. See <REFPAGE>cfsadmin(1M)</REFPAGE> for more details.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>If the default resource parameters are acceptable (see <XREF IDREF="59635" TYPE="TITLE">&ldquo;Cache Resource Parameters in CacheFS&rdquo;</XREF>), it is not necessary to run <COMMAND>cfsadmin</COMMAND> to create the cache. The cache is created with default parameters when the first mount is performed.</NOTE>
<PARAGRAPH>The syntax for the <COMMAND>cfsadmin</COMMAND> command is: </PARAGRAPH>
<CODE>
<SCREENDISPLAY>cfsadmin -c </SCREENDISPLAY>[ <SCREENDISPLAY>-o</SCREENDISPLAY>&space;<VARIABLE>cacheFS-parameters</VARIABLE> ] <VARIABLE>cache_directory</VARIABLE>&space;
<SCREENDISPLAY>cfsadmin -d </SCREENDISPLAY>[ <VARIABLE>cache_ID</VARIABLE> | <SCREENDISPLAY>all </SCREENDISPLAY>] <VARIABLE>cache_directory</VARIABLE>
<SCREENDISPLAY>cfsadmin -l</SCREENDISPLAY>&space;<VARIABLE>cache_directory</VARIABLE>
<SCREENDISPLAY>cfsadmin -u </SCREENDISPLAY>[ <SCREENDISPLAY>-o </SCREENDISPLAY><VARIABLE>cacheFS-parameters </VARIABLE>] <VARIABLE>cache_directory</VARIABLE>
<SCREENDISPLAY>cfsadmin -C </SCREENDISPLAY><VARIABLE>cache_directory</VARIABLE>&space;
</CODE>
<PARAGRAPH>The options and their parameters are:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>-c</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Create a cache under the directory specified by <VARIABLE>cache_directory</VARIABLE>. This directory must not exist prior to cache creation.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-d</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Delete the file system and remove the resources of the <VARIABLE>cache_ID</VARIABLE> that you specify or all file systems in the cache if you specify <CMDLINEOPT>all</CMDLINEOPT>. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-l</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>List the file systems that are stored in the specified cache directory. A listing provides the <VARIABLE>cache_ID</VARIABLE> and statistics about resource utilization and cache resource parameters.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-u</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Update the resource parameters of the specified cache directory. The parameter values (specified with the <CMDLINEOPT>-o</CMDLINEOPT> option) can only be increased; to decrease the values, you must remove the cache, then re-create it. All file systems in the cache must be unmounted when you use this option. Changes take effect the next time you mount the file system in the cache directory.</PARAGRAPH>
<PARAGRAPH>Using the <CMDLINEOPT>-u</CMDLINEOPT> option without the <CMDLINEOPT>-o</CMDLINEOPT> option resets all parameters to their default values.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>cache_ID</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Specifies an identifying name for the file system that is cached. If you do not specify a <VARIABLE>cache_ID</VARIABLE>, CacheFS assigns a unique identifier.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-o</CMDLINEOPT>&space;<VARIABLE>options</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Specifies the CacheFS resource parameters. Multiple resource parameters must be separated by commas. The following section describes the cache resource parameters.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>-C</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Convert an existing cache to the new format.  This consists of converting the <VARIABLE>cache_ID</VARIABLE>s from their old form to the new form.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="59635">Cache Resource Parameters in CacheFS</TITLE><PARAGRAPH>The default values for the cache parameters are for a cache that uses the entire front file system for caching. To limit the cache to only a portion of the front file system, you should change the parameter values.<INDEXTARGET ID="nfsch2118"><!-- POSTPROCESSDATA: nfsch2118|limiting cache --><INDEXTARGET ID="nfsch2119"><!-- POSTPROCESSDATA: nfsch2119|cached file systems: parameters --></PARAGRAPH>
<PARAGRAPH>Any parameter may be changed at any time. The change does not take effect however, until all file systems for the affected cache have been unmounted and remounted.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="51665" TYPE="TABLE">Table&nbsp;2-2</XREF> shows the parameters for space and file allocation.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="2-2"><PREFIX>Table 2-2 </PREFIX>CacheFS Parameters<XREFTARGET ID="51665"></CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="166"><PARAGRAPH>Parameters for Space Allocation</PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>Parameters for File Allocation</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>maxblocks</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH><CMDLINEOPT>maxfiles</CMDLINEOPT></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>hiblocks</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH><CMDLINEOPT>hifiles</CMDLINEOPT></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>lowblocks</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>l<CMDLINEOPT>owfiles</CMDLINEOPT></PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH><XREF IDREF="16735" TYPE="TABLE">Table&nbsp;2-3</XREF> shows the default values for the cache parameters. The default values for parameters devote the full resources of the front file system to caching</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="2-3"><PREFIX>Table 2-3 </PREFIX><XREFTARGET ID="16735">Default Values of Cache Parameters</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="166"><PARAGRAPH>Cache Parameters</PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>Default Value</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>maxblocks</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>90%</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>hiblocks</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>85%</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>lowblocks</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>75%</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>maxfiles</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>90%</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>hifiles</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>85%</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="166"><PARAGRAPH><CMDLINEOPT>lowfiles</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="175" WIDTH="166"><PARAGRAPH>75%</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>The&space;<INDEXTARGET ID="nfsch2120"><!-- POSTPROCESSDATA: nfsch2120|cached file systems: <ITALICS>maxblocks</ITALICS> parameter<ITALICS>maxblocks</ITALICS>:<ITALICS>cfsadmin</ITALICS> parameter --><CMDLINEOPT>maxblocks</CMDLINEOPT> parameter sets the maximum number of blocks, expressed as a percentage, that CacheFS is allowed to claim within the front file system. The <CMDLINEOPT>maxblocks</CMDLINEOPT> percentage is relative to the total number of blocks on the front file system, not what has been allocated by CacheFS. The&space;<INDEXTARGET ID="nfsch2121"><!-- POSTPROCESSDATA: nfsch2121|cached file systems: <ITALICS>maxfiles</ITALICS> parameter<ITALICS>maxfiles</ITALICS>:<ITALICS>cfsadmin</ITALICS> parameter --><CMDLINEOPT>maxfiles</CMDLINEOPT> parameter sets the maximum percentage of available inodes (number of files) CacheFS can claim.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The <CMDLINEOPT>maxblocks</CMDLINEOPT> and <CMDLINEOPT>maxfiles</CMDLINEOPT> parameters do not guarantee the resources will be available for CacheFS&mdash;they set maximums. If you allow the front file system to be used for purposes other than CacheFS, there may be fewer blocks or files available to CacheFS than you intend.</NOTE>
<PARAGRAPH>The <CMDLINEOPT>hiblocks </CMDLINEOPT>parameter sets the high water mark for disk usage, and <CMDLINEOPT>lowblocks</CMDLINEOPT> sets the low water mark, expressed as a percentage of the total number of blocks available to CacheFS. The <CMDLINEOPT>hifiles</CMDLINEOPT> and <CMDLINEOPT>lowfiles </CMDLINEOPT>parameters set the maximum and minimum blocks available for file system use. When the maximum number of blocks or files has been reached, CacheFS will begin removing cached files to stay within the established percentage. </PARAGRAPH>
<PARAGRAPH>The <CMDLINEOPT>maxblocks</CMDLINEOPT>, <CMDLINEOPT>maxfiles</CMDLINEOPT>, <CMDLINEOPT>hiblocks, hifiles, lowblocks</CMDLINEOPT> and <CMDLINEOPT>lowfiles</CMDLINEOPT> values apply to the entire front file system, not file systems you have cached under the front file system. </PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>Using the whole front file system solely for caching eliminates the need to change the <CMDLINEOPT>maxblocks</CMDLINEOPT>, <CMDLINEOPT>maxfiles</CMDLINEOPT>, <CMDLINEOPT>hiblocks</CMDLINEOPT>, <CMDLINEOPT>hifiles</CMDLINEOPT> or the corresponding<CMDLINEOPT>&space;low </CMDLINEOPT>parameters.</NOTE>
<PARAGRAPH>CacheFS allows the cache to grow to the maximum size specified&mdash;if you have not reduced available resources by using part of the front file system for other storage purposes.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="77028">cfsstat Command</TITLE><PARAGRAPH>The <COMMAND>cfsstat</COMMAND> command displays and reinitializes statistics about CacheFS. It must be used as the superuser. For more information, refer to the <REFPAGE>cfsstat(1M)</REFPAGE> reference page.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="89466">CacheFS Tunable Parameters</TITLE><PARAGRAPH>The CacheFS tunable parameters are used to fine-tune the performance of CacheFS file opens and reads. The CacheFS tunable parameters are contained in the file <FILENAME>/var/sysgen/mtune/cachefs</FILENAME>. They can be modified with the <COMMAND>systune </COMMAND>command (see <REFPAGE>systune(1M)</REFPAGE>).</PARAGRAPH>
<PARAGRAPH>The tunable parameters for CacheFS, along with their descriptions, are listed in <XREF IDREF="11295" TYPE="TABLE">Table&nbsp;2-4</XREF>.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="2-4"><PREFIX>Table 2-4 </PREFIX><XREFTARGET ID="11295">CacheFS Tunable Parameters</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="107"><PARAGRAPH>Parameter</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="244"><PARAGRAPH>Description</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="107"><PARAGRAPH><CMDLINEOPT>cachefs_readahead</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="244"><PARAGRAPH>Controls the number of blocks to read ahead of the current 
block being read. The readaheads are read asynchronously. 
The size of the block is the preferred I/O size of the front file 
system.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="107"><PARAGRAPH><CMDLINEOPT>cachefs_max_threads</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="244"><PARAGRAPH>Controls the maximum number of asynchronous I/O 
daemons allowed to run for each CacheFS file system.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="107"><PARAGRAPH><CMDLINEOPT>fileheader_cache_size</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="244"><PARAGRAPH>Controls the number of file headers containing CacheFS 
metadata that are cached. The effectiveness of file header 
caching can be monitored with <COMMAND>cfsstat -b</COMMAND></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="107"><PARAGRAPH>replacement_timeout</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="244"><PARAGRAPH>Controls the time in seconds between successive cache 
snapshots made by the replacement daemon.</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>The parameter's maximum, minimum, and default values are listed in <XREF IDREF="35458" TYPE="TABLE">Table&nbsp;2-5</XREF>.</PARAGRAPH>
<TABLE COLUMNS="4"><CAPTION LBL="2-5"><PREFIX>Table 2-5 </PREFIX><XREFTARGET ID="35458">CacheFS Tunable Parameter Values</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="111"><PARAGRAPH>Parameter</PARAGRAPH>
</CELL>
<CELL LEFT="120" WIDTH="72"><PARAGRAPH>Default Value</PARAGRAPH>
</CELL>
<CELL LEFT="200" WIDTH="83"><PARAGRAPH>Minimum Value</PARAGRAPH>
</CELL>
<CELL LEFT="290" WIDTH="85"><PARAGRAPH>Maximum Value</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="111"><PARAGRAPH><CMDLINEOPT>cachefs_readahead</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="120" WIDTH="72"><PARAGRAPH>1</PARAGRAPH>
</CELL>
<CELL LEFT="200" WIDTH="83"><PARAGRAPH>0</PARAGRAPH>
</CELL>
<CELL LEFT="290" WIDTH="85"><PARAGRAPH>10</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="111"><PARAGRAPH><CMDLINEOPT>cachefs_max_threads</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="120" WIDTH="72"><PARAGRAPH>5</PARAGRAPH>
</CELL>
<CELL LEFT="200" WIDTH="83"><PARAGRAPH>1</PARAGRAPH>
</CELL>
<CELL LEFT="290" WIDTH="85"><PARAGRAPH>10</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="111"><PARAGRAPH><CMDLINEOPT>fileheader_cache_size</CMDLINEOPT></PARAGRAPH>
</CELL>
<CELL LEFT="120" WIDTH="72"><PARAGRAPH>512</PARAGRAPH>
</CELL>
<CELL LEFT="200" WIDTH="83"><PARAGRAPH>0</PARAGRAPH>
</CELL>
<CELL LEFT="290" WIDTH="85"><PARAGRAPH>8192</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="111"><PARAGRAPH>replacement_timeout</PARAGRAPH>
</CELL>
<CELL LEFT="120" WIDTH="72"><PARAGRAPH>600</PARAGRAPH>
</CELL>
<CELL LEFT="200" WIDTH="83"><PARAGRAPH>30</PARAGRAPH>
</CELL>
<CELL LEFT="290" WIDTH="85"><PARAGRAPH>86400</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION2>
</SECTION1>
</CHAPTER>

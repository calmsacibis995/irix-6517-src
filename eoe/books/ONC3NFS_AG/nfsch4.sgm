<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="4"><TITLE><XREFTARGET ID="22425">Setting Up and Testing ONC3/NFS</TITLE><PARAGRAPH>This chapter explains how to set up ONC3/NFS services and verify that they work. It provides procedures for enabling exporting on NFS servers, for setting up mounting and automatic mounting on NFS clients, and for setting up the network lock manager. It also explains how to create a CacheFS file system. Before you begin these procedures, you should be thoroughly familiar with the information provided in <XREF IDREF="14518" TYPE="TITLE">Chapter&nbsp;2, &ldquo;Planning ONC3/NFS Service.&rdquo;</XREF></PARAGRAPH>
<PARAGRAPH>This chapter contains these sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="33183" TYPE="TITLE">&ldquo;Setting Up the NFS Server&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="38320" TYPE="TITLE">&ldquo;Setting Up an NFS Client&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="33466" TYPE="TITLE">&ldquo;Setting Up the Automatic Mounters&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="23641" TYPE="TITLE">&ldquo;Setting Up the Lock Manager&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="40941" TYPE="TITLE">&ldquo;Setting Up the CacheFS File System&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="23416" TYPE="TITLE">&ldquo;Mounting a Cached File System&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<NOTE><PREFIX>Note</PREFIX>To perform the procedures in this chapter, you should have already installed ONC3/NFS software on the server and client systems that will participate in the ONC3/NFS services. The ONC3/NFS <DOCTITLE>Release Notes</DOCTITLE> explain where to find instructions for installing ONC3/NFS software.</NOTE>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="33183">Setting Up the NFS Server</TITLE><PARAGRAPH>Setting up an NFS server requires verifying that the required software is running on the server, editing the server's <INDEXTARGET ID="nfsch41"><!-- POSTPROCESSDATA: nfsch41|server:setting up --><FILENAME>/etc/exports</FILENAME> file, adding the file systems to be exported, exporting the file systems, and verifying that they have been exported. The instructions below explain the setup procedure. Do this procedure as the superuser on the server.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Use <COMMAND>versions</COMMAND> to verify the correct software has been installed on the server:</PARAGRAPH>
<CODE>
<USERINPUT># versions | grep nfs </USERINPUT>
I  nfs                  07/09/97  Network File System, 6.5
I  nfs.man              07/09/97  NFS Documentation
I  nfs.man.nfs          07/09/97  NFS Support Manual Pages
I  nfs.man.relnotes     07/09/97  NFS Release Notes
I  nfs.sw               07/09/97  NFS Software
I  nfs.sw.autofs        07/09/97  AutoFS Support
I  nfs.sw.cachefs       07/09/97  CacheFS Support
I  nfs.sw.nfs           07/09/97  NFS Support
I  nfs.sw.nis           07/09/97  NIS (formerly Yellow Pages)Support
</CODE>
<PARAGRAPH>This example shows NFS as I (installed). A complete listing of current software modules is contained in<DOCTITLE>&space;ONC3/NFS Release Notes</DOCTITLE>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Check the NFS configuration flag on the server.</PARAGRAPH>
<PARAGRAPH>When the <INDEXTARGET ID="nfsch42"><!-- POSTPROCESSDATA: nfsch42|<ITALICS>/etc/init.d/network</ITALICS> script --><COMMAND>/etc/init.d/network</COMMAND> script executes at system startup, it starts NFS running if the <COMMAND>chkconfig </COMMAND>flag <ITALICS>nfs</ITALICS> is <CMDLINEOPT>on</CMDLINEOPT>. To verify that <INDEXTARGET ID="nfsch43"><!-- POSTPROCESSDATA: nfsch43|<ITALICS>chkconfig</ITALICS> command:<ITALICS>nfs</ITALICS> flag --><ITALICS>nfs</ITALICS> is <CMDLINEOPT>on</CMDLINEOPT>, type the <COMMAND>chkconfig</COMMAND> command and check its output, for example: </PARAGRAPH>
<CODE>
#<USERINPUT>&space;/etc/chkconfig</USERINPUT>
&space;       Flag                 State
&space;       ====                 =====
&space;       ...
&space;       nfs                  on
&space;       ...
</CODE>
<PARAGRAPH>This example shows that the <CMDLINEOPT>nfs</CMDLINEOPT> flag is set to <CMDLINEOPT>on</CMDLINEOPT>. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If your output shows that <CMDLINEOPT>nfs</CMDLINEOPT> is <CMDLINEOPT>off</CMDLINEOPT>, type this command and reboot your system:</PARAGRAPH>
<CODE>
<USERINPUT>/etc/chkconfig nfs on</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Verify that NFS daemons are running.</PARAGRAPH>
<PARAGRAPH>Four <ITALICS>nfsd</ITALICS> and four <ITALICS>biod</ITALICS> daemons should be running (the default number specified in <FILENAME>/etc/config/nfsd.options</FILENAME> and <FILENAME>/etc/config/biod.options</FILENAME>). Verify that the appropriate NFS daemons are running using the <COMMAND>ps </COMMAND>command, shown below. The output of your entries looks similar to the output in these examples:</PARAGRAPH>
<CODE>
<USERINPUT>ps -ef | grep nfsd</USERINPUT>&space;
root&nbsp;&nbsp;&nbsp;102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/nfsd 4
root&nbsp;&nbsp;&nbsp;104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;102&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/nfsd 4
root&nbsp;&nbsp;&nbsp;105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;102&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/nfsd 4
root&nbsp;&nbsp;&nbsp;106&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;102&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/nfsd 4
root  2289&nbsp;&nbsp;&nbsp;&nbsp;2287&nbsp;&nbsp;0&nbsp;14:04:50 ttyq4&nbsp;0:00 grep nfsd
<USERINPUT>ps -ef | grep biod</USERINPUT>
root&nbsp;&nbsp;&nbsp;107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/biod 4
root&nbsp;&nbsp;&nbsp;108&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/biod 4
root&nbsp;&nbsp;&nbsp;109&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/biod 4
root&nbsp;&nbsp;&nbsp;110&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;&nbsp;0&nbsp;&nbsp;Jan 30 ?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0:00 /usr/etc/biod 4
root&nbsp;&nbsp;2291&nbsp;&nbsp;&nbsp;&nbsp;2287&nbsp;&nbsp;4 14:04:58 ttyq4 0:00 grep biod
</CODE>
<PARAGRAPH>If no NFS daemons appear in your output, they were not included in the IRIX kernel during NFS installation. To check the kernel, type this command:</PARAGRAPH>
<CODE>
<USERINPUT>strings /unix | grep nfs</USERINPUT>
</CODE>
<PARAGRAPH>If there is no output, rebuild the kernel with this command, then reboot the system:<INDEXTARGET ID="nfsch44"><!-- POSTPROCESSDATA: nfsch44|<ITALICS>/etc/init.d/autoconfigure</ITALICS> script --></PARAGRAPH>
<CODE>
<USERINPUT>/etc/autoconfig -f</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Verify that mount daemons are registered with the portmapper.</PARAGRAPH>
<PARAGRAPH>Mount daemons must be registered with the server's portmapper so the portmapper can provide port numbers to incoming NFS requests. Verify that the mount daemons are registered with the portmapper by typing this command:<INDEXTARGET ID="nfsch45"><!-- POSTPROCESSDATA: nfsch45|<ITALICS>rpcinfo</ITALICS> command --><INDEXTARGET ID="nfsch46"><!-- POSTPROCESSDATA: nfsch46|portmapper --></PARAGRAPH>
<CODE>
<USERINPUT>/usr/etc/rpcinfo &ndash;p | grep mountd</USERINPUT>
</CODE>
<PARAGRAPH>After your entry, you should see output similar to this:</PARAGRAPH>
<CODE>
100005&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;tcp&nbsp;&nbsp;1230&nbsp;&nbsp;mountd
100005&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;udp&nbsp;&nbsp;1097&nbsp;&nbsp;mountd
391004&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;tcp&nbsp;&nbsp;1231&nbsp;&nbsp;sgi_mountd
391004&nbsp;&nbsp;1&nbsp;&nbsp;&nbsp;udp&nbsp;&nbsp;1098&nbsp;&nbsp;sgi_mountd
</CODE>
<PARAGRAPH>The <INDEXTARGET ID="nfsch47"><!-- POSTPROCESSDATA: nfsch47|<ITALICS>sgi_mountd</ITALICS> daemon --><ITALICS>sgi_mountd</ITALICS> in this example is an enhanced mount daemon that reports on SGI-specific export options.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="70428">Edit the <FILENAME>/etc/exports</FILENAME> file.</PARAGRAPH>
<PARAGRAPH>Edit the <INDEXTARGET ID="nfsch48"><!-- POSTPROCESSDATA: nfsch48|<ITALICS>/etc/exports</ITALICS> file --><FILENAME>/etc/exports</FILENAME> file to include the file systems you want to export and their export options (<FILENAME>/etc/exports</FILENAME> and export options are explained in <XREF IDREF="26813" TYPE="TITLE">&ldquo;Operation of /etc/exports and Other Export Files&rdquo; in Chapter&nbsp;2</XREF>). This example shows one possible entry for the <FILENAME>/etc/exports</FILENAME> file:</PARAGRAPH>
<CODE>
/usr/demos -ro,access=client1:client2:client3
</CODE>
<PARAGRAPH>In this example, the file system <FILENAME>/usr/demos</FILENAME> are exported with read-only access to three clients: client1, client2, and client3. Domain information can be included in the client names, for example client1.eng.sgi.com.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Run the <COMMAND>exportfs </COMMAND>command.</PARAGRAPH>
<PARAGRAPH>Once the <INDEXTARGET ID="nfsch49"><!-- POSTPROCESSDATA: nfsch49|<ITALICS>exportfs</ITALICS> command --><FILENAME>/etc/exports</FILENAME> file is complete, you must run the <COMMAND>exportfs</COMMAND> command to make the file systems accessible to clients. You should run <COMMAND>exportfs</COMMAND> anytime you change the <FILENAME>/etc/exports</FILENAME> file. Type this command:</PARAGRAPH>
<CODE>
<USERINPUT>/usr/etc/exportfs -av</USERINPUT>
</CODE>
<PARAGRAPH>In this example, the <CMDLINEOPT>&ndash;a</CMDLINEOPT> option exports all file systems listed in the <FILENAME>/etc/exports</FILENAME> file, and the<CMDLINEOPT>&space;&ndash;v</CMDLINEOPT> option causes <COMMAND>exportfs</COMMAND> to report its progress. Error messages reported by <COMMAND>exportfs</COMMAND>&space;usually indicate a problem with the <FILENAME>/etc/exports</FILENAME> file.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Use <COMMAND>exportfs</COMMAND> to verify your exports.</PARAGRAPH>
<PARAGRAPH>Type the <COMMAND>exportfs</COMMAND> command with no parameters to display a list of the exported file system(s) and their export options, as shown in this example:</PARAGRAPH>
<CODE>
<USERINPUT>/usr/etc/exportfs</USERINPUT>&space;
/usr/demos -ro,access=client1:client2:client3
</CODE>
<PARAGRAPH>In this example, <FILENAME>/usr/demos</FILENAME> is accessible as a read-only file system to systems client1, client2, and client3. This matches what is listed in the <FILENAME>/etc/exports</FILENAME> file for this server (see instruction <XREF IDREF="70428" TYPE="TEXT">6</XREF> of this procedure). If you see a mismatch between the <FILENAME>/etc/exports</FILENAME> file and the output of the <COMMAND>exportfs</COMMAND> command, check the <FILENAME>/etc/exports</FILENAME> file for syntax errors.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>The NFS software for this server is now running and its resources are available for mounting by clients. Repeat these instructions to set up additional NFS servers.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="38320">Setting Up an NFS Client</TITLE><PARAGRAPH>To set up an an NFS client for conventional mounting, you must:<INDEXTARGET ID="nfsch410"><!-- POSTPROCESSDATA: nfsch410|client:setting up --><INDEXTARGET ID="nfsch411"><!-- POSTPROCESSDATA: nfsch411|<ITALICS>/etc/fstab</ITALICS> file --><INDEXTARGET ID="nfsch412"><!-- POSTPROCESSDATA: nfsch412|<ITALICS>mount</ITALICS> command:on client --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>verify that NFS software is running on the client.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>edit the <FILENAME>/etc/fstab</FILENAME> file to add the names of directories to be mounted.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>mount directories in <FILENAME>/etc/fstab</FILENAME> by giving the <COMMAND>mount</COMMAND> command or by rebooting your system. These directories remain mounted until you explicitly unmount them. </PARAGRAPH>
</BULLET>
</BULLETLIST>
<NOTE><PREFIX>Note</PREFIX>For instructions on mounting directories not listed in <FILENAME>/etc/fstab</FILENAME>, see <XREF IDREF="32184" TYPE="TITLE">&ldquo;Temporary NFS Mounting&rdquo; in Chapter&nbsp;5</XREF>.</NOTE>
<PARAGRAPH>The procedure below explains how to set up NFS software on a client and mount its NFS resources using the <COMMAND>mount</COMMAND> command. You must do this procedure as the superuser.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Use <COMMAND>versions</COMMAND> to verify the correct software has been installed on the client:</PARAGRAPH>
<CODE>
<USERINPUT># versions | grep nfd </USERINPUT>
I  nfs                  07/09/97  Network File System, 6.5
I  nfs.man              07/09/97  NFS Documentation
I  nfs.man.nfs          07/09/97  NFS Support Manual Pages
I  nfs.man.relnotes     07/09/97  NFS Release Notes
I  nfs.sw               07/09/97  NFS Software
I  nfs.sw.autofs        07/09/97  AutoFS Support
I  nfs.sw.cachefs       07/09/97  CacheFS Support
I  nfs.sw.nfs           07/09/97  NFS Support
I  nfs.sw.nis           07/09/97  NIS (formerly Yellow Pages)Support
</CODE>
<PARAGRAPH>This example shows NFS as I (installed). A complete listing of current software modules is contained in<DOCTITLE>&space;ONC3/NFS Release Notes</DOCTITLE>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="43236">Use <COMMAND>chkconfig</COMMAND> to check the client's NFS configuration flag.</PARAGRAPH>
<PARAGRAPH>To verify that <INDEXTARGET ID="nfsch413"><!-- POSTPROCESSDATA: nfsch413|<ITALICS>chkconfig</ITALICS> command:<ITALICS>nfs</ITALICS> flag --><CMDLINEOPT>nfs</CMDLINEOPT> is <CMDLINEOPT>on</CMDLINEOPT>, give the <COMMAND>chkconfig</COMMAND> command and check its output (see <XREF IDREF="33183" TYPE="TITLE">&ldquo;Setting Up the NFS Server&rdquo;</XREF> in this chapter for details on <COMMAND>chkconfig</COMMAND>).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If your output shows that <CMDLINEOPT>nfs</CMDLINEOPT> is <CMDLINEOPT>off</CMDLINEOPT>, type this command and reboot your system:</PARAGRAPH>
<CODE>
<USERINPUT>/etc/chkconfig nfs on</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Verify that NFS daemons are running.</PARAGRAPH>
<PARAGRAPH>Four <ITALICS>nfsd</ITALICS> and four <ITALICS>biod</ITALICS> daemons should be running (the default number specified in <FILENAME>/etc/config/nfsd.options</FILENAME> and <FILENAME>/etc/config/biod.options</FILENAME>). Verify that the appropriate NFS daemons are running using the <COMMAND>ps</COMMAND> command, shown below. </PARAGRAPH>
<PARAGRAPH>The output of your entries looks similar to the output in these examples:</PARAGRAPH>
<CODE>
<USERINPUT>ps -ef | grep nfsd</USERINPUT>&space;
root   102      1  0  Jan 30 ?      0:00 /usr/etc/nfsd 4
root   104    102  0  Jan 30 ?      0:00 /usr/etc/nfsd 4
root   105    102  0  Jan 30 ?      0:00 /usr/etc/nfsd 4
root   106    102  0  Jan 30 ?      0:00 /usr/etc/nfsd 4
root  2289   2287  0 14:04:50 ttyq4 0:00 grep nfsd
<USERINPUT>ps -ef | grep biod</USERINPUT>
root   107      1  0  Jan 30 ?      0:00 /usr/etc/biod 4
root   108      1  0  Jan 30 ?      0:00 /usr/etc/biod 4
root   109      1  0  Jan 30 ?      0:00 /usr/etc/biod 4
root   110      1  0  Jan 30 ?      0:00 /usr/etc/biod 4
root  2291   2287  4 14:04:58 ttyq4 0:00 grep biod
</CODE>
<PARAGRAPH>If no NFS daemons appear in your output, they were not included in the IRIX kernel during NFS installation. To check the kernel, type this command:</PARAGRAPH>
<CODE>
<USERINPUT>strings /unix | grep nfs</USERINPUT>
</CODE>
<PARAGRAPH>If there is no output, rebuild the kernel with this command, then reboot the system:<INDEXTARGET ID="nfsch414"><!-- POSTPROCESSDATA: nfsch414|<ITALICS>/etc/init.d/autoconfigure</ITALICS> script --></PARAGRAPH>
<CODE>
<USERINPUT>/etc/autoconfig -f</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Edit the <FILENAME>/etc/fstab</FILENAME>&space;file.</PARAGRAPH>
<PARAGRAPH>Add an entry to the <FILENAME>/etc/fstab</FILENAME> file for each NFS directory you want mounted when the client is booted. The example below illustrates an <FILENAME>/etc/fstab</FILENAME> with an NFS entry to mount <FILENAME>/usr/demos</FILENAME> from the server redwood at mount point <FILENAME>/n/demos</FILENAME>: </PARAGRAPH>
<CODE>
/dev/root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xfs rw,raw=/dev/rroot 0 0
/dev/usr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/usr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xfs rw,raw=/dev/rusr 0 0
redwood:/usr/demos&nbsp;/n/demos&nbsp;&nbsp;&nbsp;nfs ro,bg 0 0
</CODE>
<NOTE><PREFIX>Note</PREFIX>The background (<CMDLINEOPT>bg</CMDLINEOPT>) option in this example allows the client to proceed with the boot sequence without waiting for the mount to complete. If the <CMDLINEOPT>bg</CMDLINEOPT> option is not used, the client hangs if the server is unavailable.</NOTE>
</LIST>
<LIST><PARAGRAPH>Create the mount points for each NFS directory.</PARAGRAPH>
<PARAGRAPH>After you edit the <FILENAME>/etc/fstab</FILENAME> file, create a directory to serve as the mount point for each NFS entry in <FILENAME>/etc/fstab</FILENAME> file. If you specified an existing directory as a mount point for any of your <FILENAME>/etc/fstab</FILENAME> entries, remember that the contents of the directory are inaccessible while the NFS mount is in effect. </PARAGRAPH>
<PARAGRAPH>For example, to create the mount point <FILENAME>/n/demos</FILENAME> for mounting the directory <FILENAME>/usr/demos</FILENAME> from server redwood, give this command:</PARAGRAPH>
<CODE>
<USERINPUT>mkdir -p /n/demos</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Mount each NFS resource.</PARAGRAPH>
<PARAGRAPH>You can use the <COMMAND>mount</COMMAND> command in several ways to mount the entries in this client's <FILENAME>/etc/fstab</FILENAME>. See the <REFPAGE>mount(1M)</REFPAGE> reference page for a description of the options. The examples below show two methods: mounting each entry individually and mounting all <ITALICS>fstab</ITALICS> entries that specify a particular server. The first example is:</PARAGRAPH>
<CODE>
<USERINPUT>mount /n/demos</USERINPUT>
</CODE>
<PARAGRAPH>In this example, only the mount point is specified. All other information needed to perform the mount, the server name redwood and its resource <FILENAME>/usr/demos</FILENAME>, is provided by the <FILENAME>/etc/fstab</FILENAME> file.</PARAGRAPH>
<PARAGRAPH>The second example is:</PARAGRAPH>
<CODE>
<USERINPUT>mount -h redwood</USERINPUT>  
</CODE>
<PARAGRAPH>In this example, all NFS entries in<FILENAME>&space;/etc/fstab</FILENAME> that specify server redwood are mounted.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>If you reboot the client instead of using the <COMMAND>mount</COMMAND> command, all NFS entries in <FILENAME>/etc/fstab</FILENAME> are mounted.</NOTE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>The NFS software for this client is now ready to support user requests for NFS directories. Repeat these instructions to set up additional NFS clients.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="33466">Setting Up the Automatic Mounters</TITLE><PARAGRAPH>Since the automatic mounters run only on NFS clients, all setup for the automatic mounters is done on the client system. This section provides two procedures for setting up the automatic mounters: one for setting up a default <COMMAND>automount</COMMAND> or <COMMAND>autofs</COMMAND> environment (<COMMAND>autofs</COMMAND> is recommended) and one for setting up a more complex environment.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Setting Up a Default Automatic Mounter Environment </TITLE><PARAGRAPH>If you set up a default automatic mounter environment on a client, at system startup<INDEXTARGET ID="nfsch415"><!-- POSTPROCESSDATA: nfsch415|automatic mounters:setting up default environment --><INDEXTARGET ID="nfsch416"><!-- POSTPROCESSDATA: nfsch416|<ITALICS>automount</ITALICS> command<ITALICS>autofs</ITALICS> command --><INDEXTARGET ID="nfsch417"><!-- POSTPROCESSDATA: nfsch417|<ITALICS>/etc/config/automount.options</ITALICS> file<ITALICS>/etc/config/autofs.options</ITALICS> file --><INDEXTARGET ID="nfsch418"><!-- POSTPROCESSDATA: nfsch418|<BOLD>&ndash;hosts</BOLD> map --><INDEXTARGET ID="nfsch419"><!-- POSTPROCESSDATA: nfsch419|<ITALICS>/tmp_mnt</ITALICS> directory --><INDEXTARGET ID="nfsch420"><!-- POSTPROCESSDATA: nfsch420|<ITALICS>/etc/xtab</ITALICS> file --><COMMAND>&space;automount (</COMMAND>or <COMMAND>autofs) </COMMAND>reads the<FILENAME>&space;/etc/config/automount.options</FILENAME>&space;file (or <FILENAME>/etc/config/autofs.options</FILENAME>&space;file) for mount information. By default, the options file contains an entry for a special map called <CMDLINEOPT>&ndash;hosts</CMDLINEOPT>. The <CMDLINEOPT>&ndash;hosts</CMDLINEOPT> map tells the automatic mounter to read the hosts database from the Unified Naming Service database; see the <REFPAGE>nsswitch.conf(4) </REFPAGE>reference page) and use the server specified if the hosts database has a valid entry for that server. When using the <CMDLINEOPT>&ndash;hosts</CMDLINEOPT> map, when a client accesses a server, the automatic mounter gets the exports list from the server and mounts all directories exported by that server. <COMMAND>automount</COMMAND> uses <FILENAME>/tmp_mnt/hosts</FILENAME> as the mount point, and <COMMAND>autofs</COMMAND> uses <FILENAME>/hosts</FILENAME>. </PARAGRAPH>
<PARAGRAPH>A sample<FILENAME>&space;&ndash;hosts</FILENAME> entry in <FILENAME>/etc/config/automount.options</FILENAME> is:</PARAGRAPH>
<CODE>
-v    /hosts    -hosts    -nosuid,nodev
</CODE>
<PARAGRAPH>Use this procedure to set up the default automatic mounter environment on an NFS client. You must do this procedure as the superuser.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Verify that NFS flags are on.</PARAGRAPH>
<PARAGRAPH>By default, the <INDEXTARGET ID="nfsch421"><!-- POSTPROCESSDATA: nfsch421|<ITALICS>chkconfig</ITALICS> command:<ITALICS>nfs</ITALICS> flag --><INDEXTARGET ID="nfsch422"><!-- POSTPROCESSDATA: nfsch422|<ITALICS>chkconfig</ITALICS> command:automatic mounters flag --><CMDLINEOPT>nfs</CMDLINEOPT> and <CMDLINEOPT>autofs</CMDLINEOPT> (or <CMDLINEOPT>automount</CMDLINEOPT>) flags are set to <CMDLINEOPT>on</CMDLINEOPT>. To verify that they are on, give the <COMMAND>chkconfig</COMMAND> command and check its output (see instruction <XREF IDREF="43236" TYPE="TEXT">2</XREF> of <XREF IDREF="38320" TYPE="TITLE">&ldquo;Setting Up an NFS Client&rdquo;</XREF> in this chapter for sample <COMMAND>chkconfig</COMMAND> output). </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If the command output shows that <CMDLINEOPT>nfs</CMDLINEOPT> and <CMDLINEOPT>autofs</CMDLINEOPT> (or <CMDLINEOPT>automount</CMDLINEOPT>) is set to <CMDLINEOPT>off</CMDLINEOPT>, give either of these sets of commands to reset them, then reboot:</PARAGRAPH>
<CODE>
<USERINPUT>/etc/chkconfig nfs on</USERINPUT>&space;
<USERINPUT>/etc/chkconfig autofs on</USERINPUT>
or
<USERINPUT>/etc/chkconfig nfs on</USERINPUT>
<USERINPUT>/etc/chkconfig automount on</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Verify that the default configuration is working:</PARAGRAPH>
<CODE>
<USERINPUT>cd /hosts/</USERINPUT><VARIABLE>servername</VARIABLE>
</CODE>
<PARAGRAPH>In place of <VARIABLE>servername</VARIABLE>, substitute the hostname of any system whose name can be resolved by the hostname resolution method you are using (see the <REFPAGE>resolver(4)</REFPAGE> reference page). If the system specified is running NFS and has file systems that can be accessed by this client, <COMMAND>autofs </COMMAND>mounts all available file systems to <FILENAME>/hosts/</FILENAME><VARIABLE>servername</VARIABLE> (<COMMAND>automount</COMMAND> uses <FILENAME>/tmp_mnt/hosts/</FILENAME><VARIABLE>servername</VARIABLE>). If the system is not running NFS or has nothing exported that you have access to, you get an error message when you try to access its file systems.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Verify that directories have been mounted, for example:</PARAGRAPH>
<CODE>
<USERINPUT>mount</USERINPUT>&space;
<VARIABLE>servername</VARIABLE>:/ on /hosts/<VARIABLE>servername</VARIABLE> type nfs (rw,dev=c0005)(for <COMMAND>autofs</COMMAND>)
or
<VARIABLE>servername</VARIABLE>:/ on /tmp_mnt/hosts/<VARIABLE>servername</VARIABLE> type nfs (rw,dev=c0005)(for <COMMAND>automount</COMMAND>)

</CODE>
<PARAGRAPH>The automatic mounter has serviced this request. It dynamically mounted <FILENAME>/hosts/</FILENAME><VARIABLE>servername</VARIABLE> using the default automatic mounter environment.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Setting Up a Custom Automatic Mounter Environment</TITLE><PARAGRAPH>A customized automatic mounter environment allows you to select the NFS directories that are dynamically mounted on a particular client, and allows you to customize the options in effect for particular mounts. You must complete four general steps to set up a customized automount environment:<INDEXTARGET ID="nfsch423"><!-- POSTPROCESSDATA: nfsch423|automatic mounters:setting up custom environment --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Creating the maps.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Starting the automatic mounter program.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Verifying the automatic mounter process.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Testing the automatic mounter<COMMAND>.</COMMAND></PARAGRAPH>
</LIST>
</ORDEREDLIST>
<SECTION3 LBL="" HELPID = ""><TITLE>Step 1: Creating the Maps</TITLE><PARAGRAPH>A customized automatic mounter environment contains a master map and any combination of direct and indirect maps. Although a master map is required, the automatic mounter does not require both direct and indirect maps. You can use either direct or indirect maps exclusively. AutoFS comes with a default <INDEXTARGET ID="nfsch424"><!-- POSTPROCESSDATA: nfsch424|maps:direct --><INDEXTARGET ID="nfsch425"><!-- POSTPROCESSDATA: nfsch425|maps:master --><INDEXTARGET ID="nfsch426"><!-- POSTPROCESSDATA: nfsch426|maps:indirect --><INDEXTARGET ID="nfsch427"><!-- POSTPROCESSDATA: nfsch427|master maps --><INDEXTARGET ID="nfsch428"><!-- POSTPROCESSDATA: nfsch428|indirect maps --><INDEXTARGET ID="nfsch429"><!-- POSTPROCESSDATA: nfsch429|direct maps --><FILENAME>/etc/auto_master</FILENAME> file that can be modified.</PARAGRAPH>
<PARAGRAPH>Instructions for creating each type of map are given below. Notice from these instructions that a crosshatch (<INDEXTARGET ID="nfsch430"><!-- POSTPROCESSDATA: nfsch430|# in maps --><INDEXTARGET ID="nfsch431"><!-- POSTPROCESSDATA: nfsch431|maps:# in maps --><SCREENDISPLAY>#</SCREENDISPLAY>) at the beginning of a line indicates a comment line in all types of maps. Include comment lines in your maps to illustrate map formats until you become familiar with each map type.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH><XREFTARGET ID="81115">Create or modify the master map on the client.</PARAGRAPH>
<PARAGRAPH>The master map points the automatic mounter to other files that have more detailed information needed to complete NFS mounts. To create the master map, become superuser and create a file called <INDEXTARGET ID="nfsch432"><!-- POSTPROCESSDATA: nfsch432|<ITALICS>/etc/auto.master</ITALICS> file<ITALICS>/etc/auto_master</ITALICS> file --><FILENAME>/etc/auto.master</FILENAME> (for <COMMAND>automount</COMMAND>) with any text editor. With AutoFS, modify the default <FILENAME>/etc/auto_master</FILENAME> file. </PARAGRAPH>
<PARAGRAPH>Specify the mount point, map name, and any options that apply to the direct and indirect maps in your entries, for example:</PARAGRAPH>
<CODE>
#Mount Point   Map Name            Map Options
/food/dinner   /etc/auto.food      -ro
/-             /etc/auto.exercise  -ro,soft    
/hosts         -hosts              -nosuid,nodev
</CODE>
</LIST>
<LIST><PARAGRAPH>Create the indirect map.</PARAGRAPH>
<PARAGRAPH>Create your indirect map and insert the entries it needs. This example is the indirect map <FILENAME>/etc/auto.food</FILENAME>, listed in <FILENAME>/etc/auto.master</FILENAME> (or <ITALICS>/etc/auto_master</ITALICS>) in instruction <XREF IDREF="81115" TYPE="TEXT">1</XREF>:</PARAGRAPH>
<CODE>
#Directory    Options      Location
ravioli                    venice:/food/pasta
crepe         -rw          paris:/food/desserts
chowmein                   hongkong:/food/noodles 
</CODE>
</LIST>
<LIST><PARAGRAPH>Create the direct map.</PARAGRAPH>
<PARAGRAPH>Create your direct map and insert the entries it needs. This example is the direct map <FILENAME>/etc/auto.exercise</FILENAME>, listed in <FILENAME>/etc/auto.master </FILENAME>(or <ITALICS>/etc/auto_master</ITALICS>) in instruction <XREF IDREF="81115" TYPE="TEXT">1</XREF>:</PARAGRAPH>
<CODE>
#Directory        Options   Location
/leisure/swim               spitz:/sports/water/swim
/leisure/tennis             becker:/sports/racquet/tennis
/leisure/golf               palmer:/sports/golf  
</CODE>
</LIST>
</ORDEREDLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Step 2: Starting the Automatic Mounter Program</TITLE><PARAGRAPH>You can set up the software on a client so that the automatic mounter starts when the client is booted, and you can also start the automatic mounter from the command line. The procedures in this section explain how to set up the automatic mounter to start during the boot sequence.<INDEXTARGET ID="nfsch433"><!-- POSTPROCESSDATA: nfsch433|<ITALICS>automount</ITALICS> command<ITALICS>autofs</ITALICS> command --><INDEXTARGET ID="nfsch434"><!-- POSTPROCESSDATA: nfsch434|automatic mounters:starting command --></PARAGRAPH>
<PARAGRAPH>If the automatic mounter is configured on at system startup, the <INDEXTARGET ID="nfsch435"><!-- POSTPROCESSDATA: nfsch435|<ITALICS>/etc/init.d/network</ITALICS> script --><INDEXTARGET ID="nfsch436"><!-- POSTPROCESSDATA: nfsch436|<ITALICS>/etc/config/automount.options</ITALICS> file<ITALICS>/etc/config/auto_master</ITALICS> file<ITALICS>/etc/config/autofs.options</ITALICS> file --><FILENAME>/etc/init.d/network</FILENAME>&space;script reads the contents of the <FILENAME>/etc/config/automount.options</FILENAME>&space;file (or <FILENAME>/etc/config/autofs.options</FILENAME> and /etc/ auto_master files for <COMMAND>autofs</COMMAND>) to determine how to start the automatic mounter program, what to mount, and how to mount it. Depending on the site configuration specified in the options file, the automatic mounter either finds all necessary information in the options file, or it is directed to local or NIS maps (or both) for additional mounting information.</PARAGRAPH>
<PARAGRAPH>If you plan to use NIS database maps other than the <INDEXTARGET ID="nfsch437"><!-- POSTPROCESSDATA: nfsch437|NIS:maps --><FILENAME>&ndash;</FILENAME><CMDLINEOPT>hosts</CMDLINEOPT> built-in map, you need to create the NIS maps. See the<DOCTITLE>&space;NIS Administration Guide</DOCTITLE> for information on building custom NIS maps. Follow this procedure to set the automatic mounter to start automatically at system startup:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Configure the automatic mounter on with the <INDEXTARGET ID="nfsch438"><!-- POSTPROCESSDATA: nfsch438|<ITALICS>chkconfig</ITALICS> command:automatic mounters flag --><COMMAND>chkconfig</COMMAND> command (if needed):</PARAGRAPH>
<CODE>
<USERINPUT>/etc/chkconfig automount on</USERINPUT>&space;
or
<USERINPUT>/etc/chkconfig autofs on</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Modify the <FILENAME>/etc/config/automount.options</FILENAME> file (or <FILENAME>/etc/auto_master</FILENAME>&space;file).</PARAGRAPH>
<PARAGRAPH>Using any standard editor, modify <FILENAME>/etc/config/automount.options</FILENAME> (or <FILENAME>/etc/auto_master</FILENAME>) file to reflect the automatic mounter site environment. (See <REFPAGE>automount(1M)</REFPAGE> or <REFPAGE>autofs(1M)</REFPAGE> for details on the options file). Based on the previous examples, the <FILENAME>/etc/config/automount.options </FILENAME>file contains this entry:</PARAGRAPH>
<CODE>
-v -m -f /etc/auto.master
</CODE>
<PARAGRAPH>The <FILENAME>/etc/config/autofs.options </FILENAME>file contains this entry:</PARAGRAPH>
<CODE>
-v 
</CODE>
<PARAGRAPH>The <INDEXTARGET ID="nfsch439"><!-- POSTPROCESSDATA: nfsch439|<ITALICS>automount</ITALICS> command --><CMDLINEOPT>&ndash;v</CMDLINEOPT> option directs error messages to the screen during startup and into the <FILENAME>/var/adm/SYSLOG</FILENAME> file once the automatic mounter is up and running. The <CMDLINEOPT>&ndash;m</CMDLINEOPT> option tells <COMMAND>automount</COMMAND> not to check the NIS database for a master map. Use this option to isolate map problems to the local system by inhibiting <COMMAND>automount</COMMAND> from reading the NIS database maps, if any exist. The<CMDLINEOPT>&space;&ndash;f </CMDLINEOPT>option tells <COMMAND>automount</COMMAND> that the argument that follows it is the full pathname of the master file.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>In general, it is recommended that you start the automatic mounter with the verbose option (<CMDLINEOPT>&ndash;v</CMDLINEOPT>), since this option provides messages that can help with problem solving.</NOTE>
</LIST>
<LIST><PARAGRAPH>Reboot the system.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Step 3: Verifying the Automatic Mounter Process</TITLE><PARAGRAPH>Verify that the automatic mounter process is functioning by performing the following two steps.<INDEXTARGET ID="nfsch440"><!-- POSTPROCESSDATA: nfsch440|automatic mounters:verifying process is running --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Validate that the automatic mounter daemon is running with the&space;ps command:</PARAGRAPH>
<CODE>
<USERINPUT>ps -ef | grep automount</USERINPUT>&space;
or 
<USERINPUT>ps -ef | grep autofs</USERINPUT>
</CODE>
<PARAGRAPH>You should see output similar to this for <COMMAND>automount</COMMAND>:</PARAGRAPH>
<CODE>
root 455 1  0   Jan 30 ? 0:02 automount -v -m -f /etc/auto.master
root   4675  4673  0 12:45:05 ttyq5    0:00 grep automount    
</CODE>
<PARAGRAPH>You should see output similar to this for <COMMAND>autofs</COMMAND>:</PARAGRAPH>
<CODE>
root 555 1  0   Jan 30 ? 0:02 autofs -v - /etc/auto_master
root   4775  4773  0 12:45:05 ttyq5    0:00 grep autofs 
</CODE>
</LIST>
<LIST><PARAGRAPH>Check the <FILENAME>/etc/mtab</FILENAME> entries.</PARAGRAPH>
<PARAGRAPH>When the automatic mounter program starts, it creates entries in the client's <INDEXTARGET ID="nfsch441"><!-- POSTPROCESSDATA: nfsch441|<ITALICS>/etc/mtab</ITALICS> file --><FILENAME>/etc/mtab</FILENAME> for each of the automatic mounter's mount points. Entries in <FILENAME>/etc/mtab</FILENAME> include the process number and port number assigned to the automatic mounter, the mount point for each direct map entry, and each indirect map. The <FILENAME>/etc/mtab</FILENAME> entries also include the map name, map type (direct or indirect), and any mount options. </PARAGRAPH>
<PARAGRAPH>Look at the <FILENAME>/etc/mtab</FILENAME> file. A typical <FILENAME>/etc/mtab</FILENAME> table with <COMMAND>automount</COMMAND> running looks similar to this example (wrapped lines end with the \ character):</PARAGRAPH>
<CODE>
/dev/root / xfs rw,raw=/dev/rroot 0 0
/dev/usr /usr xfs rw,raw=/dev/rusr 0 0
/debug /debug dbg rw 0 0
/dev/diskless /diskless xfs rw,raw=/dev/rdiskless 0 0
/dev/d /d xfs rw,raw=/dev/rd 0 0
flight:(pid12155) /src/sgi ignore \
&space;   ro,port=885,map=/etc/auto.source,direct 0 0
flight:(pid12155) /pam/framedocs/nfs ignore \
&space;   ro,port=885,map=/etc/auto.source,direct 0 0
flight:(pid12155) /hosts ignore ro,port=885,\
&space;   map=-hosts,indirect,dev=1203 0 0
</CODE>
<PARAGRAPH>A typical <FILENAME>/etc/mtab</FILENAME> table with <COMMAND>autofs</COMMAND> running looks similar to this example:</PARAGRAPH>
<CODE>
-hosts on /hosts type autofs (ignore,indirect,nosuid,dev=1000010)
-hosts on /hosts2 type autofs \           (ignore,indirect,nosuid,vers=2,dev=100002)
-hosts on /hosts3 type autofs \ (ignore,indirect,fstype=cachefs,backfstype=nfs,dev=100003)
/etc/auto_test on /text type autofs\
(ignore,indirect,ro,nointr,dev=100004)
neteng:/ on /hosts2/neteng type nfs \
(nosuid,vers=2,dev=180004)
</CODE>
<PARAGRAPH>The entries corresponding to<COMMAND>&space;automount</COMMAND> mount points have the file system type <CMDLINEOPT>ignore</CMDLINEOPT> to direct programs to ignore this <FILENAME>/etc/mtab</FILENAME> entry. For instance, <COMMAND>df</COMMAND> and <COMMAND>mount</COMMAND>&space;do not report on file systems with the type <CMDLINEOPT>ignore</CMDLINEOPT>. When a directory is NFS mounted by the <COMMAND>automount</COMMAND> program, the <FILENAME>/etc/mtab</FILENAME> entry for the directory has <CMDLINEOPT>nfs</CMDLINEOPT> as the file system type. <COMMAND>df</COMMAND> and <COMMAND>mount</COMMAND> report on file systems with the type <CMDLINEOPT>nfs</CMDLINEOPT>.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Step 4: Testing the Automatic Mounter</TITLE><PARAGRAPH>When the automatic mounter program is set up and running on a client, any regular account can use it to mount remote directories transparently. You can test your automatic mounter setup by changing to a directory specified in your map configuration.<INDEXTARGET ID="nfsch442"><!-- POSTPROCESSDATA: nfsch442|automatic mounters:testing --></PARAGRAPH>
<PARAGRAPH>The instructions below explain how to verify that the automatic mounter is working.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>As a regular user, <COMMAND>cd </COMMAND>to an automounted directory.</PARAGRAPH>
<PARAGRAPH>For example, test whether the automatic mounter mounts <FILENAME>/food/pasta</FILENAME>:</PARAGRAPH>
<CODE>
<USERINPUT>cd /food/dinner/ravioli</USERINPUT>
</CODE>
<PARAGRAPH>This command causes the automatic mounter to look in the indirect map /etc/auto.food to execute a mount request to server venice and apply any specified options to the mount. <COMMAND>automount</COMMAND> then mounts the directory <FILENAME>/food/pasta</FILENAME> to the default mount point <FILENAME>/tmp_mnt/food/dinner/ravioli</FILENAME>. The directory <FILENAME>/food/dinner/ravioli</FILENAME> is a symbolic link to <FILENAME>/tmp_mnt/food/dinner/ravioli</FILENAME>. <COMMAND>autofs </COMMAND>mounts the directory <FILENAME>/food/pasta</FILENAME> to the default mount point <FILENAME>/food/dinner/ravioli</FILENAME>. </PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The <FILENAME>/food/dinner</FILENAME> directory appears empty unless one of its subdirectories has been accessed (and therefore mounted).</NOTE>
</LIST>
<LIST><PARAGRAPH>Verify that the individual mount has taken place.</PARAGRAPH>
<PARAGRAPH>Use the <COMMAND>pwd </COMMAND>command to verify that the mount has taken place, as shown in this example: </PARAGRAPH>
<CODE>
% <USERINPUT>pwd</USERINPUT>
/food/pasta
</CODE>
</LIST>
<LIST><PARAGRAPH>Verify that both directories have been automatically mounted.</PARAGRAPH>
<PARAGRAPH>You can also verify automounted directories by checking the output of a <COMMAND>mount</COMMAND> command:</PARAGRAPH>
<CODE>
% <USERINPUT>mount</USERINPUT>
</CODE>
<PARAGRAPH><COMMAND>mount</COMMAND> reads the current contents of the <FILENAME>/etc/mtab</FILENAME> file and includes conventionally mounted and automounted directories in its output. </PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>The custom configuration of automount is set up and ready to work for users on this client.</PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="23641">Setting Up the Lock Manager</TITLE><PARAGRAPH>The NFS lock manager provides file and record locking between a client and server for NFS-mounted directories. The lock manager is implemented by two daemons, <INDEXTARGET ID="nfsch443"><!-- POSTPROCESSDATA: nfsch443|lock manager:setting up --><INDEXTARGET ID="nfsch444"><!-- POSTPROCESSDATA: nfsch444|<ITALICS>lockd</ITALICS> daemon --><INDEXTARGET ID="nfsch445"><!-- POSTPROCESSDATA: nfsch445|<ITALICS>statd</ITALICS> daemon --><ITALICS>lockd </ITALICS>and <ITALICS>statd </ITALICS>(see <REFPAGE>lockd(1M)</REFPAGE> and <REFPAGE>statd(1M)</REFPAGE>). Both are installed as part of NFS software. </PARAGRAPH>
<PARAGRAPH>The NFS lock manager program must be running on both the NFS client and the NFS server to function properly. Use this procedure to check the lock manager setup:<INDEXTARGET ID="nfsch446"><!-- POSTPROCESSDATA: nfsch446|lock manager:verifying --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH><XREFTARGET ID="88507">Use <COMMAND>chkconfig</COMMAND> on the client to check the lock manager flag.</PARAGRAPH>
<PARAGRAPH>To verify that the <INDEXTARGET ID="nfsch447"><!-- POSTPROCESSDATA: nfsch447|<ITALICS>chkconfig</ITALICS> command:<ITALICS>lockd</ITALICS> flag --><CMDLINEOPT>lockd</CMDLINEOPT> flag is <CMDLINEOPT>on</CMDLINEOPT>, give the <COMMAND>chkconfig</COMMAND> command and check its output (see instruction <XREF IDREF="43236" TYPE="TEXT">2</XREF> of <XREF IDREF="38320" TYPE="TITLE">&ldquo;Setting Up an NFS Client&rdquo;</XREF> in this chapter for sample <COMMAND>chkconfig</COMMAND> output). If your output shows that <CMDLINEOPT>lockd</CMDLINEOPT> is <CMDLINEOPT>off</CMDLINEOPT>, give this command and reboot your system:</PARAGRAPH>
<CODE>
<USERINPUT>/etc/chkconfig lockd on</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="83195">Verify that <COMMAND>rpc.statd</COMMAND> and either <COMMAND>nlockmgr </COMMAND>or <COMMAND>nfsd</COMMAND> are running.</PARAGRAPH>
<PARAGRAPH>Give these commands and check their output to verify that the lock manager daemons, <COMMAND>rpc.statd</COMMAND> and either <COMMAND>nlockmgr </COMMAND>or <COMMAND>nfsd </COMMAND>are running:</PARAGRAPH>
<CODE>
<USERINPUT>ps -ef | grep statd</USERINPUT>&space;
root   131     1  0   Aug  6 ?        0:51 /usr/etc/rpc.statd
root  2044   427  2 16:13:24 ttyq1    0:00 grep statd 
<USERINPUT></USERINPUT>
<USERINPUT># rpcinfo -p nabokov | grep nlockmgr</USERINPUT>
100021    1   udp   2049  nlockmgr
100021    3   udp   2049  nlockmgr
100021    4   udp   2049  nlockmgr

# <USERINPUT>ps -ef | grep nfsd</USERINPUT>
root   102      1  0  Jan 30 ?        0:00 /usr/etc/nfsd 4
root   104    102  0  Jan 30 ?        0:00 /usr/etc/nfsd 4
</CODE>
<PARAGRAPH>If <INDEXTARGET ID="nfsch448"><!-- POSTPROCESSDATA: nfsch448|<ITALICS>rpc.statd</ITALICS> daemon --><INDEXTARGET ID="nfsch449"><!-- POSTPROCESSDATA: nfsch449|<ITALICS>rpc.lockd</ITALICS> daemon --><COMMAND>rpc.statd</COMMAND> is not running, start it manually by giving the following command:</PARAGRAPH>
<CODE>
<USERINPUT>/usr/etc/rpc.statd</USERINPUT>
</CODE>
<PARAGRAPH>If neither <COMMAND>rpc.lockd</COMMAND> or <COMMAND>nfsd</COMMAND> is running, start <COMMAND>rpc.lockd</COMMAND> manually by giving the following command:</PARAGRAPH>
<CODE>
<USERINPUT>/usr/etc/rpc.lockd</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Repeat instructions <XREF IDREF="88507" TYPE="TEXT">1</XREF> and <XREF IDREF="83195" TYPE="TEXT">2</XREF>, above, on the NFS server, using <COMMAND>rpc.lockd</COMMAND> instead of <COMMAND>nfsd</COMMAND>.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="40941">Setting Up the CacheFS File System</TITLE><PARAGRAPH>When you set up a cache, you can use all or part of an existing file system. You can also set up a new slice to be used by CacheFS. In addition, when you create a cache, you can specify the percentage of resources, such as number of files or blocks, that CacheFS can use in the front file system. The configurable cache parameters are discussed in the section <XREF IDREF="59635" TYPE="TITLE">&ldquo;Cache Resource Parameters in CacheFS&rdquo;</XREF>.</PARAGRAPH>
<PARAGRAPH>Before starting to set up CacheFS, check that it is configured to start on the client.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Check the CacheFS configuration flag.</PARAGRAPH>
<PARAGRAPH>When the <INDEXTARGET ID="nfsch450"><!-- POSTPROCESSDATA: nfsch450|<ITALICS>/etc/init.d/network</ITALICS> script --><COMMAND>/etc/init.d/network</COMMAND> script executes at system startup, it starts CacheFS running if the <COMMAND>chkconfig </COMMAND>flag <CMDLINEOPT>cachefs</CMDLINEOPT> is <CMDLINEOPT>on</CMDLINEOPT>. </PARAGRAPH>
<PARAGRAPH>To verify that <INDEXTARGET ID="nfsch451"><!-- POSTPROCESSDATA: nfsch451|<ITALICS>chkconfig</ITALICS> command:<ITALICS>cachefs</ITALICS> flag --><CMDLINEOPT>cachefs</CMDLINEOPT> is <CMDLINEOPT>on</CMDLINEOPT>, type the <COMMAND>chkconfig</COMMAND> command and check its output, for example: </PARAGRAPH>
<CODE>
<USERINPUT>/etc/chkconfig</USERINPUT>&space;
Flag                 State
====                 =====
...
cachefs              on
...
</CODE>
<PARAGRAPH>This example shows that the <CMDLINEOPT>cachefs</CMDLINEOPT> flag is set to <CMDLINEOPT>on</CMDLINEOPT>. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If your output shows that <CMDLINEOPT>cachefs</CMDLINEOPT> is <CMDLINEOPT>off</CMDLINEOPT>, type this command and reboot your system:</PARAGRAPH>
<CODE>
<USERINPUT>/etc/chkconfig cachefs on</USERINPUT>&space;
</CODE>
</LIST>
</ORDEREDLIST>
<SECTION2 LBL="" HELPID = ""><TITLE>Front File System Requirements</TITLE><PARAGRAPH>CacheFS uses a local XFS file system for the front file system.You can use an existing XFS file system for the front file system or you can create a new one. Using an existing file system is the quickest way to set up a cache. Dedicating a file system exclusively to CacheFS gives you the greatest control over the file system space available for caching.</PARAGRAPH>
<CAUTION><PREFIX>Caution</PREFIX>Do not make the front file system read-only and do not set quotas on it. A read-only front file system prevents caching, and file system quotas interfere with control mechanisms built into CacheFS.</CAUTION>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Setting Up a Cached File System<INDEXTARGET ID="nfsch452"><!-- POSTPROCESSDATA: nfsch452|cached file systems: setting up --></TITLE><PARAGRAPH>There are two steps to setting up a cached file system:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>You can create the cache with the <COMMAND>cfsadmin</COMMAND> command. See <XREF IDREF="93798" TYPE="TITLE">&ldquo;Creating a Cache&rdquo;</XREF>. Normally the cache directory is created with default parameters when you use the <COMMAND>mount</COMMAND> command. If you want to create the cache directory with different parameters, follow the procedures in <XREF IDREF="93798" TYPE="TITLE">&ldquo;Creating a Cache.&rdquo;</XREF></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>You must mount the file system you want cached using the <CMDLINEOPT>-t cachefs</CMDLINEOPT> option to the <COMMAND>mount</COMMAND> command. See <XREF IDREF="23416" TYPE="TITLE">&ldquo;Mounting a Cached File System&rdquo;</XREF>.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="93798">Creating a Cache</TITLE><PARAGRAPH>The following example is the command to create a cache using the <INDEXTARGET ID="nfsch453"><!-- POSTPROCESSDATA: nfsch453|cached file systems: creating<ITALICS>cfsadmin</ITALICS> command --><COMMAND>cfsadmin</COMMAND> command: </PARAGRAPH>
<EXAMPLE>
<USERINPUT># cfsadmin &ndash;c </USERINPUT><VARIABLE>directory_name </VARIABLE>
</EXAMPLE>
<PARAGRAPH>The following example creates a cache and creates the cache directory <FILENAME>/local/mycache</FILENAME>. Make sure the cache directory does not already exist.</PARAGRAPH>
<EXAMPLE>
<USERINPUT># cfsadmin -c /local/mycache</USERINPUT>
</EXAMPLE>
<PARAGRAPH>This example uses the default cache parameter values. The CacheFS parameters are described in the section <XREF IDREF="59635" TYPE="TITLE">&ldquo;Cache Resource Parameters in CacheFS&rdquo;</XREF>. See the <REFPAGE>cfsadmin(1M)</REFPAGE> reference page and <XREF IDREF="32549" TYPE="TITLE">&ldquo;Cached File System Administration&rdquo;</XREF> for more information on <COMMAND>cfsadmin</COMMAND> options.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="60158">Setting Cache Parameters</TITLE><PARAGRAPH>The following example shows how to set parameters for a cache.<INDEXTARGET ID="nfsch454"><!-- POSTPROCESSDATA: nfsch454|cached file systems: setting parameters<ITALICS>cfsadmin</ITALICS> command --></PARAGRAPH>
<EXAMPLE>
<SCREENDISPLAY>cfsadmin -c -o</SCREENDISPLAY><VARIABLE>&space;parameter_list cache_directory </VARIABLE>
</EXAMPLE>
<PARAGRAPH>The <VARIABLE>parameter_list </VARIABLE>has the following form:</PARAGRAPH>
<EXAMPLE>
<VARIABLE>parameter_name1=value,parameter_name2=value,...</VARIABLE>
</EXAMPLE>
<PARAGRAPH>The parameter names are listed in <XREF IDREF="51665" TYPE="TABLE">Table&nbsp;2-2</XREF>. You must separate multiple arguments to the <CMDLINEOPT>&ndash;o</CMDLINEOPT> option with commas.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The maximum size of the cache is by default 90% of the front file system resources. Performance deteriorates significantly if an XFS file system exceeds 90% capacity.</NOTE>
<PARAGRAPH>The following example creates a cache named <FILENAME>/local/cache1</FILENAME> that can use a maximum of 80% of the disk blocks in the front file system, and can cache up to a highwater mark of 60% of the front file system blocks before starting to remove files.</PARAGRAPH>
<EXAMPLE>
cfsadmin -c -o maxblocks=80,hiblocks=60 /local/cache1
</EXAMPLE>
<PARAGRAPH>The following example creates a cache named <FILENAME>/local/cache2</FILENAME> that can use up to 75% of the files available in the front file system.</PARAGRAPH>
<EXAMPLE>
cfsadmin -c -o maxfiles=75 /local/cache2
</EXAMPLE>
<PARAGRAPH>The following example creates a cache named <FILENAME>/local/cache3</FILENAME> that can use 75% of the blocks in the front file system, that can cache up to a highwater mark of 60% of the front file system files before starting to remove files, and that has 70% of the files in the front file system as an absolute limit.</PARAGRAPH>
<EXAMPLE>
cfsadmin -c -o \ maxblocks=75,hifiles=60,maxfiles=70 /local/cache3
</EXAMPLE>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="23416">Mounting a Cached File System</TITLE><PARAGRAPH>There are two ways to mount a file system in a cache:<INDEXTARGET ID="nfsch455"><!-- POSTPROCESSDATA: nfsch455|cached file systems: mounting mounting cached file systems --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Using the <COMMAND>mount</COMMAND> command</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Creating an entry for the file system in the<FILENAME>&space;/etc/fstab</FILENAME> file</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE>Using mount to Mount a Cached File System</TITLE><PARAGRAPH>The following command mounts a file system in a cache.</PARAGRAPH>
<EXAMPLE>
mount -t cachefs <VARIABLE>back_file_system mount_point</VARIABLE>
</EXAMPLE>
<PARAGRAPH>The cache directory is automatically created when mounting a cached file system.</PARAGRAPH>
<PARAGRAPH>For example, the following command makes the file system<FILENAME>&space;merlin:/docs</FILENAME> available as a cached file system named<FILENAME>&space;/docs</FILENAME>:</PARAGRAPH>
<EXAMPLE>
mount -t cachefs -merlin:/docs /docs
</EXAMPLE>
<SECTION3 LBL="" HELPID = ""><TITLE>Mounting a Cached File System That Is Already Mounted</TITLE><PARAGRAPH>Use the <CMDLINEOPT>backpath</CMDLINEOPT> argument when the file system you want to cache has already been mounted. <CMDLINEOPT>Backpath</CMDLINEOPT> specifies the mount point of the mounted file system. When the <CMDLINEOPT>backpath</CMDLINEOPT> argument is used, the back file system must be already mounted as read-only. If you want to write to the back file system, you must unmount it before mounting it as a cached file system.</PARAGRAPH>
<PARAGRAPH>For example, if the file system <FILENAME>merlin:/doc </FILENAME>is already NFS-mounted on <FILENAME>/nfsdocs,</FILENAME> you can cache that file system by giving that pathname as the argument to <CMDLINEOPT>backpath</CMDLINEOPT>, as shown in the following example:</PARAGRAPH>
<EXAMPLE>
mount -t cachefs -o \ backfstype=nfs,cachedir=/local/cache1,backpath=/nfsdocs \ merlin:/doc /doc
</EXAMPLE>
<NOTE><PREFIX>Note</PREFIX>There is no performance gain in caching a local XFS disk file system.</NOTE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Mounting a CD-ROM as a Cached File System</TITLE><PARAGRAPH>So far, examples have illustrated back file systems that are NFS-mounted, and the device argument to the <INDEXTARGET ID="nfsch456"><!-- POSTPROCESSDATA: nfsch456|mounting a CD-ROM as a cached file system cached file systems: mounting a CD-ROM --><COMMAND>mount</COMMAND> command has taken the form <VARIABLE>server:file_system</VARIABLE>. If the back file system is an ISO9660 file system, the device argument is the CD-ROM device in the <FILENAME>/CDROM</FILENAME> directory. The file system type is <CMDLINEOPT>iso9660</CMDLINEOPT>.</PARAGRAPH>
<PARAGRAPH>The following example illustrates caching an ISO9660 back file system on the device <FILENAME>/CDROM </FILENAME>as <COMMAND>/doc </COMMAND>in the cache<FILENAME>&space;/local/cache1</FILENAME>:</PARAGRAPH>
<EXAMPLE>
mount -t cachefs -o backfstype=iso9660,cachedir=/local/cache1,\ ro,backpath=/CDROM /CDROM /doc
</EXAMPLE>
<PARAGRAPH>Because you cannot write to the CD-ROM, the <CMDLINEOPT>ro</CMDLINEOPT> argument is specified to make the cached file system read-only. The arguments to the<CMDLINEOPT>&space;-o </CMDLINEOPT>option are explained in <XREF IDREF="56149" TYPE="TITLE">&ldquo;Operation of /etc/fstab and Other Mount Files&rdquo;</XREF>.</PARAGRAPH>
<PARAGRAPH>You must specify the <CMDLINEOPT>backpath</CMDLINEOPT> argument because the CD-ROM is automatically mounted when it is inserted. The mount point is in the <FILENAME>/CDROM </FILENAME>directory and is determined by the name of the CD-ROM. The special device to mount is the same as the value for the <CMDLINEOPT>backpath</CMDLINEOPT> argument.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>When a CD-ROM is changed, the CacheFS file system must be unmounted and remounted.</NOTE>
</SECTION3>
</SECTION2>
</SECTION1>
</CHAPTER>

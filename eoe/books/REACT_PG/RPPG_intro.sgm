<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<INTRODUCTION><TITLE>About This Guide</TITLE><PARAGRAPH>A real-time program is one that must maintain a fixed timing relationship to external hardware. In order to respond to the hardware quickly and reliably, a real-time program must have special support from the system software and hardware.</PARAGRAPH>
<PARAGRAPH>This guide describes the real-time facilities of IRIX, called REACT, as well as the optional REACT/Pro extensions.<INDEXTARGET ID="RPPG_intro1"><!-- POSTPROCESSDATA: RPPG_intro1|REACT --><INDEXTARGET ID="RPPG_intro2"><!-- POSTPROCESSDATA: RPPG_intro2|REACT/Pro --></PARAGRAPH>
<PARAGRAPH>This guide is designed to be read online, using IRIS InSight. You are encouraged to read it in non-linear order using all the navigation tools that Insight provides. In the online book, the name of a reference page (&ldquo;man page&rdquo;) is red in color (for example, <INDEXTARGET ID="RPPG_intro3"><!-- POSTPROCESSDATA: RPPG_intro3|IRIS InSight --><REFPAGE>mpin(2)</REFPAGE> and <REFPAGE>sproc(2)</REFPAGE>). You can click on these names to cause the reference page to open automatically in a separate terminal window.</PARAGRAPH>
<SECTION1 LBL="" HELPID = ""><TITLE>Who This Guide Is For</TITLE><PARAGRAPH>This guide is written for real-time programmers. You, a real-time programmer, are assumed to be</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>an expert in the use of your programming language, which must be either C, Ada, or FORTRAN to use the features described here</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>knowledgeable about the hardware interfaces used by your real-time program</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>familiar with system-programming concepts such as interrupts, device drivers, multiprogramming, and semaphores</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>You are not assumed to be an expert in UNIX system programming, although you do need to be familiar with UNIX as an environment for developing software.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>What the Book Contains</TITLE><PARAGRAPH>Here is a summary of what you will find in the following chapters.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="12360" TYPE="TITLE">Chapter&nbsp;1, &ldquo;Real-Time Programs,&rdquo;</XREF> describes the important classes of real-time programs, emphasizing the different kinds of performance requirements they have.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="34779" TYPE="TITLE">Chapter&nbsp;2, &ldquo;How IRIX and REACT/Pro Support Real&ndash;Time Programs,&rdquo;</XREF> gives an overview of the real-time features of IRIX. From these survey topics you can jump to the detailed topics that interest you most.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="32752" TYPE="TITLE">Chapter&nbsp;3, &ldquo;Controlling CPU Workload,&rdquo;</XREF> describes how you can isolate a CPU and dedicate almost all of its cycles to your program's use.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="96303" TYPE="TITLE">Chapter&nbsp;4, &ldquo;Using the Frame Scheduler,&rdquo;</XREF> describes the REACT/Pro Frame Scheduler, which gives you a simple, direct way to structure your real-time program as a group of cooperating processes, efficiently scheduled on one or more isolated CPUs.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="36019" TYPE="TITLE">Chapter&nbsp;5, &ldquo;Optimizing Disk I/O for a Real-Time Program,&rdquo;</XREF> describes how to set up disk I/O to meet real-time constraints, including the use of asynchronous I/O and guaranteed-rate I/O.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="93712" TYPE="TITLE">Chapter&nbsp;6, &ldquo;Managing Device Interactions,&rdquo;</XREF> summarizes the software interfaces to external hardware, including user-level programming of external interrupts and VME and SCSI devices.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="13812" TYPE="TITLE">Chapter&nbsp;7, &ldquo;Managing User-Level Interrupts,&rdquo;</XREF> describes the user-level interrupt (ULI) facility to perform programmed I/O (PIO) from user space. You can use PIO to initiate a device action that leads to a device interrupt, and you can intercept and handle the interrupt in your program.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="15237" TYPE="TITLE">Appendix&nbsp;A, &ldquo;Sample Programs,&rdquo;</XREF> provides the location of the sample programs that are distributed with the REACT/Pro Frame Scheduler and describes them in detail.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="96700">Other Useful Books</TITLE><PARAGRAPH>The following books contain more information that can be useful to a real-time programmer.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>For a survey of all IRIX facilities and manuals, see <DOCTITLE>Programming on Silicon Graphics Systems: An Overview</DOCTITLE>; part number 007-2476-<ITALICS>nnn</ITALICS>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The <DOCTITLE>IRIXview User's Guide</DOCTITLE>, part number 007-2824-<ITALICS>nnn</ITALICS>, tells how to use a graphical performance analysis tool that can be of great help in debugging and tuning a real-time application on a multiprocessor system.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>Topics in IRIX Programming</DOCTITLE>, part number 007-2478-<ITALICS>nnn</ITALICS>, covers several programming facilities only touched on in this book.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>MIPS Compiling and Performance Tuning Guide</DOCTITLE>, 007-2479-<ITALICS>nnn</ITALICS> covers compiler use.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The <DOCTITLE>IRIX Device Driver Programmer's Guide</DOCTITLE>, part number 007-0911-<ITALICS>nnn</ITALICS>, gives details on all types of device control, including programmed I/O (PIO) and direct memory access (DMA) from the user process, as well as discussing the design and construction of device drivers and other kernel-level modules.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Administration of a multiprocessor is covered in a family of six books, including</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH><DOCTITLE>IRIX Admin: System Configuration and Operation</DOCTITLE> (007-2859-<ITALICS>nnn</ITALICS>)</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH><DOCTITLE>IRIX Admin: Disks and Filesystems</DOCTITLE> (007-2825-<ITALICS>nnn</ITALICS>)</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH><DOCTITLE>IRIX Admin: Peripheral Devices </DOCTITLE>(007-2861-<ITALICS>nnn</ITALICS>)</PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</BULLET>
<BULLET><PARAGRAPH>For details of the architecture of the CPU, processor cache, processor bus, and virtual memory, see the <DOCTITLE>MIPS R4000 Microprocessor User's Manual, 2nd Ed.</DOCTITLE> by Joseph Heinrich. This and other chip-specific documents are available for downloading from the MIPS home page, http://www.mips.com.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>For programming inter-computer connections using sockets,<DOCTITLE>&space;IRIX Network Programming Guide</DOCTITLE>, part number 007-0810-<ITALICS>nnn</ITALICS>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>For coding functions in assembly language,<DOCTITLE>&space;MIPSpro Assembly Language Programmer's Guide</DOCTITLE>, part number 007&ndash;2418&ndash;<ITALICS>nnn</ITALICS>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>For information about the physical description of the XIO-VME option for Origin and Onyx2 systems, refer to the <DOCTITLE>Origin2000 and Onyx2 VME Option Owner's Guide.</DOCTITLE></PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>In addition, Silicon Graphics offers training courses in Real-Time Programming and in Parallel Programming.</PARAGRAPH>
</SECTION1>
</INTRODUCTION>

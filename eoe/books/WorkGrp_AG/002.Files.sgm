<!-- Produced by version 3.13 (01/04/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="2"><TITLE>Filesystems and Files</TITLE><SECTION1 LBL="" HELPID = ""><TITLE>Filesystem Administration</TITLE><PARAGRAPH>Setting up and maintaining a filesystem is a system administrative task. If you are primarily a user in your work group, read the first part of this chapter to get a general understanding of filesystems, and read the section &ldquo;Backup and Recovery&rdquo; so that you understand what you need to do to protect the information on your system. If you are responsible for system administration in your work group, read all of this chapter to fully understand filesystems, including setup, maintenance, backup, and recovery.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>About Filesystems</TITLE><PARAGRAPH>If you store paper documents in a a filing cabinet, you can choose to organize them any number of ways (for example, alphabetically, by number, or by date). The method you choose is your filing system. In much the same way, when your store information on a disk connected to your workstation, the manner in which it is stored is determined by the installed <ITALICS>filesystem</ITALICS>. Your Silicon Graphics system can use any of several different filesystems. </PARAGRAPH>
<PARAGRAPH>Technically speaking, a filesystem is a data structure that organizes files and directories on a disk partition so that they can be easily retrieved. Only one filesystem can reside on a disk <ITALICS>partition</ITALICS> (a disk always has at least one partition, and may have several).</PARAGRAPH>
<PARAGRAPH>A file is a one-dimensional array of bytes that can be in any possible order and can represent literally any information, from a memo to a three-dimensional model to an application program. Information about each file is stored in structures called <ITALICS>inodes</ITALICS> (inodes are described in the next section, &ldquo;Inodes&rdquo;). A file exists within a single filesystem.</PARAGRAPH>
<PARAGRAPH>A directory is a container that stores files and other directories. It is merely another type of file that the user is permitted to use, but not allowed to write; the operating system itself retains the responsibility for writing directories. Directories cannot span filesystems. The combination of directories and files make up a filesystem.</PARAGRAPH>
<PARAGRAPH>The starting point of any filesystem is an unnamed directory that serves as the root for that particular filesystem. In the IRIX operating system there is always one filesystem that is itself referred to by that name, the <FILENAME>root</FILENAME> filesystem. Traditionally, the root directory of the root filesystem is represented by a single slash (/). Filesystems are attached to the directory hierarchy by the <COMMAND>mount</COMMAND> command. The following illustration shows root filesystem with a mount point of a single slash (/), and two additional filesystems with mount points of /d2 and /d3, respectively</PARAGRAPH>
<PARAGRAPH><FIGURE><GRAPHIC FILE="IRIX.filesystem.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="2-1"><PREFIX>Figure 2-1 </PREFIX>IRIX Filesystems</CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH>You can join two or more disk partitions to create a <ITALICS>logical volume</ITALICS>. The logical volume can be treated as if it were a single disk partition. A filesystem can reside on a logical volume, thus making it possible for a single filesystem to exist across more than one disk. You might create a logical volume with a single filesystem if you need to deal with very large files, or if you need to make it convenient to access a very large amount of storage space.</PARAGRAPH>
<PARAGRAPH>The following subsections describe key components of filesystems in more detail. For even greater detail, see <DOCTITLE>IRIX Admin: Disks and Filesystems.</DOCTITLE></PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Inodes</TITLE><PARAGRAPH>Information about each file is stored in a structure called an inode. The word inode is an abbreviation of the term<ITALICS>&space;index node</ITALICS>. An inode is a data structure that stores all information about a file except its name, which is stored in the directory. Each inode has an identifying inode number, which is unique across the filesystem that includes the file.</PARAGRAPH>
<PARAGRAPH>An inode contains this information:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>the type of the file (see the next section, &ldquo;Types of Files,&rdquo; for more information)</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the access mode of the file; the mode defines the access permissions read, write, and execute and may also contain security labels and access control lists</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the number of hard links to the file</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>who owns the file (the owner's user-ID number) and the group to which the file belongs (the group-ID number)</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the size of the file in bytes</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the date and time the file was last accessed and last modified</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>information for finding the file's data within the disk partition or logical volume</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the pathname of symbolic links (when they fit and on XFS filesystems only)</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>You can use the <COMMAND>ls</COMMAND> command with various options to display the information stored in inodes. For example, the command<COMMAND>&space;ls -l</COMMAND> displays all but the last two items in the list above in the order listed (the date shown is the last modified time).</PARAGRAPH>
<PARAGRAPH>Inodes do not contain the name of the file or its directory.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Types of Files</TITLE><PARAGRAPH>Filesystems can contain the file types listed in Table 2-1. You can see the type of a file in a shell window when you use the <COMMAND>ls -l</COMMAND> command&mdash;the first character in each line of output indicates the file's type. </PARAGRAPH>
<TABLE COLUMNS="3"><CAPTION LBL="2-1"><PREFIX>Table 2-1 </PREFIX>Filesystem File Types</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="79"><PARAGRAPH>File Type</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH>Indicator</PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>Comments</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="79"><PARAGRAPH>Regular files</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH>-</PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>One-dimensional arrays of bytes.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="79"><PARAGRAPH>Directories</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH>d</PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>Containers for files and other directories.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="79"><PARAGRAPH>Symbolic links</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH>l</PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>Files that contain the name of another file or a directory.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="79"><PARAGRAPH>Character</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH>c</PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>Enable communication devices between hardware and IRIX; 
data is accessed on a character-by-character basis.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="79"><PARAGRAPH>Block Device</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH>b</PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>Enable communication between hardware and IRIX; data is 
accessed in blocks from a system buffer cache.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="79"><PARAGRAPH>Named pipe (also 
known as FIFOs)</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>Allow communication between two unrelated processes on 
the same host. They are created with the <COMMAND>mknod</COMMAND> command.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="79"><PARAGRAPH>UNIX domain 
sockets</PARAGRAPH>
</CELL>
<CELL LEFT="85" WIDTH="54"><PARAGRAPH>s</PARAGRAPH>
</CELL>
<CELL LEFT="145" WIDTH="252"><PARAGRAPH>Connections between processes that allow them to 
communicate, possibly over a network.</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Hard Links and Symbolic Links</TITLE><PARAGRAPH>As discussed in the section &ldquo;Inodes&rdquo; in this chapter, information about each file, except for the name and directory of the file, is stored in an inode for the file. The name of the file is stored in the file's directory and a link to the file is created by associating the filename with an inode number. This type of link is called a <ITALICS>hard link</ITALICS>. Although every file is a hard link, the term is usually used only when two or more filenames are associated with the same inode number. Because inode numbers are unique only within a filesystem, hard links cannot be created across filesystem boundaries.</PARAGRAPH>
<PARAGRAPH>The second and later hard links to a file are created with the <COMMAND>ln</COMMAND> command, without the <COMMAND>-s</COMMAND> option. For example, say the current directory contains a file called <FILENAME>origfile</FILENAME>. To create a hard link called <FILENAME>linkfile</FILENAME> to the file <FILENAME>origfile</FILENAME>, enter this command:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>ln origfile linkfile</USERINPUT>
</CODE>
<PARAGRAPH>The output of <COMMAND>ls -l</COMMAND> for <FILENAME>origfile</FILENAME> and <FILENAME>linkfile</FILENAME> shows identical sizes and last modification times:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>ls -l origfile linkfile</USERINPUT>
<SCREENDISPLAY>-rw-rw-r--    2 joyce    user         4 Apr  5 11:15 origfile</SCREENDISPLAY>
<SCREENDISPLAY>-rw-rw-r--    2 joyce    user         4 Apr  5 11:15 linkfile</SCREENDISPLAY>
</CODE>
<PARAGRAPH>Because <FILENAME>origfile</FILENAME> and <FILENAME>linkfile</FILENAME> are simply two names for the same file, changes in the contents of the file are visible when using either filename. Removing one of the links has no effect on the other. The file is not removed until there are no links to it (the number of links to the file, the link count, is stored in the file's inode).</PARAGRAPH>
<PARAGRAPH>Another type of link is the <ITALICS>symbolic link</ITALICS>. This type of link is actually a file. The file contains a text string, which is the pathname of another file or directory. Because a symbolic link is a file, it has its own owners and permissions. The file or directory it points to can be in another filesystem. If the file or directory that a symbolic link points to is removed, it is no longer available and the symbolic link becomes useless until the target is recreated (it is called a <ITALICS>dangling symbolic link</ITALICS>).</PARAGRAPH>
<PARAGRAPH>Symbolic links are created with the <COMMAND>ln</COMMAND> command with the <COMMAND>-s</COMMAND> option. For example, to create a symbolic link called <FILENAME>linkdir</FILENAME> to the directory <FILENAME>origdir</FILENAME>, enter this command:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>ln -s origdir linkdir</USERINPUT>
</CODE>
<PARAGRAPH>The output of <COMMAND>ls -ld</COMMAND> for the symbolic link is shown below. Notice that the permissions and other information don't match. The listing for <FILENAME>linkdir</FILENAME> shows that it is a symbolic link to <FILENAME>origdir</FILENAME>.</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>ls -ld linkdir origdir</USERINPUT>
<SCREENDISPLAY>drwxrwxrwt  13 sys     sys  2048 Apr  5 11:37 origdir</SCREENDISPLAY>
<SCREENDISPLAY>lrwxrwxr-x   1 joyce   user    8 Apr  5 11:52 linkdir -> origdir</SCREENDISPLAY>
</CODE>
<PARAGRAPH>When you use &ldquo;<SCREENDISPLAY>..</SCREENDISPLAY>&rdquo; in pathnames that involve symbolic links, be aware that &ldquo;<SCREENDISPLAY>&space;..</SCREENDISPLAY>&rdquo; refers to the parent directory of the true file or directory, not the parent of the directory that contains the symbolic link.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Filesystem Names</TITLE><PARAGRAPH>Filesystems don't have names per se; they are identified by their location on a disk or their position in the directory structure in these ways:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>by the block and character device filenames of the disk partition or logical volume that contains the filesystem</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>by a mnemonic name for the disk partition or logical volume that contains the filesystem </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>by the mount point for the filesystem</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The filesystem identifier from the list above that you use with commands that administer filesystems (such as <COMMAND>mkfs</COMMAND>, <COMMAND>mount</COMMAND>, <COMMAND>umount</COMMAND>, and <COMMAND>fsck</COMMAND>) depends upon the command. See the reference page for the command you want to use or examples in this guide to determine which filesystem name to use.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>Setting Up Shared Filesystems</TITLE><SECTION2 LBL="" HELPID = ""><TITLE>Network File Systems (NFS)</TITLE><PARAGRAPH>NFS filesystems are available if you are using the optional NFS software. NFS filesystems are exported from one host and mounted on other hosts across a network. The capabilities of NFS filesystems meet the needs of many work groups, and are often used in work group computing environments.</PARAGRAPH>
<PARAGRAPH>On the hosts where the filesystems reside, they are treated just like any other filesystem (for example the Extent File System<SUPERSCRIPT>&trade;</SUPERSCRIPT>&mdash;EFS&mdash;or XFS). The only special feature of these filesystems is that they can be <ITALICS>exported</ITALICS> and mounted on other workstations. Exporting NFS filesystems is done with the <COMMAND>exportfs</COMMAND> command. On other hosts, these filesystems are mounted with the <COMMAND>mount</COMMAND> command or by using the automount facility of NFS.</PARAGRAPH>
<PARAGRAPH>NFS filesystems are described in detail in the <DOCTITLE>ONC3/NFS Administrator's Guide</DOCTITLE> , which is included with the NFS software option.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>Maintaining Filesystems</TITLE><SECTION2 LBL="" HELPID = ""><TITLE>Mounting and Unmounting Filesystems</TITLE><PARAGRAPH>Filesystems must be mounted in order to be accessed by IRIX. The subsections below explain the use of the <COMMAND>mount</COMMAND> and <COMMAND>umount</COMMAND> commands and the file <FILENAME>/etc/fstab</FILENAME> to mount and unmount filesystems.</PARAGRAPH>
<TIP><PREFIX>Tip</PREFIX>You can mount and unmount XFS filesystems using the graphical user interface of the <COMMAND>xfsm</COMMAND> command. For information, see its online help.</TIP>
<SECTION3 LBL="" HELPID = ""><TITLE>Manually Mounting Filesystems</TITLE><PARAGRAPH>The <COMMAND>mount</COMMAND> command is used to manually mount filesystems. The basic forms of the mount command are as shown below:</PARAGRAPH>
<CODE>
% mount device_file mount_point_directory 
% mount host:directory mount_point_directory
</CODE>
<PARAGRAPH><FILENAME>device_file</FILENAME> is a block device file. <FILENAME>host:directory</FILENAME> is the hostname and pathname of a remote directory that has been exported on the remote host by using the exportfs command on the remote host (it requires NFS). <FILENAME>mount_point_directory</FILENAME> is the mount point directory. The mount point must already exist (you can create it with the <COMMAND>mkdir</COMMAND> command).</PARAGRAPH>
<PARAGRAPH>If you omit either the <FILENAME>device_file</FILENAME> or the <FILENAME>mount_point_directory </FILENAME>from the <COMMAND>mount</COMMAND> command line, <COMMAND>mount</COMMAND> checks the file <FILENAME>/etc/fstab </FILENAME>to find the missing argument.</PARAGRAPH>
<PARAGRAPH>For example, to mount a filesystem manually, use this command:</PARAGRAPH>
<CODE>
% mount /dev/dsk/dks0d1s6 /usr
</CODE>
<PARAGRAPH>Another example, which uses a mnemonic device file name, is this:</PARAGRAPH>
<CODE>
% mount /dev/usr /usr
</CODE>
<PARAGRAPH>See the <REFPAGE>mount</REFPAGE> reference page for more information about the <COMMAND>mount</COMMAND> command.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Mounting Filesystems Automatically With the /etc/fstab File</TITLE><PARAGRAPH>The <FILENAME>/etc/fstab</FILENAME> file contains information about every filesystem and swap partition that is to be mounted automatically when the system starts up. In addition, the <FILENAME>/etc/fstab</FILENAME> file is used by the <COMMAND>mount</COMMAND> command when only the device block file or the mount point is given to the <COMMAND>mount</COMMAND> command. </PARAGRAPH>
<PARAGRAPH>For details about adding entries to <FILENAME>/etc/fstab</FILENAME>, and for information about the format of the <FILENAME>/etc/fstab</FILENAME> file, see the manual <DOCTITLE>IRIX Admin: Disks and Filesystems</DOCTITLE>.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Mounting a Remote Filesystem Automatically</TITLE><PARAGRAPH>If you have the optional NFS software, you can automatically mount any remote filesystem whenever it is accessed (for example, by changing directories to the filesystem with <COMMAND>cd</COMMAND>). The remote filesystem must first be exported with the <COMMAND>exportfs</COMMAND> command.</PARAGRAPH>
<PARAGRAPH>For complete information about setting up automounting, including all the available options, see the <REFPAGE>automount</REFPAGE> and <REFPAGE>exportfs</REFPAGE> reference pages. These commands are discussed more completely in the <DOCTITLE>ONC3/NFS Administrator's Guide </DOCTITLE>.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Unmounting Filesystems</TITLE><PARAGRAPH>Filesystems are automatically unmounted when the system is shut down. To manually unmount filesystems, use the <COMMAND>umount</COMMAND> command. There are three basic forms of the command, as shown below. You can use the first two forms to unmount local filesystems, and the first and third forms to unmount remote filesystems.</PARAGRAPH>
<CODE>
% umount mount_point_directory 
% umount device_file
% umount host:directory
</CODE>
<PARAGRAPH>For example, to unmount a local or remote filesystem mounted at <FILENAME>/d2</FILENAME>, enter this command:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>umount /d2</USERINPUT>
</CODE>
<PARAGRAPH>To unmount the filesystem on the partition <FILENAME>/dev/dsk/dks0d1s7</FILENAME>, enter this command:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>umount /dev/dsk/dks0d1s7</USERINPUT>
</CODE>
<PARAGRAPH>To unmount the remote-mounted (NFS) filesystem <FILENAME>depot:/usr/spool/news</FILENAME>, enter this command:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>umount depot:/usr/spool/news</USERINPUT>
</CODE>
<PARAGRAPH>To be unmounted, a filesystem must not be in use. If it is in use and you try to unmount it, you get a &ldquo;Resource busy&rdquo; message. These messages and their solutions are explained in the <REFPAGE>umount</REFPAGE> reference page.</PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>Administration Considerations</TITLE><PARAGRAPH>To administer filesystems, you need to do the following:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Monitor the amount of free space and free inodes available.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If a filesystem is chronically short of free space, take steps to alleviate the problem, such as removing old files and imposing disk usage quotas.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you use EFS filesystems, use <COMMAND>fsck</COMMAND> periodically to check the filesystems for data integrity. (XFS filesystems are checked with <COMMAND>xfs_check</COMMAND> only when a problem is suspected.)</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Back up filesystems.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>You can perform many of these functions automatically by using <ITALICS>shell scripts</ITALICS>. Many shell scripts are installed on your system by default. For more information, examine the scripts in <FILENAME>/usr/lib/acct</FILENAME>, such as <FILENAME>ckpacct</FILENAME> and <FILENAME>remove</FILENAME>, for ideas about how to build your own administration scripts. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>Backup and Recovery</TITLE><PARAGRAPH>No matter what kind of computing systems and environment you use, it is essential to regularly back up files. Backup copies are often the only way to recover files that have been accidentally erased, or lost due to hardware problems. It is the responsibility of the work group administrator to make sure there are backups of the files used in the work group. Depending on the work group's backup plan, it may be up to users or to the administrator to actually perform the backups, as well as any recovery that might be needed.</PARAGRAPH>
<SECTION2><SECTION3 LBL="" HELPID = ""><TITLE>Types of Backup Media</TITLE><PARAGRAPH>Some of the common types of backup media supported on Silicon Graphics systems include the following:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>1/4&rdquo; cartridge tape, 4-track</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>8 mm cartridge</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>DAT</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>DLT</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>In addition to backup devices attached to any particular system, backup devices of various types and capacities may be accessible through network connections. Refer to your owner's guide for information on locally accessible devices, and the appropriate vendor documentation for network-accessible device information.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Choosing a Backup Tool</TITLE><PARAGRAPH>The IRIX system provides a variety of backup tools, and you should use whichever ones work best for you. If many users at your site are already familiar with one backup program, you may wish to use that program consistently. If there are workstations at your site from other manufacturers, you may wish to use a backup utility that is common to all the workstations.</PARAGRAPH>
<PARAGRAPH>IRIX provides the following utilities for backing up your data:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>System Manager, providing backup functions (this is the recommended tool if you are backing up your own filesystem).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>bru</FILENAME>, a backup tool featuring automatic file compression, space estimates, and integrity checking. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>Backup</FILENAME> and <FILENAME>Restore</FILENAME>, command-line front ends to the <FILENAME>bru</FILENAME> utility.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>dump</FILENAME> and <FILENAME>restore</FILENAME>, standard UNIX utilities (cannot back up XFS filesystems).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>xfsdump</FILENAME> and <FILENAME>xfsrestore</FILENAME> for XFS filesystems, XFS compatible versions of <FILENAME>dump</FILENAME> and <FILENAME>restore.</FILENAME></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>tar</FILENAME>, the most common UNIX backup utility (almost certainly available on workstations from other manufacturers).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>cpio</FILENAME>, a standard UNIX command (often combined in command line pipes with other commands).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>dd</FILENAME>, a standard UNIX command to read input and write output.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Optional products for Silicon Graphics systems are also available. IRIS NetWorker&trade; is a scalable, full-featured data management tool for data backup and recovery. You can use IRIS NetWorker to back up data on high-end servers, or centrally manage backups for all your network workstations and file servers.</PARAGRAPH>
<PARAGRAPH>For more information about backup tools, see the <DOCTITLE>Personal System Administration Guide</DOCTITLE> and <DOCTITLE>IRIX Admin: Backup, Security, and Accounting.</DOCTITLE></PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>Backup Strategies</TITLE><PARAGRAPH>As the work group administrator, you should develop a regimen for backing up the system or systems at your site and follow it closely. That way, you can accurately assess which data you can and cannot recover in the event of a mishap.</PARAGRAPH>
<PARAGRAPH>Exactly how you perform backups depends upon your workstation configuration and other factors. Regardless of the strategy you choose, though, you should always keep at least two full sets of reasonably current backups. You should also encourage users to make their own backups, particularly of critical, rapidly changing files. Users' needs can change overnight, and they know best the value of their data.</PARAGRAPH>
<PARAGRAPH>Workstation users can back up important files using the System Manager, found in the System toolchest on your screen. The System Manager is described in detail in the <DOCTITLE>Personal System Administration Guide</DOCTITLE>. Make sure users have access to an adequate supply of media (for example, cartridge tapes), whether new or used.</PARAGRAPH>
<PARAGRAPH>If your media can handle your largest filesystem with a single volume, you don't have to use an incremental backup scheme, though such a system reduces the amount of time you spend making backups. However, if you must regularly use multiple volumes to back up your filesystems, then an incremental backup system reduces the number of tapes you use.</PARAGRAPH>
<PARAGRAPH>The following sections discuss the different aspects of backing up data.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>When and What to Back Up</TITLE><PARAGRAPH>How often you back up your data depends upon how busy a system is and how critical the data is. A simple rule of thumb is to back up any data on the system that is irreplaceable or that someone does not want to reenter.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Root Filesystems</TITLE><PARAGRAPH>On most systems, the <FILENAME>root</FILENAME> filesystem is fairly static. You do not need to back it up as frequently as the <FILENAME>/usr</FILENAME> filesystem.</PARAGRAPH>
<PARAGRAPH>Changes may occur when you add software, reconfigure hardware, change the site-networking (and the system is a server or network information service [NIS] master workstation), or change some aspect of the workstation configuration. In some cases, you can maintain backups only of the individual files that change, for example, <FILENAME>/unix, /etc/passwd</FILENAME>, and so forth.</PARAGRAPH>
<PARAGRAPH>This process of backing up single files is not always simple. Even a minor system change such as adding a user affects files all over the system, and if you use the graphical System Manager, you may tend to forget all the files that may have changed. Also, if you are not the only administrator at the site, you may not be aware of changes made by your coworkers. Using complete filesystem backup utilities, such as the System Manager or <FILENAME>bru</FILENAME>, on a regular schedule avoids these problems.</PARAGRAPH>
<PARAGRAPH>A reasonable approach is to back up the root partition once a month. In addition to regular backups, here are some specific times to back up a root filesystem:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>whenever you add users to the system, especially if the workstation is an NIS master workstation</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>just before installing new software</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>after installing new software and when you are certain the software is working properly</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>If your system is very active, or if you are not the only administrator, back up the root filesystem regularly.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>User Filesystems</TITLE><PARAGRAPH>The <FILENAME>/usr </FILENAME>filesystem, which often contains both system programs (such as in <FILENAME>/usr/bin</FILENAME>) and user accounts, is usually more active than a root filesystem. Therefore, you should back it up more frequently.</PARAGRAPH>
<PARAGRAPH>At a typical multiuser installation, backing up once per day, using an incremental scheme, should be sufficient.</PARAGRAPH>
<PARAGRAPH>Treat the <FILENAME>/var</FILENAME> filesystem similarly &mdash;it contains data such as the contents of users' mailboxes.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Incremental Backups</TITLE><PARAGRAPH>Incremental backups can use fewer tapes to provide the same level of protection as repeatedly backing up the entire filesystem. They are also faster than backing up every file on the system.</PARAGRAPH>
<PARAGRAPH>An incremental scheme for a particular filesystem looks something like this:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>On the first day, back up the entire filesystem. This is a monthly backup.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>On the second through seventh days, back up only the files that changed from the previous day. These are daily backups.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>On the eighth day, back up all the files that changed the previous week. This is a weekly backup.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Repeat steps 2 and 3 for four weeks (about one month).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>After four weeks (about a month), start over, repeating steps 1 through 4.</PARAGRAPH>
<PARAGRAPH>You can recycle daily tapes every month, or whenever you feel safe about doing so. You can keep the weekly tapes for a few months. You should keep the monthly tapes for about one year before recycling them.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Backing Up Files Across a Network</TITLE><PARAGRAPH>If you are managing a site with many networked workstations, you may wish to save backups on a device located on a central workstation.</PARAGRAPH>
<PARAGRAPH>To back up across a network, use the same basic backup commands, but with a slight change. Enter:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>system_name:/dev/tape</USERINPUT>
</CODE>
<PARAGRAPH>If required, specify an account on the remote device:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% </SCREENDISPLAY><USERINPUT>user@system_name:/dev/tape</USERINPUT>
</CODE>
<PARAGRAPH>Users can use a central tape drive from their workstations with this method. Note that if you are backing up to a remote tape drive on a workstation that is not made by Silicon Graphics, the device name <FILENAME>/dev/tape</FILENAME> may not be the correct name for the tape drive. Always learn the pathname of the tape device before executing the backup commands.</PARAGRAPH>
<PARAGRAPH>For example:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% tar cvf guest@alice:/dev/tape ./bus.schedule</SCREENDISPLAY>
</CODE>
<PARAGRAPH>or</PARAGRAPH>
<CODE>
<SCREENDISPLAY>% echo &ldquo;./bus.schedule&rdquo; | cpio -ovcO guest@alice:/dev/tape</SCREENDISPLAY>
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Automatic Backups</TITLE><PARAGRAPH>You can use the <COMMAND>cron</COMMAND> utility to automatically back up filesystems at predetermined times. The backup media must be already mounted in the drive, and, if you want this to be truly automatic, it should have enough capacity to store all the data being backed up on a single piece of media. If all the data doesn't fit, then someone must manually change backup media.</PARAGRAPH>
<PARAGRAPH>Here is an example <COMMAND>cron</COMMAND> command to back up the <FILENAME>/usr/src </FILENAME>hierarchy to <FILENAME>/dev/tape</FILENAME> (tape drive) every morning at 03:00 using <COMMAND>bru</COMMAND>:</PARAGRAPH>
<CODE>
0 3 * * * /usr/sbin/bru -c -f /dev/tape /usr/src
</CODE>
<PARAGRAPH>Place this line in a crontabs file, such as <FILENAME>/var/spool/cron/crontabs/root</FILENAME>.</PARAGRAPH>
<PARAGRAPH>This sort of command is useful as a safety net, but you should not rely solely on automatic backups. There is no substitute for having a person monitor the backup process from start to finish and properly archive and label the media when the backup is finished. For more information on using <COMMAND>cron</COMMAND> to perform jobs automatically, see <DOCTITLE>IRIX Admin: System Configuration and Operation</DOCTITLE>.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Storing Backups</TITLE><PARAGRAPH>Store your backup tapes carefully. Even if you create backups on more durable media, such as optical disks, take care not to abuse them. Set the write protect switch on tapes you plan to store as soon as a tape is written, but remember to unset it when you are ready to overwrite a previously-used tape.</PARAGRAPH>
<PARAGRAPH>Do not subject backups to extremes of temperature and humidity, and keep tapes away from strong electromagnetic fields. If there are a large number of workstations at your site, you may wish to devote a special room to storing backups.</PARAGRAPH>
<PARAGRAPH>Store magnetic tapes, including 1/4&rdquo; and 8 mm cartridges, upright. Do not store tapes on their sides, as this can deform the tape material and cause the tapes to read incorrectly.</PARAGRAPH>
<PARAGRAPH>Make sure the media is clearly labeled and, if applicable, write-protected. Choose a label-color scheme to identify such aspects of the backup as what system it is from, what level of backup (complete versus partial), what filesystem, and so forth.</PARAGRAPH>
<PARAGRAPH>To minimize the impact of a disaster at your site, such as a fire, you may want to store main copies of backups in a different building from the actual workstations. You have to balance this practice, though, with the need to have backups handy for recovering files.</PARAGRAPH>
<PARAGRAPH>If backups contain sensitive data, take the appropriate security precautions, such as placing them in a locked, secure room. Anyone can read a backup tape on a system that has the appropriate utilities.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>How Long to Keep Backups</TITLE><PARAGRAPH>You can keep backups as long as you think you need to. In practice, few sites keep system backup tapes longer than about a year before recycling the tape for new backups. Usually, data for specific purposes and projects is backed up at specific project milestones (for example, when a project is started or finished). As site administrator, you should consult with your users to determine how long to keep filesystem backups.</PARAGRAPH>
<PARAGRAPH>With magnetic tapes, however, there are certain physical limitations. Tape gradually loses its flux (magnetism) over time. After about two years, tape can start to lose data.</PARAGRAPH>
<PARAGRAPH>For long-term storage, re-copy magnetic tapes every year to year-and-a-half to prevent data loss through deterioration. When possible, use checksum programs, such as the <COMMAND>sum</COMMAND> utility, to make sure data hasn't deteriorated or altered in the copying process. If you want to store data reliably for several years, consider using optical disk.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Reusing Tapes</TITLE><PARAGRAPH>You can reuse tapes, but with wear, the quality of a tape degrades. The more important the data, the more precautions you should take, including using new tapes.</PARAGRAPH>
<PARAGRAPH>If a tape goes bad, mark it as &ldquo;bad&rdquo; and discard it. Write &ldquo;bad&rdquo; on the tape case before you throw it out so that someone doesn't accidentally try to use it. Never try to reuse an obviously bad tape. The cost of a new tape is minimal compared to the value of the data you are storing on it.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>System Backups</TITLE><PARAGRAPH>To make a backup of your system on any system with a graphical user interface, bring up the System menu on the System Toolchest and select the Backup &amp; Restore menu item. From the Backup &amp; Restore window, follow the prompts to perform your backup. A complete set of instructions for this procedure is available in the <DOCTITLE>Personal System Administration Guide</DOCTITLE>.</PARAGRAPH>
<PARAGRAPH>Backups made with the Backup &amp; Restore window are the easiest to make and use, and are accessible from the Recover System option on the System Maintenance Menu if they are full system backups. When you make a full system backup, the command also makes a backup of the files in the disk volume header and saves the information in a file that is stored on tape. This file is used during system recovery to restore a damaged volume header.</PARAGRAPH>
<PARAGRAPH>To make a backup of your system using an IRIX command, use the <COMMAND>Backup</COMMAND> command. Although the <COMMAND>Backup</COMMAND> command is a front-end interface to the <COMMAND>bru</COMMAND> command, <COMMAND>Backup</COMMAND> also writes the disk volume header on the tape so that the Recover System option can reconstruct the boot blocks, which are not written to the tape using other backup commands.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>General Backup Procedure</TITLE><PARAGRAPH>Follow these steps when making a backup, no matter which backup utility you use:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Make sure the tape drive is clean. The hardware manual that came with your drive should state how, and how often, to clean the drive.</PARAGRAPH>
<PARAGRAPH>Dirty tape heads can cause read and write errors. New tapes shed more oxide than older tapes, so you should clean your drive more frequently if you use a lot of new tapes.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Make sure you have enough backup media on hand. The <COMMAND>bru</COMMAND> utility has an option to check the size of a backup, so you can determine if you have enough media. You can also use such utilities as <COMMAND>du</COMMAND> and <COMMAND>df</COMMAND> to determine the size of directories and filesystems, respectively.</PARAGRAPH>
<PARAGRAPH>Also, use good-quality media. Considering the value of your data, use the best quality media you can afford.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Run <COMMAND>fsck</COMMAND> first on EFS filesystems (if you are backing up an entire filesystem) to make sure you do not create a tape of a damaged filesystem. You must unmount a filesystem before checking it with <COMMAND>fsck</COMMAND>, so plan your backup schedule accordingly.</PARAGRAPH>
<PARAGRAPH>This step is not necessary if you are backing up only a few files (for example, with <COMMAND>tar</COMMAND>).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>The default tape device for any drives you may have is <FILENAME>/dev/tape</FILENAME>. If you do not use the default device, you must specify a device in your backup command line.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Label your backups. If you plan to reuse the media, use pencil. Include the date, time, name of the system, the name of the utility, the exact command line used to make the backup (so you'll remember how to extract the files later), and a general indication of the contents. If more than one administrator performs backups at your site, include your name.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Verify the backup when you are finished. Some utilities (such as <COMMAND>dump</COMMAND> and <COMMAND>bru</COMMAND>) provide explicit options to verify a backup. With other programs, you can simply list the contents of the archive&mdash;this is usually sufficient to catch errors in the backup.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Write-protect your media after you make the backup.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Note the number of times you use each tape. Keep a running tally on the tape label.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
</CHAPTER>

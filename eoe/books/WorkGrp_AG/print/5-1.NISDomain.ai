%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 3.0%%For: (Melissa Heinrich) (Silicon Graphics Inc.)%%Title: (fig1-2.ai)%%CreationDate: (8/16/93) (8:42 AM)%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%+ Helvetica-Oblique%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cmykcolor 1.1 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_typography_AI3 1.0 0%%+ procset Adobe_IllustratorA_AI3 1.0 0%%BoundingBox: 189 219 433 642%AI3_ColorUsage: Black&White%AI3_TemplateBox: 310 396 310 396%AI3_TileBox: 0 0 552 730%AI3_DocumentPreview: Macintosh_Pic%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 %%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize			% - initialize -{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	} ifelse} def/terminate			% - terminate -{} def/packedarray		% arguments count packedarray array{array astore readonly} def/setpacking			% boolean setpacking -{pop} def/currentpacking		% - setpacking boolean{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cmykcolor 1.1 0%%Title: (CMYK Color Operators)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize			% - initialize -{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	end	Adobe_cmykcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_cmykcolor eq	{	end	} if} def/setcmykcolor		% cyan magenta yellow black setcmykcolor -{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor	% - currentcmykcolor cyan magenta yellow black{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 %%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize			% - initialize -{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		% - _cshow proc		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall	end	end	} ifelse} def/terminate			% - terminate -{} def/cshow				% proc string cshow -{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 %%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize			% - initialize -{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_customcolor begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_customcolor eq	{	end	} if} def/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object{5 packedarray}  def/setcustomcolor		% object tint setcustomcolor -{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint		% boolean setoverprint -{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_typography_AI3 1.0 0%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(5/31/90) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI3 46 dict dup begin put/initialize			% - initialize -{/TZ where	{	pop	}	{	Adobe_typography_AI3 begin	Adobe_typography_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	end	Adobe_typography_AI3 begin	} ifelse} def/terminate			% - terminate -{currentdict Adobe_typography_AI3 eq	{	end	} if} def% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]/modifyEncoding{	/_tempEncode exch ddef		% pointer for sequential encodings	/_pntr 0 ddef		{		% get bottom object		counttomark -1 roll		% is it a mark ?		dup type dup /marktype eq 				{			% exit			pop pop exit		}		{			% ... object ... type ....			% insert if a nametype			/nametype eq			{				% insert the name at _pntr and increment pointer				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				% reset _pntr if it's a number				/_pntr exch ddef								}			ifelse		}		ifelse	}	loop			% return the modified encoding	_tempEncode}def/TE	% Set std platform encoding 	% (encoding pairs) TE -{	StandardEncoding 256 array copy modifyEncoding 	/_nativeEncoding exch def} def% re-define font% expected arguments% for 'normal fonts : %	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ%% for cartographic, pictographic, and expert fonts :% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold %	direction fontScript defaultEncoding TZ/TZ		{	% platform dependent coding flag	/_useNativeEncoding exch def	% pop fontScript & direction	pop pop		% create a new dictionary with length	% equal to original dictionary length + 2	% copy all the key/value pairs except FID	findfont dup length 2 add dict		begin			% copy all the values but the FID		% into the new dictionary		mark exch		{			1 index /FID ne { def } if cleartomark mark		}		forall		% discard last mark		pop				% define FontName		/FontName exch def				% if no re-encoding stream is present		% then if the base encoding vector of the font		% is the same as StandardEncoding		% and the use platform encoding flag is true		% then install AI platform encoding		% else leave the base encoding in effect		counttomark 0 eq		{			Encoding StandardEncoding eq 1 _useNativeEncoding eq and			{				/Encoding _nativeEncoding def			}			if			% clean up			cleartomark		}		{				% custom encoding to be done			% start off with a copy of the font's standard encoding			/Encoding load 256 array copy 			modifyEncoding /Encoding exch def		}		ifelse				FontName currentdict	end		% register the new font	definefont pop}def% text painting operators/tr					% string tr ax ay string {_ax _ay 3 2 roll} def/trj				% string trj cx cy fillchar ax ay string {_cx _cy _sp _ax _ay 6 5 roll} def/a0{/Tx	% text							% textString Tx -	{	dup 	currentpoint 3 2 roll	tr _psf	newpath moveto	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	dup	currentpoint 3 2 roll	trj _pjsf	newpath moveto	trj _ctm _pjss	} ddef	} def/a1{W B} def/e0{/Tx	% text							% textString Tx -	{	tr _psf	} ddef/Tj	% justified text				% textString Tj -	{	trj _pjsf	} ddef} def/e1{W F } def/i0{/Tx	% text							% textString Tx -	{	tr sp	} ddef/Tj	% justified text				% textString Tj -	{	trj jsp	} ddef} def/o0{/Tx	% text							% textString Tx -	{	tr sw rmoveto	} ddef/Tj	% justified text				% textString Tj -	{	trj swj rmoveto	} ddef} def/r0{/Tx	% text							% textString Tx -	{	tr _ctm _pss	} ddef/Tj	% justified text				% textString Tj -	{	trj _ctm _pjss	} ddef} def/r1{W S} def% font operators% Binding/To	% begin text 					% bindType To -{	pop _ctm currentmatrix pop} def/TO	% end text					% TO -{	Te _ctm setmatrix newpath} def% Text paths/Tp	% begin text path				% a b c d tx ty startPt Tp -{	pop _tm astore pop _ctm setmatrix 	2 dict begin /W {} def /h {} def} def/TP	% end text path					% TP -{	end	iTm 0 0 moveto} def% Render mode & matrix operators/Tr	% begin render					% render Tr - {	Te currentpoint newpath moveto	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument){_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm % set text matrix				% a b c d tx ty Tm -{_tm astore pop iTm 0 0 moveto} def/Td % translate text matrix 		% tx ty Td -{_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/Te	% end render					% - Te -{	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse	/_render -1 ddef} def% Attributes/Ta	% set alignment					% alignment Ta -{pop} def/Tf	% set font name and size		% fontname size Tf -{dup 1000 div /_fScl exch ddefexch findfont exch scalefont setfont} def/Tl	% set leading					% leading paragraphLeading Tl -{pop0 exch _leading astore pop} def/Tt	% set user tracking				% userTracking Tt -{pop} def/TW % set word spacing				% minSpace optSpace maxSpace TW -{3 npop} def/Tw	% set computed word spacing		% wordSpace Tw{/_cx exch ddef} def/TC % set character spacing			% minSpace optSpace maxSpace TC -{3 npop} def/Tc	% set computed char spacing 	% charSpace Tc -{/_ax exch ddef} def/Ts % set super/subscripting (rise)	% rise Ts -{/_rise exch ddefcurrentpointiTmmoveto} def/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -{3 npop} def/Tz % set horizontal scaling		% scalePercent Tz -{100 div /_hs exch ddefiTm} def/TA % set pairwise kerning			% autoKern TA -									%	autoKern = 0 -> no pair kerning									%			 = 1 -> automatic pair kerning{pop} def/Tq % set hanging quotes			% hangingQuotes Tq -									%	hangingQuotes 	= 0 -> no hanging quotes									%			 		= 1 -> hanging quotes{pop} def% Text Bodies/TX {pop} def%/Tx	% non-justified text			% textString Tx -%/Tj	% justified text				% textString Tj -/Tk	% kern							% autoKern kernValue Tk -									%  	autoKern = 0 -> manual kern, = 1 -> auto kern									%	kernValue = kern value in em/1000 space{exch pop _fScl mul neg 0 rmoveto} def/TK	% non-printing kern				% autoKern kernValue TK -{2 npop} def/T* % carriage return & line feed	% - T* -{_leading aload pop neg Td} def/T*- % carriage return & negative line feed	% - T*- -{_leading aload pop Td} def/T-	% print a discretionary hyphen	% - T- -{_hyphen Tx} def/T+	% discretionary hyphen hyphen	% - T+ -{} def/TR	% reset pattern matrix 			% a b c d tx ty TR -{_ctm currentmatrix pop 	_tm astore pop iTm 0 0 moveto } def/TS	% special chars					% textString justified TS -{0 eq {Tx} {Tj} ifelse} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 0%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)%%Version: 1.0 %%CreationDate: (7/22/89) ()%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_IllustratorA_AI3 61 dict dup begin put% initialization/initialize				% - initialize -{userdict /Adobe_IllustratorA_AI3_vars 46 dict dup begin put% paint operands/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def% paint operators/cf	currentflat def	% - cf flatness% typography operands/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /i0 /i0 /i0 /i0] def /_renderEnd [null null null null /e1 /r1 /a1 /clip] def/_render -1 def/_rise 0 def/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)/_ay 0 def			% y character spacing/_cx 0 def			% x word spacing/_cy 0 def			% y word spacing/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def% typography operators/Tx {} def/Tj {} def% compound path operators/CRender {} def% printing/_AI3_savepage {} def% color operands/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_i null defAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3	{	dup xcheck		{		bind		} if	pop pop	} forallendendAdobe_IllustratorA_AI3 beginAdobe_IllustratorA_AI3_vars beginnewpath} def/terminate				% - terminate -{endend} def% definition operators/_					% - _ nullnull def/ddef				% key value ddef -{Adobe_IllustratorA_AI3_vars 3 1 roll put} def/xput				% key value literal xput -{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop				% integer npop -{	{	pop	} repeat} def% marking operators/sw					% ax ay string sw x y {dup length exch stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/swj				% cx cy fillchar ax ay string swj x y{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss					% ax ay string matrix ss -{4 1 roll	{				% matrix ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss				% cx cy fillchar ax ay string matrix jss -{4 1 roll	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def% path operators/sp					% ax ay string sp -{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp					% cx cy fillchar ax ay string jsp -{	{					% cx cy fillchar ax ay char 0 0 {proc} -	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def% path construction operators/pl				% x y pl x y{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c				% x1 y1 x2 y2 x3 y3 c -	{	curveto	} def	/C	/c load def	/v				% x2 y2 x3 y3 v -	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y				% x1 y1 x2 y2 y -	{	2 copy curveto	} def	/Y	/y load def	/l				% x y l -	{	lineto	} def	/L	/l load def	/m				% x y m -	{	moveto	} def	}	{%else	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	}ifelse% graphic state operators/d					% array phase d -{setdash} def/cf	{} def			% - cf flatness/i					% flatness i -{dup 0 eq	{	pop cf	} ifsetflat} def/j					% linejoin j -{setlinejoin} def/J					% linecap J -{setlinecap} def/M					% miterlimit M -{setmiterlimit} def/w					% linewidth w -{setlinewidth} def% path painting operators/H					% - H -{} def/h					% - h -{closepath} def/N					% - N -{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n					% - n -{N} def/F					% - F -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f					% - f -{closepathF} def/S					% - S -{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s					% - s -{closepathS} def/B					% - B -{_pola 0 eq 	{	_doClip 1 eq 	% F clears _doClip	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b					% - b -{closepathB} def/W					% - W -{/_doClip 1 ddef} def/*					% - [string] * -{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def% group operators/u					% - u -{} def/U					% - U -{} def/q					% - q -{_pola 0 eq {gsave} if} def/Q					% - Q -{_pola 0 eq {grestore} if} def/*u					% - *u -{_pola 1 add /_pola exch ddef} def/*U					% - *U -{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D					% polarized D -{pop} def/*w					% - *w -{} def/*W					% - *W -{} def% place operators/`					% matrix llx lly urx ury string ` -{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~					% - ~ -{end_i restore} def% color operators/O					% flag O -{0 ne/_of exch ddef/_lp /none ddef} def/R					% flag R -{0 ne/_os exch ddef/_lp /none ddef} def/g					% gray g -{/_gf exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G					% gray G -{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k					% cyan magenta yellow black k -{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K					% cyan magenta yellow black K -{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x					% cyan magenta yellow black name gray x -{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{ _lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X					% cyan magenta yellow black name gray X -{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def% locked object operator/A					% value A -{pop} defcurrentdict readonly pop endsetpacking% annotate page operator/annotatepage{} def%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Helvetica%%IncludeFont: Helvetica-ObliqueAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_typography_AI3 /initialize get execAdobe_IllustratorA_AI3 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique[/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ%AI3_EndEncoding%%EndSetup0 A0 R0 G0 i 0 J 0 j 0.5 w 4 M [2 2 ]0 d%AI3_Note:0 D269 313.5 m269 419.5 lS1 w []0 d333.5 353.1899 m358.5 358.374 l262.5 365.5969 l241.5 363.4225 lS249.8332 364.5256 m249.8332 357.5721 lSu0 O1 g269.5832 329.0353 m269.5832 357.2853 L226.3332 357.2853 L226.3332 329.0353 L269.5832 329.0353 Lf248.5832 343.2853 mFuu0 R0 G0.5 w260.4647 356.8453 m263.4372 353.873 l267.803 353.1298 l267.803 341.6578 l260.4182 337.6636 l239.2857 339.6607 l238.6355 341.3327 lS260.4647 356.8453 m238.6355 356.8453 l238.6355 341.3327 l258.7905 339.3601 l260.4647 337.8493 l260.4647 356.8453 ls258.7927 356.8453 m258.7927 339.382 lS241.2364 342.9118 m241.2364 354.5232 l256.2846 354.5232 l256.2846 341.6114 l241.2364 342.9118 ls257.678 337.9888 m256.6215 336.815 251.551 336.4412 248.9463 336.7346 c245.6487 337.1063 244.2089 337.7565 244.2089 339.1499 cS253.2193 338.2673 m251.8259 337.4313 247.0421 338.221 247.0885 338.7319 cSUuu263.0171 333.9885 m233.6044 336.538 l227.4027 333.3044 l226.8322 333.0876 226.7347 332.622 227.5049 332.5396 c252.9695 329.7238 l253.8165 329.6098 254.4221 329.7667 255.1464 329.9201 c262.3972 331.8827 l264.4031 332.2306 264.1365 333.8074 263.0171 333.9885 cs263.0171 333.9885 m254.093 330.2456 l253.57 330.0274 253.6125 329.81 253.6362 329.6886 cSUU266.3332 340.5353 m267.4582 338.9103 272.4582 333.6603 263.9582 332.7853 cS234.2082 334.9103 m257.2082 333.0353 l252.8332 331.4103 l231.0832 333.6603 l234.2082 334.9103 lsUU0 O1 g1 w356.5 367.75 m356.5 396 L313.25 396 L313.25 367.75 L356.5 367.75 Lf0 R0 G334.25 367.4903 m334.25 360.5368 lSu0 O1 g363.5832 319.7853 m363.5832 348.0353 L320.3332 348.0353 L320.3332 319.7853 L363.5832 319.7853 Lf342.5832 334.0353 mFuu0 R0 G0.5 w354.4647 347.5953 m357.4372 344.623 l361.803 343.8798 l361.803 332.4078 l354.4182 328.4136 l333.2857 330.4107 l332.6355 332.0827 lS354.4647 347.5953 m332.6355 347.5953 l332.6355 332.0827 l352.7905 330.1101 l354.4647 328.5993 l354.4647 347.5953 ls352.7927 347.5953 m352.7927 330.132 lS335.2364 333.6618 m335.2364 345.2732 l350.2846 345.2732 l350.2846 332.3614 l335.2364 333.6618 ls351.678 328.7388 m350.6215 327.565 345.551 327.1912 342.9463 327.4846 c339.6487 327.8563 338.2089 328.5065 338.2089 329.8999 cS347.2193 329.0173 m345.8259 328.1813 341.0421 328.971 341.0885 329.4819 cSUuu357.0171 324.7385 m327.6044 327.288 l321.4027 324.0544 l320.8322 323.8376 320.7347 323.372 321.5049 323.2896 c346.9695 320.4738 l347.8165 320.3598 348.4221 320.5167 349.1464 320.6701 c356.3972 322.6327 l358.4031 322.9806 358.1365 324.5574 357.0171 324.7385 cs357.0171 324.7385 m348.093 320.9956 l347.57 320.7774 347.6125 320.56 347.6362 320.4386 cSUU360.3332 331.2853 m361.4582 329.6603 366.4582 324.4103 357.9582 323.5353 cS328.2082 325.6603 m351.2082 323.7853 l346.8332 322.1603 l325.0832 324.4103 l328.2082 325.6603 lsUUu0 O1 g1 w295.75 372 m295.75 400.25 L252.5 400.25 L252.5 372 L295.75 372 Lf274.75 386.25 mFuu0 R0 G0.5 w286.6315 399.8101 m289.604 396.8377 l293.9698 396.0945 l293.9698 384.6226 l286.585 380.6283 l265.4525 382.6255 l264.8023 384.2975 lS286.6315 399.8101 m264.8023 399.8101 l264.8023 384.2975 l284.9573 382.3249 l286.6315 380.8141 l286.6315 399.8101 ls284.9595 399.8101 m284.9595 382.3468 lS267.4032 385.8766 m267.4032 397.4879 l282.4514 397.4879 l282.4514 384.5762 l267.4032 385.8766 ls283.8448 380.9535 m282.7883 379.7797 277.7178 379.406 275.1131 379.6994 c271.8155 380.071 270.3757 380.7212 270.3757 382.1146 cS279.3861 381.2321 m277.9927 380.3961 273.2089 381.1857 273.2553 381.6966 cSUuu289.1839 376.9532 m259.7712 379.5027 l253.5694 376.2691 l252.999 376.0524 252.9014 375.5867 253.6717 375.5044 c279.1362 372.6886 l279.9833 372.5745 280.5889 372.7315 281.3131 372.8848 c288.564 374.8474 l290.5698 375.1954 290.3032 376.7721 289.1839 376.9532 cs289.1839 376.9532 m280.2597 373.2103 l279.7368 372.9922 279.7792 372.7748 279.803 372.6533 cSUU292.5 383.5 m293.625 381.875 298.625 376.625 290.125 375.75 cS260.375 377.875 m283.375 376 l279 374.375 l257.25 376.625 l260.375 377.875 lsUU1 w273.5 371.7403 m273.5 364.7868 lS343.5832 355.2756 m343.5832 348.3221 lS0.5 w [2 2 ]0 d214 300 m269.5 313 l377.5 305.5 lS377.5 415.5 m377.5 305.5 l314.5 293 l214 300 l214 414.5 lS214 414.5 m315.5 410.5 l377.5 415.5 lS316 410.5 m316 293 lS213.25 414.75 m266.75 420.25 l376.75 415.75 lSu0 O0.75 g1 w []0 d241.6303 354.0914 m255.815 354.0914 l255.9589 341.8992 l241.6303 343.4875 l241.6303 354.0914 lfU0 To1 0 0 1 241.9392 344.7878 0 TpTP0 Tr0 g/_Helvetica 10 Tf0 Ts100 Tz-20 Tt0 TA0 0 5 TC100 100 200 TW0 0 0 Ti0 Ta0 Tq0 0 Tl-0.1999 Tc0 Tw( M\r) Tx TOu0.75 g267.8425 397.0914 m282.0271 397.0914 l282.1711 384.8992 l267.8425 386.4875 l267.8425 397.0914 lfU1 g312.5 267 mFuu0 R0 G0.5 w324.3815 269.0601 m327.354 266.0877 l331.7198 265.3445 l331.7198 253.8726 l324.335 249.8783 l303.2025 251.8755 l302.5523 253.5475 lS324.3815 269.0601 m302.5523 269.0601 l302.5523 253.5475 l322.7073 251.5749 l324.3815 250.0641 l324.3815 269.0601 ls322.7095 269.0601 m322.7095 251.5968 lS305.1532 255.1266 m305.1532 266.7379 l320.2014 266.7379 l320.2014 253.8262 l305.1532 255.1266 ls321.5948 250.2035 m320.5383 249.0297 315.4678 248.656 312.8631 248.9494 c309.5655 249.321 308.1257 249.9712 308.1257 251.3646 cS317.1361 250.4821 m315.7427 249.6461 310.9589 250.4357 311.0053 250.9466 cSUuu326.9339 246.2032 m297.5212 248.7527 l291.3194 245.5191 l290.749 245.3024 290.6514 244.8367 291.4217 244.7544 c316.8862 241.9386 l317.7333 241.8245 318.3389 241.9815 319.0631 242.1348 c326.314 244.0974 l328.3198 244.4454 328.0532 246.0221 326.9339 246.2032 cs326.9339 246.2032 m318.0097 242.4603 l317.4868 242.2422 317.5292 242.0248 317.553 241.9033 cSUU330.25 252.75 m331.375 251.125 336.375 245.875 327.875 245 cS298.125 247.125 m321.125 245.25 l316.75 243.625 l295 245.875 l298.125 247.125 lsU0 O0.75 g1 w305.7364 266.3414 m319.6332 266.3414 l319.7771 254.1492 l305.7364 255.7375 l305.7364 266.3414 lf0 To1 0 0 1 363 257 0 TpTP0 Tr0 g/_Helvetica 8 Tf-0.1599 Tc(M = master server\r) Tx TO0 To1 0 0 1 364 241 0 TpTP0 Tr(S = slave server\r) Tx TO0 R0 G0.5 w [2 2 ]0 d223.3125 641.9544 mS0 To1 0 0 1 276.5 428.5 0 TpTP0 Tr0 O0 g1 w []0 d(Building 1\r) Tx TO0 R0 G0.5 w [2 2 ]0 d324 358.5 mSu0 O0.75 g1 w []0 d335.5925 344.8414 m349.7771 344.8414 l349.9211 332.6492 l335.5925 334.2375 l335.5925 344.8414 lfU0 To1 0 0 1 268.9014 387.5 0 TpTP0 Tr0 g/_Helvetica 10 Tf-0.1999 Tc( S\r) Tx TOu235.9025 357.3348 m236.2033 359.6176 l237.7498 354.9943 l233.6833 357.4824 l235.9025 357.3348 lfU0 R0 G0.5 w236.3549 356.6691 m196.6601 393.437 lSu0 O0 g1 w260.7681 393.4943 m259.1626 395.1448 l263.7498 393.4943 l259.2773 391.8438 l260.7681 393.4943 lfU0 R0 G0.5 w261.5709 393.437 m196.6601 393.437 lSu0 O1 g1 w254.75 394.25 m254.75 402.5 L200.5 402.5 L200.5 394.25 L254.75 394.25 Lf227.625 398.375 mFU0 To1 0 0 1 203.5 395.75 0 TpTP0 Tr0 g/_Helvetica-Oblique 8 Tf-0.1599 Tc(/usr/etc/yp/eng\r) Tx TOuu0 R0 G0.5 w [1 1 ]0 d249.4647 269.0726 m252.4372 266.1003 l256.803 265.3571 l256.803 253.8851 l249.4182 249.8909 l228.2857 251.888 l227.6355 253.56 lS249.4647 269.0726 m227.6355 269.0726 l227.6355 253.56 l247.7905 251.5874 l249.4647 250.0766 l249.4647 269.0726 ls247.7927 269.0726 m247.7927 251.6093 lS230.2364 255.1391 m230.2364 266.7505 l245.2846 266.7505 l245.2846 253.8387 l230.2364 255.1391 ls246.678 250.2161 m245.6215 249.0423 240.551 248.6685 237.9463 248.9619 c234.6487 249.3336 233.2089 249.9838 233.2089 251.3772 cS242.2193 250.4946 m240.8259 249.6586 236.0421 250.4483 236.0885 250.9592 cSUuu252.0171 246.2158 m222.6044 248.7653 l216.4027 245.5317 l215.8322 245.3149 215.7347 244.8493 216.5049 244.7669 c241.9695 241.9511 l242.8165 241.8371 243.4221 241.994 244.1464 242.1474 c251.3972 244.11 l253.4031 244.4579 253.1365 246.0347 252.0171 246.2158 cs252.0171 246.2158 m243.093 242.4729 l242.57 242.2547 242.6125 242.0373 242.6362 241.9159 cSUU255.3332 252.7626 m256.4582 251.1376 261.4582 245.8876 252.9582 245.0126 cS223.2082 247.1376 m246.2082 245.2626 l241.8332 243.6376 l220.0832 245.8876 l223.2082 247.1376 lsU0 To1 0 0 1 238.5 229.7273 0 TpTP-41.4989 0 Td0 Tr0 O0 g1 w []0 d/_Helvetica 8 Tf1 Ta(non-participating system\r) Tx TO0 To1 0 0 1 265 241.7273 0 TpTP0 Tr0 Tt0 Ta0 Tc(\r) Tx TO0 To1 0 0 1 313 229.926 0 TpTP-16.249 0 Td0 Tr-20 Tt1 Ta-0.1599 Tc(system in\r) Tx -3.9269 -9.5 Td(eng domain\r) Tx TOuu0 R0 G0.5 w [1 1 ]0 d346.8683 395.6177 m349.8407 392.6454 l354.2065 391.9022 l354.2065 380.4302 l346.8217 376.436 l325.6893 378.4331 l325.039 380.1051 lS346.8683 395.6177 m325.039 395.6177 l325.039 380.1051 l345.194 378.1325 l346.8683 376.6217 l346.8683 395.6177 ls345.1962 395.6177 m345.1962 378.1544 lS327.6399 381.6842 m327.6399 393.2956 l342.6882 393.2956 l342.6882 380.3838 l327.6399 381.6842 ls344.0815 376.7612 m343.0251 375.5874 337.9545 375.2136 335.3498 375.507 c332.0522 375.8787 330.6124 376.5289 330.6124 377.9223 cS339.6228 377.0397 m338.2294 376.2037 333.4456 376.9934 333.492 377.5043 cSUuu349.4207 372.7609 m320.0079 375.3104 l313.8062 372.0768 l313.2357 371.86 313.1382 371.3944 313.9084 371.312 c339.373 368.4962 l340.22 368.3822 340.8256 368.5391 341.5499 368.6925 c348.8007 370.6551 l350.8067 371.003 350.5401 372.5798 349.4207 372.7609 cs349.4207 372.7609 m340.4965 369.018 l339.9736 368.7998 340.016 368.5824 340.0397 368.461 cSUU352.7368 379.3077 m353.8618 377.6827 358.8618 372.4327 350.3618 371.5577 cS320.6118 373.6827 m343.6118 371.8077 l339.2368 370.1827 l317.4868 372.4327 l320.6118 373.6827 lsU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_IllustratorA_AI3 /terminate get execAdobe_typography_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF
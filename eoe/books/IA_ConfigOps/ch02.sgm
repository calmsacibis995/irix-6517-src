<!-- Produced by version 4.3 (11/99) of SGI Frame/SGIDOCBK SGML translator -->
<CHAPTER ID="LE52971-PARENT"><TITLE ID="LE52971-TITLE">Making the Most of IRIX</TITLE><PARA>This chapter describes features of IRIX that are useful to system administrators. These features are documented elsewhere, but are brought together here as highlights that might otherwise be overlooked. Administrators coming to a UNIX-based system from different environments will find this chapter valuable in reducing the amount of time necessary to perform some tasks. Others may find hints and features that they did not previously know.</PARA>
<PARA>Some of the main sections include:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA><XREF LINKEND="LE62296-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE92541-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE11598-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE91502-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE61324-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE60523-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE24422-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE17779-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE12893-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE23298-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE37470-PARENT"></PARA></LISTITEM>
</ITEMIZEDLIST>
<SECTION  ID="LE62296-PARENT"><TITLE  ID="LE62296-TITLE">IRIX Shells</TITLE><PARA>The IRIX shells provide the command-line interface to the system. The following features are provided as part of the IRIX command shells.</PARA>
<SECTION  ID="LE36742-PARENT"><TITLE  ID="LE36742-TITLE">Using Regular Expressions and Metacharacters</TITLE><PARA>Shortcuts for referencing large numbers of files or directories in your commands are known as <FIRSTTERM>regular expressions</FIRSTTERM>. Regular expressions are made up of a combination of alphanumeric characters and a series of punctuation characters that have special meaning to the IRIX shells. These punctuation characters are called metacharacters when they are used for their special meanings with shell commands.</PARA>
<PARA>These shortcuts are useful because they minimize keystrokes. While minimizing keystrokes may seem to be a minor concern at first glance, an administrator who issues lengthy and complex command lines repeatedly may find these shortcuts a handy and necessary time-saving feature.</PARA>
<PARA><XREF LINKEND="LE17418-TITLE"> lists the IRIX metacharacters:</PARA><TABLE FRAME="topbot"><TBLTITLE  ID="LE17418-TITLE">IRIX Metacharacters</TBLTITLE>
<TGROUP COLS="2">
<COLSPEC COLWIDTH="178*">
<COLSPEC COLWIDTH="322*">
<THEAD><ROW><ENTRY><PARA>Metacharacter</PARA></ENTRY>
<ENTRY><PARA>Meaning</PARA></ENTRY>
</ROW>
</THEAD>
<TBODY><ROW><ENTRY><PARA>*</PARA></ENTRY>
<ENTRY><PARA>Wildcard</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA>?</PARA></ENTRY>
<ENTRY><PARA>Single-character wildcard</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA>[]</PARA></ENTRY>
<ENTRY><PARA>Set definition marks</PARA></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>The asterisk (*) metacharacter is a universal wildcard. This means that the shell interprets the character to mean any and all files. For example, the following command tells the shell to concatenate all the files in a directory, in alphabetical order by filename:</PARA>
<LITERALLAYOUT>
<USERINPUT>cat *</USERINPUT>
</LITERALLAYOUT>
<PARA>The following command tells the shell to remove everything in the directory (so be careful with this one!).</PARA>
<LITERALLAYOUT>
<USERINPUT>rm *</USERINPUT>
</LITERALLAYOUT>
<PARA>Only files are removed&mdash;a different command, <COMMAND>rmdir(1)</COMMAND>, is used to remove directories. Note that the asterisk character does not always have to refer to whole files. It can be used to denote parts of files as well. For example, the following command removes all files with the suffix <FILENAME>.old</FILENAME> on their names.</PARA>
<LITERALLAYOUT>
<USERINPUT>rm *.old</USERINPUT>
</LITERALLAYOUT>
<PARA>The single-character wildcard is a question mark (?). This metacharacter denotes a single character. For example, suppose your directory contains the following files:</PARA>
<LITERALLAYOUT>
file1
file2
file3
file.different
</LITERALLAYOUT>
<PARA>If you want to remove <FILENAME>file1</FILENAME>, <FILENAME>file2</FILENAME>, and <FILENAME>file3</FILENAME>, but not <FILENAME>file.different</FILENAME>, you could use the command:</PARA>
<LITERALLAYOUT>
<USERINPUT>rm file?</USERINPUT>
</LITERALLAYOUT>
<PARA>If you used an asterisk in place of the question mark, all your files would be removed, but since the question mark is a wildcard for a single space, <FILENAME>file.different</FILENAME> is not chosen.</PARA>
<PARA>Square brackets denote members of a set. For example, consider the list of files used in the example of the single-character wildcard. If you wanted to remove <FILENAME>file1</FILENAME> and <FILENAME>file2</FILENAME>, but not <FILENAME>file3</FILENAME> or <FILENAME>file.different</FILENAME>, use the following command:</PARA>
<LITERALLAYOUT>
<USERINPUT>rm file[12]</USERINPUT>
</LITERALLAYOUT>
<PARA>This command tells the shell to remove any files with names starting with <FILENAME>file</FILENAME> and with the character <FILENAME>1</FILENAME> or <FILENAME>2</FILENAME> following, and no other characters in the name. Each character in the brackets is taken separately. Thus, if the example directory had included a file named <FILENAME>file12</FILENAME>, it would not have been removed by the above command.</PARA>
<PARA>You can also use a dash (-) to indicate a span of characters. For example, to remove <FILENAME>file1</FILENAME>, <FILENAME>file2</FILENAME>, and <FILENAME>file3</FILENAME>, use the following command:</PARA>
<LITERALLAYOUT>
<USERINPUT>rm file[1-3]</USERINPUT>
</LITERALLAYOUT>
<PARA>Alphabet characters can be spanned as well, in alphabetical order. The shell distinguishes between uppercase and lowercase letters, so to select all alphabet characters within square brackets, use the following syntax:</PARA>
<LITERALLAYOUT>
<USERINPUT>[a-z,A-Z]</USERINPUT>
</LITERALLAYOUT>
<PARA>You can use the square brackets with other metacharacters as well. For example, the following command removes any files with names ending with a <FILENAME>2</FILENAME> or <FILENAME>3</FILENAME>, but not <FILENAME>file1</FILENAME> or <FILENAME>file.different</FILENAME>.</PARA>
<LITERALLAYOUT>
<USERINPUT>rm *[23]</USERINPUT>
</LITERALLAYOUT>
</SECTION>
<SECTION  ID="LE35432-PARENT"><TITLE  ID="LE35432-TITLE">C Shell Shortcuts</TITLE><PARA>The IRIX C shell (<FILENAME>/sbin/csh</FILENAME>) provides several features that can be used to minimize keystrokes for routine tasks. Complete information about these and many other features of the C shell is available in the <COMMAND>csh(1)</COMMAND> man page. Among the features provided are:</PARA>
<DEFLIST TERMLENGTH="NEXTLINE"><DEFLISTENTRY><TERM>Filename completion</TERM>
<LISTITEM><PARA> This feature is activated with the command:</PARA>
<PARA><USERINPUT>set filec</USERINPUT></PARA>
<PARA>Filename completion allows you to enter the first character or two of a command or filename and then press the <USERINPUT>Esc</USERINPUT> key to have the shell complete the name. This is useful when you have long filenames with many suffixes. If more than one file or directory or command matches the characters you have given, the shell completes as much as possible of the name, and then prompts you with a beep for more information. You can also use the <USERINPUT>Ctrl+D</USERINPUT> character to select all files or directories that match your given characters.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Shell scripts</TERM>
<LISTITEM><PARA>This feature allows you to create a program that will be executed by the shell. This feature is similar to a programming language in that it has a set syntax and set of instructions, yet it requires no compiler and produces no object file; it is directly executed by the shell. Many administrators use this feature for frequently performed procedures that require some planning and complex execution, such as finding large files and notifying the owners that such files cannot be kept on the system for long periods of time. The shell script programming rules are clearly presented on the <COMMAND>csh(1)</COMMAND> man page.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Input/output redirection</TERM>
<LISTITEM><PARA> This feature allows you to direct the output of a command into a file or into another command as input. You can also direct a command to take its input from a file. It is often used as part of a shell script, but is generally used on the command line to string together a series of commands. For example, consider the command line:</PARA>
<PARA><USERINPUT>ps -ef | grep</USERINPUT><REPLACEABLE>&ensp;commandname</REPLACEABLE></PARA>
<PARA>The pipe character directs the shell to use the output of the <COMMAND>ps</COMMAND> command as the input to the <COMMAND>grep</COMMAND> command. The result is that all instances of the command <REPLACEABLE>commandname</REPLACEABLE> in the process list are printed on the screen, saving the administrator the effort of searching through the process listing. To save the output in a file rather than have it print on the screen, enter:</PARA>
<PARA><USERINPUT>ps -ef | grep </USERINPUT><REPLACEABLE>commandname</REPLACEABLE><USERINPUT>&ensp;&gt; </USERINPUT><REPLACEABLE>filename</REPLACEABLE></PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Job control</TERM>
<LISTITEM><PARA>This feature allows you to use a single screen (or shell window) to manage several programs running simultaneously. It is most useful for the server administrator who manages the system from a single character-based terminal.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Command aliasing</TERM>
<LISTITEM><PARA> This feature allows you to create aliases for commonly used command strings, saving keystrokes. For example, suppose you frequently give the command:</PARA>
<PARA><USERINPUT>ls -CF | more</USERINPUT></PARA>
<PARA>This command line executes the <COMMAND>ls</COMMAND> command with certain options and ensures that if the output is greater than a screenful the display stops until you have read it. However, it would be tedious to type the whole command each time you wanted to see a directory listing in your preferred format. Therefore, you can create an alias. You can alias the above command line to any series of keystrokes you like. You can even alias it to <COMMAND>ls</COMMAND>, thus bypassing the standard meaning of the <COMMAND>ls</COMMAND> command.</PARA>
<PARA>When you create the alias, however, be aware that any command that requires one or more arguments, or one such as <COMMAND>ls</COMMAND> that may or may not receive arguments, must have a provision made in the alias for those arguments. The standard provision made in aliases for possible arguments is the following regular expression:</PARA>
<PARA><USERINPUT>\!*</USERINPUT></PARA>
<PARA>The leading backslash escapes the initial meaning of the exclamation point to the shell and passes the exclamation point through to the command line, where it is interpreted by the shell to refer to arguments given on the aliased command line. The asterisk in the expression means that all characters typed in as arguments are to be passed through to the shell. As an example, the line you place in your <FILENAME>.cshrc</FILENAME> file to create the example alias is:</PARA>
<PARA><USERINPUT>alias ls `ls -CF \!* | more`</USERINPUT></PARA>
<PARA>Then, you type the command at a shell prompt:</PARA>
<PARA><USERINPUT>ls </USERINPUT><REPLACEABLE>filename</REPLACEABLE></PARA>
<PARA>The command is executed as:</PARA>
<PARA><USERINPUT>ls -CF </USERINPUT><REPLACEABLE>filename</REPLACEABLE><USERINPUT>&ensp;| more</USERINPUT></PARA>
<PARA>Aliases can be used freely within shell scripts, with filename completion and full use of regular expressions and output redirection. </PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Command history</TERM>
<LISTITEM><PARA> The shell maintains a log of past commands given during this login session. You can repeat or edit a previously given command to save keystrokes. The <COMMAND>history</COMMAND> command shows the numbered log of commands in order. The first command given in your login session is number 1, the second is number 2, and so on. You can set the number of commands the shell remembers in your <FILENAME>.cshrc</FILENAME> file. To execute the most recent command again, type:</PARA>
<PARA><USERINPUT>!!</USERINPUT></PARA>
<PARA>To execute the most recent command beginning with the letter <LITERAL>q</LITERAL>, use the command line:</PARA>
<PARA><USERINPUT>!q</USERINPUT></PARA>
<PARA>And to execute a command by its number in the history, give the command line:</PARA>
<PARA><USERINPUT>!</USERINPUT><REPLACEABLE>n</REPLACEABLE></PARA>
<PARA><REPLACEABLE>n</REPLACEABLE> is the number of the command you want to reexecute.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
</SECTION>
<SECTION><TITLE>About the tcsh Shell</TITLE><PARA>The <FILENAME>/usr/bin/tcsh</FILENAME> program is an improved version of the C shell. In addition to the C shell features, this shell offers many other features, which are covered in the <COMMAND>tcsh(1)</COMMAND> man page. A few of the most useful to system administrators are:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>Better command line editing using <COMMAND>emacs</COMMAND> and <COMMAND>vi</COMMAND> key commands</PARA>
</LISTITEM>
<LISTITEM><PARA>Improved history mechanisms, including time stamps for each command</PARA>
</LISTITEM>
<LISTITEM><PARA>Built-in mechanisms for listing directory contents and for executing commands at specific times or intervals.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION><TITLE>About the Bourne Shell</TITLE><PARA>The Bourne shell (<FILENAME>/sbin/bsh</FILENAME>) provides fewer features than the C shell, but in its place offers a level of access to the shell that contains far fewer restrictions and intervening layers of interface. For example, you can write shell script programs directly from the shell prompt with Bourne shell. Input and output redirection and command aliasing are supported, but no command history, job control, or filename completions are available. For a complete discussion of the Bourne shell and its features, see the <COMMAND>sh(1)</COMMAND> man page.</PARA>
</SECTION>
<SECTION><TITLE>Korn Shell Shortcuts</TITLE><PARA>The Korn shell was developed to provide the best features of both the C shell and the Bourne shell. The <FILENAME>/sbin/sh</FILENAME> program provides the ease of shell programming found in the Bourne shell, along with the job control, history mechanism, filename completion, and other features found in the C shell. This shell has changed many of the ways these features are implemented, and also provides improved command-line editing facilities. See the <COMMAND>ksh(1)</COMMAND> man page for complete information on this shell. Useful features include:</PARA>
<DEFLIST><DEFLISTENTRY><TERM><COMMAND>emacs</COMMAND> editing </TERM>
<LISTITEM><PARA>This mode is entered by enabling either the <COMMAND>emacs</COMMAND> or <COMMAND>gmacs</COMMAND> option. To edit, the user moves the cursor to the point needing correction and then inserts or deletes characters or words as needed as if the command line were a text file being edited using <COMMAND>emacs</COMMAND>. All edit commands operate from any place on the line (not just at the beginning).</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><COMMAND>vi</COMMAND> editing </TERM>
<LISTITEM><PARA>To enter this mode, enable the <COMMAND>vi</COMMAND> option. There are two typing modes in this option. Initially, when you enter a command you are in the input mode. To edit, control mode by typing <USERINPUT>Esc</USERINPUT>, moves the cursor to the point needing correction, then inserts or deletes characters or words as needed as if the command line were a text file being edited using <COMMAND>vi</COMMAND>.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Job control </TERM>
<LISTITEM><PARA>Lists information about each given process (<FIRSTTERM>job</FIRSTTERM>) or all active processes if the <LITERAL>job</LITERAL> argument is omitted. The<LITERAL>&ensp;-l</LITERAL> flag lists process ID numbers in addition to the normal information. The <LITERAL>-n</LITERAL> flag displays only jobs that have stopped or exited since last notified. The <LITERAL>-p</LITERAL> flag causes only the process group to be listed. See the <COMMAND>ksh(1)</COMMAND> man page for a description of the format of the <LITERAL>job</LITERAL> argument.</PARA>
<PARA>The <COMMAND>bg</COMMAND> command puts each specified process into the background. The current process is put in the background if <LITERAL>job</LITERAL> is not specified.</PARA>
<PARA>The <COMMAND>fg</COMMAND> command brings each process specified to the foreground. Otherwise, the current process is brought into the foreground.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
</SECTION>
</SECTION>
<SECTION  ID="LE92541-PARENT"><TITLE  ID="LE92541-TITLE">Displaying Windows on Remote Workstations</TITLE><PARA>You can invoke a graphical utility or application on a remote networked workstation and direct the window and all input and output to your own workstation. This is convenient when you perform maintenance on remote workstations from your own desk. The program you invoke runs on the remote workstation and the window is displayed on the specified display workstation.</PARA>
<PARA>You must allow the remote system access to your display. To do this, you can use the <COMMAND>xhost</COMMAND> command on the display workstation:</PARA>
<LITERALLAYOUT>
<USERINPUT>xhost +</USERINPUT><REPLACEABLE>remote_workstation</REPLACEABLE>
</LITERALLAYOUT>
<PARA>Next, use <COMMAND>rsh(1)</COMMAND>, <COMMAND>rlogin(1)</COMMAND>, or <COMMAND>telnet(1)</COMMAND> to log in to the remote workstation with whatever privilege level is required to perform the maintenance on that system. This may be as simple as the guest account, or you may have your own user account on the system or you may require <LITERAL>root</LITERAL> permission. Choose the level of access appropriate to your task. Then, for <COMMAND>csh</COMMAND> and <COMMAND>tcsh</COMMAND> users, issue the command:</PARA>
<LITERALLAYOUT>
<USERINPUT>setenv DISPLAY </USERINPUT><REPLACEABLE>local_workstation:</REPLACEABLE><USERINPUT>0</USERINPUT>
</LITERALLAYOUT>
<PARA>Or, <COMMAND>bsh</COMMAND> and <COMMAND>ksh</COMMAND> users enter:</PARA>
<LITERALLAYOUT>
<USERINPUT>DISPLAY=</USERINPUT><REPLACEABLE>local_workstation:</REPLACEABLE><USERINPUT>0 ; export DISPLAY</USERINPUT>
</LITERALLAYOUT>
<PARA>The name of the workstation where the window is to be displayed is substituted for <REPLACEABLE>local_workstation</REPLACEABLE>. The name of the local workstation must be found in the <FILENAME>/etc/hosts</FILENAME> file of the remote system, where the program is actually running.</PARA>
<PARA>Now, when you invoke the desired utility or application on the remote system the window displays on the local workstation. All input and output is handled through the local workstation. Remember that due to restrictions of network carrying capacity, response time in the program may be slower (in some cases, much slower) than usual. </PARA>
<PARA>When you are finished, exit the display program normally and log out of the remote system.</PARA>
</SECTION>
<SECTION  ID="LE11598-PARENT"><TITLE  ID="LE11598-TITLE">Creating a Custom Shell Window</TITLE><PARA>IRIX allows you to create a shell window using any colors you like from the palette on a graphics workstation. You may also select any font you prefer from the font set on your system. The <COMMAND>xwsh</COMMAND> command creates the shell window, and the options to this command control the various fonts, colors, and other features available to you. The command shell used in the window is taken by default from the <FILENAME>/etc/passwd</FILENAME> file entry, or it can be specified on the command line according to the instructions in the <COMMAND>xwsh(1)</COMMAND> man page.</PARA>
<PARA>For a complete list of the features available with xwsh, see the <COMMAND>xwsh(1)</COMMAND> man page. The most commonly used features are described in the following examples.</PARA>
<PARA>To create a simple shell window with a dark gray background and yellow text, issue the following command:</PARA>
<LITERALLAYOUT>
<USERINPUT>xwsh -fg yellow -bg gray40 &amp;</USERINPUT>
</LITERALLAYOUT>
<PARA>The above command generates a new window and a new shell using the colors specified. The window uses the default font selection and window size, since these attributes were not specified. The command that created the shell was placed in the background, so the shell does not tie up the window where you gave the command. You can always place a command in the background by adding the ampersand character (&amp;) to the end of the command line. For more information on placing processes in the background, see the <COMMAND>csh(1)</COMMAND> man page.</PARA>
<PARA>There are 100 shades of gray a<INDEXTERM ID="ITch02-0"><PRIMARY>colors, selecting</PRIMARY>
</INDEXTERM>
vailable. Gray0 is the darkest, and is virtually black. Gray100 is the lightest and is <INDEXTERM ID="ITch02-1"><PRIMARY>shell window colors</PRIMARY>
</INDEXTERM>
virtually white. The effect of selecting foreground (text) in yellow and background in gray40 is similar to yellow chalk on a gray chalkboard. For a complete list of the available colors in your palette, use the<INDEXTERM ID="ITch02-2"><PRIMARY>colorview command</PRIMARY>
</INDEXTERM>
&ensp;<COMMAND>colorview</COMMAND> command. This brings up a window with the list of colors in a scrollable list, and a display window to show a patch of the currently selected color.</PARA>
<PARA>The next example changes the colors to black on a sky blue background (high contrast between the foreground and background makes reading the screen easier), and adds a specification for the size of the window:</PARA>
<LITERALLAYOUT>
<USERINPUT>xwsh -fg black -bg skyblue -geometry 80x40 &amp;</USERINPUT>
</LITERALLAYOUT>
<PARA>The first number in the -<LITERAL>geometry</LITERAL> option is 80, indicating that the new shell window should be 80 characters wide (this is the default). The second number indicates the desired number of lines on the screen, in this case 40. Once again, the <COMMAND>xwsh</COMMAND> command has been placed in the background by adding the ampersand character to the end of the command line.</PARA>
<PARA>You can make a new shell come up on your desktop as an icon by adding the <LITERAL>-iconic</LITERAL> flag to any <COMMAND>xwsh</COMMAND> command.</PARA>
<PARA>To select a font oth<INDEXTERM ID="ITch02-3"><PRIMARY>font selection</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch02-4"><PRIMARY>shell window font selection</PRIMARY>
</INDEXTERM>
er than the default, you can use the on-screen font selection utility, <COMMAND>xfontsel</COMMAND>, or you can specify the font on the command line. It is a great deal easier to use the utility, as you must specify a great number of attributes for the font on the command line. Also, it frequently takes a great number of selections before you settle on a font, a weight (regular or bold, condensed or normal), and a font size that appeal to you. Using the on-screen font utility, you can preview what each selection will look like on your windows.</PARA>
<PARA>Once you have made your selections, you can copy and paste the font selection information and the rest of your <COMMAND>xwsh</COMMAND> command into a shell script file for convenient future use. For example, here is an <COMMAND>xwsh</COMMAND> command line that specifies the IRIS-specific font haebfix in a medium weight with normal spacing, 15 pixels tall. The remaining information is generated by the font selection utility for the shell.</PARA>
<LITERALLAYOUT>
<USERINPUT>xwsh -iconic -fg yellow -bg grey40 -geometry 80x40 -fn \ -sgi-haebfix-medium-r-normal--15-150-72-72-m-90-iso8859-1 &amp;</USERINPUT>
</LITERALLAYOUT>
<PARA>Remember, you may want to create an alias for this or any other IRIX command that you use a lot. See <XREF LINKEND="LE35432-PARENT"> or your shell documentation for more information.</PARA><PARA>Note that in the shell script, the above command appears all on one line. Due to formatting constraints, the command is broken across two lines in this example.</PARA>
<PARA>For complete information on using the font selection utility, see the <COMMAND>xwsh(1G)</COMMAND> and <COMMAND>xfontsel(1)</COMMAND> man pages.</PARA>
</SECTION>
<SECTION  ID="LE91502-PARENT"><TITLE  ID="LE91502-TITLE">Finding and Manipulating Files</TITLE><PARA>The IRIX system provides several tools for manipulating large numbers of files quickly. Some of the most common are described below:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>The <COMMAND>find(1)</COMMAND> utility locates files and can invoke other commands to manipulate them.</PARA>
</LISTITEM>
<LISTITEM><PARA>The <COMMAND>sed(1)</COMMAND> program edits files using pre-determined commands.</PARA>
</LISTITEM>
<LISTITEM><PARA>Many other programs have recursive options, with which you can quickly operate on files that are in many levels of subdirectories.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
<SECTION  ID="LE37780-PARENT"><TITLE  ID="LE37780-TITLE">Locating Files with the find Command<INDEXTERM ID="ITch02-5"><PRIMARY><COMMAND>find</COMMAND>
 program</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch02-6"><PRIMARY>finding files</PRIMARY>
</INDEXTERM>
</TITLE><PARA>Use the <COMMAND>find</COMMAND> command to find files and possibly execute commands on the files found. The command starts at a given directory and searches all directories below the starting directory for the specified files. A basic <COMMAND>find</COMMAND> command line looks like this:</PARA>
<LITERALLAYOUT>
<USERINPUT>find . -name </USERINPUT><REPLACEABLE>filename</REPLACEABLE><USERINPUT>&ensp;-print</USERINPUT>
</LITERALLAYOUT>
<PARA>This command searches the current directory and all subdirectories downward from the current directory until it finds all filenames that match <REPLACEABLE>filename</REPLACEABLE> and then displays their locations on your screen. The <LITERAL>-name</LITERAL> option indicates that the next argument is the name of the file you are looking for, and the <LITERAL>-print</LITERAL> option tells <COMMAND>find</COMMAND> to display the pathname of the file when the file is located.</PARA>
<PARA>You can also use regular expressions (see <XREF LINKEND="LE36742-TITLE">) in your searches.</PARA><PARA>The following command line searches for files that have been changed after the time <FILENAME>/tmp/file</FILENAME> was last modified. If you use the <COMMAND>touch</COMMAND> command (see <COMMAND>touch(1)</COMMAND>) to create <FILENAME>/tmp/file</FILENAME> with an old date, this command can help you find all files changed after that date.</PARA>
<LITERALLAYOUT>
<USERINPUT>find / -local -newer /tmp/file -print</USERINPUT>
</LITERALLAYOUT>
<PARA>This example shows how to locate a file, called <FILENAME>missingfile</FILENAME>, in a user's directory:</PARA>
<LITERALLAYOUT>
<USERINPUT>find /usr/people/trixie -name missingfile -print</USERINPUT>
</LITERALLAYOUT>
<PARA>You can use <COMMAND>find</COMMAND> to locate files and then to run another command on the found files. The next example shows how to change the permissions on all the files in the current directory and in all subdirectories:</PARA>
<LITERALLAYOUT>
<USERINPUT>find . -name '*' -local -exec chmod 644 {} \;</USERINPUT>
</LITERALLAYOUT>
<PARA>The option immediately following the <COMMAND>find</COMMAND> command is a period (.). This indicates to <COMMAND>find</COMMAND> that the search is to begin in the current directory and include all directories below the current one. The next flag, <LITERAL>-name</LITERAL>, indicates the name of the files that are being found. In this case, all files in the directory structure are selected through the use of the asterisk metacharacter (*). See <XREF LINKEND="LE36742-TITLE"> for more information on metacharacters and regular expressions.</PARA><PARA>The <LITERAL>-local</LITERAL> option indicates to <COMMAND>find</COMMAND> that the search is limited to files that physically reside in the directory structure. This eliminates files and directories that are mounted via the Network File System (NFS). The <LITERAL>-exec</LITERAL> option causes <COMMAND>find</COMMAND> to execute the next argument as a command, in this case <COMMAND>chmod 644</COMMAND>. The braces, { }, refer to the current file that <COMMAND>find</COMMAND> is examining.</PARA>
<PARA>The last two characters in the command line are part of the <COMMAND>chmod</COMMAND> command that will be executed (with the <LITERAL>-exec</LITERAL> option) on all files that match the search parameters. The backslash (\) is necessary to keep the shell from interpreting the semicolon (;). The semicolon must be passed along to the <COMMAND>chmod</COMMAND> process. The semicolon indicates a carriage return in the <COMMAND>chmod</COMMAND> command.</PARA>
<PARA>The <COMMAND>find</COMMAND> command has many other useful options:</PARA>
<DEFLIST><DEFLISTENTRY><TERM><LITERAL>-inum</LITERAL>&ensp;<REPLACEABLE>n</REPLACEABLE> </TERM>
<LISTITEM><PARA>Locate files by their inode number (<REPLACEABLE>n</REPLACEABLE>) instead of their name.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-mtime</LITERAL>&ensp;<REPLACEABLE>n</REPLACEABLE> </TERM>
<LISTITEM><PARA>Identify files that have not been modified within a certain amount of time (<REPLACEABLE>n</REPLACEABLE>).</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-perm </LITERAL>[<LITERAL>-</LITERAL>]<LITERAL>||</LITERAL><REPLACEABLE>onum</REPLACEABLE> </TERM>
<LISTITEM><PARA>Identify files with permissions matching <REPLACEABLE>onum</REPLACEABLE>, an octal number that specifies file permissions. See the <COMMAND>chmod(1)</COMMAND> man page. Without the minus sign (-), only file permissions that match exactly are identified.</PARA>
<PARA>If you place a minus sign in front of <REPLACEABLE>onum</REPLACEABLE>, only the bits that are actually set in <REPLACEABLE>onum</REPLACEABLE> are compared with the file permission flags.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-type</LITERAL>&ensp;<REPLACEABLE>x</REPLACEABLE> </TERM>
<LISTITEM><PARA>Identifies files by type, where <REPLACEABLE>x</REPLACEABLE> specifies the type. Types can be <LITERAL>b</LITERAL>, <LITERAL>c</LITERAL>, <LITERAL>d</LITERAL>, <LITERAL>l</LITERAL>, <LITERAL>p</LITERAL>, <LITERAL>f</LITERAL>, or <LITERAL>s</LITERAL> for block special file, character special file, directory, symbolic link, FIFO (a named pipe), plain file, or socket, respectively.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-links</LITERAL>&ensp;<REPLACEABLE>n</REPLACEABLE> </TERM>
<LISTITEM><PARA>Matches files that have <REPLACEABLE>n</REPLACEABLE> number of links.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-user</LITERAL>&ensp;<REPLACEABLE>uname</REPLACEABLE> </TERM>
<LISTITEM><PARA>Identifies files that belong to the user <REPLACEABLE>uname</REPLACEABLE>. If <REPLACEABLE>uname</REPLACEABLE> is a number and does not appear as a login name in the file <FILENAME>/etc/passwd</FILENAME>, it is interpreted as a user ID.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-group</LITERAL>&ensp;<REPLACEABLE>gname</REPLACEABLE> </TERM>
<LISTITEM><PARA>Identifies files that belong to the group <REPLACEABLE>gname</REPLACEABLE>. If <REPLACEABLE>gname</REPLACEABLE> is a number and does not appear in the file <FILENAME>/etc/group</FILENAME>, it is interpreted as a group ID.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-size</LITERAL>&ensp;<REPLACEABLE>n</REPLACEABLE> [<LITERAL>c</LITERAL>] </TERM>
<LISTITEM><PARA>Identifies files that are <REPLACEABLE>n</REPLACEABLE> blocks long (512 bytes per block). If you place a <LITERAL>c</LITERAL> after the <REPLACEABLE>n</REPLACEABLE>, the size is in characters.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>-ok</LITERAL>&ensp;<REPLACEABLE>cmd</REPLACEABLE> </TERM>
<LISTITEM><PARA>Works like <LITERAL>-exec</LITERAL>, except a question mark (?) prompts you to indicate whether you want the command (<REPLACEABLE>cmd</REPLACEABLE>) to operate on the file that is found. This is useful for operations such as selectively removing files.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
</SECTION>
<SECTION><TITLE>Using find and cpio to Locate and Copy Files</TITLE><PARA>The <COMMAND>find</COMMAND> and <COMMAND>cpio</COMMAND> commands can be used to easily and safely copy a directory or a directory hierarchy as long as the user has permission to access the directory. To copy a directory with all its files, or an entire hierarchy of directories and their files, use commands like the following:</PARA>
<LITERALLAYOUT>
<USERINPUT>mkdir </USERINPUT><REPLACEABLE>new_directory_name</REPLACEABLE>
<USERINPUT>cd </USERINPUT><REPLACEABLE>the_directory_you_want_to_copy</REPLACEABLE>
<USERINPUT>find . -print | cpio -pdlmv </USERINPUT><REPLACEABLE>full_path_including_new_directory_name</REPLACEABLE>
</LITERALLAYOUT>
<PARA>This command sequence preserves the symbolic links in the new directory as well as transparently crossing filesystem boundaries.</PARA>
<PARA>For complete information, refer to the <COMMAND>find(1)</COMMAND> man page.</PARA>
</SECTION>
<SECTION><TITLE>About the sed Editor</TITLE><PARA>You can use <COMMAND>sed</COMMAND>, the Stream Editor, to automate file editing. The <COMMAND>sed</COMMAND> command follows an editing script that defines changes to be made to text in a file. The <COMMAND>sed</COMMAND> command takes a file (or files), performs the changes as defined in the editing script, and sends the modified file to the standard output. This command is fully described in the <COMMAND>sed(1)</COMMAND> man page, as well as standard UNIX documentation.</PARA>
</SECTION>
</SECTION>
<SECTION  ID="LE61324-PARENT"><TITLE  ID="LE61324-TITLE">Recursive Commands in IRIX</TITLE><PARA><FIRSTTERM>Recursive</FIRSTTERM> commands can save you a lot of time. For example, to change the ownership of all the files and directories in a directory recursively, and all of the files and directories in all of the subdirectories below that, you can use the recursive option with <COMMAND>chown(1)</COMMAND>:</PARA>
<LITERALLAYOUT>
<USERINPUT>chown -R </USERINPUT><REPLACEABLE>username directory</REPLACEABLE>
</LITERALLAYOUT>
<PARA>Some of the other commands in the IRIX system that have recursive options are:</PARA>
<LITERALLAYOUT>
<USERINPUT>ls -R</USERINPUT>
<USERINPUT>rm -r</USERINPUT>
<USERINPUT>chgrp -R</USERINPUT>
</LITERALLAYOUT>
<PARA>If you want to use a particular command recursively, but it does not have a recursive option, you can run the command using <COMMAND>find</COMMAND>. See <XREF LINKEND="LE37780-TITLE">..</PARA><PARA>Note that using recursive options to commands can be very dangerous in that the command automatically makes changes to your files and filesystem without prompting you in each case. The <COMMAND>chgrp</COMMAND> command can also recursively operate up the filesystem tree as well as down. Unless you are sure that each and every case where the recursive command will perform an action is desired, it is better to perform the actions individually. Similarly, it is good practice to avoid the use of metacharacters (described in <XREF LINKEND="LE36742-TITLE">) in combination with recursive commands. Note that with the <COMMAND>rm</COMMAND> command, you can use the <LITERAL>-i</LITERAL> option to interactively prompt you for confirmation before removing any file.</PARA>
</SECTION>
<SECTION  ID="LE60523-PARENT"><TITLE  ID="LE60523-TITLE">Task Scheduling with the at, batch, and cron Commands</TITLE><PARA>You can use the <COMMAND>at</COMMAND>, <COMMAND>batch</COMMAND>, and <COMMAND>cron</COMMAND> utilities to automate many of your usual tasks, both as an administrator and as a user (unless user <COMMAND>cron</COMMAND> and <COMMAND>at</COMMAND> permissions have been disabled&mdash;see <COMMAND>crontab(1)</COMMAND>). <INDEXTERM ID="ITch02-7"><PRIMARY>automating tasks</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch02-8"><PRIMARY><COMMAND>at</COMMAND>
 command</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch02-9"><PRIMARY><COMMAND>batch</COMMAND>
 command</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch02-10"><PRIMARY><COMMAND>cron</COMMAND>
 command</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch02-11"><PRIMARY>batch processing</PRIMARY>
</INDEXTERM>
These utilities perform similar functions. All execute commands at a later time. The difference between the commands is that <COMMAND>at</COMMAND> executes the given command at one specific time; <COMMAND>cron</COMMAND> sets up a schedule and executes the command or commands as often as scheduled; and <COMMAND>batch</COMMAND> executes the commands when system load levels permit. The following sections provide some examples of the use of these utilities. For complete information, refer to the <COMMAND>at(1)</COMMAND>, <COMMAND>batch(1)</COMMAND>, and <COMMAND>cron(1M)</COMMAND> man pages.</PARA>
<SECTION><TITLE>Scheduling Tasks with the at Command</TITLE><PARA>If you have a task to process once at a later point in time, use <COMMAND>at</COMMAND>. For example, if you wish to close down permissions on a public directory at midnight of the current day, but you do not need to be present when this occurs, use the command string:</PARA>
<LITERALLAYOUT>
<USERINPUT>at 2400</USERINPUT>
<USERINPUT>chmod 000 /usr/public</USERINPUT>
<USERINPUT>Ctrl+D</USERINPUT>
</LITERALLAYOUT>
<PARA>It is required that the <COMMAND>at</COMMAND> command itself and the date and time of the command be placed alone on a line. When you press <USERINPUT>Enter</USERINPUT>, you do not see a prompt; <COMMAND>at</COMMAND> is waiting for input. Enter the command to be executed just as you would type it at a shell prompt. After entering the command, press <USERINPUT>Enter</USERINPUT> again and enter <USERINPUT>Ctrl+D</USERINPUT> to tell <COMMAND>at</COMMAND> that no more commands are forthcoming. You can use a single <COMMAND>at</COMMAND> command to execute several commands at the appointed time. For example, if you want to close the public directory at noon on July 14th and change the message of the day to reflect this closure, you can create the new message of the day in the file <FILENAME>/tmp/newmesg</FILENAME>, and then issue the following command string:</PARA>
<LITERALLAYOUT>
<USERINPUT>at 1200 July 14</USERINPUT>
<USERINPUT>chmod 000 /usr/public</USERINPUT>
<USERINPUT>mv /etc/motd /etc/oldmotd</USERINPUT>
<USERINPUT>mv /tmp/newmesg /etc/motd</USERINPUT>
<USERINPUT>Ctrl+D</USERINPUT>
</LITERALLAYOUT>
<PARA>By default, any output of commands executed using <COMMAND>at</COMMAND> is mailed to the executing user through the system electronic mail. You can specify a different location for the output by using the standard output redirects, such as pipes (|) and file redirects (&gt;). See your command shell documentation for a complete description of redirecting the standard output.</PARA>
<PARA>For complete information on the <COMMAND>at</COMMAND> command, see the <COMMAND>at(1)</COMMAND> man page.</PARA>
</SECTION>
<SECTION><TITLE>Scheduling Tasks with the batch Command</TITLE><PARA>The <COMMAND>batch</COMMAND> command works just like the <COMMAND>at</COMMAND> command, except that you do not specify a time for the command or commands to be executed. The system determines when the overall load is low enough to execute the commands, and then does so. As with all other <COMMAND>cron</COMMAND> subsystem commands, the output of the commands is mailed to you unless you specify otherwise. <COMMAND>batch</COMMAND> is useful for large CPU-intensive jobs that slow down the system or cripple it during peak periods. If the job can wait until a non-peak time, you can place it on the <COMMAND>batch</COMMAND> queue until the system executes it. For complete information on the <COMMAND>batch</COMMAND> command, see the <COMMAND>batch(1)</COMMAND> man page.</PARA>
</SECTION>
<SECTION  ID="LE93829-PARENT"><TITLE  ID="LE93829-TITLE">Scheduling Tasks with the cron Command</TITLE><PARA>If you want a command to execute regularly on schedule, the <COMMAND>cron</COMMAND> command and subsystem provide a precise mechanism for scheduled jobs. The <COMMAND>at</COMMAND> and <COMMAND>batch</COMMAND> commands are technically part of the <COMMAND>cron</COMMAND> subsystem and use <COMMAND>cron</COMMAND> to accomplish their tasks. The <COMMAND>cron</COMMAND> command itself, though, is the most configurable command of the subsystem.</PARA>
<PARA>You use <COMMAND>cron</COMMAND> by setting up a <FILENAME>crontab</FILENAME> file, where you list the commands you would like to have executed and the schedule for their execution. Complete information on setting up your <FILENAME>crontab</FILENAME> file is available in the <COMMAND>cron(1M)</COMMAND> and <COMMAND>crontab(1)</COMMAND> man pages.</PARA>
<PARA>The <COMMAND>cron</COMMAND> facility is useful for scheduling network backups, checking the integrity of the password file, and any other regular tasks that do not require interaction between you and the system. By default, <COMMAND>cron</COMMAND> mails the results or output of the command to the user who submitted the <FILENAME>crontabs</FILENAME> file, so if you use <COMMAND>cron</COMMAND> to schedule something like a <COMMAND>pwck(1M)</COMMAND>, the results of the test are mailed to you and you can interpret them at your convenience.</PARA>
<PARA>Note that you must restart <COMMAND>cron</COMMAND> after each change to a <FILENAME>crontabs</FILENAME> file, whether made through the <COMMAND>cron</COMMAND> utility or the <COMMAND>at</COMMAND> command, for the changes to take effect.</PARA>
<PARA>As administrator, you can control access to the <COMMAND>at</COMMAND> and <COMMAND>batch</COMMAND> commands by using the <FILENAME>cron.allow</FILENAME>, <FILENAME>cron.deny</FILENAME>, <FILENAME>at.allow</FILENAME>, and <FILENAME>at.deny</FILENAME> files in <FILENAME>/etc/cron.d</FILENAME>. Specific users or all users can be denied use of the commands. Refer to the man pages for <COMMAND>at(1)</COMMAND> and <COMMAND>crontab(1)</COMMAND> for more information.</PARA>
</SECTION>
</SECTION>
<SECTION  ID="LE24422-PARENT"><TITLE  ID="LE24422-TITLE">Disabling Login with the /etc/nologin File</TITLE><PARA>The <FILENAME>/etc/nologin</FILENAME> file prevents any user from logging in. This feature of the <COMMAND>login(1)</COMMAND> program is designed to allow the system administrator to have the system running in full multiuser mode, but with no users logged in. This is useful when you want to perform complete backups of the system or when you want to do some testing that may cause the operating system to halt unexpectedly. Of course, it is always best to do this sort of work during non-peak system usage hours.</PARA>
<PARA>To disable logins, simply create a file called <FILENAME>nologin</FILENAME> in the <FILENAME>/etc</FILENAME> directory. (You must be logged in as <LITERAL>root</LITERAL> to create files in <FILENAME>/etc</FILENAME>.) In addition to disallowing logins, the <COMMAND>login</COMMAND> program displays the contents of <FILENAME>/etc/nologin</FILENAME> when it denies access to the user. (Note that <FILENAME>/etc/nologin</FILENAME> does not apply to the console window.)</PARA>
<PARA>A suggested format for the message in <FILENAME>/etc/nologin</FILENAME> is:</PARA>
<LITERALLAYOUT>
The system is unavailable for a few moments while we perform some routine maintenance. We will be done shortly and regret any inconvenience this may cause you. -Norton
</LITERALLAYOUT>
<PARA>To allow logins again, simply remove the <FILENAME>/etc/nologin</FILENAME> file. If the system crashes, <LITERAL>root</LITERAL> can still log in on the system console, on a tty line, or on a pseudo tty attached to the console (but not over the network) to remove <FILENAME>/etc/nologin</FILENAME>.</PARA>
</SECTION>
<SECTION  ID="LE17779-PARENT"><TITLE  ID="LE17779-TITLE">Using Mouse Shortcuts</TITLE><PARA>The system hardware for graphical workstations (and some X-terminals) can provide you with shortcuts. These may not be available to server administrators who rely solely on character-based terminals for their administration. Using the graphics console of your system, you can cut and paste between windows without using pulldown or popup menus of any sort. Using the popup menu, you can manipulate windows completely. </PARA>
<PARA>You can customize the action of your mouse buttons. All examples in this section assume the default mouse button meanings are used. If you have modified your mouse action, you must allow for that modification before you use these techniques.</PARA>
<PARA>For complete information on using the pop-up windows, see the online <CITETITLE><LINK BOOK="Desktop_UG" EXTREF="29162">Desktop User's Guide</LINK>
</CITETITLE>.</PARA>
<SECTION><TITLE>Copying and Pasting Text with the Mouse</TITLE><PARA><XREF LINKEND="LE23828-TITLE"> describes how you can use the most common mouse shortcut. It outlines how you cut or copy and paste between windows on your screen.</PARA><PROCEDURE  ID="LE23828-PARENT"><TITLE  ID="LE23828-TITLE">Copying and Pasting Text</TITLE>
</PROCEDURE>
<PARA>To cut or copy and paste text between windows, follow these steps:</PARA>
<ORDEREDLIST><LISTITEM><PARA>Find the cursor controlled by your mouse on your screen. It should appear as a small arrow when it is positioned in the working area of one of your windows, or as some other figure when it is positioned on the frame of a window or in the working area of an application's window. If you cannot locate the cursor immediately, move the mouse around a bit and look for motion on your screen. You should find the cursor easily.</PARA>
</LISTITEM>
<LISTITEM><PARA>Place the cursor at the beginning of the text you wish to paste between windows and press the leftmost key on the top of the mouse. Now, keeping the mouse button pressed, move the cursor to the end of the text you wish to paste. The text highlights to show it is selected. If you are selecting a large section of text, it is not necessary to move the cursor over every space. You may move the cursor directly to the end point and all intervening text is selected. It is not possible to select &ldquo;columns&rdquo; of text or several disconnected pieces of text at once. When you have moved the cursor to the desired end point, release the mouse button. The text remains highlighted.</PARA>
</LISTITEM>
<LISTITEM><PARA>Now move the cursor to the window you want to paste the text into and make certain the window is ready to receive the pasted text. For example, if you are pasting a long command line, make certain that there is a shell prompt waiting with no other command already typed in. If the pasted matter is text into a file, make certain that the receiving file has been opened with an editor and that the editor is in a mode where text can be inserted.</PARA>
</LISTITEM>
<LISTITEM><PARA>To paste the text, place the cursor in the receiving window and press the middle mouse button once quickly. Each time you press the middle button, the selected text is pasted into the receiving window. Sometimes it takes a moment for the text to appear, so be patient. If you press the button several times before the text appears, you will paste several copies of your text.</PARA>
</LISTITEM>
<LISTITEM><PARA>You can also paste your selected text in the bottom of a window (including the window from which you selected the text). Press the rightmost mouse button while the cursor is in that window and choose the <USERINPUT>Send</USERINPUT> option from the popup menu that appears.</PARA>
</LISTITEM>
</ORDEREDLIST>
<PARA>The text you originally selected remains selected until you select new text somewhere else or until you place the cursor back in the original window and click once on the leftmost mouse button.</PARA>
</SECTION>
<SECTION><TITLE>Creating a Shell Window with the Mouse</TITLE><PARA><XREF LINKEND="LE29523-TITLE"> describes how you can use the mouse to create a new shell window.</PARA><PROCEDURE  ID="LE29523-PARENT"><TITLE  ID="LE29523-TITLE">Creating a New Shell Window</TITLE>
</PROCEDURE>
<PARA>To create a new shell window, follow these steps:</PARA>
<ORDEREDLIST><LISTITEM><PARA>With the cursor in a shell window, press and hold the rightmost button on your mouse. A popup menu appears as shown in <XREF LINKEND="LE31820-TITLE">:</PARA><FIGURE><GRAPHIC FILEREF="ch02.popup.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE31820-TITLE">Shell PopUp Menu</TITLE>
</FIGURE>
</LISTITEM>
<LISTITEM><PARA>While keeping the button on the mouse pressed, move the mouse down until the Clone option is highlighted and the submenu pops up, showing various shell window cloning options. These options create another shell window functionally identical to the one in use. This is why the option is called cloning. The text and background colors of the current window are carried forward to the cloned window, and the selections in the sub-menu specify the number of lines in the new window. You can choose to have the same number of lines in the cloned window as in the current window, or to have 24, 40, or 60 lines as shown in <XREF LINKEND="LE12288-TITLE">.</PARA><FIGURE><GRAPHIC FILEREF="ch02.custom.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE12288-TITLE">Shell Window Cloning Submenu</TITLE>
</FIGURE>
</LISTITEM>
<LISTITEM><PARA>Choose the size you want by moving the mouse down the options and releasing the mouse button when the option you desire is highlighted. The new window appears on your screen. You may repeat this process as often as you like on any shell window.</PARA>
</LISTITEM>
</ORDEREDLIST>
</SECTION>
</SECTION>
<SECTION  ID="LE12893-PARENT"><TITLE  ID="LE12893-TITLE">Creating Man Pages</TITLE><PARA>Man pages are online IRIX command descriptions. A full set of man pages for the programs, utilities, and files in the standard IRIX distribution is provided online, and these pages are available through the <COMMAND>man(1)</COMMAND> command. In addition, you can create your own custom man pages using the following procedure. Any time you create a script, utility, program, or application for your users, you should also create a man page. This provides a convenient way for your users to learn to use your new tools, and also makes future maintenance easier.</PARA>
<PARA>Not all sites have the optional Documenter's Workbench software product installed, but you can create a facsimile of a man page using only the text editor of your choice. See the following section for details.</PARA>
<SECTION><TITLE>Creating ASCII Man Pages</TITLE><PARA>To create a pure-text man page without Documenter's Workbench (no embedded <COMMAND>nroff</COMMAND> commands that would format the text) simply use the <COMMAND>vi</COMMAND> editor (or the editor of your choice) and document your script or program according to the style found in the standard man pages. Name your man page file after the script or program it documents with the suffix <LITERAL>.l</LITERAL> to designate the page as a local man page.</PARA>
<NOTE><PARA>Use the letter &ldquo;l&rdquo; as your suffix, not the numeral one &ldquo;1.&rdquo;</PARA>
</NOTE>
<PARA>When you have completed your man page, you must place it in the <FILENAME>/usr/man</FILENAME> directory structure for the <COMMAND>man</COMMAND> command to be able to display the new page. Place the man pages in a local directory, such as <FILENAME>/usr/man/ma</FILENAME><LITERAL>nl</LITERAL>. (Again, use the <LITERAL>l</LITERAL> to designate local man pages.) If the directory does not already exist, create it with this command (you must be logged in as <LITERAL>root</LITERAL>):</PARA>
<LITERALLAYOUT>
<USERINPUT>mkdir /usr/man/manl</USERINPUT>
</LITERALLAYOUT>
<PARA>Long man pages should be packed to save disk space. Use the <COMMAND>pack</COMMAND> command to pack the text file into a more compact form. For example, to pack the man page you made for a user script called <LITERAL>program</LITERAL>, enter:</PARA>
<PROGRAMLISTING>
<USERINPUT>pack program.l</USERINPUT>
<USERINPUT>mv program.l.z /usr/man/manl/program.l.z</USERINPUT>
</PROGRAMLISTING>
<NOTE><PARA>The <COMMAND>man</COMMAND> program automatically unpacks the pages for reading.</PARA>
</NOTE>
<PARA>Test your man page with the command:</PARA>
<PROGRAMLISTING>
<USERINPUT>man l program</USERINPUT>
</PROGRAMLISTING>
<PARA>The command should display the man page specified (this assumes that <FILENAME>/usr/man</FILENAME> is in your <LITERAL>$MANPATH</LITERAL> environment variable.) For more information, refer to the <COMMAND>man(1)</COMMAND> man page.</PARA>
</SECTION>
</SECTION>
<SECTION  ID="LE23298-PARENT"><TITLE  ID="LE23298-TITLE">System Monitoring Tools</TITLE><PARA>IRIX provides a set of detailed programs to assist you in debugging potential system problems. This software is briefly described here. Complete documentation is available in the relevant man pages and through the help system files and release notes distributed with the software. The <COMMAND>savecore</COMMAND>, <COMMAND>icrash</COMMAND>, <COMMAND>fru</COMMAND>, and <COMMAND>sysmon</COMMAND> software work together to provide a picture of what happens to your system in an error condition that results in an operating system crash.</PARA>
<SECTION><TITLE>About Saving a Crash Dump with savecore</TITLE><PARA>Your system may or may not automatically save the image of system memory (if possible) at the time of a crash depending on the <COMMAND>chkconfig</COMMAND> setting for <COMMAND>savecore</COMMAND>. Here is what happens depending upon the two possible settings to <COMMAND>savecore</COMMAND>:</PARA>
<DEFLIST><DEFLISTENTRY><TERM><COMMAND>savecore on</COMMAND></TERM>
<LISTITEM><PARA>The system attempts to automatically save the image of system memory at a system crash. The image is stored in <FILENAME>/var/adm/crash/vmcore.</FILENAME><REPLACEABLE>N</REPLACEABLE>, where <REPLACEABLE>N</REPLACEABLE> is a sequential number assigned to the most recent core file. A successful dump may then be studied with the <COMMAND>icrash</COMMAND> utility described below.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><COMMAND>savecore off</COMMAND></TERM>
<LISTITEM><PARA> A core dump is not saved by the system The <COMMAND>icrash</COMMAND> utility may still be run on <FILENAME>/unix</FILENAME> and <FILENAME>/dev/swap</FILENAME> in order to get a report of what happened when the system crashed. In this case, systems do not have to use the disk space on a core dump in order to get a report.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
<PARA>To determine the current status of the <LITERAL>savecore</LITERAL> option, enter:</PARA>
<PROGRAMLISTING>
<USERINPUT>chkconfig | grep savecore</USERINPUT>
</PROGRAMLISTING>
<PARA>The default setting is savecore on.</PARA>
<PARA>Refer to <COMMAND>savecore(1M)</COMMAND> and the discussion of <COMMAND>icrash</COMMAND> below for more information.</PARA>
</SECTION>
<SECTION  ID="LE79626-PARENT"><TITLE  ID="LE79626-TITLE">About the icrash System Crash Analysis Utility</TITLE><PARA>The <COMMAND>icrash(1M)</COMMAND> utility interactively generates detailed kernel information in an easy-to-read format. The <COMMAND>icrash</COMMAND> command can also generate reports about system crash dumps created by <COMMAND>savecore</COMMAND>.</PARA>
<PARA>Two report files are created when <FILENAME>icrash</FILENAME> runs, with <REPLACEABLE>N</REPLACEABLE> being the bounds number for the core dump:</PARA>
<DEFLIST><DEFLISTENTRY><TERM><FILENAME>analysis.N</FILENAME></TERM>
<LISTITEM><PARA>An analysis of the core dump is created containing items of interest, such as the <COMMAND>putbuf</COMMAND> dump, <COMMAND>fru</COMMAND> information, stack traces, and so on. This is a verbose description of what happened when the system crashed, and it is meant to be used to perform a preliminary analysis of the system before any hardware or software changes are made. See the <COMMAND>icrash(1M)</COMMAND> man page for more information.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><FILENAME>&ensp;summary.N</FILENAME></TERM>
<LISTITEM><PARA>The summary report contains the panic string, the crash time, and the <COMMAND>fru</COMMAND> information in one file for <COMMAND>availmon</COMMAND>. See the <COMMAND>availmon(1M)</COMMAND> man page for more information.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
<PARA>Depending on the type of system crash dump, <COMMAND>icrash</COMMAND> can create a unique report that contains information about what happened when the system crashed. The <COMMAND>icrash</COMMAND> command can be run on both live systems or with any namelist file and <FILENAME>core</FILENAME> file specified on the command line. The namelist file must contain symbol table information needed for symbolic access to the system memory image being examined.</PARA>
<PARA>Each version of <COMMAND>icrash</COMMAND> is specific to the operating system release that it came from, and does not work on any other operating system release. Do not copy <COMMAND>icrash</COMMAND> to any other IRIX system unless the operating system versions are identical (including patch levels). Running <COMMAND>icrash</COMMAND> on a live system can sometimes generate random results, as the information being viewed is volatile at the time it is displayed. A brief list of some of the functionality that <COMMAND>icrash</COMMAND> offers:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>System crash reports created on system panics</PARA>
</LISTITEM>
<LISTITEM><PARA>Field replacement unit (FRU) information provided with each crash on eligible hardware</PARA>
</LISTITEM>
<LISTITEM><PARA>Direct access to a broad list of kernel structures</PARA>
</LISTITEM>
<LISTITEM><PARA>Disassembly of kernel functions</PARA>
</LISTITEM>
<LISTITEM><PARA>Documented set of commands (see the <COMMAND>help</COMMAND> system within <COMMAND>icrash</COMMAND>)</PARA>
</LISTITEM>
<LISTITEM><PARA>Command-line editing and history</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION><TITLE>About the fru Hardware Error Analysis Tool</TITLE><PARA>The <COMMAND>fru</COMMAND> (Field Replacement Unit) command (described fully in the <COMMAND>fru(1M)</COMMAND> man page) displays field replacement unit analysis on CHALLENGE L and XL, Onyx L and XL, and POWER CHALLENGE and POWER Onyx systems only. The program considers the hardware state during an error situation and attempts to determine if the error results from faulty hardware. The analysis is based on the hardware error state created in the kernel crash dump. If no hardware error state is dumped, no <COMMAND>fru</COMMAND> analysis is displayed.</PARA>
<PARA>Each board is analyzed separately based on the hardware error state. After the analysis is completed, the board (or boards) with the highest confidence levels is displayed. Currently the boards analyzed include the IO4, MC3, IP19, and IP21. Note that you should also check the version of <COMMAND>fru</COMMAND> output from release to release, because later versions may report a different analysis.</PARA>
<PARA>When a confidence level is displayed, it is based on the amount of confidence that the <COMMAND>fru</COMMAND> analyzer has in the board listed as being the problem. Note that there are only a few levels of confidence, and it is important to recognize what the percentages mean: </PARA>
<DEFLIST><DEFLISTENTRY><TERM>10%</TERM>
<LISTITEM><PARA>The board was witnessed in the hardware error state only.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>30%</TERM>
<LISTITEM><PARA>The board has a possible error, with a low likelihood.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>40%</TERM>
<LISTITEM><PARA>The board has a possible error, with a medium likelihood.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>70%</TERM>
<LISTITEM><PARA>The board has a probable error, with a high likelihood.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>90%</TERM>
<LISTITEM><PARA>The board is a definite problem.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>95%</TERM>
<LISTITEM><PARA>The board is a definite problem, an exact error match.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
<PARA>There is a possibility of multiple boards being reported, so the field engineer must be cautious when deciding to replace boards. For example, if two boards are reported at 10%, that is not enough confidence that the boards listed are bad. If there is one board at 70% or better, there is a good likelihood that the board listed is a problem, and should be replaced. Boards at 30% to 40% are questionable, and should be reviewed based on the frequency of the failure of the specific board (in the same slot) between system crashes.</PARA>
<PARA>The objective of <COMMAND>fru</COMMAND> is to uncover real hardware problems, rather than to replace boards at random. Each <COMMAND>icrash</COMMAND> report for each kernel core dump on an eligible system has a <COMMAND>fru</COMMAND> analysis in it, which should be reviewed by field engineers before any boards are replaced.</PARA>
<PARA>In <XREF LINKEND="LE18021-TITLE">, each <COMMAND>fru</COMMAND> command output comes from a unique core dump. Your output is likely to vary significantly.</PARA>
<EXAMPLE  ID="LE18021-PARENT"><TITLE  ID="LE18021-TITLE">fru Output</TITLE><PROGRAMLISTING>
&gt;&gt; fru
FRU ANALYZER (2.0.1):
++ PROCESSOR BOARD
++   IP21 board in slot 2: 40% confidence.
++ END OF ANALYSIS
&gt;&gt; fru
FRU ANALYZER (1.6.5):
++ MEMORY BOARD
++   MC3 board in slot 1: 70% confidence.
++ END OF ANALYSIS
&gt;&gt; fru
FRU ANALYZER (1.6.5):
++ CPU slice 3 (CC CHIP)
++  and/or Integral component (A CHIP)
++   on the IP19 board in slot 5: 40% confidence.
++ CPU slice 3 (CC CHIP)
++  and/or Integral component (A CHIP)
++   on the IP19 board in slot 7: 40% confidence.
++ CPU slice 2 (CC CHIP)
++  and/or Integral component (A CHIP)
++   on the IP19 board in slot 9: 40% confidence.
++ CPU slice 3 (CC CHIP)
++  and/or Integral component (A CHIP)
++   on the IP19 board in slot 11: 40% confidence.
++ END OF ANALYSIS
&gt;&gt; fru
FRU ANALYZER (2.0.1):  No errors found.
</PROGRAMLISTING>
</EXAMPLE>
</SECTION>
<SECTION  ID="LE22603-PARENT"><TITLE  ID="LE22603-TITLE">About sysmon, the System Log Viewer</TITLE><PARA>The <COMMAND>sysmon</COMMAND> utility allows a user to browse the system log file (<FILENAME>/var/adm/SYSLOG</FILENAME>). The 8 <KEYCAP>SYSLOG</KEYCAP> priorities (see the <COMMAND>syslog(3B)</COMMAND> man page) are simplified into 4 priority levels.</PARA>
<PARA>The <COMMAND>sysmon</COMMAND> utility is part of the Desktop System Monitor. It can be launched from the <INTERFACE>System</INTERFACE> menu by choosing <INTERFACE>View System Log</INTERFACE>. You see a window similar to that shown in <XREF LINKEND="LE39981-TITLE">:</PARA><PARA><FIGURE><GRAPHIC FILEREF="ch02.sysmon.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE39981-TITLE">sysmon System Log Browser</TITLE>
</FIGURE>
</PARA>
<PARA>You can choose <INTERFACE>View</INTERFACE>, <INTERFACE>Filter</INTERFACE> and <INTERFACE>Sort</INTERFACE> options through the pulldown menus on this window. Your selections are saved in your <FILENAME>$HOME/.sysmonrc</FILENAME> file. For additional information on these options, consult the online help available through this window or the <COMMAND>sysmon</COMMAND> Release Notes.</PARA>
<PARA><XREF LINKEND="LE66265-TITLE"> shows how <LITERAL>SYSLOG</LITERAL> priorities map into the <COMMAND>sysmon</COMMAND> simplified priority scheme:</PARA>
<TABLE FRAME="topbot"><TBLTITLE  ID="LE66265-TITLE">sysmon Priority Table</TBLTITLE>
<TGROUP COLS="3">
<COLSPEC COLWIDTH="226*">
<COLSPEC COLWIDTH="226*">
<COLSPEC COLWIDTH="226*">
<THEAD><ROW><ENTRY><PARA>sysmon Priority</PARA></ENTRY>
<ENTRY><PARA>SYSLOG Priority</PARA></ENTRY>
<ENTRY><PARA>Numerical Priority</PARA></ENTRY>
</ROW>
</THEAD>
<TBODY><ROW><ENTRY><PARA><LITERAL>CRITICAL</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_EMERG</LITERAL></PARA></ENTRY>
<ENTRY><PARA>0</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA><LITERAL>CRITICAL</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_ALERT</LITERAL></PARA></ENTRY>
<ENTRY><PARA>1</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA><LITERAL>ERROR</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_CRIT</LITERAL></PARA></ENTRY>
<ENTRY><PARA>2</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA><LITERAL>ERROR</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_ERR</LITERAL></PARA></ENTRY>
<ENTRY><PARA>3</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA><LITERAL>WARNING</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_WARNING</LITERAL></PARA></ENTRY>
<ENTRY><PARA>4</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA><LITERAL>WARNING</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_NOTICE</LITERAL></PARA></ENTRY>
<ENTRY><PARA>5</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA><LITERAL>INFO</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_INFO</LITERAL></PARA></ENTRY>
<ENTRY><PARA>6</PARA></ENTRY>
</ROW>
<ROW><ENTRY><PARA><LITERAL>INFO</LITERAL></PARA></ENTRY>
<ENTRY><PARA><LITERAL>LOG_DEBUG</LITERAL></PARA></ENTRY>
<ENTRY><PARA>7</PARA></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECTION>
</SECTION>
<SECTION  ID="LE37470-PARENT"><TITLE  ID="LE37470-TITLE">About availmon, the System Availability Monitoring Tool</TITLE><PARA>The availability monitor (described completely in the <COMMAND>availmon(5)</COMMAND> man page) is a software package that together with <COMMAND>icrash</COMMAND> and the FRU analyzer provides a technology platform for system availability and diagnostic data gathering and distribution.</PARA>
<PARA>The <COMMAND>availmon</COMMAND> system collects system availability information and crash diagnosis information. The availability information can be used to evaluate system reliability and availability. The crash diagnosis information is an automated aid to debugging. </PARA>
<PARA>The <COMMAND>availmon</COMMAND> software is embedded in the system boot and shutdown processes. The software is capable of differentiating controlled shutdowns, system panics, system hangs, power cycles, and power failures. Your system's uptime is estimated by a daemon process, and diagnostic information is collected from <COMMAND>icrash(1M)</COMMAND>, <FILENAME>/usr/adm/SYSLOG</FILENAME>, and <COMMAND>sysmon(1M)</COMMAND>, <COMMAND>hinv(1M)</COMMAND>, <COMMAND>versions(1M)</COMMAND>, and <COMMAND>gfxinfo(1G)</COMMAND>. All aspects of <COMMAND>availmon</COMMAND> operation are fully configurable.</PARA>
<PARA>The <COMMAND>availmon</COMMAND> software on your distribution may not work with some older releases of IRIX.</PARA>
<PARA>You can choose to participate in a system availability database that assists SGI support in providing reliable service. All availability and diagnostic data for cooperating systems will be maintained in a SGI database that provides overall reliability data and specific histories for individual participating systems. This is the primary function of <COMMAND>availmon</COMMAND>.</PARA>
<SECTION  ID="LE29106-PARENT"><TITLE  ID="LE29106-TITLE">Registering availmon</TITLE><PARA>Issue the <COMMAND>amregister</COMMAND> command to set up <COMMAND>availmon</COMMAND> configuration, turn on <LITERAL>autoemail</LITERAL>, and register your system with the SGI availmon database.</PARA>
<PARA>To register your system, log in as <LITERAL>root</LITERAL> and issue the command:</PARA>
<LITERALLAYOUT>
<USERINPUT>/usr/etc/amregister -r</USERINPUT>
</LITERALLAYOUT>
<PARA>Depending on your system type, you may need to enter the serial number of your system by hand. See the <COMMAND>amregister(1M)</COMMAND> man page for further information.</PARA>
<PARA>The <COMMAND>availmon</COMMAND> software is enabled through the <COMMAND>chkconfig(1M)</COMMAND> command, described in <XREF LINKEND="LE55726-TITLE">.. The flags are:</PARA><DEFLIST><DEFLISTENTRY><TERM><LITERAL>availmon</LITERAL></TERM>
<LISTITEM><PARA>Controls the activation of the entire availmon software package. By default, this option is on.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
<PARA>The other configuration flags are set using the <COMMAND>amconfig</COMMAND> utility, which is similar to <COMMAND>chkconfig</COMMAND>, but uses a different record file. There are four flags:</PARA>
<DEFLIST><DEFLISTENTRY><TERM><LITERAL>autoemail</LITERAL></TERM>
<LISTITEM><PARA>Enables automatic distribution of reports. By default, this option is off, but is turned on by <COMMAND>amregister</COMMAND>.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>hinvupdate</LITERAL></TERM>
<LISTITEM><PARA>Enables a daemon that checks for changes reported by <COMMAND>hinv</COMMAND> and <COMMAND>gfxinfo</COMMAND>. By default, this option is on for large systems and off for all others.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>shutdownreason</LITERAL></TERM>
<LISTITEM><PARA>Directs the system to query the superuser for a reason for each system shutdown. By default, this option is on for large systems and off for all others.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><LITERAL>tickerd</LITERAL></TERM>
<LISTITEM><PARA>Enables the daemon that monitors system uptime. By default, this option is on for large systems and off for all others.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
<PARA>There is also an e-mail list configuration file, <FILENAME>/var/adm/avail/config/autoemail.list</FILENAME>, used to control the report type, e-mail format, and e-mail addresses for <COMMAND>availmon</COMMAND> reports. The e-mail list is edited and maintained through the <COMMAND>amconfig</COMMAND> command. By default, this file is configured to send diagnosis reports to SGI.</PARA>
<PARA>For sites with multiple systems participating, the <COMMAND>amconfig</COMMAND> command can be executed on one system to set up a common e-mail configuration file (<FILENAME>/var/adm/avail/autoemail.list</FILENAME>), and then this file can be copied onto all participating systems. Then run <COMMAND>amregister -r</COMMAND> on each system.</PARA>
</SECTION>
<SECTION><TITLE>Configuring an availmon Site Log File</TITLE><PARA>If you want a site log file for one or more systems, a pseudo e-mail alias can be created. This alias pipes availability reports to <COMMAND>amreceive</COMMAND>, whose output is then appended to the site log file. This procedure should be done before registering all the systems, because initial availability reports are sent out when registering.</PARA>
<PARA>After setting up <COMMAND>availmon</COMMAND>, <COMMAND>amreport</COMMAND> can be executed on each system to view the availability statistics and reports for that system, or it can be run with the site log file as input to view overall availability statistics for all systems, and availability reports for any system.</PARA>
<PARA><XREF LINKEND="LE23134-TITLE"> shows you how to create a site log file.</PARA><PROCEDURE  ID="LE23134-PARENT"><TITLE  ID="LE23134-TITLE">Creating a Site Log File</TITLE>
</PROCEDURE>
<PARA>To create a site log file, perform the following steps:</PARA>
<ORDEREDLIST><LISTITEM><PARA>Create an e-mail alias on one system and pipe all availability reports to <COMMAND>amreceive</COMMAND>. For example, if the site log file is <FILENAME>/disk/amrlog</FILENAME>, add this line to the mail server system's <FILENAME>/etc/aliases</FILENAME> file:</PARA>
<LITERALLAYOUT>
<USERINPUT>amrlog: &ldquo;| /var/adm/avail/amreceive &gt;&gt; /disk/amrlog&rdquo;</USERINPUT>
</LITERALLAYOUT>
<PARA>Then run the <COMMAND>newaliases</COMMAND> command to set up this e-mail alias.</PARA>
</LISTITEM>
<LISTITEM><PARA>Run the <COMMAND>amconfig</COMMAND> command on the mail server system to configure the standard e-mail lists. For this example log file, add the entry:</PARA>
<LITERALLAYOUT>
availability(text): amrlog
</LITERALLAYOUT>
<PARA>Then, copy the resulting <FILENAME>/var/adm/avail/config/autoemail.list</FILENAME> on this system to the rest of the systems at your site.</PARA>
</LISTITEM>
<LISTITEM><PARA>Run <COMMAND>amregister</COMMAND> to register all your systems as described in <XREF LINKEND="LE29106-TITLE">..</PARA></LISTITEM>
<LISTITEM><PARA>Run the command:</PARA>
<LITERALLAYOUT>
<USERINPUT>amreport -s  /disk/amrlog</USERINPUT>
</LITERALLAYOUT>
<PARA>It shows the overall statistics, system statistics, and individual availability reports for all participating systems.</PARA>
</LISTITEM>
</ORDEREDLIST>
</SECTION>
<SECTION><TITLE>Administering availmon</TITLE><PARA>Three examples are provided to illustrate the administration of <COMMAND>availmon</COMMAND>. One is for general customers who send reports out automatically; the other two are for secure sites with and without internal report sending.</PARA>
<SECTION  ID="LE55588-PARENT"><TITLE  ID="LE55588-TITLE">Using availmon with Automatic Reporting</TITLE><PARA>If <COMMAND>availmon</COMMAND> is installed on a single system, reboot the system after installation. Then, run <COMMAND>amregister</COMMAND> without any argument to register and configure the e-mail lists. This turns on <LITERAL>autoemail</LITERAL> and sends registration reports to all configured addresses. If your system does not have an IP19, IP21, IP22, or IP25 processor, <COMMAND>amregister</COMMAND> prompts you to input your system's serial number manually.</PARA>
<PARA>The <LITERAL>shutdownreason</LITERAL> and <LITERAL>tickerd</LITERAL> configuration options can be turned on or off anytime. The default <FILENAME>autoemail.list</FILENAME> is: </PARA>
<PROGRAMLISTING>
availability(compressed,encrypted):
availability(compressed):
availability(text):
diagnosis(compressed,encrypted): availmon@csd.sgi.com
diagnosis(compressed):
diagnosis(text):
</PROGRAMLISTING>
<PARA>In addition, you may want to add the following entries: </PARA>
<PROGRAMLISTING>
availability(text): <REPLACEABLE>local_sysadmin</REPLACEABLE>
diagnosis(compressed,encrypted): <REPLACEABLE>local_support</REPLACEABLE>
</PROGRAMLISTING>
<PARA>In these optional entries, replace the strings <REPLACEABLE>local_sysadmin</REPLACEABLE> and <REPLACEABLE>local_support</REPLACEABLE> with the appropriate e-mail addresses for your system administrator and SGI support representative, respectively. If encrypted data in e-mail is prohibited by law at your site, move addresses in &ldquo;(compressed,encrypted)&rdquo; entries to &ldquo;(compressed)&rdquo; entries.</PARA>
</SECTION>
<SECTION  ID="LE51546-PARENT"><TITLE  ID="LE51546-TITLE">Using availmon at Secure Sites with Internal Report Mailing</TITLE><PARA>If your site is under security restrictions, use the following procedures to set up and use <COMMAND>availmon</COMMAND>. The setup procedure is similar to that found in <XREF LINKEND="LE29106-TITLE">,, except that the addresses outside your site should be deleted.</PARA><PARA>After your system administrators receive <COMMAND>availmon</COMMAND> reports, they can check the latest diagnosis report, <FILENAME>/var/adm/crash/diagreport</FILENAME>, on the system just rebooted, delete sensitive data, and use <COMMAND>amsend</COMMAND> to mail the filtered report to <LITERAL>availmon@csd.sgi.com</LITERAL> and to any SGI support address they require. If the diagnosis report contains any <COMMAND>icrash</COMMAND>, <COMMAND>syslog</COMMAND>, <COMMAND>hinv</COMMAND>, <COMMAND>versions</COMMAND>, or <COMMAND>gfxinfo</COMMAND> data, use the following command to mail the report.</PARA>
<LITERALLAYOUT>
<USERINPUT>amsend -i -z -x availmon@csd.sgi.com</USERINPUT> ...
</LITERALLAYOUT>
<PARA>If there is no such data in the report, use the command:</PARA>
<LITERALLAYOUT>
<USERINPUT>amsend -d -z -x availmon@csd.sgi.com</USERINPUT> ...
</LITERALLAYOUT>
<PARA>If encrypted data in e-mail is prohibited by law at your site, remove <LITERAL>-x</LITERAL> from the command line.</PARA>
</SECTION>
<SECTION><TITLE>Using availmon at Secure Sites without Report Mailing</TITLE><PARA>If outside report mailing is not possible at your site, no special actions need to be taken to use <COMMAND>availmon</COMMAND>. However, for those platforms not using IP19, IP21, IP22, and IP25 processors, run <COMMAND>amregister</COMMAND> and then turn off <LITERAL>autoemail</LITERAL> so that reports generated on these systems are not sent automatically. The <LITERAL>shutdownreason</LITERAL> and <LITERAL>tickerd</LITERAL> options can also be turned on or off as you choose.</PARA>
<PARA>Because no external report is mailed after the system reboots, system administrators need to check whether the system has been down, and then check the report files to determine the reason. If the system crashes more than once before checking, old reports are overwritten by the new ones (core dumps and <COMMAND>icrash</COMMAND> reports are kept until removed explicitly). Therefore, internal report mailing is recommended for secure sites. </PARA>
<PARA>Diagnosis reports can be sent to SGI using <COMMAND>amsend</COMMAND>. See the section titled <XREF LINKEND="LE51546-TITLE">. Another method is to run <COMMAND>amconfig</COMMAND> to configure standard e-mail lists so that when reports need to be sent, <COMMAND>amnotify</COMMAND> can be used to send reports according to those lists.</PARA>
</SECTION>
</SECTION>
<SECTION><TITLE>About availmon Reports</TITLE><PARA>There are two types of reports produced by <COMMAND>availmon</COMMAND>: availability and diagnosis.</PARA>
<PARA>Availability reports consist of system start time, stop time, stop reason, uptime, restart time, and a summary of the likely reason for any system crash (where relevant). A standard availability report is shown here:</PARA>
<PROGRAMLISTING>
------------------------------ whizkid ----------------------------
Report Version ......... 0.1
Internet Address ....... whizkid
Reason for Shutdown .... Hang
Started at ............. Mon Oct  3 16:56:08 1994
Stopped at ............. Unknown instant
Uptime ................. 4304 minutes (2 days 23 hrs 44 mins)
-------------------------------------------------------------------
Press &lt;enter&gt; to display summary ...
</PROGRAMLISTING>
<PARA>When you press <USERINPUT>Enter</USERINPUT>, you see information similar to the following:</PARA>
<PROGRAMLISTING>
======================= SUMMARY for whizkid ==========================
Controlled Shutdowns ... 0
Hangs .................. 1
Panics ................. 0
Average Uptime ......... 2189 minutes (1 day 12 hrs 29 mins)
Least Uptime ........... 74 minutes (1 hr 14 mins) (*)
Most Uptime ............ 4304 minutes (2 days 23 hrs 44 mins) 
Availability ........... 0.7870%
Logging started at ..... Mon Oct  3 16:56:08 1994
System has been up for . 74 minutes (1 hr 14 mins)
Last boot at ........... Tue Oct 24 23:03:44 1995
======================================================================
</PROGRAMLISTING>
<PARA>Diagnosis reports contain the same information as availability reports. They also contain an <COMMAND>icrash</COMMAND> analysis report (including the FRU analyzer result), important <COMMAND>syslog</COMMAND> messages, and system hardware/software configuration and version information.</PARA>
<PARA>Availability information is permanently stored in <FILENAME>/var/adm/avail/availlog</FILENAME>. Files in <FILENAME>/var/adm/avail</FILENAME> are maintained by <COMMAND>availmon</COMMAND> and should not be deleted, modified, or moved. The most recent availability and diagnostic reports are stored in <FILENAME>/var/adm/crash/availreport</FILENAME> and <FILENAME>/var/adm/crash/diagreport</FILENAME>, and should be treated comparably to core dumps.</PARA>
<SECTION><TITLE>Mailing availmon Reports with amsend</TITLE><PARA>There are two ways to configure the sending of <COMMAND>availmon</COMMAND> reports: automatic or manual.</PARA>
<PARA>If you select automatic mailing, you can configure any number of recipients for each type of report. The recommended configuration is to send diagnosis reports to the SGI availmon database and to SGI support representative, and to send availability reports to your local system administration team. You can also send copies of all reports to a local log account. </PARA>
<PARA>If you select manual mailing, the two types of reports are created in the directory <FILENAME>/var/adm/crash</FILENAME>. You can then edit or filter the reports, and use the <COMMAND>amsend</COMMAND> command to send the approved reports.</PARA>
<PARA>The <COMMAND>availmon</COMMAND> software can be configured to compress and encode data. The receiving agent (using the <COMMAND>amreceive</COMMAND> command) decodes, uncompresses, and stores the data in a database at SGI. Data encryption is recommended if it is not prohibited at your site.</PARA>
</SECTION>
<SECTION><TITLE>Viewing availmon Reports with amreport</TITLE><PARA>The <COMMAND>amreport(1M)</COMMAND> utility is provided to review <COMMAND>availmon</COMMAND> reports and to provide statistical availability information. This program can process local availability log files or received aggregate availability reports (such as a site log file) from different systems.</PARA>
<PARA>The <COMMAND>amreport</COMMAND> utility shows the statistical reports and availability reports hierarchically from overall statistics for all systems, a table of statistics for all systems (however, if the input is a local log file, information for all systems is not provided), statistics for each system, a table of all reboot instances for each system, and availability reports for each system. See the <COMMAND>amreport(1M)</COMMAND> man page for full information on this utility.</PARA>
</SECTION>
</SECTION>
</SECTION>
</CHAPTER>

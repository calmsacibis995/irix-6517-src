%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (typical.hwgraph.ai)
%%CreationDate: (3/18/99) (11:45 AM)
%%BoundingBox: 147 158 446 625
%%HiResBoundingBox: 147.9135 158.7583 445.1809 624.8247
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_IllustratorA_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%%DocumentCustomColors: (blue)
%%+ (dark blue)
%%+ (dark green)
%%+ (dark red)
%%+ (green)
%%+ (purple)
%%+ (red)
%%+ (yellow)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0.5 0.75 1 0.35 (brown)
%%+ 0.05 0.65 0.8 0 (copper)
%%+ 0 0 0 1 (custom black)
%%+ 1 0.5 0 0.35 (dark blue)
%%+ 0.25 0.55 1 0.4 (dark gold)
%%+ 1 0 0.8 0.25 (dark green)
%%+ 0 1 0.85 0.35 (dark red)
%%+ 0.25 0.25 0.5 0.25 (equipment grey)
%%+ 0.15 0.55 1 0 (gold)
%%+ 0.8 0 1 0 (green)
%%+ 0 0.6 1 0 (orange)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%%+ 0 0.15 1 0 (yellow)
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 0 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -294 972 1 1157 925 18 0 1 108 84
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.0 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.0 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.1 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 13 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentscreen pop pop
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.3 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 68 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
	Adobe_blend_AI5_vars begin
	/invertXfer
	{
		[
		{
			1 exch sub
		} /exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	} bd
} bd
/terminate
{
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
		currentdict Adobe_blend_AI5 eq
		{
		 end
		} if
	} if
} bd
/nullString () def
/zeroStringAry 256 string def
/dpiThreshold 600 def
/tRectOK? deviceDPI dpiThreshold le currentscreen pop pop 150 le and def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 75 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
%/white? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where {pop lv1Fix} {false} ifelse def
[
/tint1Data
/tint2Data
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/ccAry1 5 array def
/setCustomColor
{
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/blendImg
{
	setImgSpace cData systemdict /image get
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		cyData mgData yeData cData
		mCMYKData
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
	} bd
} if
/colorimage where dup
{
	exch pop
	/doCImg /colorimage load def
	/mCMYKData
	{
		4
		{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
			4 1 roll
		} repeat
	} bd
} if
not
{
	/mCMYKData nullProc def
	/doCImg
	{
		pop pop
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
		systemdict /image get exec
		sSave restore
	} bd
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		cyData mgData yeData cData
		setSSave
		mCMYKData
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		blendImg
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		currentcmykcolor
		4
		{
			makeByte 8 string copy 4 1 roll
		} repeat
		true 4
		{
			doCImg
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			/setcmykcolor cvx
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg {{_fill}}
			{{_of true eq {currentgray 1 ne {bwFill} if} {bwFill} ifelse}} ifelse def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq	
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					blendImg
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/d255- 256 array def
	0 1 255
	{
		d255- exch 1 d255 2 index get sub put
	} bind for
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		systemdict /setgray get
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
		
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
		
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					systemdict /setgray get exec
					systemdict /fill get exec
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
%
%
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq {/blend? false store} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
%
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt {/blend? false def} if
		blend?
		
%
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/getRData
{
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			7
		} ifelse
	} ifelse
	index 100 div /endPoint xs
	/colorType gMark store
	/color? colorType 0 gt store
	colorType dup 3 eq
	{
		/tint2Data gMark store
	} if
	dup 1 gt
	{
		/tint1Data gMark store
	} if
	/cData gMark store
	setCDataLen
	0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		clip
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/blendImg
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq {0} {bDataLen ubAxis div} ifelse store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where
	{
		pop 0 0 bInc 1 /rectfill cvx
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		systemdict /fill get
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt {exch} if pop store
		
		/pChange ubAxis 0 eq {0} {bDataLen ubAxis div} ifelse store
		pChange .5 gt dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx systemdict /fill get
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
	 end
	} if
} bd
/Bn
{
	1 add dict
	dup nullString null put
	/_bn xs
} bd
/Bd
{
	Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
		/_fill {_of true eq {currentgray 1 ne {__fill} if} {__fill} ifelse} def
	} ifelse
	/fill
	{
	} def
} bd
/BB
{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Abbreviated Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
4 Bn
%AI5_BeginGradient: (radial blue)
(radial blue) 1 4 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
0
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
2 %_Br
1
<
000101020203030404050506060707080809090A0A0B0B0C0C0D0D0E0E0F0F101011111212131314
14151516161717181819191A1A1B1B1C1C1D1D1E1E1F1F2020212122222323242425252626272728
2829292A2A2B2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C
3C3D3D3E3E3F3F40404141424243434444454546464747484849494A4A4B4B4C4C4D4D4E4E4F4F50
505151525253535454555556565757585859595A5A5B5B5C5C5D5D5E5E5F5F606061616262636364
64656566666767686869696A6A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778
7879797A7A7B7B7C7C7D7D7E7E7F7F80
>
0
<
000001010102020203030404040505050606060707070808080909090A0A0B0B0B0C0C0C0D0D0D0E
0E0E0F0F0F101010111112121213131314141415151516161617171718181919191A1A1A1B1B1B1C
1C1C1D1D1D1E1E1E1F1F20202021212122222223232324242425252526262727272828282929292A
2A2A2B2B2B2C2C2C2D2D2E2E2E2F2F2F303030313131323232333333343435353536363637373738
38383939393A3A3A3B3B3C3C3C3D3D3D3E3E3E3F3F3F404040414141424243434344444445454546
464647474748484849494A4A4A4B4B4B4C4C4C4D4D4D4E4E4E4F4F4F505051515152525253535354
54545555555656565757585858595959
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
3 %_Br
1
<
807F7F7E7E7D7D7C7C7B7B7A7A79797878777776767575747473737272717170706F6F6E6E6D6D6C
6C6B6B6A6A69696868676766666565646463636262616160605F5F5E5E5D5D5C5C5B5B5A5A595958
58575756565555545453535252515150504F4F4E4E4D4D4C4C4B4B4A4A4949484847474646454544
44434342424141403F3F3E3E3D3D3C3C3B3B3A3A3939383837373636353534343333323231313030
2F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222212120201F1F1E1E1D1D1C1C
1B1B1A1A19191818171716161515141413131212111110100F0F0E0E0D0D0C0C0B0B0A0A09090808
07070606050504040303020201010000
>
0
<
595959585858575756565655555554545453535352525251515150504F4F4F4E4E4E4D4D4D4C4C4C
4B4B4B4A4A4A494948484847474746464645454544444443434342424141414040403F3F3F3E3E3E
3D3D3D3C3C3C3B3B3A3A3A3939393838383737373636363535353434333333323232313131303030
2F2F2F2E2E2E2D2D2C2C2C2B2B2B2A2A2A2929292828282727272626252525242424232323222222
2121212020201F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A1919191818171717161616151515141414
13131312121211111010100F0F0F0E0E0E0D0D0D0C0C0C0B0B0B0A0A090909080808070707060606
05050504040403030202020101010000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
3 %_Br
[
1 0 50 0 %_Bs
1 0 0 0 (blue) 0 3 50 49 %_Bs
1 0.5 0 0.35 (dark blue) 0 3 50 72 %_Bs
1 0 0 0 (blue) 0 3 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (radial green)
(radial green) 1 4 Bd
[
<
0001020203040506060708090A0A0B0C0D0E0E0F1011121213141516161718191A1A1B1C1D1E1E1F
2021222223242526262728292A2A2B2C2D2E2E2F3031323233343536363738393A3A3B3C3D3E3E3F
4041424243444546464748494A4A4B4C4D4E4E4F5051525253545556565758595A5A5B5C5D5E5E5F
6061626263646566666768696A6A6B6C6D6E6E6F7071727273747576767778797A7A7B7C7D7E7E7F
8081828283848586868788898A8A8B8C8D8E8E8F9091929293949596969798999A9A9B9C9D9E9E9F
A0A1A2A2A3A4A5A6A6A7A8A9AAAAABACADAEAEAFB0B1B2B2B3B4B5B6B6B7B8B9BABABBBCBDBEBEBF
C0C1C2C2C3C4C5C6C6C7C8C9CACACBCC
>
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
2 %_Br
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4
D4D4D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDC
DCDCDCDDDDDDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4
E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECEC
ECECECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4
F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFC
FCFCFCFDFDFDFDFDFEFEFEFEFEFFFFFF
>
0
<
FFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F8F8F8F8F8F7F7
F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEF
EFEFEFEEEEEEEEEEEDEDEDEDEDECECECECECEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7
E7E7E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E3E3E3E3E3E2E2E2E2E2E1E1E1E1E1E0E0E0E0E0DFDF
DFDFDFDEDEDEDEDEDDDDDDDDDDDCDCDCDCDCDBDBDBDBDBDADADADADAD9D9D9D9D9D8D8D8D8D8D7D7
D7D7D7D6D6D6D6D6D5D5D5D5D5D4D4D4D4D4D3D3D3D3D3D2D2D2D2D2D1D1D1D1D1D0D0D0D0D0CFCF
CFCFCFCECECECECECDCDCDCDCDCCCCCC
>
<
00000101010102020202030303030404040405050505060606060707070708080808090909090A0A
0A0A0B0B0B0B0C0C0C0C0D0D0D0D0E0E0E0E0F0F0F0F101010101111111112121212131313131414
141415151515161616161717171718181818191919191A1A1A1A1B1B1B1B1C1C1C1C1D1D1D1D1E1E
1E1E1F1F1F1F20202020212121212222222223232323242424242525252526262626272727272828
2828292929292A2A2A2A2B2B2B2B2C2C2C2C2D2D2D2D2E2E2E2E2F2F2F2F30303030313131313232
3232333333333434343435353535363636363737373738383838393939393A3A3A3A3B3B3B3B3C3C
3C3C3D3D3D3D3E3E3E3E3F3F3F3F4040
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
3 %_Br
<
FFFFFFFEFEFEFEFEFDFDFDFDFDFCFCFCFCFCFBFBFBFBFBFAFAFAFAFAF9F9F9F9F9F8F8F8F8F8F7F7
F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEF
EFEFEFEEEEEEEEEEEDEDEDEDEDECECECECECEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7
E7E7E7E6E6E6E6E6E5E5E5E5E5E4E4E4E4E4E3E3E3E3E3E2E2E2E2E2E1E1E1E1E1E0E0E0E0E0DFDF
DFDFDFDEDEDEDEDEDDDDDDDDDDDCDCDCDCDCDBDBDBDBDBDADADADADAD9D9D9D9D9D8D8D8D8D8D7D7
D7D7D7D6D6D6D6D6D5D5D5D5D5D4D4D4D4D4D3D3D3D3D3D2D2D2D2D2D1D1D1D1D1D0D0D0D0D0CFCF
CFCFCFCECECECECECDCDCDCDCDCCCCCC
>
0
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4
D4D4D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9D9DADADADADADBDBDBDBDBDCDC
DCDCDCDDDDDDDDDDDEDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E3E4E4
E4E4E4E5E5E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECEC
ECECECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4
F4F4F4F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFC
FCFCFCFDFDFDFDFDFEFEFEFEFEFFFFFF
>
<
40403F3F3F3F3E3E3E3E3D3D3D3D3C3C3C3C3B3B3B3B3A3A3A3A3939393938383838373737373636
36363535353534343434333333333232323231313131303030302F2F2F2F2E2E2E2E2D2D2D2D2C2C
2C2C2B2B2B2B2A2A2A2A292929292828282827272727262626262525252524242424232323232222
2222212121212020201F1F1F1F1E1E1E1E1D1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A19191919181818
1817171717161616161515151514141414131313131212121211111111101010100F0F0F0F0E0E0E
0E0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A0909090908080808070707070606060605050505040404
04030303030202020201010101000000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
3 %_Br
[
1 0 50 0 %_Bs
0.8 0 1 0 (green) 0 3 50 49 %_Bs
1 0 0.8 0.25 (dark green) 0 3 50 75 %_Bs
0.8 0 1 0 (green) 0 3 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (radial purple)
(radial purple) 1 4 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
>
0
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140
>
2 %_Br
<
BFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7
E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
BFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7
E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
0
<
403F3E3D3C3B3A393837363534333231302F2E2D2C2B292827262524232221201F1E1D1C1B1A1918
17161514131211100F0E0D0C0B0A09080706050403020100
>
2 %_Br
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
>
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292B2C2D2E2F303132333435363738393A3B3C3D3E3F40
>
2 %_Br
[
1 0 50 0 %_Bs
1 1 0 0 (purple) 0.25 3 50 48 %_Bs
1 1 0 0 (purple) 0 3 50 71 %_Bs
1 1 0 0 (purple) 0.25 3 50 98 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (radial red)
(radial red) 1 4 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
0001020303040506070809090A0B0C0D0E0E0F10111213141415161718191A1A1B1C1D1E1F1F2021
2223242525262728292A2B2B2C2D2E2F3030313233343536363738393A3B3C3C3D3E3F4041414243
444546474748494A4B4C4D4D4E4F5051525253545556575858595A5B5C5D5E5E5F60616263636465
66676869696A6B6C6D6E6F6F70717273747475767778797A7A7B7C7D7E7F80808182838485858687
88898A8B8B8C8D8E8F9091919293949596969798999A9B9C9C9D9E9FA0A1A2A2A3A4A5A6A7A7A8A9
AAABACADADAEAFB0B1B2B3B3B4B5B6B7B8B8B9BABBBCBDBEBEBFC0C1C2C3C4C4C5C6C7C8C9C9CACB
CCCDCECFCFD0D1D2D3D4D5D5D6D7D8D9
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
2 %_Br
0
1
0.85
<
000001010102020203030404040505050606060707070808080909090A0A0B0B0B0C0C0C0D0D0D0E
0E0E0F0F0F101010111112121213131314141415151516161617171718181919191A1A1A1B1B1B1C
1C1C1D1D1D1E1E1E1F1F20202021212122222223232324242425252526262727272828282929292A
2A2A2B2B2B2C2C2C2D2D2E2E2E2F2F2F303030313131323232333333343435353536363637373738
38383939393A3A3A3B3B3C3C3C3D3D3D3E3E3E3F3F3F404040414141424243434344444445454546
464647474748484849494A4A4A4B4B4B4C4C4C4D4D4D4E4E4E4F4F4F505051515152525253535354
54545555555656565757585858595959
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
3 %_Br
0
1
0.85
<
595959585858575756565655555554545453535352525251515150504F4F4F4E4E4E4D4D4D4C4C4C
4B4B4B4A4A4A494948484847474746464645454544444443434342424141414040403F3F3F3E3E3E
3D3D3D3C3C3C3B3B3A3A3A3939393838383737373636363535353434333333323232313131303030
2F2F2F2E2E2E2D2D2C2C2C2B2B2B2A2A2A2929292828282727272626252525242424232323222222
2121212020201F1F1E1E1E1D1D1D1C1C1C1B1B1B1A1A1A1919191818171717161616151515141414
13131312121211111010100F0F0F0E0E0E0D0D0D0C0C0C0B0B0B0A0A090909080808070707060606
05050504040403030202020101010000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
3 %_Br
[
1 0 50 0 %_Bs
0 1 0.85 0 (red) 0 3 50 49 %_Bs
0 1 0.85 0.35 (dark red) 0 3 50 72 %_Bs
0 1 0.85 0 (red) 0 3 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
2 Bn
%AI5_BeginGradient: (linear black/white)
(linear black/white) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (linear red/yellow)
(linear red/yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 4 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0 0 0 1 (custom black) 0.75 x
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (linear black/white) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (linear red/yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
0 g
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
u
0 O
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
207.9582 415.9418 m
202.825 415.9418 198.6635 420.1032 198.6635 425.2364 c
198.6635 430.3695 202.825 434.531 207.9582 434.531 c
213.0913 434.531 217.2528 430.3695 217.2528 425.2364 c
217.2528 420.1032 213.0913 415.9418 207.9582 415.9418 c
Bb
-2.6638 3.5859 126.6071 0.4806 Bh
1 (radial purple) 183.7191 495.4552 0 8.3242 1.1166 0 0 1.1166 -465.119 -421.8003 Bg
9.2946 0 0 -9.2946 207.9582 425.2364 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
415.3474 483.6788 m
415.3474 479.9457 l
409.6236 482.8041 l
415.3474 491.1451 l
415.3474 487.412 L
441.4614 500.6364 L
441.4082 618.7853 L
229.6717 512.7724 L
229.664 360.3051 L
185.9635 338.501 L
189.4756 344.1871 L
226.1681 362.4601 L
226.1551 514.9517 L
444.9064 624.4201 L
444.9309 498.4572 L
415.3474 483.6788 L
b
U
u
387.0693 440.5045 m
384.0162 442.5703 L
400.761 477.8594 L
397.7079 479.9252 L
380.963 444.6362 l
377.9098 446.7021 l
378.6644 435.3833 l
387.0693 440.5045 l
b
U
u
u
1 w
428.1357 446.4792 m
423.0024 446.4792 418.841 450.6406 418.841 455.7738 c
418.841 460.907 423.0024 465.0685 428.1357 465.0685 c
433.2688 465.0685 437.4303 460.907 437.4303 455.7738 c
437.4303 450.6406 433.2688 446.4792 428.1357 446.4792 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial green) 294 484 -44.9982 10.9601 1 0 0 1 134.9275 27.9626 Bg
7.7502 -7.7498 -7.7498 -7.7502 428.9275 456.0374 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
420.3845 471.798 m
418.6504 468.2958 L
402.3335 487.2095 L
400.5994 483.7073 L
416.9162 464.7936 l
415.1821 461.2914 l
423.4394 458.9386 l
420.3845 471.798 l
b
U
1 g
444.0045 474.2598 m
444.0045 483.4964 L
422.3938 483.4964 L
415.425 472.119 L
422.3938 474.2598 L
444.0045 474.2598 L
b
0 To
1 0 0 1 423.1595 476.1658 0 Tp
TP
0 Tr
0 g
1 w
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(block) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
414.6287 445.69 m
414.6287 454.9266 L
396.0351 454.9266 L
390.9088 456.6025 L
396.0351 445.69 L
414.6287 445.69 L
b
0 To
1 0 0 1 396.9258 447.5959 0 Tp
TP
0 Tr
0 g
1 w
(char) Tx 
(\r) TX 
TO
u
u
401.9772 474.7933 m
396.844 474.7933 392.6825 478.9546 392.6825 484.0879 c
392.6825 489.221 396.844 493.3825 401.9772 493.3825 c
407.1103 493.3825 411.2718 489.221 411.2718 484.0879 c
411.2718 478.9546 407.1103 474.7933 401.9772 474.7933 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial green) 294 484 -44.9982 10.9601 1 0 0 1 108.769 -0.3515 Bg
7.7502 -7.7498 -7.7498 -7.7502 402.769 484.3515 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
405.8691 501.2768 m
402.3732 499.53 L
402.4278 525.4972 L
398.9319 523.7504 L
398.9037 497.7832 l
395.3814 496.0364 l
400.5471 489.1783 l
405.8691 501.2768 l
b
U
u
387.0693 488.0433 m
384.0162 490.1091 L
400.761 525.3982 L
397.7079 527.4641 L
380.963 492.175 l
377.9098 494.2409 l
378.6644 482.9221 l
387.0693 488.0433 l
b
U
u
u
1 w
427.9596 493.8696 m
422.8264 493.8696 418.6649 498.031 418.6649 503.1642 c
418.6649 508.2973 422.8264 512.4588 427.9596 512.4588 c
433.0927 512.4588 437.2542 508.2973 437.2542 503.1642 c
437.2542 498.031 433.0927 493.8696 427.9596 493.8696 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial green) 294 484 -44.9982 10.9601 1 0 0 1 134.7514 -19.4278 Bg
7.7502 -7.7498 -7.7498 -7.7502 428.7514 503.4278 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
420.3845 519.3368 m
418.6504 515.8347 L
402.3335 534.7483 L
400.5994 531.2461 L
416.9162 512.3325 l
415.1821 508.8303 l
423.4394 506.4774 l
420.3845 519.3368 l
b
U
1 g
436.6809 503.9847 m
436.6809 513.2212 L
408.3959 513.2212 L
403.7733 508.603 L
408.3959 503.9847 L
436.6809 503.9847 L
b
0 To
1 0 0 1 408.5366 505.8906 0 Tp
TP
0 Tr
0 g
1 w
(volume) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
425.4098 555.5966 m
425.4098 564.8332 L
408.3959 564.8332 L
403.7733 560.2149 L
408.3959 555.5966 L
425.4098 555.5966 L
b
0 To
1 0 0 1 409.0366 557.5025 0 Tp
TP
0 Tr
0 g
1 w
(disk) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
280 571.4249 m
280 580.6615 L
320.3861 580.6615 L
332.489 568.2828 L
320.3861 571.4249 L
280 571.4249 L
b
0 To
1 0 0 1 281.1144 573.3309 0 Tp
TP
0 Tr
0 g
1 w
(dksOdOvol) Tx 
(\r) TX 
TO
u
u
401.2082 522.1246 m
396.075 522.1246 391.9135 526.286 391.9135 531.4192 c
391.9135 536.5523 396.075 540.7138 401.2082 540.7138 c
406.3413 540.7138 410.5028 536.5523 410.5028 531.4192 c
410.5028 526.286 406.3413 522.1246 401.2082 522.1246 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial green) 294 484 -44.9982 10.9601 1 0 0 1 108 -47.6828 Bg
7.7502 -7.7498 -7.7498 -7.7502 402 531.6828 Bm
f
0 BB
U
U
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
402.4252 547.5058 m
402.4798 579.6344 L
344.9149 550.8979 L
344.9279 244.7477 L
294.0959 219.2595 L
294.1079 245.243 L
290.612 244.1944 L
290.5838 213.5734 L
348.4238 242.5926 L
348.4315 548.7187 L
398.9816 573.9996 L
398.9557 545.759 L
395.4334 544.0122 L
400.599 537.154 L
405.9211 549.2526 L
402.4252 547.5058 L
b
u
u
1 w
293.5 239 m
288.3668 239 284.2053 243.1614 284.2053 248.2946 c
284.2053 253.4277 288.3668 257.5892 293.5 257.5892 c
298.6331 257.5892 302.7946 253.4277 302.7946 248.2946 c
302.7946 243.1614 298.6331 239 293.5 239 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 0.2918 235.4418 Bg
7.7502 -7.7498 -7.7498 -7.7502 294.2918 248.5582 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
298.5078 267.1824 m
295.0119 265.4356 L
295.0665 291.4028 L
291.5706 289.656 L
291.5424 263.6888 l
288.0201 261.942 l
293.1858 255.0838 l
298.5078 267.1824 l
b
U
u
279.708 253.9488 m
276.6549 256.0147 L
293.3997 291.3037 L
290.3466 293.3696 L
273.6017 258.0805 l
270.5485 260.1464 l
271.3031 248.8276 l
279.708 253.9488 l
b
U
u
u
1 w
320.1357 258.9792 m
315.0024 258.9792 310.841 263.1406 310.841 268.2738 c
310.841 273.407 315.0024 277.5685 320.1357 277.5685 c
325.2688 277.5685 329.4303 273.407 329.4303 268.2738 c
329.4303 263.1406 325.2688 258.9792 320.1357 258.9792 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 26.9275 215.4626 Bg
7.7502 -7.7498 -7.7498 -7.7502 320.9275 268.5374 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
313.0232 285 m
311.2891 281.4978 L
294.9722 300.4114 L
293.2381 296.9093 L
309.5549 277.9956 l
307.8208 274.4934 l
316.0781 272.1405 l
313.0232 285 l
b
U
u
u
1 w
293.9772 287.2933 m
288.844 287.2933 284.6825 291.4546 284.6825 296.5879 c
284.6825 301.721 288.844 305.8825 293.9772 305.8825 c
299.1103 305.8825 303.2718 301.721 303.2718 296.5879 c
303.2718 291.4546 299.1103 287.2933 293.9772 287.2933 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 0.769 187.1485 Bg
7.7502 -7.7498 -7.7498 -7.7502 294.769 296.8515 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
298.5078 314.7782 m
295.0119 313.0314 L
295.0665 338.9986 L
291.5706 337.2518 L
291.5424 311.2846 l
288.0201 309.5378 l
293.1858 302.6797 l
298.5078 314.7782 l
b
U
1 g
314.9635 320.4548 m
314.9635 329.6914 L
301.0346 329.6914 L
296.412 325.0731 L
301.0346 320.4548 L
314.9635 320.4548 L
b
0 To
1 0 0 1 301.8003 322.3607 0 Tp
TP
0 Tr
0 g
1 w
(lun) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
308.1761 269.8902 m
308.1761 279.1268 L
301.0346 279.1268 L
296.412 274.5085 L
301.0346 269.8902 L
308.1761 269.8902 L
b
0 To
1 0 0 1 300.9792 271.7962 0 Tp
TP
0 Tr
0 g
1 w
(O) Tx 
(\r) TX 
TO
u
u
293.5 331.5 m
288.3668 331.5 284.2053 335.6614 284.2053 340.7946 c
284.2053 345.9277 288.3668 350.0892 293.5 350.0892 c
298.6331 350.0892 302.7946 345.9277 302.7946 340.7946 c
302.7946 335.6614 298.6331 331.5 293.5 331.5 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 0.2918 142.9418 Bg
7.7502 -7.7498 -7.7498 -7.7502 294.2918 341.0582 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
298.5078 359.6804 m
295.0119 357.9336 L
295.0665 383.9008 L
291.5706 382.154 L
291.5424 356.1868 l
288.0201 354.44 l
293.1858 347.5819 l
298.5078 359.6804 l
b
U
u
279.708 346.4468 m
276.6549 348.5127 L
293.3997 383.8018 L
290.3466 385.8676 L
273.6017 350.5785 l
270.5485 352.6445 l
271.3031 341.3256 l
279.708 346.4468 l
b
U
u
u
1 w
320.1357 351.4792 m
315.0024 351.4792 310.841 355.6406 310.841 360.7738 c
310.841 365.907 315.0024 370.0685 320.1357 370.0685 c
325.2688 370.0685 329.4303 365.907 329.4303 360.7738 c
329.4303 355.6406 325.2688 351.4792 320.1357 351.4792 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 26.9275 122.9626 Bg
7.7502 -7.7498 -7.7498 -7.7502 320.9275 361.0374 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
313.0232 377.7404 m
311.2891 374.2382 L
294.9722 393.1519 L
293.2381 389.6497 L
309.5549 370.736 l
307.8208 367.2338 l
316.0781 364.8809 l
313.0232 377.7404 l
b
U
1 g
308.1761 362.3883 m
308.1761 371.6248 L
301.0346 371.6248 L
296.412 367.0065 L
301.0346 362.3883 L
308.1761 362.3883 L
b
0 To
1 0 0 1 301.4253 364.2942 0 Tp
TP
0 Tr
0 g
1 w
(1) Tx 
(\r) TX 
TO
u
u
293.9772 379.7933 m
288.844 379.7933 284.6825 383.9546 284.6825 389.0879 c
284.6825 394.221 288.844 398.3825 293.9772 398.3825 c
299.1103 398.3825 303.2718 394.221 303.2718 389.0879 c
303.2718 383.9546 299.1103 379.7933 293.9772 379.7933 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 0.769 94.6485 Bg
7.7502 -7.7498 -7.7498 -7.7502 294.769 389.3515 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
298.5078 407.2192 m
295.0119 405.4724 L
295.0665 431.4396 L
291.5706 429.6928 L
291.5424 403.7256 l
288.0201 401.9788 l
293.1858 395.1207 l
298.5078 407.2192 l
b
U
u
279.708 393.9857 m
276.6549 396.0515 L
293.3997 431.3406 L
290.3466 433.4064 L
273.6017 398.1174 l
270.5485 400.1833 l
271.3031 388.8645 l
279.708 393.9857 l
b
U
u
u
1 w
319.9596 398.8696 m
314.8264 398.8696 310.6649 403.031 310.6649 408.1642 c
310.6649 413.2973 314.8264 417.4588 319.9596 417.4588 c
325.0927 417.4588 329.2542 413.2973 329.2542 408.1642 c
329.2542 403.031 325.0927 398.8696 319.9596 398.8696 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 26.7514 75.5722 Bg
7.7502 -7.7498 -7.7498 -7.7502 320.7514 408.4278 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
313.0232 425.2792 m
311.2891 421.777 L
294.9722 440.6907 L
293.2381 437.1885 L
309.5549 418.2749 l
307.8208 414.7727 l
316.0781 412.4198 l
313.0232 425.2792 l
b
U
u
u
1 w
293.2082 427.1246 m
288.075 427.1246 283.9135 431.286 283.9135 436.4192 c
283.9135 441.5523 288.075 445.7138 293.2082 445.7138 c
298.3413 445.7138 302.5028 441.5523 302.5028 436.4192 c
302.5028 431.286 298.3413 427.1246 293.2082 427.1246 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 0 47.3172 Bg
7.7502 -7.7498 -7.7498 -7.7502 294 436.6828 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
298.5078 454.815 m
295.0119 453.0682 L
295.0665 479.0354 L
291.5706 477.2886 L
291.5424 451.3215 l
288.0201 449.5747 l
293.1858 442.7165 l
298.5078 454.815 l
b
U
u
u
1 w
293.2082 474.4418 m
288.075 474.4418 283.9135 478.6032 283.9135 483.7364 c
283.9135 488.8695 288.075 493.031 293.2082 493.031 c
298.3413 493.031 302.5028 488.8695 302.5028 483.7364 c
302.5028 478.6032 298.3413 474.4418 293.2082 474.4418 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 0 0 Bg
7.7502 -7.7498 -7.7498 -7.7502 294 484 Bm
f
0 BB
U
U
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
295.0119 500.6641 m
295.0666 525.9216 L
237.5017 497.1851 L
237.5146 190.2275 L
186.7393 164.796 L
186.6946 190.7228 L
183.1988 189.6743 L
183.2272 159.1627 L
241.0105 188.0725 L
241.0182 495.0058 L
291.5683 520.2867 L
291.5424 498.9173 L
288.0201 497.1705 L
293.1858 490.3123 L
298.5078 502.4109 L
295.0119 500.6641 L
b
1 g
332.3097 506.5564 m
332.3097 515.7929 L
301.0346 515.7929 L
296.412 511.1747 L
301.0346 506.5564 L
332.3097 506.5564 L
b
0 To
1 0 0 1 301.3003 508.4623 0 Tp
TP
0 Tr
0 g
1 w
(scsi_ctlr) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
307.7677 460.4916 m
307.7677 469.7282 L
301.0346 469.7282 L
296.412 465.1099 L
301.0346 460.4916 L
307.7677 460.4916 L
b
0 To
1 0 0 1 300.4555 462.3976 0 Tp
TP
0 Tr
0 g
1 w
(O) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
323.6338 409.9271 m
323.6338 419.1636 L
301.0346 419.1636 L
296.412 414.5454 L
301.0346 409.9271 L
323.6338 409.9271 L
b
0 To
1 0 0 1 301.3003 411.833 0 Tp
TP
0 Tr
0 g
1 w
(target) Tx 
(\r) TX 
TO
u
U
u
u
184.5 188 m
179.3668 188 175.2053 192.1614 175.2053 197.2946 c
175.2053 202.4277 179.3668 206.5892 184.5 206.5892 c
189.6331 206.5892 193.7946 202.4277 193.7946 197.2946 c
193.7946 192.1614 189.6331 188 184.5 188 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial blue) 294 484 -44.9982 10.9601 1 0 0 1 -108.7082 286.4418 Bg
7.7502 -7.7498 -7.7498 -7.7502 185.2918 197.5582 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
189.4958 214.6243 m
185.9999 212.8775 L
186.0546 238.8447 L
182.5587 237.0979 L
182.5304 211.1307 l
179.0081 209.3839 l
184.1738 202.5258 l
189.4958 214.6243 l
b
U
u
170.6961 201.3907 m
167.6429 203.4566 L
184.3878 238.7456 L
181.3346 240.8115 L
164.5897 205.5224 l
161.5365 207.5883 l
162.2912 196.2695 l
170.6961 201.3907 l
b
U
u
u
1 w
211.1357 207.9792 m
206.0024 207.9792 201.841 212.1406 201.841 217.2738 c
201.841 222.407 206.0024 226.5685 211.1357 226.5685 c
216.2688 226.5685 220.4303 222.407 220.4303 217.2738 c
220.4303 212.1406 216.2688 207.9792 211.1357 207.9792 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial blue) 294 484 -44.9982 10.9601 1 0 0 1 -82.0725 266.4626 Bg
7.7502 -7.7498 -7.7498 -7.7502 211.9275 217.5374 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
204.0113 232.6843 m
202.2771 229.1821 L
185.9603 248.0958 L
184.2261 244.5935 L
200.543 225.6799 l
198.8088 222.1777 l
207.0661 219.8248 l
204.0113 232.6843 l
b
U
u
u
1 w
184.9772 236.2933 m
179.844 236.2933 175.6825 240.4546 175.6825 245.5879 c
175.6825 250.721 179.844 254.8825 184.9772 254.8825 c
190.1103 254.8825 194.2718 250.721 194.2718 245.5879 c
194.2718 240.4546 190.1103 236.2933 184.9772 236.2933 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial blue) 294 484 -44.9982 10.9601 1 0 0 1 -108.231 238.1485 Bg
7.7502 -7.7498 -7.7498 -7.7502 185.769 245.8515 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
189.4958 262.2201 m
185.9999 260.4733 L
186.0546 286.4405 L
182.5587 284.6937 L
182.5304 258.7265 l
179.0081 256.9797 l
184.1738 250.1216 l
189.4958 262.2201 l
b
U
u
u
1 w
184.5 280.5 m
179.3668 280.5 175.2053 284.6614 175.2053 289.7946 c
175.2053 294.9277 179.3668 299.0892 184.5 299.0892 c
189.6331 299.0892 193.7946 294.9277 193.7946 289.7946 c
193.7946 284.6614 189.6331 280.5 184.5 280.5 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial blue) 294 484 -44.9982 10.9601 1 0 0 1 -108.7082 193.9418 Bg
7.7502 -7.7498 -7.7498 -7.7502 185.2918 290.0582 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
189.4958 309.8159 m
185.9999 308.0691 L
186.0546 334.0363 L
182.5587 332.2895 L
182.5304 306.3223 l
179.0081 304.5755 l
184.1738 297.7174 l
189.4958 309.8159 l
b
U
1 g
205.9516 313.9614 m
205.9516 323.198 L
192.0227 323.198 L
187.4 318.5797 L
192.0227 313.9614 L
205.9516 313.9614 L
b
0 To
1 0 0 1 192.2883 316.1791 0 Tp
TP
0 Tr
0 g
1 w
(pci) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
205.9516 267.8967 m
205.9516 277.1333 L
192.0227 277.1333 L
187.4 272.515 L
192.0227 267.8967 L
205.9516 267.8967 L
b
0 To
1 0 0 1 192.2883 269.8026 0 Tp
TP
0 Tr
0 g
1 w
(slot) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
218.6751 474.2293 m
218.6751 483.4659 L
191.9381 483.4659 L
187.3155 478.8476 L
191.9381 474.2293 L
218.6751 474.2293 L
b
u
u
1 w
183.9582 330.9418 m
178.825 330.9418 174.6635 335.1032 174.6635 340.2364 c
174.6635 345.3695 178.825 349.531 183.9582 349.531 c
189.0913 349.531 193.2528 345.3695 193.2528 340.2364 c
193.2528 335.1032 189.0913 330.9418 183.9582 330.9418 c
Bb
-2.6638 3.5859 126.6071 0.4806 Bh
1 (radial purple) 183.7191 495.4552 0 8.3242 1.1166 0 0 1.1166 -489.119 -336.8003 Bg
9.2946 0 0 -9.2946 183.9582 340.2364 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
189.4958 358.2276 m
185.9999 356.4808 L
186.0546 382.4479 L
182.5587 380.7011 L
182.5304 354.734 l
179.0081 352.9872 l
184.1738 346.129 l
189.4958 358.2276 l
b
U
u
168.867 409.8977 m
165.8138 411.9635 L
182.5587 447.2526 L
179.5055 449.3184 L
162.7606 414.0294 l
159.7074 416.0953 l
160.4621 404.7765 l
168.867 409.8977 l
b
U
u
u
1 w
183.9582 377.6918 m
178.825 377.6918 174.6635 381.8532 174.6635 386.9864 c
174.6635 392.1195 178.825 396.281 183.9582 396.281 c
189.0913 396.281 193.2528 392.1195 193.2528 386.9864 c
193.2528 381.8532 189.0913 377.6918 183.9582 377.6918 c
Bb
-2.6638 3.5859 126.6071 0.4806 Bh
1 (radial purple) 183.7191 495.4552 0 8.3242 1.1166 0 0 1.1166 -489.119 -383.5503 Bg
9.2946 0 0 -9.2946 183.9582 386.9864 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
189.4958 404.0667 m
185.9999 402.3199 L
186.0546 448.9994 L
182.5587 447.2526 L
182.5304 400.5731 l
179.0081 398.8264 l
184.1738 391.9682 l
189.4958 404.0667 l
b
U
u
202.1822 441.1912 m
200.4481 437.689 L
184.1312 456.6027 L
182.397 453.1005 L
198.7139 434.1868 l
196.9798 430.6847 l
205.2371 428.3318 l
202.1822 441.1912 l
b
U
u
u
1 w
184.7082 444.1918 m
179.575 444.1918 175.4135 448.3532 175.4135 453.4864 c
175.4135 458.6195 179.575 462.781 184.7082 462.781 c
189.8413 462.781 194.0028 458.6195 194.0028 453.4864 c
194.0028 448.3532 189.8413 444.1918 184.7082 444.1918 c
Bb
-2.6638 3.5859 126.6071 0.4806 Bh
1 (radial purple) 183.7191 495.4552 0 8.3242 1.1166 0 0 1.1166 -488.369 -450.0503 Bg
9.2946 0 0 -9.2946 184.7082 453.4864 Bm
f
0 BB
U
U
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
189.5505 471.1128 m
186.0546 469.366 L
186.0546 489.8934 L
182.5587 488.1466 L
182.5587 467.6192 l
179.0628 465.8724 l
184.2285 459.0143 l
189.5505 471.1128 l
b
U
u
u
1 w
184.7082 487.4418 m
179.575 487.4418 175.4135 491.6032 175.4135 496.7364 c
175.4135 501.8695 179.575 506.031 184.7082 506.031 c
189.8413 506.031 194.0028 501.8695 194.0028 496.7364 c
194.0028 491.6032 189.8413 487.4418 184.7082 487.4418 c
Bb
-2.6638 3.5859 126.6071 0.4806 Bh
1 (radial purple) 183.7191 495.4552 0 8.3242 1.1166 0 0 1.1166 -488.369 -493.3003 Bg
9.2946 0 0 -9.2946 184.7082 496.7364 Bm
f
0 BB
U
U
u
u
266.4772 373.2933 m
261.344 373.2933 257.1825 377.4546 257.1825 382.5879 c
257.1825 387.721 261.344 391.8825 266.4772 391.8825 c
271.6103 391.8825 275.7718 387.721 275.7718 382.5879 c
275.7718 377.4546 271.6103 373.2933 266.4772 373.2933 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 -26.731 101.1485 Bg
7.7502 -7.7498 -7.7498 -7.7502 267.269 382.8515 Bm
f
0 BB
U
U
u
u
267 325 m
261.8668 325 257.7053 329.1614 257.7053 334.2946 c
257.7053 339.4277 261.8668 343.5892 267 343.5892 c
272.1331 343.5892 276.2946 339.4277 276.2946 334.2946 c
276.2946 329.1614 272.1331 325 267 325 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 -26.2082 149.4418 Bg
7.7502 -7.7498 -7.7498 -7.7502 267.7918 334.5582 Bm
f
0 BB
U
U
u
u
374.4772 468.2933 m
369.344 468.2933 365.1825 472.4546 365.1825 477.5879 c
365.1825 482.721 369.344 486.8825 374.4772 486.8825 c
379.6103 486.8825 383.7718 482.721 383.7718 477.5879 c
383.7718 472.4546 379.6103 468.2933 374.4772 468.2933 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial green) 294 484 -44.9982 10.9601 1 0 0 1 81.269 6.1485 Bg
7.7502 -7.7498 -7.7498 -7.7502 375.269 477.8515 Bm
f
0 BB
U
U
u
u
375 420 m
369.8668 420 365.7053 424.1614 365.7053 429.2946 c
365.7053 434.4277 369.8668 438.5892 375 438.5892 c
380.1331 438.5892 384.2946 434.4277 384.2946 429.2946 c
384.2946 424.1614 380.1331 420 375 420 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial green) 294 484 -44.9982 10.9601 1 0 0 1 81.7918 54.4418 Bg
7.7502 -7.7498 -7.7498 -7.7502 375.7918 429.5582 Bm
f
0 BB
U
U
u
u
267 232.5 m
261.8668 232.5 257.7053 236.6614 257.7053 241.7946 c
257.7053 246.9277 261.8668 251.0892 267 251.0892 c
272.1331 251.0892 276.2946 246.9277 276.2946 241.7946 c
276.2946 236.6614 272.1331 232.5 267 232.5 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial red) 294 484 -44.9982 10.9601 1 0 0 1 -26.2082 241.9418 Bg
7.7502 -7.7498 -7.7498 -7.7502 267.7918 242.0582 Bm
f
0 BB
U
U
u
u
158 181.5 m
152.8668 181.5 148.7053 185.6614 148.7053 190.7946 c
148.7053 195.9277 152.8668 200.0892 158 200.0892 c
163.1331 200.0892 167.2946 195.9277 167.2946 190.7946 c
167.2946 185.6614 163.1331 181.5 158 181.5 c
Bb
-4.0487 3.0191 143.288 0.4608 Bh
1 (radial blue) 294 484 -44.9982 10.9601 1 0 0 1 -135.2082 292.9418 Bg
7.7502 -7.7498 -7.7498 -7.7502 158.7918 191.0582 Bm
f
0 BB
U
U
u
u
157.2082 389.6918 m
152.075 389.6918 147.9135 393.8532 147.9135 398.9864 c
147.9135 404.1195 152.075 408.281 157.2082 408.281 c
162.3413 408.281 166.5028 404.1195 166.5028 398.9864 c
166.5028 393.8532 162.3413 389.6918 157.2082 389.6918 c
Bb
-2.6638 3.5859 126.6071 0.4806 Bh
1 (radial purple) 183.7191 495.4552 0 8.3242 1.1166 0 0 1.1166 -515.869 -395.5503 Bg
9.2946 0 0 -9.2946 157.2082 398.9864 Bm
f
0 BB
U
U
0 To
1 0 0 1 191.3573 476.1594 0 Tp
TP
0 Tr
0 g
(module) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
203.6763 516.295 m
203.6763 525.5316 L
191.9381 525.5316 L
187.3155 520.9133 L
191.9381 516.295 L
203.6763 516.295 L
b
0 To
1 0 0 1 192.1073 518.099 0 Tp
TP
0 Tr
0 g
1 w
(hw) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
201.3172 407.6875 m
201.3172 416.9241 L
194.4667 416.9241 L
189.8441 412.3058 L
194.4667 407.6875 L
201.3172 407.6875 L
b
0 To
1 0 0 1 194.4693 409.5934 0 Tp
TP
0 Tr
0 g
1 w
(1) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
201.4722 362.3731 m
201.4722 371.6096 L
192.0227 371.6096 L
187.4 366.9913 L
192.0227 362.3731 L
201.4722 362.3731 L
b
0 To
1 0 0 1 193.5383 364.279 0 Tp
TP
0 Tr
0 g
1 w
(io) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
199.1641 217.3321 m
199.1641 226.5687 L
192.0227 226.5687 L
187.4 221.9504 L
192.0227 217.3321 L
199.1641 217.3321 L
b
0 To
1 0 0 1 191.7927 219.2381 0 Tp
TP
0 Tr
0 g
1 w
(O) Tx 
(\r) TX 
TO
u
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
189.5505 513.9485 m
186.0546 512.2017 L
186.0546 533.7298 L
182.5587 531.983 L
182.5587 510.4549 l
179.0628 508.7082 l
184.2285 501.85 l
189.5505 513.9485 l
b
U
470.8268 141.2205 m
470.8268 628.7795 L
139.1732 628.7795 L
139.1732 141.2205 L
470.8268 141.2205 L
(n) *
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

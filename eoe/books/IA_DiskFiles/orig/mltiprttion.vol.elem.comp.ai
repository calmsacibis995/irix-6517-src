%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (mltiprttion.vol.elem.comp.ai)
%%CreationDate: (3/18/99) (11:26 AM)
%%BoundingBox: 144 296 367 504
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (custom black)
%%+ (purple)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 0.35 0 0.25 (dark blue)
%%+ 1 1 0 0 (purple)
%AI3_TemplateBox: 278 362 278 362
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
1 1 0 0 (purple) 0.85 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
297.5449 319.3219 m
297.5449 306.7363 268.1134 296.5331 231.8087 296.5331 c
195.5038 296.5331 166.0722 306.7363 166.0722 319.3219 C
166.0722 455.7617 L
166.0722 468.3473 195.5038 478.5503 231.8087 478.5503 c
268.1134 478.5503 297.5449 468.3473 297.5449 455.7617 C
297.5449 319.3219 L
f
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
166.072 319.3178 m
166.072 319.3199 L
166.0718 331.9053 195.5035 342.1089 231.8081 342.1094 c
268.113 342.11 297.5447 331.9073 297.5449 319.3219 C
S
u
q
1 w
284.8856 324.5592 m
284.8856 314.4102 261.1519 306.1824 231.8757 306.1824 c
202.5993 306.1824 178.8656 314.4102 178.8656 324.5592 C
178.8656 376.3784 L
178.8656 386.5275 202.5993 394.7552 231.8757 394.7552 c
261.1519 394.7552 284.8856 386.5275 284.8856 376.3784 C
284.8856 324.5592 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
284.8856 324.5592 m
284.8856 314.4102 261.1519 306.1824 231.8757 306.1824 c
202.5993 306.1824 178.8656 314.4102 178.8656 324.5592 C
178.8656 376.3784 L
178.8656 386.5275 202.5993 394.7552 231.8757 394.7552 c
261.1519 394.7552 284.8856 386.5275 284.8856 376.3784 C
284.8856 324.5592 L
f
u
245.5364 292.7951 m
245.5364 359.6274 L
173.5676 384.1474 L
173.5676 317.315 L
245.5364 292.7951 L
f
u
1 1 0 0 (purple) 0.0236 x
244.1593 293.2644 m
244.1593 360.0966 L
174.0266 383.9909 L
174.0266 317.1588 L
244.1593 293.2644 L
f
1 1 0 0 (purple) 0.0472 x
242.782 293.7335 m
242.782 360.5659 L
174.4857 383.8345 L
174.4857 317.0023 L
242.782 293.7335 L
f
1 1 0 0 (purple) 0.0708 x
241.4041 294.2031 m
241.4041 361.0353 L
174.9449 383.6781 L
174.9449 316.8458 L
241.4041 294.2031 L
f
1 1 0 0 (purple) 0.0944 x
240.0269 294.6724 m
240.0269 361.5046 L
175.4041 383.5217 L
175.4041 316.6894 L
240.0269 294.6724 L
f
1 1 0 0 (purple) 0.1181 x
238.649 295.1418 m
238.649 361.9739 L
175.8633 383.3652 L
175.8633 316.533 L
238.649 295.1418 L
f
1 1 0 0 (purple) 0.1417 x
237.2717 295.611 m
237.2717 362.4432 L
176.3224 383.2088 L
176.3224 316.3766 L
237.2717 295.611 L
f
1 1 0 0 (purple) 0.1653 x
235.8937 296.0804 m
235.8937 362.9126 L
176.7818 383.0523 L
176.7818 316.2201 L
235.8937 296.0804 L
f
1 1 0 0 (purple) 0.1889 x
234.5166 296.5497 m
234.5166 363.3819 L
177.2408 382.8958 L
177.2408 316.0636 L
234.5166 296.5497 L
f
1 1 0 0 (purple) 0.2125 x
233.1386 297.0191 m
233.1386 363.8515 L
177.7002 382.7394 L
177.7002 315.9072 L
233.1386 297.0191 L
f
1 1 0 0 (purple) 0.2361 x
231.7614 297.4884 m
231.7614 364.3205 L
178.1592 382.583 L
178.1592 315.7506 L
231.7614 297.4884 L
f
1 1 0 0 (purple) 0.2597 x
230.3835 297.9577 m
230.3835 364.7901 L
178.6186 382.4265 L
178.6186 315.5942 L
230.3835 297.9577 L
f
1 1 0 0 (purple) 0.2833 x
229.0064 298.427 m
229.0064 365.2592 L
179.0775 382.2701 L
179.0775 315.4379 L
229.0064 298.427 L
f
1 1 0 0 (purple) 0.3069 x
227.6284 298.8965 m
227.6284 365.7288 L
179.5369 382.1136 L
179.5369 315.2812 L
227.6284 298.8965 L
f
1 1 0 0 (purple) 0.3305 x
226.2513 299.3657 m
226.2513 366.1979 L
179.9959 381.9572 L
179.9959 315.125 L
226.2513 299.3657 L
f
1 1 0 0 (purple) 0.3542 x
224.8733 299.8351 m
224.8733 366.6674 L
180.4553 381.8008 L
180.4553 314.9685 L
224.8733 299.8351 L
f
1 1 0 0 (purple) 0.3778 x
223.4961 300.3043 m
223.4961 367.1365 L
180.9143 381.6443 L
180.9143 314.812 L
223.4961 300.3043 L
f
1 1 0 0 (purple) 0.4014 x
222.1181 300.7738 m
222.1181 367.6061 L
181.3737 381.4878 L
181.3737 314.6555 L
222.1181 300.7738 L
f
1 1 0 0 (purple) 0.425 x
220.741 301.243 m
220.741 368.0752 L
181.8327 381.3314 L
181.8327 314.4992 L
220.741 301.243 L
f
1 1 0 0 (purple) 0.4486 x
219.3637 301.7122 m
219.3637 368.5445 L
182.2918 381.175 L
182.2918 314.3428 L
219.3637 301.7122 L
f
1 1 0 0 (purple) 0.4722 x
217.9857 302.1817 m
217.9857 369.014 L
182.751 381.0185 L
182.751 314.1863 L
217.9857 302.1817 L
f
1 1 0 0 (purple) 0.4958 x
216.6087 302.6508 m
216.6087 369.4832 L
183.2102 380.8621 L
183.2102 314.0299 L
216.6087 302.6508 L
f
1 1 0 0 (purple) 0.5195 x
215.2307 303.1204 m
215.2307 369.9526 L
183.6694 380.7056 L
183.6694 313.8733 L
215.2307 303.1204 L
f
1 1 0 0 (purple) 0.5431 x
213.8536 303.5895 m
213.8536 370.4219 L
184.1285 380.5492 L
184.1285 313.7171 L
213.8536 303.5895 L
f
1 1 0 0 (purple) 0.5667 x
212.4755 304.059 m
212.4755 370.8913 L
184.5879 380.3928 L
184.5879 313.5604 L
212.4755 304.059 L
f
1 1 0 0 (purple) 0.5903 x
211.0983 304.5282 m
211.0983 371.3605 L
185.0469 380.2363 L
185.0469 313.4041 L
211.0983 304.5282 L
f
1 1 0 0 (purple) 0.6139 x
209.7204 304.9977 m
209.7204 371.83 L
185.5063 380.0798 L
185.5063 313.2477 L
209.7204 304.9977 L
f
1 1 0 0 (purple) 0.6375 x
208.3432 305.467 m
208.3432 372.2992 L
185.9653 379.9234 L
185.9653 313.0912 L
208.3432 305.467 L
f
1 1 0 0 (purple) 0.6611 x
206.9654 305.9364 m
206.9654 372.7686 L
186.4245 379.767 L
186.4245 312.9347 L
206.9654 305.9364 L
f
1 1 0 0 (purple) 0.6847 x
205.5881 306.4057 m
205.5881 373.2379 L
186.8836 379.6106 L
186.8836 312.7782 L
205.5881 306.4057 L
f
1 1 0 0 (purple) 0.7083 x
204.2102 306.875 m
204.2102 373.7073 L
187.3429 379.4541 L
187.3429 312.6217 L
204.2102 306.875 L
f
1 1 0 0 (purple) 0.7319 x
202.833 307.3443 m
202.833 374.1765 L
187.802 379.2976 L
187.802 312.4655 L
202.833 307.3443 L
f
1 1 0 0 (purple) 0.7556 x
201.455 307.8137 m
201.455 374.6461 L
188.2613 379.1412 L
188.2613 312.3088 L
201.455 307.8137 L
f
1 1 0 0 (purple) 0.7792 x
200.0778 308.283 m
200.0778 375.1152 L
188.7203 378.9848 L
188.7203 312.1525 L
200.0778 308.283 L
f
1 1 0 0 (purple) 0.8028 x
198.6999 308.7525 m
198.6999 375.5848 L
189.1797 378.8283 L
189.1797 311.9961 L
198.6999 308.7525 L
f
1 1 0 0 (purple) 0.8264 x
197.3227 309.2217 m
197.3227 376.0538 L
189.6387 378.6719 L
189.6387 311.8395 L
197.3227 309.2217 L
f
U
1 1 0 0 (purple) 0.85 x
195.9454 309.6909 m
195.9454 376.5232 L
190.0979 378.5155 L
190.0979 311.6833 L
195.9454 309.6909 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
284.8522 376.3776 m
284.8522 366.2286 261.1183 358.0007 231.842 358.0007 c
202.5658 358.0007 178.8321 366.2286 178.8321 376.3776 C
178.8318 386.5267 202.5655 394.7548 231.8417 394.7552 c
261.1181 394.7557 284.8519 386.5284 284.8522 376.3792 C
284.8522 376.3776 L
f
u
1 1 0 0 (purple) 0.575 x
231.881 394.1449 m
260.4316 394.1453 283.5771 386.2212 283.5774 376.446 C
283.5774 376.4443 L
283.5774 366.6693 260.4318 358.7446 231.8813 358.7446 c
203.3307 358.7446 180.1853 366.6693 180.1853 376.4443 C
180.185 386.2194 203.3305 394.1445 231.881 394.1449 c
f
1 1 0 0 (purple) 0.5 x
231.9202 393.5346 m
259.7452 393.535 282.3025 385.914 282.3027 376.5127 C
282.3027 376.5111 L
282.3027 367.11 259.7454 359.4884 231.9204 359.4884 c
204.0956 359.4884 181.5384 367.11 181.5384 376.5111 C
181.5382 385.9124 204.0953 393.5341 231.9202 393.5346 c
f
1 1 0 0 (purple) 0.425 x
231.9594 392.9243 m
259.0587 392.9246 281.0277 385.6067 281.028 376.5794 C
281.028 376.5779 L
281.028 367.5507 259.059 360.2323 231.9597 360.2323 c
204.8605 360.2323 182.8917 367.5507 182.8917 376.5779 C
182.8914 385.6052 204.8603 392.9238 231.9594 392.9243 c
f
1 1 0 0 (purple) 0.35 x
231.9987 392.3139 m
258.3724 392.3143 279.753 385.2995 279.7533 376.6461 C
279.7533 376.6447 L
279.7533 367.9914 258.3726 360.9761 231.9989 360.9761 c
205.6254 360.9761 184.2447 367.9914 184.2447 376.6447 C
184.2445 385.298 205.6251 392.3135 231.9987 392.3139 c
f
1 1 0 0 (purple) 0.275 x
232.0379 391.7036 m
257.6859 391.7039 278.4783 384.9923 278.4785 376.7129 C
278.4785 376.7114 L
278.4785 368.4322 257.6861 361.72 232.0382 361.72 c
206.3902 361.72 185.598 368.4322 185.598 376.7114 C
185.5978 384.9909 206.3901 391.7031 232.0379 391.7036 c
f
U
1 1 0 0 (purple) 0.2 x
277.2037 376.7782 m
277.2037 368.8729 256.9996 362.4639 232.0774 362.4639 c
207.1552 362.4639 186.9512 368.8729 186.9512 376.7782 C
186.951 384.6837 207.155 391.0928 232.0772 391.0933 c
256.9994 391.0935 277.2035 384.6851 277.2037 376.7796 C
277.2037 376.7782 L
f
U
u
q
284.8856 389.9753 m
284.8856 379.8262 261.1519 371.5985 231.8757 371.5985 c
202.5993 371.5985 178.8656 379.8262 178.8656 389.9753 C
178.8656 420.6925 L
178.8656 430.8417 202.5993 439.0694 231.8757 439.0694 c
261.1519 439.0694 284.8856 430.8417 284.8856 420.6925 C
284.8856 389.9753 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
284.8856 389.9753 m
284.8856 379.8262 261.1519 371.5985 231.8757 371.5985 c
202.5993 371.5985 178.8656 379.8262 178.8656 389.9753 C
178.8656 420.6925 L
178.8656 430.8417 202.5993 439.0694 231.8757 439.0694 c
261.1519 439.0694 284.8856 430.8417 284.8856 420.6925 C
284.8856 389.9753 L
f
u
245.5364 358.2112 m
245.5364 403.9415 L
173.5676 428.4616 L
173.5676 382.7311 L
245.5364 358.2112 L
f
u
1 1 0 0 (purple) 0.0236 x
244.1593 358.6805 m
244.1593 404.4108 L
174.0266 428.3051 L
174.0266 382.5748 L
244.1593 358.6805 L
f
1 1 0 0 (purple) 0.0472 x
242.782 359.1496 m
242.782 404.88 L
174.4857 428.1486 L
174.4857 382.4183 L
242.782 359.1496 L
f
1 1 0 0 (purple) 0.0708 x
241.4041 359.6192 m
241.4041 405.3494 L
174.9449 427.9922 L
174.9449 382.2618 L
241.4041 359.6192 L
f
1 1 0 0 (purple) 0.0944 x
240.0269 360.0884 m
240.0269 405.8187 L
175.4041 427.8358 L
175.4041 382.1056 L
240.0269 360.0884 L
f
1 1 0 0 (purple) 0.1181 x
238.649 360.5578 m
238.649 406.2881 L
175.8633 427.6794 L
175.8633 381.9489 L
238.649 360.5578 L
f
1 1 0 0 (purple) 0.1417 x
237.2717 361.027 m
237.2717 406.7574 L
176.3224 427.5229 L
176.3224 381.7926 L
237.2717 361.027 L
f
1 1 0 0 (purple) 0.1653 x
235.8937 361.4965 m
235.8937 407.2268 L
176.7818 427.3664 L
176.7818 381.6362 L
235.8937 361.4965 L
f
1 1 0 0 (purple) 0.1889 x
234.5166 361.9657 m
234.5166 407.696 L
177.2408 427.21 L
177.2408 381.4796 L
234.5166 361.9657 L
f
1 1 0 0 (purple) 0.2125 x
233.1386 362.4352 m
233.1386 408.1656 L
177.7002 427.0536 L
177.7002 381.3232 L
233.1386 362.4352 L
f
1 1 0 0 (purple) 0.2361 x
231.7614 362.9044 m
231.7614 408.6347 L
178.1592 426.8972 L
178.1592 381.1667 L
231.7614 362.9044 L
f
1 1 0 0 (purple) 0.2597 x
230.3835 363.3738 m
230.3835 409.1043 L
178.6186 426.7406 L
178.6186 381.0102 L
230.3835 363.3738 L
f
1 1 0 0 (purple) 0.2833 x
229.0064 363.843 m
229.0064 409.5733 L
179.0775 426.5842 L
179.0775 380.854 L
229.0064 363.843 L
f
1 1 0 0 (purple) 0.3069 x
227.6284 364.3125 m
227.6284 410.0429 L
179.5369 426.4278 L
179.5369 380.6975 L
227.6284 364.3125 L
f
1 1 0 0 (purple) 0.3305 x
226.2513 364.7817 m
226.2513 410.512 L
179.9959 426.2713 L
179.9959 380.541 L
226.2513 364.7817 L
f
1 1 0 0 (purple) 0.3542 x
224.8733 365.2512 m
224.8733 410.9816 L
180.4553 426.1149 L
180.4553 380.3845 L
224.8733 365.2512 L
f
1 1 0 0 (purple) 0.3778 x
223.4961 365.7203 m
223.4961 411.4507 L
180.9143 425.9584 L
180.9143 380.2281 L
223.4961 365.7203 L
f
1 1 0 0 (purple) 0.4014 x
222.1181 366.1899 m
222.1181 411.9203 L
181.3737 425.802 L
181.3737 380.0716 L
222.1181 366.1899 L
f
1 1 0 0 (purple) 0.425 x
220.741 366.659 m
220.741 412.3893 L
181.8327 425.6456 L
181.8327 379.9151 L
220.741 366.659 L
f
1 1 0 0 (purple) 0.4486 x
219.3637 367.1283 m
219.3637 412.8587 L
182.2918 425.4891 L
182.2918 379.7588 L
219.3637 367.1283 L
f
1 1 0 0 (purple) 0.4722 x
217.9857 367.5978 m
217.9857 413.3281 L
182.751 425.3327 L
182.751 379.6023 L
217.9857 367.5978 L
f
1 1 0 0 (purple) 0.4958 x
216.6087 368.0669 m
216.6087 413.7973 L
183.2102 425.1762 L
183.2102 379.4459 L
216.6087 368.0669 L
f
1 1 0 0 (purple) 0.5195 x
215.2307 368.5364 m
215.2307 414.2668 L
183.6694 425.0198 L
183.6694 379.2894 L
215.2307 368.5364 L
f
1 1 0 0 (purple) 0.5431 x
213.8536 369.0056 m
213.8536 414.736 L
184.1285 424.8634 L
184.1285 379.1331 L
213.8536 369.0056 L
f
1 1 0 0 (purple) 0.5667 x
212.4755 369.4752 m
212.4755 415.2054 L
184.5879 424.7069 L
184.5879 378.9765 L
212.4755 369.4752 L
f
1 1 0 0 (purple) 0.5903 x
211.0983 369.9442 m
211.0983 415.6747 L
185.0469 424.5504 L
185.0469 378.8202 L
211.0983 369.9442 L
f
1 1 0 0 (purple) 0.6139 x
209.7204 370.4138 m
209.7204 416.1441 L
185.5063 424.394 L
185.5063 378.6637 L
209.7204 370.4138 L
f
1 1 0 0 (purple) 0.6375 x
208.3432 370.8831 m
208.3432 416.6134 L
185.9653 424.2376 L
185.9653 378.5072 L
208.3432 370.8831 L
f
1 1 0 0 (purple) 0.6611 x
206.9654 371.3525 m
206.9654 417.0827 L
186.4245 424.0811 L
186.4245 378.3507 L
206.9654 371.3525 L
f
1 1 0 0 (purple) 0.6847 x
205.5881 371.8218 m
205.5881 417.552 L
186.8836 423.9247 L
186.8836 378.1943 L
205.5881 371.8218 L
f
1 1 0 0 (purple) 0.7083 x
204.2102 372.2911 m
204.2102 418.0214 L
187.3429 423.7682 L
187.3429 378.0378 L
204.2102 372.2911 L
f
1 1 0 0 (purple) 0.7319 x
202.833 372.7604 m
202.833 418.4907 L
187.802 423.6118 L
187.802 377.8815 L
202.833 372.7604 L
f
1 1 0 0 (purple) 0.7556 x
201.455 373.2298 m
201.455 418.9603 L
188.2613 423.4553 L
188.2613 377.7251 L
201.455 373.2298 L
f
1 1 0 0 (purple) 0.7792 x
200.0778 373.6991 m
200.0778 419.4293 L
188.7203 423.2989 L
188.7203 377.5685 L
200.0778 373.6991 L
f
1 1 0 0 (purple) 0.8028 x
198.6999 374.1685 m
198.6999 419.8989 L
189.1797 423.1425 L
189.1797 377.4121 L
198.6999 374.1685 L
f
1 1 0 0 (purple) 0.8264 x
197.3227 374.6377 m
197.3227 420.368 L
189.6387 422.986 L
189.6387 377.2556 L
197.3227 374.6377 L
f
U
1 1 0 0 (purple) 0.85 x
195.9454 375.1069 m
195.9454 420.8373 L
190.0979 422.8296 L
190.0979 377.0993 L
195.9454 375.1069 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
284.8522 420.6917 m
284.8522 410.5427 261.1183 402.3149 231.842 402.3149 c
202.5658 402.3149 178.8321 410.5427 178.8321 420.6917 C
178.8318 430.8408 202.5655 439.069 231.8417 439.0694 c
261.1181 439.0698 284.8519 430.8425 284.8522 420.6934 C
284.8522 420.6917 L
f
u
1 1 0 0 (purple) 0.575 x
283.5451 420.6402 m
283.5451 410.865 260.3997 402.9405 231.8491 402.9405 c
203.2986 402.9405 180.1531 410.865 180.1531 420.6402 C
180.1528 430.4153 203.2982 438.3404 231.8489 438.3407 c
260.3994 438.3411 283.5449 430.417 283.5451 420.6417 C
283.5451 420.6402 L
f
1 1 0 0 (purple) 0.5 x
282.2382 420.5886 m
282.2382 411.1874 259.6809 403.5661 231.8561 403.5661 c
204.0312 403.5661 181.4741 411.1874 181.4741 420.5886 C
181.4738 429.9898 204.031 437.6117 231.8558 437.612 c
259.6806 437.6124 282.238 429.9914 282.2382 420.5902 C
282.2382 420.5886 L
f
1 1 0 0 (purple) 0.425 x
280.9313 420.5372 m
280.9313 411.5098 258.9623 404.1916 231.8631 404.1916 c
204.7639 404.1916 182.795 411.5098 182.795 420.5372 C
182.7948 429.5644 204.7636 436.883 231.8628 436.8834 c
258.9622 436.8838 280.931 429.5659 280.9313 420.5386 C
280.9313 420.5372 L
f
1 1 0 0 (purple) 0.35 x
279.6244 420.4856 m
279.6244 411.8324 258.2437 404.8171 231.8701 404.8171 c
205.4967 404.8171 184.116 411.8324 184.116 420.4856 C
184.1157 429.1389 205.4964 436.1544 231.8699 436.1548 c
258.2436 436.155 279.6242 429.1404 279.6244 420.4871 C
279.6244 420.4856 L
f
1 1 0 0 (purple) 0.275 x
278.3175 420.4342 m
278.3175 412.1547 257.5251 405.4426 231.8773 405.4426 c
206.2293 405.4426 185.437 412.1547 185.437 420.4342 C
185.4367 428.7135 206.229 435.4257 231.877 435.4262 c
257.5249 435.4264 278.3173 428.715 278.3175 420.4354 C
278.3175 420.4342 L
f
U
1 1 0 0 (purple) 0.2 x
277.0105 420.3826 m
277.0105 412.4771 256.8065 406.0683 231.8841 406.0683 c
206.962 406.0683 186.7579 412.4771 186.7579 420.3826 C
186.7577 428.2881 206.9618 434.6972 231.884 434.6975 c
256.8061 434.6978 277.0104 428.2894 277.0105 420.3838 C
277.0105 420.3826 L
f
U
u
q
284.8856 435.178 m
284.8856 425.029 261.1519 416.8011 231.8757 416.8011 c
202.5993 416.8011 178.8656 425.029 178.8656 435.178 C
178.8656 455.4511 L
178.8656 465.6002 202.5993 473.8279 231.8757 473.8279 c
261.1519 473.8279 284.8856 465.6002 284.8856 455.4511 C
284.8856 435.178 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
284.8856 435.178 m
284.8856 425.029 261.1519 416.8011 231.8757 416.8011 c
202.5993 416.8011 178.8656 425.029 178.8656 435.178 C
178.8656 455.4511 L
178.8656 465.6002 202.5993 473.8279 231.8757 473.8279 c
261.1519 473.8279 284.8856 465.6002 284.8856 455.4511 C
284.8856 435.178 L
f
u
245.5364 403.4139 m
245.5364 438.7001 L
173.5676 463.2201 L
173.5676 427.9338 L
245.5364 403.4139 L
f
u
1 1 0 0 (purple) 0.0236 x
244.1593 403.8832 m
244.1593 439.1693 L
174.0266 463.0636 L
174.0266 427.7775 L
244.1593 403.8832 L
f
1 1 0 0 (purple) 0.0472 x
242.782 404.3523 m
242.782 439.6386 L
174.4857 462.9072 L
174.4857 427.6211 L
242.782 404.3523 L
f
1 1 0 0 (purple) 0.0708 x
241.4041 404.8219 m
241.4041 440.108 L
174.9449 462.7508 L
174.9449 427.4646 L
241.4041 404.8219 L
f
1 1 0 0 (purple) 0.0944 x
240.0269 405.2911 m
240.0269 440.5772 L
175.4041 462.5944 L
175.4041 427.3082 L
240.0269 405.2911 L
f
1 1 0 0 (purple) 0.1181 x
238.649 405.7605 m
238.649 441.0466 L
175.8633 462.4379 L
175.8633 427.1516 L
238.649 405.7605 L
f
1 1 0 0 (purple) 0.1417 x
237.2717 406.2298 m
237.2717 441.5159 L
176.3224 462.2814 L
176.3224 426.9953 L
237.2717 406.2298 L
f
1 1 0 0 (purple) 0.1653 x
235.8937 406.6992 m
235.8937 441.9853 L
176.7818 462.125 L
176.7818 426.8389 L
235.8937 406.6992 L
f
1 1 0 0 (purple) 0.1889 x
234.5166 407.1685 m
234.5166 442.4546 L
177.2408 461.9685 L
177.2408 426.6824 L
234.5166 407.1685 L
f
1 1 0 0 (purple) 0.2125 x
233.1386 407.6378 m
233.1386 442.9242 L
177.7002 461.8121 L
177.7002 426.5259 L
233.1386 407.6378 L
f
1 1 0 0 (purple) 0.2361 x
231.7614 408.1071 m
231.7614 443.3932 L
178.1592 461.6557 L
178.1592 426.3694 L
231.7614 408.1071 L
f
1 1 0 0 (purple) 0.2597 x
230.3835 408.5765 m
230.3835 443.8628 L
178.6186 461.4992 L
178.6186 426.2129 L
230.3835 408.5765 L
f
1 1 0 0 (purple) 0.2833 x
229.0064 409.0458 m
229.0064 444.3319 L
179.0775 461.3428 L
179.0775 426.0567 L
229.0064 409.0458 L
f
1 1 0 0 (purple) 0.3069 x
227.6284 409.5152 m
227.6284 444.8015 L
179.5369 461.1863 L
179.5369 425.9002 L
227.6284 409.5152 L
f
1 1 0 0 (purple) 0.3305 x
226.2513 409.9844 m
226.2513 445.2705 L
179.9959 461.0298 L
179.9959 425.7437 L
226.2513 409.9844 L
f
1 1 0 0 (purple) 0.3542 x
224.8733 410.4539 m
224.8733 445.7401 L
180.4553 460.8734 L
180.4553 425.5873 L
224.8733 410.4539 L
f
1 1 0 0 (purple) 0.3778 x
223.4961 410.9231 m
223.4961 446.2092 L
180.9143 460.717 L
180.9143 425.4307 L
223.4961 410.9231 L
f
1 1 0 0 (purple) 0.4014 x
222.1181 411.3926 m
222.1181 446.6788 L
181.3737 460.5605 L
181.3737 425.2743 L
222.1181 411.3926 L
f
1 1 0 0 (purple) 0.425 x
220.741 411.8618 m
220.741 447.1479 L
181.8327 460.4041 L
181.8327 425.118 L
220.741 411.8618 L
f
1 1 0 0 (purple) 0.4486 x
219.3637 412.3309 m
219.3637 447.6172 L
182.2918 460.2476 L
182.2918 424.9615 L
219.3637 412.3309 L
f
1 1 0 0 (purple) 0.4722 x
217.9857 412.8005 m
217.9857 448.0867 L
182.751 460.0912 L
182.751 424.8051 L
217.9857 412.8005 L
f
1 1 0 0 (purple) 0.4958 x
216.6087 413.2696 m
216.6087 448.5559 L
183.2102 459.9348 L
183.2102 424.6486 L
216.6087 413.2696 L
f
1 1 0 0 (purple) 0.5195 x
215.2307 413.7391 m
215.2307 449.0253 L
183.6694 459.7783 L
183.6694 424.4921 L
215.2307 413.7391 L
f
1 1 0 0 (purple) 0.5431 x
213.8536 414.2083 m
213.8536 449.4946 L
184.1285 459.6219 L
184.1285 424.3358 L
213.8536 414.2083 L
f
1 1 0 0 (purple) 0.5667 x
212.4755 414.6778 m
212.4755 449.964 L
184.5879 459.4654 L
184.5879 424.1791 L
212.4755 414.6778 L
f
1 1 0 0 (purple) 0.5903 x
211.0983 415.1469 m
211.0983 450.4332 L
185.0469 459.309 L
185.0469 424.0229 L
211.0983 415.1469 L
f
1 1 0 0 (purple) 0.6139 x
209.7204 415.6165 m
209.7204 450.9026 L
185.5063 459.1525 L
185.5063 423.8664 L
209.7204 415.6165 L
f
1 1 0 0 (purple) 0.6375 x
208.3432 416.0858 m
208.3432 451.3719 L
185.9653 458.9961 L
185.9653 423.7099 L
208.3432 416.0858 L
f
1 1 0 0 (purple) 0.6611 x
206.9654 416.5551 m
206.9654 451.8413 L
186.4245 458.8397 L
186.4245 423.5535 L
206.9654 416.5551 L
f
1 1 0 0 (purple) 0.6847 x
205.5881 417.0244 m
205.5881 452.3106 L
186.8836 458.6833 L
186.8836 423.397 L
205.5881 417.0244 L
f
1 1 0 0 (purple) 0.7083 x
204.2102 417.4938 m
204.2102 452.7801 L
187.3429 458.5267 L
187.3429 423.2405 L
204.2102 417.4938 L
f
1 1 0 0 (purple) 0.7319 x
202.833 417.9631 m
202.833 453.2492 L
187.802 458.3703 L
187.802 423.0842 L
202.833 417.9631 L
f
1 1 0 0 (purple) 0.7556 x
201.455 418.4324 m
201.455 453.7188 L
188.2613 458.2139 L
188.2613 422.9277 L
201.455 418.4324 L
f
1 1 0 0 (purple) 0.7792 x
200.0778 418.9018 m
200.0778 454.1879 L
188.7203 458.0575 L
188.7203 422.7713 L
200.0778 418.9018 L
f
1 1 0 0 (purple) 0.8028 x
198.6999 419.3712 m
198.6999 454.6575 L
189.1797 457.901 L
189.1797 422.6148 L
198.6999 419.3712 L
f
1 1 0 0 (purple) 0.8264 x
197.3227 419.8404 m
197.3227 455.1265 L
189.6387 457.7445 L
189.6387 422.4583 L
197.3227 419.8404 L
f
U
1 1 0 0 (purple) 0.85 x
195.9454 420.3097 m
195.9454 455.5959 L
190.0979 457.5881 L
190.0979 422.302 L
195.9454 420.3097 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
284.8522 455.4503 m
284.8522 445.3013 261.1183 437.0734 231.842 437.0734 c
202.5658 437.0734 178.8321 445.3013 178.8321 455.4503 C
178.8318 465.5993 202.5655 473.8275 231.8417 473.8279 c
261.1181 473.8284 284.8519 465.6011 284.8522 455.4519 C
284.8522 455.4503 L
f
U
0 To
1 0 0 1 319.9486 443.9564 0 Tp
TP
0 Tr
0 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
5.9974 0 Tl
0 Tc
0 Tw
(Disk partition) Tx 
(\r) TX 
TO
0 R
0 0 0 1 (custom black) 0 X
0.5 w
285.1859 456.3887 m
307.75 456.3879 L
309.2943 456.3879 311.4508 454.266 311.4508 452.2007 c
311.4508 448.4189 l
311.4508 445.1737 317.8384 445.1737 Y
311.4508 445.1737 311.4508 441.9285 v
311.4508 437.6613 l
311.4508 435.5961 309.2943 433.5308 307.75 433.5308 c
285.1859 433.5308 l
S
0 To
1 0 0 1 319.9486 401.5305 0 Tp
TP
0 Tr
0 O
0 g
1 w
(Disk partition) Tx 
(\r) TX 
TO
0 R
0 0 0 1 (custom black) 0 X
0.5 w
285.1859 422.1562 m
307.75 422.127 L
309.2943 422.127 311.4508 420.0335 311.4508 417.9682 c
311.4508 408.2323 l
311.4508 404.9871 317.8384 404.9871 Y
311.4508 404.9871 311.4508 401.7419 v
311.4508 392.0057 l
311.4508 389.9406 309.2943 387.8755 307.75 387.8755 c
285.1859 387.8755 l
S
0 To
1 0 0 1 319.9486 348.7099 0 Tp
TP
0 Tr
0 O
0 g
1 w
(Disk partition) Tx 
(\r) TX 
TO
0 R
0 0 0 1 (custom black) 0 X
0.5 w
285.1859 377.3906 m
307.75 377.4087 L
309.2943 377.4087 311.4508 375.3436 311.4508 373.2783 c
311.4508 353.7932 l
311.4508 350.548 317.8384 350.548 Y
311.4508 350.548 311.4508 347.3028 v
311.4508 326.2138 l
311.4508 324.1487 309.2943 322.0835 307.75 322.0835 c
285.1859 322.0835 l
S
0 To
1 0 0 1 202.6727 495.9848 0 Tp
TP
-58.1953 0 Td
0 Tr
0 O
0 g
1 w
2 Ta
(Volume element) Tx 
(\r) TX 
TO
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
297.5036 455.7628 m
297.5036 455.7607 L
297.5036 443.1751 268.0717 432.9721 231.767 432.9721 c
195.4622 432.9721 166.0306 443.1751 166.0306 455.7607 C
S
0 0 0 1 (custom black) 0 X
206.5 498.411 m
226.5271 478.4196 l
S
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (plex.composition.ai)
%%CreationDate: (3/18/99) (11:20 AM)
%%BoundingBox: 200 243 383 465
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (purple)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 1 0 0 (purple)
%AI3_TemplateBox: 277 365 277 365
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
1 1 0 0 (purple) 0.85 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
382.1624 263.9016 m
382.1624 252.6224 355.7861 243.4784 323.25 243.4784 c
290.7137 243.4784 264.3372 252.6224 264.3372 263.9016 C
264.3372 417.9006 L
264.3372 429.1798 290.7137 438.3237 323.25 438.3237 c
355.7861 438.3237 382.1624 429.1798 382.1624 417.9006 C
382.1624 263.9016 L
f
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
264.3371 263.8979 m
264.3371 263.8998 L
264.3369 275.1788 290.7134 284.3232 323.2495 284.3237 c
355.7857 284.3242 382.1623 275.1806 382.1624 263.9016 C
S
u
q
1 w
365.856 265.3974 m
365.856 257.2537 346.8116 250.6516 323.3199 250.6516 c
299.8281 250.6516 280.7837 257.2537 280.7837 265.3974 C
280.7837 292.6734 L
280.7837 300.8172 299.8281 307.4192 323.3199 307.4192 c
346.8116 307.4192 365.856 300.8172 365.856 292.6734 C
365.856 265.3974 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
365.856 265.3974 m
365.856 257.2537 346.8116 250.6516 323.3199 250.6516 c
299.8281 250.6516 280.7837 257.2537 280.7837 265.3974 C
280.7837 292.6734 L
280.7837 300.8172 299.8281 307.4192 323.3199 307.4192 c
346.8116 307.4192 365.856 300.8172 365.856 292.6734 C
365.856 265.3974 L
f
u
334.2815 239.9094 m
334.2815 279.2322 L
276.5324 298.9073 L
276.5324 259.5847 L
334.2815 239.9094 L
f
u
1 1 0 0 (purple) 0.0236 x
333.1764 240.2859 m
333.1764 279.6086 L
276.9008 298.7818 L
276.9008 259.4591 L
333.1764 240.2859 L
f
1 1 0 0 (purple) 0.0472 x
332.0713 240.6624 m
332.0713 279.9851 L
277.2692 298.6564 L
277.2692 259.3336 L
332.0713 240.6624 L
f
1 1 0 0 (purple) 0.0708 x
330.9657 241.0391 m
330.9657 280.3618 L
277.6377 298.5308 L
277.6377 259.208 L
330.9657 241.0391 L
f
1 1 0 0 (purple) 0.0944 x
329.8606 241.4156 m
329.8606 280.7384 L
278.0061 298.4053 L
278.0061 259.0826 L
329.8606 241.4156 L
f
1 1 0 0 (purple) 0.1181 x
328.7549 241.7924 m
328.7549 281.115 L
278.3747 298.2797 L
278.3747 258.957 L
328.7549 241.7924 L
f
1 1 0 0 (purple) 0.1417 x
327.6498 242.1689 m
327.6498 281.4916 L
278.7431 298.1542 L
278.7431 258.8315 L
327.6498 242.1689 L
f
1 1 0 0 (purple) 0.1653 x
326.5441 242.5455 m
326.5441 281.8683 L
279.1115 298.0286 L
279.1115 258.7059 L
326.5441 242.5455 L
f
1 1 0 0 (purple) 0.1889 x
325.439 242.9221 m
325.439 282.2448 L
279.4799 297.9031 L
279.4799 258.5805 L
325.439 242.9221 L
f
1 1 0 0 (purple) 0.2125 x
324.3334 243.2987 m
324.3334 282.6215 L
279.8485 297.7776 L
279.8485 258.4548 L
324.3334 243.2987 L
f
1 1 0 0 (purple) 0.2361 x
323.2283 243.6752 m
323.2283 282.998 L
280.2169 297.6521 L
280.2169 258.3293 L
323.2283 243.6752 L
f
1 1 0 0 (purple) 0.2597 x
322.1226 244.052 m
322.1226 283.3747 L
280.5854 297.5265 L
280.5854 258.2038 L
322.1226 244.052 L
f
1 1 0 0 (purple) 0.2833 x
321.0175 244.4285 m
321.0175 283.7512 L
280.9538 297.401 L
280.9538 258.0783 L
321.0175 244.4285 L
f
1 1 0 0 (purple) 0.3069 x
319.9118 244.8052 m
319.9118 284.1279 L
281.3224 297.2754 L
281.3224 257.9528 L
319.9118 244.8052 L
f
1 1 0 0 (purple) 0.3305 x
318.8067 245.1817 m
318.8067 284.5044 L
281.6907 297.1499 L
281.6907 257.8272 L
318.8067 245.1817 L
f
1 1 0 0 (purple) 0.3542 x
317.7011 245.5584 m
317.7011 284.8811 L
282.0592 297.0243 L
282.0592 257.7016 L
317.7011 245.5584 L
f
1 1 0 0 (purple) 0.3778 x
316.596 245.9349 m
316.596 285.2576 L
282.4276 296.8989 L
282.4276 257.5761 L
316.596 245.9349 L
f
1 1 0 0 (purple) 0.4014 x
315.4903 246.3116 m
315.4903 285.6343 L
282.7962 296.7733 L
282.7962 257.4506 L
315.4903 246.3116 L
f
1 1 0 0 (purple) 0.425 x
314.3852 246.6881 m
314.3852 286.0108 L
283.1645 296.6478 L
283.1645 257.3251 L
314.3852 246.6881 L
f
1 1 0 0 (purple) 0.4486 x
313.2801 247.0646 m
313.2801 286.3873 L
283.5329 296.5223 L
283.5329 257.1996 L
313.2801 247.0646 L
f
1 1 0 0 (purple) 0.4722 x
312.1744 247.4413 m
312.1744 286.764 L
283.9014 296.3967 L
283.9014 257.074 L
312.1744 247.4413 L
f
1 1 0 0 (purple) 0.4958 x
311.0693 247.8179 m
311.0693 287.1406 L
284.2698 296.2712 L
284.2698 256.9485 L
311.0693 247.8179 L
f
1 1 0 0 (purple) 0.5195 x
309.9637 248.1946 m
309.9637 287.5173 L
284.6384 296.1456 L
284.6384 256.8229 L
309.9637 248.1946 L
f
1 1 0 0 (purple) 0.5431 x
308.8586 248.571 m
308.8586 287.8937 L
285.0068 296.0202 L
285.0068 256.6974 L
308.8586 248.571 L
f
1 1 0 0 (purple) 0.5667 x
307.7529 248.9477 m
307.7529 288.2705 L
285.3754 295.8946 L
285.3754 256.5719 L
307.7529 248.9477 L
f
1 1 0 0 (purple) 0.5903 x
306.6478 249.3243 m
306.6478 288.6469 L
285.7436 295.7691 L
285.7436 256.4464 L
306.6478 249.3243 L
f
1 1 0 0 (purple) 0.6139 x
305.5421 249.701 m
305.5421 289.0237 L
286.1122 295.6435 L
286.1122 256.3208 L
305.5421 249.701 L
f
1 1 0 0 (purple) 0.6375 x
304.437 250.0775 m
304.437 289.4001 L
286.4806 295.518 L
286.4806 256.1953 L
304.437 250.0775 L
f
1 1 0 0 (purple) 0.6611 x
303.3314 250.4542 m
303.3314 289.7769 L
286.8491 295.3924 L
286.8491 256.0697 L
303.3314 250.4542 L
f
1 1 0 0 (purple) 0.6847 x
302.2263 250.8307 m
302.2263 290.1533 L
287.2176 295.2669 L
287.2176 255.9442 L
302.2263 250.8307 L
f
1 1 0 0 (purple) 0.7083 x
301.1206 251.2073 m
301.1206 290.5301 L
287.5861 295.1413 L
287.5861 255.8186 L
301.1206 251.2073 L
f
1 1 0 0 (purple) 0.7319 x
300.0155 251.5839 m
300.0155 290.9066 L
287.9545 295.0158 L
287.9545 255.6931 L
300.0155 251.5839 L
f
1 1 0 0 (purple) 0.7556 x
298.9098 251.9606 m
298.9098 291.2833 L
288.323 294.8903 L
288.323 255.5676 L
298.9098 251.9606 L
f
1 1 0 0 (purple) 0.7792 x
297.8047 252.3371 m
297.8047 291.6598 L
288.6914 294.7648 L
288.6914 255.4421 L
297.8047 252.3371 L
f
1 1 0 0 (purple) 0.8028 x
296.6991 252.7138 m
296.6991 292.0365 L
289.0599 294.6392 L
289.0599 255.3165 L
296.6991 252.7138 L
f
1 1 0 0 (purple) 0.8264 x
295.594 253.0903 m
295.594 292.413 L
289.4283 294.5137 L
289.4283 255.191 L
295.594 253.0903 L
f
U
1 1 0 0 (purple) 0.85 x
294.4889 253.4668 m
294.4889 292.7895 L
289.7966 294.3882 L
289.7966 255.0655 L
294.4889 253.4668 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
365.8292 292.6727 m
365.8292 284.529 346.7847 277.9269 323.2929 277.9269 c
299.8011 277.9269 280.7568 284.529 280.7568 292.6727 C
280.7566 300.8165 299.8009 307.4189 323.2927 307.4192 c
346.7845 307.4196 365.8289 300.8179 365.8292 292.6741 C
365.8292 292.6727 L
f
u
1 1 0 0 (purple) 0.575 x
364.7804 292.6314 m
364.7804 284.7877 346.208 278.4288 323.2985 278.4288 c
300.3891 278.4288 281.8168 284.7877 281.8168 292.6314 C
281.8166 300.4751 300.3889 306.8342 323.2984 306.8346 c
346.2078 306.8349 364.7802 300.4764 364.7804 292.6326 C
364.7804 292.6314 L
f
1 1 0 0 (purple) 0.5 x
363.7317 292.5901 m
363.7317 285.0464 345.6313 278.9308 323.3042 278.9308 c
300.977 278.9308 282.8768 285.0464 282.8768 292.5901 C
282.8766 300.1336 300.9768 306.2496 323.304 306.2499 c
345.6312 306.2501 363.7315 300.135 363.7317 292.5912 C
363.7317 292.5901 L
f
1 1 0 0 (purple) 0.425 x
362.683 292.5486 m
362.683 285.3051 345.0547 279.4327 323.3099 279.4327 c
301.565 279.4327 283.9368 285.3051 283.9368 292.5486 C
283.9365 299.7923 301.5648 305.6649 323.3097 305.6652 c
345.0546 305.6655 362.6829 299.7935 362.683 292.5498 C
362.683 292.5486 L
f
1 1 0 0 (purple) 0.35 x
361.6342 292.5073 m
361.6342 285.5638 344.4781 279.9347 323.3155 279.9347 c
302.1529 279.9347 284.9968 285.5638 284.9968 292.5073 C
284.9966 299.4509 302.1527 305.0802 323.3153 305.0805 c
344.4778 305.0808 361.6341 299.4521 361.6342 292.5084 C
361.6342 292.5073 L
f
1 1 0 0 (purple) 0.275 x
360.5857 292.466 m
360.5857 285.8225 343.9014 280.4366 323.3211 280.4366 c
302.7408 280.4366 286.0567 285.8225 286.0567 292.466 C
286.0565 299.1095 302.7406 304.4956 323.3209 304.4959 c
343.9012 304.4962 360.5854 299.1106 360.5857 292.467 C
360.5857 292.466 L
f
U
1 1 0 0 (purple) 0.2 x
359.5369 292.4246 m
359.5369 286.0812 343.3248 280.9385 323.3267 280.9385 c
303.3287 280.9385 287.1167 286.0812 287.1167 292.4246 C
287.1165 298.7681 303.3285 303.9109 323.3266 303.9112 c
343.3246 303.9114 359.5367 298.7692 359.5369 292.4256 C
359.5369 292.4246 L
f
U
u
q
365.856 304.0641 m
365.856 295.9203 346.8116 289.3182 323.3199 289.3182 c
299.8281 289.3182 280.7837 295.9203 280.7837 304.0641 C
280.7837 331.3401 L
280.7837 339.4839 299.8281 346.0859 323.3199 346.0859 c
346.8116 346.0859 365.856 339.4839 365.856 331.3401 C
365.856 304.0641 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
365.856 304.0641 m
365.856 295.9203 346.8116 289.3182 323.3199 289.3182 c
299.8281 289.3182 280.7837 295.9203 280.7837 304.0641 C
280.7837 331.3401 L
280.7837 339.4839 299.8281 346.0859 323.3199 346.0859 c
346.8116 346.0859 365.856 339.4839 365.856 331.3401 C
365.856 304.0641 L
f
u
334.2815 278.576 m
334.2815 317.8988 L
276.5324 337.574 L
276.5324 298.2514 L
334.2815 278.576 L
f
u
1 1 0 0 (purple) 0.0236 x
333.1764 278.9526 m
333.1764 318.2752 L
276.9008 337.4485 L
276.9008 298.1258 L
333.1764 278.9526 L
f
1 1 0 0 (purple) 0.0472 x
332.0713 279.3291 m
332.0713 318.6518 L
277.2692 337.3231 L
277.2692 298.0003 L
332.0713 279.3291 L
f
1 1 0 0 (purple) 0.0708 x
330.9657 279.7057 m
330.9657 319.0285 L
277.6377 337.1975 L
277.6377 297.8746 L
330.9657 279.7057 L
f
1 1 0 0 (purple) 0.0944 x
329.8606 280.0823 m
329.8606 319.4051 L
278.0061 337.072 L
278.0061 297.7492 L
329.8606 280.0823 L
f
1 1 0 0 (purple) 0.1181 x
328.7549 280.4591 m
328.7549 319.7817 L
278.3747 336.9463 L
278.3747 297.6237 L
328.7549 280.4591 L
f
1 1 0 0 (purple) 0.1417 x
327.6498 280.8356 m
327.6498 320.1582 L
278.7431 336.8209 L
278.7431 297.4981 L
327.6498 280.8356 L
f
1 1 0 0 (purple) 0.1653 x
326.5441 281.2122 m
326.5441 320.535 L
279.1115 336.6952 L
279.1115 297.3726 L
326.5441 281.2122 L
f
1 1 0 0 (purple) 0.1889 x
325.439 281.5888 m
325.439 320.9114 L
279.4799 336.5698 L
279.4799 297.2472 L
325.439 281.5888 L
f
1 1 0 0 (purple) 0.2125 x
324.3334 281.9654 m
324.3334 321.2882 L
279.8485 336.4443 L
279.8485 297.1215 L
324.3334 281.9654 L
f
1 1 0 0 (purple) 0.2361 x
323.2283 282.3419 m
323.2283 321.6647 L
280.2169 336.3188 L
280.2169 296.996 L
323.2283 282.3419 L
f
1 1 0 0 (purple) 0.2597 x
322.1226 282.7187 m
322.1226 322.0413 L
280.5854 336.1932 L
280.5854 296.8704 L
322.1226 282.7187 L
f
1 1 0 0 (purple) 0.2833 x
321.0175 283.0951 m
321.0175 322.4179 L
280.9538 336.0677 L
280.9538 296.7449 L
321.0175 283.0951 L
f
1 1 0 0 (purple) 0.3069 x
319.9118 283.4719 m
319.9118 322.7946 L
281.3224 335.9421 L
281.3224 296.6195 L
319.9118 283.4719 L
f
1 1 0 0 (purple) 0.3305 x
318.8067 283.8484 m
318.8067 323.171 L
281.6907 335.8166 L
281.6907 296.4938 L
318.8067 283.8484 L
f
1 1 0 0 (purple) 0.3542 x
317.7011 284.225 m
317.7011 323.5478 L
282.0592 335.691 L
282.0592 296.3683 L
317.7011 284.225 L
f
1 1 0 0 (purple) 0.3778 x
316.596 284.6016 m
316.596 323.9243 L
282.4276 335.5655 L
282.4276 296.2427 L
316.596 284.6016 L
f
1 1 0 0 (purple) 0.4014 x
315.4903 284.9783 m
315.4903 324.3009 L
282.7962 335.44 L
282.7962 296.1173 L
315.4903 284.9783 L
f
1 1 0 0 (purple) 0.425 x
314.3852 285.3547 m
314.3852 324.6775 L
283.1645 335.3144 L
283.1645 295.9918 L
314.3852 285.3547 L
f
1 1 0 0 (purple) 0.4486 x
313.2801 285.7313 m
313.2801 325.054 L
283.5329 335.1889 L
283.5329 295.8663 L
313.2801 285.7313 L
f
1 1 0 0 (purple) 0.4722 x
312.1744 286.108 m
312.1744 325.4307 L
283.9014 335.0634 L
283.9014 295.7407 L
312.1744 286.108 L
f
1 1 0 0 (purple) 0.4958 x
311.0693 286.4846 m
311.0693 325.8072 L
284.2698 334.9378 L
284.2698 295.6152 L
311.0693 286.4846 L
f
1 1 0 0 (purple) 0.5195 x
309.9637 286.8612 m
309.9637 326.184 L
284.6384 334.8123 L
284.6384 295.4896 L
309.9637 286.8612 L
f
1 1 0 0 (purple) 0.5431 x
308.8586 287.2377 m
308.8586 326.5604 L
285.0068 334.6869 L
285.0068 295.3641 L
308.8586 287.2377 L
f
1 1 0 0 (purple) 0.5667 x
307.7529 287.6143 m
307.7529 326.9371 L
285.3754 334.5613 L
285.3754 295.2386 L
307.7529 287.6143 L
f
1 1 0 0 (purple) 0.5903 x
306.6478 287.9909 m
306.6478 327.3135 L
285.7436 334.4358 L
285.7436 295.113 L
306.6478 287.9909 L
f
1 1 0 0 (purple) 0.6139 x
305.5421 288.3677 m
305.5421 327.6903 L
286.1122 334.3101 L
286.1122 294.9875 L
305.5421 288.3677 L
f
1 1 0 0 (purple) 0.6375 x
304.437 288.7442 m
304.437 328.0668 L
286.4806 334.1847 L
286.4806 294.8619 L
304.437 288.7442 L
f
1 1 0 0 (purple) 0.6611 x
303.3314 289.1208 m
303.3314 328.4436 L
286.8491 334.059 L
286.8491 294.7364 L
303.3314 289.1208 L
f
1 1 0 0 (purple) 0.6847 x
302.2263 289.4974 m
302.2263 328.82 L
287.2176 333.9336 L
287.2176 294.6109 L
302.2263 289.4974 L
f
1 1 0 0 (purple) 0.7083 x
301.1206 289.874 m
301.1206 329.1968 L
287.5861 333.8079 L
287.5861 294.4853 L
301.1206 289.874 L
f
1 1 0 0 (purple) 0.7319 x
300.0155 290.2505 m
300.0155 329.5733 L
287.9545 333.6824 L
287.9545 294.3598 L
300.0155 290.2505 L
f
1 1 0 0 (purple) 0.7556 x
298.9098 290.6273 m
298.9098 329.9499 L
288.323 333.557 L
288.323 294.2342 L
298.9098 290.6273 L
f
1 1 0 0 (purple) 0.7792 x
297.8047 291.0037 m
297.8047 330.3265 L
288.6914 333.4315 L
288.6914 294.1087 L
297.8047 291.0037 L
f
1 1 0 0 (purple) 0.8028 x
296.6991 291.3805 m
296.6991 330.7032 L
289.0599 333.3059 L
289.0599 293.9832 L
296.6991 291.3805 L
f
1 1 0 0 (purple) 0.8264 x
295.594 291.757 m
295.594 331.0796 L
289.4283 333.1804 L
289.4283 293.8576 L
295.594 291.757 L
f
U
1 1 0 0 (purple) 0.85 x
294.4889 292.1334 m
294.4889 331.4562 L
289.7966 333.0549 L
289.7966 293.7322 L
294.4889 292.1334 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
365.8292 331.3394 m
365.8292 323.1957 346.7847 316.5935 323.2929 316.5935 c
299.8011 316.5935 280.7568 323.1957 280.7568 331.3394 C
280.7566 339.4832 299.8009 346.0856 323.2927 346.0859 c
346.7845 346.0863 365.8289 339.4846 365.8292 331.3408 C
365.8292 331.3394 L
f
u
1 1 0 0 (purple) 0.575 x
364.7804 331.298 m
364.7804 323.4544 346.208 317.0955 323.2985 317.0955 c
300.3891 317.0955 281.8168 323.4544 281.8168 331.298 C
281.8166 339.1417 300.3889 345.5009 323.2984 345.5012 c
346.2078 345.5016 364.7802 339.143 364.7804 331.2993 C
364.7804 331.298 L
f
1 1 0 0 (purple) 0.5 x
363.7317 331.2568 m
363.7317 323.7131 345.6313 317.5975 323.3042 317.5975 c
300.977 317.5975 282.8768 323.7131 282.8768 331.2568 C
282.8766 338.8003 300.9768 344.9163 323.304 344.9165 c
345.6312 344.9168 363.7315 338.8016 363.7317 331.2579 C
363.7317 331.2568 L
f
1 1 0 0 (purple) 0.425 x
362.683 331.2153 m
362.683 323.9718 345.0547 318.0993 323.3099 318.0993 c
301.565 318.0993 283.9368 323.9718 283.9368 331.2153 C
283.9365 338.4589 301.5648 344.3316 323.3097 344.3319 c
345.0546 344.3321 362.6829 338.4602 362.683 331.2165 C
362.683 331.2153 L
f
1 1 0 0 (purple) 0.35 x
361.6342 331.1739 m
361.6342 324.2304 344.4781 318.6013 323.3155 318.6013 c
302.1529 318.6013 284.9968 324.2304 284.9968 331.1739 C
284.9966 338.1175 302.1527 343.7469 323.3153 343.7472 c
344.4778 343.7474 361.6341 338.1188 361.6342 331.1751 C
361.6342 331.1739 L
f
1 1 0 0 (purple) 0.275 x
360.5857 331.1327 m
360.5857 324.4891 343.9014 319.1033 323.3211 319.1033 c
302.7408 319.1033 286.0567 324.4891 286.0567 331.1327 C
286.0565 337.7761 302.7406 343.1623 323.3209 343.1625 c
343.9012 343.1629 360.5854 337.7772 360.5857 331.1336 C
360.5857 331.1327 L
f
U
1 1 0 0 (purple) 0.2 x
359.5369 331.0913 m
359.5369 324.7479 343.3248 319.6052 323.3267 319.6052 c
303.3287 319.6052 287.1167 324.7479 287.1167 331.0913 C
287.1165 337.4347 303.3285 342.5776 323.3266 342.5778 c
343.3246 342.5781 359.5367 337.4358 359.5369 331.0923 C
359.5369 331.0913 L
f
U
u
q
365.856 344.9641 m
365.856 336.8203 346.8116 330.2182 323.3199 330.2182 c
299.8281 330.2182 280.7837 336.8203 280.7837 344.9641 C
280.7837 372.0736 L
280.7837 380.2174 299.8281 386.8195 323.3199 386.8195 c
346.8116 386.8195 365.856 380.2174 365.856 372.0736 C
365.856 344.9641 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
365.856 344.9641 m
365.856 336.8203 346.8116 330.2182 323.3199 330.2182 c
299.8281 330.2182 280.7837 336.8203 280.7837 344.9641 C
280.7837 372.0736 L
280.7837 380.2174 299.8281 386.8195 323.3199 386.8195 c
346.8116 386.8195 365.856 380.2174 365.856 372.0736 C
365.856 344.9641 L
f
u
334.2815 319.476 m
334.2815 358.6325 L
276.5324 378.3076 L
276.5324 339.1513 L
334.2815 319.476 L
f
u
1 1 0 0 (purple) 0.0236 x
333.1764 319.8526 m
333.1764 359.0089 L
276.9008 378.1821 L
276.9008 339.0258 L
333.1764 319.8526 L
f
1 1 0 0 (purple) 0.0472 x
332.0713 320.229 m
332.0713 359.3854 L
277.2692 378.0567 L
277.2692 338.9002 L
332.0713 320.229 L
f
1 1 0 0 (purple) 0.0708 x
330.9657 320.6058 m
330.9657 359.7621 L
277.6377 377.931 L
277.6377 338.7747 L
330.9657 320.6058 L
f
1 1 0 0 (purple) 0.0944 x
329.8606 320.9822 m
329.8606 360.1387 L
278.0061 377.8056 L
278.0061 338.6492 L
329.8606 320.9822 L
f
1 1 0 0 (purple) 0.1181 x
328.7549 321.359 m
328.7549 360.5153 L
278.3747 377.68 L
278.3747 338.5236 L
328.7549 321.359 L
f
1 1 0 0 (purple) 0.1417 x
327.6498 321.7355 m
327.6498 360.8919 L
278.7431 377.5545 L
278.7431 338.3981 L
327.6498 321.7355 L
f
1 1 0 0 (purple) 0.1653 x
326.5441 322.1122 m
326.5441 361.2686 L
279.1115 377.4289 L
279.1115 338.2726 L
326.5441 322.1122 L
f
1 1 0 0 (purple) 0.1889 x
325.439 322.4887 m
325.439 361.6451 L
279.4799 377.3034 L
279.4799 338.1471 L
325.439 322.4887 L
f
1 1 0 0 (purple) 0.2125 x
324.3334 322.8654 m
324.3334 362.0218 L
279.8485 377.1779 L
279.8485 338.0215 L
324.3334 322.8654 L
f
1 1 0 0 (purple) 0.2361 x
323.2283 323.2419 m
323.2283 362.3983 L
280.2169 377.0523 L
280.2169 337.8959 L
323.2283 323.2419 L
f
1 1 0 0 (purple) 0.2597 x
322.1226 323.6186 m
322.1226 362.775 L
280.5854 376.9268 L
280.5854 337.7704 L
322.1226 323.6186 L
f
1 1 0 0 (purple) 0.2833 x
321.0175 323.9952 m
321.0175 363.1514 L
280.9538 376.8013 L
280.9538 337.6449 L
321.0175 323.9952 L
f
1 1 0 0 (purple) 0.3069 x
319.9118 324.3718 m
319.9118 363.5282 L
281.3224 376.6757 L
281.3224 337.5194 L
319.9118 324.3718 L
f
1 1 0 0 (purple) 0.3305 x
318.8067 324.7483 m
318.8067 363.9047 L
281.6907 376.5502 L
281.6907 337.3938 L
318.8067 324.7483 L
f
1 1 0 0 (purple) 0.3542 x
317.7011 325.125 m
317.7011 364.2814 L
282.0592 376.4246 L
282.0592 337.2683 L
317.7011 325.125 L
f
1 1 0 0 (purple) 0.3778 x
316.596 325.5015 m
316.596 364.6578 L
282.4276 376.2992 L
282.4276 337.1427 L
316.596 325.5015 L
f
1 1 0 0 (purple) 0.4014 x
315.4903 325.8782 m
315.4903 365.0346 L
282.7962 376.1736 L
282.7962 337.0172 L
315.4903 325.8782 L
f
1 1 0 0 (purple) 0.425 x
314.3852 326.2547 m
314.3852 365.4111 L
283.1645 376.048 L
283.1645 336.8917 L
314.3852 326.2547 L
f
1 1 0 0 (purple) 0.4486 x
313.2801 326.6313 m
313.2801 365.7876 L
283.5329 375.9226 L
283.5329 336.7662 L
313.2801 326.6313 L
f
1 1 0 0 (purple) 0.4722 x
312.1744 327.0079 m
312.1744 366.1643 L
283.9014 375.797 L
283.9014 336.6407 L
312.1744 327.0079 L
f
1 1 0 0 (purple) 0.4958 x
311.0693 327.3845 m
311.0693 366.5409 L
284.2698 375.6715 L
284.2698 336.5151 L
311.0693 327.3845 L
f
1 1 0 0 (purple) 0.5195 x
309.9637 327.7612 m
309.9637 366.9176 L
284.6384 375.5459 L
284.6384 336.3895 L
309.9637 327.7612 L
f
1 1 0 0 (purple) 0.5431 x
308.8586 328.1376 m
308.8586 367.294 L
285.0068 375.4205 L
285.0068 336.264 L
308.8586 328.1376 L
f
1 1 0 0 (purple) 0.5667 x
307.7529 328.5144 m
307.7529 367.6708 L
285.3754 375.2948 L
285.3754 336.1385 L
307.7529 328.5144 L
f
1 1 0 0 (purple) 0.5903 x
306.6478 328.8909 m
306.6478 368.0472 L
285.7436 375.1694 L
285.7436 336.013 L
306.6478 328.8909 L
f
1 1 0 0 (purple) 0.6139 x
305.5421 329.2676 m
305.5421 368.424 L
286.1122 375.0437 L
286.1122 335.8874 L
305.5421 329.2676 L
f
1 1 0 0 (purple) 0.6375 x
304.437 329.6441 m
304.437 368.8004 L
286.4806 374.9183 L
286.4806 335.7619 L
304.437 329.6441 L
f
1 1 0 0 (purple) 0.6611 x
303.3314 330.0208 m
303.3314 369.1772 L
286.8491 374.7927 L
286.8491 335.6363 L
303.3314 330.0208 L
f
1 1 0 0 (purple) 0.6847 x
302.2263 330.3973 m
302.2263 369.5536 L
287.2176 374.6672 L
287.2176 335.5108 L
302.2263 330.3973 L
f
1 1 0 0 (purple) 0.7083 x
301.1206 330.774 m
301.1206 369.9303 L
287.5861 374.5416 L
287.5861 335.3853 L
301.1206 330.774 L
f
1 1 0 0 (purple) 0.7319 x
300.0155 331.1505 m
300.0155 370.3068 L
287.9545 374.4161 L
287.9545 335.2597 L
300.0155 331.1505 L
f
1 1 0 0 (purple) 0.7556 x
298.9098 331.5272 m
298.9098 370.6835 L
288.323 374.2905 L
288.323 335.1342 L
298.9098 331.5272 L
f
1 1 0 0 (purple) 0.7792 x
297.8047 331.9037 m
297.8047 371.0601 L
288.6914 374.1651 L
288.6914 335.0087 L
297.8047 331.9037 L
f
1 1 0 0 (purple) 0.8028 x
296.6991 332.2804 m
296.6991 371.4368 L
289.0599 374.0395 L
289.0599 334.8832 L
296.6991 332.2804 L
f
1 1 0 0 (purple) 0.8264 x
295.594 332.6569 m
295.594 371.8133 L
289.4283 373.914 L
289.4283 334.7576 L
295.594 332.6569 L
f
U
1 1 0 0 (purple) 0.85 x
294.4889 333.0334 m
294.4889 372.1898 L
289.7966 373.7885 L
289.7966 334.6321 L
294.4889 333.0334 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
365.8292 372.073 m
365.8292 363.9292 346.7847 357.3272 323.2929 357.3272 c
299.8011 357.3272 280.7568 363.9292 280.7568 372.073 C
280.7566 380.2168 299.8009 386.8192 323.2927 386.8195 c
346.7845 386.8199 365.8289 380.2182 365.8292 372.0744 C
365.8292 372.073 L
f
u
1 1 0 0 (purple) 0.575 x
364.7804 372.0317 m
364.7804 364.1879 346.208 357.8291 323.2985 357.8291 c
300.3891 357.8291 281.8168 364.1879 281.8168 372.0317 C
281.8166 379.8754 300.3889 386.2345 323.2984 386.2349 c
346.2078 386.2352 364.7802 379.8767 364.7804 372.0329 C
364.7804 372.0317 L
f
1 1 0 0 (purple) 0.5 x
363.7317 371.9903 m
363.7317 364.4467 345.6313 358.3311 323.3042 358.3311 c
300.977 358.3311 282.8768 364.4467 282.8768 371.9903 C
282.8766 379.5339 300.9768 385.6499 323.304 385.6502 c
345.6312 385.6504 363.7315 379.5353 363.7317 371.9915 C
363.7317 371.9903 L
f
1 1 0 0 (purple) 0.425 x
362.683 371.9489 m
362.683 364.7054 345.0547 358.833 323.3099 358.833 c
301.565 358.833 283.9368 364.7054 283.9368 371.9489 C
283.9365 379.1926 301.5648 385.0652 323.3097 385.0655 c
345.0546 385.0658 362.6829 379.1938 362.683 371.9501 C
362.683 371.9489 L
f
1 1 0 0 (purple) 0.35 x
361.6342 371.9076 m
361.6342 364.9641 344.4781 359.335 323.3155 359.335 c
302.1529 359.335 284.9968 364.9641 284.9968 371.9076 C
284.9966 378.8512 302.1527 384.4805 323.3153 384.4808 c
344.4778 384.4811 361.6341 378.8524 361.6342 371.9087 C
361.6342 371.9076 L
f
1 1 0 0 (purple) 0.275 x
360.5857 371.8663 m
360.5857 365.2228 343.9014 359.8369 323.3211 359.8369 c
302.7408 359.8369 286.0567 365.2228 286.0567 371.8663 C
286.0565 378.5098 302.7406 383.8959 323.3209 383.8962 c
343.9012 383.8964 360.5854 378.5109 360.5857 371.8673 C
360.5857 371.8663 L
f
U
1 1 0 0 (purple) 0.2 x
359.5369 371.8249 m
359.5369 365.4815 343.3248 360.3388 323.3267 360.3388 c
303.3287 360.3388 287.1167 365.4815 287.1167 371.8249 C
287.1165 378.1684 303.3285 383.3112 323.3266 383.3115 c
343.3246 383.3117 359.5367 378.1695 359.5369 371.8259 C
359.5369 371.8249 L
f
U
u
q
365.8292 386.9016 m
365.8292 378.7578 346.7849 372.1557 323.2931 372.1557 c
299.8013 372.1557 280.7569 378.7578 280.7569 386.9016 C
280.7569 417.0998 L
280.7569 425.2436 299.8013 431.8457 323.2931 431.8457 c
346.7849 431.8457 365.8292 425.2436 365.8292 417.0998 C
365.8292 386.9016 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
365.8292 386.9016 m
365.8292 378.7578 346.7849 372.1557 323.2931 372.1557 c
299.8013 372.1557 280.7569 378.7578 280.7569 386.9016 C
280.7569 417.0998 L
280.7569 425.2436 299.8013 431.8457 323.2931 431.8457 c
346.7849 431.8457 365.8292 425.2436 365.8292 417.0998 C
365.8292 386.9016 L
f
u
334.2547 361.4135 m
334.2547 403.6586 L
276.5056 423.3337 L
276.5056 381.0887 L
334.2547 361.4135 L
f
u
1 1 0 0 (purple) 0.0236 x
333.1497 361.79 m
333.1497 404.035 L
276.874 423.2083 L
276.874 380.9632 L
333.1497 361.79 L
f
1 1 0 0 (purple) 0.0472 x
332.0446 362.1665 m
332.0446 404.4116 L
277.2424 423.0828 L
277.2424 380.8377 L
332.0446 362.1665 L
f
1 1 0 0 (purple) 0.0708 x
330.9389 362.5433 m
330.9389 404.7882 L
277.611 422.9572 L
277.611 380.7121 L
330.9389 362.5433 L
f
1 1 0 0 (purple) 0.0944 x
329.8338 362.9197 m
329.8338 405.1648 L
277.9793 422.8317 L
277.9793 380.5867 L
329.8338 362.9197 L
f
1 1 0 0 (purple) 0.1181 x
328.7281 363.2965 m
328.7281 405.5415 L
278.3479 422.7062 L
278.3479 380.4611 L
328.7281 363.2965 L
f
1 1 0 0 (purple) 0.1417 x
327.623 363.6729 m
327.623 405.918 L
278.7163 422.5807 L
278.7163 380.3356 L
327.623 363.6729 L
f
1 1 0 0 (purple) 0.1653 x
326.5173 364.0496 m
326.5173 406.2947 L
279.0848 422.4551 L
279.0848 380.21 L
326.5173 364.0496 L
f
1 1 0 0 (purple) 0.1889 x
325.4122 364.4262 m
325.4122 406.6712 L
279.4532 422.3295 L
279.4532 380.0845 L
325.4122 364.4262 L
f
1 1 0 0 (purple) 0.2125 x
324.3066 364.8028 m
324.3066 407.0479 L
279.8217 422.204 L
279.8217 379.9589 L
324.3066 364.8028 L
f
1 1 0 0 (purple) 0.2361 x
323.2015 365.1793 m
323.2015 407.4244 L
280.1901 422.0785 L
280.1901 379.8334 L
323.2015 365.1793 L
f
1 1 0 0 (purple) 0.2597 x
322.0958 365.556 m
322.0958 407.8011 L
280.5587 421.9529 L
280.5587 379.7078 L
322.0958 365.556 L
f
1 1 0 0 (purple) 0.2833 x
320.9907 365.9326 m
320.9907 408.1776 L
280.927 421.8274 L
280.927 379.5824 L
320.9907 365.9326 L
f
1 1 0 0 (purple) 0.3069 x
319.885 366.3093 m
319.885 408.5543 L
281.2956 421.7018 L
281.2956 379.4567 L
319.885 366.3093 L
f
1 1 0 0 (purple) 0.3305 x
318.78 366.6857 m
318.78 408.9308 L
281.6639 421.5764 L
281.6639 379.3313 L
318.78 366.6857 L
f
1 1 0 0 (purple) 0.3542 x
317.6743 367.0625 m
317.6743 409.3075 L
282.0325 421.4508 L
282.0325 379.2057 L
317.6743 367.0625 L
f
1 1 0 0 (purple) 0.3778 x
316.5692 367.439 m
316.5692 409.684 L
282.4008 421.3253 L
282.4008 379.0803 L
316.5692 367.439 L
f
1 1 0 0 (purple) 0.4014 x
315.4636 367.8157 m
315.4636 410.0608 L
282.7694 421.1997 L
282.7694 378.9546 L
315.4636 367.8157 L
f
1 1 0 0 (purple) 0.425 x
314.3584 368.1922 m
314.3584 410.4372 L
283.1378 421.0742 L
283.1378 378.8292 L
314.3584 368.1922 L
f
1 1 0 0 (purple) 0.4486 x
313.2534 368.5687 m
313.2534 410.9107 L
283.5061 421.0456 L
283.5061 378.7037 L
313.2534 368.5687 L
f
1 1 0 0 (purple) 0.4722 x
312.1477 368.9454 m
312.1477 411.1904 L
283.8747 420.8231 L
283.8747 378.5781 L
312.1477 368.9454 L
f
1 1 0 0 (purple) 0.4958 x
311.0426 369.3219 m
311.0426 411.567 L
284.243 420.6976 L
284.243 378.4526 L
311.0426 369.3219 L
f
1 1 0 0 (purple) 0.5195 x
309.9369 369.6986 m
309.9369 411.9437 L
284.6116 420.5721 L
284.6116 378.327 L
309.9369 369.6986 L
f
1 1 0 0 (purple) 0.5431 x
308.8318 370.0751 m
308.8318 412.3202 L
284.98 420.4466 L
284.98 378.2015 L
308.8318 370.0751 L
f
1 1 0 0 (purple) 0.5667 x
307.7261 370.4518 m
307.7261 412.6969 L
285.3485 420.3209 L
285.3485 378.0759 L
307.7261 370.4518 L
f
1 1 0 0 (purple) 0.5903 x
306.6211 370.8283 m
306.6211 413.0734 L
285.7169 420.1955 L
285.7169 377.9505 L
306.6211 370.8283 L
f
1 1 0 0 (purple) 0.6139 x
305.5154 371.205 m
305.5154 413.4501 L
286.0854 420.0699 L
286.0854 377.8249 L
305.5154 371.205 L
f
1 1 0 0 (purple) 0.6375 x
304.4103 371.5816 m
304.4103 413.8266 L
286.4538 419.9444 L
286.4538 377.6993 L
304.4103 371.5816 L
f
1 1 0 0 (purple) 0.6611 x
303.3047 371.9583 m
303.3047 414.2034 L
286.8224 419.8188 L
286.8224 377.5738 L
303.3047 371.9583 L
f
1 1 0 0 (purple) 0.6847 x
302.1995 372.3348 m
302.1995 414.5798 L
287.1908 419.6934 L
287.1908 377.4483 L
302.1995 372.3348 L
f
1 1 0 0 (purple) 0.7083 x
301.0938 372.7115 m
301.0938 414.9565 L
287.5593 419.5678 L
287.5593 377.3227 L
301.0938 372.7115 L
f
1 1 0 0 (purple) 0.7319 x
299.9888 373.0879 m
299.9888 415.333 L
287.9277 419.4423 L
287.9277 377.1972 L
299.9888 373.0879 L
f
1 1 0 0 (purple) 0.7556 x
298.8831 373.4647 m
298.8831 415.7098 L
288.2962 419.3167 L
288.2962 377.0717 L
298.8831 373.4647 L
f
1 1 0 0 (purple) 0.7792 x
297.778 373.8412 m
297.778 416.0862 L
288.6646 419.1912 L
288.6646 376.9461 L
297.778 373.8412 L
f
1 1 0 0 (purple) 0.8028 x
296.6723 374.2179 m
296.6723 416.463 L
289.0331 419.0657 L
289.0331 376.8205 L
296.6723 374.2179 L
f
1 1 0 0 (purple) 0.8264 x
295.5672 374.5943 m
295.5672 416.8395 L
289.4015 418.9402 L
289.4015 376.695 L
295.5672 374.5943 L
f
U
1 1 0 0 (purple) 0.85 x
294.4622 374.9709 m
294.4622 417.216 L
289.7699 418.8146 L
289.7699 376.5696 L
294.4622 374.9709 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
365.8024 417.0991 m
365.8024 408.9554 346.7579 402.3533 323.2661 402.3533 c
299.7743 402.3533 280.73 408.9554 280.73 417.0991 C
280.7298 425.2429 299.7741 431.8454 323.2659 431.8457 c
346.7577 431.8461 365.8022 425.2444 365.8024 417.1005 C
365.8024 417.0991 L
f
U
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
382.1254 417.9016 m
382.1254 417.8997 L
382.1254 406.6206 355.7487 397.4767 323.2126 397.4767 c
290.6764 397.4767 264.3 406.6206 264.3 417.8997 C
S
0 G
318.5008 435.2349 m
294.915 458.8138 l
S
0 To
1 0 0 1 293.7758 456.6427 0 Tp
TP
-15.666 0 Td
0 Tr
0 O
0 g
1 w
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
9.5 0 Tl
0 Tc
0 Tw
(Plex) Tx 
(\r) TX 
TO
0 To
1 0 0 1 323.3199 388.8195 0 Tp
TP
-13.6533 0 Td
0 Tr
1 g
1 Ta
(Volume\r) Tx 
-0.6719 -9.5 Td
(element) Tx 
(\r) TX 
TO
0 To
1 0 0 1 323.3199 345.8195 0 Tp
TP
-13.6533 0 Td
0 Tr
(Volume\r) Tx 
-0.6719 -9.5 Td
(element) Tx 
(\r) TX 
TO
0 To
1 0 0 1 323.3199 305.3195 0 Tp
TP
-13.6533 0 Td
0 Tr
(Volume\r) Tx 
-0.6719 -9.5 Td
(element) Tx 
(\r) TX 
TO
0 To
1 0 0 1 323.3199 266.8195 0 Tp
TP
-13.6533 0 Td
0 Tr
(Volume\r) Tx 
-0.6719 -9.5 Td
(element) Tx 
(\r) TX 
TO
0 To
1 0 0 1 235.6375 343.2865 0 Tp
TP
-34.9238 0 Td
0 Tr
0 g
2 Ta
(Up to 128\r) Tx 
8.9629 -9.5 Td
(volume\r) Tx 
-6.7168 -9.5 Td
(elements) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
282.2286 401.9921 m
259 401.9921 l
250.3333 401.9921 249.5039 397.8294 249.5039 392.496 c
249.5039 345 l
249.5039 338.3333 245.2632 335.8951 240.1316 335.8951 c
S
282.2286 269.7981 m
259 269.7981 l
250.3333 269.7981 249.5039 273.9608 249.5039 279.2941 c
249.5039 326.7902 l
249.5039 333.4569 245.2632 335.8951 240.1316 335.8951 c
S
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

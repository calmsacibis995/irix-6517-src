%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (writng.dat.non.strip.vol.2.ai)
%%CreationDate: (10/2/95) (11:29 AM)
%%BoundingBox: 131 361 477 435
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (custom black)
%%+ (purple)
%%+ (yellow)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 0 1 0 (green)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%%+ 0 0 1 0 (yellow)
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 29 34 581 764
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 R
0 0 0 1 (custom black) 0 X
0 i
1 J 0 j 1.5 w 4 M []0 d
%AI3_Note:
0 D
351.8105 414.1956 m
362.9178 418.576 356.5627 427.62 344.228 422.9308 c
327.5834 427.0216 l
330.25 434.6883 316.9167 437.0216 313.25 428.355 C
301.9583 428.355 L
298.2917 437.0216 284.9583 434.6883 287.625 427.0216 c
270.9804 422.9308 l
258.6456 427.62 252.2906 418.576 263.3979 414.1956 c
S
0 0 1 0 (yellow) 0 X
0.5 w
351.8105 414.1956 m
362.9178 418.576 356.5627 427.62 344.228 422.9308 c
327.5834 427.0216 l
330.25 434.6883 316.9167 437.0216 313.25 428.355 C
301.9583 428.355 L
298.2917 437.0216 284.9583 434.6883 287.625 427.0216 c
270.9804 422.9308 l
258.6456 427.62 252.2906 418.576 263.3979 414.1956 c
S
0 0 0 1 (custom black) 0 X
1.5 w
228.5188 414.1956 m
239.6261 418.576 233.2711 427.62 220.9363 422.9308 c
204.2917 427.0216 l
206.9584 434.6883 193.625 437.0216 189.9584 428.355 C
178.6667 428.355 L
175 437.0216 161.6667 434.6883 164.3333 427.0216 c
147.6887 422.9308 l
135.354 427.62 128.9989 418.576 140.1062 414.1956 c
S
0 0 1 0 (yellow) 0 X
0.5 w
228.5188 414.1956 m
239.6261 418.576 233.2711 427.62 220.9363 422.9308 c
204.2917 427.0216 l
206.9584 434.6883 193.625 437.0216 189.9584 428.355 C
178.6667 428.355 L
175 437.0216 161.6667 434.6883 164.3333 427.0216 c
147.6887 422.9308 l
135.354 427.62 128.9989 418.576 140.1062 414.1956 c
S
u
u
0 O
1 1 0 0 (purple) 0 x
0 J 1 w
163.2554 375.2267 m
149.4605 377.9025 140.1347 383.0169 140.1347 388.8863 C
140.1347 414.508 L
140.1347 423.1465 160.336 430.1496 185.2548 430.1496 c
210.1735 430.1496 230.3747 423.1465 230.3747 414.508 C
230.3747 388.8863 L
230.3747 382.4855 218.9175 376.9825 203.1159 374.5611 c
195.0175 373 184.6754 373 v
174.3333 373 163.2554 375.2267 y
f
q
163.2554 375.2267 m
149.4605 377.9025 140.1347 383.0169 140.1347 388.8863 C
140.1347 414.508 L
140.1347 423.1465 160.336 430.1496 185.2548 430.1496 c
210.1735 430.1496 230.3747 423.1465 230.3747 414.508 C
230.3747 388.8863 L
230.3747 382.4855 218.9175 376.9825 203.1159 374.5611 c
197.3421 373 183.6667 373 v
169.9913 373 163.2554 375.2267 y
h
W
n
u
0 O
1 1 0 0 (purple) 0 x
196.8822 361.85 m
196.8822 400.2503 L
135.6253 421.1206 L
135.6253 382.7204 L
196.8822 361.85 L
f
u
1 1 0 0 (purple) 0.0236 x
195.71 362.2494 m
195.71 400.6496 L
136.016 420.9875 L
136.016 382.5873 L
195.71 362.2494 L
f
1 1 0 0 (purple) 0.0472 x
194.5379 362.6488 m
194.5379 401.049 L
136.4068 420.8544 L
136.4068 382.4541 L
194.5379 362.6488 L
f
1 1 0 0 (purple) 0.0708 x
193.365 363.0484 m
193.365 401.4486 L
136.7977 420.7212 L
136.7977 382.3209 L
193.365 363.0484 L
f
1 1 0 0 (purple) 0.0944 x
192.1928 363.4477 m
192.1928 401.848 L
137.1885 420.5881 L
137.1885 382.1878 L
192.1928 363.4477 L
f
1 1 0 0 (purple) 0.1181 x
191.0199 363.8473 m
191.0199 402.2476 L
137.5794 420.4549 L
137.5794 382.0546 L
191.0199 363.8473 L
f
1 1 0 0 (purple) 0.1417 x
189.8477 364.2467 m
189.8477 402.6469 L
137.9702 420.3217 L
137.9702 381.9215 L
189.8477 364.2467 L
f
1 1 0 0 (purple) 0.1653 x
188.6748 364.6463 m
188.6748 403.0465 L
138.3611 420.1886 L
138.3611 381.7883 L
188.6748 364.6463 L
f
1 1 0 0 (purple) 0.1889 x
187.5027 365.0457 m
187.5027 403.4459 L
138.7518 420.0554 L
138.7518 381.6552 L
187.5027 365.0457 L
f
1 1 0 0 (purple) 0.2125 x
186.3298 365.4453 m
186.3298 403.8455 L
139.1428 419.9222 L
139.1428 381.522 L
186.3298 365.4453 L
f
1 1 0 0 (purple) 0.2361 x
185.1576 365.8446 m
185.1576 404.2449 L
139.5335 419.7891 L
139.5335 381.3888 L
185.1576 365.8446 L
f
1 1 0 0 (purple) 0.2597 x
183.9848 366.2442 m
183.9848 404.6445 L
139.9245 419.6559 L
139.9245 381.2556 L
183.9848 366.2442 L
f
1 1 0 0 (purple) 0.2833 x
182.8125 366.6436 m
182.8125 405.0438 L
140.3152 419.5228 L
140.3152 381.1225 L
182.8125 366.6436 L
f
1 1 0 0 (purple) 0.3069 x
181.6397 367.0432 m
181.6397 405.4434 L
140.7062 419.3896 L
140.7062 380.9893 L
181.6397 367.0432 L
f
1 1 0 0 (purple) 0.3305 x
180.4675 367.4425 m
180.4675 405.8428 L
141.0969 419.2565 L
141.0969 380.8562 L
180.4675 367.4425 L
f
1 1 0 0 (purple) 0.3542 x
179.2946 367.8422 m
179.2946 406.2424 L
141.4878 419.1233 L
141.4878 380.723 L
179.2946 367.8422 L
f
1 1 0 0 (purple) 0.3778 x
178.1224 368.2415 m
178.1224 406.6418 L
141.8786 418.9901 L
141.8786 380.5899 L
178.1224 368.2415 L
f
1 1 0 0 (purple) 0.4014 x
176.9496 368.6411 m
176.9496 407.0414 L
142.2695 418.8569 L
142.2695 380.4567 L
176.9496 368.6411 L
f
1 1 0 0 (purple) 0.425 x
175.7774 369.0405 m
175.7774 407.4407 L
142.6602 418.7238 L
142.6602 380.3236 L
175.7774 369.0405 L
f
1 1 0 0 (purple) 0.4486 x
174.6052 369.4399 m
174.6052 407.8401 L
143.051 418.5907 L
143.051 380.1905 L
174.6052 369.4399 L
f
1 1 0 0 (purple) 0.4722 x
173.4323 369.8394 m
173.4323 408.2397 L
143.442 418.4575 L
143.442 380.0572 L
173.4323 369.8394 L
f
1 1 0 0 (purple) 0.4958 x
172.2601 370.2388 m
172.2601 408.6391 L
143.8327 418.3244 L
143.8327 379.9241 L
172.2601 370.2388 L
f
1 1 0 0 (purple) 0.5195 x
171.0873 370.6384 m
171.0873 409.0387 L
144.2236 418.1912 L
144.2236 379.7909 L
171.0873 370.6384 L
f
1 1 0 0 (purple) 0.5431 x
169.9151 371.0378 m
169.9151 409.438 L
144.6144 418.058 L
144.6144 379.6578 L
169.9151 371.0378 L
f
1 1 0 0 (purple) 0.5667 x
168.7422 371.4374 m
168.7422 409.8376 L
145.0054 417.9248 L
145.0054 379.5246 L
168.7422 371.4374 L
f
1 1 0 0 (purple) 0.5903 x
167.57 371.8367 m
167.57 410.237 L
145.396 417.7917 L
145.396 379.3915 L
167.57 371.8367 L
f
1 1 0 0 (purple) 0.6139 x
166.3972 372.2363 m
166.3972 410.6366 L
145.787 417.6585 L
145.787 379.2583 L
166.3972 372.2363 L
f
1 1 0 0 (purple) 0.6375 x
165.2249 372.6357 m
165.2249 411.036 L
146.1777 417.5254 L
146.1777 379.1251 L
165.2249 372.6357 L
f
1 1 0 0 (purple) 0.6611 x
164.0522 373.0353 m
164.0522 411.4356 L
146.5687 417.3922 L
146.5687 378.992 L
164.0522 373.0353 L
f
1 1 0 0 (purple) 0.6847 x
162.8799 373.4347 m
162.8799 411.8349 L
146.9594 417.2591 L
146.9594 378.8588 L
162.8799 373.4347 L
f
1 1 0 0 (purple) 0.7083 x
161.707 373.8343 m
161.707 412.2345 L
147.3504 417.1259 L
147.3504 378.7256 L
161.707 373.8343 L
f
1 1 0 0 (purple) 0.7319 x
160.5348 374.2336 m
160.5348 412.6339 L
147.7411 416.9928 L
147.7411 378.5925 L
160.5348 374.2336 L
f
1 1 0 0 (purple) 0.7556 x
159.362 374.6332 m
159.362 413.0335 L
148.132 416.8596 L
148.132 378.4593 L
159.362 374.6332 L
f
1 1 0 0 (purple) 0.7792 x
158.1898 375.0326 m
158.1898 413.4329 L
148.5228 416.7264 L
148.5228 378.3262 L
158.1898 375.0326 L
f
1 1 0 0 (purple) 0.8028 x
157.0169 375.4322 m
157.0169 413.8325 L
148.9137 416.5932 L
148.9137 378.193 L
157.0169 375.4322 L
f
1 1 0 0 (purple) 0.8264 x
155.8447 375.8315 m
155.8447 414.2318 L
149.3045 416.4601 L
149.3045 378.0598 L
155.8447 375.8315 L
f
U
1 1 0 0 (purple) 0.85 x
154.6725 376.2309 m
154.6725 414.6312 L
149.6952 416.327 L
149.6952 377.9267 L
154.6725 376.2309 L
f
U
Q
U
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
230.3462 414.5073 m
230.3462 405.8689 210.1449 398.8657 185.2262 398.8657 c
160.3074 398.8657 140.1062 405.8689 140.1062 414.5073 C
140.106 423.1458 160.3072 430.1493 185.2259 430.1496 c
210.1447 430.15 230.346 423.1473 230.3462 414.5087 C
230.3462 414.5073 L
f
u
0 R
0 0 1 0 (yellow) 0 X
0.5 w
201.5143 428.9207 m
163.2816 400.8761 l
163.2816 375.5178 l
S
223.1958 422.8675 m
142.1716 409.5606 l
142.1716 384.2023 l
S
147.6887 423.2425 m
227.2743 408.809 l
227.2743 383.4507 l
S
170.7608 429.2926 m
203.0977 400.1593 l
203.0977 374.551 l
S
U
U
u
u
0 O
1 1 0 0 (purple) 0 x
1 w
286.2839 375.2267 m
272.489 377.9025 263.1632 383.0169 263.1632 388.8863 C
263.1632 414.508 L
263.1632 423.1465 283.3645 430.1496 308.2833 430.1496 c
333.202 430.1496 353.4032 423.1465 353.4032 414.508 C
353.4032 388.8863 L
353.4032 382.4855 341.946 376.9825 326.1444 374.5611 c
318.046 373 307.7039 373 v
297.3618 373 286.2839 375.2267 y
f
q
286.2839 375.2267 m
272.489 377.9025 263.1632 383.0169 263.1632 388.8863 C
263.1632 414.508 L
263.1632 423.1465 283.3645 430.1496 308.2833 430.1496 c
333.202 430.1496 353.4032 423.1465 353.4032 414.508 C
353.4032 388.8863 L
353.4032 382.4855 341.946 376.9825 326.1444 374.5611 c
320.3706 373 306.6952 373 v
293.0198 373 286.2839 375.2267 y
h
W
n
u
0 O
1 1 0 0 (purple) 0 x
319.9107 361.85 m
319.9107 400.2503 L
258.6538 421.1206 L
258.6538 382.7204 L
319.9107 361.85 L
f
u
1 1 0 0 (purple) 0.0236 x
318.7385 362.2494 m
318.7385 400.6496 L
259.0445 420.9875 L
259.0445 382.5873 L
318.7385 362.2494 L
f
1 1 0 0 (purple) 0.0472 x
317.5664 362.6488 m
317.5664 401.049 L
259.4353 420.8544 L
259.4353 382.4541 L
317.5664 362.6488 L
f
1 1 0 0 (purple) 0.0708 x
316.3935 363.0484 m
316.3935 401.4486 L
259.8262 420.7212 L
259.8262 382.3209 L
316.3935 363.0484 L
f
1 1 0 0 (purple) 0.0944 x
315.2213 363.4477 m
315.2213 401.848 L
260.217 420.5881 L
260.217 382.1878 L
315.2213 363.4477 L
f
1 1 0 0 (purple) 0.1181 x
314.0484 363.8473 m
314.0484 402.2476 L
260.6079 420.4549 L
260.6079 382.0546 L
314.0484 363.8473 L
f
1 1 0 0 (purple) 0.1417 x
312.8762 364.2467 m
312.8762 402.6469 L
260.9987 420.3217 L
260.9987 381.9215 L
312.8762 364.2467 L
f
1 1 0 0 (purple) 0.1653 x
311.7033 364.6463 m
311.7033 403.0465 L
261.3896 420.1886 L
261.3896 381.7883 L
311.7033 364.6463 L
f
1 1 0 0 (purple) 0.1889 x
310.5312 365.0457 m
310.5312 403.4459 L
261.7803 420.0554 L
261.7803 381.6552 L
310.5312 365.0457 L
f
1 1 0 0 (purple) 0.2125 x
309.3583 365.4453 m
309.3583 403.8455 L
262.1713 419.9222 L
262.1713 381.522 L
309.3583 365.4453 L
f
1 1 0 0 (purple) 0.2361 x
308.1861 365.8446 m
308.1861 404.2449 L
262.562 419.7891 L
262.562 381.3888 L
308.1861 365.8446 L
f
1 1 0 0 (purple) 0.2597 x
307.0133 366.2442 m
307.0133 404.6445 L
262.953 419.6559 L
262.953 381.2556 L
307.0133 366.2442 L
f
1 1 0 0 (purple) 0.2833 x
305.841 366.6436 m
305.841 405.0438 L
263.3437 419.5228 L
263.3437 381.1225 L
305.841 366.6436 L
f
1 1 0 0 (purple) 0.3069 x
304.6682 367.0432 m
304.6682 405.4434 L
263.7347 419.3896 L
263.7347 380.9893 L
304.6682 367.0432 L
f
1 1 0 0 (purple) 0.3305 x
303.496 367.4425 m
303.496 405.8428 L
264.1254 419.2565 L
264.1254 380.8562 L
303.496 367.4425 L
f
1 1 0 0 (purple) 0.3542 x
302.3231 367.8422 m
302.3231 406.2424 L
264.5163 419.1233 L
264.5163 380.723 L
302.3231 367.8422 L
f
1 1 0 0 (purple) 0.3778 x
301.1509 368.2415 m
301.1509 406.6418 L
264.9071 418.9901 L
264.9071 380.5899 L
301.1509 368.2415 L
f
1 1 0 0 (purple) 0.4014 x
299.9781 368.6411 m
299.9781 407.0414 L
265.298 418.8569 L
265.298 380.4567 L
299.9781 368.6411 L
f
1 1 0 0 (purple) 0.425 x
298.8059 369.0405 m
298.8059 407.4407 L
265.6887 418.7238 L
265.6887 380.3236 L
298.8059 369.0405 L
f
1 1 0 0 (purple) 0.4486 x
297.6337 369.4399 m
297.6337 407.8401 L
266.0795 418.5907 L
266.0795 380.1905 L
297.6337 369.4399 L
f
1 1 0 0 (purple) 0.4722 x
296.4608 369.8394 m
296.4608 408.2397 L
266.4705 418.4575 L
266.4705 380.0572 L
296.4608 369.8394 L
f
1 1 0 0 (purple) 0.4958 x
295.2886 370.2388 m
295.2886 408.6391 L
266.8612 418.3244 L
266.8612 379.9241 L
295.2886 370.2388 L
f
1 1 0 0 (purple) 0.5195 x
294.1158 370.6384 m
294.1158 409.0387 L
267.2521 418.1912 L
267.2521 379.7909 L
294.1158 370.6384 L
f
1 1 0 0 (purple) 0.5431 x
292.9436 371.0378 m
292.9436 409.438 L
267.6429 418.058 L
267.6429 379.6578 L
292.9436 371.0378 L
f
1 1 0 0 (purple) 0.5667 x
291.7707 371.4374 m
291.7707 409.8376 L
268.0339 417.9248 L
268.0339 379.5246 L
291.7707 371.4374 L
f
1 1 0 0 (purple) 0.5903 x
290.5985 371.8367 m
290.5985 410.237 L
268.4245 417.7917 L
268.4245 379.3915 L
290.5985 371.8367 L
f
1 1 0 0 (purple) 0.6139 x
289.4257 372.2363 m
289.4257 410.6366 L
268.8155 417.6585 L
268.8155 379.2583 L
289.4257 372.2363 L
f
1 1 0 0 (purple) 0.6375 x
288.2534 372.6357 m
288.2534 411.036 L
269.2062 417.5254 L
269.2062 379.1251 L
288.2534 372.6357 L
f
1 1 0 0 (purple) 0.6611 x
287.0807 373.0353 m
287.0807 411.4356 L
269.5972 417.3922 L
269.5972 378.992 L
287.0807 373.0353 L
f
1 1 0 0 (purple) 0.6847 x
285.9084 373.4347 m
285.9084 411.8349 L
269.9879 417.2591 L
269.9879 378.8588 L
285.9084 373.4347 L
f
1 1 0 0 (purple) 0.7083 x
284.7355 373.8343 m
284.7355 412.2345 L
270.3789 417.1259 L
270.3789 378.7256 L
284.7355 373.8343 L
f
1 1 0 0 (purple) 0.7319 x
283.5633 374.2336 m
283.5633 412.6339 L
270.7696 416.9928 L
270.7696 378.5925 L
283.5633 374.2336 L
f
1 1 0 0 (purple) 0.7556 x
282.3905 374.6332 m
282.3905 413.0335 L
271.1605 416.8596 L
271.1605 378.4593 L
282.3905 374.6332 L
f
1 1 0 0 (purple) 0.7792 x
281.2183 375.0326 m
281.2183 413.4329 L
271.5513 416.7264 L
271.5513 378.3262 L
281.2183 375.0326 L
f
1 1 0 0 (purple) 0.8028 x
280.0454 375.4322 m
280.0454 413.8325 L
271.9422 416.5932 L
271.9422 378.193 L
280.0454 375.4322 L
f
1 1 0 0 (purple) 0.8264 x
278.8732 375.8315 m
278.8732 414.2318 L
272.333 416.4601 L
272.333 378.0598 L
278.8732 375.8315 L
f
U
1 1 0 0 (purple) 0.85 x
277.701 376.2309 m
277.701 414.6312 L
272.7237 416.327 L
272.7237 377.9267 L
277.701 376.2309 L
f
U
Q
U
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
353.3747 414.5073 m
353.3747 405.8689 333.1734 398.8657 308.2547 398.8657 c
283.3359 398.8657 263.1347 405.8689 263.1347 414.5073 C
263.1345 423.1458 283.3357 430.1493 308.2544 430.1496 c
333.1732 430.15 353.3745 423.1473 353.3747 414.5087 C
353.3747 414.5073 L
f
u
0 R
0 0 1 0 (yellow) 0 X
0.5 w
324.5428 428.9207 m
286.3101 400.8761 l
286.3101 375.5178 l
S
346.2243 422.8675 m
265.2001 409.5606 l
265.2001 384.2023 l
S
270.7172 423.2425 m
350.3028 408.809 l
350.3028 383.4507 l
S
293.7893 429.2926 m
326.1262 400.1593 l
326.1262 374.551 l
S
U
U
u
u
0 O
1 1 0 0 (purple) 0 x
1 w
409.3124 375.2267 m
395.5175 377.9025 386.1917 383.0169 386.1917 388.8863 C
386.1917 414.508 L
386.1917 423.1465 406.393 430.1496 431.3118 430.1496 c
456.2305 430.1496 476.4317 423.1465 476.4317 414.508 C
476.4317 388.8863 L
476.4317 382.4855 464.9745 376.9825 449.1729 374.5611 c
441.0744 373 430.7324 373 v
420.3903 373 409.3124 375.2267 y
f
q
409.3124 375.2267 m
395.5175 377.9025 386.1917 383.0169 386.1917 388.8863 C
386.1917 414.508 L
386.1917 423.1465 406.393 430.1496 431.3118 430.1496 c
456.2305 430.1496 476.4317 423.1465 476.4317 414.508 C
476.4317 388.8863 L
476.4317 382.4855 464.9745 376.9825 449.1729 374.5611 c
443.399 373 429.7236 373 v
416.0482 373 409.3124 375.2267 y
h
W
n
u
0 O
1 1 0 0 (purple) 0 x
442.9392 361.85 m
442.9392 400.2503 L
381.6823 421.1206 L
381.6823 382.7204 L
442.9392 361.85 L
f
u
1 1 0 0 (purple) 0.0236 x
441.767 362.2494 m
441.767 400.6496 L
382.073 420.9875 L
382.073 382.5873 L
441.767 362.2494 L
f
1 1 0 0 (purple) 0.0472 x
440.5949 362.6488 m
440.5949 401.049 L
382.4638 420.8544 L
382.4638 382.4541 L
440.5949 362.6488 L
f
1 1 0 0 (purple) 0.0708 x
439.422 363.0484 m
439.422 401.4486 L
382.8547 420.7212 L
382.8547 382.3209 L
439.422 363.0484 L
f
1 1 0 0 (purple) 0.0944 x
438.2498 363.4477 m
438.2498 401.848 L
383.2455 420.5881 L
383.2455 382.1878 L
438.2498 363.4477 L
f
1 1 0 0 (purple) 0.1181 x
437.0769 363.8473 m
437.0769 402.2476 L
383.6364 420.4549 L
383.6364 382.0546 L
437.0769 363.8473 L
f
1 1 0 0 (purple) 0.1417 x
435.9047 364.2467 m
435.9047 402.6469 L
384.0272 420.3217 L
384.0272 381.9215 L
435.9047 364.2467 L
f
1 1 0 0 (purple) 0.1653 x
434.7318 364.6463 m
434.7318 403.0465 L
384.4181 420.1886 L
384.4181 381.7883 L
434.7318 364.6463 L
f
1 1 0 0 (purple) 0.1889 x
433.5597 365.0457 m
433.5597 403.4459 L
384.8088 420.0554 L
384.8088 381.6552 L
433.5597 365.0457 L
f
1 1 0 0 (purple) 0.2125 x
432.3868 365.4453 m
432.3868 403.8455 L
385.1998 419.9222 L
385.1998 381.522 L
432.3868 365.4453 L
f
1 1 0 0 (purple) 0.2361 x
431.2146 365.8446 m
431.2146 404.2449 L
385.5905 419.7891 L
385.5905 381.3888 L
431.2146 365.8446 L
f
1 1 0 0 (purple) 0.2597 x
430.0418 366.2442 m
430.0418 404.6445 L
385.9815 419.6559 L
385.9815 381.2556 L
430.0418 366.2442 L
f
1 1 0 0 (purple) 0.2833 x
428.8695 366.6436 m
428.8695 405.0438 L
386.3722 419.5228 L
386.3722 381.1225 L
428.8695 366.6436 L
f
1 1 0 0 (purple) 0.3069 x
427.6967 367.0432 m
427.6967 405.4434 L
386.7632 419.3896 L
386.7632 380.9893 L
427.6967 367.0432 L
f
1 1 0 0 (purple) 0.3305 x
426.5245 367.4425 m
426.5245 405.8428 L
387.1539 419.2565 L
387.1539 380.8562 L
426.5245 367.4425 L
f
1 1 0 0 (purple) 0.3542 x
425.3516 367.8422 m
425.3516 406.2424 L
387.5448 419.1233 L
387.5448 380.723 L
425.3516 367.8422 L
f
1 1 0 0 (purple) 0.3778 x
424.1794 368.2415 m
424.1794 406.6418 L
387.9356 418.9901 L
387.9356 380.5899 L
424.1794 368.2415 L
f
1 1 0 0 (purple) 0.4014 x
423.0066 368.6411 m
423.0066 407.0414 L
388.3265 418.8569 L
388.3265 380.4567 L
423.0066 368.6411 L
f
1 1 0 0 (purple) 0.425 x
421.8344 369.0405 m
421.8344 407.4407 L
388.7172 418.7238 L
388.7172 380.3236 L
421.8344 369.0405 L
f
1 1 0 0 (purple) 0.4486 x
420.6622 369.4399 m
420.6622 407.8401 L
389.108 418.5907 L
389.108 380.1905 L
420.6622 369.4399 L
f
1 1 0 0 (purple) 0.4722 x
419.4893 369.8394 m
419.4893 408.2397 L
389.499 418.4575 L
389.499 380.0572 L
419.4893 369.8394 L
f
1 1 0 0 (purple) 0.4958 x
418.3171 370.2388 m
418.3171 408.6391 L
389.8897 418.3244 L
389.8897 379.9241 L
418.3171 370.2388 L
f
1 1 0 0 (purple) 0.5195 x
417.1443 370.6384 m
417.1443 409.0387 L
390.2806 418.1912 L
390.2806 379.7909 L
417.1443 370.6384 L
f
1 1 0 0 (purple) 0.5431 x
415.9721 371.0378 m
415.9721 409.438 L
390.6714 418.058 L
390.6714 379.6578 L
415.9721 371.0378 L
f
1 1 0 0 (purple) 0.5667 x
414.7992 371.4374 m
414.7992 409.8376 L
391.0624 417.9248 L
391.0624 379.5246 L
414.7992 371.4374 L
f
1 1 0 0 (purple) 0.5903 x
413.627 371.8367 m
413.627 410.237 L
391.453 417.7917 L
391.453 379.3915 L
413.627 371.8367 L
f
1 1 0 0 (purple) 0.6139 x
412.4542 372.2363 m
412.4542 410.6366 L
391.844 417.6585 L
391.844 379.2583 L
412.4542 372.2363 L
f
1 1 0 0 (purple) 0.6375 x
411.2819 372.6357 m
411.2819 411.036 L
392.2347 417.5254 L
392.2347 379.1251 L
411.2819 372.6357 L
f
1 1 0 0 (purple) 0.6611 x
410.1092 373.0353 m
410.1092 411.4356 L
392.6257 417.3922 L
392.6257 378.992 L
410.1092 373.0353 L
f
1 1 0 0 (purple) 0.6847 x
408.9369 373.4347 m
408.9369 411.8349 L
393.0164 417.2591 L
393.0164 378.8588 L
408.9369 373.4347 L
f
1 1 0 0 (purple) 0.7083 x
407.764 373.8343 m
407.764 412.2345 L
393.4074 417.1259 L
393.4074 378.7256 L
407.764 373.8343 L
f
1 1 0 0 (purple) 0.7319 x
406.5918 374.2336 m
406.5918 412.6339 L
393.7981 416.9928 L
393.7981 378.5925 L
406.5918 374.2336 L
f
1 1 0 0 (purple) 0.7556 x
405.419 374.6332 m
405.419 413.0335 L
394.189 416.8596 L
394.189 378.4593 L
405.419 374.6332 L
f
1 1 0 0 (purple) 0.7792 x
404.2468 375.0326 m
404.2468 413.4329 L
394.5798 416.7264 L
394.5798 378.3262 L
404.2468 375.0326 L
f
1 1 0 0 (purple) 0.8028 x
403.0739 375.4322 m
403.0739 413.8325 L
394.9707 416.5932 L
394.9707 378.193 L
403.0739 375.4322 L
f
1 1 0 0 (purple) 0.8264 x
401.9017 375.8315 m
401.9017 414.2318 L
395.3615 416.4601 L
395.3615 378.0598 L
401.9017 375.8315 L
f
U
1 1 0 0 (purple) 0.85 x
400.7295 376.2309 m
400.7295 414.6312 L
395.7522 416.327 L
395.7522 377.9267 L
400.7295 376.2309 L
f
U
Q
U
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
476.4032 414.5073 m
476.4032 405.8689 456.2019 398.8657 431.2832 398.8657 c
406.3644 398.8657 386.1632 405.8689 386.1632 414.5073 C
386.163 423.1458 406.3642 430.1493 431.2829 430.1496 c
456.2017 430.15 476.403 423.1473 476.4032 414.5087 C
476.4032 414.5073 L
f
u
0 R
0 0 1 0 (yellow) 0 X
0.5 w
447.5713 428.9207 m
409.3386 400.8761 l
409.3386 375.5178 l
S
469.2528 422.8675 m
388.2286 409.5606 l
388.2286 384.2023 l
S
393.7457 423.2425 m
473.3313 408.809 l
473.3313 383.4507 l
S
416.8178 429.2926 m
449.1547 400.1593 l
449.1547 374.551 l
S
U
U
0 0 0 1 (custom black) 0 X
1 J 1.5 w
147.0833 400.25 m
130.3333 393.6667 127 402.6667 140.182 406.2319 c
S
223.0833 400.6458 m
239.8333 394.0625 243.1667 403.0625 229.9846 406.6278 c
S
208.625 397.0625 m
220.2917 390.7292 209 384 198.3333 393.3333 c
S
170 394.6667 m
170.6667 378.6667 190 362.6667 226.6667 362.6667 c
263.3333 362.6667 280.6667 396.6667 y
S
0 0 1 0 (yellow) 0 X
0.5 w
147.0833 400.25 m
130.3333 393.6667 127 402.6667 140.182 406.2319 c
S
223.0833 400.6458 m
239.8333 394.0625 243.1667 403.0625 229.9846 406.6278 c
S
208.625 397.0625 m
220.2917 390.7292 209 384 198.3333 393.3333 c
S
170 394.6667 m
170.6667 378.6667 190 362.6667 226.6667 362.6667 c
263.3333 362.6667 280.6667 396.6667 y
S
0 O
0 0 1 0 (yellow) 0 x
0 G
0 J
135.4768 402.2953 m
140.8695 406.5444 L
134.0051 406.6728 L
135.4768 402.2953 L
b
228.8634 401.1725 m
222 401 L
227.4199 396.7856 L
228.8634 401.1725 L
b
202.7527 392.6708 m
196.5385 395.5894 L
199.4979 389.3945 L
202.7527 392.6708 L
b
280.1958 391.1103 m
281.4862 397.8534 L
276.2161 393.4533 L
280.1958 391.1103 L
b
0 0 0 1 (custom black) 0 X
1 J 1.5 w
270.375 400.25 m
253.625 393.6667 250.2917 402.6667 263.4737 406.2319 c
S
346.375 400.6458 m
363.125 394.0625 366.4583 403.0625 353.2763 406.6278 c
S
331.9166 397.0625 m
343.5833 390.7292 332.2917 384 321.625 393.3333 c
S
293.2917 394.6667 m
293.9583 378.6667 313.2917 362.6667 349.9583 362.6667 c
386.625 362.6667 403.9583 396.6667 y
S
0 0 1 0 (yellow) 0 X
0.5 w
270.375 400.25 m
253.625 393.6667 250.2917 402.6667 263.4737 406.2319 c
S
346.375 400.6458 m
363.125 394.0625 366.4583 403.0625 353.2763 406.6278 c
S
331.9166 397.0625 m
343.5833 390.7292 332.2917 384 321.625 393.3333 c
S
293.2917 394.6667 m
293.9583 378.6667 313.2917 362.6667 349.9583 362.6667 c
386.625 362.6667 403.9583 396.6667 y
S
0 O
0 0 1 0 (yellow) 0 x
0 G
0 J
258.7684 402.2953 m
264.1611 406.5444 L
257.2968 406.6728 L
258.7684 402.2953 L
b
352.155 401.1725 m
345.2917 401 L
350.7115 396.7856 L
352.155 401.1725 L
b
326.0444 392.6708 m
319.8301 395.5894 L
322.7896 389.3945 L
326.0444 392.6708 L
b
403.4874 391.1103 m
404.7779 397.8534 L
399.5077 393.4533 L
403.4874 391.1103 L
b
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (volume.composition.ai)
%%CreationDate: (3/18/99) (11:18 AM)
%%BoundingBox: 158 238 401 438
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (purple)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 1 0 0 (purple)
%AI3_TemplateBox: 277 365 277 365
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
1 1 0 0 (purple) 0.85 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
325.1263 259.179 m
325.1263 247.8998 298.75 238.7558 266.2138 238.7558 c
233.6776 238.7558 207.3011 247.8998 207.3011 259.179 C
207.3011 394.5117 L
207.3011 405.7909 233.6776 414.9349 266.2138 414.9349 c
298.75 414.9349 325.1263 405.7909 325.1263 394.5117 C
325.1263 259.179 L
f
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
207.3009 259.1753 m
207.3009 259.1772 L
207.3008 270.4562 233.6773 279.6006 266.2134 279.6011 c
298.7496 279.6016 325.1261 270.458 325.1263 259.179 C
S
u
q
1 w
308.5368 260.8378 m
308.5368 252.694 289.4925 246.0919 266.0007 246.0919 c
242.5089 246.0919 223.4645 252.694 223.4645 260.8378 C
223.4645 297.9474 L
223.4645 306.0912 242.5089 312.6932 266.0007 312.6932 c
289.4925 312.6932 308.5368 306.0912 308.5368 297.9474 C
308.5368 260.8378 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
308.5368 260.8378 m
308.5368 252.694 289.4925 246.0919 266.0007 246.0919 c
242.5089 246.0919 223.4645 252.694 223.4645 260.8378 C
223.4645 297.9474 L
223.4645 306.0912 242.5089 312.6932 266.0007 312.6932 c
289.4925 312.6932 308.5368 306.0912 308.5368 297.9474 C
308.5368 260.8378 L
f
u
276.9624 235.3497 m
276.9624 284.5062 L
219.2133 304.1813 L
219.2133 255.025 L
276.9624 235.3497 L
f
u
1 1 0 0 (purple) 0.0236 x
275.8573 235.7263 m
275.8573 284.8826 L
219.5816 304.0558 L
219.5816 254.8995 L
275.8573 235.7263 L
f
1 1 0 0 (purple) 0.0472 x
274.7522 236.1027 m
274.7522 285.2591 L
219.95 303.9304 L
219.95 254.7739 L
274.7522 236.1027 L
f
1 1 0 0 (purple) 0.0708 x
273.6465 236.4795 m
273.6465 285.6358 L
220.3186 303.8048 L
220.3186 254.6484 L
273.6465 236.4795 L
f
1 1 0 0 (purple) 0.0944 x
272.5415 236.856 m
272.5415 286.0124 L
220.687 303.6793 L
220.687 254.5229 L
272.5415 236.856 L
f
1 1 0 0 (purple) 0.1181 x
271.4358 237.2327 m
271.4358 286.389 L
221.0555 303.5537 L
221.0555 254.3973 L
271.4358 237.2327 L
f
1 1 0 0 (purple) 0.1417 x
270.3307 237.6092 m
270.3307 286.7656 L
221.4239 303.4282 L
221.4239 254.2719 L
270.3307 237.6092 L
f
1 1 0 0 (purple) 0.1653 x
269.225 237.9859 m
269.225 287.1423 L
221.7924 303.3026 L
221.7924 254.1463 L
269.225 237.9859 L
f
1 1 0 0 (purple) 0.1889 x
268.1199 238.3624 m
268.1199 287.5188 L
222.1608 303.1771 L
222.1608 254.0208 L
268.1199 238.3624 L
f
1 1 0 0 (purple) 0.2125 x
267.0142 238.7391 m
267.0142 287.8955 L
222.5294 303.0516 L
222.5294 253.8952 L
267.0142 238.7391 L
f
1 1 0 0 (purple) 0.2361 x
265.9091 239.1156 m
265.9091 288.272 L
222.8977 302.9261 L
222.8977 253.7697 L
265.9091 239.1156 L
f
1 1 0 0 (purple) 0.2597 x
264.8034 239.4923 m
264.8034 288.6487 L
223.2663 302.8005 L
223.2663 253.6441 L
264.8034 239.4923 L
f
1 1 0 0 (purple) 0.2833 x
263.6984 239.8689 m
263.6984 289.0252 L
223.6346 302.675 L
223.6346 253.5186 L
263.6984 239.8689 L
f
1 1 0 0 (purple) 0.3069 x
262.5927 240.2455 m
262.5927 289.4019 L
224.0032 302.5494 L
224.0032 253.3931 L
262.5927 240.2455 L
f
1 1 0 0 (purple) 0.3305 x
261.4876 240.6221 m
261.4876 289.7784 L
224.3716 302.4239 L
224.3716 253.2676 L
261.4876 240.6221 L
f
1 1 0 0 (purple) 0.3542 x
260.3819 240.9987 m
260.3819 290.1551 L
224.7401 302.2984 L
224.7401 253.142 L
260.3819 240.9987 L
f
1 1 0 0 (purple) 0.3778 x
259.2768 241.3753 m
259.2768 290.5316 L
225.1085 302.1729 L
225.1085 253.0165 L
259.2768 241.3753 L
f
1 1 0 0 (purple) 0.4014 x
258.1712 241.7519 m
258.1712 290.9083 L
225.477 302.0473 L
225.477 252.8909 L
258.1712 241.7519 L
f
1 1 0 0 (purple) 0.425 x
257.0661 242.1284 m
257.0661 291.2848 L
225.8454 301.9218 L
225.8454 252.7654 L
257.0661 242.1284 L
f
1 1 0 0 (purple) 0.4486 x
255.961 242.505 m
255.961 291.6613 L
226.2138 301.7963 L
226.2138 252.6399 L
255.961 242.505 L
f
1 1 0 0 (purple) 0.4722 x
254.8553 242.8817 m
254.8553 292.038 L
226.5823 301.6707 L
226.5823 252.5144 L
254.8553 242.8817 L
f
1 1 0 0 (purple) 0.4958 x
253.7502 243.2582 m
253.7502 292.4146 L
226.9507 301.5452 L
226.9507 252.3888 L
253.7502 243.2582 L
f
1 1 0 0 (purple) 0.5195 x
252.6445 243.6349 m
252.6445 292.7913 L
227.3193 301.4196 L
227.3193 252.2633 L
252.6445 243.6349 L
f
1 1 0 0 (purple) 0.5431 x
251.5395 244.0114 m
251.5395 293.1677 L
227.6876 301.2942 L
227.6876 252.1378 L
251.5395 244.0114 L
f
1 1 0 0 (purple) 0.5667 x
250.4338 244.3881 m
250.4338 293.5445 L
228.0562 301.1686 L
228.0562 252.0122 L
250.4338 244.3881 L
f
1 1 0 0 (purple) 0.5903 x
249.3287 244.7646 m
249.3287 293.9209 L
228.4245 301.0431 L
228.4245 251.8867 L
249.3287 244.7646 L
f
1 1 0 0 (purple) 0.6139 x
248.223 245.1413 m
248.223 294.2977 L
228.7931 300.9175 L
228.7931 251.7611 L
248.223 245.1413 L
f
1 1 0 0 (purple) 0.6375 x
247.1179 245.5178 m
247.1179 294.6741 L
229.1614 300.792 L
229.1614 251.6357 L
247.1179 245.5178 L
f
1 1 0 0 (purple) 0.6611 x
246.0123 245.8945 m
246.0123 295.0509 L
229.53 300.6664 L
229.53 251.5101 L
246.0123 245.8945 L
f
1 1 0 0 (purple) 0.6847 x
244.9071 246.271 m
244.9071 295.4273 L
229.8984 300.5409 L
229.8984 251.3845 L
244.9071 246.271 L
f
1 1 0 0 (purple) 0.7083 x
243.8015 246.6477 m
243.8015 295.8041 L
230.2669 300.4153 L
230.2669 251.259 L
243.8015 246.6477 L
f
1 1 0 0 (purple) 0.7319 x
242.6964 247.0242 m
242.6964 296.1806 L
230.6353 300.2898 L
230.6353 251.1335 L
242.6964 247.0242 L
f
1 1 0 0 (purple) 0.7556 x
241.5907 247.4009 m
241.5907 296.5573 L
231.0039 300.1643 L
231.0039 251.0079 L
241.5907 247.4009 L
f
1 1 0 0 (purple) 0.7792 x
240.4856 247.7774 m
240.4856 296.9338 L
231.3722 300.0388 L
231.3722 250.8825 L
240.4856 247.7774 L
f
1 1 0 0 (purple) 0.8028 x
239.38 248.1542 m
239.38 297.3105 L
231.7408 299.9132 L
231.7408 250.7569 L
239.38 248.1542 L
f
1 1 0 0 (purple) 0.8264 x
238.2749 248.5307 m
238.2749 297.687 L
232.1091 299.7877 L
232.1091 250.6313 L
238.2749 248.5307 L
f
U
1 1 0 0 (purple) 0.85 x
237.1698 248.9071 m
237.1698 298.0635 L
232.4775 299.6622 L
232.4775 250.5058 L
237.1698 248.9071 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
308.51 297.9467 m
308.51 289.803 289.4656 283.2009 265.9738 283.2009 c
242.482 283.2009 223.4376 289.803 223.4376 297.9467 C
223.4375 306.0905 242.4818 312.6929 265.9735 312.6932 c
289.4653 312.6936 308.5098 306.0919 308.51 297.9481 C
308.51 297.9467 L
f
u
1 1 0 0 (purple) 0.575 x
307.4613 297.9054 m
307.4613 290.0617 288.8889 283.7028 265.9794 283.7028 c
243.0699 283.7028 224.4976 290.0617 224.4976 297.9054 C
224.4974 305.7491 243.0698 312.1082 265.9792 312.1086 c
288.8887 312.1089 307.4611 305.7504 307.4613 297.9066 C
307.4613 297.9054 L
f
1 1 0 0 (purple) 0.5 x
306.4125 297.8641 m
306.4125 290.3204 288.3122 284.2048 265.9851 284.2048 c
243.6578 284.2048 225.5577 290.3204 225.5577 297.8641 C
225.5574 305.4076 243.6577 311.5236 265.9849 311.5239 c
288.312 311.5242 306.4123 305.409 306.4125 297.8652 C
306.4125 297.8641 L
f
1 1 0 0 (purple) 0.425 x
305.3639 297.8226 m
305.3639 290.5791 287.7356 284.7067 265.9907 284.7067 c
244.2458 284.7067 226.6176 290.5791 226.6176 297.8226 C
226.6174 305.0663 244.2456 310.9389 265.9905 310.9393 c
287.7355 310.9395 305.3637 305.0675 305.3639 297.8238 C
305.3639 297.8226 L
f
1 1 0 0 (purple) 0.35 x
304.3151 297.7813 m
304.3151 290.8378 287.1589 285.2087 265.9963 285.2087 c
244.8338 285.2087 227.6777 290.8378 227.6777 297.7813 C
227.6774 304.7249 244.8336 310.3542 265.9962 310.3545 c
287.1587 310.3548 304.315 304.7261 304.3151 297.7824 C
304.3151 297.7813 L
f
1 1 0 0 (purple) 0.275 x
303.2665 297.74 m
303.2665 291.0965 286.5823 285.7106 266.002 285.7106 c
245.4216 285.7106 228.7376 291.0965 228.7376 297.74 C
228.7373 304.3835 245.4215 309.7696 266.0018 309.7699 c
286.5821 309.7702 303.2663 304.3846 303.2665 297.741 C
303.2665 297.74 L
f
U
1 1 0 0 (purple) 0.2 x
302.2178 297.6986 m
302.2178 291.3552 286.0056 286.2125 266.0076 286.2125 c
246.0096 286.2125 229.7976 291.3552 229.7976 297.6986 C
229.7974 304.0421 246.0094 309.1849 266.0075 309.1852 c
286.0055 309.1854 302.2176 304.0432 302.2178 297.6996 C
302.2178 297.6986 L
f
U
0 To
1 0 0 1 265.3787 261.5547 0 Tp
TP
-17.2285 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9.5 0 Tl
0 Tc
0 Tw
(Real-time) Tx 
(\r) TX 
TO
u
q
308.5368 308.8378 m
308.5368 300.694 289.4925 294.0919 266.0007 294.0919 c
242.5089 294.0919 223.4645 300.694 223.4645 308.8378 C
223.4645 345.9474 L
223.4645 354.0912 242.5089 360.6932 266.0007 360.6932 c
289.4925 360.6932 308.5368 354.0912 308.5368 345.9474 C
308.5368 308.8378 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
308.5368 308.8378 m
308.5368 300.694 289.4925 294.0919 266.0007 294.0919 c
242.5089 294.0919 223.4645 300.694 223.4645 308.8378 C
223.4645 345.9474 L
223.4645 354.0912 242.5089 360.6932 266.0007 360.6932 c
289.4925 360.6932 308.5368 354.0912 308.5368 345.9474 C
308.5368 308.8378 L
f
u
276.9624 283.3497 m
276.9624 332.5062 L
219.2133 352.1813 L
219.2133 303.025 L
276.9624 283.3497 L
f
u
1 1 0 0 (purple) 0.0236 x
275.8573 283.7263 m
275.8573 332.8826 L
219.5816 352.0558 L
219.5816 302.8995 L
275.8573 283.7263 L
f
1 1 0 0 (purple) 0.0472 x
274.7522 284.1027 m
274.7522 333.2591 L
219.95 351.9304 L
219.95 302.7739 L
274.7522 284.1027 L
f
1 1 0 0 (purple) 0.0708 x
273.6465 284.4795 m
273.6465 333.6358 L
220.3186 351.8048 L
220.3186 302.6484 L
273.6465 284.4795 L
f
1 1 0 0 (purple) 0.0944 x
272.5415 284.856 m
272.5415 334.0124 L
220.687 351.6793 L
220.687 302.5229 L
272.5415 284.856 L
f
1 1 0 0 (purple) 0.1181 x
271.4358 285.2327 m
271.4358 334.389 L
221.0555 351.5537 L
221.0555 302.3973 L
271.4358 285.2327 L
f
1 1 0 0 (purple) 0.1417 x
270.3307 285.6092 m
270.3307 334.7656 L
221.4239 351.4282 L
221.4239 302.2719 L
270.3307 285.6092 L
f
1 1 0 0 (purple) 0.1653 x
269.225 285.9859 m
269.225 335.1423 L
221.7924 351.3026 L
221.7924 302.1463 L
269.225 285.9859 L
f
1 1 0 0 (purple) 0.1889 x
268.1199 286.3624 m
268.1199 335.5188 L
222.1608 351.1771 L
222.1608 302.0208 L
268.1199 286.3624 L
f
1 1 0 0 (purple) 0.2125 x
267.0142 286.7391 m
267.0142 335.8955 L
222.5294 351.0516 L
222.5294 301.8952 L
267.0142 286.7391 L
f
1 1 0 0 (purple) 0.2361 x
265.9091 287.1156 m
265.9091 336.272 L
222.8977 350.9261 L
222.8977 301.7697 L
265.9091 287.1156 L
f
1 1 0 0 (purple) 0.2597 x
264.8034 287.4923 m
264.8034 336.6487 L
223.2663 350.8005 L
223.2663 301.6441 L
264.8034 287.4923 L
f
1 1 0 0 (purple) 0.2833 x
263.6984 287.8689 m
263.6984 337.0252 L
223.6346 350.675 L
223.6346 301.5186 L
263.6984 287.8689 L
f
1 1 0 0 (purple) 0.3069 x
262.5927 288.2455 m
262.5927 337.4019 L
224.0032 350.5494 L
224.0032 301.3931 L
262.5927 288.2455 L
f
1 1 0 0 (purple) 0.3305 x
261.4876 288.6221 m
261.4876 337.7784 L
224.3716 350.4239 L
224.3716 301.2676 L
261.4876 288.6221 L
f
1 1 0 0 (purple) 0.3542 x
260.3819 288.9987 m
260.3819 338.1551 L
224.7401 350.2984 L
224.7401 301.142 L
260.3819 288.9987 L
f
1 1 0 0 (purple) 0.3778 x
259.2768 289.3753 m
259.2768 338.5316 L
225.1085 350.1729 L
225.1085 301.0165 L
259.2768 289.3753 L
f
1 1 0 0 (purple) 0.4014 x
258.1712 289.7519 m
258.1712 338.9083 L
225.477 350.0473 L
225.477 300.8909 L
258.1712 289.7519 L
f
1 1 0 0 (purple) 0.425 x
257.0661 290.1284 m
257.0661 339.2848 L
225.8454 349.9218 L
225.8454 300.7654 L
257.0661 290.1284 L
f
1 1 0 0 (purple) 0.4486 x
255.961 290.505 m
255.961 339.6613 L
226.2138 349.7963 L
226.2138 300.6399 L
255.961 290.505 L
f
1 1 0 0 (purple) 0.4722 x
254.8553 290.8817 m
254.8553 340.038 L
226.5823 349.6707 L
226.5823 300.5144 L
254.8553 290.8817 L
f
1 1 0 0 (purple) 0.4958 x
253.7502 291.2582 m
253.7502 340.4146 L
226.9507 349.5452 L
226.9507 300.3888 L
253.7502 291.2582 L
f
1 1 0 0 (purple) 0.5195 x
252.6445 291.6349 m
252.6445 340.7913 L
227.3193 349.4196 L
227.3193 300.2633 L
252.6445 291.6349 L
f
1 1 0 0 (purple) 0.5431 x
251.5395 292.0114 m
251.5395 341.1677 L
227.6876 349.2942 L
227.6876 300.1378 L
251.5395 292.0114 L
f
1 1 0 0 (purple) 0.5667 x
250.4338 292.3881 m
250.4338 341.5445 L
228.0562 349.1686 L
228.0562 300.0122 L
250.4338 292.3881 L
f
1 1 0 0 (purple) 0.5903 x
249.3287 292.7646 m
249.3287 341.9209 L
228.4245 349.0431 L
228.4245 299.8867 L
249.3287 292.7646 L
f
1 1 0 0 (purple) 0.6139 x
248.223 293.1413 m
248.223 342.2977 L
228.7931 348.9175 L
228.7931 299.7611 L
248.223 293.1413 L
f
1 1 0 0 (purple) 0.6375 x
247.1179 293.5178 m
247.1179 342.6741 L
229.1614 348.792 L
229.1614 299.6357 L
247.1179 293.5178 L
f
1 1 0 0 (purple) 0.6611 x
246.0123 293.8945 m
246.0123 343.0509 L
229.53 348.6664 L
229.53 299.5101 L
246.0123 293.8945 L
f
1 1 0 0 (purple) 0.6847 x
244.9071 294.271 m
244.9071 343.4273 L
229.8984 348.5409 L
229.8984 299.3845 L
244.9071 294.271 L
f
1 1 0 0 (purple) 0.7083 x
243.8015 294.6477 m
243.8015 343.8041 L
230.2669 348.4153 L
230.2669 299.259 L
243.8015 294.6477 L
f
1 1 0 0 (purple) 0.7319 x
242.6964 295.0242 m
242.6964 344.1806 L
230.6353 348.2898 L
230.6353 299.1335 L
242.6964 295.0242 L
f
1 1 0 0 (purple) 0.7556 x
241.5907 295.4009 m
241.5907 344.5573 L
231.0039 348.1643 L
231.0039 299.0079 L
241.5907 295.4009 L
f
1 1 0 0 (purple) 0.7792 x
240.4856 295.7774 m
240.4856 344.9338 L
231.3722 348.0388 L
231.3722 298.8825 L
240.4856 295.7774 L
f
1 1 0 0 (purple) 0.8028 x
239.38 296.1542 m
239.38 345.3105 L
231.7408 347.9132 L
231.7408 298.7569 L
239.38 296.1542 L
f
1 1 0 0 (purple) 0.8264 x
238.2749 296.5307 m
238.2749 345.687 L
232.1091 347.7877 L
232.1091 298.6313 L
238.2749 296.5307 L
f
U
1 1 0 0 (purple) 0.85 x
237.1698 296.9071 m
237.1698 346.0635 L
232.4775 347.6622 L
232.4775 298.5058 L
237.1698 296.9071 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
308.51 345.9467 m
308.51 337.803 289.4656 331.2009 265.9738 331.2009 c
242.482 331.2009 223.4376 337.803 223.4376 345.9467 C
223.4375 354.0905 242.4818 360.6929 265.9735 360.6932 c
289.4653 360.6936 308.5098 354.0919 308.51 345.9481 C
308.51 345.9467 L
f
u
1 1 0 0 (purple) 0.575 x
307.4613 345.9054 m
307.4613 338.0617 288.8889 331.7028 265.9794 331.7028 c
243.0699 331.7028 224.4976 338.0617 224.4976 345.9054 C
224.4974 353.7491 243.0698 360.1082 265.9792 360.1086 c
288.8887 360.1089 307.4611 353.7504 307.4613 345.9066 C
307.4613 345.9054 L
f
1 1 0 0 (purple) 0.5 x
306.4125 345.8641 m
306.4125 338.3204 288.3122 332.2048 265.9851 332.2048 c
243.6578 332.2048 225.5577 338.3204 225.5577 345.8641 C
225.5574 353.4076 243.6577 359.5236 265.9849 359.5239 c
288.312 359.5242 306.4123 353.409 306.4125 345.8652 C
306.4125 345.8641 L
f
1 1 0 0 (purple) 0.425 x
305.3639 345.8226 m
305.3639 338.5791 287.7356 332.7067 265.9907 332.7067 c
244.2458 332.7067 226.6176 338.5791 226.6176 345.8226 C
226.6174 353.0663 244.2456 358.9389 265.9905 358.9393 c
287.7355 358.9395 305.3637 353.0675 305.3639 345.8238 C
305.3639 345.8226 L
f
1 1 0 0 (purple) 0.35 x
304.3151 345.7813 m
304.3151 338.8378 287.1589 333.2087 265.9963 333.2087 c
244.8338 333.2087 227.6777 338.8378 227.6777 345.7813 C
227.6774 352.7249 244.8336 358.3542 265.9962 358.3545 c
287.1587 358.3548 304.315 352.7261 304.3151 345.7824 C
304.3151 345.7813 L
f
1 1 0 0 (purple) 0.275 x
303.2665 345.74 m
303.2665 339.0965 286.5823 333.7106 266.002 333.7106 c
245.4216 333.7106 228.7376 339.0965 228.7376 345.74 C
228.7373 352.3835 245.4215 357.7696 266.0018 357.7699 c
286.5821 357.7702 303.2663 352.3846 303.2665 345.741 C
303.2665 345.74 L
f
U
1 1 0 0 (purple) 0.2 x
302.2178 345.6986 m
302.2178 339.3552 286.0056 334.2125 266.0076 334.2125 c
246.0096 334.2125 229.7976 339.3552 229.7976 345.6986 C
229.7974 352.0421 246.0094 357.1849 266.0075 357.1852 c
286.0055 357.1854 302.2176 352.0432 302.2178 345.6996 C
302.2178 345.6986 L
f
U
u
q
308.51 357.0878 m
308.51 348.944 289.4657 342.3419 265.974 342.3419 c
242.4822 342.3419 223.4377 348.944 223.4377 357.0878 C
223.4377 393.6982 L
223.4377 401.8421 242.4822 408.4442 265.974 408.4442 c
289.4657 408.4442 308.51 401.8421 308.51 393.6982 C
308.51 357.0878 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
308.51 357.0878 m
308.51 348.944 289.4657 342.3419 265.974 342.3419 c
242.4822 342.3419 223.4377 348.944 223.4377 357.0878 C
223.4377 393.6982 L
223.4377 401.8421 242.4822 408.4442 265.974 408.4442 c
289.4657 408.4442 308.51 401.8421 308.51 393.6982 C
308.51 357.0878 L
f
u
276.9356 331.5997 m
276.9356 380.2571 L
219.1865 399.9322 L
219.1865 351.2749 L
276.9356 331.5997 L
f
u
1 1 0 0 (purple) 0.0236 x
275.8305 331.9762 m
275.8305 380.6335 L
219.5549 399.8067 L
219.5549 351.1495 L
275.8305 331.9762 L
f
1 1 0 0 (purple) 0.0472 x
274.7254 332.3527 m
274.7254 381.01 L
219.9233 399.6812 L
219.9233 351.0239 L
274.7254 332.3527 L
f
1 1 0 0 (purple) 0.0708 x
273.6197 332.7295 m
273.6197 381.3867 L
220.2919 399.5557 L
220.2919 350.8984 L
273.6197 332.7295 L
f
1 1 0 0 (purple) 0.0944 x
272.5147 333.1059 m
272.5147 381.7632 L
220.6602 399.4302 L
220.6602 350.7729 L
272.5147 333.1059 L
f
1 1 0 0 (purple) 0.1181 x
271.409 333.4827 m
271.409 382.1399 L
221.0288 399.3046 L
221.0288 350.6473 L
271.409 333.4827 L
f
1 1 0 0 (purple) 0.1417 x
270.3039 333.8591 m
270.3039 382.5164 L
221.3971 399.1791 L
221.3971 350.5218 L
270.3039 333.8591 L
f
1 1 0 0 (purple) 0.1653 x
269.1982 334.2359 m
269.1982 382.8931 L
221.7656 399.0535 L
221.7656 350.3962 L
269.1982 334.2359 L
f
1 1 0 0 (purple) 0.1889 x
268.0931 334.6124 m
268.0931 383.2696 L
222.134 398.928 L
222.134 350.2707 L
268.0931 334.6124 L
f
1 1 0 0 (purple) 0.2125 x
266.9874 334.9891 m
266.9874 383.6464 L
222.5026 398.8025 L
222.5026 350.1452 L
266.9874 334.9891 L
f
1 1 0 0 (purple) 0.2361 x
265.8824 335.3656 m
265.8824 384.0228 L
222.871 398.677 L
222.871 350.0197 L
265.8824 335.3656 L
f
1 1 0 0 (purple) 0.2597 x
264.7767 335.7423 m
264.7767 384.3996 L
223.2395 398.5514 L
223.2395 349.8941 L
264.7767 335.7423 L
f
1 1 0 0 (purple) 0.2833 x
263.6716 336.1188 m
263.6716 384.776 L
223.6078 398.4259 L
223.6078 349.7686 L
263.6716 336.1188 L
f
1 1 0 0 (purple) 0.3069 x
262.5659 336.4955 m
262.5659 385.1528 L
223.9765 398.3003 L
223.9765 349.643 L
262.5659 336.4955 L
f
1 1 0 0 (purple) 0.3305 x
261.4608 336.872 m
261.4608 385.5292 L
224.3448 398.1748 L
224.3448 349.5175 L
261.4608 336.872 L
f
1 1 0 0 (purple) 0.3542 x
260.3551 337.2487 m
260.3551 385.906 L
224.7134 398.0493 L
224.7134 349.3919 L
260.3551 337.2487 L
f
1 1 0 0 (purple) 0.3778 x
259.2501 337.6252 m
259.2501 386.2825 L
225.0817 397.9237 L
225.0817 349.2665 L
259.2501 337.6252 L
f
1 1 0 0 (purple) 0.4014 x
258.1444 338.0019 m
258.1444 386.6592 L
225.4503 397.7981 L
225.4503 349.1408 L
258.1444 338.0019 L
f
1 1 0 0 (purple) 0.425 x
257.0393 338.3784 m
257.0393 387.0357 L
225.8186 397.6726 L
225.8186 349.0154 L
257.0393 338.3784 L
f
1 1 0 0 (purple) 0.4486 x
255.9342 338.755 m
255.9342 387.4122 L
226.187 397.5471 L
226.187 348.8899 L
255.9342 338.755 L
f
1 1 0 0 (purple) 0.4722 x
254.8285 339.1316 m
254.8285 387.7889 L
226.5556 397.4216 L
226.5556 348.7643 L
254.8285 339.1316 L
f
1 1 0 0 (purple) 0.4958 x
253.7235 339.5081 m
253.7235 388.1654 L
226.9239 397.2961 L
226.9239 348.6388 L
253.7235 339.5081 L
f
1 1 0 0 (purple) 0.5195 x
252.6178 339.8848 m
252.6178 388.5422 L
227.2925 397.1705 L
227.2925 348.5132 L
252.6178 339.8848 L
f
1 1 0 0 (purple) 0.5431 x
251.5127 340.2613 m
251.5127 388.9186 L
227.6609 397.045 L
227.6609 348.3877 L
251.5127 340.2613 L
f
1 1 0 0 (purple) 0.5667 x
250.407 340.638 m
250.407 389.2954 L
228.0294 396.9194 L
228.0294 348.2621 L
250.407 340.638 L
f
1 1 0 0 (purple) 0.5903 x
249.3019 341.0145 m
249.3019 389.6718 L
228.3978 396.794 L
228.3978 348.1367 L
249.3019 341.0145 L
f
1 1 0 0 (purple) 0.6139 x
248.1962 341.3912 m
248.1962 390.0485 L
228.7663 396.6683 L
228.7663 348.0111 L
248.1962 341.3912 L
f
1 1 0 0 (purple) 0.6375 x
247.0911 341.7678 m
247.0911 390.4251 L
229.1347 396.5429 L
229.1347 347.8855 L
247.0911 341.7678 L
f
1 1 0 0 (purple) 0.6611 x
245.9855 342.1445 m
245.9855 390.8018 L
229.5032 396.4173 L
229.5032 347.7601 L
245.9855 342.1445 L
f
1 1 0 0 (purple) 0.6847 x
244.8804 342.521 m
244.8804 391.1783 L
229.8716 396.2918 L
229.8716 347.6345 L
244.8804 342.521 L
f
1 1 0 0 (purple) 0.7083 x
243.7747 342.8977 m
243.7747 391.555 L
230.2402 396.1662 L
230.2402 347.509 L
243.7747 342.8977 L
f
1 1 0 0 (purple) 0.7319 x
242.6696 343.2742 m
242.6696 391.9314 L
230.6085 396.0407 L
230.6085 347.3834 L
242.6696 343.2742 L
f
1 1 0 0 (purple) 0.7556 x
241.5639 343.6509 m
241.5639 392.3082 L
230.9771 395.9151 L
230.9771 347.2579 L
241.5639 343.6509 L
f
1 1 0 0 (purple) 0.7792 x
240.4589 344.0274 m
240.4589 392.6847 L
231.3454 395.7896 L
231.3454 347.1323 L
240.4589 344.0274 L
f
1 1 0 0 (purple) 0.8028 x
239.3532 344.4041 m
239.3532 393.0614 L
231.714 395.6641 L
231.714 347.0068 L
239.3532 344.4041 L
f
1 1 0 0 (purple) 0.8264 x
238.2481 344.7806 m
238.2481 393.4379 L
232.0824 395.5386 L
232.0824 346.8812 L
238.2481 344.7806 L
f
U
1 1 0 0 (purple) 0.85 x
237.143 345.1571 m
237.143 393.8144 L
232.4507 395.4131 L
232.4507 346.7558 L
237.143 345.1571 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
308.4833 393.6976 m
308.4833 385.5539 289.4388 378.9517 265.947 378.9517 c
242.4552 378.9517 223.4109 385.5539 223.4109 393.6976 C
223.4107 401.8414 242.455 408.4438 265.9468 408.4442 c
289.4385 408.4445 308.483 401.8428 308.4833 393.6989 C
308.4833 393.6976 L
f
U
0 To
1 0 0 1 265.3787 359.5547 0 Tp
TP
-8.5059 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9.5 0 Tl
0 Tc
0 Tw
(Data) Tx 
(\r) TX 
TO
0 To
1 0 0 1 265.3787 309.5547 0 Tp
TP
-6.7178 0 Td
0 Tr
(Log) Tx 
(\r) TX 
TO
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
325.0893 394.5127 m
325.0893 394.5108 L
325.0893 383.2318 298.7126 374.0878 266.1765 374.0878 c
233.6403 374.0878 207.2639 383.2318 207.2639 394.5108 C
S
0 To
1 0 0 1 356.5 315.3125 0 Tp
TP
0 Tr
0 O
0 g
1 w
0 Ta
(Subvolumes) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
302.515 363.0878 m
354.5149 318.0878 l
300.6816 271.5878 l
S
354.5149 318.0878 m
304.1816 318.0878 l
S
261.1816 413.7544 m
243.965 431.3132 l
S
0 To
1 0 0 1 240.3333 429.8289 0 Tp
TP
-27.3066 0 Td
0 Tr
0 O
0 g
1 w
2 Ta
(Volume) Tx 
(\r) TX 
TO
0 To
1 0 0 1 188.6875 293.8125 0 Tp
TP
-29.9941 0 Td
0 Tr
(Optional) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
226.8483 323.7544 m
190.3333 296.4211 l
226.1816 269.7544 l
S
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

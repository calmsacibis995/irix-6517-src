%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (IRIX.filesystem.ai)
%%CreationDate: (3/18/99) (11:30 AM)
%%BoundingBox: 204 381 424 573
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (gold)
%%+ (green)
%%+ (purple)
%%+ (red)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 0.35 0 0.25 (dark blue)
%%+ 0.15 0.55 1 0 (gold)
%%+ 1 0 1 0 (green)
%%+ 0 0.6 1 0 (orange)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
0.15 0.55 1 0 (gold) 0.5 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
344.0199 516.0279 m
344.0199 542.7464 L
321.0513 542.7464 L
321.0513 516.0279 L
303.7925 516.0279 L
303.7925 493.678 L
360.7171 493.678 L
360.7171 516.0279 L
344.0199 516.0279 L
f
1 0 1 0 (green) 0.5 x
406.3632 516.0279 m
406.3632 542.7268 L
383.5634 542.7268 L
383.5634 516.0279 L
366.0796 516.0279 L
366.0796 493.678 L
423.0041 493.678 L
423.0041 516.0279 L
406.3632 516.0279 L
f
u
1 1 0 0 (purple) 0.5 x
318.1174 572.1087 m
292.6175 572.1087 L
292.6175 542.7464 L
222.8021 542.7464 L
222.802 520.3966 L
318.0513 520.3395 L
318.1174 572.1087 L
f
0 1 0.85 0 (red) 0 x
234.9804 549.9616 m
233.0305 549.9616 L
233.0305 534.5641 L
234.9804 534.5641 L
234.9804 549.9616 L
f
306.0425 558.0463 m
304.0924 558.0463 L
304.0924 549.8739 L
306.0425 549.8739 L
306.0425 558.0463 L
f
1 g
0 R
0 G
0.5 w
242.1054 526.3966 m
242.1054 535.3965 L
226.8055 535.3965 L
226.8055 526.3966 L
242.1054 526.3966 L
b
312.7549 557.2776 m
312.7549 566.2776 L
297.455 566.2776 L
297.455 557.2776 L
312.7549 557.2776 L
b
0 To
1 0 0 1 305.3675 559.5463 0 Tp
TP
-1.1191 0 Td
0 Tr
0 g
1 w
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
7.1999 0 Tl
0 Tc
0 Tw
(/) Tx 
(\r) TX 
TO
0 To
1 0 0 1 234.1554 527.9912 0 Tp
TP
-6.4912 0 Td
0 Tr
(/bin) Tx 
(\r) TX 
TO
0 1 0.85 0 (red) 1 x
0.5 w
422.6191 548.7464 m
422.6191 550.6964 L
204.6156 550.698 L
204.6156 548.748 L
422.6191 548.7464 L
f
u
0 1 0.85 0 (red) 0.9375 x
0.5312 w
421.8955 548.7448 m
421.8955 550.6948 L
205.3392 550.6964 L
205.3392 548.7464 L
421.8955 548.7448 L
f
0 1 0.85 0 (red) 0.875 x
0.5625 w
421.1719 548.7432 m
421.1719 550.6933 L
206.0628 550.6948 L
206.0628 548.7448 L
421.1719 548.7432 L
f
0 1 0.85 0 (red) 0.8125 x
0.5937 w
420.4483 548.7416 m
420.4483 550.6917 L
206.7864 550.6933 L
206.7864 548.7433 L
420.4483 548.7416 L
f
0 1 0.85 0 (red) 0.75 x
0.625 w
419.7247 548.74 m
419.7247 550.69 L
207.5099 550.6917 L
207.5099 548.7416 L
419.7247 548.74 L
f
0 1 0.85 0 (red) 0.6875 x
0.6562 w
419.0011 548.7385 m
419.0011 550.6884 L
208.2335 550.69 L
208.2335 548.74 L
419.0011 548.7385 L
f
0 1 0.85 0 (red) 0.625 x
0.6875 w
418.2776 548.7369 m
418.2776 550.6868 L
208.9571 550.6884 L
208.9571 548.7385 L
418.2776 548.7369 L
f
0 1 0.85 0 (red) 0.5625 x
0.7187 w
417.554 548.7353 m
417.554 550.6853 L
209.6807 550.6869 L
209.6807 548.7369 L
417.554 548.7353 L
f
0 1 0.85 0 (red) 0.5 x
0.75 w
416.8304 548.7336 m
416.8304 550.6837 L
210.4043 550.6853 L
210.4043 548.7353 L
416.8304 548.7336 L
f
0 1 0.85 0 (red) 0.4375 x
0.7812 w
416.1069 548.7321 m
416.1069 550.682 L
211.1279 550.6837 L
211.1279 548.7337 L
416.1069 548.7321 L
f
0 1 0.85 0 (red) 0.375 x
0.8125 w
415.3833 548.7305 m
415.3833 550.6804 L
211.8514 550.682 L
211.8514 548.7321 L
415.3833 548.7305 L
f
0 1 0.85 0 (red) 0.3125 x
0.8437 w
414.6597 548.7289 m
414.6597 550.6789 L
212.5751 550.6804 L
212.5751 548.7305 L
414.6597 548.7289 L
f
0 1 0.85 0 (red) 0.25 x
0.875 w
413.9361 548.7273 m
413.9361 550.6773 L
213.2987 550.6789 L
213.2987 548.7289 L
413.9361 548.7273 L
f
0 1 0.85 0 (red) 0.1875 x
0.9062 w
413.2125 548.7257 m
413.2125 550.6756 L
214.0222 550.6773 L
214.0222 548.7273 L
413.2125 548.7257 L
f
0 1 0.85 0 (red) 0.125 x
0.9375 w
412.4889 548.7241 m
412.4889 550.674 L
214.7458 550.6756 L
214.7458 548.7257 L
412.4889 548.7241 L
f
0 1 0.85 0 (red) 0.0625 x
0.9687 w
411.7653 548.7226 m
411.7653 550.6725 L
215.4694 550.6741 L
215.4694 548.7242 L
411.7653 548.7226 L
f
U
0 1 0.85 0 (red) 0 x
1 w
411.0417 548.7209 m
411.0417 550.6709 L
216.193 550.6725 L
216.193 548.7226 L
411.0417 548.7209 L
f
257.4802 549.9616 m
255.5303 549.9616 L
255.5303 534.5641 L
257.4802 534.5641 L
257.4802 549.9616 L
f
1 g
0 R
0 G
0.5 w
264.6052 526.3966 m
264.6052 535.3965 L
249.3053 535.3965 L
249.3053 526.3966 L
264.6052 526.3966 L
b
0 To
1 0 0 1 256.6553 527.9912 0 Tp
TP
-6.4912 0 Td
0 Tr
0 g
1 w
(/etc) Tx 
(\r) TX 
TO
0 1 0.85 0 (red) 0 x
346.7485 519.5126 m
346.7485 519.4751 L
333.0475 519.4751 L
333.0475 549.9616 L
331.0976 549.9616 L
331.0976 519.4751 L
318.4645 519.4751 L
318.4645 519.5126 L
316.5146 519.5126 L
316.5146 519.4751 L
316.5146 517.5252 L
316.5146 504.1152 L
318.4645 504.1152 L
318.4645 517.5252 L
346.7485 517.5252 L
346.7485 504.1152 L
348.6984 504.1152 L
348.6984 519.5126 L
346.7485 519.5126 L
f
278.93 549.9616 m
276.9801 549.9616 L
276.9801 534.5641 L
278.93 534.5641 L
278.93 549.9616 L
f
1 g
0 R
0 G
0.5 w
286.055 526.3966 m
286.055 535.3965 L
270.7551 535.3965 L
270.7551 526.3966 L
286.055 526.3966 L
b
0 To
1 0 0 1 278.1051 527.9912 0 Tp
TP
-6.7129 0 Td
0 Tr
0 g
1 w
(/usr) Tx 
(\r) TX 
TO
0 1 0.85 0 (red) 0 x
300.0799 549.9616 m
298.13 549.9616 L
298.13 534.5641 L
300.0799 534.5641 L
300.0799 549.9616 L
f
1 g
0 R
0 G
0.5 w
307.2049 526.3966 m
307.2049 535.3965 L
291.905 535.3965 L
291.905 526.3966 L
307.2049 526.3966 L
b
0 To
1 0 0 1 299.255 527.9912 0 Tp
TP
-6.7129 0 Td
0 Tr
0 g
1 w
(/var) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
339.7075 526.5474 m
339.7075 535.5474 L
324.4076 535.5474 L
324.4076 526.5474 L
339.7075 526.5474 L
b
0 To
1 0 0 1 331.6826 528.1983 0 Tp
TP
-5.5977 0 Td
0 Tr
0 g
1 w
(/d2) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
328.8904 495.4837 m
328.8904 505.6681 L
306.3362 505.6681 L
306.3362 495.4837 L
328.8904 495.4837 L
b
0 To
1 0 0 1 317.6396 498.3476 0 Tp
TP
-10.0713 0 Td
0 Tr
0 g
1 w
(/proj1) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
359.076 495.4245 m
359.076 505.6089 L
336.5218 505.6089 L
336.5218 495.4245 L
359.076 495.4245 L
b
0 To
1 0 0 1 347.8735 498.3476 0 Tp
TP
-10.0713 0 Td
0 Tr
0 g
1 w
(/proj2) Tx 
(\r) TX 
TO
U
u
q
295.2225 403.2161 m
295.2225 397.8884 282.7633 393.5691 267.3946 393.5691 c
252.0259 393.5691 239.5667 397.8884 239.5667 403.2161 C
239.5667 441.1984 L
239.5667 446.5263 252.0259 450.8455 267.3946 450.8455 c
282.7633 450.8455 295.2225 446.5263 295.2225 441.1984 C
295.2225 403.2161 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
295.2225 403.2161 m
295.2225 397.8884 282.7633 393.5691 267.3946 393.5691 c
252.0259 393.5691 239.5667 397.8884 239.5667 403.2161 C
239.5667 441.1984 L
239.5667 446.5263 252.0259 450.8455 267.3946 450.8455 c
282.7633 450.8455 295.2225 446.5263 295.2225 441.1984 C
295.2225 403.2161 L
f
u
274.5659 386.5414 m
274.5659 432.405 L
236.7854 445.2768 L
236.7854 399.4132 L
274.5659 386.5414 L
f
u
1 1 0 0 (purple) 0.0236 x
273.8429 386.7876 m
273.8429 432.6512 L
237.0264 445.1947 L
237.0264 399.3312 L
273.8429 386.7876 L
f
1 1 0 0 (purple) 0.0472 x
273.12 387.034 m
273.12 432.8976 L
237.2674 445.1126 L
237.2674 399.249 L
273.12 387.034 L
f
1 1 0 0 (purple) 0.0708 x
272.3966 387.2805 m
272.3966 433.144 L
237.5086 445.0305 L
237.5086 399.1669 L
272.3966 387.2805 L
f
1 1 0 0 (purple) 0.0944 x
271.6737 387.5267 m
271.6737 433.3903 L
237.7496 444.9484 L
237.7496 399.0848 L
271.6737 387.5267 L
f
1 1 0 0 (purple) 0.1181 x
270.9503 387.7732 m
270.9503 433.6367 L
237.9907 444.8662 L
237.9907 399.0026 L
270.9503 387.7732 L
f
1 1 0 0 (purple) 0.1417 x
270.2274 388.0195 m
270.2274 433.8831 L
238.2317 444.7842 L
238.2317 398.9206 L
270.2274 388.0195 L
f
1 1 0 0 (purple) 0.1653 x
269.504 388.266 m
269.504 434.1296 L
238.4727 444.702 L
238.4727 398.8384 L
269.504 388.266 L
f
1 1 0 0 (purple) 0.1889 x
268.0277 390.1256 m
268.0277 435.9891 L
238.7137 444.6198 L
238.7137 398.7563 L
268.0277 390.1256 L
f
1 1 0 0 (purple) 0.2125 x
268.0577 388.7588 m
268.0577 434.6223 L
238.9549 444.5377 L
238.9549 398.6741 L
268.0577 388.7588 L
f
1 1 0 0 (purple) 0.2361 x
267.3347 389.005 m
267.3347 434.8686 L
239.1959 444.4557 L
239.1959 398.5921 L
267.3347 389.005 L
f
1 1 0 0 (purple) 0.2597 x
266.6114 389.2516 m
266.6114 435.1151 L
239.437 444.3735 L
239.437 398.5099 L
266.6114 389.2516 L
f
1 1 0 0 (purple) 0.2833 x
265.8884 389.4979 m
265.8884 435.3614 L
239.678 444.2914 L
239.678 398.4278 L
265.8884 389.4979 L
f
1 1 0 0 (purple) 0.3069 x
265.165 389.7443 m
265.165 435.6079 L
239.9192 444.2091 L
239.9192 398.3456 L
265.165 389.7443 L
f
1 1 0 0 (purple) 0.3305 x
264.442 389.9906 m
264.442 435.8542 L
240.1601 444.1271 L
240.1601 398.2635 L
264.442 389.9906 L
f
1 1 0 0 (purple) 0.3542 x
263.7186 390.2371 m
263.7186 436.1007 L
240.4012 444.045 L
240.4012 398.1813 L
263.7186 390.2371 L
f
1 1 0 0 (purple) 0.3778 x
262.9958 390.4834 m
262.9958 436.347 L
240.6421 443.9628 L
240.6421 398.0993 L
262.9958 390.4834 L
f
1 1 0 0 (purple) 0.4014 x
262.2724 390.7298 m
262.2724 436.5934 L
240.8833 443.8807 L
240.8833 398.0171 L
262.2724 390.7298 L
f
1 1 0 0 (purple) 0.425 x
261.5495 390.9761 m
261.5495 436.8397 L
241.1243 443.7986 L
241.1243 397.9351 L
261.5495 390.9761 L
f
1 1 0 0 (purple) 0.4486 x
260.8264 391.2225 m
260.8264 437.0861 L
241.3653 443.7164 L
241.3653 397.8529 L
260.8264 391.2225 L
f
1 1 0 0 (purple) 0.4722 x
260.1031 391.4689 m
260.1031 437.3325 L
241.6064 443.6343 L
241.6064 397.7707 L
260.1031 391.4689 L
f
1 1 0 0 (purple) 0.4958 x
259.3801 391.7152 m
259.3801 437.5788 L
241.8474 443.5522 L
241.8474 397.6886 L
259.3801 391.7152 L
f
1 1 0 0 (purple) 0.5195 x
258.6568 391.9616 m
258.6568 437.8253 L
242.0885 443.4701 L
242.0885 397.6065 L
258.6568 391.9616 L
f
1 1 0 0 (purple) 0.5431 x
257.9338 392.2079 m
257.9338 438.0715 L
242.3295 443.388 L
242.3295 397.5244 L
257.9338 392.2079 L
f
1 1 0 0 (purple) 0.5667 x
257.2104 392.4544 m
257.2104 438.3181 L
242.5707 443.3058 L
242.5707 397.4422 L
257.2104 392.4544 L
f
1 1 0 0 (purple) 0.5903 x
256.4874 392.7007 m
256.4874 438.5643 L
242.8117 443.2237 L
242.8117 397.3601 L
256.4874 392.7007 L
f
1 1 0 0 (purple) 0.6139 x
255.7641 392.9471 m
255.7641 438.8107 L
243.0527 443.1415 L
243.0527 397.278 L
255.7641 392.9471 L
f
1 1 0 0 (purple) 0.6375 x
255.0411 393.1935 m
255.0411 439.0571 L
243.2937 443.0595 L
243.2937 397.1958 L
255.0411 393.1935 L
f
1 1 0 0 (purple) 0.6611 x
254.3178 393.44 m
254.3178 439.3036 L
243.5348 442.9773 L
243.5348 397.1138 L
254.3178 393.44 L
f
1 1 0 0 (purple) 0.6847 x
253.5949 393.6863 m
253.5949 439.5499 L
243.7758 442.8952 L
243.7758 397.0317 L
253.5949 393.6863 L
f
1 1 0 0 (purple) 0.7083 x
252.8714 393.9327 m
252.8714 439.7963 L
244.0169 442.813 L
244.0169 396.9496 L
252.8714 393.9327 L
f
1 1 0 0 (purple) 0.7319 x
252.1485 394.179 m
252.1485 440.0425 L
244.2579 442.7309 L
244.2579 396.8673 L
252.1485 394.179 L
f
1 1 0 0 (purple) 0.7556 x
251.4252 394.4255 m
251.4252 440.2891 L
244.4991 442.6487 L
244.4991 396.7852 L
251.4252 394.4255 L
f
1 1 0 0 (purple) 0.7792 x
250.7022 394.6718 m
250.7022 440.5354 L
244.74 442.5667 L
244.74 396.7031 L
250.7022 394.6718 L
f
1 1 0 0 (purple) 0.8028 x
249.9789 394.9182 m
249.9789 440.7818 L
244.9812 442.4846 L
244.9812 396.621 L
249.9789 394.9182 L
f
1 1 0 0 (purple) 0.8264 x
249.2559 395.1645 m
249.2559 441.0281 L
245.2221 442.4024 L
245.2221 396.5388 L
249.2559 395.1645 L
f
U
1 1 0 0 (purple) 0.85 x
248.5329 395.4109 m
248.5329 441.2745 L
245.4631 442.3203 L
245.4631 396.4567 L
248.5329 395.4109 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
295.205 441.198 m
295.205 435.8703 282.7458 431.551 267.377 431.551 c
252.0083 431.551 239.5491 435.8703 239.5491 441.198 C
239.549 446.5258 252.0081 450.8452 267.3768 450.8455 c
282.7456 450.8457 295.2048 446.5267 295.205 441.1988 C
295.205 441.198 L
f
U
0 To
1 0 0 1 267.0052 416.7482 0 Tp
TP
-14.7705 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
8.0999 0 Tl
0 Tc
0 Tw
(Partition\r) Tx 
12.5312 -8.0999 Td
(0) Tx 
(\r) TX 
TO
u
q
361.822 403.2161 m
361.822 397.8884 349.3628 393.5691 333.9942 393.5691 c
318.6255 393.5691 306.1662 397.8884 306.1662 403.2161 C
306.1662 456.4983 L
306.1662 461.8262 318.6255 466.1454 333.9942 466.1454 c
349.3628 466.1454 361.822 461.8262 361.822 456.4983 C
361.822 403.2161 L
h
W
n
0 O
0.15 0.55 1 0 (gold) 0 x
361.822 403.2161 m
361.822 397.8884 349.3628 393.5691 333.9942 393.5691 c
318.6255 393.5691 306.1662 397.8884 306.1662 403.2161 C
306.1662 456.4983 L
306.1662 461.8262 318.6255 466.1454 333.9942 466.1454 c
349.3628 466.1454 361.822 461.8262 361.822 456.4983 C
361.822 403.2161 L
f
u
341.1654 386.5414 m
341.1654 447.7049 L
303.3849 460.5767 L
303.3849 399.4132 L
341.1654 386.5414 L
f
u
0.15 0.55 1 0 (gold) 0.0236 x
340.4425 386.7876 m
340.4425 447.9511 L
303.626 460.4946 L
303.626 399.3312 L
340.4425 386.7876 L
f
0.15 0.55 1 0 (gold) 0.0472 x
339.7195 387.034 m
339.7195 448.1975 L
303.867 460.4125 L
303.867 399.249 L
339.7195 387.034 L
f
0.15 0.55 1 0 (gold) 0.0708 x
338.9962 387.2805 m
338.9962 448.4439 L
304.1082 460.3304 L
304.1082 399.1669 L
338.9962 387.2805 L
f
0.15 0.55 1 0 (gold) 0.0944 x
338.2732 387.5267 m
338.2732 448.6902 L
304.3491 460.2483 L
304.3491 399.0848 L
338.2732 387.5267 L
f
0.15 0.55 1 0 (gold) 0.1181 x
337.5499 387.7732 m
337.5499 448.9366 L
304.5902 460.1661 L
304.5902 399.0026 L
337.5499 387.7732 L
f
0.15 0.55 1 0 (gold) 0.1417 x
336.8269 388.0195 m
336.8269 449.183 L
304.8312 460.0841 L
304.8312 398.9206 L
336.8269 388.0195 L
f
0.15 0.55 1 0 (gold) 0.1653 x
336.1035 388.266 m
336.1035 449.4295 L
305.0723 460.0019 L
305.0723 398.8384 L
336.1035 388.266 L
f
0.15 0.55 1 0 (gold) 0.1889 x
334.6272 390.1256 m
334.6272 451.289 L
305.3133 459.9197 L
305.3133 398.7563 L
334.6272 390.1256 L
f
0.15 0.55 1 0 (gold) 0.2125 x
334.6572 388.7588 m
334.6572 449.9222 L
305.5545 459.8376 L
305.5545 398.6741 L
334.6572 388.7588 L
f
0.15 0.55 1 0 (gold) 0.2361 x
333.9343 389.005 m
333.9343 450.1685 L
305.7955 459.7555 L
305.7955 398.5921 L
333.9343 389.005 L
f
0.15 0.55 1 0 (gold) 0.2597 x
333.2109 389.2516 m
333.2109 450.415 L
306.0365 459.6734 L
306.0365 398.5099 L
333.2109 389.2516 L
f
0.15 0.55 1 0 (gold) 0.2833 x
332.488 389.4979 m
332.488 450.6613 L
306.2775 459.5913 L
306.2775 398.4278 L
332.488 389.4979 L
f
0.15 0.55 1 0 (gold) 0.3069 x
331.7645 389.7443 m
331.7645 450.9078 L
306.5187 459.509 L
306.5187 398.3456 L
331.7645 389.7443 L
f
0.15 0.55 1 0 (gold) 0.3305 x
331.0416 389.9906 m
331.0416 451.154 L
306.7597 459.427 L
306.7597 398.2635 L
331.0416 389.9906 L
f
0.15 0.55 1 0 (gold) 0.3542 x
330.3182 390.2371 m
330.3182 451.4006 L
307.0008 459.3449 L
307.0008 398.1813 L
330.3182 390.2371 L
f
0.15 0.55 1 0 (gold) 0.3778 x
329.5953 390.4834 m
329.5953 451.6469 L
307.2417 459.2627 L
307.2417 398.0993 L
329.5953 390.4834 L
f
0.15 0.55 1 0 (gold) 0.4014 x
328.872 390.7298 m
328.872 451.8933 L
307.4829 459.1806 L
307.4829 398.0171 L
328.872 390.7298 L
f
0.15 0.55 1 0 (gold) 0.425 x
328.149 390.9761 m
328.149 452.1396 L
307.7238 459.0985 L
307.7238 397.9351 L
328.149 390.9761 L
f
0.15 0.55 1 0 (gold) 0.4486 x
327.4259 391.2225 m
327.4259 452.386 L
307.9648 459.0163 L
307.9648 397.8529 L
327.4259 391.2225 L
f
0.15 0.55 1 0 (gold) 0.4722 x
326.7026 391.4689 m
326.7026 452.6324 L
308.206 458.9342 L
308.206 397.7707 L
326.7026 391.4689 L
f
0.15 0.55 1 0 (gold) 0.4958 x
325.9797 391.7152 m
325.9797 452.8787 L
308.447 458.8521 L
308.447 397.6886 L
325.9797 391.7152 L
f
0.15 0.55 1 0 (gold) 0.5195 x
325.2563 391.9616 m
325.2563 453.1252 L
308.6881 458.77 L
308.6881 397.6065 L
325.2563 391.9616 L
f
0.15 0.55 1 0 (gold) 0.5431 x
324.5334 392.2079 m
324.5334 453.3714 L
308.9291 458.6879 L
308.9291 397.5244 L
324.5334 392.2079 L
f
0.15 0.55 1 0 (gold) 0.5667 x
323.8099 392.4544 m
323.8099 453.618 L
309.1702 458.6057 L
309.1702 397.4422 L
323.8099 392.4544 L
f
0.15 0.55 1 0 (gold) 0.5903 x
323.087 392.7007 m
323.087 453.8642 L
309.4112 458.5236 L
309.4112 397.3601 L
323.087 392.7007 L
f
0.15 0.55 1 0 (gold) 0.6139 x
322.3637 392.9471 m
322.3637 454.1106 L
309.6522 458.4414 L
309.6522 397.278 L
322.3637 392.9471 L
f
0.15 0.55 1 0 (gold) 0.6375 x
321.6407 393.1935 m
321.6407 454.357 L
309.8933 458.3594 L
309.8933 397.1958 L
321.6407 393.1935 L
f
0.15 0.55 1 0 (gold) 0.6611 x
320.9174 393.44 m
320.9174 454.6035 L
310.1344 458.2772 L
310.1344 397.1138 L
320.9174 393.44 L
f
0.15 0.55 1 0 (gold) 0.6847 x
320.1944 393.6863 m
320.1944 454.8498 L
310.3754 458.1951 L
310.3754 397.0317 L
320.1944 393.6863 L
f
0.15 0.55 1 0 (gold) 0.7083 x
319.471 393.9327 m
319.471 455.0962 L
310.6165 458.1129 L
310.6165 396.9496 L
319.471 393.9327 L
f
0.15 0.55 1 0 (gold) 0.7319 x
318.748 394.179 m
318.748 455.3424 L
310.8574 458.0308 L
310.8574 396.8673 L
318.748 394.179 L
f
0.15 0.55 1 0 (gold) 0.7556 x
318.0247 394.4255 m
318.0247 455.589 L
311.0986 457.9486 L
311.0986 396.7852 L
318.0247 394.4255 L
f
0.15 0.55 1 0 (gold) 0.7792 x
317.3017 394.6718 m
317.3017 455.8353 L
311.3395 457.8666 L
311.3395 396.7031 L
317.3017 394.6718 L
f
0.15 0.55 1 0 (gold) 0.8028 x
316.5784 394.9182 m
316.5784 456.0817 L
311.5807 457.7845 L
311.5807 396.621 L
316.5784 394.9182 L
f
0.15 0.55 1 0 (gold) 0.8264 x
315.8554 395.1645 m
315.8554 456.328 L
311.8217 457.7023 L
311.8217 396.5388 L
315.8554 395.1645 L
f
U
0.15 0.55 1 0 (gold) 0.85 x
315.1325 395.4109 m
315.1325 456.5744 L
312.0627 457.6202 L
312.0627 396.4567 L
315.1325 395.4109 L
f
U
Q
0 A
0 O
0.15 0.55 1 0 (gold) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
361.8045 456.4979 m
361.8045 451.1701 349.3453 446.8509 333.9766 446.8509 c
318.6078 446.8509 306.1486 451.1701 306.1486 456.4979 C
306.1486 461.8257 318.6076 466.1451 333.9764 466.1454 c
349.3451 466.1456 361.8044 461.8266 361.8045 456.4987 C
361.8045 456.4979 L
f
U
0 To
1 0 0 1 333.6048 422.7957 0 Tp
TP
-14.7705 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
8.0999 0 Tl
0 Tc
0 Tw
(Partition\r) Tx 
12.5312 -8.0999 Td
(7) Tx 
(\r) TX 
TO
u
q
423.9216 403.2161 m
423.9216 397.8884 411.4624 393.5691 396.0938 393.5691 c
380.725 393.5691 368.2658 397.8884 368.2658 403.2161 C
368.2658 462.7982 L
368.2658 468.1261 380.725 472.4454 396.0938 472.4454 c
411.4624 472.4454 423.9216 468.1261 423.9216 462.7982 C
423.9216 403.2161 L
h
W
n
0 O
1 0 1 0 (green) 0 x
423.9216 403.2161 m
423.9216 397.8884 411.4624 393.5691 396.0938 393.5691 c
380.725 393.5691 368.2658 397.8884 368.2658 403.2161 C
368.2658 462.7982 L
368.2658 468.1261 380.725 472.4454 396.0938 472.4454 c
411.4624 472.4454 423.9216 468.1261 423.9216 462.7982 C
423.9216 403.2161 L
f
u
403.265 386.5414 m
403.265 454.0049 L
365.4845 466.8767 L
365.4845 399.4132 L
403.265 386.5414 L
f
u
1 0 1 0 (green) 0.0236 x
402.542 386.7876 m
402.542 454.2511 L
365.7256 466.7946 L
365.7256 399.3312 L
402.542 386.7876 L
f
1 0 1 0 (green) 0.0472 x
401.8191 387.034 m
401.8191 454.4974 L
365.9666 466.7124 L
365.9666 399.249 L
401.8191 387.034 L
f
1 0 1 0 (green) 0.0708 x
401.0958 387.2805 m
401.0958 454.7438 L
366.2078 466.6303 L
366.2078 399.1669 L
401.0958 387.2805 L
f
1 0 1 0 (green) 0.0944 x
400.3728 387.5267 m
400.3728 454.9902 L
366.4487 466.5483 L
366.4487 399.0848 L
400.3728 387.5267 L
f
1 0 1 0 (green) 0.1181 x
399.6495 387.7732 m
399.6495 455.2366 L
366.6898 466.4661 L
366.6898 399.0026 L
399.6495 387.7732 L
f
1 0 1 0 (green) 0.1417 x
398.9265 388.0195 m
398.9265 455.4829 L
366.9308 466.384 L
366.9308 398.9206 L
398.9265 388.0195 L
f
1 0 1 0 (green) 0.1653 x
398.2031 388.266 m
398.2031 455.7294 L
367.1718 466.3018 L
367.1718 398.8384 L
398.2031 388.266 L
f
1 0 1 0 (green) 0.1889 x
396.7268 390.1256 m
396.7268 457.589 L
367.4129 466.2197 L
367.4129 398.7563 L
396.7268 390.1256 L
f
1 0 1 0 (green) 0.2125 x
396.7568 388.7588 m
396.7568 456.2222 L
367.654 466.1376 L
367.654 398.6741 L
396.7568 388.7588 L
f
1 0 1 0 (green) 0.2361 x
396.0338 389.005 m
396.0338 456.4685 L
367.8951 466.0555 L
367.8951 398.5921 L
396.0338 389.005 L
f
1 0 1 0 (green) 0.2597 x
395.3105 389.2516 m
395.3105 456.7149 L
368.1361 465.9733 L
368.1361 398.5099 L
395.3105 389.2516 L
f
1 0 1 0 (green) 0.2833 x
394.5875 389.4979 m
394.5875 456.9613 L
368.3771 465.8913 L
368.3771 398.4278 L
394.5875 389.4979 L
f
1 0 1 0 (green) 0.3069 x
393.8641 389.7443 m
393.8641 457.2078 L
368.6183 465.809 L
368.6183 398.3456 L
393.8641 389.7443 L
f
1 0 1 0 (green) 0.3305 x
393.1412 389.9906 m
393.1412 457.454 L
368.8592 465.7269 L
368.8592 398.2635 L
393.1412 389.9906 L
f
1 0 1 0 (green) 0.3542 x
392.4177 390.2371 m
392.4177 457.7005 L
369.1004 465.6448 L
369.1004 398.1813 L
392.4177 390.2371 L
f
1 0 1 0 (green) 0.3778 x
391.6949 390.4834 m
391.6949 457.9468 L
369.3413 465.5627 L
369.3413 398.0993 L
391.6949 390.4834 L
f
1 0 1 0 (green) 0.4014 x
390.9716 390.7298 m
390.9716 458.1932 L
369.5825 465.4805 L
369.5825 398.0171 L
390.9716 390.7298 L
f
1 0 1 0 (green) 0.425 x
390.2486 390.9761 m
390.2486 458.4396 L
369.8234 465.3984 L
369.8234 397.9351 L
390.2486 390.9761 L
f
1 0 1 0 (green) 0.4486 x
389.5255 391.2225 m
389.5255 458.6859 L
370.0644 465.3163 L
370.0644 397.8529 L
389.5255 391.2225 L
f
1 0 1 0 (green) 0.4722 x
388.8022 391.4689 m
388.8022 458.9323 L
370.3055 465.2342 L
370.3055 397.7707 L
388.8022 391.4689 L
f
1 0 1 0 (green) 0.4958 x
388.0792 391.7152 m
388.0792 459.1787 L
370.5465 465.1521 L
370.5465 397.6886 L
388.0792 391.7152 L
f
1 0 1 0 (green) 0.5195 x
387.3559 391.9616 m
387.3559 459.4252 L
370.7877 465.0699 L
370.7877 397.6065 L
387.3559 391.9616 L
f
1 0 1 0 (green) 0.5431 x
386.6329 392.2079 m
386.6329 459.6714 L
371.0287 464.9878 L
371.0287 397.5244 L
386.6329 392.2079 L
f
1 0 1 0 (green) 0.5667 x
385.9095 392.4544 m
385.9095 459.9179 L
371.2698 464.9057 L
371.2698 397.4422 L
385.9095 392.4544 L
f
1 0 1 0 (green) 0.5903 x
385.1866 392.7007 m
385.1866 460.1641 L
371.5108 464.8236 L
371.5108 397.3601 L
385.1866 392.7007 L
f
1 0 1 0 (green) 0.6139 x
384.4632 392.9471 m
384.4632 460.4106 L
371.7518 464.7413 L
371.7518 397.278 L
384.4632 392.9471 L
f
1 0 1 0 (green) 0.6375 x
383.7403 393.1935 m
383.7403 460.657 L
371.9928 464.6593 L
371.9928 397.1958 L
383.7403 393.1935 L
f
1 0 1 0 (green) 0.6611 x
383.0169 393.44 m
383.0169 460.9034 L
372.2339 464.5772 L
372.2339 397.1138 L
383.0169 393.44 L
f
1 0 1 0 (green) 0.6847 x
382.294 393.6863 m
382.294 461.1497 L
372.475 464.4951 L
372.475 397.0317 L
382.294 393.6863 L
f
1 0 1 0 (green) 0.7083 x
381.5706 393.9327 m
381.5706 461.3962 L
372.7161 464.4128 L
372.7161 396.9496 L
381.5706 393.9327 L
f
1 0 1 0 (green) 0.7319 x
380.8476 394.179 m
380.8476 461.6424 L
372.957 464.3308 L
372.957 396.8673 L
380.8476 394.179 L
f
1 0 1 0 (green) 0.7556 x
380.1243 394.4255 m
380.1243 461.8889 L
373.1982 464.2486 L
373.1982 396.7852 L
380.1243 394.4255 L
f
1 0 1 0 (green) 0.7792 x
379.4013 394.6718 m
379.4013 462.1352 L
373.4391 464.1665 L
373.4391 396.7031 L
379.4013 394.6718 L
f
1 0 1 0 (green) 0.8028 x
378.678 394.9182 m
378.678 462.3816 L
373.6803 464.0844 L
373.6803 396.621 L
378.678 394.9182 L
f
1 0 1 0 (green) 0.8264 x
377.955 395.1645 m
377.955 462.628 L
373.9213 464.0023 L
373.9213 396.5388 L
377.955 395.1645 L
f
U
1 0 1 0 (green) 0.85 x
377.2321 395.4109 m
377.2321 462.8743 L
374.1623 463.9202 L
374.1623 396.4567 L
377.2321 395.4109 L
f
U
Q
0 A
0 O
1 0 1 0 (green) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
423.9041 462.7979 m
423.9041 457.4701 411.4449 453.1509 396.0761 453.1509 c
380.7074 453.1509 368.2482 457.4701 368.2482 462.7979 C
368.2481 468.1257 380.7072 472.4451 396.076 472.4454 c
411.4447 472.4456 423.9039 468.1266 423.9041 462.7987 C
423.9041 462.7979 L
f
U
0 To
1 0 0 1 395.7043 426.9957 0 Tp
TP
-14.7705 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
8.0999 0 Tl
0 Tc
0 Tw
(Partition\r) Tx 
12.5312 -8.0999 Td
(7) Tx 
(\r) TX 
TO
0 1 0.85 0 (red) 0 x
411.0792 519.4751 m
395.9721 519.4751 L
395.9721 549.9616 L
394.0221 549.9616 L
394.0221 519.4751 L
380.9204 519.4751 L
380.9204 519.5126 L
378.9705 519.5126 L
378.9705 519.4751 L
378.9705 517.5252 L
378.9705 504.1152 L
380.9204 504.1152 L
380.9204 517.5252 L
411.0792 517.5252 L
411.0792 519.4751 L
f
1 g
0 R
0 G
0.5 w
402.7596 526.3966 m
402.7596 535.3965 L
387.4597 535.3965 L
387.4597 526.3966 L
402.7596 526.3966 L
b
0 To
1 0 0 1 395.2972 528.0475 0 Tp
TP
-5.5977 0 Td
0 Tr
0 g
1 w
7.1999 0 Tl
(/d3) Tx 
(\r) TX 
TO
0 1 0.85 0 (red) 0 x
411.1542 519.5126 m
409.2042 519.5126 L
409.2042 504.1152 L
411.1542 504.1152 L
411.1542 519.5126 L
f
1 g
0 R
0 G
0.5 w
391.334 495.4837 m
391.334 505.6681 L
368.7797 505.6681 L
368.7797 495.4837 L
391.334 495.4837 L
b
0 To
1 0 0 1 380.0955 498.3476 0 Tp
TP
-10.0713 0 Td
0 Tr
0 g
1 w
(/proj3) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
421.5192 495.4542 m
421.5192 505.6383 L
398.9657 505.6383 L
398.9657 495.4542 L
421.5192 495.4542 L
b
0 To
1 0 0 1 410.3292 498.3476 0 Tp
TP
-10.0713 0 Td
0 Tr
0 g
1 w
(/proj4) Tx 
(\r) TX 
TO
0.15 0.55 1 0 (gold) 0.5 x
336.5537 455.7955 m
336.5537 485.9727 l
341.6513 485.9727 l
333.3679 494.2108 l
325.2423 486.0852 l
330.4787 486.0852 l
330.4787 455.7955 L
336.5537 455.7955 L
f
1 1 0 0 (purple) 0.5 x
270.5211 440.269 m
270.5211 511.9872 l
275.5551 511.9872 l
267.5092 520.0566 l
259.3837 511.931 l
264.4462 511.931 l
264.4462 440.269 L
270.5211 440.269 L
f
1 0 1 0 (green) 0.5 x
399.2086 461.6063 m
399.2086 485.3436 l
404.3062 485.3436 l
396.0228 493.5817 l
387.8972 485.4561 l
393.1336 485.4561 l
393.1336 461.6063 L
399.2086 461.6063 L
f
0 R
0.15 0.55 1 0 (gold) 0 X
0.5 w
330.4787 455.7955 m
336.5537 455.7955 L
336.5537 485.9727 l
341.6513 485.9727 l
S
325.2423 486.0852 m
330.4787 486.0852 l
S
1 1 0 0 (purple) 0 X
264.4462 440.269 m
270.5211 440.269 L
270.5211 511.9872 l
275.5551 511.9872 l
S
259.3837 511.931 m
264.4462 511.931 l
S
1 0 1 0 (green) 0 X
393.1336 461.6063 m
399.2086 461.6063 L
399.2086 485.3436 l
404.3062 485.3436 l
S
387.8972 485.4561 m
393.1336 485.4561 l
S
0 To
1 0 0 1 267.9052 383.1484 0 Tp
TP
-11.1875 0 Td
0 Tr
0 O
0 g
1 w
6.2152 0 Tl
(Disk 1) Tx 
(\r) TX 
TO
0 To
1 0 0 1 333.9047 383.1484 0 Tp
TP
-11.1875 0 Td
0 Tr
(Disk 2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 395.7043 383.1484 0 Tp
TP
-11.1875 0 Td
0 Tr
(Disk 3) Tx 
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

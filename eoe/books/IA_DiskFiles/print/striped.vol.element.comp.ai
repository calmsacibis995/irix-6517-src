%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (striped.vol.element.comp.ai)
%%CreationDate: (3/18/99) (11:27 AM)
%%BoundingBox: 150 297 400 518
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (custom black)
%%+ (purple)
%%+ (yellow)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 0.35 0 0.25 (dark blue)
%%+ 0.15 0.55 1 0 (gold)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%%+ 0 0 1 0 (yellow)
%AI3_TemplateBox: 278 362 278 362
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
1 1 0 0 (purple) 0.85 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
346.724 326.2645 m
346.724 311.5628 312.3441 299.6441 269.9352 299.6441 c
227.5261 299.6441 193.1459 311.5628 193.1459 326.2645 C
193.1459 475.5666 L
193.1459 490.2683 227.5261 502.1869 269.9352 502.1869 c
312.3441 502.1869 346.724 490.2683 346.724 475.5666 C
346.724 326.2645 L
f
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
193.1457 326.2597 m
193.1457 326.2622 L
193.1455 340.9637 227.5257 352.8829 269.9346 352.8835 c
312.3436 352.8842 346.7239 340.9661 346.724 326.2645 C
S
u
q
1 w
330.5079 335.0692 m
330.5079 323.5563 303.5847 314.2228 270.374 314.2228 c
237.1634 314.2228 210.24 323.5563 210.24 335.0692 C
210.24 369.9145 L
210.24 381.4275 237.1634 390.761 270.374 390.761 c
303.5847 390.761 330.5079 381.4275 330.5079 369.9145 C
330.5079 335.0692 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
330.5079 335.0692 m
330.5079 323.5563 303.5847 314.2228 270.374 314.2228 c
237.1634 314.2228 210.24 323.5563 210.24 335.0692 C
210.24 369.9145 L
210.24 381.4275 237.1634 390.761 270.374 390.761 c
303.5847 390.761 330.5079 381.4275 330.5079 369.9145 C
330.5079 335.0692 L
f
1 A
u
285.8706 299.0365 m
285.8706 350.9124 L
204.23 378.7275 L
204.23 326.8516 L
285.8706 299.0365 L
f
u
1 1 0 0 (purple) 0.0236 x
284.3083 299.5687 m
284.3083 351.4447 L
204.7508 378.5501 L
204.7508 326.6741 L
284.3083 299.5687 L
f
1 1 0 0 (purple) 0.0472 x
282.7461 300.101 m
282.7461 351.977 L
205.2716 378.3727 L
205.2716 326.4967 L
282.7461 300.101 L
f
1 1 0 0 (purple) 0.0708 x
281.1829 300.6335 m
281.1829 352.5095 L
205.7926 378.1951 L
205.7926 326.3192 L
281.1829 300.6335 L
f
1 1 0 0 (purple) 0.0944 x
279.6207 301.1659 m
279.6207 353.0418 L
206.3134 378.0178 L
206.3134 326.1418 L
279.6207 301.1659 L
f
1 1 0 0 (purple) 0.1181 x
278.0576 301.6984 m
278.0576 353.5744 L
206.8344 377.8402 L
206.8344 325.9643 L
278.0576 301.6984 L
f
1 1 0 0 (purple) 0.1417 x
276.4953 302.2307 m
276.4953 354.1066 L
207.3552 377.6628 L
207.3552 325.7868 L
276.4953 302.2307 L
f
1 1 0 0 (purple) 0.1653 x
274.9321 302.7632 m
274.9321 354.6392 L
207.8762 377.4853 L
207.8762 325.6093 L
274.9321 302.7632 L
f
1 1 0 0 (purple) 0.1889 x
273.3699 303.2955 m
273.3699 355.1714 L
208.397 377.3079 L
208.397 325.4319 L
273.3699 303.2955 L
f
1 1 0 0 (purple) 0.2125 x
271.8068 303.828 m
271.8068 355.704 L
208.918 377.1303 L
208.918 325.2544 L
271.8068 303.828 L
f
1 1 0 0 (purple) 0.2361 x
270.2446 304.3603 m
270.2446 356.2363 L
209.4388 376.9529 L
209.4388 325.077 L
270.2446 304.3603 L
f
1 1 0 0 (purple) 0.2597 x
268.6814 304.8928 m
268.6814 356.7688 L
209.9598 376.7754 L
209.9598 324.8994 L
268.6814 304.8928 L
f
1 1 0 0 (purple) 0.2833 x
267.1191 305.4251 m
267.1191 357.3011 L
210.4805 376.598 L
210.4805 324.722 L
267.1191 305.4251 L
f
1 1 0 0 (purple) 0.3069 x
265.556 305.9577 m
265.556 357.8336 L
211.0016 376.4205 L
211.0016 324.5445 L
265.556 305.9577 L
f
1 1 0 0 (purple) 0.3305 x
263.9937 306.4899 m
263.9937 358.3659 L
211.5223 376.243 L
211.5223 324.3671 L
263.9937 306.4899 L
f
1 1 0 0 (purple) 0.3542 x
262.4306 307.0225 m
262.4306 358.8984 L
212.0434 376.0655 L
212.0434 324.1895 L
262.4306 307.0225 L
f
1 1 0 0 (purple) 0.3778 x
260.8683 307.5547 m
260.8683 359.4308 L
212.5641 375.8881 L
212.5641 324.0122 L
260.8683 307.5547 L
f
1 1 0 0 (purple) 0.4014 x
259.3052 308.0873 m
259.3052 359.9633 L
213.0852 375.7106 L
213.0852 323.8346 L
259.3052 308.0873 L
f
1 1 0 0 (purple) 0.425 x
257.743 308.6196 m
257.743 360.4956 L
213.6059 375.5332 L
213.6059 323.6572 L
257.743 308.6196 L
f
1 1 0 0 (purple) 0.4486 x
256.1807 309.1519 m
256.1807 361.0278 L
214.1267 375.3557 L
214.1267 323.4798 L
256.1807 309.1519 L
f
1 1 0 0 (purple) 0.4722 x
254.6176 309.6844 m
254.6176 361.5604 L
214.6477 375.1782 L
214.6477 323.3023 L
254.6176 309.6844 L
f
1 1 0 0 (purple) 0.4958 x
253.0553 310.2167 m
253.0553 362.0927 L
215.1685 375.0008 L
215.1685 323.1248 L
253.0553 310.2167 L
f
1 1 0 0 (purple) 0.5195 x
251.4922 310.7492 m
251.4922 362.6252 L
215.6895 374.8233 L
215.6895 322.9473 L
251.4922 310.7492 L
f
1 1 0 0 (purple) 0.5431 x
249.9299 311.2815 m
249.9299 363.1575 L
216.2103 374.6458 L
216.2103 322.7699 L
249.9299 311.2815 L
f
1 1 0 0 (purple) 0.5667 x
248.3668 311.8141 m
248.3668 363.69 L
216.7313 374.4683 L
216.7313 322.5924 L
248.3668 311.8141 L
f
1 1 0 0 (purple) 0.5903 x
246.8045 312.3463 m
246.8045 364.2223 L
217.252 374.2909 L
217.252 322.415 L
246.8045 312.3463 L
f
1 1 0 0 (purple) 0.6139 x
245.2414 312.8789 m
245.2414 364.7548 L
217.7731 374.1134 L
217.7731 322.2375 L
245.2414 312.8789 L
f
1 1 0 0 (purple) 0.6375 x
243.6791 313.4111 m
243.6791 365.2872 L
218.2938 373.936 L
218.2938 322.06 L
243.6791 313.4111 L
f
1 1 0 0 (purple) 0.6611 x
242.1161 313.9437 m
242.1161 365.8197 L
218.8149 373.7584 L
218.8149 321.8825 L
242.1161 313.9437 L
f
1 1 0 0 (purple) 0.6847 x
240.5538 314.476 m
240.5538 366.352 L
219.3357 373.581 L
219.3357 321.7051 L
240.5538 314.476 L
f
1 1 0 0 (purple) 0.7083 x
238.9906 315.0085 m
238.9906 366.8845 L
219.8567 373.4035 L
219.8567 321.5276 L
238.9906 315.0085 L
f
1 1 0 0 (purple) 0.7319 x
237.4284 315.5408 m
237.4284 367.4168 L
220.3775 373.226 L
220.3775 321.3501 L
237.4284 315.5408 L
f
1 1 0 0 (purple) 0.7556 x
235.8652 316.0734 m
235.8652 367.9493 L
220.8985 373.0486 L
220.8985 321.1726 L
235.8652 316.0734 L
f
1 1 0 0 (purple) 0.7792 x
234.303 316.6056 m
234.303 368.4816 L
221.4192 372.8711 L
221.4192 320.9952 L
234.303 316.6056 L
f
1 1 0 0 (purple) 0.8028 x
232.7399 317.1382 m
232.7399 369.0141 L
221.9403 372.6936 L
221.9403 320.8177 L
232.7399 317.1382 L
f
1 1 0 0 (purple) 0.8264 x
231.1776 317.6705 m
231.1776 369.5464 L
222.4611 372.5162 L
222.4611 320.6402 L
231.1776 317.6705 L
f
U
1 1 0 0 (purple) 0.85 x
229.6154 318.2027 m
229.6154 370.0787 L
222.9818 372.3388 L
222.9818 320.4628 L
229.6154 318.2027 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
330.4699 369.9136 m
330.4699 358.4006 303.5465 349.0671 270.3359 349.0671 c
237.1253 349.0671 210.202 358.4006 210.202 369.9136 C
210.2018 381.4265 237.125 390.7605 270.3356 390.761 c
303.5462 390.7614 330.4696 381.4286 330.4699 369.9154 C
330.4699 369.9136 L
f
u
1 1 0 0 (purple) 0.575 x
270.3439 349.7767 m
237.9565 349.7767 211.7006 358.7664 211.7006 369.8552 C
211.7003 380.9439 237.9561 389.9339 270.3436 389.9344 c
302.731 389.9348 328.987 380.9458 328.9873 369.8569 C
328.9873 369.8552 L
328.9873 358.7664 302.7313 349.7767 270.3439 349.7767 c
f
1 1 0 0 (purple) 0.5 x
270.3518 350.4864 m
238.7876 350.4864 213.199 359.1321 213.199 369.7967 C
213.1987 380.4613 238.7873 389.1074 270.3516 389.1078 c
301.9158 389.1083 327.5045 380.4631 327.5048 369.7983 C
327.5048 369.7967 L
327.5048 359.1321 301.9161 350.4864 270.3518 350.4864 c
f
1 1 0 0 (purple) 0.425 x
270.3598 351.196 m
239.6188 351.196 214.6976 359.4978 214.6976 369.7382 C
214.6973 379.9786 239.6185 388.2808 270.3596 388.2813 c
301.1006 388.2816 326.0219 379.9804 326.0223 369.7398 C
326.0223 369.7382 L
326.0223 359.4978 301.1009 351.196 270.3598 351.196 c
f
1 1 0 0 (purple) 0.35 x
270.3678 351.9055 m
240.4499 351.9055 216.196 359.8636 216.196 369.6798 C
216.1958 379.496 240.4496 387.4543 270.3675 387.4547 c
300.2854 387.4551 324.5394 379.4977 324.5398 369.6813 C
324.5398 369.6798 L
324.5398 359.8636 300.2857 351.9055 270.3678 351.9055 c
f
1 1 0 0 (purple) 0.275 x
270.3758 352.6152 m
241.2811 352.6152 217.6946 360.2293 217.6946 369.6213 C
217.6943 379.0133 241.2808 386.6277 270.3755 386.6281 c
299.4702 386.6285 323.0568 379.0149 323.0571 369.6227 C
323.0571 369.6213 L
323.0571 360.2293 299.4704 352.6152 270.3758 352.6152 c
f
U
1 1 0 0 (purple) 0.2 x
321.5745 369.5628 m
321.5745 360.595 298.6552 353.3249 270.3837 353.3249 c
242.1123 353.3249 219.1931 360.595 219.1931 369.5628 C
219.1929 378.5307 242.112 385.8011 270.3835 385.8015 c
298.655 385.8019 321.5742 378.5322 321.5745 369.5642 C
321.5745 369.5628 L
f
1 1 0 0 (purple) 0.85 x
224.1677 321.7145 m
243.1605 330.5967 l
243.1605 316.5175 l
224.1677 316.5175 l
224.1677 321.7145 l
f
1 1 0 0 (purple) 0 x
0.5 w
224.1677 321.7145 m
224.1677 356.2984 l
269.9016 371.9839 l
243.1605 351.0069 l
243.1605 330.5967 l
224.1677 321.7145 l
f
u
1 1 0 0 (purple) 0.75 x
223.3173 340.8963 m
250.0584 361.8733 l
204.3245 347.9189 l
208.8142 345.099 216.4195 342.1246 223.3173 340.8963 c
f
1 1 0 0 (purple) 0.25 x
223.3173 340.8963 m
250.0584 361.8733 L
250.0584 356.3929 L
243.1605 351.0069 L
243.1605 321.998 L
223.3173 306.4069 L
223.3173 340.8963 L
f
1 1 0 0 (purple) 0.6 x
223.3173 340.8963 m
223.3173 306.4069 l
217.8103 307.4487 208.0367 311.2248 204.3245 313.8903 c
204.3245 347.9189 L
208.9253 344.8769 216.4195 342.1246 223.3173 340.8963 C
f
U
u
0 R
0 0 1 0 (yellow) 0 X
272.0471 390.2391 m
267.4132 348.8651 l
267.4132 314.1237 l
S
292.044 389.2444 m
243.2549 351.0347 l
243.2549 316.2934 l
S
310.1864 385.7167 m
224.0732 356.4182 l
224.0732 353.2746 l
S
321.2734 380.6772 m
212.9547 363.4421 l
212.9547 349.5895 l
S
231.5696 386.2206 m
314.7534 355.4165 l
314.7534 320.6751 l
S
219.4747 380.6772 m
326.3758 362.4404 l
326.3758 327.699 l
S
251.2237 388.7404 m
294.1543 350.9124 l
294.1543 316.171 l
S
210.4665 372.6139 m
328.8957 372.6139 l
S
U
U
u
q
1 w
330.5079 390.488 m
330.5079 378.975 303.5847 369.6415 270.374 369.6415 c
237.1634 369.6415 210.24 378.975 210.24 390.488 C
210.24 425.3332 L
210.24 436.8462 237.1634 446.1796 270.374 446.1796 c
303.5847 446.1796 330.5079 436.8462 330.5079 425.3332 C
330.5079 390.488 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
330.5079 390.488 m
330.5079 378.975 303.5847 369.6415 270.374 369.6415 c
237.1634 369.6415 210.24 378.975 210.24 390.488 C
210.24 425.3332 L
210.24 436.8462 237.1634 446.1796 270.374 446.1796 c
303.5847 446.1796 330.5079 436.8462 330.5079 425.3332 C
330.5079 390.488 L
f
u
285.8706 354.4552 m
285.8706 406.3312 L
204.23 434.1463 L
204.23 382.2703 L
285.8706 354.4552 L
f
u
1 1 0 0 (purple) 0.0236 x
284.3083 354.9874 m
284.3083 406.8634 L
204.7508 433.9688 L
204.7508 382.0929 L
284.3083 354.9874 L
f
1 1 0 0 (purple) 0.0472 x
282.7461 355.5197 m
282.7461 407.3956 L
205.2716 433.7914 L
205.2716 381.9154 L
282.7461 355.5197 L
f
1 1 0 0 (purple) 0.0708 x
281.1829 356.0523 m
281.1829 407.9282 L
205.7926 433.6139 L
205.7926 381.738 L
281.1829 356.0523 L
f
1 1 0 0 (purple) 0.0944 x
279.6207 356.5845 m
279.6207 408.4605 L
206.3134 433.4364 L
206.3134 381.5605 L
279.6207 356.5845 L
f
1 1 0 0 (purple) 0.1181 x
278.0576 357.1172 m
278.0576 408.993 L
206.8344 433.259 L
206.8344 381.383 L
278.0576 357.1172 L
f
1 1 0 0 (purple) 0.1417 x
276.4953 357.6494 m
276.4953 409.5253 L
207.3552 433.0815 L
207.3552 381.2056 L
276.4953 357.6494 L
f
1 1 0 0 (purple) 0.1653 x
274.9321 358.1819 m
274.9321 410.0579 L
207.8762 432.904 L
207.8762 381.0281 L
274.9321 358.1819 L
f
1 1 0 0 (purple) 0.1889 x
273.3699 358.7142 m
273.3699 410.5901 L
208.397 432.7266 L
208.397 380.8506 L
273.3699 358.7142 L
f
1 1 0 0 (purple) 0.2125 x
271.8068 359.2468 m
271.8068 411.1227 L
208.918 432.5491 L
208.918 380.6731 L
271.8068 359.2468 L
f
1 1 0 0 (purple) 0.2361 x
270.2446 359.779 m
270.2446 411.6549 L
209.4388 432.3716 L
209.4388 380.4957 L
270.2446 359.779 L
f
1 1 0 0 (purple) 0.2597 x
268.6814 360.3116 m
268.6814 412.1875 L
209.9598 432.1941 L
209.9598 380.3182 L
268.6814 360.3116 L
f
1 1 0 0 (purple) 0.2833 x
267.1191 360.8439 m
267.1191 412.7197 L
210.4805 432.0166 L
210.4805 380.1407 L
267.1191 360.8439 L
f
1 1 0 0 (purple) 0.3069 x
265.556 361.3764 m
265.556 413.2523 L
211.0016 431.8392 L
211.0016 379.9633 L
265.556 361.3764 L
f
1 1 0 0 (purple) 0.3305 x
263.9937 361.9087 m
263.9937 413.7846 L
211.5223 431.6617 L
211.5223 379.7858 L
263.9937 361.9087 L
f
1 1 0 0 (purple) 0.3542 x
262.4306 362.4412 m
262.4306 414.3172 L
212.0434 431.4842 L
212.0434 379.6083 L
262.4306 362.4412 L
f
1 1 0 0 (purple) 0.3778 x
260.8683 362.9735 m
260.8683 414.8494 L
212.5641 431.3068 L
212.5641 379.4308 L
260.8683 362.9735 L
f
1 1 0 0 (purple) 0.4014 x
259.3052 363.5061 m
259.3052 415.382 L
213.0852 431.1293 L
213.0852 379.2534 L
259.3052 363.5061 L
f
1 1 0 0 (purple) 0.425 x
257.743 364.0383 m
257.743 415.9142 L
213.6059 430.9518 L
213.6059 379.0759 L
257.743 364.0383 L
f
1 1 0 0 (purple) 0.4486 x
256.1807 364.5706 m
256.1807 416.4465 L
214.1267 430.7744 L
214.1267 378.8985 L
256.1807 364.5706 L
f
1 1 0 0 (purple) 0.4722 x
254.6176 365.1031 m
254.6176 416.9791 L
214.6477 430.5969 L
214.6477 378.721 L
254.6176 365.1031 L
f
1 1 0 0 (purple) 0.4958 x
253.0553 365.6354 m
253.0553 417.5114 L
215.1685 430.4195 L
215.1685 378.5435 L
253.0553 365.6354 L
f
1 1 0 0 (purple) 0.5195 x
251.4922 366.1679 m
251.4922 418.0439 L
215.6895 430.2419 L
215.6895 378.366 L
251.4922 366.1679 L
f
1 1 0 0 (purple) 0.5431 x
249.9299 366.7002 m
249.9299 418.5762 L
216.2103 430.0645 L
216.2103 378.1886 L
249.9299 366.7002 L
f
1 1 0 0 (purple) 0.5667 x
248.3668 367.2328 m
248.3668 419.1088 L
216.7313 429.887 L
216.7313 378.0111 L
248.3668 367.2328 L
f
1 1 0 0 (purple) 0.5903 x
246.8045 367.7651 m
246.8045 419.641 L
217.252 429.7096 L
217.252 377.8336 L
246.8045 367.7651 L
f
1 1 0 0 (purple) 0.6139 x
245.2414 368.2976 m
245.2414 420.1736 L
217.7731 429.5321 L
217.7731 377.6561 L
245.2414 368.2976 L
f
1 1 0 0 (purple) 0.6375 x
243.6791 368.8299 m
243.6791 420.7058 L
218.2938 429.3547 L
218.2938 377.4787 L
243.6791 368.8299 L
f
1 1 0 0 (purple) 0.6611 x
242.1161 369.3625 m
242.1161 421.2384 L
218.8149 429.1771 L
218.8149 377.3012 L
242.1161 369.3625 L
f
1 1 0 0 (purple) 0.6847 x
240.5538 369.8947 m
240.5538 421.7706 L
219.3357 428.9997 L
219.3357 377.1237 L
240.5538 369.8947 L
f
1 1 0 0 (purple) 0.7083 x
238.9906 370.4273 m
238.9906 422.3032 L
219.8567 428.8222 L
219.8567 376.9462 L
238.9906 370.4273 L
f
1 1 0 0 (purple) 0.7319 x
237.4284 370.9595 m
237.4284 422.8355 L
220.3775 428.6448 L
220.3775 376.7688 L
237.4284 370.9595 L
f
1 1 0 0 (purple) 0.7556 x
235.8652 371.4921 m
235.8652 423.368 L
220.8985 428.4673 L
220.8985 376.5913 L
235.8652 371.4921 L
f
1 1 0 0 (purple) 0.7792 x
234.303 372.0243 m
234.303 423.9003 L
221.4192 428.2899 L
221.4192 376.4139 L
234.303 372.0243 L
f
1 1 0 0 (purple) 0.8028 x
232.7399 372.5569 m
232.7399 424.4329 L
221.9403 428.1123 L
221.9403 376.2364 L
232.7399 372.5569 L
f
1 1 0 0 (purple) 0.8264 x
231.1776 373.0892 m
231.1776 424.9651 L
222.4611 427.9349 L
222.4611 376.0589 L
231.1776 373.0892 L
f
U
1 1 0 0 (purple) 0.85 x
229.6154 373.6214 m
229.6154 425.4974 L
222.9818 427.7575 L
222.9818 375.8815 L
229.6154 373.6214 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
330.4699 425.3323 m
330.4699 413.8193 303.5465 404.4858 270.3359 404.4858 c
237.1253 404.4858 210.202 413.8193 210.202 425.3323 C
210.2018 436.8453 237.125 446.1792 270.3356 446.1796 c
303.5462 446.1801 330.4696 436.8472 330.4699 425.3341 C
330.4699 425.3323 L
f
u
1 1 0 0 (purple) 0.575 x
328.9873 425.2738 m
328.9873 414.185 302.7313 405.1955 270.3439 405.1955 c
237.9565 405.1955 211.7006 414.185 211.7006 425.2738 C
211.7003 436.3626 237.9562 445.3526 270.3436 445.3531 c
302.731 445.3535 328.9871 436.3645 328.9873 425.2756 C
328.9873 425.2738 L
f
1 1 0 0 (purple) 0.5 x
327.5047 425.2154 m
327.5047 414.5508 301.916 405.9051 270.3518 405.9051 c
238.7877 405.9051 213.1992 414.5508 213.1992 425.2154 C
213.1989 435.8799 238.7874 444.526 270.3516 444.5265 c
301.9158 444.5269 327.5044 435.8818 327.5047 425.217 C
327.5047 425.2154 L
f
1 1 0 0 (purple) 0.425 x
326.0222 425.1569 m
326.0222 414.9165 301.1009 406.6146 270.3598 406.6146 c
239.6188 406.6146 214.6976 414.9165 214.6976 425.1569 C
214.6973 435.3973 239.6185 443.6995 270.3596 443.7 c
301.1007 443.7003 326.0219 435.399 326.0222 425.1585 C
326.0222 425.1569 L
f
1 1 0 0 (purple) 0.35 x
324.5396 425.0984 m
324.5396 415.2823 300.2856 407.3243 270.3678 407.3243 c
240.45 407.3243 216.1962 415.2823 216.1962 425.0984 C
216.1959 434.9147 240.4497 442.8729 270.3676 442.8733 c
300.2854 442.8737 324.5393 434.9163 324.5396 425.1 C
324.5396 425.0984 L
f
1 1 0 0 (purple) 0.275 x
323.0571 425.04 m
323.0571 415.648 299.4704 408.0339 270.3758 408.0339 c
241.2811 408.0339 217.6946 415.648 217.6946 425.04 C
217.6943 434.4321 241.2808 442.0464 270.3755 442.0468 c
299.4702 442.0472 323.0568 434.4337 323.0571 425.0415 C
323.0571 425.04 L
f
U
1 1 0 0 (purple) 0.2 x
321.5745 424.9816 m
321.5745 416.0137 298.6552 408.7435 270.3837 408.7435 c
242.1123 408.7435 219.1931 416.0137 219.1931 424.9816 C
219.1929 433.9494 242.112 441.2199 270.3835 441.2202 c
298.655 441.2206 321.5742 433.9509 321.5745 424.983 C
321.5745 424.9816 L
f
u
0 R
0 0 1 0 (yellow) 0 X
0.5 w
272.0471 445.6577 m
267.4132 404.2838 l
267.4132 369.5424 l
S
292.044 444.663 m
243.2549 406.4534 l
243.2549 371.712 l
S
310.1864 441.1354 m
224.0732 411.8369 l
224.0732 377.0956 l
S
321.2734 436.0959 m
212.9547 418.8607 l
212.9547 384.1194 l
S
231.5696 441.6393 m
314.7534 410.8352 l
314.7534 376.0938 l
S
219.4747 436.0959 m
326.3758 417.859 l
326.3758 383.1177 l
S
251.2237 444.1591 m
294.1543 406.3311 l
294.1543 371.5897 l
S
210.4665 428.0326 m
328.8957 428.0326 l
S
U
U
u
q
1 w
330.5079 441.7653 m
330.5079 430.2523 303.5847 420.9188 270.374 420.9188 c
237.1634 420.9188 210.24 430.2523 210.24 441.7653 C
210.24 475.9128 L
210.24 487.4258 237.1634 496.7593 270.374 496.7593 c
303.5847 496.7593 330.5079 487.4258 330.5079 475.9128 C
330.5079 441.7653 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
330.5079 441.7653 m
330.5079 430.2523 303.5847 420.9188 270.374 420.9188 c
237.1634 420.9188 210.24 430.2523 210.24 441.7653 C
210.24 475.9128 L
210.24 487.4258 237.1634 496.7593 270.374 496.7593 c
303.5847 496.7593 330.5079 487.4258 330.5079 475.9128 C
330.5079 441.7653 L
f
u
285.8706 405.7326 m
285.8706 456.9107 L
204.23 484.7258 L
204.23 433.5476 L
285.8706 405.7326 L
f
u
1 1 0 0 (purple) 0.0236 x
284.3083 406.2648 m
284.3083 457.443 L
204.7508 484.5484 L
204.7508 433.3703 L
284.3083 406.2648 L
f
1 1 0 0 (purple) 0.0472 x
282.7461 406.7971 m
282.7461 457.9753 L
205.2716 484.371 L
205.2716 433.1928 L
282.7461 406.7971 L
f
1 1 0 0 (purple) 0.0708 x
281.1829 407.3297 m
281.1829 458.5078 L
205.7926 484.1935 L
205.7926 433.0153 L
281.1829 407.3297 L
f
1 1 0 0 (purple) 0.0944 x
279.6207 407.8619 m
279.6207 459.0401 L
206.3134 484.016 L
206.3134 432.8379 L
279.6207 407.8619 L
f
1 1 0 0 (purple) 0.1181 x
278.0576 408.3945 m
278.0576 459.5726 L
206.8344 483.8385 L
206.8344 432.6604 L
278.0576 408.3945 L
f
1 1 0 0 (purple) 0.1417 x
276.4953 408.9267 m
276.4953 460.1049 L
207.3552 483.6611 L
207.3552 432.483 L
276.4953 408.9267 L
f
1 1 0 0 (purple) 0.1653 x
274.9321 409.4593 m
274.9321 460.6374 L
207.8762 483.4836 L
207.8762 432.3054 L
274.9321 409.4593 L
f
1 1 0 0 (purple) 0.1889 x
273.3699 409.9916 m
273.3699 461.1697 L
208.397 483.3061 L
208.397 432.128 L
273.3699 409.9916 L
f
1 1 0 0 (purple) 0.2125 x
271.8068 410.5242 m
271.8068 461.7023 L
208.918 483.1286 L
208.918 431.9505 L
271.8068 410.5242 L
f
1 1 0 0 (purple) 0.2361 x
270.2446 411.0564 m
270.2446 462.2346 L
209.4388 482.9512 L
209.4388 431.773 L
270.2446 411.0564 L
f
1 1 0 0 (purple) 0.2597 x
268.6814 411.589 m
268.6814 462.7671 L
209.9598 482.7737 L
209.9598 431.5955 L
268.6814 411.589 L
f
1 1 0 0 (purple) 0.2833 x
267.1191 412.1212 m
267.1191 463.2994 L
210.4805 482.5963 L
210.4805 431.4181 L
267.1191 412.1212 L
f
1 1 0 0 (purple) 0.3069 x
265.556 412.6538 m
265.556 463.8319 L
211.0016 482.4187 L
211.0016 431.2406 L
265.556 412.6538 L
f
1 1 0 0 (purple) 0.3305 x
263.9937 413.186 m
263.9937 464.3642 L
211.5223 482.2413 L
211.5223 431.0632 L
263.9937 413.186 L
f
1 1 0 0 (purple) 0.3542 x
262.4306 413.7186 m
262.4306 464.8967 L
212.0434 482.0638 L
212.0434 430.8857 L
262.4306 413.7186 L
f
1 1 0 0 (purple) 0.3778 x
260.8683 414.2509 m
260.8683 465.429 L
212.5641 481.8864 L
212.5641 430.7082 L
260.8683 414.2509 L
f
1 1 0 0 (purple) 0.4014 x
259.3052 414.7834 m
259.3052 465.9616 L
213.0852 481.7088 L
213.0852 430.5307 L
259.3052 414.7834 L
f
1 1 0 0 (purple) 0.425 x
257.743 415.3157 m
257.743 466.4938 L
213.6059 481.5315 L
213.6059 430.3533 L
257.743 415.3157 L
f
1 1 0 0 (purple) 0.4486 x
256.1807 415.848 m
256.1807 467.0261 L
214.1267 481.354 L
214.1267 430.1759 L
256.1807 415.848 L
f
1 1 0 0 (purple) 0.4722 x
254.6176 416.3805 m
254.6176 467.5586 L
214.6477 481.1765 L
214.6477 429.9983 L
254.6176 416.3805 L
f
1 1 0 0 (purple) 0.4958 x
253.0553 416.9128 m
253.0553 468.091 L
215.1685 480.9991 L
215.1685 429.8209 L
253.0553 416.9128 L
f
1 1 0 0 (purple) 0.5195 x
251.4922 417.4454 m
251.4922 468.6235 L
215.6895 480.8216 L
215.6895 429.6434 L
251.4922 417.4454 L
f
1 1 0 0 (purple) 0.5431 x
249.9299 417.9776 m
249.9299 469.1558 L
216.2103 480.6441 L
216.2103 429.4659 L
249.9299 417.9776 L
f
1 1 0 0 (purple) 0.5667 x
248.3668 418.5102 m
248.3668 469.6883 L
216.7313 480.4666 L
216.7313 429.2884 L
248.3668 418.5102 L
f
1 1 0 0 (purple) 0.5903 x
246.8045 419.0424 m
246.8045 470.2206 L
217.252 480.2892 L
217.252 429.111 L
246.8045 419.0424 L
f
1 1 0 0 (purple) 0.6139 x
245.2414 419.575 m
245.2414 470.7531 L
217.7731 480.1117 L
217.7731 428.9335 L
245.2414 419.575 L
f
1 1 0 0 (purple) 0.6375 x
243.6791 420.1073 m
243.6791 471.2854 L
218.2938 479.9342 L
218.2938 428.7561 L
243.6791 420.1073 L
f
1 1 0 0 (purple) 0.6611 x
242.1161 420.6398 m
242.1161 471.818 L
218.8149 479.7567 L
218.8149 428.5786 L
242.1161 420.6398 L
f
1 1 0 0 (purple) 0.6847 x
240.5538 421.1721 m
240.5538 472.3502 L
219.3357 479.5793 L
219.3357 428.4011 L
240.5538 421.1721 L
f
1 1 0 0 (purple) 0.7083 x
238.9906 421.7046 m
238.9906 472.8828 L
219.8567 479.4018 L
219.8567 428.2236 L
238.9906 421.7046 L
f
1 1 0 0 (purple) 0.7319 x
237.4284 422.2369 m
237.4284 473.4151 L
220.3775 479.2244 L
220.3775 428.0462 L
237.4284 422.2369 L
f
1 1 0 0 (purple) 0.7556 x
235.8652 422.7695 m
235.8652 473.9476 L
220.8985 479.0469 L
220.8985 427.8687 L
235.8652 422.7695 L
f
1 1 0 0 (purple) 0.7792 x
234.303 423.3018 m
234.303 474.4799 L
221.4192 478.8694 L
221.4192 427.6912 L
234.303 423.3018 L
f
1 1 0 0 (purple) 0.8028 x
232.7399 423.8343 m
232.7399 475.0125 L
221.9403 478.6919 L
221.9403 427.5137 L
232.7399 423.8343 L
f
1 1 0 0 (purple) 0.8264 x
231.1776 424.3665 m
231.1776 475.5447 L
222.4611 478.5145 L
222.4611 427.3363 L
231.1776 424.3665 L
f
U
1 1 0 0 (purple) 0.85 x
229.6154 424.8988 m
229.6154 476.077 L
222.9818 478.337 L
222.9818 427.1589 L
229.6154 424.8988 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
330.4699 475.9119 m
330.4699 464.399 303.5465 455.0655 270.3359 455.0655 c
237.1253 455.0655 210.202 464.399 210.202 475.9119 C
210.2018 487.4248 237.125 496.7588 270.3356 496.7593 c
303.5462 496.7597 330.4696 487.4268 330.4699 475.9137 C
330.4699 475.9119 L
f
u
0 R
0 0 1 0 (yellow) 0 X
0.5 w
272.0471 496.1161 m
267.4132 454.7421 l
267.4132 420.9457 l
S
292.044 495.1214 m
243.2549 456.9118 l
243.2549 423.1154 l
S
310.1864 491.5937 m
224.0732 462.2953 l
224.0732 428.4988 l
S
321.2734 486.5542 m
212.9547 469.3191 l
212.9547 435.5227 l
S
231.5696 492.0977 m
314.7534 461.2936 l
314.7534 427.4971 l
S
219.4747 486.5542 m
326.3758 468.3174 l
326.3758 434.521 l
S
251.2237 494.6175 m
294.1543 456.7894 l
294.1543 422.993 l
S
210.4665 478.4909 m
328.8957 478.4909 l
S
U
u
[0.25 1 ]0 d
267.4132 434.227 m
267.4132 400.4306 l
S
243.2549 436.3967 m
243.2549 402.6002 l
S
224.0732 441.7801 m
224.0732 407.9837 l
S
212.9547 448.804 m
212.9547 415.0076 l
S
314.7534 440.7784 m
314.7534 406.982 l
S
326.3758 447.8023 m
326.3758 414.0059 l
S
294.1543 436.2743 m
294.1543 402.4779 l
S
U
U
0 To
1 0 0 1 353.4479 457.4724 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
9.0711 0 Tl
0 Tc
0 Tw
(Disk partition) Tx 
(\r) TX 
TO
0 R
0 0 0 1 (custom black) 0 X
0.5 w
330.8485 476.9764 m
340.25 476.9112 L
342.0018 476.9112 343.8081 474.5684 343.8081 472.2256 c
343.8081 463.1128 l
343.8081 459.4314 351.0541 459.4314 Y
343.8081 459.4314 343.8081 455.75 v
343.8081 445.167 l
343.8081 442.8242 342.0018 439.8969 340.25 439.8969 c
330.8485 439.8969 l
S
0 To
1 0 0 1 353.4479 405.373 0 Tp
TP
0 Tr
0 O
0 g
1 w
(Disk partition) Tx 
(\r) TX 
TO
0 R
0 0 0 1 (custom black) 0 X
0.5 w
330.8485 426.9936 m
340.25 427.0708 L
342.0018 427.0708 343.8081 424.6998 343.8081 422.357 c
343.8081 411.1985 l
343.8081 407.5171 351.0541 407.5171 Y
343.8081 407.5171 343.8081 403.8357 v
343.8081 392.7913 l
343.8081 390.4486 342.0018 388.1059 340.25 388.1059 c
330.8485 388.1059 l
S
0 To
1 0 0 1 353.4479 350.7384 0 Tp
TP
0 Tr
0 O
0 g
1 w
(Disk partition) Tx 
(\r) TX 
TO
0 To
1 0 0 1 186.8223 299.0614 0 Tp
TP
-36.2578 0 Td
0 Tr
2 Ta
(Stripe unit) Tx 
(\r) TX 
TO
0 R
0 0 0 1 (custom black) 0 X
0.5 w
330.8485 371.0628 m
340.25 371.0832 L
342.0018 371.0832 343.8081 368.7405 343.8081 366.3977 c
343.8081 356.6411 l
343.8081 352.9597 351.0541 352.9597 Y
343.8081 352.9597 343.8081 349.2783 v
343.8081 338.8489 l
343.8081 336.5063 342.0018 334.1636 340.25 334.1636 c
330.8485 334.1636 l
S
214.1452 324.1081 m
190.0925 300.1185 l
S
u
0 0 1 0 (yellow) 0 X
[0.25 1.5 ]0 d
267.4132 369.6286 m
267.4132 350.1707 l
S
243.2549 371.7982 m
243.2549 352.3404 l
S
224.0732 377.1817 m
224.0732 357.7238 l
S
212.9547 384.2055 m
212.9547 364.7477 l
S
314.7534 376.18 m
314.7534 356.7221 l
S
326.3758 383.2039 m
326.3758 363.746 l
S
294.1543 371.6759 m
294.1543 352.218 l
S
U
1 1 0 0 (purple) 0.5 X
[]0 d
346.6758 475.5679 m
346.6758 475.5654 L
346.6758 460.8638 312.2953 448.9452 269.8864 448.9452 c
227.4775 448.9452 193.0974 460.8638 193.0974 475.5654 C
S
0 To
1 0 0 1 238.6339 510.1005 0 Tp
TP
-58.1953 0 Td
0 Tr
0 O
0 g
1 w
5.9974 0 Tl
(Volume element) Tx 
(\r) TX 
TO
0 R
0 0 0 1 (custom black) 0 X
0.5 w
240.4049 511.3603 m
249.6298 502.031 l
S
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

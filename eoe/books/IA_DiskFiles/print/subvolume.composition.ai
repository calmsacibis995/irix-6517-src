%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (subvolume.composition.ai)
%%CreationDate: (3/18/99) (11:19 AM)
%%BoundingBox: 158 280 324 441
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (purple)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 1 0 0 (purple)
%AI3_TemplateBox: 277 365 277 365
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
1 1 0 0 (purple) 0.85 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
323.5 301.1731 m
323.5 289.8939 297.1237 280.75 264.5875 280.75 c
232.0513 280.75 205.6747 289.8939 205.6747 301.1731 C
205.6747 394.5117 L
205.6747 405.7909 232.0513 414.9349 264.5875 414.9349 c
297.1237 414.9349 323.5 405.7909 323.5 394.5117 C
323.5 301.1731 L
f
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
205.6746 301.1695 m
205.6746 301.1713 L
205.6744 312.4504 232.051 321.5948 264.5871 321.5952 c
297.1233 321.5958 323.4998 312.4522 323.5 301.1731 C
S
u
q
1 w
308.5368 304.0744 m
308.5368 295.9307 289.4925 289.3285 266.0007 289.3285 c
242.5089 289.3285 223.4645 295.9307 223.4645 304.0744 C
223.4645 318.2718 L
223.4645 326.4156 242.5089 333.0177 266.0007 333.0177 c
289.4925 333.0177 308.5368 326.4156 308.5368 318.2718 C
308.5368 304.0744 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
308.5368 304.0744 m
308.5368 295.9307 289.4925 289.3285 266.0007 289.3285 c
242.5089 289.3285 223.4645 295.9307 223.4645 304.0744 C
223.4645 318.2718 L
223.4645 326.4156 242.5089 333.0177 266.0007 333.0177 c
289.4925 333.0177 308.5368 326.4156 308.5368 318.2718 C
308.5368 304.0744 L
f
u
276.9624 278.5864 m
276.9624 304.8306 L
219.2133 324.5058 L
219.2133 298.2617 L
276.9624 278.5864 L
f
u
1 1 0 0 (purple) 0.0236 x
275.8573 278.9629 m
275.8573 305.207 L
219.5816 324.3802 L
219.5816 298.1361 L
275.8573 278.9629 L
f
1 1 0 0 (purple) 0.0472 x
274.7522 279.3394 m
274.7522 305.5836 L
219.95 324.2548 L
219.95 298.0106 L
274.7522 279.3394 L
f
1 1 0 0 (purple) 0.0708 x
273.6465 279.7161 m
273.6465 305.9602 L
220.3186 324.1292 L
220.3186 297.885 L
273.6465 279.7161 L
f
1 1 0 0 (purple) 0.0944 x
272.5415 280.0926 m
272.5415 306.3368 L
220.687 324.0037 L
220.687 297.7595 L
272.5415 280.0926 L
f
1 1 0 0 (purple) 0.1181 x
271.4358 280.4694 m
271.4358 306.7135 L
221.0555 323.8781 L
221.0555 297.634 L
271.4358 280.4694 L
f
1 1 0 0 (purple) 0.1417 x
270.3307 280.8459 m
270.3307 307.09 L
221.4239 323.7526 L
221.4239 297.5085 L
270.3307 280.8459 L
f
1 1 0 0 (purple) 0.1653 x
269.225 281.2225 m
269.225 307.4667 L
221.7924 323.6271 L
221.7924 297.3829 L
269.225 281.2225 L
f
1 1 0 0 (purple) 0.1889 x
268.1199 281.5991 m
268.1199 307.8432 L
222.1608 323.5016 L
222.1608 297.2574 L
268.1199 281.5991 L
f
1 1 0 0 (purple) 0.2125 x
267.0142 281.9757 m
267.0142 308.2199 L
222.5294 323.376 L
222.5294 297.1318 L
267.0142 281.9757 L
f
1 1 0 0 (purple) 0.2361 x
265.9091 282.3522 m
265.9091 308.5964 L
222.8977 323.2505 L
222.8977 297.0063 L
265.9091 282.3522 L
f
1 1 0 0 (purple) 0.2597 x
264.8034 282.7289 m
264.8034 308.9731 L
223.2663 323.1249 L
223.2663 296.8808 L
264.8034 282.7289 L
f
1 1 0 0 (purple) 0.2833 x
263.6984 283.1055 m
263.6984 309.3496 L
223.6346 322.9994 L
223.6346 296.7553 L
263.6984 283.1055 L
f
1 1 0 0 (purple) 0.3069 x
262.5927 283.4822 m
262.5927 309.7263 L
224.0032 322.8739 L
224.0032 296.6298 L
262.5927 283.4822 L
f
1 1 0 0 (purple) 0.3305 x
261.4876 283.8587 m
261.4876 310.1028 L
224.3716 322.7483 L
224.3716 296.5042 L
261.4876 283.8587 L
f
1 1 0 0 (purple) 0.3542 x
260.3819 284.2353 m
260.3819 310.4795 L
224.7401 322.6228 L
224.7401 296.3786 L
260.3819 284.2353 L
f
1 1 0 0 (purple) 0.3778 x
259.2768 284.6119 m
259.2768 310.856 L
225.1085 322.4973 L
225.1085 296.2531 L
259.2768 284.6119 L
f
1 1 0 0 (purple) 0.4014 x
258.1712 284.9886 m
258.1712 311.2328 L
225.477 322.3717 L
225.477 296.1276 L
258.1712 284.9886 L
f
1 1 0 0 (purple) 0.425 x
257.0661 285.3651 m
257.0661 311.6092 L
225.8454 322.2462 L
225.8454 296.0021 L
257.0661 285.3651 L
f
1 1 0 0 (purple) 0.4486 x
255.961 285.7416 m
255.961 311.9858 L
226.2138 322.1207 L
226.2138 295.8766 L
255.961 285.7416 L
f
1 1 0 0 (purple) 0.4722 x
254.8553 286.1183 m
254.8553 312.3624 L
226.5823 321.9952 L
226.5823 295.751 L
254.8553 286.1183 L
f
1 1 0 0 (purple) 0.4958 x
253.7502 286.4948 m
253.7502 312.739 L
226.9507 321.8696 L
226.9507 295.6255 L
253.7502 286.4948 L
f
1 1 0 0 (purple) 0.5195 x
252.6445 286.8715 m
252.6445 313.1157 L
227.3193 321.7441 L
227.3193 295.4999 L
252.6445 286.8715 L
f
1 1 0 0 (purple) 0.5431 x
251.5395 287.248 m
251.5395 313.4922 L
227.6876 321.6186 L
227.6876 295.3744 L
251.5395 287.248 L
f
1 1 0 0 (purple) 0.5667 x
250.4338 287.6247 m
250.4338 313.8689 L
228.0562 321.493 L
228.0562 295.2489 L
250.4338 287.6247 L
f
1 1 0 0 (purple) 0.5903 x
249.3287 288.0012 m
249.3287 314.2454 L
228.4245 321.3675 L
228.4245 295.1233 L
249.3287 288.0012 L
f
1 1 0 0 (purple) 0.6139 x
248.223 288.378 m
248.223 314.6221 L
228.7931 321.2419 L
228.7931 294.9978 L
248.223 288.378 L
f
1 1 0 0 (purple) 0.6375 x
247.1179 288.7545 m
247.1179 314.9985 L
229.1614 321.1164 L
229.1614 294.8723 L
247.1179 288.7545 L
f
1 1 0 0 (purple) 0.6611 x
246.0123 289.1312 m
246.0123 315.3753 L
229.53 320.9908 L
229.53 294.7467 L
246.0123 289.1312 L
f
1 1 0 0 (purple) 0.6847 x
244.9071 289.5077 m
244.9071 315.7518 L
229.8984 320.8654 L
229.8984 294.6212 L
244.9071 289.5077 L
f
1 1 0 0 (purple) 0.7083 x
243.8015 289.8843 m
243.8015 316.1285 L
230.2669 320.7397 L
230.2669 294.4956 L
243.8015 289.8843 L
f
1 1 0 0 (purple) 0.7319 x
242.6964 290.2609 m
242.6964 316.505 L
230.6353 320.6143 L
230.6353 294.3701 L
242.6964 290.2609 L
f
1 1 0 0 (purple) 0.7556 x
241.5907 290.6376 m
241.5907 316.8817 L
231.0039 320.4887 L
231.0039 294.2446 L
241.5907 290.6376 L
f
1 1 0 0 (purple) 0.7792 x
240.4856 291.0141 m
240.4856 317.2582 L
231.3722 320.3632 L
231.3722 294.1191 L
240.4856 291.0141 L
f
1 1 0 0 (purple) 0.8028 x
239.38 291.3908 m
239.38 317.635 L
231.7408 320.2377 L
231.7408 293.9935 L
239.38 291.3908 L
f
1 1 0 0 (purple) 0.8264 x
238.2749 291.7673 m
238.2749 318.0115 L
232.1091 320.1121 L
232.1091 293.868 L
238.2749 291.7673 L
f
U
1 1 0 0 (purple) 0.85 x
237.1698 292.1438 m
237.1698 318.388 L
232.4775 319.9866 L
232.4775 293.7425 L
237.1698 292.1438 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
308.51 318.2711 m
308.51 310.1274 289.4656 303.5253 265.9738 303.5253 c
242.482 303.5253 223.4376 310.1274 223.4376 318.2711 C
223.4375 326.415 242.4818 333.0173 265.9735 333.0177 c
289.4653 333.018 308.5098 326.4163 308.51 318.2725 C
308.51 318.2711 L
f
u
1 1 0 0 (purple) 0.575 x
307.4613 318.2298 m
307.4613 310.3861 288.8889 304.0272 265.9794 304.0272 c
243.0699 304.0272 224.4976 310.3861 224.4976 318.2298 C
224.4974 326.0735 243.0698 332.4327 265.9792 332.433 c
288.8887 332.4334 307.4611 326.0749 307.4613 318.231 C
307.4613 318.2298 L
f
1 1 0 0 (purple) 0.5 x
306.4125 318.1885 m
306.4125 310.6448 288.3122 304.5292 265.9851 304.5292 c
243.6578 304.5292 225.5577 310.6448 225.5577 318.1885 C
225.5574 325.7321 243.6577 331.848 265.9849 331.8483 c
288.312 331.8486 306.4123 325.7334 306.4125 318.1897 C
306.4125 318.1885 L
f
1 1 0 0 (purple) 0.425 x
305.3639 318.1471 m
305.3639 310.9035 287.7356 305.0311 265.9907 305.0311 c
244.2458 305.0311 226.6176 310.9035 226.6176 318.1471 C
226.6174 325.3907 244.2456 331.2633 265.9905 331.2637 c
287.7355 331.2639 305.3637 325.392 305.3639 318.1482 C
305.3639 318.1471 L
f
1 1 0 0 (purple) 0.35 x
304.3151 318.1057 m
304.3151 311.1622 287.1589 305.5331 265.9963 305.5331 c
244.8338 305.5331 227.6777 311.1622 227.6777 318.1057 C
227.6774 325.0493 244.8336 330.6787 265.9962 330.679 c
287.1587 330.6792 304.315 325.0505 304.3151 318.1069 C
304.3151 318.1057 L
f
1 1 0 0 (purple) 0.275 x
303.2665 318.0644 m
303.2665 311.4209 286.5823 306.035 266.002 306.035 c
245.4216 306.035 228.7376 311.4209 228.7376 318.0644 C
228.7373 324.7079 245.4215 330.0941 266.0018 330.0943 c
286.5821 330.0946 303.2663 324.7091 303.2665 318.0655 C
303.2665 318.0644 L
f
U
1 1 0 0 (purple) 0.2 x
302.2178 318.0231 m
302.2178 311.6796 286.0056 306.537 266.0076 306.537 c
246.0096 306.537 229.7976 311.6796 229.7976 318.0231 C
229.7974 324.3665 246.0094 329.5093 266.0075 329.5097 c
286.0055 329.5099 302.2176 324.3676 302.2178 318.0241 C
302.2178 318.0231 L
f
U
0 To
1 0 0 1 265.3787 294.3244 0 Tp
TP
-7.833 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9.5 0 Tl
0 Tc
0 Tw
(Plex) Tx 
(\r) TX 
TO
u
q
308.5368 328.8244 m
308.5368 320.6807 289.4925 314.0785 266.0007 314.0785 c
242.5089 314.0785 223.4645 320.6807 223.4645 328.8244 C
223.4645 343.0218 L
223.4645 351.1656 242.5089 357.7677 266.0007 357.7677 c
289.4925 357.7677 308.5368 351.1656 308.5368 343.0218 C
308.5368 328.8244 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
308.5368 328.8244 m
308.5368 320.6807 289.4925 314.0785 266.0007 314.0785 c
242.5089 314.0785 223.4645 320.6807 223.4645 328.8244 C
223.4645 343.0218 L
223.4645 351.1656 242.5089 357.7677 266.0007 357.7677 c
289.4925 357.7677 308.5368 351.1656 308.5368 343.0218 C
308.5368 328.8244 L
f
u
276.9624 303.3364 m
276.9624 329.5806 L
219.2133 349.2558 L
219.2133 323.0117 L
276.9624 303.3364 L
f
u
1 1 0 0 (purple) 0.0236 x
275.8573 303.7129 m
275.8573 329.957 L
219.5816 349.1302 L
219.5816 322.8861 L
275.8573 303.7129 L
f
1 1 0 0 (purple) 0.0472 x
274.7522 304.0894 m
274.7522 330.3336 L
219.95 349.0048 L
219.95 322.7606 L
274.7522 304.0894 L
f
1 1 0 0 (purple) 0.0708 x
273.6465 304.4661 m
273.6465 330.7102 L
220.3186 348.8792 L
220.3186 322.635 L
273.6465 304.4661 L
f
1 1 0 0 (purple) 0.0944 x
272.5415 304.8426 m
272.5415 331.0868 L
220.687 348.7537 L
220.687 322.5095 L
272.5415 304.8426 L
f
1 1 0 0 (purple) 0.1181 x
271.4358 305.2194 m
271.4358 331.4635 L
221.0555 348.6281 L
221.0555 322.384 L
271.4358 305.2194 L
f
1 1 0 0 (purple) 0.1417 x
270.3307 305.5959 m
270.3307 331.84 L
221.4239 348.5026 L
221.4239 322.2585 L
270.3307 305.5959 L
f
1 1 0 0 (purple) 0.1653 x
269.225 305.9725 m
269.225 332.2167 L
221.7924 348.3771 L
221.7924 322.1329 L
269.225 305.9725 L
f
1 1 0 0 (purple) 0.1889 x
268.1199 306.3491 m
268.1199 332.5932 L
222.1608 348.2516 L
222.1608 322.0074 L
268.1199 306.3491 L
f
1 1 0 0 (purple) 0.2125 x
267.0142 306.7257 m
267.0142 332.9699 L
222.5294 348.126 L
222.5294 321.8818 L
267.0142 306.7257 L
f
1 1 0 0 (purple) 0.2361 x
265.9091 307.1022 m
265.9091 333.3464 L
222.8977 348.0005 L
222.8977 321.7563 L
265.9091 307.1022 L
f
1 1 0 0 (purple) 0.2597 x
264.8034 307.4789 m
264.8034 333.7231 L
223.2663 347.8749 L
223.2663 321.6308 L
264.8034 307.4789 L
f
1 1 0 0 (purple) 0.2833 x
263.6984 307.8555 m
263.6984 334.0996 L
223.6346 347.7494 L
223.6346 321.5053 L
263.6984 307.8555 L
f
1 1 0 0 (purple) 0.3069 x
262.5927 308.2322 m
262.5927 334.4763 L
224.0032 347.6239 L
224.0032 321.3798 L
262.5927 308.2322 L
f
1 1 0 0 (purple) 0.3305 x
261.4876 308.6087 m
261.4876 334.8528 L
224.3716 347.4983 L
224.3716 321.2542 L
261.4876 308.6087 L
f
1 1 0 0 (purple) 0.3542 x
260.3819 308.9853 m
260.3819 335.2295 L
224.7401 347.3728 L
224.7401 321.1286 L
260.3819 308.9853 L
f
1 1 0 0 (purple) 0.3778 x
259.2768 309.3619 m
259.2768 335.606 L
225.1085 347.2473 L
225.1085 321.0031 L
259.2768 309.3619 L
f
1 1 0 0 (purple) 0.4014 x
258.1712 309.7386 m
258.1712 335.9828 L
225.477 347.1217 L
225.477 320.8776 L
258.1712 309.7386 L
f
1 1 0 0 (purple) 0.425 x
257.0661 310.1151 m
257.0661 336.3592 L
225.8454 346.9962 L
225.8454 320.7521 L
257.0661 310.1151 L
f
1 1 0 0 (purple) 0.4486 x
255.961 310.4916 m
255.961 336.7358 L
226.2138 346.8707 L
226.2138 320.6266 L
255.961 310.4916 L
f
1 1 0 0 (purple) 0.4722 x
254.8553 310.8683 m
254.8553 337.1124 L
226.5823 346.7452 L
226.5823 320.501 L
254.8553 310.8683 L
f
1 1 0 0 (purple) 0.4958 x
253.7502 311.2448 m
253.7502 337.489 L
226.9507 346.6196 L
226.9507 320.3755 L
253.7502 311.2448 L
f
1 1 0 0 (purple) 0.5195 x
252.6445 311.6215 m
252.6445 337.8657 L
227.3193 346.4941 L
227.3193 320.2499 L
252.6445 311.6215 L
f
1 1 0 0 (purple) 0.5431 x
251.5395 311.998 m
251.5395 338.2422 L
227.6876 346.3686 L
227.6876 320.1244 L
251.5395 311.998 L
f
1 1 0 0 (purple) 0.5667 x
250.4338 312.3747 m
250.4338 338.6189 L
228.0562 346.243 L
228.0562 319.9989 L
250.4338 312.3747 L
f
1 1 0 0 (purple) 0.5903 x
249.3287 312.7512 m
249.3287 338.9954 L
228.4245 346.1175 L
228.4245 319.8733 L
249.3287 312.7512 L
f
1 1 0 0 (purple) 0.6139 x
248.223 313.128 m
248.223 339.3721 L
228.7931 345.9919 L
228.7931 319.7478 L
248.223 313.128 L
f
1 1 0 0 (purple) 0.6375 x
247.1179 313.5045 m
247.1179 339.7485 L
229.1614 345.8664 L
229.1614 319.6223 L
247.1179 313.5045 L
f
1 1 0 0 (purple) 0.6611 x
246.0123 313.8812 m
246.0123 340.1253 L
229.53 345.7408 L
229.53 319.4967 L
246.0123 313.8812 L
f
1 1 0 0 (purple) 0.6847 x
244.9071 314.2577 m
244.9071 340.5018 L
229.8984 345.6154 L
229.8984 319.3712 L
244.9071 314.2577 L
f
1 1 0 0 (purple) 0.7083 x
243.8015 314.6343 m
243.8015 340.8785 L
230.2669 345.4897 L
230.2669 319.2456 L
243.8015 314.6343 L
f
1 1 0 0 (purple) 0.7319 x
242.6964 315.0109 m
242.6964 341.255 L
230.6353 345.3643 L
230.6353 319.1201 L
242.6964 315.0109 L
f
1 1 0 0 (purple) 0.7556 x
241.5907 315.3876 m
241.5907 341.6317 L
231.0039 345.2387 L
231.0039 318.9946 L
241.5907 315.3876 L
f
1 1 0 0 (purple) 0.7792 x
240.4856 315.7641 m
240.4856 342.0082 L
231.3722 345.1132 L
231.3722 318.8691 L
240.4856 315.7641 L
f
1 1 0 0 (purple) 0.8028 x
239.38 316.1408 m
239.38 342.385 L
231.7408 344.9877 L
231.7408 318.7435 L
239.38 316.1408 L
f
1 1 0 0 (purple) 0.8264 x
238.2749 316.5173 m
238.2749 342.7615 L
232.1091 344.8621 L
232.1091 318.618 L
238.2749 316.5173 L
f
U
1 1 0 0 (purple) 0.85 x
237.1698 316.8938 m
237.1698 343.138 L
232.4775 344.7366 L
232.4775 318.4925 L
237.1698 316.8938 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
308.51 343.0211 m
308.51 334.8774 289.4656 328.2753 265.9738 328.2753 c
242.482 328.2753 223.4376 334.8774 223.4376 343.0211 C
223.4375 351.165 242.4818 357.7673 265.9735 357.7677 c
289.4653 357.768 308.5098 351.1663 308.51 343.0225 C
308.51 343.0211 L
f
u
1 1 0 0 (purple) 0.575 x
307.4613 342.9798 m
307.4613 335.1361 288.8889 328.7772 265.9794 328.7772 c
243.0699 328.7772 224.4976 335.1361 224.4976 342.9798 C
224.4974 350.8235 243.0698 357.1827 265.9792 357.183 c
288.8887 357.1834 307.4611 350.8249 307.4613 342.981 C
307.4613 342.9798 L
f
1 1 0 0 (purple) 0.5 x
306.4125 342.9385 m
306.4125 335.3948 288.3122 329.2792 265.9851 329.2792 c
243.6578 329.2792 225.5577 335.3948 225.5577 342.9385 C
225.5574 350.4821 243.6577 356.598 265.9849 356.5983 c
288.312 356.5986 306.4123 350.4834 306.4125 342.9397 C
306.4125 342.9385 L
f
1 1 0 0 (purple) 0.425 x
305.3639 342.8971 m
305.3639 335.6535 287.7356 329.7811 265.9907 329.7811 c
244.2458 329.7811 226.6176 335.6535 226.6176 342.8971 C
226.6174 350.1407 244.2456 356.0133 265.9905 356.0137 c
287.7355 356.0139 305.3637 350.142 305.3639 342.8982 C
305.3639 342.8971 L
f
1 1 0 0 (purple) 0.35 x
304.3151 342.8557 m
304.3151 335.9122 287.1589 330.2831 265.9963 330.2831 c
244.8338 330.2831 227.6777 335.9122 227.6777 342.8557 C
227.6774 349.7993 244.8336 355.4287 265.9962 355.429 c
287.1587 355.4292 304.315 349.8005 304.3151 342.8569 C
304.3151 342.8557 L
f
1 1 0 0 (purple) 0.275 x
303.2665 342.8144 m
303.2665 336.1709 286.5823 330.785 266.002 330.785 c
245.4216 330.785 228.7376 336.1709 228.7376 342.8144 C
228.7373 349.4579 245.4215 354.8441 266.0018 354.8443 c
286.5821 354.8446 303.2663 349.4591 303.2665 342.8155 C
303.2665 342.8144 L
f
U
1 1 0 0 (purple) 0.2 x
302.2178 342.7731 m
302.2178 336.4296 286.0056 331.287 266.0076 331.287 c
246.0096 331.287 229.7976 336.4296 229.7976 342.7731 C
229.7974 349.1165 246.0094 354.2593 266.0075 354.2597 c
286.0055 354.2599 302.2176 349.1176 302.2178 342.7741 C
302.2178 342.7731 L
f
U
0 To
1 0 0 1 265.3787 319.0744 0 Tp
TP
-7.833 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9.5 0 Tl
0 Tc
0 Tw
(Plex) Tx 
(\r) TX 
TO
u
q
308.5368 353.9122 m
308.5368 345.7684 289.4925 339.1663 266.0007 339.1663 c
242.5089 339.1663 223.4645 345.7684 223.4645 353.9122 C
223.4645 368.1096 L
223.4645 376.2534 242.5089 382.8555 266.0007 382.8555 c
289.4925 382.8555 308.5368 376.2534 308.5368 368.1096 C
308.5368 353.9122 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
308.5368 353.9122 m
308.5368 345.7684 289.4925 339.1663 266.0007 339.1663 c
242.5089 339.1663 223.4645 345.7684 223.4645 353.9122 C
223.4645 368.1096 L
223.4645 376.2534 242.5089 382.8555 266.0007 382.8555 c
289.4925 382.8555 308.5368 376.2534 308.5368 368.1096 C
308.5368 353.9122 L
f
u
276.9624 328.4242 m
276.9624 354.6684 L
219.2133 374.3436 L
219.2133 348.0994 L
276.9624 328.4242 L
f
u
1 1 0 0 (purple) 0.0236 x
275.8573 328.8007 m
275.8573 355.0448 L
219.5816 374.218 L
219.5816 347.9739 L
275.8573 328.8007 L
f
1 1 0 0 (purple) 0.0472 x
274.7522 329.1772 m
274.7522 355.4214 L
219.95 374.0926 L
219.95 347.8484 L
274.7522 329.1772 L
f
1 1 0 0 (purple) 0.0708 x
273.6465 329.5539 m
273.6465 355.798 L
220.3186 373.967 L
220.3186 347.7228 L
273.6465 329.5539 L
f
1 1 0 0 (purple) 0.0944 x
272.5415 329.9304 m
272.5415 356.1746 L
220.687 373.8415 L
220.687 347.5973 L
272.5415 329.9304 L
f
1 1 0 0 (purple) 0.1181 x
271.4358 330.3072 m
271.4358 356.5512 L
221.0555 373.7159 L
221.0555 347.4718 L
271.4358 330.3072 L
f
1 1 0 0 (purple) 0.1417 x
270.3307 330.6836 m
270.3307 356.9278 L
221.4239 373.5904 L
221.4239 347.3463 L
270.3307 330.6836 L
f
1 1 0 0 (purple) 0.1653 x
269.225 331.0603 m
269.225 357.3045 L
221.7924 373.4648 L
221.7924 347.2207 L
269.225 331.0603 L
f
1 1 0 0 (purple) 0.1889 x
268.1199 331.4368 m
268.1199 357.681 L
222.1608 373.3394 L
222.1608 347.0952 L
268.1199 331.4368 L
f
1 1 0 0 (purple) 0.2125 x
267.0142 331.8135 m
267.0142 358.0577 L
222.5294 373.2138 L
222.5294 346.9696 L
267.0142 331.8135 L
f
1 1 0 0 (purple) 0.2361 x
265.9091 332.19 m
265.9091 358.4342 L
222.8977 373.0883 L
222.8977 346.8441 L
265.9091 332.19 L
f
1 1 0 0 (purple) 0.2597 x
264.8034 332.5667 m
264.8034 358.8109 L
223.2663 372.9627 L
223.2663 346.7186 L
264.8034 332.5667 L
f
1 1 0 0 (purple) 0.2833 x
263.6984 332.9433 m
263.6984 359.1874 L
223.6346 372.8372 L
223.6346 346.5931 L
263.6984 332.9433 L
f
1 1 0 0 (purple) 0.3069 x
262.5927 333.32 m
262.5927 359.5641 L
224.0032 372.7117 L
224.0032 346.4675 L
262.5927 333.32 L
f
1 1 0 0 (purple) 0.3305 x
261.4876 333.6965 m
261.4876 359.9406 L
224.3716 372.5861 L
224.3716 346.342 L
261.4876 333.6965 L
f
1 1 0 0 (purple) 0.3542 x
260.3819 334.0731 m
260.3819 360.3173 L
224.7401 372.4606 L
224.7401 346.2164 L
260.3819 334.0731 L
f
1 1 0 0 (purple) 0.3778 x
259.2768 334.4497 m
259.2768 360.6938 L
225.1085 372.3351 L
225.1085 346.0909 L
259.2768 334.4497 L
f
1 1 0 0 (purple) 0.4014 x
258.1712 334.8264 m
258.1712 361.0706 L
225.477 372.2095 L
225.477 345.9653 L
258.1712 334.8264 L
f
1 1 0 0 (purple) 0.425 x
257.0661 335.2029 m
257.0661 361.447 L
225.8454 372.084 L
225.8454 345.8399 L
257.0661 335.2029 L
f
1 1 0 0 (purple) 0.4486 x
255.961 335.5794 m
255.961 361.8235 L
226.2138 371.9585 L
226.2138 345.7144 L
255.961 335.5794 L
f
1 1 0 0 (purple) 0.4722 x
254.8553 335.9561 m
254.8553 362.2002 L
226.5823 371.8329 L
226.5823 345.5888 L
254.8553 335.9561 L
f
1 1 0 0 (purple) 0.4958 x
253.7502 336.3326 m
253.7502 362.5768 L
226.9507 371.7074 L
226.9507 345.4633 L
253.7502 336.3326 L
f
1 1 0 0 (purple) 0.5195 x
252.6445 336.7093 m
252.6445 362.9535 L
227.3193 371.5818 L
227.3193 345.3377 L
252.6445 336.7093 L
f
1 1 0 0 (purple) 0.5431 x
251.5395 337.0858 m
251.5395 363.33 L
227.6876 371.4564 L
227.6876 345.2122 L
251.5395 337.0858 L
f
1 1 0 0 (purple) 0.5667 x
250.4338 337.4625 m
250.4338 363.7067 L
228.0562 371.3308 L
228.0562 345.0867 L
250.4338 337.4625 L
f
1 1 0 0 (purple) 0.5903 x
249.3287 337.839 m
249.3287 364.0832 L
228.4245 371.2053 L
228.4245 344.9611 L
249.3287 337.839 L
f
1 1 0 0 (purple) 0.6139 x
248.223 338.2157 m
248.223 364.4599 L
228.7931 371.0797 L
228.7931 344.8356 L
248.223 338.2157 L
f
1 1 0 0 (purple) 0.6375 x
247.1179 338.5923 m
247.1179 364.8363 L
229.1614 370.9542 L
229.1614 344.7101 L
247.1179 338.5923 L
f
1 1 0 0 (purple) 0.6611 x
246.0123 338.9689 m
246.0123 365.2131 L
229.53 370.8286 L
229.53 344.5845 L
246.0123 338.9689 L
f
1 1 0 0 (purple) 0.6847 x
244.9071 339.3455 m
244.9071 365.5896 L
229.8984 370.7032 L
229.8984 344.459 L
244.9071 339.3455 L
f
1 1 0 0 (purple) 0.7083 x
243.8015 339.7221 m
243.8015 365.9663 L
230.2669 370.5775 L
230.2669 344.3334 L
243.8015 339.7221 L
f
1 1 0 0 (purple) 0.7319 x
242.6964 340.0986 m
242.6964 366.3428 L
230.6353 370.4521 L
230.6353 344.2079 L
242.6964 340.0986 L
f
1 1 0 0 (purple) 0.7556 x
241.5907 340.4754 m
241.5907 366.7195 L
231.0039 370.3265 L
231.0039 344.0823 L
241.5907 340.4754 L
f
1 1 0 0 (purple) 0.7792 x
240.4856 340.8519 m
240.4856 367.096 L
231.3722 370.201 L
231.3722 343.9569 L
240.4856 340.8519 L
f
1 1 0 0 (purple) 0.8028 x
239.38 341.2286 m
239.38 367.4727 L
231.7408 370.0754 L
231.7408 343.8313 L
239.38 341.2286 L
f
1 1 0 0 (purple) 0.8264 x
238.2749 341.6051 m
238.2749 367.8492 L
232.1091 369.9499 L
232.1091 343.7058 L
238.2749 341.6051 L
f
U
1 1 0 0 (purple) 0.85 x
237.1698 341.9816 m
237.1698 368.2258 L
232.4775 369.8244 L
232.4775 343.5802 L
237.1698 341.9816 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
308.51 368.1089 m
308.51 359.9652 289.4656 353.3631 265.9738 353.3631 c
242.482 353.3631 223.4376 359.9652 223.4376 368.1089 C
223.4375 376.2527 242.4818 382.8551 265.9735 382.8555 c
289.4653 382.8558 308.5098 376.2541 308.51 368.1103 C
308.51 368.1089 L
f
u
1 1 0 0 (purple) 0.575 x
307.4613 368.0676 m
307.4613 360.2239 288.8889 353.865 265.9794 353.865 c
243.0699 353.865 224.4976 360.2239 224.4976 368.0676 C
224.4974 375.9113 243.0698 382.2704 265.9792 382.2708 c
288.8887 382.2711 307.4611 375.9127 307.4613 368.0688 C
307.4613 368.0676 L
f
1 1 0 0 (purple) 0.5 x
306.4125 368.0263 m
306.4125 360.4826 288.3122 354.367 265.9851 354.367 c
243.6578 354.367 225.5577 360.4826 225.5577 368.0263 C
225.5574 375.5699 243.6577 381.6858 265.9849 381.6861 c
288.312 381.6864 306.4123 375.5712 306.4125 368.0275 C
306.4125 368.0263 L
f
1 1 0 0 (purple) 0.425 x
305.3639 367.9849 m
305.3639 360.7413 287.7356 354.8689 265.9907 354.8689 c
244.2458 354.8689 226.6176 360.7413 226.6176 367.9849 C
226.6174 375.2285 244.2456 381.1011 265.9905 381.1015 c
287.7355 381.1017 305.3637 375.2298 305.3639 367.986 C
305.3639 367.9849 L
f
1 1 0 0 (purple) 0.35 x
304.3151 367.9435 m
304.3151 361 287.1589 355.3709 265.9963 355.3709 c
244.8338 355.3709 227.6777 361 227.6777 367.9435 C
227.6774 374.8871 244.8336 380.5164 265.9962 380.5167 c
287.1587 380.517 304.315 374.8883 304.3151 367.9446 C
304.3151 367.9435 L
f
1 1 0 0 (purple) 0.275 x
303.2665 367.9022 m
303.2665 361.2587 286.5823 355.8728 266.002 355.8728 c
245.4216 355.8728 228.7376 361.2587 228.7376 367.9022 C
228.7373 374.5457 245.4215 379.9319 266.0018 379.9321 c
286.5821 379.9324 303.2663 374.5468 303.2665 367.9033 C
303.2665 367.9022 L
f
U
1 1 0 0 (purple) 0.2 x
302.2178 367.8609 m
302.2178 361.5174 286.0056 356.3748 266.0076 356.3748 c
246.0096 356.3748 229.7976 361.5174 229.7976 367.8609 C
229.7974 374.2043 246.0094 379.3471 266.0075 379.3474 c
286.0055 379.3477 302.2176 374.2054 302.2178 367.8618 C
302.2178 367.8609 L
f
U
u
q
308.51 379.25 m
308.51 371.1062 289.4657 364.5041 265.974 364.5041 c
242.4822 364.5041 223.4377 371.1062 223.4377 379.25 C
223.4377 393.6982 L
223.4377 401.8421 242.4822 408.4442 265.974 408.4442 c
289.4657 408.4442 308.51 401.8421 308.51 393.6982 C
308.51 379.25 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
308.51 379.25 m
308.51 371.1062 289.4657 364.5041 265.974 364.5041 c
242.4822 364.5041 223.4377 371.1062 223.4377 379.25 C
223.4377 393.6982 L
223.4377 401.8421 242.4822 408.4442 265.974 408.4442 c
289.4657 408.4442 308.51 401.8421 308.51 393.6982 C
308.51 379.25 L
f
u
276.9356 353.7619 m
276.9356 380.2571 L
219.1865 399.9322 L
219.1865 373.4372 L
276.9356 353.7619 L
f
u
1 1 0 0 (purple) 0.0236 x
275.8305 354.1384 m
275.8305 380.6335 L
219.5549 399.8067 L
219.5549 373.3117 L
275.8305 354.1384 L
f
1 1 0 0 (purple) 0.0472 x
274.7254 354.5149 m
274.7254 381.01 L
219.9233 399.6812 L
219.9233 373.1861 L
274.7254 354.5149 L
f
1 1 0 0 (purple) 0.0708 x
273.6197 354.8917 m
273.6197 381.3867 L
220.2919 399.5557 L
220.2919 373.0606 L
273.6197 354.8917 L
f
1 1 0 0 (purple) 0.0944 x
272.5147 355.2682 m
272.5147 381.7632 L
220.6602 399.4302 L
220.6602 372.9351 L
272.5147 355.2682 L
f
1 1 0 0 (purple) 0.1181 x
271.409 355.6449 m
271.409 382.1399 L
221.0288 399.3046 L
221.0288 372.8095 L
271.409 355.6449 L
f
1 1 0 0 (purple) 0.1417 x
270.3039 356.0214 m
270.3039 382.5164 L
221.3971 399.1791 L
221.3971 372.684 L
270.3039 356.0214 L
f
1 1 0 0 (purple) 0.1653 x
269.1982 356.3981 m
269.1982 382.8931 L
221.7656 399.0535 L
221.7656 372.5584 L
269.1982 356.3981 L
f
1 1 0 0 (purple) 0.1889 x
268.0931 356.7746 m
268.0931 383.2696 L
222.134 398.928 L
222.134 372.4329 L
268.0931 356.7746 L
f
1 1 0 0 (purple) 0.2125 x
266.9874 357.1513 m
266.9874 383.6464 L
222.5026 398.8025 L
222.5026 372.3074 L
266.9874 357.1513 L
f
1 1 0 0 (purple) 0.2361 x
265.8824 357.5278 m
265.8824 384.0228 L
222.871 398.677 L
222.871 372.1819 L
265.8824 357.5278 L
f
1 1 0 0 (purple) 0.2597 x
264.7767 357.9045 m
264.7767 384.3996 L
223.2395 398.5514 L
223.2395 372.0563 L
264.7767 357.9045 L
f
1 1 0 0 (purple) 0.2833 x
263.6716 358.281 m
263.6716 384.776 L
223.6078 398.4259 L
223.6078 371.9308 L
263.6716 358.281 L
f
1 1 0 0 (purple) 0.3069 x
262.5659 358.6577 m
262.5659 385.1528 L
223.9765 398.3003 L
223.9765 371.8052 L
262.5659 358.6577 L
f
1 1 0 0 (purple) 0.3305 x
261.4608 359.0342 m
261.4608 385.5292 L
224.3448 398.1748 L
224.3448 371.6797 L
261.4608 359.0342 L
f
1 1 0 0 (purple) 0.3542 x
260.3551 359.4109 m
260.3551 385.906 L
224.7134 398.0493 L
224.7134 371.5542 L
260.3551 359.4109 L
f
1 1 0 0 (purple) 0.3778 x
259.2501 359.7874 m
259.2501 386.2825 L
225.0817 397.9237 L
225.0817 371.4287 L
259.2501 359.7874 L
f
1 1 0 0 (purple) 0.4014 x
258.1444 360.1641 m
258.1444 386.6592 L
225.4503 397.7981 L
225.4503 371.3031 L
258.1444 360.1641 L
f
1 1 0 0 (purple) 0.425 x
257.0393 360.5406 m
257.0393 387.0357 L
225.8186 397.6726 L
225.8186 371.1776 L
257.0393 360.5406 L
f
1 1 0 0 (purple) 0.4486 x
255.9342 360.9172 m
255.9342 387.5091 L
226.187 397.644 L
226.187 371.0521 L
255.9342 360.9172 L
f
1 1 0 0 (purple) 0.4722 x
254.8285 361.2938 m
254.8285 387.7889 L
226.5556 397.4216 L
226.5556 370.9265 L
254.8285 361.2938 L
f
1 1 0 0 (purple) 0.4958 x
253.7235 361.6703 m
253.7235 388.1654 L
226.9239 397.2961 L
226.9239 370.801 L
253.7235 361.6703 L
f
1 1 0 0 (purple) 0.5195 x
252.6178 362.0471 m
252.6178 388.5422 L
227.2925 397.1705 L
227.2925 370.6754 L
252.6178 362.0471 L
f
1 1 0 0 (purple) 0.5431 x
251.5127 362.4235 m
251.5127 388.9186 L
227.6609 397.045 L
227.6609 370.5499 L
251.5127 362.4235 L
f
1 1 0 0 (purple) 0.5667 x
250.407 362.8003 m
250.407 389.2954 L
228.0294 396.9194 L
228.0294 370.4243 L
250.407 362.8003 L
f
1 1 0 0 (purple) 0.5903 x
249.3019 363.1768 m
249.3019 389.6718 L
228.3978 396.794 L
228.3978 370.2989 L
249.3019 363.1768 L
f
1 1 0 0 (purple) 0.6139 x
248.1962 363.5534 m
248.1962 390.0485 L
228.7663 396.6683 L
228.7663 370.1733 L
248.1962 363.5534 L
f
1 1 0 0 (purple) 0.6375 x
247.0911 363.93 m
247.0911 390.4251 L
229.1347 396.5429 L
229.1347 370.0478 L
247.0911 363.93 L
f
1 1 0 0 (purple) 0.6611 x
245.9855 364.3067 m
245.9855 390.8018 L
229.5032 396.4173 L
229.5032 369.9223 L
245.9855 364.3067 L
f
1 1 0 0 (purple) 0.6847 x
244.8804 364.6832 m
244.8804 391.1783 L
229.8716 396.2918 L
229.8716 369.7967 L
244.8804 364.6832 L
f
1 1 0 0 (purple) 0.7083 x
243.7747 365.0599 m
243.7747 391.555 L
230.2402 396.1662 L
230.2402 369.6712 L
243.7747 365.0599 L
f
1 1 0 0 (purple) 0.7319 x
242.6696 365.4364 m
242.6696 391.9314 L
230.6085 396.0407 L
230.6085 369.5456 L
242.6696 365.4364 L
f
1 1 0 0 (purple) 0.7556 x
241.5639 365.8131 m
241.5639 392.3082 L
230.9771 395.9151 L
230.9771 369.4201 L
241.5639 365.8131 L
f
1 1 0 0 (purple) 0.7792 x
240.4589 366.1896 m
240.4589 392.6847 L
231.3454 395.7896 L
231.3454 369.2946 L
240.4589 366.1896 L
f
1 1 0 0 (purple) 0.8028 x
239.3532 366.5663 m
239.3532 393.0614 L
231.714 395.6641 L
231.714 369.169 L
239.3532 366.5663 L
f
1 1 0 0 (purple) 0.8264 x
238.2481 366.9428 m
238.2481 393.4379 L
232.0824 395.5386 L
232.0824 369.0435 L
238.2481 366.9428 L
f
U
1 1 0 0 (purple) 0.85 x
237.143 367.3193 m
237.143 393.8144 L
232.4507 395.4131 L
232.4507 368.918 L
237.143 367.3193 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
308.4833 393.6976 m
308.4833 385.5539 289.4388 378.9517 265.947 378.9517 c
242.4552 378.9517 223.4109 385.5539 223.4109 393.6976 C
223.4107 401.8414 242.455 408.4438 265.9468 408.4442 c
289.4385 408.4445 308.483 401.8428 308.4833 393.6989 C
308.4833 393.6976 L
f
U
0 To
1 0 0 1 265.3787 370 0 Tp
TP
-7.833 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9.5 0 Tl
0 Tc
0 Tw
(Plex) Tx 
(\r) TX 
TO
0 To
1 0 0 1 265.3787 344.1622 0 Tp
TP
-7.833 0 Td
0 Tr
(Plex) Tx 
(\r) TX 
TO
0 R
1 1 0 0 (purple) 0.5 X
0.5 w
323.4629 394.5127 m
323.4629 394.5108 L
323.4629 383.2318 297.0863 374.0878 264.5502 374.0878 c
232.014 374.0878 205.6376 383.2318 205.6376 394.5108 C
S
0 G
261.1816 413.7544 m
240.0117 434.9717 l
S
0 To
1 0 0 1 238.8867 432.8006 0 Tp
TP
-40.291 0 Td
0 Tr
0 O
0 g
1 w
2 Ta
(Subvolume) Tx 
(\r) TX 
TO
0 To
1 0 0 1 188.6309 329.3081 0 Tp
TP
-29.9941 0 Td
0 Tr
(Optional) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
226.7917 359.25 m
190.125 331.9167 l
226.125 305.25 l
S
225.625 331.9167 m
190.125 331.9167 l
S
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

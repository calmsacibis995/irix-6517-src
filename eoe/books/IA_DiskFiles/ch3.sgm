<!-- Produced by version 4.3 (11/99) of SGI Frame/SGIDOCBK SGML translator -->
<CHAPTER ID="LE37920-PARENT"><TITLE ID="LE37920-TITLE">XLV Logical Volume Concepts</TITLE><PARA><INDEXTERM ID="ITch3-0"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY><COMMAND>lv</COMMAND>
</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-1"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>XLV. <EMPHASIS>See</EMPHASIS>
 XLV logical volumes.</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-2"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY><EMPHASIS>See also</EMPHASIS>
 XLV logical volumes.</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-3"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY><EMPHASIS>See also</EMPHASIS>
 logical volumes.</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-4"><PRIMARY><COMMAND>lv</COMMAND>
 logical volumes</PRIMARY>
<SECONDARY><COMMAND>no longer supported</COMMAND>
</SECONDARY>
</INDEXTERM>
This chapter explains the concepts of XLV logical volumes. The use of logical volumes allows one filesystem to spread across multiple disk partitions. IRIX supports XLV logical volumes, a logical volume design developed at Silicon Graphics. Older releases of IRIX supported an older logical volume design, <COMMAND>lv</COMMAND> logical volumes. The procedure for converting from <COMMAND>lv</COMMAND> logical volumes to XLV logical volumes is described in the section <XREF LINKEND="LE45331-TITLE">.</PARA><PARA>The major sections in this chapter are:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA><XREF LINKEND="LE22348-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE60918-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE87596-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE25305-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE96811-PARENT"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="LE83099-PARENT"></PARA></LISTITEM>
</ITEMIZEDLIST>
<PARA>Administration procedures for XLV logical volumes are described in <XREF LINKEND="LE38992-TITLE">.</PARA><NOTE><PARA><INDEXTERM ID="ITch3-5"><PRIMARY>XVM logical volumes</PRIMARY>
</INDEXTERM>
For information on XVM logical volume concepts, see the <CITETITLE>XVM Volume Manager Administrator's Guide</CITETITLE>.</PARA>
</NOTE>
<SECTION  ID="LE22348-PARENT"><TITLE  ID="LE22348-TITLE">Introduction to XLV Logical Volumes</TITLE><PARA><INDEXTERM ID="ITch3-6"><PRIMARY>disk partitions</PRIMARY>
<SECONDARY>block and character devices</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-7"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>description</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-8"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>used as raw devices</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-9"><PRIMARY>device files</PRIMARY>
<SECONDARY>XLV device file names</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-10"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>names</SECONDARY>
</INDEXTERM>
The use of logical volumes enables the creation of filesystems, raw devices, or block devices that span more than one disk partition. Logical volumes behave like regular disk partitions; they appear as block and character devices in the <FILENAME>/dev</FILENAME> directory and can be used as arguments anywhere a disk device can be specified. </PARA>
<PARA><INDEXTERM ID="ITch3-11"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>advantages</SECONDARY>
</INDEXTERM>
Filesystems can be created, mounted, and used in the normal way on logical volumes, or logical volumes can be used as block or raw devices. XLV logical volumes provide services such as disk plexing (also known as mirroring) and striping transparently to the applications that access the volumes. Key reasons to create a logical volume are:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>To allow a filesystem or disk device to be larger than the size of a physical disk</PARA>
</LISTITEM>
<LISTITEM><PARA>To increase disk I/O performance</PARA>
</LISTITEM>
</ITEMIZEDLIST>
<PARA><INDEXTERM ID="ITch3-12"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>disadvantages</SECONDARY>
</INDEXTERM>
The drawback to logical volumes is that all disks used in a logical volume must function correctly at all times. If you have a logical volume set up over three disks and one disk goes bad, the information on the other two disks is unavailable and must be restored from backups. However, by using the Disk Plexing Option optional software, you can create multiple copies, called <FIRSTTERM>plexes</FIRSTTERM>, of the contents of XLV logical volumes, which ensures that all of the information in an XLV logical volume is available even when a disk goes bad.</PARA>
<PARA><INDEXTERM ID="ITch3-13"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>with EFS</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-14"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>overview</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-15"><PRIMARY>EFS filesystems</PRIMARY>
<SECONDARY>and XLV logical volumes</SECONDARY>
</INDEXTERM>
When XLV logical volumes are used as raw devices and when XFS filesystems are created on them, they have these features:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>Support for very large logical volumes&mdash;up to one terabyte on 32-bit systems and unlimited on 64-bit systems.</PARA>
</LISTITEM>
<LISTITEM><PARA>Support for disk striping for higher I/O performance</PARA>
</LISTITEM>
<LISTITEM><PARA>Plexing (mirroring) for higher system and data reliability</PARA>
</LISTITEM>
<LISTITEM><PARA>Online volume reconfigurations, such as increasing the size of a volume, for less system downtime</PARA>
</LISTITEM>
</ITEMIZEDLIST>
<PARA>With XFS filesystems, XLV provides these additional advantages:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>Filesystem journal records on a separate partition, which can be on a separate disk, for maximum performance</PARA>
</LISTITEM>
<LISTITEM><PARA>Access to real-time data</PARA>
</LISTITEM>
</ITEMIZEDLIST>
<PARA>An XLV logical volume can include partitions from several physical disk drives. By default, data is written to the first disk partition, then to the second disk partition, and so on. <XREF LINKEND="LE12545-TITLE"> shows the order in which data is written to partitions in a non-striped logical volume.</PARA><PARA><FIGURE><GRAPHIC FILEREF="writng.dat.non.strip.vol.2.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE12545-TITLE">Writing Data to a Non-Striped Logical Volume</TITLE>
</FIGURE>
</PARA>
<PARA><INDEXTERM ID="ITch3-16"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>striping, definition and illustration</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-17"><PRIMARY>striping disks</PRIMARY>
<SECONDARY>description and illustration</SECONDARY>
</INDEXTERM>
On striped logical volumes, the volume must have equal-sized partitions on several disks. When logical volumes are striped, an amount of data, called the <FIRSTTERM>stripe unit</FIRSTTERM>, is written to the first disk, the next stripe unit amount of data is written to the second disk, and so on. When each of the disks have been written to, the next stripe unit of data is written to the first disk, the next stripe unit amount of data is written to the second disk, and so on to complete the &ldquo;stripe.&rdquo; <XREF LINKEND="LE28150-TITLE"> shows the order in which data is written to a striped logical volume. </PARA><PARA><FIGURE><GRAPHIC FILEREF="writing.data.strip.vol.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE28150-TITLE">Writing Data to a Logical Volume</TITLE>
</FIGURE>
</PARA>
<PARA>Because each stripe unit in a stripe can be read and written simultaneously, I/O performance is improved. To obtain the best performance benefits of striping, try to connect the disks you are striping across on different controllers. In this arrangement, there are independent data paths between each disk and the system. However, a small performance improvement can be obtained using SCSI disks striped on the same controller. </PARA>
<PARA><INDEXTERM ID="ITch3-18"><PRIMARY>metadata, filesystem</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-19"><PRIMARY>external logs</PRIMARY>
<SECONDARY>and log subvolumes</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-20"><PRIMARY>internal logs</PRIMARY>
<SECONDARY>and the data subvolume</SECONDARY>
</INDEXTERM>
When XFS filesystems are used on XLV volumes, each logical volume can contain up to three subvolumes: data (which is required), log, and real-time. The data subvolume normally contains user files and filesystem <FIRSTTERM>metadata</FIRSTTERM> (inodes, indirect blocks, directories, and free space blocks). The log subvolume is used for filesystem journal records. It is called an <FIRSTTERM>external</FIRSTTERM> log. If there is no log subvolume, journal records are placed in the data subvolume (an <FIRSTTERM>internal</FIRSTTERM> log). Data with special I/O bandwidth requirements, such as video, can be placed on the optional real-time subvolume. The section <XREF LINKEND="LE23933-TITLE"> explains this procedure.</PARA><PARA>XLV increases system reliability and availability by enabling you to add or remove a copy of the data in the volume (a plex), increase the size of (grow) a volume, and replace failed elements of a plexed volume without taking the volume out of service.</PARA>
<PARA><INDEXTERM ID="ITch3-21"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>creating, overview</SECONDARY>
</INDEXTERM>
You use one of two procedures to create an XLV logical volume, depending on whether you are starting with empty disks or with a filesystem on a disk partition. When starting with empty disks, you perform the following steps:</PARA>
<ORDEREDLIST><LISTITEM><PARA>Create disk partitions as necessary (see <XREF LINKEND="LE38803-TITLE">).</PARA></LISTITEM>
<LISTITEM><PARA>Create the XLV logical volume (see <XREF LINKEND="LE25568-TITLE"> and <XREF LINKEND="LE63965-TITLE">).</PARA></LISTITEM>
<LISTITEM><PARA>Make a filesystem on the XLV logical volume (see <XREF LINKEND="LE72328-TITLE"> or <XREF LINKEND="LE67358-TITLE">).</PARA></LISTITEM>
</ORDEREDLIST>
<PARA>In the second procedure for creating XLV logical volumes, you start with a filesystem on a disk partition. You increase the size of the filesystem (&ldquo;grow&rdquo; the filesystem) by creating a logical volume that includes the existing disk partition and a new disk partition. This procedure is explained in <XREF LINKEND="LE49326-TITLE">.</PARA><PARA>Converting from <COMMAND>lv</COMMAND> logical volumes to XLV logical volumes is easy. Using the commands <COMMAND>lv_to_xlv</COMMAND> and <COMMAND>xlv_make</COMMAND>, you can convert <COMMAND>lv</COMMAND> logical volumes to XLV without having to dump and restore your data.</PARA>
<PARA>Using XLV logical volumes is not recommended on systems with a single disk.</PARA>
</SECTION>
<SECTION  ID="LE60918-PARENT"><TITLE  ID="LE60918-TITLE">Composition of XLV Logical Volumes</TITLE><PARA><INDEXTERM ID="ITch3-22"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>hierarchy of objects</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-23"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>example (figure)</SECONDARY>
</INDEXTERM>
XLV logical volumes are composed of a hierarchy of logical storage objects: volumes are composed of subvolumes, subvolumes are composed of plexes, and plexes are composed of volume elements. Volume elements are composed of disk partitions. This hierarchy of storage units is shown in <XREF LINKEND="LE99451-TITLE">, an example of a relatively complex logical volume.</PARA><PARA><FIGURE><GRAPHIC FILEREF="logical.volume.example.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE99451-TITLE">XLV Logical Volume Example</TITLE>
</FIGURE>
</PARA>
<PARA><XREF LINKEND="LE99451-TITLE"> illustrates the relationships between volumes, subvolumes, plexes, and volume elements in an XLV logical volume. In this example, six physical disk drives contain eight disk partitions. The logical volume has a log subvolume, a data subvolume, and a real-time subvolume. The log subvolume has two plexes (copies of the data) for higher reliability, and the data and real-time subvolumes are not plexed (meaning that they each consist of a single plex). The log plexes each consist of a volume element, which is a disk partition on disk&nbsp;1. The plex of the data subvolume consists of two volume elements, a partition that is the remainder of disk 1 and a partition that is all of disk 2. The plex used for the real-time subvolume is striped for increased performance. The striped volume element is constructed from four disk partitions, each of which is an entire disk.</PARA><PARA>The following subsections describe these logical storage objects in more detail.</PARA>
<SECTION  ID="LE85862-PARENT"><TITLE  ID="LE85862-TITLE">Volumes</TITLE><PARA><INDEXTERM ID="ITch3-24"><PRIMARY>volumes. <EMPHASIS>See</EMPHASIS>
 logical volumes.</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-25"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>definition of volume</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-26"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>volume composition</SECONDARY>
</INDEXTERM>
Volumes are composed of subvolumes. All volumes must have a data subvolume. Two other subvolumes, the log subvolume and the real-time subvolume, are optional. For XFS filesystems, a volume consists of a data subvolume, an optional log subvolume, and an optional real-time subvolume. For EFS filesystems, a volume consists of just one subvolume, the data subvolume. (EFS filesystems are of a filesystem type supported in previous IRIX releases; they are described in <XREF LINKEND="LE81344-TITLE">.) The breakdown of a volume into subvolumes is shown in <XREF LINKEND="LE56177-TITLE">.</PARA><PARA><FIGURE><GRAPHIC FILEREF="volume.composition.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE56177-TITLE">Volume Composition</TITLE>
</FIGURE>
</PARA>
<PARA><INDEXTERM ID="ITch3-27"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>used as raw devices</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-28"><PRIMARY>logical volume labels</PRIMARY>
<SECONDARY>information used at system startup</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-29"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>coming up at system startup</SECONDARY>
</INDEXTERM>
Each volume can be used as a single filesystem or as a raw partition. Volume information used by the system during system startup is stored in logical volume labels in the volume header of each disk used by the volume (see <XREF LINKEND="LE18926-TITLE">). At system startup, volumes will not come online if any of their subvolumes cannot be brought online. <INDEXTERM ID="ITch3-30"><PRIMARY>logical volumes</PRIMARY><SECONDARY>moving to a new system</SECONDARY>
</INDEXTERM>
You can create volumes, delete them, and move them to another system.</PARA>
</SECTION>
<SECTION><TITLE>Subvolumes</TITLE><PARA><INDEXTERM ID="ITch3-31"><PRIMARY>subvolumes</PRIMARY>
<SECONDARY>composition</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-32"><PRIMARY>subvolumes</PRIMARY>
<SECONDARY><EMPHASIS>See also</EMPHASIS>
 logical volumes.</SECONDARY>
</INDEXTERM>
As explained in <XREF LINKEND="LE85862-PARENT">, each logical volume is composed of one to three subvolumes. A subvolume contains one to four plexes, as shown in <XREF LINKEND="LE81241-TITLE">.</PARA><PARA><FIGURE><GRAPHIC FILEREF="subvolume.composition.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE81241-TITLE">Subvolume Composition</TITLE>
</FIGURE>
<NOTE><PARA><INDEXTERM ID="ITch3-33"><PRIMARY>plexes</PRIMARY>
<SECONDARY>Disk Plexing Option</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-34"><PRIMARY>FLEXlm licenses</PRIMARY>
<SECONDARY>Disk Plexing Option</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-35"><PRIMARY>Disk Plexing Option</PRIMARY>
</INDEXTERM>
The plexing feature of XLV, which enables the use of the optional plexes, is available only when you purchase the Disk Plexing Option software option.</PARA>
</NOTE>
</PARA>
<PARA><INDEXTERM ID="ITch3-36"><PRIMARY>subvolumes</PRIMARY>
<SECONDARY>subvolume types</SECONDARY>
</INDEXTERM>
Each subvolume is a distinct address space and a distinct type. The types of subvolumes are:</PARA>
<DEFLIST TERMLENGTH="NEXTLINE"><DEFLISTENTRY><TERM>Data subvolume</TERM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-37"><PRIMARY>subvolumes</PRIMARY>
<SECONDARY>data subvolume definition</SECONDARY>
</INDEXTERM>
The data subvolume is required in all XLV logical volumes. It is the only subvolume present in EFS filesystems. (EFS filesystems are of a filesystem type supported in previous IRIX releases; they are described in <XREF LINKEND="LE81344-TITLE">.)</PARA></LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Log subvolume</TERM>
<LISTITEM><PARA>	<INDEXTERM ID="ITch3-38"><PRIMARY>subvolumes</PRIMARY>
<SECONDARY>log subvolume definition</SECONDARY>
</INDEXTERM>
The <INDEXTERM ID="ITch3-39"><PRIMARY>journaling information</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-40"><PRIMARY>XFS filesystems</PRIMARY>
<SECONDARY>journaling information</SECONDARY>
</INDEXTERM>
log subvolume contains XFS journaling information. It is a log of filesystem transactions and is used to expedite system recovery after a crash. Log information is sometimes put in the data subvolume rather than in a log subvolume (see <XREF LINKEND="LE93345-TITLE"> and the <COMMAND>mkfs_xfs(1M)</COMMAND> reference page and its discussion of the <COMMAND>-l</COMMAND> option for more information).</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM>Real-time subvolume</TERM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-41"><PRIMARY>subvolumes</PRIMARY>
<SECONDARY>real time subvolume definition</SECONDARY>
</INDEXTERM>
Real-time subvolumes are generally used for data applications such as video, where guaranteed response time is more important than data integrity. <XREF LINKEND="LE40515-TITLE">, explains how applications access data on real-time subvolumes.</PARA></LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
<PARA>Subvolumes enforce separation among data types. For example, user data cannot overwrite filesystem log data. Subvolumes also enable filesystem data and user data to be configured to meet goals for performance and reliability. For example, performance can be improved by putting subvolumes on different disk drives.</PARA>
<PARA>Each subvolume can be organized independently. For example, the log subvolume can be plexed for fault tolerance and the real-time subvolume can be striped across a large number of disks to give maximum throughput for video playback.</PARA>
<PARA><INDEXTERM ID="ITch3-42"><PRIMARY>real-time subvolumes</PRIMARY>
<SECONDARY>only real-time on disk</SECONDARY>
</INDEXTERM>
Volume elements that are part of a real-time subvolume should not be on the same disk as volume elements used for data or log subvolumes. This is a recommendation for all files on real-time subvolumes and required for files used for guaranteed-rate I/O with hard guarantees. (See <XREF LINKEND="LE26694-TITLE"> for more information.)</PARA><PARA>Once a subvolume is created, it cannot be detached from its volume or deleted without deleting its volume. Subvolumes are automatically deleted when their volumes are deleted.</PARA>
</SECTION>
<SECTION><TITLE>Plexes</TITLE><PARA><INDEXTERM ID="ITch3-43"><PRIMARY>plexes</PRIMARY>
<SECONDARY>definition</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-44"><PRIMARY>plexes</PRIMARY>
<SECONDARY><EMPHASIS>See also</EMPHASIS>
 logical volumes.</SECONDARY>
</INDEXTERM>
A subvolume can contain from one to four <FIRSTTERM>plexes</FIRSTTERM> (also known as <FIRSTTERM>mirrors</FIRSTTERM>). Each plex is an exact replica of all or a portion of the subvolume's data. By creating a subvolume with multiple plexes, system reliability is increased because there are redundant copies of the data.</PARA>
<PARA><INDEXTERM ID="ITch3-45"><PRIMARY>plexes</PRIMARY>
<SECONDARY>holes in address space</SECONDARY>
</INDEXTERM>
If there is just one plex in a subvolume, that plex spans the entire address space of the subvolume. However, in the case of multiple plexes, individual plexes can have holes in their address spaces as long as the union of all plexes spans the entire address space. <XREF LINKEND="LE17302-TITLE"> shows an example of this configuration. The subvolume contains three plexes. If complete, each plex would contain three volume elements. However, two of the plexes are missing a volume element. This is allowed because there is at least one volume element with each address range. In fact, if Plex 1 in the figure were detached (removed from the subvolume), the subvolume would still be functional because there is still at least one volume element with each address range.</PARA><PARA><FIGURE><GRAPHIC FILEREF="subvolume.composition.2.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE17302-TITLE">Plexed Subvolume Example</TITLE>
</FIGURE>
</PARA>
<PARA><INDEXTERM ID="ITch3-46"><PRIMARY>plex revives</PRIMARY>
</INDEXTERM>
Data is written to all plexes. When an additional plex is added to a subvolume, the entire plex is copied (this is called a <FIRSTTERM>plex revive</FIRSTTERM>) automatically by the system. See the <COMMAND>xlv_assemble</COMMAND>(1M) and <COMMAND>xlv_plexd</COMMAND>(1M) reference pages for more information.</PARA>
<PARA><INDEXTERM ID="ITch3-47"><PRIMARY>plexes</PRIMARY>
<SECONDARY>plex composition</SECONDARY>
</INDEXTERM>
A plex is composed of one or more volume elements, as shown in <XREF LINKEND="LE37521-TITLE">, up to a maximum of 128 volume elements. Each volume element represents a range of addresses within the subvolume. </PARA><PARA><FIGURE><GRAPHIC FILEREF="plex.composition.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE37521-TITLE">Plex Composition</TITLE>
</FIGURE>
</PARA>
<PARA><INDEXTERM ID="ITch3-48"><PRIMARY>concatenation</PRIMARY>
<SECONDARY>definition</SECONDARY>
</INDEXTERM>
When a plex is composed of two or more volume elements, it is said to have <FIRSTTERM>concatenated</FIRSTTERM> volume elements. With concatenation, data written sequentially to the plex is also written sequentially to the volume elements; the first volume element is filled, then the second, and so on. Concatenation is useful for creating a filesystem that is larger than the size of a single disk.</PARA>
<PARA>You can add plexes to subvolumes, detach them from subvolumes that have multiple plexes (and possibly attach them elsewhere), and delete them from subvolumes that have multiple plexes.</PARA>
<NOTE><PARA>To have multiple plexes, you must purchase the Disk Plexing Option software option and obtain and install a FLEXlm license.</PARA>
</NOTE>
</SECTION>
<SECTION  ID="LE99992-PARENT"><TITLE  ID="LE99992-TITLE">Volume Elements</TITLE><PARA><INDEXTERM ID="ITch3-49"><PRIMARY>volume elements</PRIMARY>
<SECONDARY>definition</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-50"><PRIMARY>striped volume elements. <EMPHASIS>See</EMPHASIS>
 volume elements.</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-51"><PRIMARY>volume elements</PRIMARY>
<SECONDARY>single partition volume elements, definition</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-52"><PRIMARY>disk partitions</PRIMARY>
<SECONDARY>and volume elements</SECONDARY>
</INDEXTERM>
Volume elements are the lowest level in the hierarchy of logical storage objects: volumes are composed of subvolumes; subvolumes are composed of plexes; and plexes are composed of volume elements. Volume elements are composed of physical storage elements: disk partitions. They are composed of one or more disk partitions with or without striping (at least two disk partitions are required for striping). Any mixture of the three types of volume elements (single partition, striped, and multipartition) can be included in a plex.</PARA>
<SECTION><TITLE>Single-Partition Volume Elements</TITLE><PARA>The simplest type of volume element is a single disk partition. The two other types of volume elements, striped volume elements and multipartition volume elements, are composed of several disk partitions. <XREF LINKEND="LE25556-TITLE"> shows a single partition volume element.</PARA><PARA><FIGURE><GRAPHIC FILEREF="single.part.vol.elem.comp.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE25556-TITLE">Single-Partition Volume Element Composition</TITLE>
</FIGURE>
</PARA>
</SECTION>
<SECTION  ID="LE37069-PARENT"><TITLE  ID="LE37069-TITLE">Striped Volume Elements</TITLE><PARA><INDEXTERM ID="ITch3-53"><PRIMARY>volume elements</PRIMARY>
<SECONDARY>striped, definition</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-54"><PRIMARY>stripe unit</PRIMARY>
<SECONDARY>definition</SECONDARY>
</INDEXTERM>
<XREF LINKEND="LE45690-TITLE"> shows a striped volume element. Striped volume elements consist of two or more disk partitions, organized so that an amount of data called the stripe unit is written to each disk partition before writing the next stripe unit-worth of data to the next partition.</PARA><PARA><FIGURE><GRAPHIC FILEREF="striped.vol.element.comp.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE45690-TITLE">Striped Volume Element Composition</TITLE>
</FIGURE>
</PARA>
<PARA><INDEXTERM ID="ITch3-55"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>striping, choosing stripe unit size</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-56"><PRIMARY>striping disks</PRIMARY>
<SECONDARY>choosing stripe unit size</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-57"><PRIMARY>stripe unit</PRIMARY>
<SECONDARY>choosing</SECONDARY>
</INDEXTERM>
Striping can be used to alternate sections of data among multiple disks. This provides a performance advantage by allowing parallel I/O activity. You can use these rules of thumb as a starting point for choosing a stripe unit size:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>The stripe unit size should be a function of the I/O size of the application that uses the striped volume and the number of partitions in the stripe: the stripe unit size should be the application I/O size divided by the number of partitions. This keeps all disks busy all of the time, which is ideal.</PARA>
</LISTITEM>
<LISTITEM><PARA>The default stripe unit is the device track size, which is a good value to use, particularly when there are more reads than writes to the disk.</PARA>
</LISTITEM>
<LISTITEM><PARA>Stripe unit sizes of less than 64 KB are not recommended.</PARA>
</LISTITEM>
<LISTITEM><PARA>For best write performance, the stripe unit size should be several tracks. However, large stripe unit sizes require larger I/O buffer sizes, which can be a problem.</PARA>
</LISTITEM>
<LISTITEM><PARA>In choosing the optimal stripe unit size, balance the benefits of parallel I/O activity, the efficiency of I/O to a single disk drive (larger reads and writes have less overhead), and the limits on I/O buffer size.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION><TITLE>Multipartition Volume Elements</TITLE><PARA><INDEXTERM ID="ITch3-58"><PRIMARY>volume elements</PRIMARY>
<SECONDARY>multipartition volume elements</SECONDARY>
</INDEXTERM>
<XREF LINKEND="LE13867-TITLE"> shows a multipartition volume element in which the volume element is composed of more than one disk partition. In this configuration, the disk partitions are addressed sequentially.</PARA><PARA><FIGURE><GRAPHIC FILEREF="mltiprttion.vol.elem.comp.gif" LOCATION="INLINE" SCALE="NO"></GRAPHIC>
<TITLE  ID="LE13867-TITLE">Multipartition Volume Element Composition</TITLE>
</FIGURE>
</PARA>
</SECTION>
</SECTION>
</SECTION>
<SECTION  ID="LE87596-PARENT"><TITLE  ID="LE87596-TITLE">XLV Logical Volume Names</TITLE><PARA><INDEXTERM ID="ITch3-59"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>naming</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-60"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>device names</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-61"><PRIMARY><FILENAME>/dev/xlv</FILENAME>
 directory</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-62"><PRIMARY>device files</PRIMARY>
<SECONDARY>XLV device file names</SECONDARY>
</INDEXTERM>
Volumes appear as block and character devices in the <FILENAME>/dev</FILENAME> directory. The device names for XLV logical volumes are <FILENAME>/dev/xlv/</FILENAME><REPLACEABLE>volume_name</REPLACEABLE> and <FILENAME>/dev/rxlv/</FILENAME><REPLACEABLE>volume_name</REPLACEABLE>, where <REPLACEABLE>volume_name</REPLACEABLE> is a volume name specified when the volume is created using the <COMMAND>xlv_make</COMMAND> command. The volume name and plex, subvolume, and volume element names specified while using the <COMMAND>xlv_make</COMMAND> command cannot contain periods (.).</PARA>
<NOTE><PARA>In IRIX 6.2 and IRIX 5.3 with XFS, XLV logical volume device files had the names <FILENAME>/dev/dsk/xlv/</FILENAME><REPLACEABLE>volname</REPLACEABLE> and <FILENAME>/dev/rdsk/xlv/</FILENAME><REPLACEABLE>volname.</REPLACEABLE></PARA>
</NOTE>
<PARA><INDEXTERM ID="ITch3-63"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>moving to a new system</SECONDARY>
</INDEXTERM>
When a volume is created on one system and moved (by moving the disks) to another system, the new volume name is the same as the original volume name with the hostname of the original system prepended. For example, if a volume called xlv0 is moved from a system called engrlab1 to a system called engrlab2, the device name of the volume on the new system is <FILENAME>/dev/xlv/engrlab1.xlv0</FILENAME> (the old system name engrlab1 has been prepended to the volume name xlv0).</PARA>
</SECTION>
<SECTION  ID="LE25305-PARENT"><TITLE  ID="LE25305-TITLE">XLV Daemons</TITLE><PARA><INDEXTERM ID="ITch3-64"><PRIMARY>daemons</PRIMARY>
<SECONDARY>XLV</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-65"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>daemons</SECONDARY>
</INDEXTERM>
The XLV daemons are:</PARA>
<DEFLIST><DEFLISTENTRY><TERM><COMMAND>xlv_labd</COMMAND> </TERM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-66"><PRIMARY>logical volume labels</PRIMARY>
<SECONDARY>daemon that updates them</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-67"><PRIMARY><COMMAND>xlv_labd</COMMAND>
 daemon</PRIMARY>
</INDEXTERM>
<COMMAND>xlv_labd</COMMAND> updates XLV logical volume labels. It is started automatically at system startup if it is installed and there are active XLV logical volumes.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><COMMAND>xlvd</COMMAND> </TERM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-68"><PRIMARY><COMMAND>xlvd</COMMAND>
 daemon</PRIMARY>
</INDEXTERM>
<COMMAND>xlvd</COMMAND> performs I/O operations to plexes during plex error recovery. It is created automatically during system startup if plexing software is installed and there are active XLV logical volumes.</PARA>
</LISTITEM>
</DEFLISTENTRY>
<DEFLISTENTRY><TERM><COMMAND>xlv_plexd</COMMAND> </TERM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-69"><PRIMARY><COMMAND>xlv_plexd</COMMAND>
 daemon</PRIMARY>
</INDEXTERM>
<COMMAND>xlv_plexd</COMMAND> is responsible for making all plexes within a subvolume have the same data. It is started automatically at system startup if there are active XLV logical volumes.</PARA>
</LISTITEM>
</DEFLISTENTRY>
</DEFLIST>
<PARA><INDEXTERM ID="ITch3-70"><PRIMARY>logical volume labels</PRIMARY>
<SECONDARY>and logical volume assembly</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-71"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>no configuration file</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-72"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>coming up at system startup</SECONDARY>
</INDEXTERM>
XLV does not require an explicit configuration file, nor is it turned on and off with the <COMMAND>chkconfig</COMMAND> command. XLV is able to assemble logical volumes based solely upon information written in the logical volume labels. During initialization, the system performs a hardware inventory, reads all the logical volume labels, and automatically assembles the available disks into previously defined volumes.</PARA>
<PARA>If some disks are missing, XLV checks whether there are enough volume elements among the available plexes to map the entire address space. If the whole address space is available, XLV brings the volume online even if some of the plexes are incomplete.</PARA>
</SECTION>
<SECTION  ID="LE96811-PARENT"><TITLE  ID="LE96811-TITLE">XLV Error Policy</TITLE><PARA><INDEXTERM ID="ITch3-73"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>error policy</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-74"><PRIMARY>plexes</PRIMARY>
<SECONDARY>read and write errors</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-75"><PRIMARY>hard errors</PRIMARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-76"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>read and write errors</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-77"><PRIMARY>FLEXlm licenses</PRIMARY>
<SECONDARY>Disk Plexing Option</SECONDARY>
</INDEXTERM>
For read failures on log and data subvolumes, XLV rereads from a different plex (when available) and attempts to fix the failed plex by rewriting the results. XLV does not retry on failures for real-time data.</PARA>
<PARA>For write errors on log and data subvolumes, XLV assumes that these write errors are hard errors (the disk driver and controllers handle soft errors). If the volume element with a hard error is plexed, XLV marks the volume element offline and ignores the volume element from then on. If the volume element is not plexed, the volume element remains associated with the volume and an error is returned.</PARA>
<PARA>XLV does not handle write errors on real-time subvolumes. Incorrect data is returned without error messages on subsequent reads.</PARA>
</SECTION>
<SECTION  ID="LE83099-PARENT"><TITLE  ID="LE83099-TITLE">XLV Logical Volume Planning</TITLE><PARA><INDEXTERM ID="ITch3-78"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>planning logical volumes</SECONDARY>
</INDEXTERM>
The following subsections discuss topics to consider when planning an XLV logical volume.</PARA>
<SECTION><TITLE>When to Avoid Using XLV</TITLE><PARA><INDEXTERM ID="ITch3-79"><PRIMARY>XLV logical volumes</PRIMARY>
<SECONDARY>do not use</SECONDARY>
</INDEXTERM>
In some situations where XLV logical volumes cannot be used or are not recommended:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>Raw swap devices cannot be XLV logical volumes. (However, swap space can be added as a regular file in a filesystem and that filesystem could be on an XLV logical volume. See the chapter &ldquo;Configuring Disk and Swap Space&rdquo; in the <LINK BOOK="IA_ConfigOps" EXTREF="97829">IRIX Admin: System Configuration and Operation</LINK>
 guide for more information.)</PARA>
</LISTITEM>
<LISTITEM><PARA>XLV logical volumes are not recommended on systems with a single disk.</PARA>
</LISTITEM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-80"><PRIMARY>concatenation</PRIMARY>
<SECONDARY>not allowed on root filesystems</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-81"><PRIMARY>root partition</PRIMARY>
<SECONDARY>and XLV</SECONDARY>
</INDEXTERM>
Striped or concatenated XLV volumes cannot be used for the root filesystem.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION><TITLE>Selecting Subvolumes</TITLE><PARA><INDEXTERM ID="ITch3-82"><PRIMARY>logs</PRIMARY>
<SECONDARY>internal log, when used</SECONDARY>
</INDEXTERM>
Follow these basic guidelines for choosing which subvolumes to use with XFS filesystems:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>Data subvolumes are required.</PARA>
</LISTITEM>
<LISTITEM><PARA>Log subvolumes are optional. If they are not used, log information is put into an internal log in the data subvolume. In most cases, there is no advantage to using an external log.</PARA>
</LISTITEM>
<LISTITEM><PARA>Real-time subvolumes are optional.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
<PARA>When you want a large raw partition with no filesystem on it, only the data subvolume is used.</PARA>
<PARA>When you create a logical volume with a real-time subvolume, it must also include a data subvolume.</PARA>
<PARA><INDEXTERM ID="ITch3-83"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>selecting subvolumes</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-84"><PRIMARY>EFS filesystems</PRIMARY>
<SECONDARY>XLV subvolumes</SECONDARY>
</INDEXTERM>
Follow these basic guidelines for choosing which subvolumes to use with EFS filesystems. (EFS filesystems are of a filesystem type supported in previous IRIX releases; they are described in <XREF LINKEND="LE81344-TITLE">.)</PARA><ITEMIZEDLIST><LISTITEM><PARA>Only data subvolumes can be used.</PARA>
</LISTITEM>
<LISTITEM><PARA>The maximum size of an EFS filesystem is 8 GB; do not make the data subvolume bigger than that or the space is wasted.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION><TITLE>Choosing Subvolume Sizes</TITLE><PARA><INDEXTERM ID="ITch3-85"><PRIMARY>logical volumes</PRIMARY>
<SECONDARY>sizes</SECONDARY>
</INDEXTERM>
Use these basic guidelines for choosing subvolume sizes:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>The maximum size of a subvolume is one terabyte on 32-bit systems (IP17, IP20, IP22, and IP32). It is unlimited on 64-bit systems (IP19, IP21, IP25, IP26, and IP27).</PARA>
</LISTITEM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-86"><PRIMARY>disk partitions</PRIMARY>
<SECONDARY>and external log size</SECONDARY>
</INDEXTERM>
Choosing the size of the log (and therefore the size of the log subvolume) is discussed in <XREF LINKEND="LE93345-TITLE">. Note that if you do not intend to repartition a disk to create an optimal-size log partition, your choice of an available disk partition may determine the size of the log.</PARA></LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION><TITLE>Choosing Whether To Plex</TITLE><PARA><INDEXTERM ID="ITch3-87"><PRIMARY>plexes</PRIMARY>
<SECONDARY>when to use</SECONDARY>
</INDEXTERM>
The basic guidelines for plexing are:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>Use plexing when high reliability and high availability of data are required. </PARA>
</LISTITEM>
<LISTITEM><PARA>The root filesystem can be plexed; each plex must be a single partition volume element.</PARA>
</LISTITEM>
<LISTITEM><PARA>Dual-hosted XLV logical volumes (logical volume on disks that are connected to two systems) cannot be plexed.</PARA>
</LISTITEM>
<LISTITEM><PARA>RAID disks should not be plexed.</PARA>
</LISTITEM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-88"><PRIMARY>plexes</PRIMARY>
<SECONDARY>holes in address space</SECONDARY>
</INDEXTERM>
Plexes can have &ldquo;holes&rdquo; in them, portions of the address range not contained by a volume element, as long as at least one of the plexes in the subvolume has a volume element with the address range of the hole.</PARA>
</LISTITEM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-89"><PRIMARY>plexes</PRIMARY>
<SECONDARY>volume element sizes</SECONDARY>
</INDEXTERM>
The volume elements in each plex of a subvolume must be identical in size with their counterparts in other plexes (volume elements with the same address range). The structure within a volume element (single partition, striped, or multipartition) does not have to match the structure within its counterparts.</PARA>
</LISTITEM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-90"><PRIMARY>volume elements</PRIMARY>
<SECONDARY>changing size with <COMMAND>dvhtool</COMMAND>
</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-91"><PRIMARY><COMMAND>dvhtool</COMMAND>
 command</PRIMARY>
<SECONDARY><COMMAND>and volume element sizes</COMMAND>
</SECONDARY>
</INDEXTERM>
To make volume elements identical in size, use the <COMMAND>fx</COMMAND> command in expert mode <NEWLINE>(<COMMAND>fx -x</COMMAND>). At the first <COMMAND>fx</COMMAND> menu, give the command <COMMAND>repartition/expert -b</COMMAND>. This enables you to repartition in units of blocks, which ensures that the volume element is the exact size you want it.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION  ID="LE44451-PARENT"><TITLE  ID="LE44451-TITLE">Choosing Whether To Stripe</TITLE><PARA><INDEXTERM ID="ITch3-92"><PRIMARY>volume elements</PRIMARY>
<SECONDARY>striping, when to use</SECONDARY>
</INDEXTERM>
The basic guidelines for striping are:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA><INDEXTERM ID="ITch3-93"><PRIMARY>root filesystem</PRIMARY>
<SECONDARY>restrictions</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-94"><PRIMARY>root partition</PRIMARY>
<SECONDARY>and striping</SECONDARY>
</INDEXTERM>
The root filesystem cannot be striped.</PARA>
</LISTITEM>
<LISTITEM><PARA>Striped I/O can be used with both direct and buffered I/O. Whether to stripe or not to stripe depends on the access patterns of the data. In general, striped performance is better than non-striped performance.</PARA>
</LISTITEM>
<LISTITEM><PARA>Striped disks lead to performance improvement only when the applications that use them make large data transfers that access all disks in the stripe in the filesystem.</PARA>
</LISTITEM>
<LISTITEM><PARA><INDEXTERM ID="ITch3-95"><PRIMARY>disk partitions</PRIMARY>
<SECONDARY>sizes for striped volume elements</SECONDARY>
</INDEXTERM>
Striped volume elements should be made of disk partitions that are exactly the same size. When the disk partitions are different sizes, the smallest size is used. Additional space in the larger partitions is wasted.</PARA>
</LISTITEM>
<LISTITEM><PARA>For best performance, each disk involved in a striped volume element should be on a separate controller. For some disk types, performance improvement is seen with up to four disks per controller. For other disk types, no additional performance improvement is seen with three or more disks.</PARA>
</LISTITEM>
<LISTITEM><PARA>A log subvolume can be striped only if it is an external log. Striping a log does not result in a performance improvement.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
<SECTION><TITLE>Choosing Whether to Concatenate Disk Partitions</TITLE><PARA><INDEXTERM ID="ITch3-96"><PRIMARY>volume elements</PRIMARY>
<SECONDARY>multipartition volume elements</SECONDARY>
</INDEXTERM>
<INDEXTERM ID="ITch3-97"><PRIMARY>concatenation</PRIMARY>
<SECONDARY>guidelines</SECONDARY>
</INDEXTERM>
The basic guidelines for the concatenation of disk partitions are:</PARA>
<ITEMIZEDLIST><LISTITEM><PARA>The root filesystem cannot have concatenated disk partitions.</PARA>
</LISTITEM>
<LISTITEM><PARA>It is better to concatenate single-partition volume elements into a plex rather than to create a single multipartition volume element. This is not for performance reasons, but for reliability. When one disk partition goes bad in a multipartition volume element, the whole volume element is taken offline.</PARA>
</LISTITEM>
</ITEMIZEDLIST>
</SECTION>
</SECTION>
</CHAPTER>

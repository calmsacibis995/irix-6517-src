<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="4"><TITLE><XREFTARGET ID="42210">IRIX System Security</TITLE><PARAGRAPH>This chapter deals with security of local systems. It includes the following sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="59221" TYPE="TITLE">&ldquo;About System Security&rdquo;</XREF>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="95533" TYPE="TITLE">&ldquo;Standard Security Features&rdquo;</XREF>, which is an overview of the standard security features incorporated in IRIX design.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="69861" TYPE="TITLE">&ldquo;Security Safeguards and Cautions&rdquo;</XREF> is a list of areas to check for common security holes.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="75080" TYPE="TITLE">&ldquo;Password Administration&rdquo;</XREF> details proper setup and control of system software and user accounts to increase security.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="31913" TYPE="TITLE">&ldquo;System Login and Account Administration&rdquo;</XREF> covers proper maintenance of special accounts as well as user logins.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="43095" TYPE="TITLE">&ldquo;About Set-UID and Set-GID Permissions&rdquo;</XREF> describes the nature and control of the file permissions that enable user and group IDs to be set on execution.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="48436" TYPE="TITLE">&ldquo;About General File and Directory Permissions&rdquo;</XREF> discusses permission settings and lists IRIX files that are universally available for read and write access.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="72006" TYPE="TITLE">&ldquo;Accounts Shipped Without Passwords&rdquo;</XREF> lists the user accounts in <FILENAME>/etc/passwd</FILENAME> that do not contain passwords on the software as shipped.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="13168" TYPE="TITLE">&ldquo;Security File and Command Reference&rdquo;</XREF> lists IRIX security files and commands.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="98181" TYPE="TITLE">&ldquo;Enhanced Security Features&rdquo;</XREF> describes access control lists (ACLs) and least-privilege capabilities.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="59221">About System Security</TITLE><PARAGRAPH>Once you have initially established the security of a system, you can expand your secure area to include the network. But until you have local security, there is no point in trying to establish security over a larger area. </PARAGRAPH>
<PARAGRAPH>In addition, security is never <ITALICS>finally</ITALICS> established. Security is a dynamic process, requiring you to understand many issues, keep up to date on them, and continually monitor your systems with the many tools available. This book endeavors to provide the information you need to establish a security policy and begin its implementation.</PARAGRAPH>
<PARAGRAPH>It is one thing to secure an isolated IRIX system, another to secure a local area network, and still another to secure a site that is connected to external wide area networks such as the Internet. This chapter deals primarily with taking steps to secure an isolated system, but many of these same steps must also be taken before undertaking the more ambitious job of securing a network.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="31929" TYPE="TITLE">Chapter&nbsp;5</XREF> discusses network security issues, which become important after the issues discussed in this chapter have been addressed to your satisfaction. If your systems are not connecting to the Internet but only to a trusted local area network, you should still read the first part of <XREF IDREF="31929" TYPE="TITLE">Chapter&nbsp;5</XREF>, <XREF IDREF="21803" TYPE="TITLE">&ldquo;Local Area Network Access&rdquo;</XREF>.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The System Manager GUI provides Security and Access Control tasks that you can use to help manage security on your system. Refer to the <DOCTITLE></DOCTITLE>
<EXTREF IDREF="96534" BOOK="PerSysAdmin" FILE="" HDG="96534" INFO="">Personal System Administration Guide</EXTREF>
<DOCTITLE></DOCTITLE> for more information. The discussion in this chapter is based on the command-line and file interface to many of the same functions controlled with the GUI.</NOTE>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="95533">Standard Security Features</TITLE><PARAGRAPH>IRIX has several features that allow you to achieve a generally acceptable level of security without adding any new software. A great strength of the IRIX system is the ease with which users can share files and data. However, some of the security guidelines presented in this chapter are at odds with convenient system access. It is up to you, the system administrator, to balance the needs and concerns of the user community.<INDEXTARGET ID="ch41"><!-- POSTPROCESSDATA: ch41|security:IRIX standard --></PARAGRAPH>
<PARAGRAPH>Standard security features of IRIX are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>file ownership split into three classes&mdash;<ITALICS>owner</ITALICS>, <ITALICS>group</ITALICS>, and <ITALICS>other</ITALICS>&mdash;permits the owner of files to specify who is allowed access to the files</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>permissions split into three categories&mdash;<ITALICS>read</ITALICS>, <ITALICS>write</ITALICS>, and <ITALICS>execute</ITALICS>&mdash;permits the owner of files to specify the degree of access users may have to the files</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>individual user accounts, protected by individual, encrypted passwords </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>tools for monitoring login attempts and system activity, including:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>determining who is logged on the system, using the <REFPAGE>who(1)</REFPAGE> command </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>finding out which processes are running, using the <REFPAGE>ps(1)</REFPAGE> command </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>maintaining logs of system activity, using process accounting commands</PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</BULLET>
<BULLET><PARAGRAPH>the ability to encrypt data, using the <REFPAGE>crypt(1)</REFPAGE> command </PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="69861">Security Safeguards and Cautions</TITLE><PARAGRAPH>Computer security is the responsibility of not only the site administrator, but of everyone who has access to a computer at the site. System users should safeguard their data by using appropriate file and directory permissions in addition to using and guarding their account passwords.<INDEXTARGET ID="ch42"><!-- POSTPROCESSDATA: ch42|security:guidelines --></PARAGRAPH>
<PARAGRAPH>Site administrators, and to some extent system users, should be aware of the following:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Anyone with physical access to a computer can simply take it or its disk drives(s). </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The same caveat applies to backups of the system: keep backups in a secure place. Anyone with physical access to backup tapes can gain access to any information stored on them. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Permissions for directories and files should be set to allow only the necessary access for owner, group, and others. This minimizes the damage that one compromised account can cause.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>There are several ways accounts and passwords protect the system:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>By requiring users to log in with specific accounts, you can determine who is responsible for specific actions on the system. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Using the IRIX system of file permissions, users can keep data reasonably secure. Other users on the system are less likely to accidentally view confidential material. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>If all accounts have passwords, the chance of an unauthorized person accessing the system is greatly reduced. However, the possibility of unauthorized access increases if users are lax about choosing good passwords and changing their passwords regularly. The next section describes how to choose good passwords.</PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</BULLET>
<BULLET><PARAGRAPH>All active accounts need passwords, which should be changed regularly. Do not use obvious passwords, and do not store them online in &ldquo;plain-text&rdquo; format. If you must write them down on paper, store them in a safe place.</PARAGRAPH>
<PARAGRAPH>For information about choosing passwords, see <XREF IDREF="37825" TYPE="TITLE">&ldquo;Guidelines for Devising Passwords&rdquo;</XREF>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Common-use accounts are a potential security hole. An example of a common-use account is one that is shared by all members of a department or work group. Another example is a standard &ldquo;guest&rdquo; account on all the workstations at a site. This allows all users at the site access to different workstations without requiring specific accounts on each workstation.</PARAGRAPH>
<PARAGRAPH>A pitfall of common-use accounts is that you cannot tell exactly who is responsible for actions of the account on any given workstation. Another risk is that anyone trying to break into systems at your site will try obvious account names like <ITALICS>guest</ITALICS>.</PARAGRAPH>
<PARAGRAPH>Common-use accounts can be helpful, but be aware that they can pose serious security problems. Needless to say, common-use accounts without passwords are especially risky.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Using the <COMMAND>last</COMMAND> command, periodically monitor who logs into a system. The third field shows the hostname or IP address where remote logins originated; see <REFPAGE>last(1)</REFPAGE>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Accounts no longer in use should be either locked or backed up and removed, since unused accounts can be compromised as easily as current accounts.</PARAGRAPH>
<PARAGRAPH>Also, change critical passwords, including dialup passwords, whenever anyone leaves the organization. Former employees should not have access to workstations or servers at the site. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Systems with dialup ports should have special dialup accounts and passwords. This is very important for sites that have common-use accounts, as discussed above. Refer to the discussion on <COMMAND>/etc/d_passwd</COMMAND> in <XREF IDREF="46500" TYPE="TITLE">&ldquo;Establishing Second (Dialup) Passwords&rdquo;</XREF>.</PARAGRAPH>
<PARAGRAPH>However, even with this added precaution, do not store sensitive data on workstations that have dial-up access.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If your site allows access to the Internet network (for example, using <REFPAGE>ftp(1C)</REFPAGE>), take precautions to isolate access to a specific gateway workstation. Refer to <XREF IDREF="66837" TYPE="TITLE">&ldquo;About Network Security and Firewalls&rdquo;</XREF> for details on connecting to external networks.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Discourage use of the <REFPAGE>su(1M)</REFPAGE> command unless absolutely necessary. This command allows a user to change his or her user ID to that of another user. It is sometimes legitimately necessary to use <COMMAND>su</COMMAND> to access information owned by another user, but this presents an obvious temptation: the person using <COMMAND>su</COMMAND> to switch user IDs must know another person's password and therefore has full access to his or her account.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The file <FILENAME>/var/adm/sulog</FILENAME> contains a log of successful and unsuccessful attempts (indicated with a minus sign) to use the <COMMAND>su</COMMAND> command. By default, logging is already enabled in the <FILENAME>/etc/default/su</FILENAME> file.</NOTE>
</BULLET>
<BULLET><PARAGRAPH>Make sure that each user's home account, and especially the shell-startup files .<FILENAME>profile</FILENAME>, or&space;.<FILENAME>login</FILENAME> and .<FILENAME>cshrc, </FILENAME>are writable only by that user. This ensures that &ldquo;trojan horse&rdquo; programs are not inserted in a user's login files. (A trojan horse program is a file that appears to be a normal file, but in fact causes damage when invoked by a legitimate user.) <INDEXTARGET ID="ch43"><!-- POSTPROCESSDATA: ch43|Trojan horse attack --><INDEXTARGET ID="ch44"><!-- POSTPROCESSDATA: ch44|security:Trojan horse attack --></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Be sure that system directories such as <FILENAME>/</FILENAME> (root), <FILENAME>/bin</FILENAME>, <FILENAME>/usr/bin</FILENAME>, and <FILENAME>/etc</FILENAME> and the files in them are not writable except by the owner. This also prevents trojan horse attacks. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you must leave your console, workstation, or terminal unattended, log off the system. This is especially important if you are logged in as <ITALICS>root</ITALICS>. Also, refer to the <REFPAGE>xlock(1)</REFPAGE> reference page for information on locking your local X display.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Sensitive data files should be encrypted. The <REFPAGE>crypt(1)</REFPAGE> command, together with the encryption capabilities of the editors (<COMMAND>ed</COMMAND> and <COMMAND>vi</COMMAND>), provides some protection for sensitive information.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Use only that software that is provided by reputable manufacturers. Be wary of programs that are distributed &ldquo;publicly,&rdquo; especially already-compiled binaries. Programs that are available on public bulletin board systems (as opposed to BBSs run and sponsored by vendors) and on public computer networks could contain malicious &ldquo;worm&rdquo; routines that can violate system security and cause data loss.</PARAGRAPH>
<PARAGRAPH>Public-domain source code is safer than already-compiled programs, but only if you examine the code thoroughly before compiling it. Be suspicious of programs that must be installed with set-UID <ITALICS>root</ITALICS> in order to run. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Safeguard and regularly check your network hardware. One possible way to break into computer systems is to eavesdrop on network traffic using physical taps on the network cable. Taps can be physical connections (such as a vampire tap) or inductive taps.</PARAGRAPH>
<PARAGRAPH>Run networking cable through secure areas and make sure it is easy to examine regularly. Create and maintain a hard copy map of the network to make it easier to spot unauthorized taps. Another way to make this sort of attack less likely is to use fiber-optic (FDDI) network hardware, which is much more difficult to tap. For details on configuring network software securely, refer to <XREF IDREF="31929" TYPE="TITLE">Chapter&nbsp;5</XREF>.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>System security under IRIX is primarily dependent on system login accounts and passwords. Proper administration, user education, and use of the facilities provided yield adequate security for most sites. Most security breaches are the result of human error and improper use of the provided security features. <ITALICS>No extra measures yield more security if the basic features are not used or are compromised by user actions</ITALICS>. Also, periodically log in with anonymous FTP to <FILENAME>sgigate.sgi.com</FILENAME> and look in the directory <FILENAME>~ftp/security</FILENAME> for any security patches for your system.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>If you are using NFS or NIS on your system, see the discussions in <XREF IDREF="58392" TYPE="TITLE">&ldquo;Disabling NIS (YP) on the Firewall&rdquo;</XREF> and <XREF IDREF="75265" TYPE="TITLE">&ldquo;Disallowing NFS Access on the Firewall&rdquo;</XREF>.</NOTE>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="75080">Password Administration</TITLE><PARAGRAPH>This discussion of password administration includes the following sections:<INDEXTARGET ID="ch45"><!-- POSTPROCESSDATA: ch45|passwords:administration --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="37825" TYPE="TITLE">&ldquo;Guidelines for Devising Passwords&rdquo;</XREF> discusses how to choose more secure passwords and avoid easily guessed ones.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="48777" TYPE="TITLE">&ldquo;About PROM Passwords&rdquo;</XREF> discusses use of PROM passwords.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="46500" TYPE="TITLE">&ldquo;Establishing Second (Dialup) Passwords&rdquo;</XREF> discusses how to associate a second password (often called system or dialup passwords) with specific tty lines.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="53045" TYPE="TITLE">&ldquo;About Shadow Passwords&rdquo;</XREF> describes the use of a shadow password file to hide even the encrypted passwords contained in the standard password file.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="75421" TYPE="TITLE">&ldquo;About Password Aging&rdquo;</XREF> shows how to force users to choose new passwords at specified intervals.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="38605" TYPE="TITLE">&ldquo;Using pwck to Check the Password File&rdquo;</XREF> introduces a useful tool that performs some useful password file checks.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Managing passwords is also described in <DOCTITLE></DOCTITLE>
<EXTREF IDREF="97829" BOOK="IA_ConfigOps" FILE="" HDG="97829" INFO="">IRIX Admin: System Configuration and Operation</EXTREF>
<DOCTITLE></DOCTITLE>.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="37825">Guidelines for Devising Passwords<INDEXTARGET ID="ch46"><!-- POSTPROCESSDATA: ch46|password:choosing --></TITLE><PARAGRAPH>Systems are most secure when nobody can access them without both an account and password, and if all the passwords on the system are difficult to guess and obtain. Unfortunately, many users choose passwords that are easy for potential intruders to guess, or write their passwords down on paper left near their workstations.</PARAGRAPH>
<PARAGRAPH>Also, many site administrators use the same password for multiple administrative accounts. This is not a good practice. Do not deliberately use the same password for more than one account.</PARAGRAPH>
<PARAGRAPH>More secure passwords are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>long (the first eight characters are recognized)</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>multiple words that are combined or arranged in an unusual manner </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>words from multiple languages, combined in a unique way </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>composed of different kinds of characters, such as digits and punctuation</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>have all of these bulleted features</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Easily guessed passwords are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>short </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>single words that are in a dictionary </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the same as the account name, or the account name spelled backward </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the name of the user's department or project </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the user's name or initials </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the license number of the user's car, a spouse or friend's name, the user's home address, phone number, age, or other obvious information</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>obvious&mdash;for example, &ldquo;top secret,&rdquo; &ldquo;secret,&rdquo; &ldquo;private,&rdquo; &ldquo;password,&rdquo; &ldquo;friend,&rdquo; &ldquo;key,&rdquo; &ldquo;god,&rdquo; &ldquo;me,&rdquo; and so on</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="48777">About PROM Passwords</TITLE><PARAGRAPH>Your system has a facility that allows you to require a password from users who attempt to gain access to the Command (PROM) Monitor. This gives you greater control over who may perform system administration tasks. <INDEXTARGET ID="ch47"><!-- POSTPROCESSDATA: ch47|system passwords:password:system --><INDEXTARGET ID="ch48"><!-- POSTPROCESSDATA: ch48|password:PROM --><INDEXTARGET ID="ch49"><!-- POSTPROCESSDATA: ch49|PROM passwords:use ofpassword PROM --></PARAGRAPH>
<PARAGRAPH>Traditionally, if an intruder gains access to your system hardware, there is little you can do to maintain system security. In the simplest case, the intruder switches off the system, then turns it on again, and instructs the system from the console to boot a program other than your usual operating system. Alternatively, the intruder could simply remove the hard disk from your system and install it on another system and read your files. While there is nothing you can do with system software to prevent physical theft of the hardware, you can limit the ability of intruders to boot their programs or to otherwise damage your system at its lowest levels with a PROM password.</PARAGRAPH>
<PARAGRAPH>Note that if you forget your PROM password, but you still know your <ITALICS>root</ITALICS> password, you can reset the PROM password on most systems through the <COMMAND>nvram</COMMAND> command. If you cannot successfully reset the PROM password, you must remove the PROM or a jumper from your CPU board. See your <DOCTITLE>Owner's Guide</DOCTITLE> for information on this procedure. </PARAGRAPH>
<PARAGRAPH>To assign a new PROM password if you have forgotten it, first clear the existing PROM password from IRIX with the <COMMAND>nvram</COMMAND> command, and then assign a new one with the <COMMAND>passwd</COMMAND> command from the PROM monitor.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Clearing the PROM Password Using nvram<INDEXTARGET ID="ch410"><!-- POSTPROCESSDATA: ch410|PROM passwords:clearing --></TITLE><PARAGRAPH>To clear the PROM password using the <REFPAGE>nvram(1M)</REFPAGE> command, perform the following steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Log in as <ITALICS>root</ITALICS>. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Give the following command:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>nvram passwd_key</USERINPUT>&space;<USERINPUT>&ldquo;&rdquo;</USERINPUT>
</EXAMPLE>
<PARAGRAPH>Your PROM password is now cleared. </PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Setting the PROM Password from the Command Monitor<INDEXTARGET ID="ch411"><!-- POSTPROCESSDATA: ch411|PROM passwords:setting --></TITLE><PARAGRAPH>If you wish to set your PROM password from within the Command Monitor, perform the following steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Log in as <ITALICS>root</ITALICS> and shut the system down.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>When you see this message, press the <USERINPUT>Esc</USERINPUT> key for the System Maintenance Menu:</PARAGRAPH>
<CODE>
Starting up the system...
To perform system maintenance instead, press Esc
</CODE>
</LIST>
<LIST><PARAGRAPH>Select option 5 from the System Maintenance Menu to enter the Command Monitor. You see the Command Monitor prompt:</PARAGRAPH>
<EXAMPLE>
>>
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="79000">Type the <COMMAND>passwd</COMMAND> command and press <USERINPUT>Enter</USERINPUT>:</PARAGRAPH>
<EXAMPLE>
passwd 
</EXAMPLE>
<PARAGRAPH>You see the prompt:</PARAGRAPH>
<EXAMPLE>
Enter new password:
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Enter the password you want for your system and press <USERINPUT>Enter</USERINPUT>. You see the following prompt:</PARAGRAPH>
<EXAMPLE>
Confirm new password:
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Enter the password again, exactly as you typed it before. If you typed the password the same as the first time, you see the Command Monitor prompt again.Your password is now set. Whenever you access the Command Monitor, you will be required to enter this password.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>Refer to <XREF IDREF="37825" TYPE="TITLE">&ldquo;Guidelines for Devising Passwords&rdquo;</XREF> for help in selecting a good password.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="46500">Establishing Second (Dialup) Passwords</TITLE><PARAGRAPH>If your system requires additional protection, you can establish a <INDEXTARGET ID="ch412"><!-- POSTPROCESSDATA: ch412|password:dialup --><GLOSSARYITEM>system password</GLOSSARYITEM>. If you do this, users who log in on specific ports (ttys) are prompted for a system password in addition to their account passwords. This feature cannot be imposed on the system console, or any terminal where <COMMAND>clogin</COMMAND> or <COMMAND>xdm</COMMAND> is used.</PARAGRAPH>
<PARAGRAPH>System passwords are normally used only on dialup lines and are often referred to as <GLOSSARYITEM>dialup password</GLOSSARYITEM><ITALICS>s</ITALICS>. You can use them on standard lines, but this is usually not necessary.</PARAGRAPH>
<PARAGRAPH>To establish a system password, follow these steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Log in as <ITALICS>root</ITALICS>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Edit the file <FILENAME>/etc/dialups</FILENAME>. Place in the file a list of ports (ttys) that require the second password. For example:</PARAGRAPH>
<CODE>
<USERINPUT>/dev/ttyd1</USERINPUT>&space;
<USERINPUT>/dev/ttyd2</USERINPUT>&space;
<USERINPUT>/dev/ttyd3</USERINPUT>&space;
</CODE>
<PARAGRAPH>All possible names for ports should be listed including links. Write the file and exit from the editor. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Decide on the desired password or passwords. System passwords are assigned on a shell-by-shell basis. You can assign the same password for all the possible shells on the system, assign different passwords for each shell, or use some combination of approaches. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="13236">Encrypt the desired password. You must use the <COMMAND>passwd</COMMAND> program to perform the encryption. You cannot use the <REFPAGE>crypt(1)</REFPAGE> command for this purpose.</PARAGRAPH>
<PARAGRAPH>To encrypt the password, make a backup copy of the <FILENAME>/etc/passwd</FILENAME> file, then change the password of some account (for example, create a new account called <ITALICS>dialup</ITALICS>) to get a password for use in <FILENAME>/etc/d_passwd</FILENAME>. Return the password file to its original state when you are finished, either by restoring the backup copy you made of <FILENAME>/etc/passwd</FILENAME>, or by removing the <ITALICS>dialup</ITALICS> account entry. (An account's encrypted password resides in the second field of <FILENAME>/etc/passwd</FILENAME>, or in <FILENAME>/etc/shadow</FILENAME> if the second field says <CMDLINEOPT>x</CMDLINEOPT>.)</PARAGRAPH>
<PARAGRAPH>For example, to change the password of the <ITALICS>bin</ITALICS> account to ``2themoon'' you enter:</PARAGRAPH>
<CODE>
<USERINPUT>passwd bin</USERINPUT>&space;
<SCREENDISPLAY>New password:</SCREENDISPLAY>
</CODE>
<PARAGRAPH>Now enter the string &ldquo;2themoon&rdquo; and then press <USERINPUT>Enter</USERINPUT>. The string &ldquo;2themoon&rdquo; is not displayed as you type it.</PARAGRAPH>
<PARAGRAPH>Next you see:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>Re-enter password:</SCREENDISPLAY>
</CODE>
<PARAGRAPH>Enter the string &ldquo;2themoon&rdquo; again and then press <USERINPUT>Enter</USERINPUT>. The string is still not displayed as you type it.</PARAGRAPH>
<PARAGRAPH>Examine the entry for the <ITALICS>bin</ITALICS> account in the file <FILENAME>/etc/passwd</FILENAME>. You should see something like this:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>bin:SaXub4uaL5NP:2:2:System Tools Owner:/bin</SCREENDISPLAY>
</CODE>
<PARAGRAPH>The second field (between the first and second colons) is the encrypted version of the password &ldquo;2themoon.&rdquo; (What you see may be different, even with the same password, depending on the &ldquo;seed&rdquo; the system uses to encrypt the password.)</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Edit the file <FILENAME>/etc/d_passwd</FILENAME>. In the file, place lines in the format:</PARAGRAPH>
<PARAGRAPH><VARIABLE>shell:password:</VARIABLE></PARAGRAPH>
<PARAGRAPH><VARIABLE>shell</VARIABLE> is the command interpreter (shell) you wish to have a password, and <VARIABLE>password</VARIABLE> is the encrypted password. Make sure that all &ldquo;shells&rdquo; used in <FILENAME>/etc/passwd</FILENAME> (the seventh and final field) are listed in this file, including those for UUCP, PPP, SLIP, and so on.</PARAGRAPH>
<PARAGRAPH>For example, this command assigns the password &ldquo;2themoon,&rdquo; which you encrypted in the previous step, to all C shell users who log in on the ttys specified in <FILENAME>/etc/dialups</FILENAME>:</PARAGRAPH>
<CODE>
<USERINPUT>/bin/csh:SaXub4uaL5NP2:</USERINPUT>&space;
</CODE>
<PARAGRAPH>You must place a colon at the end of the encrypted password, and you must enter the shell program pathname exactly as it appears in <FILENAME>/etc/passwd</FILENAME>.</PARAGRAPH>
<PARAGRAPH>Write the file and exit from the editor. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Make sure the files have appropriate permissions by issuing the command:</PARAGRAPH>
<CODE>
<USERINPUT>chmod 640 /etc/d_passwd /etc/dialups</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Remove the password you assigned to the system account in <XREF IDREF="13236" TYPE="TEXT">Step 4</XREF>. To do this, edit the file <FILENAME>/etc/passwd</FILENAME> and remove the string of characters in the second field. Return this field to the same state as when you began this procedure.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>Now, whenever C shell users log in on the ttys specified in <FILENAME>/etc/dialups</FILENAME>, they are prompted for the system password &ldquo;2themoon&rdquo; in addition to their account password.</PARAGRAPH>
<PARAGRAPH>Note that you must make similar entries for any other login shells used on your system such as <FILENAME>/bin/ksh</FILENAME>, <FILENAME>/usr/local/bin/bash</FILENAME>, and <FILENAME>/usr/bin/tcsh</FILENAME>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="53045">About Shadow Passwords</TITLE><PARAGRAPH>A &ldquo;shadow&rdquo; password file is simply a copy of the standard password file, but it is not accessible by non-privileged users. In the standard configuration, the <FILENAME>/etc/passwd</FILENAME> file is publicly readable. Since the <FILENAME>/etc/passwd</FILENAME> file contains the encrypted versions of users' passwords, anyone can make a copy and attempt decryption of the passwords for malicious purposes. By using a shadow password file, you prevent intruders from attempting to decrypt your passwords. </PARAGRAPH>
<PARAGRAPH>The shadow password file is called <FILENAME>/etc/shadow</FILENAME>. Once shadow passwords have been initialized, the password field in each <FILENAME>/etc/passwd</FILENAME> entry is replaced by an &ldquo;x&rdquo; character. All standard password tools work transparently with shadow passwords. The difference should not be noticeable to your users, except that they cannot see their encrypted passwords in the <FILENAME>/etc/passwd</FILENAME> file.</PARAGRAPH>
<PARAGRAPH>One exception is that older applications cannot get the proper value of <VARIABLE>pw_passwd</VARIABLE> from the <REFPAGE>getpwent(3C)</REFPAGE> and <REFPAGE>getpwnam(3C)</REFPAGE> library calls. This primarily affects &ldquo;screen saver&rdquo; programs, unless they have root privileges.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>Shadow passwords work differently with NIS. See the <REFPAGE>shadow(4)</REFPAGE> reference page for details on the use of shadow passwords with NIS.</NOTE>
<SECTION3 LBL="" HELPID = ""><TITLE>Using a Shadow Password File</TITLE><PARAGRAPH>To initialize <FILENAME>/etc/shadow</FILENAME> (and thus invoke shadow passwords), run the <COMMAND>pwconv</COMMAND> command; see <REFPAGE>pwconv(1M)</REFPAGE>. Once this command has been run, shadow passwords are in effect.</PARAGRAPH>
<PARAGRAPH>To update the password and shadow password files simultaneously, use the <COMMAND>passmgmt</COMMAND> command; see <REFPAGE>passmgmt(1M)</REFPAGE>. The graphical System User Manager can also update shadow passwords if they are in effect.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="75421">About Password Aging<INDEXTARGET ID="ch413"><!-- POSTPROCESSDATA: ch413|password:aging --></TITLE><PARAGRAPH>The password aging mechanism forces users to change their passwords periodically. It also prevents a user from changing a new password before a specified time interval. You can also force a user to change his or her password immediately.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>Password aging is not supported for NIS entries (see <REFPAGE>passwd(4)</REFPAGE>).</NOTE>
<PARAGRAPH>Realistically, password aging forces users to adopt at least two passwords for their accounts. This is because, when password aging is enforced, most users alternate between two passwords that they find easy to remember rather than inventing new passwords every time their old ones expire. IRIX does not provide a utility that determines whether users are choosing from a set of passwords and, if so, then forces them to choose completely different passwords.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Controlling Password Aging with the passwd Command</TITLE><PARAGRAPH>To set the maximum number of days that can elapse before a user must change his or her password, use the <REFPAGE>passwd(1)</REFPAGE> command with the following syntax:</PARAGRAPH>
<CODE>
<USERINPUT>passwd -x </USERINPUT><VARIABLE>max  name</VARIABLE>
</CODE>
<PARAGRAPH>The value <VARIABLE>max</VARIABLE> is the maximum number of days the password is valid for the user <VARIABLE>name</VARIABLE>. For example, this command forces user <ITALICS>alice</ITALICS> to change her password every 14 days:</PARAGRAPH>
<CODE>
<USERINPUT>passwd -x 14 alice</USERINPUT>&space;
</CODE>
<PARAGRAPH>If you set <VARIABLE>max</VARIABLE> to 0, the user must change her password when she next logs in, but thereafter password aging is not in effect for her. If you set <CMDLINEOPT>-x</CMDLINEOPT> to -1, password aging is turned off immediately for that user.</PARAGRAPH>
<PARAGRAPH>You can also set the minimum time that must elapse before users are allowed to change their passwords. This is useful to prevent users from changing their passwords, then changing them back to their old passwords immediately. For example:</PARAGRAPH>
<CODE>
<USERINPUT>passwd -x 14 -n 7 ralph</USERINPUT>&space;
</CODE>
<PARAGRAPH>This forces user <ITALICS>ralph</ITALICS> to change his password every fourteen days and prevents him from changing it more frequently than once every seven days. Note that if you set the minimum value greater than the maximum value, the user may not ever change his or her password.</PARAGRAPH>
<PARAGRAPH>To force users to change their passwords immediately, use the <CMDLINEOPT>-f</CMDLINEOPT> option. For example:</PARAGRAPH>
<CODE>
<USERINPUT>passwd -f trixie</USERINPUT>&space;
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Controlling Password Aging by Editing /etc/passwd</TITLE><PARAGRAPH>Another way to enforce password aging is to edit the <FILENAME>/etc/passwd </FILENAME>file and insert the appropriate information after the password fields in the desired account entries.</PARAGRAPH>
<PARAGRAPH>Password aging information is appended to the encrypted password field in the <FILENAME>/etc/passwd</FILENAME> file. The password aging information consists of a comma and up to four bytes (characters) in the format:</PARAGRAPH>
<CODE>
<VARIABLE>,Mmww </VARIABLE>
</CODE>
<PARAGRAPH>The meaning of these fields is as follows:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>,</HANGITEM>
<HANGBODY><PARAGRAPH>The comma separates the password and the aging information.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>M</HANGITEM>
<HANGBODY><PARAGRAPH>The Maximum duration of the password.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>m</HANGITEM>
<HANGBODY><PARAGRAPH>The minimum time interval before the existing password can be changed by the user.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ww</HANGITEM>
<HANGBODY><PARAGRAPH>The week (counted from the beginning of 1970) when the password was last changed and two characters, <VARIABLE>ww</VARIABLE>, are used. You do not enter this information. The system automatically adds these characters to the password aging information.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>All times are specified in weeks (0 through 63) by a 64-character alphabet. The following chart shows the relationship between the numerical values and character codes. Any of the character codes can be used in the four fields of the password aging information. <XREF IDREF="58467" TYPE="TABLE">Table&nbsp;4-1</XREF> lists the password aging codes and their meanings.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="4-1"><PREFIX>Table 4-1 </PREFIX><XREFTARGET ID="58467"> <EMPHASIS>(continued)        </EMPHASIS>Password Aging Character Codes</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="99"><PARAGRAPH>Character</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="99"><PARAGRAPH>Number of Weeks </PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>. (period)</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="99"><PARAGRAPH>0 (zero)</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>/ (slash)</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="99"><PARAGRAPH>1</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>0 through 9</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="99"><PARAGRAPH>2 through 11</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>A through Z</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="99"><PARAGRAPH>12 through 37</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>a through z</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="99"><PARAGRAPH>38 through 63</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>Two special cases apply for the character codes:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If M and m are equal to zero, the user is forced to change the password at the next login. No further password aging is then applied to that login account. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If m is greater than M, only <ITALICS>root</ITALICS> is able to change the password for that login account.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The following example shows the password aging information required to establish a new password every two weeks (0) and to deny changing the new password for one week (/) for user <ITALICS>ralph</ITALICS>:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>ralph:RSOE2m.E,0/:100:1:Ralph P. Cramden:/usr/people/ralph:</SCREENDISPLAY>&space;
</CODE>
<PARAGRAPH>After <ITALICS>ralph</ITALICS>'s first login following the change, the system automatically adds the two-character, &ldquo;last-time-changed&rdquo; information to the password field:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>ralph:RSOE2m.E,0/W9:100:1:Ralph P. Cramden:/usr/people/ralph:</SCREENDISPLAY>&space;
</CODE>
<PARAGRAPH>In this example, ralph changed his password in week W9. To force ralph to change his password at the next login (and to cause this only once), you can add the code ,.. to the password field:<INDEXTARGET ID="ch414"><!-- POSTPROCESSDATA: ch414|password:changing --><INDEXTARGET ID="ch415"><!-- POSTPROCESSDATA: ch415|changing passwords --><INDEXTARGET ID="ch416"><!-- POSTPROCESSDATA: ch416|system access --></PARAGRAPH>
<CODE>
<SCREENDISPLAY>ralph:RSOE2m.E</SCREENDISPLAY><USERINPUT>,..</USERINPUT><SCREENDISPLAY>:100:1:Ralph P. Cramden:/usr/people/ralph:</SCREENDISPLAY>&space;
</CODE>
<PARAGRAPH>After <ITALICS>ralph</ITALICS> changes his password, the system automatically removes the aging code (,..) from the password field. To prevent <INDEXTARGET ID="ch417"><!-- POSTPROCESSDATA: ch417|password:changing --><INDEXTARGET ID="ch418"><!-- POSTPROCESSDATA: ch418|changing passwords --><INDEXTARGET ID="ch419"><!-- POSTPROCESSDATA: ch419|system access --><ITALICS>ralph</ITALICS> from changing his password, use the code <USERINPUT>,./</USERINPUT>. Edit the <FILENAME>/etc/passwd</FILENAME> file and add a comma, period, and slash to the password field:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>ralph:RSOE2m.E</SCREENDISPLAY><USERINPUT>,./</USERINPUT><SCREENDISPLAY>:100:1:Ralph P. Cramden:/usr/people/ralph:</SCREENDISPLAY>&space;
</CODE>
<PARAGRAPH>Now only <ITALICS>root</ITALICS> can change the password for the <ITALICS>ralph</ITALICS> account. If <ITALICS>ralph</ITALICS> tries to change the password, he sees the message <SCREENDISPLAY>permission denied. <INDEXTARGET ID="ch420"><!-- POSTPROCESSDATA: ch420|login:locking --><INDEXTARGET ID="ch421"><!-- POSTPROCESSDATA: ch421|locking logins --><INDEXTARGET ID="ch422"><!-- POSTPROCESSDATA: ch422|system access --></SCREENDISPLAY></PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="38605">Using pwck to Check the Password File<INDEXTARGET ID="ch423"><!-- POSTPROCESSDATA: ch423|<ITALICS>pwck</ITALICS> commandpassword:checking --></TITLE><PARAGRAPH>From time to time, you should run the <REFPAGE>pwck(1M)</REFPAGE> utility to scan the password file. This program reads the file and checks each entry for completeness and notes any inconsistencies. The password checks include validation of:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>the number of fields in each entry</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the login name</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the user ID number</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the group ID number</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the login directory</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the executed program</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The default password file to be checked is <FILENAME>/etc/passwd</FILENAME>. If shadow passwords (described in <XREF IDREF="53045" TYPE="TITLE">&ldquo;About Shadow Passwords&rdquo;</XREF>) are enabled, the <FILENAME>/etc/shadow</FILENAME> file is checked.</PARAGRAPH>
<PARAGRAPH>Similarly, the <REFPAGE>grpck(1M)</REFPAGE> command verifies all entries in the <FILENAME>/etc/group</FILENAME> file. The default group file to be checked is <FILENAME>/etc/group</FILENAME>. With either command, an alternate file may be specified on the command line.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="31913">System Login and Account Administration</TITLE><PARAGRAPH>This section describes how to control special and login accounts. Special accounts are used by the system to perform specific system functions, and login accounts are user accounts allowing general-purpose system access.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="47273">About Special Accounts<INDEXTARGET ID="ch424"><!-- POSTPROCESSDATA: ch424|login:special accounts --></TITLE><PARAGRAPH>Special accounts are used by daemons to perform system functions, such as spooling UUCP jobs and print requests. Because key files are owned by these accounts, someone who has obtained access to one of the accounts, or was able to start a daemon on your system, could partially breach security. Partially, because ownership of the various system files is distributed among the special accounts.</PARAGRAPH>
<PARAGRAPH>Guard access to all the special accounts as you would the root account. Either assign passwords to these accounts, or lock them using one of the methods described in <XREF IDREF="68670" TYPE="TITLE">&ldquo;Locking Unused Logins&rdquo;</XREF>.</PARAGRAPH>
<PARAGRAPH>Following is a list of all the administrative and special accounts on the system and what they are used for:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>root </HANGITEM>
<HANGBODY><PARAGRAPH>This login has no restrictions, and it overrides all other logins, protections, and permissions. It allows you access to the entire operating system. The password for the <ITALICS>root</ITALICS> login should be very carefully protected. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>sys </HANGITEM>
<HANGBODY><PARAGRAPH>This login has the power of a normal user login over the files it owns, which are in <FILENAME>/usr/src</FILENAME>. Its login should be disabled.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>bin </HANGITEM>
<HANGBODY><PARAGRAPH>This login has the power of a normal user login over the files it owns, which are throughout the system. Its login should be disabled.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>adm </HANGITEM>
<HANGBODY><PARAGRAPH>This login has the power of a normal user login over the files it owns, which are located in <FILENAME>/var/adm</FILENAME>. You may su to the adm login. This login should be disabled.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>uucp </HANGITEM>
<HANGBODY><PARAGRAPH>This login owns the object and spooled data files in <FILENAME>/usr/lib/uucp</FILENAME> and <FILENAME>/etc/uucp</FILENAME>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>nuucp </HANGITEM>
<HANGBODY><PARAGRAPH>This login is used by remote workstations to log into the system and initiate file transfers through <FILENAME>/usr/lib/uucp/uucico</FILENAME>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>daemon </HANGITEM>
<HANGBODY><PARAGRAPH>This login is the system daemon, which controls background processing. Its login should be disabled.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>lp </HANGITEM>
<HANGBODY><PARAGRAPH>This login owns the object and spooled data files in <FILENAME>/var/spool/lp</FILENAME>. Its login should be disabled unless the system is a print server.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="68670">Locking Unused Logins<INDEXTARGET ID="ch425"><!-- POSTPROCESSDATA: ch425|login:locking --></TITLE><PARAGRAPH>If a login is not used or needed, disable (lock) the login. You should not remove the account, though, because of the danger of reusing the UID in the future. User ID numbers are meant to be permanently associated with the person who used the account. If you reuse the UID number, the new user may find files that belonged to the previous owner of the ID number. These files may contain &ldquo;trojan horse&rdquo; programs that could damage your system. You may remove the user's home directory and files (after making a backup), but you should never remove an entry from your <FILENAME>/etc/passwd</FILENAME> file.</PARAGRAPH>
<PARAGRAPH>There are two ways to lock an account. The first is using the <COMMAND>passwd</COMMAND> command with the <CMDLINEOPT>-l</CMDLINEOPT> option. For example, the current entry in<FILENAME>&space;/etc/passwd</FILENAME> for the user <ITALICS>jones</ITALICS> might look like this:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>jones:6.D/N3ZFGmq7U:3333:10:Jeremiah Jones:/usr/people/jones:/bin/tcsh</SCREENDISPLAY>
</CODE>
<PARAGRAPH>The following command changes the password field of the entry in <FILENAME>/etc/passwd</FILENAME> for account <ITALICS>jones </ITALICS>to <SCREENDISPLAY>*LK*</SCREENDISPLAY>, which blocks all logins to that account:</PARAGRAPH>
<CODE>
<USERINPUT>passwd -l jones</USERINPUT>
</CODE>
<PARAGRAPH>The password field entry now looks like this:</PARAGRAPH>
<CODE>
jones:*LK*:3333:10:Jeremiah Jones:/usr/people/jones:/bin/tcsh
</CODE>
<PARAGRAPH>The second way to lock an account is by editing the password file directly. Change the password field to any string of characters that is not used by the password encryption program to create encrypted passwords. The <COMMAND>passwd</COMMAND> command with the <CMDLINEOPT>-l</CMDLINEOPT> option uses the string <SCREENDISPLAY>*LK*</SCREENDISPLAY>. You can use other strings to lock accounts. </PARAGRAPH>
<PARAGRAPH>For example, you can use a descriptive phrase such as &ldquo;LOCKED;&rdquo; to remind you that the account was deliberately disabled:</PARAGRAPH>
<CODE>
<SCREENDISPLAY>ralph:</SCREENDISPLAY><USERINPUT>LOCKED</USERINPUT><SCREENDISPLAY>;:100:1:Ralph P. Cramden:/usr/people/ralph:</SCREENDISPLAY>&space;
</CODE>
<PARAGRAPH>The semicolon is not used in an encrypted password and causes the account to be locked. The text &ldquo;LOCKED&rdquo; is merely to remind you that the account is locked.</PARAGRAPH>
<PARAGRAPH>Another common method of disabling a password is to put an asterisk (*) in the password field. The default IRIX <COMMAND>/etc/passwd</COMMAND> file disables some unused logins this way.&nbsp; Be sure to check your <FILENAME>/etc/passwd</FILENAME> file to be sure all logins have passwords or are disabled.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="84964">System Login Options</TITLE><PARAGRAPH>You can set the following login options to enhance security:<INDEXTARGET ID="ch426"><!-- POSTPROCESSDATA: ch426|login:options --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Restrict <ITALICS>root</ITALICS> logins to a specific device, typically the system console.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Specify the number of times an attempt to log in can fail before the login exits.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If the login process is disabled, specify how long before it can be resumed.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Specify whether to maintain a log of logins and what information to store: all logins or only those that were unsuccessful.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Specify whether to force a user who does not have a password to choose one immediately upon logging in.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If a login fails after the specified maximum number of attempts, disable the account by locking the password, with possible exceptions including the <ITALICS>root</ITALICS> account.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Specify whether or not to display, after successful login, the date and time when the user last logged in.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Login options are set in the file <FILENAME>/etc/default/login,</FILENAME> which is a normal text file. The file contains one option specification per line. Options are described in the rest of this section. See the <REFPAGE>login(1)</REFPAGE> reference page for further details.</PARAGRAPH>
<PARAGRAPH>Because the login procedure is your system's main defense against unauthorized access, login options are important. For example, you can determine whether someone is trying to break into your system from a pattern of failed login attempts recorded in <FILENAME>/var/adm/SYSLOG</FILENAME> (when logging is enabled, which is the default).</PARAGRAPH>
<PARAGRAPH>The best way to keep a system secure is to slow down attempts to guess passwords and account names. The login options described in this section add delays to unsuccessful login attempts, which drastically curtails the activity of randomly guessing passwords.</PARAGRAPH>
<PARAGRAPH>Note that the visual login process <REFPAGE>clogin(1)</REFPAGE> does not provide these security options. To use the login security functions, you must turn off <COMMAND>clogin</COMMAND> and use the standard login processes, <REFPAGE>getty(1)</REFPAGE> and <REFPAGE>login(1)</REFPAGE>. Use <COMMAND>chkconfig</COMMAND> to turn off the <VARIABLE>visuallogin</VARIABLE> and <VARIABLE>xdm</VARIABLE> configuration variables. See <DOCTITLE></DOCTITLE>
<EXTREF IDREF="97829" BOOK="IA_ConfigOps" FILE="" HDG="97829" INFO="">IRIX Admin: System Configuration and Operation</EXTREF>
<DOCTITLE></DOCTITLE> and the <REFPAGE>visuallogin(4)</REFPAGE> reference page for information about turning the visual login process on and off. You may also use <COMMAND>chkconfig</COMMAND> to set the <VARIABLE>noiconlogin</VARIABLE> variable to disallow logging in using the user icons in <COMMAND>clogin</COMMAND>.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Restricting root Logins <INDEXTARGET ID="ch427"><!-- POSTPROCESSDATA: ch427|login:restricting root --></TITLE><PARAGRAPH>You can restrict <ITALICS>root</ITALICS> logins to a single device, forcing <ITALICS>root</ITALICS> users to either use that device or use the <COMMAND>su</COMMAND> command (thereby leaving a trail in <FILENAME>/var/adm/sulog</FILENAME>). For example, edit <FILENAME>/etc/default/login</FILENAME> to include the following line to restrict root logins to the system console:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>CONSOLE=/dev/console</USERINPUT>
</EXAMPLE>
<NOTE><PREFIX>Note</PREFIX>Do not name <FILENAME>/dev/syscon</FILENAME> or <FILENAME>/dev/systty</FILENAME> as the device! These devices are the same as <FILENAME>/dev/console</FILENAME>, but login software does not treat them alike.</NOTE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Restricting Login Attempts (MAXTRYS)<INDEXTARGET ID="ch428"><!-- POSTPROCESSDATA: ch428|login:maximum attempts --></TITLE><PARAGRAPH>MAXTRYS is the number of times a login attempt can fail before retracting the login. Setting this parameter slows attempts by unauthorized persons to break into a system.&nbsp; A common method of breaking into a system is to try to guess the password of a known account. This method is most successful if the person trying to break in knows the names of as many accounts as possible, and can make guesses very quickly. If you introduce a delay in the login process after a certain number of failed login attempts on the same <VARIABLE>tty</VARIABLE> line, you can make it much more time-consuming to guess a password correctly.</PARAGRAPH>
<PARAGRAPH>To set the maximum number of login attempts, edit the file <FILENAME>/etc/default/login</FILENAME>. Place a line like this in the file: </PARAGRAPH>
<CODE>
<USERINPUT>MAXTRYS=4</USERINPUT>&space;
</CODE>
<PARAGRAPH>This sets the maximum number of login attempts to four (the system default, without this option set, is three).</PARAGRAPH>
<PARAGRAPH>When the maximum number of login attempts is exceeded, the <COMMAND>login</COMMAND> program sleeps for a certain number of seconds (the DISABLETIME variable described in the next section), thus preventing further login attempts on that line for a while. The system default delay (DISABLETIME) is 20 seconds. This example login attempt was disabled after three tries:</PARAGRAPH>
<CODE>
login: <USERINPUT>guest</USERINPUT>
password:
Login incorrect
login: <USERINPUT>guest</USERINPUT>
password:
Login incorrect
login: <USERINPUT>guest</USERINPUT>
password:
Login incorrect
</CODE>
<PARAGRAPH>At this point, no further login prompts are displayed until the period of time specified by DISABLETIME has passed.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Setting a Time Period to Disable a Line (DISABLETIME) <INDEXTARGET ID="ch429"><!-- POSTPROCESSDATA: ch429|login:disable time --></TITLE><PARAGRAPH>Use this option together with the MAXTRYS option. To set the number of seconds after which a certain number of unsuccessful login attempts a line is disabled, edit the file <FILENAME>/etc/default/login</FILENAME> and add a line like this:</PARAGRAPH>
<CODE>
<USERINPUT>DISABLETIME=30</USERINPUT>&space;
</CODE>
<PARAGRAPH>This disables a line for 30 seconds. You can choose any value you consider appropriate for your system. The system default is 20 seconds.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Recording Login Attempts <INDEXTARGET ID="ch430"><!-- POSTPROCESSDATA: ch430|login:recording --></TITLE><PARAGRAPH>Both successful and unsuccessful login attempts are usually recorded in the file <FILENAME>/var/adm/SYSLOG</FILENAME>. The default setting, which causes the system to record all attempts to log in, even successful ones, is this line in the file <FILENAME>/etc/default/login</FILENAME>:</PARAGRAPH>
<CODE>
<USERINPUT>SYSLOG=ALL</USERINPUT>&space;
</CODE>
<PARAGRAPH>To record only unsuccessful login attempts, replace that line with this line:</PARAGRAPH>
<CODE>
<USERINPUT>SYSLOG=FAIL</USERINPUT>&space;
</CODE>
<PARAGRAPH>A large number of failed logins, especially with the same account name, may indicate that someone is trying to break into that account and thus into the system. Security event auditing could help here; see <XREF IDREF="65846" TYPE="TITLE">Chapter&nbsp;6, &ldquo;Administering the System Audit Trail.&rdquo;</XREF></PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Forcing a Password </TITLE><PARAGRAPH>To force users without account passwords to choose their passwords immediately, add this line to the file <INDEXTARGET ID="ch431"><!-- POSTPROCESSDATA: ch431|user accounts:forcing a password --><INDEXTARGET ID="ch432"><!-- POSTPROCESSDATA: ch432|password:forcing --><FILENAME>/etc/default/login</FILENAME>:</PARAGRAPH>
<CODE>
<USERINPUT>PASSREQ</USERINPUT>
</CODE>
<PARAGRAPH>Or instead, insert the following entry to prevent users from logging in if they do not already have a password:</PARAGRAPH>
<CODE>
<USERINPUT>MANDPASS=YES</USERINPUT>
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Disabling Accounts (LOCKOUT)</TITLE><PARAGRAPH>LOCKOUT specifies the number of consecutive unsuccessful login attempts by a user after which the account is locked with <COMMAND>passwd</COMMAND>&space;<CMDLINEOPT>-l</CMDLINEOPT>&space;<VARIABLE>username</VARIABLE>. (See <XREF IDREF="68670" TYPE="TITLE">&ldquo;Locking Unused Logins&rdquo;</XREF> for information about account locking.)</PARAGRAPH>
<PARAGRAPH>If you set the LOCKOUT option, it is best to exempt at least the <ITALICS>root</ITALICS> account with the LOCKOUTEXEMPT option to prevent denial of service attacks; see <REFPAGE>login(1)</REFPAGE>.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Displaying the Last Login Time </TITLE><PARAGRAPH>Users can help maintain system security by noticing unauthorized use of their accounts. By default, the most recent login date, time, and the name of the terminal line (<VARIABLE>tty</VARIABLE> name) or remote host from which the user logged in is displayed on login. This login attempt information is recorded in files, one per user account and with the same name as the account, in the directory <FILENAME>/var/adm/lastlog</FILENAME>. </PARAGRAPH>
<PARAGRAPH>Users can stop the last login information from being displayed by having a <FILENAME>.hushlogin</FILENAME> file in their home directory, but they should be discouraged from doing so. Remind them periodically to look at the information each time they log in for any unusual information.</PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="43095">About Set-UID and Set-GID Permissions</TITLE><PARAGRAPH>The set user identification (set-UID) and set group identification (set-GID) permissions must be used very carefully. When a user runs an executable file that has either of these permissions, the system gives the user the permissions of the owner of the executable file. You can add these permissions to any executable file with the <REFPAGE>chmod(1)</REFPAGE> command.</PARAGRAPH>
<PARAGRAPH>Set-UID and set-GID programs have legitimate uses, but because they are potentially harmful, there should be very few of them on your system. Beware of programs in publicly writable directories (such as <FILENAME>/tmp</FILENAME>, <FILENAME>/usr/tmp.O</FILENAME>, <FILENAME>/var/tmp</FILENAME>, and <FILENAME>/usr/spool/uucppublic</FILENAME>) that have the same name as common systems files (such as <COMMAND>vi</COMMAND> and <COMMAND>rm</COMMAND>). One reason the PATH environment variable of the <ITALICS>root</ITALICS> account does not include the current directory (as does the default PATH of most other users) is so that <ITALICS>root</ITALICS> won't accidentally execute such &ldquo;booby-trap&rdquo; programs.</PARAGRAPH>
<PARAGRAPH>System security can be compromised if a user copies another program onto a file with <SCREENDISPLAY>-rwsrwxrwx </SCREENDISPLAY>permissions. To take an extreme example, if the <COMMAND>su</COMMAND> command has the write access permission allowed for others, anyone can copy the shell onto it and get a password-free version of <COMMAND>su</COMMAND>.</PARAGRAPH>
<PARAGRAPH>The following sections provide some example commands that identify files on the system with set-UID permissions. For more information about the set-UID and set-GID bits, see the <REFPAGE>chmod(1)</REFPAGE> and <REFPAGE>chmod(2)</REFPAGE> reference pages.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Checking for Set-UID Files Owned by root</TITLE><PARAGRAPH>The following command line lists all set-UID files owned specifically by <ITALICS>root</ITALICS>:</PARAGRAPH>
<CODE>
<USERINPUT>find / -user root -perm -4000 -print</USERINPUT>
</CODE>
<PARAGRAPH>The results of this command are printed on the screen. All paths are checked starting at /, including all mounted directories. A great number of files will be found. It is up to you to scan these files for any unusual names. One possibility is to direct the output of this program to a file soon after installation and compare the results with later outputs. If this command reports any unusual files, investigate them immediately. </PARAGRAPH>
<PARAGRAPH>A suspicious file might turn up like this:</PARAGRAPH>
<CODE>
-r-sr-xr-x 1 root  bin   38836 Aug 10 16:16 /usr/bin/at 
-r-sr-xr-x 1 root  bin   19812 Aug 10 16:16 /usr/bin/crontab 
-r-sr-xr-x 1 root  bin   27748 Aug 10 16:16 /usr/bin/shl 
---s--x--x 1 root  sys   46040 Aug 10 15:18 /usr/bin/ct 
-r-sr-sr-x 1 root  bin   33208 Aug 10 15:55 /usr/lib/lpadmin 
-r-sr-sr-x 1 root  bin   38696 Aug 10 15:55 /usr/lib/lpsched 
---s--x--- 1 root  user  45376 Aug 18 15:11 /usr/jbond/bin/sh 
-r-sr-xr-x 1 root  sys   11416 Aug 11 01:26 /bin/mkdir 
-r-sr-xr-x 1 root  sys   11804 Aug 11 01:26 /bin/rmdir 
-r-sr-xr-x 1 root  bin   12524 Aug 11 01:27 /bin/df 
-rwsr-xr-x 1 root  sys   21780 Aug 11 01:27 /bin/newgrp 
-r-sr-sr-x 1 root  sys   23000 Aug 11 01:27 /bin/passwd 
-r-sr-xr-x 1 root  sys   23824 Aug 11 01:27 /bin/su 
</CODE>
<PARAGRAPH>In this example, the user <ITALICS>jbond</ITALICS> has a personal copy of <FILENAME>/bin/sh</FILENAME> and has made it set-UID to <ITALICS>root</ITALICS>. This means that anyone in the group <FILENAME>user</FILENAME> can execute <FILENAME>/usr/jbond/bin/sh</FILENAME> and become the superuser.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Checking for Set-UIDs in the root Filesystem</TITLE><PARAGRAPH>The following command line reports all files with a set-UID for the <ITALICS>root</ITALICS> filesystem (not just those owned by <ITALICS>root</ITALICS>) on EFS filesystems:&space;<INDEXTARGET ID="ch433"><!-- POSTPROCESSDATA: ch433|<ITALICS>ncheck</ITALICS> command --><INDEXTARGET ID="ch434"><!-- POSTPROCESSDATA: ch434|Set-UID --><INDEXTARGET ID="ch435"><!-- POSTPROCESSDATA: ch435|Set-GID --></PARAGRAPH>
<CODE>
<USERINPUT>ncheck -s /dev/root | xargs ls -ld | cut -f2 | grep -v ~/dev/</USERINPUT>&space;
<USERINPUT>ls -l `/etc/ncheck -s /dev/root | cut -f2 | grep -v dev`</USERINPUT>&space;
</CODE>
<PARAGRAPH>The <REFPAGE>ncheck(1M)</REFPAGE> command, by itself, can be used on a mounted or unmounted file system. Only the superuser may use <COMMAND>ncheck</COMMAND>. The normal output of the <COMMAND>ncheck -s</COMMAND> command includes special files. Here, the <COMMAND>grep</COMMAND> command removes device files from the output. This filtering is applicable only for the <ITALICS>root</ITALICS> filesystem. The output of the modified <COMMAND>ncheck</COMMAND> is then used as an argument to the <COMMAND>ls</COMMAND> command. The filesystem must be mounted for the <COMMAND>ls</COMMAND> command to succeed. In this example output, nothing looks suspicious:</PARAGRAPH>
<CODE>
-r-sr-xr-x  1 root   bin    12524   Aug 11 01:27 /bin/df 
-rwxr-sr-x  1 root   sys    32272   Aug 10 15:53 /bin/ipcs 
-r-xr-sr-x  2 bin    mail   32852   Aug 11 01:28 /bin/mail 
-r-sr-xr-x  1 root   sys    11416   Aug 11 01:26 /bin/mkdir 
-rwsr-xr-x  1 root   sys    21780   Aug 11 01:27 /bin/newgrp 
-r-sr-sr-x  1 root   sys    23000   Aug 11 01:27 /bin/passwd 
-r-xr-sr-x  1 bin    sys    27964   Aug 11 01:28 /bin/ps 
-r-xr-sr-x  2 bin    mail   32852   Aug 11 01:28 /bin/rmail 
-r-sr-xr-x  1 root   sys    11804   Aug 11 01:26 /bin/rmdir 
-r-sr-xr-x  1 root   sys    23824   Aug 11 01:27 /bin/su 
-r-xr-sr-x  1 bin    sys    21212   Aug 10 16:08 /etc/whodo 
</CODE>
<PARAGRAPH>For XFS filesystems, use the <COMMAND>find</COMMAND> command:</PARAGRAPH>
<CODE>
<USERINPUT>find / -perm -4000 -print</USERINPUT>
</CODE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Checking Set-UIDs in Filesystems Other Than root</TITLE><PARAGRAPH>This example uses the <COMMAND>ncheck</COMMAND> command to examine the <FILENAME>/home </FILENAME>partition (<FILENAME>/dev/dsk/dks0d2s7</FILENAME> in this example) for files that have set-UID permissions:</PARAGRAPH>
<CODE>
<USERINPUT>/etc/ncheck -s /dev/dsk/dks0d2s7 | cut -f2</USERINPUT>&space;
</CODE>
<PARAGRAPH>In this output below, the i-node number is given with complete pathnames for files, which start with<FILENAME>&space;/home</FILENAME>, although <FILENAME>/home</FILENAME> is not part of the <COMMAND>ncheck</COMMAND> output. </PARAGRAPH>
<CODE>
/dev/dsk/dks0d2s7:
3971    /jbond/bin/sh
</CODE>
<PARAGRAPH>In the <COMMAND>ncheck</COMMAND> output, the program <FILENAME>/home/jbond/bin/sh</FILENAME> should be investigated. This program is not found in a system directory. It is a command shell residing in a user's home directory. Users should, in general, not possess set-UID binaries.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="48436">About General File and Directory Permissions</TITLE><PARAGRAPH>Be conservative when establishing or changing permission bit settings on all files and directories. The safest settings do not allow write access, but where this is not possible, it may be possible to limit write access to the owner of the file or directory, or at least just to the owner and the group.</PARAGRAPH>
<PARAGRAPH>The following files and directories are universally available for read and write access on IRIX as shipped. Depending on your site requirements, you may wish to change the permissions on these files to be more restrictive. See the <REFPAGE>chmod(1)</REFPAGE> reference page for a discussion on setting the sticky bit on such directories as <FILENAME>/tmp</FILENAME> (this is the IRIX default) to restrict removal and renaming of files.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><FILENAME>/tmp</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/demos/.xsession</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/Insight/tmp</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/Insight/tmp/ebtpriv</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/Insight/tmp/ebtpub</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/Insight/tmp/install.insight.log</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/lib/emacs/maclib</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/lib/showcase/fonts</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/lib/showcase/images</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/lib/showcase/models</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/lib/showcase/templates</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/usr/tmp.O</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/var/spool/locks</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/var/spool/uucppublic</FILENAME>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><FILENAME>/var/tmp</FILENAME>&space;</PARAGRAPH>
</BULLET>
</BULLETLIST>
<CAUTION><PREFIX>Caution</PREFIX>Restricting permissions on historically open directories, such as <FILENAME>/tmp</FILENAME>, <FILENAME>/usr/tmp.O</FILENAME>, and /<FILENAME>var/tmp</FILENAME> (linked to <FILENAME>/usr/tmp</FILENAME>), can cause serious malfunctions in many programs, applications, and system utilities that write temporary files on behalf of users in these directories.</CAUTION>
<PARAGRAPH>Systems should not be running the <COMMAND>rfindd </COMMAND>daemon, because it allows external access to file, directory, and permissions listings. See <REFPAGE>rfindd(1M)</REFPAGE> for more information.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="72006">Accounts Shipped Without Passwords</TITLE><PARAGRAPH>The following accounts in your default <FILENAME>/etc/passwd</FILENAME> file are shipped without passwords. You should create passwords for at least the root account immediately.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>root&mdash;Superuser</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>lp&mdash;Print Spooler Owner</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>nuucp&mdash;Remote UUCP User</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>EZsetup&mdash;System Setup</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>demos&mdash;Demonstration User</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>OutOfBox&mdash;Out of Box Experience</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>guest&mdash;Guest Account</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>4Dgifts&mdash;4Dgifts Account</PARAGRAPH>
</BULLET>
</BULLETLIST>
<CAUTION><PREFIX>Caution</PREFIX>Creating passwords on historically open accounts, such as <COMMAND>lp</COMMAND>, may cause certain related applications or operations to fail.</CAUTION>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="13168">Security File and Command Reference</TITLE><PARAGRAPH>This section summarizes in two tables some IRIX files and commands that establish and control security. <XREF IDREF="57813" TYPE="TABLE">Table&nbsp;4-2</XREF> lists the IRIX files concerned with security and <XREF IDREF="32835" TYPE="TABLE">Table&nbsp;4-3</XREF> lists security-related commands.</PARAGRAPH>
<TABLE COLUMNS="3"><CAPTION LBL="4-2"><PREFIX>Table 4-2 </PREFIX><XREFTARGET ID="57813"> <EMPHASIS>(continued)        </EMPHASIS>IRIX Security Files</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="110"><PARAGRAPH>File</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Purpose</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH>Reference</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><FILENAME>/etc/default/login</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Control login actions</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>login(1)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><FILENAME>/etc/default/su</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Define <COMMAND>su</COMMAND> command 
defaults</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>su(1M)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><FILENAME>/etc/passwd</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Store password and 
account information</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>passwd(1)</REFPAGE>, <REFPAGE>passwd(4)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><FILENAME>/etc/shadow</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Hide password 
information</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>shadow(4)</REFPAGE>, <REFPAGE>pwconv(1M)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><FILENAME>/var/adm/sulog</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Log <COMMAND>su</COMMAND> command usage</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>su(1M)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><FILENAME>/var/adm/SYSLOG</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Log system messages</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>syslogd(1M)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<TABLE COLUMNS="3"><CAPTION LBL="4-3"><PREFIX>Table 4-3 </PREFIX><XREFTARGET ID="32835"> <EMPHASIS>(continued)        </EMPHASIS>IRIX Security Commands</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="110"><PARAGRAPH>Command Example</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Purpose</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH>Reference</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>arp -a</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Display current ARP 
entries</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>arp(1M)</REFPAGE>, <REFPAGE>arp(7P)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>crypt </USERINPUT>
<VARIABLE></VARIABLE><VARIABLE>password</VARIABLE></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Encode/decode 
input/output</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>crypt(1)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>last</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Indicate last logins of 
users and terminals</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>last(1)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>ncheck</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Generate pathnames from 
i-numbers</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>ncheck(1M)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>passwd</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Change password</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>passwd(1)</REFPAGE>, <REFPAGE>passwd(4)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>ps -elf</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Display a full, long list of 
every process currently 
running</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>ps(1)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>pwck</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Report inconsistencies in 
<FILENAME>/etc/passwd</FILENAME> file</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>pwck(1M)</REFPAGE>, <REFPAGE>passwd(4)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>sar</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>System activity reporter</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>sar(1)</REFPAGE>, <REFPAGE>sadc(1M)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>satd</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Reliably save the system 
audit trail</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>satd(1M)</REFPAGE> and <XREF IDREF="13988" TYPE="TITLE">&ldquo;Placing the 
Audit Files&rdquo;</XREF></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>vi -x</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Edit encrypted file</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>vi(1)</REFPAGE>, <REFPAGE>crypt(1)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>w</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Display users logged in 
with current activity</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>w(1)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="110"><PARAGRAPH><USERINPUT>who</USERINPUT></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="110"><PARAGRAPH>Display users logged in, 
their tty, and time of login</PARAGRAPH>
</CELL>
<CELL LEFT="230" WIDTH="110"><PARAGRAPH><REFPAGE>who(1)</REFPAGE></PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="98181">Enhanced Security Features</TITLE><PARAGRAPH>IRIX 6.5 and later include enhanced security features from Commercial Security Pak, namely access control lists (ACLs) and least-privilege capabilities.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Access Control Lists (ACLs)<INDEXTARGET ID="ch436"><!-- POSTPROCESSDATA: ch436|Access Control Lists --><INDEXTARGET ID="ch437"><!-- POSTPROCESSDATA: ch437|acl --></TITLE><PARAGRAPH>An ACL works in the same way as standard file permissions, but it allows you to get a finer level of control over who may access the file or directory than standard permissions allow. ACLs allow you to specify file permissions on a user-by-user basis.</PARAGRAPH>
<PARAGRAPH>Every system file or directory has an Access Control List that governs its discretionary access. This ACL is referred to as the access ACL for the file or directory. In addition, a directory may have an associated ACL that governs the initial access for files and subdirectories created within that directory. This ACL is referred to as a default ACL. A user who wishes to gain access to the files in a directory must be on both ACLs and must be allowed by IRIX file permissions to successfully gain access. If you have not created an access ACL for a file, the default ACL serves both ACL functions.</PARAGRAPH>
<PARAGRAPH>Hereafter in this section, directories are treated as files, and where the term file is used, consider that it also applies to directories. </PARAGRAPH>
<PARAGRAPH>An ACL is stored in the same way that standard file permissions are stored; as an attribute of the file or directory. To view the ACL of a file, use the <CMDLINEOPT>-D</CMDLINEOPT> option to <REFPAGE>ls(1)</REFPAGE> as shown in this example:<INDEXTARGET ID="ch438"><!-- POSTPROCESSDATA: ch438|acl: ls option --></PARAGRAPH>
<EXAMPLE>
<USERINPUT>ls -D</USERINPUT>&space;<FILENAME>/usr/people/ernie/testfile</FILENAME>&space;
</EXAMPLE>
<PARAGRAPH>The command above produces output similar to this:</PARAGRAPH>
<EXAMPLE>
testfile [user::rwx ,user:332:r--,user:ernie:rw-] 
</EXAMPLE>
<PARAGRAPH>This example shows full permissions for the owner with the first entry on the line, sets read permission for user ID 332 with the second entry, and sets read/write permission for the user account ernie. The specific format of an ACL entry is discussed in the section titled <XREF IDREF="79093" TYPE="TITLE">&ldquo;Long ACL Text Form.&rdquo;</XREF></PARAGRAPH>
<PARAGRAPH>To set or change an ACL, use the <REFPAGE>chacl(1)</REFPAGE> command:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>chacl</USERINPUT>&space;<VARIABLE>acl_entry</VARIABLE>[,<VARIABLE>acl_entry</VARIABLE>]...
</EXAMPLE>
<PARAGRAPH>An ACL consists of a set of ACL entries separated by commas. An ACL entry specifies the access permissions on the associated file for an individual user or a group of users. The order of internal storage of entries within an ACL does not affect the order of evaluation. To read an ACL from an object, a process must have read access to the file.To create or change an ACL, the process must own the file. </PARAGRAPH>
<PARAGRAPH>ACLs have long and short text forms. The long text form is defined first in order to give a complete specification with no exceptions. The short text form is defined afterwards because it is specified relative to the long text form.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="79093"><XREFTARGET ID="83037">Long ACL Text Form</TITLE><PARAGRAPH>The long text form is used for either input or output of ACLs and is set up as follows:</PARAGRAPH>
<EXAMPLE>
<VARIABLE>acl_entry</VARIABLE>[,<VARIABLE>acl_entry</VARIABLE>]...
</EXAMPLE>
<PARAGRAPH>Though it is acceptable to place more than one entry on a physical line in a file, placing only one entry per line improves readability. </PARAGRAPH>
<PARAGRAPH>Each entry contains one ACL statement with three required colon-separated fields and an optional comment:</PARAGRAPH>
<EXAMPLE>
<VARIABLE>entry tag type</VARIABLE>:<VARIABLE>entry qualifier</VARIABLE>:<VARIABLE>discretionary access permissions</VARIABLE>#<VARIABLE>comment</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>Comments may be included with any entry. If a comment starts at the beginning of a line, then the entire line is interpreted as a comment. The first field must always contain the ACL entry tag type.</PARAGRAPH>
<PARAGRAPH>One of the following ACL entry tag type keywords must appear in the first field:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><VARIABLE>user</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Access granted to either the file owner or to a specified user account.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>group</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Access granted to either the file owning user group or to a specified user group.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>other</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Access granted to any process that does not match any user, group, or implementation-defined ACL entries.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>mask</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Maximum access that can be granted by any ACL entry except the <ITALICS>user</ITALICS> entry for the file owner and the <VARIABLE>other</VARIABLE> entry.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The second field contains the ACL entry qualifier (referred to in the remainder of this section as simply <ITALICS>qualifier</ITALICS>). The following qualifiers are defined by default:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><VARIABLE>uid</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>User account name or a user ID number.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>gid</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>User group name or a group ID number.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>empty</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>No <VARIABLE>uid</VARIABLE> or <VARIABLE>gid</VARIABLE> information is to be applied to the ACL entry. The entry applies to the file owner only. An empty qualifier is represented by an empty string or by white space.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The third field contains the discretionary access permissions that are to apply to the user or group specified in the first field. The discretionary access permissions field must contain exactly one each of the following characters in the following order:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>&space;r</HANGITEM>
<HANGBODY><PARAGRAPH>Read access. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>w</HANGITEM>
<HANGBODY><PARAGRAPH>Write access. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>x</HANGITEM>
<HANGBODY><PARAGRAPH>Execute access. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>Any or all of these may be replaced by the no-access dash(&ndash;). </PARAGRAPH>
<PARAGRAPH>A user entry with an empty qualifier specifies the access granted to the file owner. A user entry with a <VARIABLE>uid</VARIABLE> qualifier specifies the access permissions granted to the user name matching the <VARIABLE>uid</VARIABLE> value. If the <VARIABLE>uid</VARIABLE> value does not match a user name, then the ACL entry specifies the access permissions granted to the user ID matching the <VARIABLE>uid</VARIABLE> value.</PARAGRAPH>
<PARAGRAPH>A group entry with an empty qualifier specifies the access granted to the default user group of the file owner. A group entry with a <VARIABLE>gid</VARIABLE> qualifier specifies the access permissions granted to the group name matching the <VARIABLE>gid</VARIABLE> value. If the <VARIABLE>gid</VARIABLE> value does not match a group name, then the ACL entry specifies the access permissions granted to the group ID matching the <VARIABLE>gid</VARIABLE> value. The <VARIABLE>umask</VARIABLE> and other entries contain an empty qualifier. A crosshatch (#) starts a comment on an ACL entry. A comment may start at the beginning of a line, or after the required fields and after any custom-defined, colon-separated fields. The end of the line denotes the end of the comment. </PARAGRAPH>
<PARAGRAPH>If an ACL entry contains permissions that are not also contained in the <VARIABLE>umask</VARIABLE> entry, then the output text form for that entry must be displayed as described above followed by a crosshatch (#), the string &ldquo;effective:&ldquo; and the effective file access permissions for that ACL entry. </PARAGRAPH>
<PARAGRAPH>White space is permitted (but not required) in the entries as follows: </PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>at the start of the line</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>immediately before and after a colon (:) separator</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>immediately before the first crosshatch (#) comment character</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>at any point after the first crosshatch (#) comment character </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Comments have no effect on the discretionary access check of the object with which they are associated. </PARAGRAPH>
<PARAGRAPH>Here is an example of a correct long text form ACL for a file:</PARAGRAPH>
<CODE>
user::rwx,user:332:r--,user:ernie:rw- 
</CODE>
<PARAGRAPH>The above example sets full permissions for the owner with the first entry on the line, sets read permission for user ID 332 with the second entry, and sets read/write permission for the user account ernie. </PARAGRAPH>
<PARAGRAPH>Here are some examples with comments:</PARAGRAPH>
<CODE>
group:10:rw-# User Group 10 has read/write access
other::---# No one else has any permission
mask::rw-# The maximum permission except for the owner is read/write
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Short ACL Text Form</TITLE><PARAGRAPH>The short text form is used by the <INDEXTARGET ID="ch439"><!-- POSTPROCESSDATA: ch439|chacl command --><REFPAGE>chacl(1)</REFPAGE> command for input of ACLs, and is set up as follows:</PARAGRAPH>
<EXAMPLE>
<VARIABLE>acl_entry</VARIABLE>[,<VARIABLE>acl_entry</VARIABLE>]...
</EXAMPLE>
<PARAGRAPH>Though it is acceptable to place more than one entry on a physical line in a file, placing only one entry per line improves readability. </PARAGRAPH>
<PARAGRAPH>Each command line contains one ACL entry, with the exception that the ACL entry tag type keyword must appear in the first field in either its full unabbreviated form or its single-letter abbreviated form.</PARAGRAPH>
<PARAGRAPH>The abbreviation for user is <VARIABLE>u</VARIABLE>, the abbreviation for group is <VARIABLE>g</VARIABLE>. The abbreviation for other is <VARIABLE>o</VARIABLE>, and the abbreviation for mask is <VARIABLE>m</VARIABLE>.</PARAGRAPH>
<PARAGRAPH>There are no exceptions for the second field in the short text form for ACLs. The discretionary access permissions must appear in the third field in either absolute symbolic form or relative symbolic form.</PARAGRAPH>
<PARAGRAPH>The relative symbolic form must be preceded by a plus sign (+) to indicate additional access or a caret (^) to indicate that access is to be removed. The relative symbolic string must be at least one character.</PARAGRAPH>
<PARAGRAPH>The symbolic string contains at most one each of the following characters in any order: </PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>r </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>w </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>x </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>For example, the short form should look very similar to the following:</PARAGRAPH>
<CODE>
u: :rwx # The file owner has complete access
u:332:+r # User Acct 332 has read access only
g:10:rw- # User Group 10 has read/write access
u:653:^w # User Acct 653 (who is in group 10) has read access only
o::--- # No one else has any permission
m::rw- # The maximum permission except for the owner is read/write
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Using ls -D and chacl</TITLE><PARAGRAPH>You can use the output from the <INDEXTARGET ID="ch440"><!-- POSTPROCESSDATA: ch440|ls -d option --><COMMAND>ls -D</COMMAND> command as the input to <COMMAND>chacl</COMMAND>. This is convenient for situations where you wish to duplicate a complex custom ACL onto a new file in a directory that does not use the complex ACL as the default. Consider this example:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>ls -dD </USERINPUT><VARIABLE>testdir</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>The command given above produces the following output:</PARAGRAPH>
<EXAMPLE>
testdir [u::rwx,g::r-x,o::--x/u::rwx,g::r-x,o::---]
</EXAMPLE>
<PARAGRAPH>Create a new directory (it doesn't matter where) with this command:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>mkdir</USERINPUT>&space;<VARIABLE>newdir</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>Then use the following command to edit and copy the ACL (give this command all on one line):</PARAGRAPH>
<EXAMPLE>
<USERINPUT>chacl -b &grave;ls -dD </USERINPUT><VARIABLE>testdir </VARIABLE><USERINPUT>| cut -d"[" -f2 | cut -d"/" -f1&grave;&grave;ls -dD </USERINPUT><VARIABLE>testdir</VARIABLE><USERINPUT>&space;| cut -d"[" -f2 |  cut -d"/" -f2 | cut -d"]" -f1&grave;</USERINPUT><VARIABLE>newdir</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>The ACL from <FILENAME>testdir</FILENAME> will be replicated in <FILENAME>newdir</FILENAME>. Note that the <COMMAND>cut</COMMAND> command is used within the above command line. For complete information on the correct use of <COMMAND>cut</COMMAND> in any command line, see the <REFPAGE>cut(1)</REFPAGE> reference page. After giving the above command, an ACL listing of <FILENAME>newdir</FILENAME> shows that the ACL from <FILENAME>testdir</FILENAME> has been duplicated:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>ls -dD </USERINPUT><VARIABLE>newdir</VARIABLE>&space;
newdir [u::rwx,g::r-x,o::--x/u::rwx,g::r-x,o::---] 
</EXAMPLE>
<PARAGRAPH>Note that the cut and paste functions of the window manager can also be used to duplicate ACL entries from<COMMAND>&space;ls -D</COMMAND> to <COMMAND>chacl</COMMAND>.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Least-Privilege Capabilities<INDEXTARGET ID="ch441"><!-- POSTPROCESSDATA: ch441|Capabilities --></TITLE><PARAGRAPH>Capabilities are privileges assigned to specific accounts to allow those accounts to perform operations formerly reserved to the Superuser. To maintain the principle of least privilege, the capabilities of the Superuser account can be subdivided into various capabilities, which can be assigned to separate individual accounts. The corresponding capability is placed on sensitive executable files and programs on your system. Account capability and executable capability must be compatible for the user to execute the program. For a more technical discussion, see the <REFPAGE>capabilities(4)</REFPAGE> reference page.</PARAGRAPH>
<PARAGRAPH>The fundamental purpose of capabilities is to allow you to perform administration tasks from standard login accounts without requiring the use of Superuser or other privileged accounts. A capability endorsement may be granted to any user account, and a corresponding capability requirement attached to only those system objects that the owner of the endorsed account has a legitimate need to use. This follows the trusted systems principle of least privilege&mdash;using the lowest possible promotion of privileges necessary to get the job done. Capabilities implement least privilege both by limiting the number of users privileged to perform various tasks and by limiting the privilege to just one program, or section of code within, necessary to perform the proper action. </PARAGRAPH>
<PARAGRAPH>It is usually inappropriate to grant capabilities to ordinary users of the system. Should you decide to do so, remember the principle of least privilege: A user should have only those capabilities for which a need can be demonstrated and no others.</PARAGRAPH>
<PARAGRAPH>Capabilities provide fine-grained control over the privileges of a process. A process can be granted specific capabilities to perform privileged system calls, but not be granted general override of the system's protection scheme as is the case with a setuid <ITALICS>root</ITALICS> program. The IRIX capability mechanism is designed to comply with Draft 15 of the POSIX P1003.1e Draft 15 specification.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>The /etc/capability File<INDEXTARGET ID="ch442"><!-- POSTPROCESSDATA: ch442|/etc/capability file --></TITLE><PARAGRAPH>The file <FILENAME>/etc/capability</FILENAME> is the database of capabilities for user accounts. Here is an example:</PARAGRAPH>
<CODE>
root:all+eip:all+eip 
auditor:CAP_AUDIT_WRITE,CAP_AUDIT_CONTROL,CAP_KILL+eip 
ernie:all=:CAP_FOWNER,CAP_SETFCAP+eip 
casey:all=:all+eip # We trust Casey. 
jeff:all+eip CAP_NETWORK_MGT-eip:all+eip 
fred:all=:all= 
</CODE>
<PARAGRAPH>Each entry consists of up to three colon-separated fields, as follows:</PARAGRAPH>
<EXAMPLE>
username : default_capability : maximum_capability 
</EXAMPLE>
<BULLETLIST><BULLET><PARAGRAPH>The username is the user's login name. This must be exactly the same as that found in the <FILENAME>/etc/passwd</FILENAME> file.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The default capability set is applied at login time to the user's shell process. A user may request additional capabilities at login time. If capabilities not present in this entry are requested at login time, the login attempt will fail.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The maximum capability field describes all those capabilities that may be requested and received by the user's processes. </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The default and maximum capability fields are of the following form:</PARAGRAPH>
<EXAMPLE>
<ITALICS>capname</ITALICS>,<ITALICS>capname</ITALICS>&space;<ITALICS>operator</ITALICS>&space;<ITALICS>flags</ITALICS>&space;
</EXAMPLE>
<PARAGRAPH>The <VARIABLE>capname</VARIABLE> element(s) are taken from the list of capabilities supplied in the section titled <XREF IDREF="22786" TYPE="TITLE">&ldquo;Capabilities in This Release.&rdquo;</XREF></PARAGRAPH>
<PARAGRAPH>The <VARIABLE>operator</VARIABLE> can be any one of the following:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>+</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Add this capability (or list of capabilities) to the following sets. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>&space;-</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Delete this capability (or list of capabilities) to the following sets. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>=</CMDLINEOPT></HANGITEM>
<HANGBODY><PARAGRAPH>Revoke this capability (or list of capabilities) for the duration of this process for the following sets.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The <VARIABLE>flags</VARIABLE> that represent the capability sets are one or more of the following:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>&space;i</HANGITEM>
<HANGBODY><PARAGRAPH>Inheritable set of capabilities: the capabilities that can be passed to child processes.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>e</HANGITEM>
<HANGBODY><PARAGRAPH>Effective set of capabilities: the capabilities currently active.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>p</HANGITEM>
<HANGBODY><PARAGRAPH>Permitted set of capabilities: the maximum set of capabilities for the process.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>Each field contains a list of clauses. Each clause is a space-separated list of capabilities and an operator/set statement. All characters after # to the end of the entry line are interpreted as comments and are ignored. The clauses are interpreted sequentially, as read (left to right). This means that the last operation specified for a capability within an entry is the one that counts. </PARAGRAPH>
<PARAGRAPH>Now look at the sample <FILENAME>/etc/capability</FILENAME> file again:</PARAGRAPH>
<CODE>
root:all+eip:all+eip 
auditor:CAP_AUDIT_WRITE,CAP_AUDIT_CONTROL,CAP_KILL+eip: 
ernie:all=:CAP_FOWNER,CAP_SETFCAP+eip 
casey:all=:all+eip # We trust Casey. 
jeff:all+eip CAP_NETWORK_MGT-eip:all+eip 
fred:all=:all= 
</CODE>
<PARAGRAPH>In this sample file, note the following:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The <ITALICS>root</ITALICS> account has all capabilities added by default with all flags. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The auditor account has only those capabilities necessary to manage the system audit trail, and the capability to kill processes. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The ernie account has no default capabilities, but if necessary can acquire the capabilities to work on other people's files and set capability requirements for executable files. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The casey account has no default capabilities, but can acquire full capabilities if necessary. There is also a comment to that effect.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The jeff account has a default set of full capabilities, modified by a subsequent clause to delete the network management capability. However, Jeff can request a full capability set if needed.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The fred account has no capabilities, nor can Fred request any. </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Every running process has three capability sets: <ITALICS>effective</ITALICS>, <ITALICS>permitted</ITALICS>, and <ITALICS>inheritable</ITALICS>.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The effective set is used in access control decisions for that process. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The inheritable set is used in the calculation of new capability sets during <REFPAGE>exec(2)</REFPAGE> processing, when a user invokes an executable file. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The permitted set is the maximum set of capabilities that the process may attain. </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Each executable file has the same three capability sets as well. These sets influence the final effective capability set of the new process created when a user invokes the program: </PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The new effective set is the intersection of the permitted set of the parent process and the executable file's effective set. That is, if the executable file's effective set of capabilities includes a capability that is within the permitted set of the calling process, but not within that process' effective set, the capability will be added to the child process' effective set. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The new inheritable capability set is the intersection of the inheritable capabilities of the calling process and the inheritable capability set of the executable file. That is, only those capabilities that are inheritable by the executable file and are designated inheritable by the parent process will be inheritable in the new process.   </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The new permitted capability set is the union of the executable file's permitted set and the intersection of the new inheritable set and the parent process' permitted set. That is,  all permitted capabilities of both the file and the parent process are permitted so long as each capability is inheritable by both the parent process and the executable file. </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The effective capability set of the parent process does not influence any of the new sets, and the executable file's inheritable set defines an upper bound on the capabilities available to the new process. </PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="22786">Capabilities in This Release</TITLE><PARAGRAPH>The following capabilities are shipped in this distribution:<INDEXTARGET ID="ch443"><!-- POSTPROCESSDATA: ch443|Capabilities, default --></PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>ALL</HANGITEM>
<HANGBODY><PARAGRAPH>Indicates all capabilities.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_ACCT_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue accounting setup system calls such as <REFPAGE>acct(2)</REFPAGE>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_AUDIT_CONTROL</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to manage the system audit trail such as the <REFPAGE>sat_read(2)</REFPAGE> and <REFPAGE>sat_write(2)</REFPAGE> system calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_AUDIT_WRITE</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to write to the system audit trail such as the  <REFPAGE>sat_write(2)</REFPAGE> system call.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_CHOWN</HANGITEM>
<HANGBODY><PARAGRAPH>Privilege to change the owner of a file not owned by the process and with the system configured for _POSIX_CHOWN_RESTRICTED on changing file ownership.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_CHROOT</HANGITEM>
<HANGBODY><PARAGRAPH>Privilege to execute the <REFPAGE>chroot(2)</REFPAGE> system call.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_DAC_EXECUTE</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to execute a file when the permissions or Access Control List would prohibit it.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_DAC_READ_SEARCH</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to read a file or search a directory even though the permissions or Access Control List would prohibit it.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_DAC_WRITE</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to write a file or update a directory when permissions or Access Control Lists would have prohibited it.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_DEVICE_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue restricted device management calls and ioctl actions such as the following:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>XLV logical volume interface - Defines logical volumes and various parameters about them. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>&space;<COMMAND>syssgi</COMMAND>(SGI_FS_INUMBERS) - Returns all the valid internal handles (inode numbers) on an XFS file system. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH><COMMAND>syssgi</COMMAND>(SGI_FS_BULKSTAT) - Returns file status (struct stat) &ldquo;in bulk&rdquo; for an entire file system. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH><COMMAND>fcntl</COMMAND>(F_FSSETDM) - Set the DMA parameters for a file. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>DMI interface - Used by tertiary storage management products. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Set the CLOCAL flag on a port marked CD_MODEM using ioctl with TCSETA, TCSETAF or TCSETAW control parameters. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Perform privileged operations on a disk using ioctl.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Access to the hardware performance monitor using <REFPAGE>syssgi(2)</REFPAGE>. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Load, unload, register and unregister loadable device drivers, streams modules, and file systems (<REFPAGE>mload(4)</REFPAGE>). </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Revoke access to a device using <REFPAGE>vhangup(2)</REFPAGE>. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Control memory error handling using <REFPAGE>syssgi(2)</REFPAGE>. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Establish a user level interrupt handler (<REFPAGE>uli(3)</REFPAGE>). </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Get and set file system attributes. </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_FOWNER</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to operate on a file as if the process owned it. This capability overrides the requirement that the user ID associated with a process be equal to the file owner ID, except in the cases where the CAP_FSETID capability is applicable. In general, this capability, when effective, will permit a process to perform all the functions that any file owner would have for their files.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_FSETID</HANGITEM>
<HANGBODY><PARAGRAPH>Privilege to set the setuid or setgid bits of a file without being the owner. Also, the privilege to change the owner of a file with setuid or setgid bits set. This capability overrides the following restrictions: </PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>That the effective user ID of the calling process shall match the file owner when setting the set-user-ID (S_ISUID) and set-group-ID (S_ISGID) bits on that file.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>That the effective group ID or one of the supplementary group IDs of the calling process shall match the group ID of the file when setting the set-group-ID bit of that file.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>That the set-user-ID and set-group-ID bits of the file mode shall be cleared upon successful return from <COMMAND>chown</COMMAND>. </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_KILL</HANGITEM>
<HANGBODY><PARAGRAPH>Privilege to send a <REFPAGE>kill(1M)</REFPAGE> signal to another process not owned by the sender. Also, privilege to use process synchronization calls (procblk) to a process.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_MEMORY_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue restricted memory management calls, primarily memory locking. This capability overrides the restriction that a process may not manipulate the system memory management policies. The operations enabled by this capability include the following:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>Lock or unlock a shared memory segment via the <REFPAGE>shmctl(2)</REFPAGE> interface. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Lock or unlock other segments of a process in memory (<REFPAGE>mpin(2)</REFPAGE>, <REFPAGE>plock(2)</REFPAGE>). </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Use of the <COMMAND>syssgi</COMMAND>(SGI_MINRSS) system call. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Retrieve the physical address of a page. </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_MKNOD</HANGITEM>
<HANGBODY><PARAGRAPH>This is an alias for CAP_DEVICE_MGT.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_MOUNT_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue the <REFPAGE>mount(2)</REFPAGE> and <REFPAGE>umount(2)</REFPAGE> calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_NETWORK_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue restricted networking calls such as setting the network interface address, and network interface device management. This capability is required to change the system network configuration. The functions enabled by this capability include:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>Downloading firmware to network device interfaces and starting them. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Setting the Media Access Control (MAC) address; for example, the Ethernet address of an interface. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Retrieving device management information from network devices. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Setting, controlling, and examining the FDDI SMT information. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Controlling the ARP mechanism. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Controlling the IP address(es), parameters, and flags of network interfaces. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Configuring the IP filter. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Using the private interface for <REFPAGE>lockd(1M)</REFPAGE>. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Using the private interfaces for the NFS service daemons. </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_NVRAM_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;This is an alias for CAP_SYSINFO_MGT.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_PRIV_PORT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to open a socket on a privileged TCP port.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_PROC_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue restricted process management calls. This capability is required to override the restrictions on changing the attributes of other processes and to perform privileged process operations. These include the following:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>Tracing a setuid/setgid executable.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Setting resource limits larger than system or per process limits.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Use the kernel thread facilities.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Update the real UID/GID within a share group (without this capability, effective IDs are updated) when the UID or GID is changed.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Set the per-process stack size in a share group using <REFPAGE>prctl(2)</REFPAGE>.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Force the process to be resident <REFPAGE>prctl(2)</REFPAGE>. </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_QUOTA_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue restricted disk quota management calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SCHED_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue restricted scheduler calls such as real time scheduler interfaces. This capability is required to manipulate the system process scheduler. Operations enabled by this capability include</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>changing the process priority to a high value </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>changing the process priority of another process </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>setting the process to have non-degrading priority </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>setting the real-time priority of a process </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>setting the time slice value for a process </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>controlling the association of processes to processors </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>setting the working set priority for a process </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>using the Frame Rate Scheduling features </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>altering the process resource limits </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>controlling the rate at which the buffer cache flush routine operates </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SETFCAP</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;This is an alias for CAP_SETFPRIV.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SETFPRIV</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to alter the capability set of a file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SETGID</HANGITEM>
<HANGBODY><PARAGRAPH>Privilege to change the real, effective, and saved GID of the process. Also the privilege to change the process group ID.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SETPCAP</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;This is an alias for CAP_SETPPRIV.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SETPPRIV</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to alter the capability set for a process.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SETUID</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to change the real, effective, and saved UID of the process.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SHUTDOWN</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to shut the system down or reboot it. This capability is required to use the <REFPAGE>uadmin(2)</REFPAGE> system call, which can</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>shut the system down</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>reboot the system</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>force remount of the root after automatic file system damage repair</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>notify all processes to terminate gracefully</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>power the system down (not supported on all systems)</PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_STREAMS_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue restricted STREAMS calls and operations.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SWAP_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to issue the <REFPAGE>swap(2)</REFPAGE> call.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_SYSINFO_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to set system information such as hostname and the NVRAM values. This capability is required to manipulate the system identification information of the system. This includes the following:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>NVRAM contents on adapters such as the FDDI interface (typically addresses or names). </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Host ID, node name and domain name. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Activate VM fault tracing. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Control the treatment of UID 0: </PARAGRAPH>
<PARAGRAPH>Conventional superuser, UID 0 has all privileges, capabilities are not used. </PARAGRAPH>
<PARAGRAPH>Modified superuser, capabilities are used, but <ITALICS>root</ITALICS> doesn't require them. When <ITALICS>root</ITALICS> does an operation that would have needed capabilities, a record is kept. </PARAGRAPH>
<PARAGRAPH>No superuser mode, UID 0 and the <ITALICS>root</ITALICS> account are not special. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Change system tuning parameters. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Invoke the internal kernel debugging support. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Set the automatic power on time. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Set the machine ID (serial number). </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CAP_TIME_MGT</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Privilege to set the system time. This capability is required to modify the system clock. This includes the following functions:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>Set the time trim adjustment (used for clock synchronization with external sources). </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Adjust the system clock. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Set the system clock. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Enable the fast clock. </PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Control which processor will handle clock interrupts. </PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>File Capabilities<INDEXTARGET ID="ch444"><!-- POSTPROCESSDATA: ch444|File Capabilities --><INDEXTARGET ID="ch445"><!-- POSTPROCESSDATA: ch445|capabilities, on files --></TITLE><PARAGRAPH>Capabilities on a file are only meaningful for executable files on XFS format file systems.    Capability requirements on files can be set by the System Administrator with the <REFPAGE>chcap(1M)</REFPAGE> command. The syntax is as follows:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>chcap</USERINPUT>&space;<VARIABLE>CAP, CAP, CAP</VARIABLE>&space;<VARIABLE>file</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>For example, suppose you want to set capabilities to match those associated with the auditor account:</PARAGRAPH>
<EXAMPLE>
auditor:CAP_AUDIT_WRITE,CAP_AUDIT_CONTROL,CAP_KILL+eip
</EXAMPLE>
<PARAGRAPH>Use this command:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>chcap CAP_AUDIT_WRITE,CAP_AUDIT_CONTROL,CAP_KILL+eip</USERINPUT>&space;<VARIABLE>file</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>To list the capability requirements of a file or directory, use this command:</PARAGRAPH>
<PARAGRAPH><USERINPUT>ls -P </USERINPUT></PARAGRAPH>
<PARAGRAPH>The <CMDLINEOPT>-P</CMDLINEOPT> flag stands for &ldquo;Privilege.&rdquo; Note that you must have the appropriate capabilities to read the file in order to read the capabilities of the file.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Creating Custom Capabilities</TITLE><PARAGRAPH>You can create unique capabilities at your site. Simply add the capability tag you want (it must be unique) to your <FILENAME>/etc/capability</FILENAME> file on the line for the user or users who are to have the capability, then use the <REFPAGE>chcap(1)</REFPAGE> command to add the capability to the files you desire. </PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Using attrinit to Clean Up Capability Corruption<INDEXTARGET ID="ch446"><!-- POSTPROCESSDATA: ch446|attrinit command --></TITLE><PARAGRAPH>If you believe you have experienced corruption of some capability requirements on files or directories , you can use the <REFPAGE>attrinit(1)</REFPAGE> command to restore those capability requirements. </PARAGRAPH>
<PARAGRAPH>The <FILENAME>/etc/irixcap</FILENAME> file is used with the <COMMAND>attrinit</COMMAND> command as follows:</PARAGRAPH>
<PARAGRAPH>Log in as <ITALICS>root</ITALICS> and change directories to the root (/) directory. Next, give this command:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>attrinit -script=/etc/irixcap</USERINPUT>&space;
</EXAMPLE>
<PARAGRAPH>Your capability integrity will be restored. The process may take a few moments.</PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
</CHAPTER>

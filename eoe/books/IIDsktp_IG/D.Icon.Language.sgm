<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<APPENDIX LBL="D"><TITLE><XREFTARGET ID="25750">The Icon Description Language</TITLE><PARAGRAPH>Use IconSmith to draw your icons. To learn how to use IconSmith, see <INDEXTARGET ID="D.Icon.Language1"><!-- POSTPROCESSDATA: D.Icon.Language1|IconSmith:icon description languageicons:icon description language --><XREF IDREF="81290" TYPE="TITLE">Chapter&nbsp;12, &ldquo;Using IconSmith.&rdquo;</XREF> After you draw your icon, include it in the FTR file using the ICON rule described in <XREF IDREF="36003" TYPE="TITLE">Chapter&nbsp;13, &ldquo;File Typing Rules.&rdquo;</XREF> IconSmith writes the ICON rule for you using the <ITALICS>icon description language</ITALICS>. This appendix describes the icon description language that IconSmith uses to write the ICON rule. This information is provided for completeness. Do not try to write the ICON rule directly in the icon description language.</PARAGRAPH>
<PARAGRAPH>The icon description language is a restricted subset of the C programming language. It includes line and polygon drawing routines from the IRIS Graphics Library&trade; (GL), as well as some additional routines that are not in the GL. The description routine for a given icon is similar in structure to a C subroutine without the subroutine and variable declarations. The valid symbols and functions in the icon description language are described below. </PARAGRAPH>
<SECTION1><SECTION2><SECTION3 LBL="" HELPID = ""><TITLE>Operators&space;</TITLE><PARAGRAPH>You can use these C language operators in an icon description routine:<INDEXTARGET ID="D.Icon.Language2"><!-- POSTPROCESSDATA: D.Icon.Language2|icons:C language operatorsoperators:icon description routinesC language operators --></PARAGRAPH>
<CODE>
+
-
*
/
&amp;
|
^
!
%
=
( )
{ }
</CODE>
<PARAGRAPH>You can use these C language conditional operators in an icon description routine:<INDEXTARGET ID="D.Icon.Language3"><!-- POSTPROCESSDATA: D.Icon.Language3|operators:conditionalicons:conditional operators --></PARAGRAPH>
<CODE>
&amp;&amp;
||
==
!=
&lt;
>
&lt;=
>=
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Constants&space;</TITLE><PARAGRAPH>You can use these logical constants in an icon description routine:<INDEXTARGET ID="D.Icon.Language4"><!-- POSTPROCESSDATA: D.Icon.Language4|constants:logicallogical constants:icon description languageicons:logical constants --></PARAGRAPH>
<EXAMPLE>
true false
</EXAMPLE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Variables&space;</TITLE><PARAGRAPH>The following icon status variables are set by the Desktop. You can use them in an icon description routine:<INDEXTARGET ID="D.Icon.Language5"><!-- POSTPROCESSDATA: D.Icon.Language5|icons:icon status variablesvariables:icon status --></PARAGRAPH>
<EXAMPLE>
opened located selected current disabled
</EXAMPLE>
<PARAGRAPH>These variables have values of either <BOLD>true</BOLD> or <BOLD>false</BOLD>. You can use them in a conditional statement to alter the appearance of an icon when it has been manipulated in various ways from the Desktop. </PARAGRAPH>
<PARAGRAPH>You can use other legal C variables in an icon description routine, without a declaration; all variables are represented as type <BOLD>float</BOLD>. Any variable name is acceptable, provided it does not collide with any of the predefined constants, variables, or function names in the icon description language.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Functions</TITLE><PARAGRAPH>The icon description functions comprise, for the most part, a very restricted subset of the C language version of the IRIS Graphics Library, modified for 2-D drawing. <INDEXTARGET ID="D.Icon.Language6"><!-- POSTPROCESSDATA: D.Icon.Language6|icons:functionsfunctions:icon descriptive functions --><XREF IDREF="94943" TYPE="TABLE">See Table&nbsp;D-1</XREF> for a list of all the icon description functions.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="D-1"><PREFIX>Table D-1 </PREFIX>&space;<EMPHASIS>(continued)        </EMPHASIS><XREFTARGET ID="94943">Icon Description Functions</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="119"><PARAGRAPH>Function	</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Definition</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>arc(<ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>,<ITALICS> r</ITALICS>, <ITALICS>startang</ITALICS>, <ITALICS>endang</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Draw an arc starting at icon coordinates <ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>; with 
radius <ITALICS>r</ITALICS>; starting at angle <ITALICS>startang</ITALICS>; ending at angle 
<ITALICS>endang</ITALICS>. Angle measures are in tenths of degrees.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>arcf(<ITALICS>x</ITALICS>,<ITALICS> y</ITALICS>, <ITALICS>r</ITALICS>, <ITALICS>startang</ITALICS>, <ITALICS>endang</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Like arc, but filled with the current pen color.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>bclos(<ITALICS>color</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Like pclos, but uses <ITALICS>color</ITALICS> for the border (outline) color 
of the polygon.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>bgnclosedline()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Begin drawing a closed, unfilled figure drawn in the 
current pen color. Used in conjunction with vertex 
and endclosedline.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>bgnline()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Like bgnclosedline, except the figure is not closed. 
Used in conjunction with vertex and endline.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>bgnoutlinepolygon</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Begin drawing a polygon filled with the current pen 
color. The polygon is outlined with a color specified 
by endoutlinepolygon. Also used in conjunction with 
vertex.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>bgnpoint()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Begin drawing a series of unconnected points defined 
using calls to vertex. Used in conjunction with vertex 
and endpoint.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>bgnpolygon()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Like bgnoutlinepolygon except the polygon is not 
outlined. Used in conjunction with vertex and 
endpolygon.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>color(<ITALICS>n</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Set current pen color to color index <ITALICS>n</ITALICS>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>draw<ITALICS>(x</ITALICS>, <ITALICS>y</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Draw a line in the current color from the current pen 
location to <ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>endclosedline()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Finish a closed, unfilled figure started with 
bgnclosedline.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>endline()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Finish an open, unfilled figure started with bgnline.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>endoutlinepolygon(<ITALICS>color</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Finish a filled polygon started with 
bgnoutlinepolygon and outline it with <ITALICS>color</ITALICS>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>endpoint()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Finish a series of points started with bgnpoint.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>endpolygon()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Finish a filled, unoutlined polygon started with 
bgnpolygon.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>for (<ITALICS>expr</ITALICS>; <ITALICS>expr</ITALICS>; <ITALICS>expr</ITALICS>) <ITALICS>expr</ITALICS></PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Note that shorthand operators such as ++ and -- are 
not part of the icon description language, so longer 
hand expressions must be used.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>if (<ITALICS>expr</ITALICS>) <ITALICS>expr</ITALICS> [ else <ITALICS>expr</ITALICS> ]</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Standard C language if-statement.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>include("<ITALICS>path</ITALICS>")</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Tell the Desktop to find the icon geometry in the file 
with pathname <VARIABLE>path</VARIABLE>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>move(<ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Move current pen location to <ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>pclos()</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Draw a line in the current pen color that closes the 
current polygon, and fill the polygon with the current 
color.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>pdr(<ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Draw the side of a filled polygon in the current pen 
color, from the current pen location to <ITALICS>x</ITALICS>,<ITALICS> y</ITALICS>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>pmv(<ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Begin a filled polygon at location <ITALICS>x</ITALICS>, <ITALICS>y</ITALICS>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>print(<ITALICS>expr</ITALICS> or "<ITALICS>string</ITALICS>")</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Print the value of the expression <ITALICS>expr</ITALICS> or <ITALICS>string</ITALICS> to 
<ITALICS>stdout</ITALICS>; used for debugging.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="119"><PARAGRAPH>vertex(<ITALICS>x</ITALICS>,<ITALICS>y</ITALICS>)</PARAGRAPH>
</CELL>
<CELL LEFT="125" WIDTH="216"><PARAGRAPH>Specify a coordinate used for drawing points, lines 
and polygons by bgnpoint, bgnline, bgnpolygon, and 
so forth. </PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION3>
</SECTION2>
</SECTION1>
</APPENDIX>

<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="9"><TITLE><XREFTARGET ID="60030">Providing Online Help With SGIHelp</TITLE><PARAGRAPH>This chapter describes how to use the Silicon Graphics online help system, SGIHelp, to deliver the online help for your product. It describes how to prepare the help and integrate it into your application. It contains the following sections:<INDEXTARGET ID="09.SGIHelp1"><!-- POSTPROCESSDATA: 09.SGIHelp1|helponline help:<ITALICS>See</ITALICS> helpSGI help:<ITALICS>See</ITALICS> helpXt help:<ITALICS>See</ITALICS> help --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="86080" TYPE="TITLE">&ldquo;Overview of SGIHelp&rdquo;</XREF> provides an overview of the help system.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="34967" TYPE="TITLE">&ldquo;The SGIHelp Interface&rdquo;</XREF> describes the SGIHelp API.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="58688" TYPE="TITLE">&ldquo;Implementing Help in an Application&rdquo;</XREF> provides some examples of implementing online help in an application.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="73995" TYPE="TITLE">&ldquo;Application Helpmap Files&rdquo;</XREF> describes the format and use of application helpmap files.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="67544" TYPE="TITLE">&ldquo;Writing the Online Help&rdquo;</XREF> describes how to write the source files containing your application's online help.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="81424" TYPE="TITLE">&ldquo;Producing the Final Product&rdquo;</XREF> describes how to compile your help files into viewable form and package them for installation on your users' systems.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="36112" TYPE="TITLE">&ldquo;Bibliography of SGML References&rdquo;</XREF> list additional references.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The section <EXTREF IDREF="81967" BOOK="UI_Glines" FILE="" HDG="81967" INFO="">&ldquo;Online Help&rdquo; in Chapter&nbsp;4</EXTREF>
 of the <DOCTITLE>IRIX Interactive User Interface Guidelines</DOCTITLE> provides interface and content guidelines for adding online help to your application.</PARAGRAPH>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="86080">Overview of SGIHelp</TITLE><PARAGRAPH>The SGIHelp system consists of a help viewer, a help library and include file, help document files, and optional application helpmap files. This section describes:<INDEXTARGET ID="09.SGIHelp2"><!-- POSTPROCESSDATA: 09.SGIHelp2|help:overview --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="78532" TYPE="TITLE">&ldquo;The Help Viewer&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="69702" TYPE="TITLE">&ldquo;The SGIHelp Library and Include File&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="28277" TYPE="TITLE">&ldquo;Help Document Files&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="73361" TYPE="TITLE">&ldquo;Application Helpmap Files&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
</BULLETLIST>
<NOTE><PREFIX>Note</PREFIX>To develop online help for your application, you must install the <ITALICS>insight_dev</ITALICS> product, which contains the SGIHelp library and include file, help generation tools, examples, and templates.</NOTE>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="78532">The Help Viewer</TITLE><PARAGRAPH>The SGIHelp viewer, <INDEXTARGET ID="09.SGIHelp3"><!-- POSTPROCESSDATA: 09.SGIHelp3|help:viewer --><COMMAND>sgihelp</COMMAND>(1), also referred to as the <ITALICS>help server</ITALICS>, displays help text in easy-to-use browsing windows. <XREF IDREF="25845" TYPE="GRAPHIC">Figure&nbsp;9-1</XREF> shows an example of a help window. <INDEXTARGET ID="09.SGIHelp4"><!-- POSTPROCESSDATA: 09.SGIHelp4|help:windowswindows:help --></PARAGRAPH>
<!-- RASTERCONVERT: 09.SGIHelp.cgm -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="09.SGIHelp-1.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="9-1"><PREFIX>Figure 9-1 </PREFIX><XREFTARGET ID="25845">The Help Viewer</CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH><COMMAND>sgihelp</COMMAND> can also display an index of all help topics available in a help document and allow the user to select a particular topic from the list. <XREF IDREF="81497" TYPE="GRAPHIC">Figure&nbsp;9-2</XREF> shows an example of a help index.</PARAGRAPH>
<!-- RASTERCONVERT: 09.SGIHelp.cgm2 -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="09.SGIHelp-2.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="9-2"><PREFIX>Figure 9-2 </PREFIX><XREFTARGET ID="81497">The Help Index Window</CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH><COMMAND>sgihelp</COMMAND> is a separate application that gets started automatically whenever an application makes a help request. Neither users nor your application should ever need to explicitly start <COMMAND>sgihelp</COMMAND>. After the user closes all help windows, <COMMAND>sgihelp</COMMAND> remains running in the background for a few minutes. If it receives no other help requests within that time, it automatically exits. </PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="69702">The SGIHelp Library and Include File</TITLE><PARAGRAPH>The Silicon Graphics help library, <INDEXTARGET ID="09.SGIHelp5"><!-- POSTPROCESSDATA: 09.SGIHelp5|help:include filehelp:library --><FILENAME>libhelpmsg</FILENAME>, handles communication with the help server. <FILENAME>libhelpmsg</FILENAME> depends on the <FILENAME>libX11</FILENAME> library. Be sure to specify <CMDLINEOPT>&ndash;lhelpmsg</CMDLINEOPT> before <CMDLINEOPT>&ndash;lX11</CMDLINEOPT> in the compilation or linking command.</PARAGRAPH>
<PARAGRAPH>For example, to compile a file <FILENAME>hellohelp.c++</FILENAME> to produce the executable <ITALICS>hellohelp</ITALICS>, you would enter:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>CC -o hellohelp hellohelp.c++ -lhelpmsg -lX11</USERINPUT>&space;
</EXAMPLE>
<PARAGRAPH>You must include <FILENAME>&lt;helpapi/HelpBroker.h></FILENAME> in any source file that accesses online help. Both the library and include file were developed in C, and can be used with either the C or C++ programming languages.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="28277">Help Document Files</TITLE><PARAGRAPH>Help document files contain the actual help text in Standard Generalized Markup Language (SGML) format. In addition to text, help documents can contain graphics and hypertext links to other help topics.<INDEXTARGET ID="09.SGIHelp6"><!-- POSTPROCESSDATA: 09.SGIHelp6|help:document files --></PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="73361">Application Helpmap Files</TITLE><PARAGRAPH>Application helpmap files are optional; an application can request specific help topics directly. Applications helpmap files provide a level of indirection that allows you to structure your help presentation independently of your application code. The SGIHelp library also uses helpmaps to make it easier for you to implement context-sensitive help in your application.<INDEXTARGET ID="09.SGIHelp7"><!-- POSTPROCESSDATA: 09.SGIHelp7|help:helpmap files --></PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>You must provide a helpmap for your application if you want a help index.</NOTE>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="34967">The SGIHelp Interface</TITLE><PARAGRAPH>This section describes the functions you use to access the help server from your application:<INDEXTARGET ID="09.SGIHelp8"><!-- POSTPROCESSDATA: 09.SGIHelp8|help:interface --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="83049" TYPE="TITLE">&ldquo;Initializing the Help Session&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="20950" TYPE="TITLE">&ldquo;Displaying a Help Topic&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="51771" TYPE="TITLE">&ldquo;Displaying the Help Index&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="83049">Initializing the Help Session</TITLE><PARAGRAPH>Before calling any other help functions, your application must first call <INDEXTARGET ID="09.SGIHelp9"><!-- POSTPROCESSDATA: 09.SGIHelp9|help:initializing help --><FUNCTION>SGIHelpInit()</FUNCTION>:</PARAGRAPH>
<EXAMPLE>
int SGIHelpInit (Display *<VARIABLE>display</VARIABLE>, char *<VARIABLE>appClass</VARIABLE>, char *<VARIABLE>separator</VARIABLE>);
</EXAMPLE>
<HANGLIST><HANGPAIR><HANGITEM><VARIABLE>display</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>The application's Display structure.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>appClass</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>The application's class name. Use the same name as you provide to <FUNCTION>XtAppInitialize()</FUNCTION>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>separator</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>The separator character used by the application to separate the widget hierarchy when a context-sensitive help request is made. At this time, you must use the period ( . ).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH><FUNCTION>SGIHelpInit()</FUNCTION> does not start or communicate with the help server process; it simply initializes data structures for the other SGIHelp functions. <FUNCTION>SGIHelpInit()</FUNCTION> returns 1 on success, and 0 on failure.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="99466" TYPE="TEXT">Example&nbsp;9-1</XREF> shows an example of how to use <FUNCTION>SGIHelpInit()</FUNCTION>.</PARAGRAPH>
<CODE><CAPTION LBL="9-1"><PREFIX>Example 9-1 </PREFIX><XREFTARGET ID="99466">Initializing a Help Session Using <FUNCTION>SGIHelpInit()</FUNCTION></CAPTION>#include &lt;Xm/Xm.h>
#include &lt;helpapi/HelpBroker.h>
&nbsp;
void&nbsp;main&nbsp;(&nbsp;int&nbsp;argc,&nbsp;char&nbsp;**argv&nbsp;)
{
&nbsp;&nbsp;&nbsp;&nbsp;Widget&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mainWindow;&nbsp;/*&nbsp;Main window shell widget&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;XtAppContext&nbsp;app;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;An&nbsp;application&nbsp;context,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;needed&nbsp;by&nbsp;Xt
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;status;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Return status */
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;/* ... */
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;mainWindow&nbsp;=&nbsp;XtAppInitialize&nbsp;(&nbsp;&amp;app,&nbsp;"MyApp",&nbsp;NULL,&nbsp;0,&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;argc,&nbsp;argv,&nbsp;NULL,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL,&nbsp;0&nbsp;);
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;/* Initialize the help session */
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;status = SGIHelpInit( XtDisplay(mainWindow),
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"MyApp", "."&nbsp;);
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;/* ... */
}
</CODE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="20950">Displaying a Help Topic</TITLE><PARAGRAPH>To request display of a help topic from within your application, call <INDEXTARGET ID="09.SGIHelp10"><!-- POSTPROCESSDATA: 09.SGIHelp10|help:displaying a help topic --><FUNCTION>SGIHelpMsg()</FUNCTION>:</PARAGRAPH>
<EXAMPLE>
int SGIHelpMsg (char *<VARIABLE>key</VARIABLE>, char *<VARIABLE>book</VARIABLE>, char *<VARIABLE>userData</VARIABLE>);
</EXAMPLE>
<HANGLIST><HANGPAIR><HANGITEM><VARIABLE>key</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Specifies either 1) the ID of a particular help topic in a help document, or 2) a widget hierarchy.</PARAGRAPH>
<PARAGRAPH>If you provide a help ID, the help server displays the help topic identified in the help document specified by the <VARIABLE>book</VARIABLE> argument. You must provide a help book name in this case. See <XREF IDREF="67544" TYPE="TITLE">&ldquo;Writing the Online Help&rdquo;</XREF> for an explanation of help IDs.</PARAGRAPH>
<PARAGRAPH>If you provide a widget hierarchy, the help server looks in the application's helpmap file to find a mapping. If it doesn't find an exact match, it uses a fallback algorithm to determine which is the &ldquo;closest&rdquo; hierarchy found. Typically you use this technique to provide context-sensitive help. See <XREF IDREF="73995" TYPE="TITLE">&ldquo;Application Helpmap Files&rdquo;</XREF> for more information about the helpmap file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>book</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Gives the <ITALICS>short name</ITALICS> of the help document containing the application's help information. See <XREF IDREF="67544" TYPE="TITLE">&ldquo;Writing the Online Help&rdquo;</XREF> for a description of help document short names.</PARAGRAPH>
<PARAGRAPH>If you set this to NULL or asterisk (*), the help server looks in the application's helpmap file for the book name. In this case, a helpmap file must exist. See <XREF IDREF="73995" TYPE="TITLE">&ldquo;Application Helpmap Files&rdquo;</XREF> for more information about the helpmap file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>userData</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Reserved for future use. You should always set this field to NULL.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>If a copy of the help server is not already running, <FUNCTION>SGIHelpMsg()</FUNCTION> automatically starts the server. <FUNCTION>SGIHelpMsg()</FUNCTION> returns 1 on success, and 0 on failure.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="76756" TYPE="TEXT">Example&nbsp;9-2</XREF> shows an example of using <FUNCTION>SGIHelpMsg()</FUNCTION> to display the help topic identified by the help ID &ldquo;help_save_button&rdquo; in the help document with the short name &ldquo;MyAppHelp.&rdquo;</PARAGRAPH>
<CODE><CAPTION LBL="9-2"><PREFIX>Example 9-2 </PREFIX><XREFTARGET ID="76756">Requesting a Specific Help Topic Using <FUNCTION>SGIHelpMsg()</FUNCTION></CAPTION>#include &lt;helpapi/HelpBroker.h>
&nbsp;
/* Assume initialization of help session is complete */
&nbsp;
/*
&nbsp;* This call displays the help topic with a key of
&nbsp;* "help_save_button" (found in the "HelpId=" field).
&nbsp;* It will look for this section in the help document
&nbsp;* "MyAppHelp".
&nbsp;*/
&nbsp;
status = SGIHelpMsg(&nbsp;"help_save_button", "MyAppHelp", NULL&nbsp;);
</CODE>
<PARAGRAPH><XREF IDREF="73018" TYPE="TEXT">Example&nbsp;9-3</XREF> shows an example of using <FUNCTION>SGIHelpMsg()</FUNCTION> to request help given a widget hierarchy. In this case, the application must have a helpmap file, and the help file must contain an entry mapping the given hierarchy to a help topic for this call to succeed.</PARAGRAPH>
<CODE><CAPTION LBL="9-3"><PREFIX>Example 9-3 </PREFIX><XREFTARGET ID="73018">Requesting a Help Topic for a Widget Using <FUNCTION>SGIHelpMsg()</FUNCTION></CAPTION>#include &lt;helpapi/HelpBroker.h>
&nbsp;
/* Assume initialization of help session is complete */
&nbsp;
/*
&nbsp;* This call displays the help topic specified by the
&nbsp;* mapping for the widget hierarchy
&nbsp;* "MyApp.mainWindow.controlPane.searchButton"
&nbsp;* as given in the application's helpmap file.
&nbsp;*/
&nbsp;
status = SGIHelpMsg(&nbsp;"MyApp.mainWindow.controlPane",
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;NULL, NULL&nbsp;);
</CODE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="51771">Displaying the Help Index</TITLE><PARAGRAPH>The <INDEXTARGET ID="09.SGIHelp11"><!-- POSTPROCESSDATA: 09.SGIHelp11|help:displaying help index --><FUNCTION>SGIHelpIndexMsg()</FUNCTION> call causes the help server to look for the application's helpmap file and to display the Help Index window:</PARAGRAPH>
<EXAMPLE>
int SGIHelpIndexMsg (char *<VARIABLE>key</VARIABLE>, char *<VARIABLE>book</VARIABLE>);
</EXAMPLE>
<HANGLIST><HANGPAIR><HANGITEM><VARIABLE>key</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>You should always set this field to NULL or &ldquo;index.&rdquo;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>book</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Reserved for future use. You should always set this field to NULL.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The index displays all the help topics in the helpmap file in the order they appear in the file. You must have a helpmap file for this call to work properly. See <XREF IDREF="73995" TYPE="TITLE">&ldquo;Application Helpmap Files&rdquo;</XREF> for more information about the helpmap file. <FUNCTION>SGIHelpIndexMsg()</FUNCTION> returns 1 on success, and 0 on failure.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="12291" TYPE="TEXT">Example&nbsp;9-4</XREF> shows an example of how to use <FUNCTION>SGIHelpIndexMsg()</FUNCTION>.</PARAGRAPH>
<CODE><CAPTION LBL="9-4"><PREFIX>Example 9-4 </PREFIX><XREFTARGET ID="12291">Displaying a Help Index Using <FUNCTION>SGIHelpIndexMsg()</FUNCTION>&space;</CAPTION>/* Assume initialization of help session is complete */
&nbsp;
/*
&nbsp;* This call will look in the application's helpmap
&nbsp;* file for a list of topics to display to the user in
&nbsp;* sgihelp's index window.
&nbsp;*/
&nbsp;
status = SGIHelpIndexMsg( "index", NULL );
</CODE>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="58688">Implementing Help in an Application</TITLE><PARAGRAPH>The section <INDEXTARGET ID="09.SGIHelp12"><!-- POSTPROCESSDATA: 09.SGIHelp12|help:implementation --><EXTREF IDREF="35470" BOOK="UI_Glines" FILE="" HDG="35470" INFO="">&ldquo;Types of Online Help&rdquo; in Chapter&nbsp;4</EXTREF>
 of the <DOCTITLE>IRIX Interactive User Interface Guidelines</DOCTITLE> describes the user interfaces to online help that your application should provide. In summary, these services are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Help menus in all application windows with menu bars</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><BUTTON>Help</BUTTON> buttons in all applications without menu bars</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Context-sensitive help available through both the help menus and the <USERINPUT>&lt;Shift+F1></USERINPUT> keyboard accelerator.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>This section contains specific suggestions for implementing these help interfaces to your application:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="44432" TYPE="TITLE">&ldquo;Constructing a Help Menu&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="82226" TYPE="TITLE">&ldquo;Implementing a Help Button&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="31270" TYPE="TITLE">&ldquo;Providing Context-Sensitive Help&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="44432">Constructing a Help Menu</TITLE><PARAGRAPH>For those windows in your application with a menu bar, you should provide a Help menu. <INDEXTARGET ID="09.SGIHelp13"><!-- POSTPROCESSDATA: 09.SGIHelp13|help:constructing the menu --><EXTREF IDREF="31568" BOOK="UI_Glines" FILE="" HDG="31568" INFO="">&ldquo;Providing Help through a Help Menu&rdquo; in Chapter&nbsp;4</EXTREF>
 of the <DOCTITLE>IRIX Interactive User Interface Guidelines</DOCTITLE> recommends that the following entries appear in the Help menu:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>&ldquo;Click for Help&rdquo;</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Provides context-sensitive help. This option should also use the <USERINPUT>&lt;Shift+F1></USERINPUT> keyboard accelerator. When a user selects &ldquo;Click for Help,&rdquo; the cursor should turn into a question mark (?). The user can then move the cursor over an item or area of interest and click. Your application should then display a help topic describing the purpose of the item or area.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="31270" TYPE="TITLE">&ldquo;Providing Context-Sensitive Help&rdquo;</XREF> provides detailed instructions for implementing context-sensitive help.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>&ldquo;Overview&rdquo;</HANGITEM>
<HANGBODY><PARAGRAPH>Displays overview information. The main primary window should provide an overview of the application. For other windows, this option should appear as &ldquo;Overview for <VARIABLE>&lt;window name></VARIABLE>&rdquo; and provide an overview of the current window only.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>A list of topics and tasks</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;This section should contain a list of topics and tasks that the user can perform in your application. When the user selects one of the options, your application should display a help topic for that item. To reduce the size of this section, you can move some of the tasks to submenus.</PARAGRAPH>
<PARAGRAPH>You can hard code the entries in this section or, if you have a helpmap file for your application, you can parse the helpmap and dynamically create the task and subtask entries.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>&ldquo;Index&rdquo;</HANGITEM>
<HANGBODY><PARAGRAPH>Displays Help Index window for the application. You must have an application helpmap file to support this option.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>&ldquo;Keys &amp; Shortcuts&rdquo;</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Displays the application's accelerator keys, keyboard shortcuts, and other actions in the application.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>&ldquo;Product Information&rdquo;</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Displays a dialog box showing the name, version, and any copyright information or other related data for your application. Typically, you should present this information using an IRIS IM dialog rather than using online help.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>Separators are added automatically. See the program listing in <XREF IDREF="82258" TYPE="TEXT">Example&nbsp;C-4</XREF> for an example of creating a Help menu.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="82226">Implementing a Help Button</TITLE><PARAGRAPH>For those windows in your application that don't contain a menu bar, you should provide a <INDEXTARGET ID="09.SGIHelp14"><!-- POSTPROCESSDATA: 09.SGIHelp14|help:help button --><BUTTON>Help</BUTTON> button. <XREF IDREF="86304" TYPE="TEXT">Example&nbsp;9-5</XREF> shows how you can use the SGIHelp API to communicate with the help server from a pushbutton within your application. <EXTREF IDREF="94472" BOOK="UI_Glines" FILE="" HDG="94472" INFO="">&ldquo;Providing Help Through a Help Button&rdquo; in Chapter&nbsp;4</EXTREF>
 of the <DOCTITLE>IRIX Interactive User Interface Guidelines</DOCTITLE> provides guidelines for when to implement a <BUTTON>Help</BUTTON> button.</PARAGRAPH>
<CODE><CAPTION LBL="9-5"><PREFIX>Example 9-5 </PREFIX><XREFTARGET ID="86304">Providing a <BUTTON>Help</BUTTON> Button</CAPTION>/*&nbsp;required&nbsp;include&nbsp;file&nbsp;for&nbsp;direct&nbsp;communication&nbsp;with&nbsp;help&nbsp;server&nbsp;*/
#include&nbsp;&lt;helpapi/HelpBroker.h>
#include&nbsp;&lt;Xm/Xm.h>
&nbsp;
/* ... */
&nbsp;
/*&nbsp;initialize&nbsp;help&nbsp;server&nbsp;information&nbsp;*/
SGIHelpInit(display,&nbsp;"MyWindowApp",&nbsp;".");
&nbsp;
...
&nbsp;
/*&nbsp;create&nbsp;help&nbsp;pushbutton&nbsp;for&nbsp;your&nbsp;window&nbsp;*/
Widget&nbsp;helpB&nbsp;=&nbsp;XmCreatePushButton(parent,&nbsp;"helpB",&nbsp;NULL,&nbsp;0);
XtManageChild(helpB);
&nbsp;
&nbsp;&nbsp;XtAddCallback(helpB,&nbsp;XmNactivateCallback,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(XtCallbackProc)helpCB,&nbsp;(XtPointer)NULL);
/* ... */
&nbsp;
/*&nbsp;help&nbsp;callback&nbsp;*/
void&nbsp;helpCB(Widget&nbsp;w,&nbsp;XtPointer&nbsp;clientData,&nbsp;XtPointer&nbsp;callData)
{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;communicate&nbsp;with&nbsp;the&nbsp;help&nbsp;server;&nbsp;developer
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;may&nbsp;wish&nbsp;to&nbsp;pass&nbsp;the&nbsp;"key"&nbsp;in&nbsp;as&nbsp;part&nbsp;of&nbsp;the
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;callback's&nbsp;callData&nbsp;parameter...
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SGIHelpMsg("key",&nbsp;"book",&nbsp;NULL);
}
</CODE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="31270">Providing Context-Sensitive Help</TITLE><PARAGRAPH>To provide context-sensitive help from within your application, you need to write code that tracks the cursor and interrogates the widget hierarchy. Additionally, you need to make a mapping between what the user has clicked, and the help card that's displayed.<INDEXTARGET ID="09.SGIHelp15"><!-- POSTPROCESSDATA: 09.SGIHelp15|help:context-sensitivecontext-sensitive help. <ITALICS>See</ITALICS> help --></PARAGRAPH>
<PARAGRAPH>The best way to provide the mapping is with the application helpmap file. The SGIHelp library provides a fallback algorithm for finding help topics that simplifies the process mapping widgets to topics. If the help system can't find an exact match to the widget string in the helpmap file, it drops the last widget from the string and tries again. The help system reiterates this process until it finds a match in the helpmap file. This eliminates the need to explicitly map a help topic for every widget in your application. Instead you can map a help topic to a higher-level manager widget and have that topic mapped to all of its descendent widgets as well.</PARAGRAPH>
<PARAGRAPH>For more information on the structure of application helpmap files, see <XREF IDREF="73995" TYPE="TITLE">&ldquo;Application Helpmap Files&rdquo;</XREF>.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="56968" TYPE="TEXT">Example&nbsp;9-6</XREF> shows the code used to implement context-sensitive help in the example program listed in <XREF IDREF="82258" TYPE="TEXT">Example&nbsp;C-4</XREF>, which simply installs <FUNCTION>clickForHelpCB()</FUNCTION> as the callback function for the &ldquo;Click for Help&rdquo; option of the Help menu. As long as you create a helpmap file for your application, you can use this routine as listed in your application as well.</PARAGRAPH>
<CODE><CAPTION LBL="9-6"><PREFIX>Example 9-6 </PREFIX><XREFTARGET ID="56968">Implementing Context-Sensitive Help</CAPTION>void&nbsp;clickForHelpCB(Widget&nbsp;wid,&nbsp;XtPointer&nbsp;clientData,&nbsp;XtPointer&nbsp;callData)
{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;Cursor&nbsp;cursor&nbsp;=&nbsp;NULL;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;char&nbsp;path[512],&nbsp;tmp[512];
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Widget&nbsp;shell,&nbsp;result,&nbsp;w;
&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(path,&nbsp;"");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(tmp,&nbsp;&nbsp;"");
&nbsp;
/*&nbsp;
&nbsp;*&nbsp;create&nbsp;a&nbsp;question-mark&nbsp;cursor&nbsp;
&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!cursor)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cursor&nbsp;=&nbsp;XCreateFontCursor(XtDisplay(wid),&nbsp;XC_question_arrow);
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XmUpdateDisplay(_mainWindow);
&nbsp;
/*&nbsp;
&nbsp;*&nbsp;get&nbsp;the&nbsp;top-level&nbsp;shell&nbsp;for&nbsp;the&nbsp;window&nbsp;
&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shell&nbsp;=&nbsp;_mainWindow;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(shell&nbsp;&amp;&amp;&nbsp;!XtIsShell(shell))&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shell&nbsp;=&nbsp;XtParent(shell);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;
/*
&nbsp;*&nbsp;modal&nbsp;interface&nbsp;for&nbsp;selection&nbsp;of&nbsp;a&nbsp;component;
&nbsp;*&nbsp;returns&nbsp;the&nbsp;widget&nbsp;or&nbsp;gadget&nbsp;that&nbsp;contains&nbsp;the&nbsp;pointer
&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result&nbsp;=&nbsp;XmTrackingLocate(shell,&nbsp;cursor,&nbsp;FALSE);
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;result&nbsp;)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w&nbsp;=&nbsp;result;
&nbsp;
/*&nbsp;
&nbsp;*&nbsp;get&nbsp;the&nbsp;widget&nbsp;hierarchy;&nbsp;separate&nbsp;with&nbsp;a&nbsp;'.';
&nbsp;*&nbsp;this&nbsp;also&nbsp;puts&nbsp;them&nbsp;in&nbsp;top-down&nbsp;vs.&nbsp;bottom-up&nbsp;order.
&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;XtName(w)&nbsp;)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(path,&nbsp;XtName(w));
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;strlen(tmp)&nbsp;>&nbsp;0&nbsp;)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcat(path,&nbsp;".");
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcat(path,&nbsp;tmp);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(tmp,&nbsp;path);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w&nbsp;=&nbsp;XtParent(w);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;while&nbsp;(w&nbsp;!=&nbsp;NULL&nbsp;&amp;&amp;&nbsp;w&nbsp;!=&nbsp;shell);
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;send&nbsp;msg&nbsp;to&nbsp;the&nbsp;help&nbsp;server-widget&nbsp;hierarchy;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;OR
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;provide&nbsp;a&nbsp;mapping&nbsp;to&nbsp;produce&nbsp;the&nbsp;key&nbsp;to&nbsp;be&nbsp;used
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;In&nbsp;this&nbsp;case,&nbsp;we'll&nbsp;let&nbsp;the&nbsp;sgihelp&nbsp;process&nbsp;do
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;mapping&nbsp;for&nbsp;us,&nbsp;with&nbsp;the&nbsp;use&nbsp;of&nbsp;a&nbsp;helpmap&nbsp;file
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Note&nbsp;that&nbsp;parameter&nbsp;2,&nbsp;the&nbsp;book&nbsp;name,&nbsp;can&nbsp;be&nbsp;found
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;from&nbsp;the&nbsp;helpmap&nbsp;file&nbsp;as&nbsp;well.&nbsp;The&nbsp;developer&nbsp;need
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;not&nbsp;hard-code&nbsp;it,&nbsp;if&nbsp;a&nbsp;helpmap&nbsp;file&nbsp;is&nbsp;present&nbsp;for
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;application.&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;strlen(path)&nbsp;>&nbsp;0&nbsp;)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SGIHelpMsg(path,&nbsp;NULL,&nbsp;NULL);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
}
</CODE>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="73995">Application Helpmap Files</TITLE><PARAGRAPH>Application helpmap files provide a level of indirection that allows you to structure your help presentation independently of your application code. <INDEXTARGET ID="09.SGIHelp16"><!-- POSTPROCESSDATA: 09.SGIHelp16|help:helpmap fileshelp:files --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="40507" TYPE="TITLE">&ldquo;Helpmap File Conventions&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="41266" TYPE="TITLE">&ldquo;Helpmap File Format&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="10425" TYPE="TITLE">&ldquo;Widget Hierarchies in the Helpmap File&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>You don't have to create a helpmap for your application, but doing so gives you the following benefits:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Your application can display a Help Index window, allowing users to select a particular topic directly from the list.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>You can write the code that generates your application's Help menu to create the &ldquo;list of topics and tasks&rdquo; options dynamically from the helpmap. You can then add and restructure your task help without recompiling your application. See <XREF IDREF="44432" TYPE="TITLE">&ldquo;Constructing a Help Menu&rdquo;</XREF> for details on the Help menu's list of topics.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Your application's Help menu can launch a browser and access a URL on the World Wide Web. See <XREF IDREF="82992" TYPE="TITLE">&ldquo;Example of Helpmap Entry to Access a Web Browser&rdquo;</XREF> for more information.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>You can provide context-sensitive without hard-coding in your source code a help topic to each widget. The SGIHelp library provides a fallback algorithm for finding help topics that simplifies the process mapping widgets to topics. If the help system can't find an exact match to the widget string in the helpmap file, it drops the last widget from the string and tries again. The help system reiterates this process until it finds a match in the helpmap file. This eliminates the need to explicitly map a help topic for every widget in your application. Instead you can map a help topic to a higher-level manager widget and have that topic mapped to all of its descendent widgets as well. See <XREF IDREF="31270" TYPE="TITLE">&ldquo;Providing Context-Sensitive Help&rdquo;</XREF> for information on implementing context-sensitive help in your application.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="40507">Helpmap File Conventions</TITLE><PARAGRAPH>Helpmap files are ASCII text files. The name of your application helpmap file must be <INDEXTARGET ID="09.SGIHelp17"><!-- POSTPROCESSDATA: 09.SGIHelp17|help:helpmap file conventions --><VARIABLE>&ldquo;appClass</VARIABLE>.helpmap&rdquo;, where <VARIABLE>appClass</VARIABLE> is your application's class name as provided in your application's call to <FUNCTION>SGIHelpInit()</FUNCTION>. See <XREF IDREF="83049" TYPE="TITLE">&ldquo;Initializing the Help Session&rdquo;</XREF> for more information on <FUNCTION>SGIHelpInit()</FUNCTION>.</PARAGRAPH>
<PARAGRAPH>If you create a helpmap file for your application, you must create a subdirectory named <FILENAME>help</FILENAME> in the directory containing your help document and put all of your document's figures in that subdirectory. See <XREF IDREF="29476" TYPE="TITLE">&ldquo;Preparing to Build the Online Help&rdquo;</XREF> for more information.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="41266">Helpmap File Format</TITLE><PARAGRAPH>Each entry, or <INDEXTARGET ID="09.SGIHelp18"><!-- POSTPROCESSDATA: 09.SGIHelp18|help:helpmap file format --><ITALICS>help topic</ITALICS>, in a helpmap consists of a single line containing at least six fields, each field separated by semicolons:</PARAGRAPH>
<EXAMPLE>
<VARIABLE>type</VARIABLE>;<VARIABLE>book</VARIABLE>;<VARIABLE>title</VARIABLE>;<VARIABLE>level</VARIABLE>;<VARIABLE>helpID</VARIABLE>;<VARIABLE>widget-hierarchy</VARIABLE>[;<VARIABLE>widget-hierarchy</VARIABLE> &hellip;]
</EXAMPLE>
<SECTION3 LBL="" HELPID = ""><TITLE>Helpmap Fields</TITLE><PARAGRAPH>All fields are required for each entry. Their purpose is as follows:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><VARIABLE>type</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>The type of help topic. Its value can be:</PARAGRAPH>
<TABLE COLUMNS="2"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>0</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="225"><PARAGRAPH>A context-sensitive topic.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>1</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="225"><PARAGRAPH>The overview topic.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>2</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="225"><PARAGRAPH>A task-oriented entry that could show up in the 
&ldquo;list of topics and tasks&rdquo; area of the Help menu. 
See <XREF IDREF="44432" TYPE="TITLE">&ldquo;Constructing a Help Menu&rdquo;</XREF>&space;for 
details on the Help menu's list of topics.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>3</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="225"><PARAGRAPH>The Keys and Shortcuts topic.</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>book</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>The name of the help document that contains this help topic. Help topics can reside in different books. Each individual help topic can point to only one help book.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>title</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>The title of the help topic. This appears in the Help Index window. If your application parses the helpmap file to generate the &ldquo;list of topics and tasks&rdquo; area of the Help menu, you can use this as the label for the menu option.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>level</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>A number determining the topic level. A value of 0 indicates a main topic, a value of 1 a sub-topic, a value of 2 a sub-sub-topic, and so forth. This produces an expandable/collapsible outline of topics for the Help Index window.</PARAGRAPH>
<PARAGRAPH>If your application parses the helpmap file to generate the &ldquo;list of topics and tasks&rdquo; area of the Help menu, you can also use these values to construct &ldquo;roll-over&rdquo; submenus as part of a Help menu.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>helpID</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>The unique ID, as specified by the &ldquo;HelpID&rdquo; attribute, of the specific help topic in the help document.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><VARIABLE>widget-hierarchy</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;One or more fully-qualified widget specifications for use with context-sensitive help. You can provide multiple specifications, delimited by semicolons, to associate different areas with the same topics.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Examples of Helpmap Entries</TITLE><PARAGRAPH>For example, the following entry in <FILENAME>Swpkg.helpmap</FILENAME> specifies the overview topic:</PARAGRAPH>
<CODE>
1;IndigoMagic_IG;Overview;0;Overview;Swpkg.swpkg.overview
</CODE>
<PARAGRAPH>The following entries from <FILENAME>Swpkg.helpmap</FILENAME> specify several context-sensitive help topics. In this case, the first entry appears as a main topic in the Help Index window and the next three appear as sub-topics:</PARAGRAPH>
<CODE>
0;Swpkg_UG;Using the swpkg Menus;0;menu.bar;Swpkg.swpkg.menuBar
0;Swpkg_UG;The File Menu;1;menu.bar.file;Swpkg.swpkg.menuBar.File
0;Swpkg_UG;The View menu;1;menu.bar.view;Swpkg.swpkg.menuBar.View
0;Swpkg_UG;The Help menu;1;menu.bar.help;Swpkg.swpkg.menuBar.helpMenu
</CODE>
<PARAGRAPH>The following shows a more complex hierarchy from <FILENAME>Swpkg.helpmap</FILENAME>:</PARAGRAPH>
<CODE>
2;Swpkg_UG;Tagging Files;0;tag.files.worksheet;Swpkg.swpkg
2;Swpkg_UG;Selecting Product Files;1;file.browser;Swpkg.swpkg.view.viewPanedWindow.viewForm.\
&nbsp;leftForm.filesBody.addBody.FileListAdd.selectionGrid
0;Swpkg_UG;Setting the Browsing Directory;2;file.browser.dirfield;Swpkg.swpkg.view.\
&nbsp;viewPanedWindow.viewForm.leftForm.filesBody.addBody.FileListAdd.directoryLabel;Swpkg.swpkg.\
&nbsp;view.viewPanedWindow.viewForm.leftForm.filesBody.addBody.FileListAdd.directoryTextField
0;Swpkg_UG;Selecting Files From the File List;2;file.browser.filelist;Swpkg.swpkg.view.\
&nbsp;viewPanedWindow.viewForm.leftForm.filesBody.addBody.FileListAdd.scrolledWindow.filesList;\
&nbsp;Swpkg.swpkg.view.viewPanedWindow.viewForm.leftForm.filesBody.addBody.FileListAdd.\
&nbsp;scrolledWindow.VertScrollBar
</CODE>
<NOTE><PREFIX>Note</PREFIX>The backslashes (\) indicate linewraps; they do not actually appear in the helpmap file. Each helpmap entry must be a single line.</NOTE>
<PARAGRAPH>In the example above, the first entry is a task-oriented topic (2 in the <VARIABLE>type</VARIABLE> field). <COMMAND>swpkg</COMMAND> parses the helpmap file to create its Help menu, so &ldquo;Tagging Files&rdquo; appears as a selection. The second entry is also a task-oriented topic. It's a sub-topic of the first entry and appears in a submenu off the &ldquo;Tagging Files&rdquo; selection. The last two entries are marked as context-sensitive only (0 in the <VARIABLE>type</VARIABLE> field). These entries don't appear anywhere in the application's Help menu, but they do appear as sub-sub-topics in the Help Index window. Also note that the last two entries have two widget specifications, providing context-sensitive help for two different widgets.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>The order of the entries in the application helpmap file determines the order in which help topics appear in the Help Index window.</NOTE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="82992">Example of Helpmap Entry to Access a Web Browser</TITLE><PARAGRAPH>You can put an entry into a helpmap file to launch a Web browser and access a URL. An example entry in the showcase <INDEXTARGET ID="09.SGIHelp19"><!-- POSTPROCESSDATA: 09.SGIHelp19|help:helpmap URLhelp:launch browserhelp:Web accesshelp:URL accessURL:access in helpmap filebrowser:launch in Help --><FILENAME>helpmap</FILENAME> file looks like this:</PARAGRAPH>
<CODE>
2;HREF=http://www.sgi.com/Products/SGIHelp_Hub/Showcase_3.3.2.html;\
Showcase Web Page;0;showcase_web;Showcase3D.showcase2;ShowcaseUG;\
About Gizmos;0;about_gizmo;Showcase3D.showcase
</CODE>
<NOTE><PREFIX>Note</PREFIX>The backslashes (\) indicate linewraps; do not actually enter them in the helpmap file. Each helpmap entry must be a single line.</NOTE>
<PARAGRAPH>When SGIhelp encounters this type of entry, it uses a Web browser such as Netscape (or $WEBBROWSER) to show the URL specified by the entry. </PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="10425">Widget Hierarchies in the Helpmap File</TITLE><PARAGRAPH>At least one widget hierarchy must accompany every point in the application helpmap file. That one (default) point should be set to &ldquo;<INDEXTARGET ID="09.SGIHelp20"><!-- POSTPROCESSDATA: 09.SGIHelp20|help:widgets and helpmaphelp:widget hierarchies --><VARIABLE>application_classname</VARIABLE>.<VARIABLE>top-level_shell</VARIABLE>&rdquo;.</PARAGRAPH>
<PARAGRAPH>Note that the application class name must always be the first component of a widget hierarchy string. All widget ID's within the string must be delimited by a period ( . ).</PARAGRAPH>
<PARAGRAPH>Widget hierarchies can be as fine-grained as you wish to make them. A fall-back algorithm is in place (to go to the closest available entry) when the user clicks a widget in context-sensitive help mode. For example, suppose your application includes a row or set of buttons. When the user asks for help on a button, you pass that widget string to SGIHelp. If the widget string is not found in the mappings, the last widget is dropped off the string (in this case, the widget ID for the button itself). The new string is compared to all available mappings. This loop continues until something is found. At the very least, you should fall back to an &ldquo;Overview&rdquo; card.</PARAGRAPH>
<PARAGRAPH>To get a sample widget hierarchy (help message) from an application, you can run the SGIHelp help server process in debug mode. Before doing this, you need to add the SGIHelp API call, <FUNCTION>SGIHelpMsg()</FUNCTION>, to your application and implement context-sensitive help. Make sure that you send a widget hierarchy string for the &ldquo;key&rdquo; parameter in the <FUNCTION>SGIHelpMsg()</FUNCTION> call. (See &ldquo;Providing Context-Sensitive Help within an Application&rdquo; and &ldquo;Understanding Available Calls&rdquo; for details on this call.)</PARAGRAPH>
<PARAGRAPH>To get a sample widget hierarchy from an application that implements context-sensitive help, follow these steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Bring up a shell.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Make sure the help server process isn't running. Type:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>/etc/killall sgihelp</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Type the following to make the help server process run in the foreground in debug mode:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>/usr/sbin/sgihelp -f -debug</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Run your application, and then choose &ldquo;Click for Help&rdquo; from the help menu. The cursor should change into a question mark (?), or whatever cursor you've implemented for context sensitive help.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Click a widget or an area of the application.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Check the shell from which SGIHelp is being run. You should see a line such as:</PARAGRAPH>
<CODE>
REQUEST= client="Overview" command="view" book="" 
&nbsp;&nbsp;&nbsp;keyvalue="DesksOverview.MainView.Frame.viewport.Bboard"
&nbsp;&nbsp;&nbsp;separator="." user_data=""
</CODE>
<PARAGRAPH>The &ldquo;keyvalue&rdquo; field contains the widget hierarchy that you can add to the helpmap file. Remember to add the application class name to the front of the string. For the example above, the full widget hierarchy string would be:</PARAGRAPH>
<EXAMPLE>
Overview.DesksOverview.MainView.Frame.viewport.Bboard 
</EXAMPLE>
</LIST>
</ORDEREDLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="67544">Writing the Online Help</TITLE><PARAGRAPH>This section describes how you prepare the online help document. It provides an explanation of the standard format you must use, as well as the steps you take to actually prepare the file. Topics include:<INDEXTARGET ID="09.SGIHelp21"><!-- POSTPROCESSDATA: 09.SGIHelp21|help:writingwriting help:<ITALICS>See</ITALICS> helpcreating help:<ITALICS>See</ITALICS> help --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="49493" TYPE="TITLE">&ldquo;Overview of Help Document Files&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="39625" TYPE="TITLE">&ldquo;Viewing the Sample Help Document Files&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="26529" TYPE="TITLE">&ldquo;Creating a Help Document File&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="29476" TYPE="TITLE">&ldquo;Preparing to Build the Online Help&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="23960" TYPE="TITLE">&ldquo;Building the Online Help&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="68072" TYPE="TITLE">&ldquo;Finding and Correcting Build Errors&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>For guidelines on structuring and writing your online help text, see <EXTREF IDREF="26928" BOOK="UI_Glines" FILE="" HDG="26928" INFO="">&ldquo;Writing Online Help Content for SGIHelp&rdquo; in Chapter&nbsp;4</EXTREF>
 of the <DOCTITLE>IRIX Interactive User Interface Guidelines</DOCTITLE>.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="49493">Overview of Help Document Files</TITLE><PARAGRAPH>Help document files contain the actual help text in <INDEXTARGET ID="09.SGIHelp22"><!-- POSTPROCESSDATA: 09.SGIHelp22|help:writing overview --><ITALICS>Standard Generalized Markup Language</ITALICS> (SGML) format. When you write the online help for your product, you need to embed SGML tags to describe the structure of your document.</PARAGRAPH>
<PARAGRAPH>The file <INDEXTARGET ID="09.SGIHelp23"><!-- POSTPROCESSDATA: 09.SGIHelp23|help:writing samples --><FILENAME>/usr/share/Insight/XHELP/samples/sampleDoc/sample.sgm</FILENAME> is an example of a file with embedded SGML tags. (<XREF IDREF="61943" TYPE="TEXT">Example&nbsp;C-1</XREF> also lists this file.) Notice the tags surrounded by angle brackets (&lt;>). These tags describe how each item fits into the structure of the overall document. For example, a paragraph might be tagged as a list item, and a word within that paragraph may be tagged as a command.</PARAGRAPH>
<PARAGRAPH>The <INDEXTARGET ID="09.SGIHelp24"><!-- POSTPROCESSDATA: 09.SGIHelp24|help:DTD --><ITALICS>Document Type Definition</ITALICS> (DTD) outlines the tagging rules for your online documentation. In other words, it specifies which SGML tags are allowed, and in what combination or sequence. The file <FILENAME>/usr/share/Insight/XHELP/dtd/XHELP.dtd</FILENAME> lists the legal structure for your online help.</PARAGRAPH>
<PARAGRAPH>A DTD can be difficult to read, so you might instead want to look at the file <FILENAME>/usr/share/Insight/XHELP/samples/XHELP_elements/XHELP_elements.sgm</FILENAME>, which lists the legal elements in a help document and describes when to use them in your documents. (<XREF IDREF="39308" TYPE="TEXT">Example&nbsp;C-2</XREF> also lists this file.)</PARAGRAPH>
<PARAGRAPH>For a more complete understanding of SGML, refer to the bibliography in <XREF IDREF="36112" TYPE="TITLE">&ldquo;Bibliography of SGML References&rdquo;</XREF>. It lists several of the many books on SGML.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="39625">Viewing the Sample Help Document Files</TITLE><PARAGRAPH>Before beginning to write your own help documents, you might find it helpful to examine the source of the sample help documents and then view resulting online versions. You can compile and view the help documents in Insight. To do so, follow these steps:<INDEXTARGET ID="09.SGIHelp25"><!-- POSTPROCESSDATA: 09.SGIHelp25|help:examples --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Go to a directory in which you want to build the sample help book.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Copy the necessary directories and files by entering:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>cp -r /usr/share/Insight/XHELP/samples</USERINPUT>&space;<USERINPUT>.</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Enter: </PARAGRAPH>
<EXAMPLE>
% <USERINPUT>cd samples/sampleDoc</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Build the file <FILENAME>sample.sgm</FILENAME> by entering:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>make help</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>To view this file, enter:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>iiv -b . -v sample</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Change to the <FILENAME>exampleApp</FILENAME> directory by entering:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>cd ../exampleApp</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>Build the file <FILENAME>exampleAppXmHelp.sgm</FILENAME> by entering:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>make help</USERINPUT>&space;
</EXAMPLE>
</LIST>
<LIST><PARAGRAPH>To view this file, enter:</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>iiv -b . -v exampleAppXmHelp</USERINPUT>&space;
</EXAMPLE>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="26529">Creating a Help Document File</TITLE><PARAGRAPH>To create the help document file for your application:<INDEXTARGET ID="09.SGIHelp26"><!-- POSTPROCESSDATA: 09.SGIHelp26|help:creating files --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Create a new directory for the online help, then go to this directory.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Create a text file and name the file &ldquo;<FILENAME>title</FILENAME>.sgm&rdquo;, where <VARIABLE>title</VARIABLE> is one word that identifies the online help.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Write the online help.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>You can include figures as described in the example help documents. If your document contains figures, create a subdirectory named either <FILENAME>figures</FILENAME> or <FILENAME>online</FILENAME> in your help document directory and put all of your document's figures in that subdirectory.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="29476">Preparing to Build the Online Help</TITLE><PARAGRAPH>After writing your online help you must <INDEXTARGET ID="09.SGIHelp27"><!-- POSTPROCESSDATA: 09.SGIHelp27|help:buildinghelp:compilinghelp:Makefilehelp:spec file --><ITALICS>build</ITALICS> it, similarly to the way you compile a program. When you build the online help, you transform the raw SGML file into a viewable, online document. To get started, you need to create two files: a Makefile and a spec file. </PARAGRAPH>
<PARAGRAPH>The Makefile specifies:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>the name of file that contains the online help</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the name you want to assign to the help book</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the version number of the product</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The spec file specifies:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>the title of your product</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the official release and version numbers</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>other information that is used when you create the final, installable images</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>To create these files, follow these steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Go to the directory that contains the online help file.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Copy <FILENAME>/usr/share/Insight/XHELP/templates/Makefile_xhelp</FILENAME> by typing:</PARAGRAPH>
<CODE>
<USERINPUT>cp /usr/share/Insight/XHELP/templates/Makefile_xhelp Makefile</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Copy <FILENAME>/usr/share/Insight/XHELP/templates/spec_xhelp</FILENAME> by typing:</PARAGRAPH>
<CODE>
<USERINPUT>cp /usr/share/Insight/XHELP/templates/spec_xhelp spec</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Edit the Makefile:</PARAGRAPH>
<BULLETLISTIND><BULLETSQUAREIND><PARAGRAPH>Next to the label TITLE, type the name of the file that contains the online help.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Next to the label FULL_TITLE, type the name you want to assign to the help book. This name can contain several words, and is used only if you decide to display the help as a &ldquo;book&rdquo; on the Insight bookshelf.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Next to the label VERSION, type the version number for the product.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Next to the label HIDDEN, remove the comment character (#) if you want the online help to appear as a book on an Insight bookshelf. Change this if you want users to be able to browse the help information using Insight, and not just from within your application.</PARAGRAPH>
</BULLETSQUAREIND>
</BULLETLISTIND>
</LIST>
<LIST><PARAGRAPH>Edit the spec file:</PARAGRAPH>
<BULLETLISTIND><BULLETSQUAREIND><PARAGRAPH>Replace the string ${RELEASE} with the release number for the product. This should match what you've entered in the Makefile for the VERSION.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Replace the string &lt;ProductName> with a one-word name for the product.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Replace the string &lt;Shortname> with the TITLE you specified in the Makefile.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Replace the string &lt;SHORTNAME> with the TITLE you specified in the Makefile. Capitalize all letters.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Replace the string &lt;SHORTNAME_HELP> with the TITLE followed by &ldquo;_HELP&rdquo;.</PARAGRAPH>
</BULLETSQUAREIND>
<BULLETSQUAREIND><PARAGRAPH>Replace the string &lt;Book title> with the FULL_TITLE you      specified in the Makefile.</PARAGRAPH>
</BULLETSQUAREIND>
</BULLETLISTIND>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>Once you have edited these files, the directory containing your help document should contain:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>your help document</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the <FILENAME>Makefile</FILENAME></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the <FILENAME>spec</FILENAME> file</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>if you included figures in your help document, a subdirectory named either <FILENAME>figures</FILENAME> or <FILENAME>online</FILENAME> containing all of the figures</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>if you created a helpmap file for you application, a subdirectory named <FILENAME>help</FILENAME> containing the helpmap file</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="23960">Building the Online Help</TITLE><PARAGRAPH>Once you have written the online help and done the preparation described in <INDEXTARGET ID="09.SGIHelp28"><!-- POSTPROCESSDATA: 09.SGIHelp28|help:buildinghelp:compiling --><XREF IDREF="29476" TYPE="TITLE">&ldquo;Preparing to Build the Online Help&rdquo;</XREF>, you can build and view the online help. To do so, follow these steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Go to the directory that contains the online help files.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Enter: </PARAGRAPH>
<EXAMPLE>
% <USERINPUT>make help</USERINPUT>&space;
</EXAMPLE>
<PARAGRAPH>If the help is formatted properly, the online help will build. You should see a file called <FILENAME>booklist.txt</FILENAME> and a directory called <FILENAME>books</FILENAME>.</PARAGRAPH>
<PARAGRAPH>If the SGML file contains errors, you will see them displayed in the shell window. See <XREF IDREF="68072" TYPE="TITLE">&ldquo;Finding and Correcting Build Errors&rdquo;</XREF> for details.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>View the book by typing</PARAGRAPH>
<EXAMPLE>
% <USERINPUT>iiv -b . -v </USERINPUT><VARIABLE>title</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>Where <VARIABLE>title</VARIABLE> is the value of TITLE from the Makefile.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="68072">Finding and Correcting Build Errors</TITLE><PARAGRAPH>The SGML tags come in pairs. Each pair contains an opening tag and a closing tag, and the tag applies to everything between the opening tag and the closing tag. If you use these tags incorrectly, you'll get error messages when you build the help file. The most common errors are the result of misspelled tag names, mismatched end tags, or tags used out of sequence.<INDEXTARGET ID="09.SGIHelp29"><!-- POSTPROCESSDATA: 09.SGIHelp29|help:errorshelp:debugginghelp:messages --></PARAGRAPH>
<PARAGRAPH>Some examples of common error messages are:</PARAGRAPH>
<CODE>
mkhelperror: not authorized to add tag 'PAR', ignoring content.
</CODE>
<PARAGRAPH>This error appears if you specify an invalid tag. In this case, the invalid tag is &ldquo;PAR.&rdquo; The valid tag name is &ldquo;PARA.&rdquo;</PARAGRAPH>
<CODE>
mkhelperror: Start-tag for 'HELPLABEL' is not valid in this context.
mkhelp  Location:  Line       37 of entity '#DOCUMENT'
Context:   'hor point for the link
syntax.&lt;/>&amp;#RS;&lt;/HelpTopic>&amp;#RS;&amp;#RS;&lt;Helplabel>'...
&space;            '&lt;Anchor Id="AI003">Using Notes, Warnings or Tips Within a P'
&space;    FQGI:      DOCHELP
</CODE>
<PARAGRAPH>This error message occurs when the parser sees a tag it isn't expecting. In this case it found a HELPLABEL that was not preceded by a HELPTOPIC start tag. The error message specifies the line number of the error (37), the context in the file, and the Fully Qualified Generic Identifier (FQGI) of the context. You can probably ignore the FQGI; it describes where the error occurs within the SGML structure.</PARAGRAPH>
<CODE>
mkhelperror: No 'WARNING' is open, so an end-tag for it is not valid.
The last one was closed at line 46.
mkhelp  Location:  Line       46 of entity '#DOCUMENT'
Context:   '&lt;warning>Missing open para. This is a
warning.&lt;/>&lt;/warning>'...
&space;            '&amp;#RS;&lt;note>&lt;para>For your information, this is a note.&lt;/>&lt;/note'
&space;  FQGI:      DOCHELP,DESCRIPTION,PARA,PARA
</CODE>
<PARAGRAPH>This message can occur if you close items with the generic end tag, &lt;/>. In this case, the &lt;/> closes the &lt;warning> because the start tag for &lt;para> is missing. This may occur if you leave out a start tag or accidentally spell it incorrectly.</PARAGRAPH>
<PARAGRAPH>If you want additional information about the errors, use the command <COMMAND>make verify</COMMAND>. It produces a more detailed error log. </PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="81424">Producing the Final Product</TITLE><PARAGRAPH>This section describes how to package your online help as a subsystem that users can install using Software Manager (<INDEXTARGET ID="09.SGIHelp30"><!-- POSTPROCESSDATA: 09.SGIHelp30|help:packaginghelp:installing --><COMMAND>swmgr</COMMAND>), the Silicon Graphics software installation utility. Topics include:<INDEXTARGET ID="09.SGIHelp31"><!-- POSTPROCESSDATA: 09.SGIHelp31|help:subsystem --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="62065" TYPE="TITLE">&ldquo;Creating the Installable Subsystem&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="77482" TYPE="TITLE">&ldquo;Incorporating the Help Subsystem into a Product With a Custom Installation Script&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="17461" TYPE="TITLE">&ldquo;Incorporating the Help Subsystem into an Installable Product&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="62065">Creating the Installable Subsystem</TITLE><PARAGRAPH>After you've finished writing and building your online help, you need to package it so that users can install it with the rest of your product. To do so:<INDEXTARGET ID="09.SGIHelp32"><!-- POSTPROCESSDATA: 09.SGIHelp32|help:creating installable subsystem --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Go to the directory that contains the online help.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Enter: </PARAGRAPH>
<EXAMPLE>
% <USERINPUT>make images</USERINPUT>&space;
</EXAMPLE>
<PARAGRAPH>This produces a directory called <FILENAME>images</FILENAME>. This directory contains all of the files you need to let users install the online help using Software Manager.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="17461">Incorporating the Help Subsystem into an Installable Product</TITLE><PARAGRAPH>If you use the Software Packager utility (<COMMAND>swpkg</COMMAND>) to package your product so that users can install it using Software Manager, you need to merge the online help subsystem with the rest of your product. Consult the <DOCTITLE>Software Packager User's Guide</DOCTITLE> for detailed instructions for using <COMMAND>swpkg</COMMAND>.</PARAGRAPH>
<PARAGRAPH>You don't need to use <COMMAND>swpkg</COMMAND> to create spec or IDB files for your online help subsystem. By following the instructions in <XREF IDREF="29476" TYPE="TITLE">&ldquo;Preparing to Build the Online Help&rdquo;</XREF>, you created the spec file. The process of building your online help, described in <XREF IDREF="23960" TYPE="TITLE">&ldquo;Building the Online Help&rdquo;</XREF> automatically created an IDB file and tagged the files; set the permissions and destinations; and assigned the necessary attributes. The online help build tools use &ldquo;/&rdquo; as the Source and Destination Tree Root directories when generating the IDB file. (The <DOCTITLE>Software Packager User's Guide</DOCTITLE> defines all of these terms.)</PARAGRAPH>
<PARAGRAPH>If you've not already created the spec and IDB files for the rest of your product using <COMMAND>swpkg</COMMAND>, you can use <COMMAND>swpkg</COMMAND> to open the existing help subsystem spec and IDB files, and expand them as needed to handle the rest of your product. Consult the <DOCTITLE>Software Packager User's Guide</DOCTITLE> for instructions.</PARAGRAPH>
<PARAGRAPH>If you've already created the spec and IDB files for your product, you can merge the help subsystem with the existing files as described in &ldquo;Combining Existing Products Into a Single Product&rdquo; in Chapter&nbsp;7 of the <DOCTITLE>Software Packager User's Guide</DOCTITLE>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="77482">Incorporating the Help Subsystem into a Product With a Custom Installation Script</TITLE><PARAGRAPH>If you don't use <INDEXTARGET ID="09.SGIHelp33"><!-- POSTPROCESSDATA: 09.SGIHelp33|help:custom installationhelp:installation:custom --><COMMAND>swpkg</COMMAND> to package your product for installation with Software Manager, do one of the following.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If users install your product using the <COMMAND>tar</COMMAND> command, have them use <COMMAND>tar</COMMAND> to copy the online help images as well. After copying the images, the user needs to type: </PARAGRAPH>
<EXAMPLE>
# <USERINPUT>inst -af &lt;</USERINPUT><VARIABLE>inst_product</VARIABLE><USERINPUT>></USERINPUT>&space;
</EXAMPLE>
<PARAGRAPH>where <VARIABLE>inst_product</VARIABLE> is the location of the images.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you've created a script, enhance the script so that it extracts all of the help images onto disk, and then invokes the command:</PARAGRAPH>
<EXAMPLE>
# <USERINPUT>inst -af &lt;</USERINPUT><VARIABLE>inst_product</VARIABLE><USERINPUT>> </USERINPUT><USERINPUT></USERINPUT>
</EXAMPLE>
<PARAGRAPH>where <VARIABLE>inst_product</VARIABLE> is the location of the images. </PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="36112">Bibliography of SGML References</TITLE><ORDEREDLIST><LIST><PARAGRAPH>*SoftQuad, Inc. <INDEXTARGET ID="09.SGIHelp34"><!-- POSTPROCESSDATA: 09.SGIHelp34|help:SGML referenceshelp:references --><DOCTITLE>The SGML Primer. SoftQuad's Quick Reference       Guide to the Essentials of the Standard: The SGML Needed for Reading a DTD and Marked-Up Documents and Discussing Them Reasonably</DOCTITLE>. Version 2.0. Toronto: SoftQuad Inc., May 1991. 36 pages. Available from SoftQuad Inc.; 56 Aberfoyle Crescent, Suite 810; Toronto, Ontario; Canada M8X 2W4; TEL: +1 (416) 239-4801; FAX: +1 (416) 239-7105.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Bryan, Martin. <DOCTITLE>SGML: An Author's Guide to the Standard Generalized Markup Language</DOCTITLE>. Wokingham/Reading/New York: Addison-Wesley, 1988. ISBN: 0-201-17535-5 (pbk); LC CALL NO: QA76.73.S44 B79 1988. 380 pages. A highly detailed and useful manual explaining and illustrating features of ISO 8879. The book: (1) shows how to analyze the inherent structure of a document; (2) illustrates a wide variety of markup tags; (3) shows how to design your own tag set; (4) is copiously illustrated with practical examples; (5) covers the full range of SGML features. Technical and non-technical authors, publishers, typesetters and users of desktop publishing systems will find this book a valuable tutorial on the use of SGML and a comprehensive reference to the standard. It assumes no prior knowledge of computing or typography on the part of its readers.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Goldfarb, Charles F. <DOCTITLE>The SGML Handbook</DOCTITLE>. Edited and with a foreword by Yuri Rubinsky. Oxford: Oxford University Press, 1990. ISBN: 0-19-853737-1. 688 pages.   This volume contains the full annotated text of ISO 8879 (with amendments), authored by IBM Senior Systems Analyst and acknowledged &ldquo;father of SGML,&rdquo; Charles Goldfarb. The book was itself produced from SGML input using a DTD which is a variation of the &ldquo;ISO.general&rdquo; sample DTD included in the annexes to ISO 8879. The SGML Handbook includes: (1) the up-to-date amended full text of ISO 8879, extensively annotated, cross-referenced, and indexed; (2) a detailed structured overview of SGML, covering every concept; (3) additional tutorial and reference material; and (4) a unique &ldquo;push- button access system&rdquo; that provides paper hypertext links between the standard, annotations, overview, and tutorials. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Herwijnen, Eric van. <DOCTITLE>Practical SGML</DOCTITLE>. Dordrecht/Hingham, MA: Wolters Kluwer Academic Publishers. 200 pages. ISBN: 0-7923- 0635-X. The book is designed as a &ldquo;practical SGML survival-kit for SGML users (especially authors) rather than developers,&rdquo; and itself constitutes an experiment in SGML publishing. The book provides a practical and painless introduction to the essentials of SGML, and an overview of some SGML applications. See the reviews by (1) Carol Van Ess-Dykema in Computational Linguistics 17/1 (March 1991) 110-116, and (2) Deborah A. Lapeyre in <DOCTITLE>&lt;TAG></DOCTITLE> 16 (October 1990) 12-14.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Smith, Joan M.; Stutely, Robert S. <DOCTITLE>SGML: The Users' Guide to ISO 8879</DOCTITLE>. Chichester/New York: Ellis Horwood/Halsted, 1988. 173 pages. ISBN: 0-7458-0221-4 (Ellis Horwood) and ISBN: 0-470-21126-1 (Halsted). LC CALL NO: QA76.73.S44 S44 1988.   The book (1) supplies a list of some 200 syntax productions, in numerical and alphabetical sequence; (2) gives a combined abbreviation list; (3) includes highly useful subject indices to ISO 8879 and its annexes; (4) supplies graphic representations for the ISO 8879 character entities; and (5) lists SGML keywords and reserved names. An overview of the book may be found in the SGML Users' Group Newsletter 9 (August 1988).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>ISO 8879:1986. <DOCTITLE>Information Processing</DOCTITLE>&mdash;<DOCTITLE>Text and Office System</DOCTITLE>&mdash;<DOCTITLE>Standard Generalized Markup Language (SGML)</DOCTITLE>. International Organization for Standardization. Ref. No. ISO 8879:1986 (E). Geneva/New York, 1986. A subset of SGML became a US FIPS (Federal Information Processing Standard) in 1988. The British Standards Institution adopted SGML as a national standard (BS 6868) in 1987, and in 1989 SGML was adopted by the CEN/CENELEC Standards Committees as a European standard, #28879. Australia has dual numbered versions of ISO 8879 SGML and ISO 9069 SDIF (AS 3514&mdash;SGML 1987; AS 3649&mdash;1990 SDIF).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>ISO 8879:1986 / A1:1988 (E). <DOCTITLE>Information Processing</DOCTITLE>&mdash;<DOCTITLE>Text and Office Systems</DOCTITLE>&mdash;<DOCTITLE>Standard Generalized Markup Language (SGML), Amendment 1</DOCTITLE>. Published 1988-07-01. Geneva: International Organization for Standardization, 1988. </PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
</CHAPTER>

<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<APPENDIX LBL="B"><TITLE><XREFTARGET ID="11243">IRIX sendmail Reference</TITLE><PARAGRAPH>This appendix provides reference material on <COMMAND>sendmail</COMMAND>. It is divided into the following sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="28995" TYPE="TITLE">&ldquo;sendmail Command-Line Flags&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="98529" TYPE="TITLE">&ldquo;Tuning sendmail&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="50753" TYPE="TITLE">&ldquo;About sendmail Configuration File&mdash;sendmail.cf&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="47933" TYPE="TITLE">&ldquo;sendmail Flags, Options, and Files&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="28995">sendmail Command-Line Flags</TITLE><PARAGRAPH>You can include one or more flags on the command line to tailor a <ITALICS>sendmail</ITALICS> session. This section describes some of the more frequently used flags.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="61595" TYPE="TITLE">&ldquo;Changing the Values of sendmail Configuration Options&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="26052" TYPE="TITLE">&ldquo;Specifying the sendmail Delivery Mode&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="93375" TYPE="TITLE">&ldquo;Specifying the sendmail Queue Mode&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="21557" TYPE="TITLE">&ldquo;Specifying the sendmail Daemon Mode&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="45954" TYPE="TITLE">&ldquo;Specifying the sendmail Verification Mode&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="66283" TYPE="TITLE">&ldquo;Specifying the sendmail Test Mode&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="62296" TYPE="TITLE">&ldquo;Specifying the sendmail Debugging Flags&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="52919" TYPE="TITLE">&ldquo;Using Another sendmail Configuration File&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>For a detailed description of command-line flags, see <XREF IDREF="47933" TYPE="TITLE">&ldquo;sendmail Flags, Options, and Files&rdquo;</XREF>.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="61595">Changing the Values of sendmail Configuration Options</TITLE><PARAGRAPH>The <BOLD>-o</BOLD> flag overrides an option in the configuration file. The override is for the current session only.   In the following example, the <BOLD>T</BOLD> (timeout) option becomes two minutes for this session only:</PARAGRAPH>
<EXAMPLE>
/usr/lib/sendmail -oT2m 
</EXAMPLE>
<PARAGRAPH>For a detailed discussion of configuration options, see <XREF IDREF="47933" TYPE="TITLE">&ldquo;sendmail Flags, Options, and Files&rdquo;</XREF>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="26052">Specifying the sendmail Delivery Mode</TITLE><PARAGRAPH>One configuration option frequently overridden on the command line is the <BOLD>d</BOLD> option, which specifies the <ITALICS>sendmail</ITALICS> delivery mode. The delivery mode determines how quickly mail is delivered:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><BOLD>i </BOLD></HANGITEM>
<HANGBODY><PARAGRAPH>Deliver interactively (synchronously)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><BOLD>b </BOLD></HANGITEM>
<HANGBODY><PARAGRAPH>Deliver in background (asynchronously)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><BOLD>q </BOLD></HANGITEM>
<HANGBODY><PARAGRAPH>Queue only (don't deliver)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>There are trade-offs. Mode <BOLD>i</BOLD> passes the maximum amount of information to the sender, but is rarely necessary.     </PARAGRAPH>
<PARAGRAPH>Mode <BOLD>q</BOLD> puts the minimum load on your system, but if you use it, delivery may be delayed for up to the queue interval. </PARAGRAPH>
<PARAGRAPH>Mode <BOLD>b</BOLD> is probably a good compromise. However, in this mode, <ITALICS>sendmail</ITALICS> may initiate a large number of processes if you have a mailer that takes a long time to deliver a message.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="93375">Specifying the sendmail Queue Mode</TITLE><PARAGRAPH>The <BOLD>-q</BOLD> flag causes <ITALICS>sendmail</ITALICS> to process the mail queue at regular intervals. The syntax is as follows, where <ITALICS>time</ITALICS> defines the interval between instances of queue processing:</PARAGRAPH>
<EXAMPLE>
<BOLD>-q</BOLD>&space;[time] 
</EXAMPLE>
<PARAGRAPH>Time is expressed in number of minutes: 15m sets the interval to 15 minutes. If <ITALICS>time</ITALICS> is omitted, <ITALICS>sendmail</ITALICS> processes the queue once and returns. The <BOLD>-q</BOLD> flag is often used in conjunction with daemon mode, described in the next subsection.</PARAGRAPH>
<PARAGRAPH>See <XREF IDREF="62109" TYPE="TITLE">&ldquo;sendmail Timeout and Interval Abbreviations&rdquo;</XREF> for a discussion of time-interval specifications and formats.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="21557">Specifying the sendmail Daemon Mode</TITLE><PARAGRAPH>To process incoming mail over sockets, a daemon must be running. The <BOLD>-bd</BOLD> flag causes <ITALICS>sendmail</ITALICS> to run in daemon mode. The <BOLD>-bd</BOLD> and <BOLD>-q</BOLD> flags can be combined in one call, as in the following example:</PARAGRAPH>
<EXAMPLE>
/usr/lib/sendmail -bd -q30m
</EXAMPLE>
<PARAGRAPH>This command causes <ITALICS>sendmail</ITALICS> to run in daemon mode and to fork a subdaemon for queue processing every half hour.</PARAGRAPH>
<PARAGRAPH>The script for starting <ITALICS>sendmail</ITALICS> that is provided with IRIX includes the following command line:</PARAGRAPH>
<EXAMPLE>
/usr/lib/sendmail -bd -q15m
</EXAMPLE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="45954">Specifying the sendmail Verification Mode</TITLE><PARAGRAPH>Using the <BOLD>-bv</BOLD> flag directs <ITALICS>sendmail</ITALICS> to validate addresses, aliases, and mailing lists. In this mode, <ITALICS>sendmail</ITALICS> performs verification only. It does not try to collect or deliver a message. <ITALICS>sendmail</ITALICS> expands all aliases, suppresses duplicates, and displays the expanded list of names. For each name, <ITALICS>sendmail</ITALICS> indicates if it knows how to deliver a message to that destination.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="66283">Specifying the sendmail Test Mode</TITLE><PARAGRAPH>The <BOLD>-bt</BOLD> flag places <ITALICS>sendmail</ITALICS> in test mode so that it describes how the current configuration rewrites addresses. Test mode is extremely useful for debugging modifications to the <ITALICS>/usr/lib/sendmail.cf</ITALICS> configuration file. For more information, see <XREF IDREF="82975" TYPE="TITLE">&ldquo;Testing the Rewrite Rules in Test Mode&rdquo;</XREF>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="62296">Specifying the sendmail Debugging Flags</TITLE><PARAGRAPH>Several debugging flags are built into <ITALICS>sendmail. </ITALICS>Each flag includes a number and a level. The number identifies the debugging flag. The level, which defaults to 1, dictates how much information prints. A low level causes minimal information to print; a high level causes more comprehensive information to print. In general, levels greater than 9 cause so much information to print that it is of limited value. Debugging flags use the following syntax:</PARAGRAPH>
<EXAMPLE>
-d&space;debug-list&space;
</EXAMPLE>
<PARAGRAPH>A debug list includes the flag number and the flag level, as shown in the following examples:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Set flag 13 to level 1.</PARAGRAPH>
<PARAGRAPH><BOLD>-d13</BOLD>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Set flag 13 to level 3.</PARAGRAPH>
<PARAGRAPH><BOLD>-d13.3</BOLD>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Set flags 5 though 18 to level 1.</PARAGRAPH>
<PARAGRAPH><BOLD>-d5-18</BOLD>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Set flags 5 through 18 to level 4.</PARAGRAPH>
<PARAGRAPH><BOLD>-d5-18.4</BOLD>&space;</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Many debugging flags are of little use to the average <ITALICS>sendmail</ITALICS> user. Some are occasionally useful for helping to track down obscure problems. <XREF IDREF="47933" TYPE="TITLE">&ldquo;sendmail Flags, Options, and Files&rdquo;</XREF> includes a list of common debugging flags.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="52919">Using Another sendmail Configuration File</TITLE><PARAGRAPH>The <ITALICS>-C</ITALICS> flag directs <ITALICS>sendmail</ITALICS> to use an alternate configuration file. For example, the following line directs <ITALICS>sendmail</ITALICS> to use the <ITALICS>test.cf</ITALICS> file instead of the default <ITALICS>/usr/lib/sendmail.cf</ITALICS> file:</PARAGRAPH>
<EXAMPLE>
/usr/lib/sendmail -Ctest.cf 
</EXAMPLE>
<PARAGRAPH>If the <ITALICS>-C</ITALICS> flag appears without a filename, <ITALICS>sendmail</ITALICS> uses the file <ITALICS>sendmail.cf</ITALICS> in the current directory. Thus, the <ITALICS>-C</ITALICS> flag directs <ITALICS>sendmail</ITALICS> to ignore any <ITALICS>/usr/lib/sendmail.fc</ITALICS> (&ldquo;frozen&rdquo;) file that may be present.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="98529">Tuning sendmail</TITLE><PARAGRAPH>A number of configuration parameters are available for fine-tuning <ITALICS>sendmail</ITALICS> to the requirements of a specific site. Options in the configuration file set these parameters. For example, the string <CMDLINEOPT>T3d</CMDLINEOPT> sets the <KEYWORD>T</KEYWORD> (timeout) option to <CMDLINEOPT>3d</CMDLINEOPT> (three days). For other sendmail timeout abbreviations see <XREF IDREF="62109" TYPE="TITLE">&ldquo;sendmail Timeout and Interval Abbreviations&rdquo;</XREF>.</PARAGRAPH>
<PARAGRAPH>Most options have default values that are appropriate for many sites. However, sites having very high mail loads may need to tune these parameters to fit the mail load. In particular, sites with a large volume of small messages that are delivered to multiple recipients may need to adjust the parameters for queue priorities.</PARAGRAPH>
<PARAGRAPH>The rest of this section describes the configuration parameters for the following tuning areas:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="62109" TYPE="TITLE">&ldquo;sendmail Timeout and Interval Abbreviations&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="50656" TYPE="TITLE">&ldquo;Setting the sendmail Message Queue Interval&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="94390" TYPE="TITLE">&ldquo;Setting the sendmail Read Timeouts&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="59846" TYPE="TITLE">&ldquo;Setting the sendmail Queued Message Timeouts&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="67307" TYPE="TITLE">&ldquo;Forking During sendmail Mail Queue Runs&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="10921" TYPE="TITLE">&ldquo;About sendmail Queue Priorities&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="90950" TYPE="TITLE">&ldquo;About sendmail Load Limiting&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="50978" TYPE="TITLE">&ldquo;About sendmail Log Level&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="62109">sendmail Timeout and Interval Abbreviations</TITLE><PARAGRAPH>Time intervals use the following abbreviations:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>s </HANGITEM>
<HANGBODY><PARAGRAPH>Seconds</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>m </HANGITEM>
<HANGBODY><PARAGRAPH>Minutes</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>h </HANGITEM>
<HANGBODY><PARAGRAPH>Hours</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>d </HANGITEM>
<HANGBODY><PARAGRAPH>Days</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>w </HANGITEM>
<HANGBODY><PARAGRAPH>Weeks</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>For example, &ldquo;10m<ITALICS>&rdquo;</ITALICS> represents 10 minutes, and &ldquo;2h30m<ITALICS>&rdquo; </ITALICS>represents two hours and 30&nbsp;minutes.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="50656">Setting the sendmail Message Queue Interval</TITLE><PARAGRAPH>The argument to the <BOLD>-q</BOLD> flag specifies how often to process the mail queue. When the <ITALICS>sendmail</ITALICS> daemon is started with the <ITALICS>/etc/init.d/mail</ITALICS> script, the queue interval is set to 15 minutes.</PARAGRAPH>
<PARAGRAPH>If <ITALICS>sendmail</ITALICS> runs in delivery mode <BOLD>b</BOLD>, messages are written to the queue only when they cannot be delivered (for example, when a recipient host is down). Therefore, the need to process the queue is limited and the queue interval value may be set quite high. The value is relevant only when a host that was down comes back up. </PARAGRAPH>
<PARAGRAPH>If <ITALICS>sendmail</ITALICS> runs in delivery mode <BOLD>q</BOLD>, the queue interval should be set to a low value, as it defines the longest time that a message sits in the local queue before being processed.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="94390">Setting the sendmail Read Timeouts</TITLE><PARAGRAPH><ITALICS>sendmail</ITALICS> can time out when reading the standard input or when reading from a remote SMTP server. Technically, a timeout is not acceptable within the published protocols. However, setting the read timeout option to a high value (such as an hour) reduces the chance that a large number of idle daemons will pile up on a system. The read timeout option is specified as:</PARAGRAPH>
<EXAMPLE>
<BOLD>r</BOLD><VARIABLE>timeout.suboption=value</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH><BOLD>where </BOLD><CMDLINEOPT>timeout</CMDLINEOPT><BOLD>&space;is specified in the standard </BOLD><FILENAME>sendmail</FILENAME><BOLD>&space;timeout manner indicated in </BOLD><XREF IDREF="62109" TYPE="TITLE">&ldquo;sendmail Timeout and Interval Abbreviations&rdquo;</XREF><BOLD>. The following suboptions broaden the scope of the read timeout:</BOLD></PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="B-1"><PREFIX>Table B-1 </PREFIX>&space;<EMPHASIS>(continued)        </EMPHASIS>Suboptions of sendmail Read Timeouts</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="126"><PARAGRAPH>Suboption</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Description</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>command</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for the next command</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>connect</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for the connect(2) to return</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>datablock</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for each DATA block to read</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>datafinal</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for acknowledgment of final dot</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>datainit</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for data acknowledgment</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>fileopen</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for an NFS file to open</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>helo</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for HELO or EHLO</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>hoststatus</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Duration of host status</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>iconnect</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for the first connect (2)</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>initial</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for the initial greeting message</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>mail</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for MAIL acknowledgment</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>misc</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for other SMTP commands</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>queuereturn</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Bounce if still undelivered</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>queuewarn</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Warn if still undelivered</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>quit</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for QUIT acknowledgment</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>rcpt</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for RCPT acknowledgment</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="126"><PARAGRAPH>rset</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="184"><PARAGRAPH>Wait for RSET acknowledgment</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="59846">Setting the sendmail Queued Message Timeouts</TITLE><PARAGRAPH><ITALICS>sendmail</ITALICS> causes a queued message to time out after a specified time period. This feature ensures that the sender knows the message cannot be delivered. This default message timeout value is one week (seven days). The value is set with the <KEYWORD>T</KEYWORD> option.</PARAGRAPH>
<PARAGRAPH>The queue records the time of submission, rather than the time remaining until timeout. This approach enables <ITALICS>sendmail</ITALICS> to flush messages that have been hanging for a short period by running the queue with a short message timeout. The following example illustrates how to process the queue and flush any message that is one day old:</PARAGRAPH>
<EXAMPLE>
/usr/lib/sendmail -oT1d -q 
</EXAMPLE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="67307">Forking During sendmail Mail Queue Runs</TITLE><PARAGRAPH>Setting the <KEYWORD>Y</KEYWORD> option causes <ITALICS>sendmail</ITALICS> to fork before each individual message when processing the queue. This technique prevents <ITALICS>sendmail</ITALICS> from consuming large amounts of memory, and may be useful in memory-poor environments. However, if the <KEYWORD>Y</KEYWORD> option is not set, <ITALICS>sendmail</ITALICS> keeps track of hosts that are down during a queue run, which can improve performance dramatically.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="10921">About sendmail Queue Priorities</TITLE><PARAGRAPH><ITALICS>sendmail</ITALICS> assigns a priority to every message when it is first instantiated. <ITALICS>sendmail</ITALICS> uses the priority and the message creation time (in seconds since January 1, 1970) to order the queue. The message with the lowest priority number is processed first. The algorithm that derives a message's priority uses the following information:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>message size (in bytes) </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Small messages receive lower priorities than large messages, increasing the efficiency of the queue. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>message class</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;If the user includes a Precedence: field and value in a message, <ITALICS>sendmail</ITALICS> uses the value to select the message class from the configuration file. (Typical values might be &ldquo;first-class&rdquo; or &ldquo;bulk.&rdquo;) </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>class work factor </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;This factor is set in the configuration file with the <KEYWORD>z</KEYWORD> option; its default value is 1800.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>number of recipients </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The number of recipients affects the load a message presents to the system. A message with a single recipient has a lower priority than one with a long recipient list.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>recipient work factor </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;This factor is set in the configuration file with the <KEYWORD>y</KEYWORD> option; its default value is 1000.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The priority algorithm is as follows:</PARAGRAPH>
<EXAMPLE>
priority=message_size-(message_class * z)+(num_recipients * y)
</EXAMPLE>
<PARAGRAPH>After assigning message priorities, <ITALICS>sendmail</ITALICS> orders the queue by using the following formula:</PARAGRAPH>
<EXAMPLE>
ordering = priority + creation_time
</EXAMPLE>
<PARAGRAPH>A message's priority can change each time an attempt is made to deliver it. The &ldquo;work time factor&rdquo; (set with the <KEYWORD>Z</KEYWORD> option) is a value that increments the priority, on the assumption that a message that has failed many times will tend to fail in the future.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="90950">About sendmail Load Limiting</TITLE><PARAGRAPH><ITALICS>sendmail</ITALICS> can queue (and not attempt to deliver) mail if the system load average exceeds a specified maximum. The <ITALICS>x</ITALICS> option defines this maximum limit. When the load average exceeds the maximum, <ITALICS>sendmail</ITALICS> tests each message's priority by using the following algorithm, where <ITALICS>q</ITALICS> is the value associated with the <KEYWORD>q</KEYWORD> option, and <ITALICS>x</ITALICS> is the value associated with the <KEYWORD>x</KEYWORD> option:</PARAGRAPH>
<EXAMPLE>
q&space;/&space;(load_average&space;-<VARIABLE>&space;x </VARIABLE>+ 1)
</EXAMPLE>
<PARAGRAPH>In IRIX <ITALICS>sendmail,</ITALICS> the algorithm is modified slightly. The number of child processes forked by the <ITALICS>sendmail</ITALICS> daemon is added to the load average. Thus, a host with a load average of 1 but with 6 forked <ITALICS>sendmail</ITALICS> processes has an effective load average of 7. This can be disabled by appending &ldquo;,l&rdquo;(comma, lowercase L) to the value assigned to the <CMDLINEOPT>x</CMDLINEOPT> option, for example: 0<VARIABLE>x</VARIABLE>25,l.</PARAGRAPH>
<PARAGRAPH>After the final load average is calculated, <ITALICS>sendmail</ITALICS> compares it to the message priority for each message. If the priority is greater, <ITALICS>sendmail</ITALICS> sets the delivery mode to <KEYWORD>q</KEYWORD> (queue only).</PARAGRAPH>
<PARAGRAPH>The default value for the <KEYWORD>q</KEYWORD> option is 10000; each point of load average is worth 10000 priority points. The <KEYWORD>X</KEYWORD> option defines the load average at which <ITALICS>sendmail</ITALICS> refuses to accept network connections. Locally generated mail (including incoming UUCP mail) is still accepted.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="50978">About sendmail Log Level</TITLE><PARAGRAPH><ITALICS>sendmail</ITALICS> provides a comprehensive error- and event-logging capability. The <KEYWORD>L</KEYWORD> (log level) option in the configuration file determines the level of detail written to the log. The default value for the log level is 1; valid levels are as follows:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>0 </HANGITEM>
<HANGBODY><PARAGRAPH>No logging</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>1 </HANGITEM>
<HANGBODY><PARAGRAPH>Major problems only </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>2 </HANGITEM>
<HANGBODY><PARAGRAPH>Message collections and failed deliveries</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>3 </HANGITEM>
<HANGBODY><PARAGRAPH>Successful deliveries </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>4 </HANGITEM>
<HANGBODY><PARAGRAPH>Messages being deferred (because a host is down, for example)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>5 </HANGITEM>
<HANGBODY><PARAGRAPH>Normal message queue-ups</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>6 </HANGITEM>
<HANGBODY><PARAGRAPH>Unusual but benign incidents, such as trying to process a locked queue file</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>9 </HANGITEM>
<HANGBODY><PARAGRAPH>Log internal queue ID to external message ID mappings; useful for tracing a message as it travels among several hosts</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>12 </HANGITEM>
<HANGBODY><PARAGRAPH>Several messages of interest when debugging</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>16 </HANGITEM>
<HANGBODY><PARAGRAPH>Verbose information regarding the queue</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>20</HANGITEM>
<HANGBODY><PARAGRAPH>Attempts to run a locked queue file</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21 </HANGITEM>
<HANGBODY><PARAGRAPH>Monitor load average computation and process counting</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="50753">About sendmail Configuration File&mdash;sendmail.cf</TITLE><PARAGRAPH>This section begins with an overview of the configuration file, describes its semantics in detail, and includes hints on writing a customized version. Admittedly, the file's syntax is not easy to read or write. A more important design criterion is that the syntax be easy to parse, because it must be parsed each time <ITALICS>sendmail</ITALICS> starts up. </PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="28939">sendmail Configuration File Syntax</TITLE><PARAGRAPH>The configuration file is a series of lines, each of which begins with a character that defines the semantics for the rest of the line. A line beginning with a space or a tab is a continuation line (although the semantics are not well defined in many places). A blank line or a line beginning with the number symbol (#) is a comment. The following commands are described:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="50912" TYPE="TITLE">&ldquo;sendmail Configuration File Rewriting Rules&mdash;S and R Commands&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="85688" TYPE="TITLE">&ldquo;sendmail Configuration File Define Macro&mdash;D Command&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="49489" TYPE="TITLE">&ldquo;sendmail Configuration File Define Classes&mdash;C and F Commands&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="91926" TYPE="TITLE">&ldquo;sendmail Configuration File Define Mailer&mdash;Command (M)&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="59285" TYPE="TITLE">&ldquo;sendmail Configuration File Define Header&ndash;Command (H)&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="22672" TYPE="TITLE">&ldquo;sendmail Configuration File Set Option&mdash;Command (O)&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="55666" TYPE="TITLE">&ldquo;sendmail Configuration File Define Trusted Users&mdash;Command (T)&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="35730" TYPE="TITLE">&ldquo;sendmail Configuration File Define Precedence&mdash;Command (P)&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="64080" TYPE="TITLE">&ldquo;sendmail Configuration File Define Keyed Files&mdash;Command (K)&rdquo;</XREF>.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="50912">sendmail Configuration File Rewriting Rules&mdash;S and R Commands</TITLE><PARAGRAPH>The rewriting rules are the core of address parsing. These rules form an ordered production system. During parsing, <ITALICS>sendmail</ITALICS> scans the set of rewriting rules, looking for a match on the left-hand side (ls) of the rule. When a rule matches, the address is replaced by the right-hand side (rhs) of the rule.</PARAGRAPH>
<PARAGRAPH>The rewriting rules are grouped into sets of one or more rules. Each set has an integer identifier called a <ITALICS>rule</ITALICS>&space;<ITALICS>set</ITALICS>&space;<ITALICS>number</ITALICS>. Each rule set acts like a subroutine: When the set is called, each rule is scanned in sequence until all rules have been scanned or until the rule set returns to the caller. </PARAGRAPH>
<PARAGRAPH>Some rule sets are used internally and have specific semantics. Others do not have specifically assigned semantics and can be referenced by mailer definitions or by other rule sets.</PARAGRAPH>
<PARAGRAPH>Each rule set begins with an <KEYWORD>S</KEYWORD> command, with the syntax </PARAGRAPH>
<EXAMPLE>
Sn&space;
</EXAMPLE>
<PARAGRAPH>where <ITALICS>n</ITALICS> is the rule set identifier, an integer between 0 and 99. If the same rule set identifier is used more than once in a configuration file, the last definition is the one used.</PARAGRAPH>
<PARAGRAPH>Each line within the rule set begins with an <KEYWORD>R</KEYWORD> command and defines a rewrite rule. <KEYWORD>R</KEYWORD> commands have the syntax </PARAGRAPH>
<EXAMPLE>
Rlhs&space;rhs&space;[comments]
</EXAMPLE>
<PARAGRAPH>where the following conditions exist: </PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The fields are separated by at least one tab character; embedded spaces with a field are acceptable. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Any input matching the <ITALICS>lhs</ITALICS> pattern is rewritten according to the <ITALICS>rhs</ITALICS> pattern.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Comments, if any, are ignored.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="85688">sendmail Configuration File Define Macro&mdash;D Command</TITLE><PARAGRAPH>The <KEYWORD>D</KEYWORD> command names a macro and defines its content. A macro name can be either a single character (x) or a {macro}. <ITALICS>sendmail</ITALICS> defines several internal macros of its own. To avoid conflicts, use uppercase letters for all user-defined macros. Lowercase letters and special characters are reserved for system use. (A list of <ITALICS>sendmail</ITALICS>'s internally defined macros appears under the topic <XREF IDREF="20648" TYPE="TITLE">&ldquo;sendmail Configuration File Special Macros and Conditionals&rdquo;</XREF>.)</PARAGRAPH>
<PARAGRAPH>The Define Macro command takes one of the following forms:</PARAGRAPH>
<EXAMPLE>
Dx<VARIABLE>Value</VARIABLE>&space;
Dx<VARIABLE>|shell_command [arguments]</VARIABLE>&space;
D<VARIABLE>{macro}Value</VARIABLE>&space;
D<VARIABLE>{macro}|shell_command [arguments]</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>where <ITALICS>x</ITALICS> or<VARIABLE>&space;{macro} </VARIABLE>is the name of the macro. The first form defines the macro to contain <ITALICS>Value.</ITALICS> The second form defines the macro as the first line seen on <ITALICS>stdout</ITALICS> of the specified shell command. The vertical bar must immediately follow the macro identifier; no white space is permitted. The remainder of the line is interpreted as arguments to the shell command. </PARAGRAPH>
<PARAGRAPH>Macros can be interpolated in most places by means of the escape sequence $x.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX><ITALICS>sendmail</ITALICS> does not honor comments on macro definition lines. For example, the following line defines the D macro as <SCREENDISPLAY>foo.com # my domain name</SCREENDISPLAY>: </NOTE>
<EXAMPLE>
DDfoo.com        # my domain name
</EXAMPLE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="49489">sendmail Configuration File Define Classes&mdash;C and F Commands</TITLE><PARAGRAPH>The <KEYWORD>C</KEYWORD> command defines classes of words to match on the left-hand side of rewriting rules, where a &ldquo;word&rdquo; is a sequence of characters. A class name is a single uppercase letter, or <VARIABLE>{macro}</VARIABLE>. A class might define a site's local names and be used to eliminate attempts to send to oneself. Classes can be defined either directly in the configuration file or by being read in from a pipe or other file. The sequence cannot contain characters used as &ldquo;operators&rdquo; in addresses. (Operators are defined with the $o macro.) </PARAGRAPH>
<PARAGRAPH>The <KEYWORD>C</KEYWORD> command takes one of the following forms:</PARAGRAPH>
<EXAMPLE>
C<VARIABLE>X word1 [word2 ...]</VARIABLE>&space;
C<VARIABLE>X $x [$y ...]</VARIABLE>&space;
C<VARIABLE>{macro} word1 [word2 ...]</VARIABLE>&space;
C<VARIABLE>{macro} $x [$y ...]</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>where <ITALICS>X</ITALICS> or<ITALICS>&space;{macro} </ITALICS>is the class name. The first form defines the class to match any of the named words. The second form reads the elements of the class from the expansion of the listed macros. The macros to be expanded must be leftmost in each token. Only one macro can be expanded per token. Any remainder in a token following a macro expansion is added as a separate token.</PARAGRAPH>
<PARAGRAPH>The <KEYWORD>F</KEYWORD> command defines a file from which to read the elements of a class, and takes one of the following forms:</PARAGRAPH>
<EXAMPLE>
F<VARIABLE>X file [format]</VARIABLE>&space;
F<VARIABLE>X</VARIABLE>|<VARIABLE>shell_command [arguments]</VARIABLE>&space;
F<VARIABLE>{macro}file [format]</VARIABLE>&space;
F<VARIABLE>{macro}</VARIABLE>|<VARIABLE>shell_command [arguments]</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>The first form reads the elements of the class from the named file. If an optional format argument is present, it is passed as the control string to an <FUNCTION>sscanf()</FUNCTION> call and applied to each input line read from the named file, thus:</PARAGRAPH>
<EXAMPLE>
sscanf(const char *line, const char *format, char *new-element);
</EXAMPLE>
<PARAGRAPH>There must be no white space to the left of the filename.</PARAGRAPH>
<PARAGRAPH>The second form reads the elements of the class from <ITALICS>stdout</ITALICS> of the specified shell command. The entire contents of the line are taken to be a shell command followed by its arguments.</PARAGRAPH>
<PARAGRAPH>The third and fourth forms simply substitute <VARIABLE>{macro}</VARIABLE> for the <ITALICS>X</ITALICS> in the class name in the first two forms.</PARAGRAPH>
<PARAGRAPH>You may split class definitions across multiple lines. For example, these forms are equivalent:</PARAGRAPH>
<EXAMPLE>
CHmonet picasso
</EXAMPLE>
<PARAGRAPH>and</PARAGRAPH>
<CODE>
CHmonet
CHpicasso
C{<VARIABLE>macro</VARIABLE>}monet
C{<VARIABLE>macro</VARIABLE>}picasso
</CODE>
<PARAGRAPH>You may also define a class using both <KEYWORD>C</KEYWORD> and <KEYWORD>F</KEYWORD> commands. For example, the following commands define class H containing <ITALICS>monet,</ITALICS>&space;<ITALICS>picasso</ITALICS>, the expansion of the $w macro, and all strings from the file <ITALICS>/var/tmp/foofile</ITALICS> appearing before the first number symbol (#) on each line:</PARAGRAPH>
<CODE>
CHmonet picasso $w
FH/var/tmp/foofile %[^#]
</CODE>
<NOTE><PREFIX>Note</PREFIX><ITALICS>sendmail</ITALICS> does not honor comments that are not respected on class definition lines. For example, the following command defines the D class as containing separate elements</NOTE>
<CODE>
foo.com, bar.com, #, my, local, and domains: 
CD foo.com bar.com # my local domains 
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="91926">sendmail Configuration File Define Mailer&mdash;Command (M)</TITLE><PARAGRAPH>The <KEYWORD>M</KEYWORD> command defines programs and interfaces to mailers.  The format is as follows:</PARAGRAPH>
<EXAMPLE>
Mname, {field=value}*
</EXAMPLE>
<PARAGRAPH>where <ITALICS>name</ITALICS> is the name of the mailer (used internally only) and the <VARIABLE>field</VARIABLE>=<VARIABLE>value</VARIABLE> pairs define attributes of the mailer. The asterisk (*) indicates that the preceding bracketed structure may be repeated 0 or more times. That is, there may be multiple <ITALICS>field</ITALICS>=<ITALICS>value</ITALICS> pairs. The following list defines valid field names:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>Path </HANGITEM>
<HANGBODY><PARAGRAPH>The pathname of the mailer.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Flags </HANGITEM>
<HANGBODY><PARAGRAPH>Special flags for this mailer; see <XREF IDREF="47933" TYPE="TITLE">&ldquo;sendmail Flags, Options, and Files&rdquo;</XREF> for a list of special flags.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Sender </HANGITEM>
<HANGBODY><PARAGRAPH>A rewriting set for sender addresses.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Recipient </HANGITEM>
<HANGBODY><PARAGRAPH>A rewriting set for recipient addresses.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Argv </HANGITEM>
<HANGBODY><PARAGRAPH>An argument vector to pass to this mailer.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Eol </HANGITEM>
<HANGBODY><PARAGRAPH>The end-of-line string for this mailer.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Maxsize </HANGITEM>
<HANGBODY><PARAGRAPH>The maximum message length to this mailer.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>Only the first character of the field name is checked.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="59285">sendmail Configuration File Define Header&ndash;Command (H)</TITLE><PARAGRAPH>The <KEYWORD>H</KEYWORD> command defines the format of header lines that <ITALICS>sendmail</ITALICS> inserts into a message.  The command format is as follows:</PARAGRAPH>
<EXAMPLE>
H[?mflags?]hname:&space;htemplate&space;
</EXAMPLE>
<PARAGRAPH>Continuation lines for an <KEYWORD>H</KEYWORD> command line appear in the outgoing message.  <ITALICS>sendmail</ITALICS> macro-expands the <ITALICS>htemplate</ITALICS> before inserting it into the message. If  <ITALICS>mflags</ITALICS> (which must be surrounded by question marks) appear in the command line, at least one of the specified flags must also appear in the mailer definition or the header will not appear in the message.  However, if a header appears in the input message, the header also appears in the output, regardless of these flags.</PARAGRAPH>
<PARAGRAPH>Some headers have special semantics, which are described in <XREF IDREF="92948" TYPE="TITLE">&ldquo;sendmail Configuration File Semantics&rdquo;</XREF>.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="22672">sendmail Configuration File Set Option&mdash;Command (O)</TITLE><PARAGRAPH>Several <ITALICS>sendmail</ITALICS> options can be set by a command line in the configuration file. Each option is identified by a single character.</PARAGRAPH>
<PARAGRAPH>The format of the <KEYWORD>O</KEYWORD> command line is as follows:</PARAGRAPH>
<EXAMPLE>
Oo&space;value&space;
O<VARIABLE>o|shell commands(arguments)</VARIABLE>&space;
O <VARIABLE>OptionName[.suboption]=value</VARIABLE>&space;
O <VARIABLE>OptionName[.suboption]=|shell_command [arguments]</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>The command sets option <ITALICS>o</ITALICS> or the longer <VARIABLE>OptionName </VARIABLE>to <ITALICS>value.</ITALICS> Note that most options now have a single character and a long name. Some options, such as timeout, have several suboptions. Use the long names when setting suboptions. Depending on the option, <ITALICS>value</ITALICS> is a string; an integer; a Boolean (with legal values &ldquo;t,&rdquo; &ldquo;T,&rdquo; &ldquo;f,&rdquo; or &ldquo;F&rdquo; and a default of TRUE); or a time interval.</PARAGRAPH>
<PARAGRAPH>The <KEYWORD>K</KEYWORD> command is a new command available in IRIX <ITALICS>sendmail. </ITALICS>This command defines (K)eyed databases that are accessible by means of the lookup operators. See <XREF IDREF="64080" TYPE="TITLE">&ldquo;sendmail Configuration File Define Keyed Files&mdash;Command (K)&rdquo;</XREF> for a complete description of the <KEYWORD>K</KEYWORD> command.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="55666">sendmail Configuration File Define Trusted Users&mdash;Command (T)</TITLE><PARAGRAPH>Trusted users are permitted to override the sender address by using the <ITALICS>-f</ITALICS> flag<ITALICS>.</ITALICS>  Typically, trusted users are limited to <ITALICS>root</ITALICS>, <ITALICS>uucp</ITALICS>, and <ITALICS>network.</ITALICS>  On some systems it may be convenient to include other users.  For example, there may be a separate <ITALICS>uucp</ITALICS> login for each host. Note, though, that the concept of trusted users in <COMMAND>sendmail</COMMAND> bears no relation to Trusted IRIX/B, or to the concept of trusted (secure) operating systems in general.</PARAGRAPH>
<PARAGRAPH>The format of the <KEYWORD>T</KEYWORD> command is as follows:</PARAGRAPH>
<EXAMPLE>
Tuser1&space;user2...&space;
</EXAMPLE>
<PARAGRAPH>A configuration file can contain multiple <KEYWORD>T</KEYWORD> lines.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="35730">sendmail Configuration File Define Precedence&mdash;Command (P)</TITLE><PARAGRAPH>The <KEYWORD>P</KEYWORD> command defines values for the Precedence field. The format of the command line is as follows:</PARAGRAPH>
<EXAMPLE>
Pname=num&space;
</EXAMPLE>
<PARAGRAPH>When <ITALICS>sendmail</ITALICS> matches the value in a message's Precedence field with the <ITALICS>name</ITALICS> in a <KEYWORD>P</KEYWORD> command line, <ITALICS>sendmail</ITALICS> sets the message's class to <ITALICS>num.</ITALICS> A higher number indicates a higher precedence. Negative numbers indicate that error messages will not be returned to the sender. The default precedence is zero. For example, a list of precedences might be</PARAGRAPH>
<EXAMPLE>
Pfirst-class=0
Pspecial-delivery=100
Pjunk=-100
</EXAMPLE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="64080">sendmail Configuration File Define Keyed Files&mdash;Command (K)</TITLE><PARAGRAPH>The <KEYWORD>K</KEYWORD> command defines a symbolic name for accessing a database. The format of the command line is as follows:</PARAGRAPH>
<EXAMPLE>
Kname type file&space;
</EXAMPLE>
<PARAGRAPH>The <VARIABLE>name</VARIABLE> value is the name used to specify the database in a lookup command. The <VARIABLE>type</VARIABLE> defines the type of database file, which can be one of the following: </PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>bestmx</HANGITEM>
<HANGBODY><PARAGRAPH>Look up the best MX record for a host.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>dbm</HANGITEM>
<HANGBODY><PARAGRAPH>Support for the<REFPAGE>&space;ndbm(3) </REFPAGE>library.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>dequote</HANGITEM>
<HANGBODY><PARAGRAPH>A &ldquo;pseudo-map&rdquo; (that is, one that does not have any external data) that allows a configuration file to break apart a quoted string in the address. This is primarily useful for DECnet addresses, which often have quoted addresses that need to be unwrapped on gateways. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>host</HANGITEM>
<HANGBODY><PARAGRAPH>Support for DNS lookups (for hostname lookups only).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>nis</HANGITEM>
<HANGBODY><PARAGRAPH>Support for NIS (YP) maps. NIS+ is not supported in this version.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>program</HANGITEM>
<HANGBODY><PARAGRAPH>Run an external program to look up the key.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>sequence</HANGITEM>
<HANGBODY><PARAGRAPH>Search a sequence of maps.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>text</HANGITEM>
<HANGBODY><PARAGRAPH>Look up in a flat text file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>user</HANGITEM>
<HANGBODY><PARAGRAPH>Look up in a local password file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The <VARIABLE>file</VARIABLE> value specifies the filename of the database to be searched. For example, the command</PARAGRAPH>
<EXAMPLE>
Ksmpassword nis passwd.byname
</EXAMPLE>
<PARAGRAPH>defines <FILENAME>smpassword</FILENAME> as a special NIS map for the database file <FILENAME>passwd.byname</FILENAME>.</PARAGRAPH>
<PARAGRAPH>The key lookup command uses the syntax</PARAGRAPH>
<EXAMPLE>
$(<VARIABLE>map</VARIABLE>&space;<VARIABLE>key</VARIABLE><VARIABLE>$</VARIABLE>)
</EXAMPLE>
<PARAGRAPH>Continuing with the example, </PARAGRAPH>
<EXAMPLE>
$(smpassword susant$)
</EXAMPLE>
<PARAGRAPH>looks up the user name susant in the <FILENAME>smpassword</FILENAME> map. If it finds a match, it replaces the input with the search results, in this case, the password string for susant.</PARAGRAPH>
<PARAGRAPH>Some of these map types require arguments to initialize them. These are the standard flags:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>-A</HANGITEM>
<HANGBODY><PARAGRAPH>Append values for duplicate keys</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-aTAG</HANGITEM>
<HANGBODY><PARAGRAPH>Append TAG after successful match</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-f</HANGITEM>
<HANGBODY><PARAGRAPH>Specify column for the key</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-m</HANGITEM>
<HANGBODY><PARAGRAPH>Suppress replacement on match</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-N</HANGITEM>
<HANGBODY><PARAGRAPH>Append a number to all keys</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-o</HANGITEM>
<HANGBODY><PARAGRAPH>Database file is optional</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-q</HANGITEM>
<HANGBODY><PARAGRAPH>Allow quotes in key</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-sx</HANGITEM>
<HANGBODY><PARAGRAPH>Replace spaces with X</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-v</HANGITEM>
<HANGBODY><PARAGRAPH>Specify the column for the value</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-z</HANGITEM>
<HANGBODY><PARAGRAPH>Specify the delimiter for a column</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="92948">sendmail Configuration File Semantics</TITLE><PARAGRAPH>This section describes the semantics of the configuration file, including special macros, conditionals, special classes, and the &ldquo;error&rdquo; mailer:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="20648" TYPE="TITLE">&ldquo;sendmail Configuration File Special Macros and Conditionals&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="56443" TYPE="TITLE">&ldquo;sendmail Configuration File Special Classes&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="15098" TYPE="TITLE">&ldquo;sendmail Configuration File Left-Hand Side Patterns&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="66082" TYPE="TITLE">&ldquo;sendmail Configuration File Right-Hand Side Patterns&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="37714" TYPE="TITLE">&ldquo;sendmail Configuration File Semantics of Rewriting Rule Sets&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="35567" TYPE="TITLE">&ldquo;sendmail Configuration File &ldquo;error&rdquo; Mailer&rdquo;</XREF>.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="20648">sendmail Configuration File Special Macros and Conditionals</TITLE><PARAGRAPH>Macros are interpolated by means of the construct $<ITALICS>x</ITALICS>, where <ITALICS>x</ITALICS> is the name of the macro to be interpolated. Special macros are named with lowercase letters; they either have special semantics or pass information into or out of <ITALICS>sendmail.</ITALICS>  Some special characters are also reserved, and are used to provide conditionals and other functions.</PARAGRAPH>
<PARAGRAPH>The following syntax specifies a conditional:</PARAGRAPH>
<EXAMPLE>
$?x&space;text1&space;$|&space;text2&space;$.
</EXAMPLE>
<PARAGRAPH>This example interpolates <VARIABLE>text1</VARIABLE> if the macro <ITALICS>$x</ITALICS> is set, and <VARIABLE>text2</VARIABLE> otherwise.</PARAGRAPH>
<PARAGRAPH>The &ldquo;else&rdquo; (<ITALICS>$|</ITALICS>) clause can be omitted.</PARAGRAPH>
<PARAGRAPH>The following macros <ITALICS>must</ITALICS>&space;<ITALICS>b</ITALICS>e defined if information is to be transmitted into <ITALICS>sendmail</ITALICS>:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>e </HANGITEM>
<HANGBODY><PARAGRAPH>SMTP entry message, which prints out when STMP starts up</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>j </HANGITEM>
<HANGBODY><PARAGRAPH>&ldquo;Official&rdquo; domain name for this site; must be the first word of the <ITALICS>$e</ITALICS> macro</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>l </HANGITEM>
<HANGBODY><PARAGRAPH>Format of the UNIX &ldquo;From&rdquo; line; usually a constant</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>n </HANGITEM>
<HANGBODY><PARAGRAPH>Name of the daemon (for error messages); usually a constant</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>o </HANGITEM>
<HANGBODY><PARAGRAPH>Set of token operators in addresses</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>q </HANGITEM>
<HANGBODY><PARAGRAPH>Default format of sender address </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The $o macro consists of a list of characters that are treated as tokens themselves and serve to separate tokens during parsing. For example, if <ITALICS>@</ITALICS> were in the $o macro, then the input string a@b would scan as three tokens: a, @, and b.</PARAGRAPH>
<PARAGRAPH>Here are several examples of these macro definitions:</PARAGRAPH>
<EXAMPLE>
De$j Sendmail $v/$Z ready at $b
Dj$w
DlFrom $g  $d
DnMAILER-DAEMON
Do.:%@!^=/[]
Dq$g$?x ($x)$.
</EXAMPLE>
<PARAGRAPH>An acceptable alternative format for the <ITALICS>$q</ITALICS> macro is $?x$x $.&lt;$g> .  This syntax corresponds to the following two formats:</PARAGRAPH>
<EXAMPLE>
jd@company.com (John Doe)
John Doe &lt;jd@company.com>
</EXAMPLE>
<PARAGRAPH>Some macros are defined by <ITALICS>sendmail</ITALICS> for interpolation into arguments passed to mailers or for other contexts. These macros are as follows:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>a  </HANGITEM>
<HANGBODY><PARAGRAPH>Origination date in RFC 822 format</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>b </HANGITEM>
<HANGBODY><PARAGRAPH>Current date in RFC 822 format</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>c </HANGITEM>
<HANGBODY><PARAGRAPH>Hop count</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>d </HANGITEM>
<HANGBODY><PARAGRAPH>Date in UNIX (ctime) format</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>f </HANGITEM>
<HANGBODY><PARAGRAPH>Sender (&ldquo;From&rdquo;) address</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>g </HANGITEM>
<HANGBODY><PARAGRAPH>Sender address relative to the recipient</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>h </HANGITEM>
<HANGBODY><PARAGRAPH>Recipient host</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>i </HANGITEM>
<HANGBODY><PARAGRAPH>Queue ID</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>p </HANGITEM>
<HANGBODY><PARAGRAPH>PID for <ITALICS>sendmail</ITALICS></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>r </HANGITEM>
<HANGBODY><PARAGRAPH>Protocol used</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>s </HANGITEM>
<HANGBODY><PARAGRAPH>Sender's hostname</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>t </HANGITEM>
<HANGBODY><PARAGRAPH>A numeric representation of the current time</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>u </HANGITEM>
<HANGBODY><PARAGRAPH>Recipient user</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>v </HANGITEM>
<HANGBODY><PARAGRAPH>Version number of <ITALICS>sendmail</ITALICS></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>w </HANGITEM>
<HANGBODY><PARAGRAPH>Hostname of this site</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>x </HANGITEM>
<HANGBODY><PARAGRAPH>Full name of the sender</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>z </HANGITEM>
<HANGBODY><PARAGRAPH>Home directory of the recipient</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>Macros $a, $b, and $d specify three dates that can be used. The $a and $b macros are in RFC 822 format. $a is the time extracted from the Date: line of the message; $b is the current date and time (used for postmarks). If no Date: line appears in the incoming message, $a is also set to the current time. The $d macro is equivalent to the $a macro in UNIX format (as described on the <REFPAGE>ctime(3C)</REFPAGE> reference page).</PARAGRAPH>
<PARAGRAPH>The $c macro is set to the &ldquo;hop count,&rdquo; the number of times this message has been processed. It can be determined by the <BOLD>-h</BOLD> flag on the command line or by counting the time stamps in the message.</PARAGRAPH>
<PARAGRAPH>The $f macro is the ID of the sender as originally determined; when a message is sent to a specific host, the $g macro is set to the address of the sender <ITALICS>relative</ITALICS>&space;<ITALICS>to</ITALICS>&space;<ITALICS>the</ITALICS>&space;<ITALICS>recipient.</ITALICS>  For example, if jd sends to buddy@USomewhere.edu from the machine company.com, the $f macro will be jd and the $g macro will be jd@company.com. </PARAGRAPH>
<PARAGRAPH>When a message is sent, the $h, $u, and $z macros are set to the host, user, and home directory (if local) of the recipient.  The first two are set from the $@ and $: part of the rewriting rules, respectively.  The $i macro is set to the queue ID on this host; when included in the time-stamp line, it can be extremely useful for  tracking messages. </PARAGRAPH>
<PARAGRAPH>The $p and $t macros are used to create unique strings (for example, for the Message-Id field). The $r and $s macros are set to the protocol used to communicate with <ITALICS>sendmail</ITALICS> and the name of the sending host; these macros are not supported in the current version.</PARAGRAPH>
<PARAGRAPH>The $v macro is set to be the version number of <ITALICS>sendmail,</ITALICS> which normally appears in time stamps and is extremely useful for debugging. The $w macro is set to the name of this host, if it can be determined.</PARAGRAPH>
<PARAGRAPH>The $x macro is set to the full name of the sender, derived from one of these sources (in this order):</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>a flag to <ITALICS>sendmail</ITALICS>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the value of the Full-name: line in the header if it exists</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>the comment field of a From: line</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>for messages originating locally, the value from the <ITALICS>/etc/passwd</ITALICS> file</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Current <COMMAND>sendmail</COMMAND> allows for multicharacter macros. To define a multicharacter macro <VARIABLE>Macro</VARIABLE> replace the single character macro name in the define command with {Macro}. To reference it, use ${Macro} instead of $X.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="56443">sendmail Configuration File Special Classes</TITLE><PARAGRAPH>The w class is the set of all names this host is known by, and can be used to match local hostnames.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="15098">sendmail Configuration File Left-Hand Side Patterns</TITLE><PARAGRAPH>The left-hand side of a rewriting rule contains a pattern. Words are simply matched directly. A dollar sign introduces the following meta-syntax: </PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>$*  </HANGITEM>
<HANGBODY><PARAGRAPH>Match zero or more tokens.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$+ </HANGITEM>
<HANGBODY><PARAGRAPH>Match one or more tokens.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$- </HANGITEM>
<HANGBODY><PARAGRAPH>Match exactly one token.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$=x </HANGITEM>
<HANGBODY><PARAGRAPH>Match any token in class x.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$~x </HANGITEM>
<HANGBODY><PARAGRAPH>Match any token not in class x.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>If a match occurs, it is assigned to the symbol $<ITALICS>n</ITALICS> for replacement on the right-hand side, where <ITALICS>n</ITALICS> is the index in the lhs. For example, if the left-hand side</PARAGRAPH>
<EXAMPLE>
$-@$+
</EXAMPLE>
<PARAGRAPH>is applied to the input</PARAGRAPH>
<EXAMPLE>
jd@company.com
</EXAMPLE>
<PARAGRAPH>the rule will match, and the values passed to the right-hand side will be</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>$1 </HANGITEM>
<HANGBODY><PARAGRAPH>jd</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$2 </HANGITEM>
<HANGBODY><PARAGRAPH>company.com</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="66082">sendmail Configuration File Right-Hand Side Patterns</TITLE><PARAGRAPH>When the left-hand side of a rewriting rule matches, the input is deleted and replaced by the right-hand side. Right-hand-side tokens are inserted exactly as they appear unless they begin with a dollar sign. The meta-syntax is as follows:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>$<VARIABLE>n</VARIABLE>  </HANGITEM>
<HANGBODY><PARAGRAPH>Substitute indefinite token <VARIABLE>n</VARIABLE> from lhs; substitute the corresponding value from a $+, $-, $*, $=, or $~ match on the lhs; can be used anywhere.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$[<ITALICS>hostname</ITALICS>$] </HANGITEM>
<HANGBODY><PARAGRAPH>Canonicalize <VARIABLE>hostname</VARIABLE>; a hostname enclosed between $[ and $] is looked up by the <FUNCTION>gethostbyname()</FUNCTION> routines and replaced by the canonical name. For example, $[frodo$] might become frodo.fantasy.com and $[[192.48.153.1]$] would become sgi.com. If <FUNCTION>gethostbyname()</FUNCTION> encounters an error, <ITALICS>hostname</ITALICS> will be returned unchanged.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$[<ITALICS>name</ITALICS>$:<ITALICS>default</ITALICS>$] </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;This is an extended version of the preceding construct, and provides a way to determine whether the canonicalization was successful. Using this syntax, the <ITALICS>default</ITALICS> is returned if the canonicalization step fails. For example, $[frodo$:FAIL$] becomes FAIL if <FUNCTION>gethostbyname()</FUNCTION> fails to canonicalize frodo.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$(<ITALICS>x</ITALICS>&space;<ITALICS>key</ITALICS>$@<ITALICS>arg</ITALICS>$:<ITALICS>default</ITALICS>$)  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Look up key in DBM or NIS database <ITALICS>x</ITALICS>. This is the database lookup syntax; <ITALICS>x</ITALICS> corresponds to a database previously declared using the <ITALICS>K</ITALICS> command (described in <XREF IDREF="64080" TYPE="TITLE">&ldquo;sendmail Configuration File Define Keyed Files&mdash;Command (K)&rdquo;</XREF>) and <ITALICS>key</ITALICS> is the string that should be searched for in the database. The <ITALICS>arg</ITALICS> and <ITALICS>default</ITALICS> arguments are optional. The <ITALICS>default</ITALICS> is returned if the <ITALICS>key</ITALICS> was not found in the database. If neither the <ITALICS>default</ITALICS> nor a matching <ITALICS>key</ITALICS> is found, the whole expression expands to the value of <ITALICS>key</ITALICS>. However, if a result is found, it is used as the format string of a <FUNCTION>sprintf()</FUNCTION> expression, with the <ITALICS>arg</ITALICS> as extra argument. Thus, database values with %s strings embedded in them can be useful when rewriting expressions. These values could typically be used with the <ITALICS>pathalias</ITALICS> program to expand routes without leaving <ITALICS>sendmail.</ITALICS>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$><ITALICS>n</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Call rule set <ITALICS>n</ITALICS>; causes the remainder of the line to be substituted as usual and then passed as the argument to rule set <ITALICS>n</ITALICS>. The final value of rule set <ITALICS>n</ITALICS> becomes the substitution for this construct.</PARAGRAPH>
<PARAGRAPH>Multiple calls can be embedded on the rhs. For example, $>32$>33$1 would make the substitution for $1 and pass the result to rule set 33. The result from rule set 33 would then be passed as the input to rule set 32. Finally, the entire construct would be replaced with the result from rule set 32.</PARAGRAPH>
<PARAGRAPH>Only embedded rule set calls in the form outlined above are supported.  Rule sets calls cannot be arbitrarily placed within the rhs.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>$#<ITALICS>mailer</ITALICS>$@<ITALICS>host</ITALICS>$:user </HANGITEM>
<HANGBODY><PARAGRAPH> &lbreak;Resolve to mailer; the $# syntax should be used only in rule set 0. The syntax causes evaluation of the rule set to terminate immediately and signals sendmail that the address has completely resolved. This process specifies the {<VARIABLE>mailer</VARIABLE>, <VARIABLE>host</VARIABLE>, <VARIABLE>user</VARIABLE>} triple necessary to direct the mailer. If the mailer is local, the host part may be omitted. The mailer and host must be a single word, but the user may be a multi-part value.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>An entire rhs may also be prefixed by a $@ or a $: to control evaluation.  </PARAGRAPH>
<PARAGRAPH>The $@ prefix causes the rule set to return with the remainder of the rhs as the value.  The $: prefix causes the rule to terminate immediately, but the rule set to continue; this can be used to avoid continued application of a rule. The prefix is stripped before continuing.</PARAGRAPH>
<PARAGRAPH>The $@ and $: prefixes may precede a $> specification.  For example, </PARAGRAPH>
<EXAMPLE>
R$+     $:$>7$1
</EXAMPLE>
<PARAGRAPH>matches anything, passes that to rule set 7, and continues; the $: is necessary to avoid an infinite loop.</PARAGRAPH>
<PARAGRAPH>Substitution occurs in the order described:  Parameters from the lhs are substituted, hostnames are canonicalized, &ldquo;subroutines&rdquo; are called, and finally $#, $@, and $: are processed.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="37714">sendmail Configuration File Semantics of Rewriting Rule Sets</TITLE><PARAGRAPH>There are five rewriting rule sets that have specific semantics. <XREF IDREF="96048" TYPE="GRAPHIC">Figure&nbsp;B-1</XREF> shows the relationship among these rule sets.</PARAGRAPH>
<PARAGRAPH><FIGURE><GRAPHIC FILE="rewrite.rule.set.semantics.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="B-1"><PREFIX>Figure B-1 </PREFIX><XREFTARGET ID="96048">Semantics of Rewriting Rule Sets</CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH>Rule set 3 should turn the address into canonical form. This form should have the following basic syntax:</PARAGRAPH>
<EXAMPLE>
local-part@host-domain-spec
</EXAMPLE>
<PARAGRAPH>If no &ldquo;at&rdquo; (@) sign is specified, then the host-domain-spec can be appended from the sender address (if the <ITALICS>C</ITALICS> flag is set in the mailer definition corresponding to the <ITALICS>sending</ITALICS> mailer).  <ITALICS>sendmail</ITALICS> applies rule set 3 before doing anything with any address.</PARAGRAPH>
<PARAGRAPH>Next, rule set 0 is applied to an address that actually specifies recipients.  The address must resolve to a {<ITALICS>mailer,</ITALICS>&space;<ITALICS>host,</ITALICS>&space;<ITALICS>user</ITALICS>} triple.  The <ITALICS>mailer</ITALICS> must be defined in the mailer definitions from the configuration file.  The <ITALICS>host</ITALICS> is defined into the $h macro for use in the <ITALICS>argv</ITALICS> expansion of the specified mailer.</PARAGRAPH>
<PARAGRAPH>Rule sets 1 and 2 are applied to all sender and recipient addresses,  respectively.  They are applied before any specification in the mailer  definition.  They must never resolve.  </PARAGRAPH>
<PARAGRAPH>Rule set 4 is applied to all addresses in the message.  It is typically used to translate from internal to external form.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="35567">sendmail Configuration File &ldquo;error&rdquo; Mailer</TITLE><PARAGRAPH>The mailer with the special name &ldquo;error&rdquo; can be used to generate a user error.  The (optional) host field is a numeric exit status to be returned, and  the user field is a message to be printed.  For example, the following entry on the rhs of a rule causes the specified error to be generated if the lhs match:</PARAGRAPH>
<EXAMPLE>
$#error$:Host unknown in this domain
</EXAMPLE>
<PARAGRAPH>This mailer is functional only in rule set 0.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Testing and Debugging the sendmail Rewrite Rules</TITLE><PARAGRAPH>As part of building or modifying a configuration file, you should test the new file.  <ITALICS>sendmail</ITALICS> provides a number of built-in tools to assist in this task.  The subsections that follow discuss tools and techniques for debugging the rewrite rules.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="33219" TYPE="TITLE">&ldquo;Using Alternative Configuration Files&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="82975" TYPE="TITLE">&ldquo;Testing the Rewrite Rules in Test Mode&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="14231" TYPE="TITLE">&ldquo;Using the Debugging Rewrite Rule&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="14205" TYPE="TITLE">&ldquo;Using the Debugging Flag (-d21)&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="14231" TYPE="TITLE">&ldquo;Using the Debugging Rewrite Rule&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="33219">Using Alternative Configuration Files</TITLE><PARAGRAPH>Using the <ITALICS>-C</ITALICS> command-line flag causes <ITALICS>sendmail</ITALICS> to read an alternate configuration file. This feature is helpful during debugging because it permits modifications and testing on a separate copy of the configuration file from the one currently in use. This precaution eliminates the chance that a buggy configuration file will be used by an instance of <ITALICS>sendmail</ITALICS> that is trying to deliver real mail. This flag also provides a convenient way to test any number of configuration files without fussy and potentially confusing renames. See <XREF IDREF="52919" TYPE="TITLE">&ldquo;Using Another sendmail Configuration File&rdquo;</XREF> and <XREF IDREF="73056" TYPE="TITLE">&ldquo;sendmail Command-Line Flags&rdquo;</XREF> for more information.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="82975">Testing the Rewrite Rules in Test Mode</TITLE><PARAGRAPH>Invoking <ITALICS>sendmail</ITALICS> with the<CMDLINEOPT>&space;-bt </CMDLINEOPT>flag causes it to run in &ldquo;test mode.&rdquo;  For example, the following command invokes <ITALICS>sendmail</ITALICS> in test mode and causes it to read configuration file <ITALICS>test.cf:</ITALICS>&space;</PARAGRAPH>
<EXAMPLE>
/usr/lib/sendmail -bt -Ctest.cf 
</EXAMPLE>
<PARAGRAPH>In this mode, <ITALICS>sendmail</ITALICS> processes lines of the form </PARAGRAPH>
<EXAMPLE>
<VARIABLE>rwsets address</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>where <ITALICS>rwsets</ITALICS> is the list of rewriting sets to use and <ITALICS>address</ITALICS> is an address to which you apply the sets. In test mode, <ITALICS>sendmail</ITALICS> shows the steps it takes as it proceeds, finally showing the final address.</PARAGRAPH>
<PARAGRAPH>A comma-separated list of rule sets causes sequential application of rules to an input.  For example, the following command first applies rule set 3 to the value monet@giverny.  Rule set 1 is applied to the output of rule set 3, followed similarly by rule sets 21 and 4:</PARAGRAPH>
<EXAMPLE>
3,1,21,4 monet@giverny
</EXAMPLE>
<NOTE><PREFIX>Note</PREFIX>Some versions of <ITALICS>sendmail</ITALICS>, including those provided with all versions of IRIX prior to IRIX 4.0, automatically apply rule set 3 to input before applying the requested rule set sequence.  Versions of <ITALICS>sendmail</ITALICS> in IRIX 4.0 and later do <ITALICS>not</ITALICS> apply rule set 3; rule set 3 must be specifically requested.</NOTE>
<PARAGRAPH>The input and output of each rule set is displayed. For example, input of</PARAGRAPH>
<EXAMPLE>
3,0 foo@bar
</EXAMPLE>
<PARAGRAPH>might result in output that looks like this:</PARAGRAPH>
<CODE>
rewrite: ruleset 3 input: foo @ bar
rewrite: ruleset 3 returns: foo &lt; @ bar >
rewrite: ruleset 0 input: foo &lt; @ bar >&space;
rewrite: ruleset 30 input: foo &lt; @ bar . com >&space;
rewrite: ruleset 30 returns: foo &lt; @ bar . com >&space;
rewrite: ruleset 0 returns:&space;
$# forgn $@ bar . com $: foo &lt; @ bar . com >&space;
</CODE>
<PARAGRAPH>This output indicates that, given the address foo@bar, rule set 0 will select the <ITALICS>forgn</ITALICS> mailer and direct it to connect to host bar.com, which will be told to send the mail on to foo@bar.com.  Furthermore, rule set 0 &ldquo;called&rdquo; rule set 30 at one point while processing the address.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="14205">Using the Debugging Flag (-d21)</TITLE><PARAGRAPH>The <BOLD>-d21</BOLD> debugging flag causes <ITALICS>sendmail</ITALICS> to display detailed information  about the rewrite process. This flag is most useful when used with the test mode described in the preceding subsection. The most useful setting of this flag is <BOLD>-d21.12</BOLD>, which shows all rewrite steps. Higher levels of the <BOLD>-d21</BOLD> flag are rarely needed and create enormous amounts of output.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="14231">Using the Debugging Rewrite Rule</TITLE><PARAGRAPH>The standard <ITALICS>/usr/lib/sendmail.cf</ITALICS> file supplied with IRIX includes a special &ldquo;debugging&rdquo; rewrite rule. This rule is defined as follows:</PARAGRAPH>
<CODE>
# insert this handy debugging line wherever you have problems
#R$*                            $:$>99$1
</CODE>
<PARAGRAPH>Note that rule set 99 is an empty rule set that does nothing.  Placing one or more (uncommented) copies of this rule anywhere within a rule set forces <ITALICS>sendmail</ITALICS> to display an intermediate rewrite result without using the <CMDLINEOPT>-d21 </CMDLINEOPT>flag.  The following test mode output illustrates the use of the debugging rewrite rule:</PARAGRAPH>
<CODE>
rewrite: ruleset 3 input: foo @ bar
rewrite: ruleset 3 returns: foo &lt; @ bar >&space;
rewrite: ruleset 0 input: foo &lt; @ bar >&space;
rewrite: ruleset 99 input: foo &lt; @ bar . com >&space;
rewrite: ruleset 99 returns: foo &lt; @ bar . com >&space;
rewrite: ruleset 99 input: foo &lt; @ barcom >&space;
rewrite: ruleset 99 returns: foo &lt; @ barcom >&space;
rewrite: ruleset 0 returns:&space;
$# ether $@ barcom $: foo &lt; @ barcom >
</CODE>
<PARAGRAPH>Note that somewhere between the first and second appearance of the debugging rewrite rule in rule set 0, the hostname was mangled from <ITALICS>bar.com</ITALICS> to <ITALICS>barcom.</ITALICS></PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Building Mailer Definitions</TITLE><PARAGRAPH>To add an outgoing mailer to a mail system, you must define the characteristics of the mailer. Each mailer must have an internal name.This name can be arbitrary, except that the names &ldquo;local&rdquo; and &ldquo;prog&rdquo; must be defined.</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><ITALICS>P</ITALICS> field</HANGITEM>
<HANGBODY><PARAGRAPH>The pathname of the mailer must be given in the<CMDLINEOPT>&space;P </CMDLINEOPT>field. If this mailer is accessed by means of an IPC connection (socket), use the string [IPC] instead.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>F</ITALICS> field</HANGITEM>
<HANGBODY><PARAGRAPH>The<CMDLINEOPT>&space;F</CMDLINEOPT> field defines the mailer flags. Specify an<CMDLINEOPT>&space;f </CMDLINEOPT>or<CMDLINEOPT>&space;r</CMDLINEOPT> flag to pass the name of the sender as an <BOLD>-f</BOLD> or <BOLD>-r</BOLD> flag respectively. These flags are passed only if they were passed to <ITALICS>sendmail,</ITALICS> so that mailers that give errors under some circumstances can be placated. If the mailer is not picky, just specify -f $g in the <CMDLINEOPT>argv </CMDLINEOPT>template. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>S</ITALICS> flag</HANGITEM>
<HANGBODY><PARAGRAPH>If the mailer must be called as <ITALICS>root</ITALICS>, use the<CMDLINEOPT>&space;S </CMDLINEOPT>flag; this flag will not reset the user ID before calling the mailer. (<ITALICS>sendmail</ITALICS> must be running <ITALICS>setuid</ITALICS> to root for this technique to work.)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>l</ITALICS> flag</HANGITEM>
<HANGBODY><PARAGRAPH>If this mailer is local (that is, it will perform final delivery rather than another network hop), use the<CMDLINEOPT>&space;l </CMDLINEOPT>flag. Quote characters (backslashes and quotation marks) can be stripped from addresses if the<CMDLINEOPT>&space;s</CMDLINEOPT> flag is specified; if it is not, they are passed through.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>m</ITALICS> flag</HANGITEM>
<HANGBODY><PARAGRAPH>If the mailer is capable of sending to more than one user on the same host in a single transaction, use the<CMDLINEOPT>&space;m</CMDLINEOPT> flag. If this flag is on, the<CMDLINEOPT>&space;argv</CMDLINEOPT> template containing $u will be repeated for each unique user on a given host. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>e</ITALICS> flag </HANGITEM>
<HANGBODY><PARAGRAPH>The<CMDLINEOPT>&space;e</CMDLINEOPT> flag marks the mailer as being expensive, causing <ITALICS>sendmail</ITALICS> to defer connection until a queue run. (For this technique to be effective, you must use the<CMDLINEOPT>&space;c</CMDLINEOPT> configuration option.)</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>C</ITALICS> flag</HANGITEM>
<HANGBODY><PARAGRAPH>An unusual case is the<CMDLINEOPT>&space;C</CMDLINEOPT> flag: it applies to the mailer the message is received from, rather than the mailer being sent to. If this flag is set, the domain specification of the sender (that is, the<CMDLINEOPT>&space;@host.domain</CMDLINEOPT> part) is saved and is appended to any addresses in the message that do not already contain a domain specification. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>For example, if the <ITALICS>C</ITALICS> flag is defined in the mailer corresponding to<CMDLINEOPT>&space;jd@company.com</CMDLINEOPT><ITALICS>, </ITALICS>a message of the form</PARAGRAPH>
<CODE>
From: jd@company.com
To: buddy@USomewhere.edu, jane
</CODE>
<PARAGRAPH>will be modified to</PARAGRAPH>
<CODE>
From: jd@company.com
To: buddy@USomewhere.edu, jane@company.com
</CODE>
<PARAGRAPH>Other flags are described in the <REFPAGE>sendmail</REFPAGE> reference page.</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><CMDLINEOPT>S</CMDLINEOPT> and <CMDLINEOPT>R</CMDLINEOPT> fields</HANGITEM>
<HANGBODY><PARAGRAPH>The<CMDLINEOPT>&space;S</CMDLINEOPT> and <CMDLINEOPT>R</CMDLINEOPT> fields in the mailer description are per-mailer rewriting sets to be applied to sender and recipient addresses, respectively. These sets are applied after the sending domain is appended and the general rewriting sets (1 and 2) are applied, but before the output rewrite (rule set 4) is applied. A typical usage is to append the current domain to addresses that do not already have a domain. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM></HANGITEM>
<HANGBODY><PARAGRAPH>For example, depending on the domain it is being shipped into, a header of the form &ldquo;From: jd&rdquo; might be changed to &ldquo;From: jd@company.com&rdquo; or &ldquo;From: company!jd.&rdquo;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM></HANGITEM>
<HANGBODY><PARAGRAPH>These sets can also be used to do special-purpose output rewriting with rule set 4.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><CMDLINEOPT>E</CMDLINEOPT> field</HANGITEM>
<HANGBODY><PARAGRAPH>The <CMDLINEOPT>E</CMDLINEOPT> field defines the string to use as an end-of-line indication. A string containing only a newline is the default. The usual backslash escapes (\r, \n, \f, \b) can be used.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM></HANGITEM>
<HANGBODY><PARAGRAPH>Finally, an <ITALICS>argv</ITALICS> template is given as the <CMDLINEOPT>E</CMDLINEOPT> field. It can have embedded spaces. If there is no <ITALICS>argv</ITALICS> with a $u macro in it, <ITALICS>sendmail</ITALICS> will speak SMTP to the mailer. If the pathname for this mailer is <FILENAME>[IPC]</FILENAME>, the <ITALICS>argv</ITALICS> should be</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM></HANGITEM>
<HANGBODY><PARAGRAPH><SCREENDISPLAY>IPC $h [ port ]</SCREENDISPLAY></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM></HANGITEM>
<HANGBODY><PARAGRAPH>where <ITALICS>port</ITALICS> is the port number to connect to. This number is optional.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>For example, the following specification specifies a mailer to do local delivery and a mailer for Ethernet delivery:</PARAGRAPH>
<EXAMPLE>
Mlocal, P=/bin/mail, F=EDFMlsmhu, S=10, R=20, A=mail -s -d $u&space;
Mether, P=[IPC], F=mDFMhuXC, S=11, R=21, M=1000000, E=\r\n, \
       A=IPC $h&space;
</EXAMPLE>
<PARAGRAPH>The first mailer is called &ldquo;local&rdquo; and is located in the file <ITALICS>/bin/mail.</ITALICS>  It has the following characteristics:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>It escapes lines beginning with From in the message with a > sign.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It expects Date:, From:, and Message-Id: header lines.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It does local delivery.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It strips quotation marks from addresses.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It sends to multiple users at once.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It expects uppercase to be preserved in both host and user names.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Rule set 10 is to be applied to sender addresses in the message and rule set 20 is to be applied to recipient addresses. The <ITALICS>argv</ITALICS> to send to a message is the word <ITALICS>mail</ITALICS>, the word <ITALICS>-s</ITALICS>, the word <ITALICS>-d, </ITALICS>and words containing the name of the receiving user.</PARAGRAPH>
<PARAGRAPH>The second mailer is called &ldquo;ether&rdquo; and is connected with an IPC connection. It has the following characteristics:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>It handles multiple users at  the same time.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It expects &ldquo;Date:&rdquo;, &ldquo;From:&rdquo;, and &ldquo;Message-Id:&rdquo; header lines.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It expects uppercase to be preserved in both host and user names.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It uses the hidden-dot algorithm of RFC 821.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>It rewrites addresses so that any domain from the sender address is appended to any receiver name without a domain.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Sender addresses are processed by rule set 11; recipient addresses, by rule set 21.  There is a 1,000,000-byte limit on messages passed through this mailer. The EOL string for this mailer is "\r\n" and the argument passed to the mailer is the name of the recipient host.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="47933">sendmail Flags, Options, and Files</TITLE><PARAGRAPH>This section contains information on the following topics:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="73056" TYPE="TITLE">&ldquo;sendmail Command-Line Flags&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="49403" TYPE="TITLE">&ldquo;sendmail Configuration Options&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="20771" TYPE="TITLE">&ldquo;sendmail Support Files&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="63461" TYPE="TITLE">&ldquo;sendmail Debugging Flags&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="73056">sendmail Command-Line Flags</TITLE><PARAGRAPH>Flags must precede addresses.  The flags are:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>-b<VARIABLE>x</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set operation mode to <VARIABLE>x</VARIABLE>. Operation modes are:</PARAGRAPH>
<TABLE COLUMNS="2"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>a </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Run in ARPANET mode.</PARAGRAPH>
<PARAGRAPH>The special processing for the ARPANET includes reading the 
&ldquo;From:&rdquo; and &ldquo;Sender:&rdquo; lines from the header to find the 
sender, printing ARPANET-style messages (preceded by 
three-digit reply codes for compatibility with the FTP 
protocol) and ending lines of error messages with &lt;CRLF>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>d </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Run as a daemon.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>D</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Same as d but runs in foreground.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>h</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Print the host status database.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>H</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Purge the host status database.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>i </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Initialize the alias database.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>m </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Deliver mail in the usual way (default).</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>p </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Print the mail queue.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>s </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Speak SMTP on input side.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>t </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Run in test mode.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>v </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Just verify addresses, don't collect or deliver.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>z </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Freeze the configuration file. Only superuser can do this.</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-C<VARIABLE>file</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Use a different configuration file. <ITALICS>sendmail</ITALICS> runs as the invoking user (rather than root) when this flag is specified.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-d<VARIABLE>flag</VARIABLE><SCREENDISPLAY>[</SCREENDISPLAY><VARIABLE>-flag</VARIABLE><SCREENDISPLAY>][</SCREENDISPLAY><VARIABLE>.level</VARIABLE><SCREENDISPLAY>] </SCREENDISPLAY></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Set debugging flag (or range of flags) to the specified level. (The default is 1.) See <XREF IDREF="63461" TYPE="TITLE">&ldquo;sendmail Debugging Flags&rdquo;</XREF>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-F<VARIABLE>name</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set the full name of the sender to <ITALICS>name.</ITALICS>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-f<VARIABLE>name</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set the name of the From person (the sender of the mail). This flag is ignored unless the user appears in the list of &ldquo;trusted&rdquo; users, or <VARIABLE>name</VARIABLE> is the same as the user's name.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-h<VARIABLE>cnt</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set the &ldquo;hop count&rdquo; to <VARIABLE>cnt</VARIABLE>. The hop count is incremented every time the mail is processed. When it reaches a limit, the mail is returned with an error message, the victim of an aliasing loop.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-i</HANGITEM>
<HANGBODY><PARAGRAPH>Ignore dots alone on line by themselves on incoming messages.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-N</HANGITEM>
<HANGBODY><PARAGRAPH>Set delivery status notification.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-n</HANGITEM>
<HANGBODY><PARAGRAPH>Don't do aliasing.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><SCREENDISPLAY>-o</SCREENDISPLAY><ITALICS>x</ITALICS>&space;<ITALICS>value</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Set configuration option <ITALICS>x</ITALICS> to the specified <ITALICS>value. </ITALICS>These options are described in section <XREF IDREF="49403" TYPE="TITLE">&ldquo;sendmail Configuration Options&rdquo;</XREF>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-p<VARIABLE>protocol</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set message-receiving protocol. Use the protocol name or a combination of protocol and hostname, for example, UUCP:ucbvax.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><SCREENDISPLAY>-q</SCREENDISPLAY>[<ITALICS>time</ITALICS>] </HANGITEM>
<HANGBODY><PARAGRAPH>Process the queued mail. If the time is given, <ITALICS>sendmail</ITALICS> will run through the queue at the specified interval to deliver queued mail; otherwise, it runs only once. See <XREF IDREF="93375" TYPE="TITLE">&ldquo;Specifying the sendmail Queue Mode&rdquo;</XREF>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-R<VARIABLE>return</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set the amount of message to be returned if delivery fails. For example, set <VARIABLE>full</VARIABLE> to return the full message, or <VARIABLE>hdrs</VARIABLE> for headers only.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><SCREENDISPLAY>-r</SCREENDISPLAY>&space;<ITALICS>name</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>An alternative and obsolete form of <ITALICS>-f.</ITALICS>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><SCREENDISPLAY>-t</SCREENDISPLAY> </HANGITEM>
<HANGBODY><PARAGRAPH>Read the header for To:, Cc:, and Bcc: lines, and send the message to everyone listed in those lists. The Bcc: line is deleted before sending. Any addresses in the argument vector are deleted from the send list.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-U</HANGITEM>
<HANGBODY><PARAGRAPH>Set the initial user submission. For user agents like Mail or exmh, this should always be set. For network delivery agents like rmail, this should never be set.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-V<VARIABLE>envid</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set the original envelope ID.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><SCREENDISPLAY>-v</SCREENDISPLAY> </HANGITEM>
<HANGBODY><PARAGRAPH>Go into verbose mode:  Alias expansions are announced, and so on.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-X<VARIABLE>logfile</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Logs all mailer traffic to <VARIABLE>logfile</VARIABLE>. Use only for stubborn debugging problems, because data piles up quickly.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>-Z<VARIABLE>file</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Alternate freeze file is designated with <VARIABLE>file</VARIABLE>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="49403">sendmail Configuration Options</TITLE><PARAGRAPH>You can set the following options by using the <ITALICS>-o</ITALICS> flag on the command line or the <ITALICS>O</ITALICS> line in the configuration file.  Many of these options cannot be specified unless the invoking user is trusted. </PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>AliasFile=<VARIABLE>file</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>A<VARIABLE>file </VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Use the named file as the alias file. If no file is specified, use an alias in the current directory.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>AliasWait=<VARIABLE>N</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>a<VARIABLE>N </VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>If set, wait up to <ITALICS>N</ITALICS> minutes for an @:@ entry to exist in the alias database before starting up.  If the entry does not appear in <ITALICS>N</ITALICS> minutes, rebuild the database (if the <ITALICS>D</ITALICS> option is also set) or issue a warning.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>BlankSub=<VARIABLE>c</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>B<VARIABLE>c </VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set the blank substitution character to <ITALICS>c</ITALICS>. Unquoted spaces in addresses are replaced by this character.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>MinFreeBlocks=<VARIABLE>nblocks</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>b<VARIABLE>nblocks[/maxsize]</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Set the minimum number of free blocks needed to spool any message, while setting the maximum allowable message size. Defaults are 0 (zero) and infinite, respectively.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CheckpointInterval=<VARIABLE>N</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>C<VARIABLE>N</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Check the queue file after <VARIABLE>N </VARIABLE>successful deliveries. This can be useful if you send to a long mailing list interrupted by system crashes, which would otherwise engender several duplicate deliveries.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>HoldExpensive</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>c </HANGITEM>
<HANGBODY><PARAGRAPH>If an outgoing mailer is marked as being expensive, don't connect immediately.This option requires queueing.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>AutoRebuildAliases</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>D</HANGITEM>
<HANGBODY><PARAGRAPH>Rebuild the alias database if necessary and possible. If this option is not set, <ITALICS>sendmail</ITALICS> will not rebuild the alias database until you explicitly request it to do so (by using <ITALICS>sendmail</ITALICS>&space;<ITALICS>-bi</ITALICS>).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>DeliveryMode=<VARIABLE>x</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>d<VARIABLE>x </VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Deliver in mode <ITALICS>x.</ITALICS> These are the legal modes:</PARAGRAPH>
<TABLE COLUMNS="2"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>i </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Deliver interactively (synchronously).</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>b </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Deliver in background (asynchronously).</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>q </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Just queue the message (deliver during queue run).</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ErrorHeader=<VARIABLE>/file</VARIABLE>|<VARIABLE>format</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>E/<VARIABLE>file</VARIABLE>|<VARIABLE>format</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Add headers to error messages. If the value begins with /, the error header formats are read from the specified file. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ErrorMode=<VARIABLE>x</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>e<ITALICS>x</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Handle errors by using mode <ITALICS>x.</ITALICS> The values for <ITALICS>x</ITALICS> are:</PARAGRAPH>
<TABLE COLUMNS="2"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>p</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Print error messages (default).</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>q</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Print no messages; just give exit status.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>m</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Mail back errors.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>w</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Write back errors (mail the errors if user not logged in).</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>e</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Mail back errors and always give zero exit status.</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>TempFileMode=<VARIABLE>mode</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>F<VARIABLE>mode</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set the UNIX file mode to use when creating queue files and &ldquo;frozen configuration&rdquo; files.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>SaveFromLine</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>f </HANGITEM>
<HANGBODY><PARAGRAPH>Save UNIX style &ldquo;From&rdquo; lines at the front of headers. Normally these lines are assumed to be redundant and are discarded.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>MatchGecos</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>G</HANGITEM>
<HANGBODY><PARAGRAPH>Match local names against the GECOS portion of the password file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>DefaultUser</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>g<VARIABLE>n</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set the default group ID for running mailers to <VARIABLE>n</VARIABLE>. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>HelpFile=<VARIABLE>file</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>H<VARIABLE>file</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Specify the help file for SMTP.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>MaxHopCount=<VARIABLE>N</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>h<VARIABLE>N</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set the maximum times a message is allowed to hop before it is categorized as being in a loop.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>I</HANGITEM>
<HANGBODY><PARAGRAPH>Insist that the BIND name server be running to resolve hostnames and MX records. Treat ECONNREFUSED errors from the resolver as temporary failures. In general, you should set this option only if you are running the name server. Set this option if the <ITALICS>/etc/hosts</ITALICS> file does not include all known hosts or if you are using the MX (mail forwarding) feature of the BIND name server. The name server is still consulted even if this option is not set, but <ITALICS>sendmail</ITALICS> resorts to reading <ITALICS>/etc/hosts</ITALICS> if the name server is not available.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>IgnoreDots</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>i </HANGITEM>
<HANGBODY><PARAGRAPH>Do not interpret dots on a line by themselves as a message terminator.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ForwardPath=<VARIABLE>path</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE>
<!-- WARNING: (1) Character tag 'VARIABLE' spans Hanging List delimiter - detected on page 300 -->
<!-- WARNINGLOCATION: PAGE = "300" SRC = "B.sendmail.mif" TAGTYPE = "CHAR" TAG = "Variable" TAGCOUNT = "7" UID = "560485" TEXT = "path	 "-->
 </VARIABLE></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>J<VARIABLE>path</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Use this path to search for users' <FILENAME>.forward</FILENAME> file. The default is<FILENAME>&space;$z.forward</FILENAME>, but can also be set as a sequence of paths separated by colons.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>SendMimeErrors</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>j</HANGITEM>
<HANGBODY><PARAGRAPH>Send error messages in MIME format.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ConnectionCacheTimeout=<VARIABLE>timeout</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>K<VARIABLE>timeout</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Define the maximum amount of time a cached connection is permitted to idle without activity. The <VARIABLE>timeout</VARIABLE> is given as a tagged number, with &ldquo;s&rdquo; for seconds, &ldquo;m&rdquo; minutes, &ldquo;h&rdquo; hours, &ldquo;d&rdquo; days, and &ldquo;w&rdquo; weeks. For example, &ldquo;K1h30m&rdquo; and &ldquo;K90m&rdquo; both set the <VARIABLE>timeout</VARIABLE> to one hour and thirty minutes.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ConnectionCacheSize=<VARIABLE>N</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>k<VARIABLE>N</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Define the maximum number of cached open connections. The default is one; if set to zero, connections are closed immediately.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>LogLevel=<VARIABLE>n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>L<VARIABLE>n </VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set the log level to <VARIABLE>n</VARIABLE><ITALICS>.</ITALICS> Possible values for n are these:</PARAGRAPH>
<TABLE COLUMNS="2"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>0</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>No logging</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>1</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Serious system failures and potential security problems</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>2</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Network problems and security failures</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>3</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Forwarding and received message errors</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>4</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Minor errors</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>5</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Received messages/message collection statistics</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>6</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Creation of error messages, VRFY and EXPN commands</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>7</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Message delivery failures</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>8 </PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Successful deliveries</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>9</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Messages being deferred, perhaps due to a host being down</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>10</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Alias forwarding expansion</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>12</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Connecting hosts</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>20</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Attempts to run locked queue files</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="36"><PARAGRAPH>21</PARAGRAPH>
</CELL>
<CELL LEFT="45" WIDTH="279"><PARAGRAPH>Monitor load average computation</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>UseErrorsTo</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>l</HANGITEM>
<HANGBODY><PARAGRAPH>If there is an Errors-To: header, send any error messages to those addresses.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>M<VARIABLE>x value</VARIABLE> </HANGITEM>
<HANGBODY><PARAGRAPH>Set the macro <ITALICS>x</ITALICS> to <ITALICS>value. </ITALICS>This option can be used only from the command line.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>MeTo</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>m </HANGITEM>
<HANGBODY><PARAGRAPH>Send to &ldquo;me&rdquo; (the sender) even if the sender is in an alias expansion.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>N<ITALICS>netname</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Set the name of the home (local) network. If the name of a connecting host (determined by a call to <FUNCTION>gethostbyaddr()</FUNCTION>) is unqualified (contains no dots), a single dot and <ITALICS>netname</ITALICS> will be appended to <ITALICS>sendmail</ITALICS>'s idea of the name of the connecting host.</PARAGRAPH>
<PARAGRAPH>Later, the argument of the SMTP <COMMAND>HELO</COMMAND> command from the connecting host will be checked against the name of the connecting host as determined above. If they do not match, Received: lines are augmented by the connecting hostname that <ITALICS>sendmail</ITALICS> has generated so that messages can be traced accurately.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>CheckAliases</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>n </HANGITEM>
<HANGBODY><PARAGRAPH>Validate the right-hand side when building the alias database.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>OldStyleHeaders</HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>o </HANGITEM>
<HANGBODY><PARAGRAPH>Assume that the headers may be in an old format, in which spaces delimit names. This option actually turns on an adaptive algorithm: If any recipient address contains a comma, parenthesis, or angle bracket, it is assumed that commas already exist. If this flag is not on, only commas delimit names. Headers are always written with commas between the names. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>PostMasterCopy=<VARIABLE>addr</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>P<ITALICS>addr</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Add &ldquo;postmaster&rdquo; address <ITALICS>addr</ITALICS> to the Cc: list of all error messages.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>PrivacyOptions=<VARIABLE>opt,opt,...</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>p<VARIABLE>opt,opt,</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Insist on privacy options to conform to SMTP protocols:</PARAGRAPH>
<TABLE COLUMNS="2"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>authwarnings</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Add X-Authentication-Warning headers</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>goaway</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Disallow all SMTP status queries</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>needexpnhelo</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Insist of HELO or EHLO command before EXPN</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>needmailhelo</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Insist on HELO or EHLO command before MAIL</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>needvrfyhelo</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Insist on HELO or EHLO command before VRFY</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>noexpn</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Disallow EXPN entirely</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>novrfy </PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Disallow VRFY entirely</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>noreceipts</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Ignore Return-Receipt-To: header</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>public</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Allow open access (the default)</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH>restrictmailq</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="225"><PARAGRAPH>Restrict <COMMAND>mailq </COMMAND>command</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Q<ITALICS>dir</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Use dir as the queue directory.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>q<ITALICS>factor</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Use factor as the multiplier in the function to decide when to queue messages rather than attempting to send them. This value is divided by the difference between the current load average and the load average limit (<ITALICS>x</ITALICS> option) to determine the maximum message priority that will be sent.This value defaults to 10000.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>R</HANGITEM>
<HANGBODY><PARAGRAPH>Explicitly route to the first address in the route.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Timeout.suboption=<VARIABLE>time</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>r<ITALICS>time</ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>Cause a timeout on reads after <ITALICS>time</ITALICS> interval.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>StatusFile=<VARIABLE>file</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>S<ITALICS>file</ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>Log statistics in the named <ITALICS>file.</ITALICS>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>SuperSafe</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>s</HANGITEM>
<HANGBODY><PARAGRAPH>Be super-safe when running; that is, always instantiate the queue file, even if attempting immediate delivery. <ITALICS>sendmail</ITALICS> always instantiates the queue file before returning control to the client under any circumstances.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>QueueTimeout=<VARIABLE>time</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>T<ITALICS>time</ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>Set the queue timeout to <ITALICS>time.</ITALICS> After this interval, messages that have not been successfully sent are returned to the sender.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>TimeZoneSpec</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>t<VARIABLE>tzinfo</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set the local timezone, for example, PST8PDT.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>DefaultUser=<VARIABLE>U</VARIABLE> [<VARIABLE>:G</VARIABLE>]</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>u<VARIABLE>n</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set the default user ID for mailers to <VARIABLE>n</VARIABLE>. Mailers without the S flag in the mailer definition run as this user.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>FallbackMXhost=<VARIABLE>host</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>V<VARIABLE>host</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH>Set <VARIABLE>host</VARIABLE> to act like a very low priority MX on every host.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Verbose</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>v</HANGITEM>
<HANGBODY><PARAGRAPH>Run in verbose mode.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>TryNullMXList</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>w</HANGITEM>
<HANGBODY><PARAGRAPH>If we are the best MX, try the host directly. This state is set by default.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>QueueLA=<VARIABLE>load</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>x<ITALICS>load</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Use <ITALICS>load </ITALICS>as the system load average limit when deciding whether to queue messages rather than attempting to send them.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>RefuseLA=<VARIABLE>load</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>X<ITALICS>load</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>When the system load average exceeds<VARIABLE>&space;load</VARIABLE>, refuse incoming SMTP connections.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Recipientfactor=<VARIABLE>factor</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>y<ITALICS>factor</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>This factor is multiplied by the number of recipients and added to the priority. Therefore, this value penalizes messages with large numbers of recipients.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ForkEachJob</HANGITEM>
<HANGBODY><PARAGRAPH></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Y </HANGITEM>
<HANGBODY><PARAGRAPH>Deliver each job that is run from the queue in a separate process. Use this option if you are short of memory, since the default tends to consume considerable amounts of memory while the queue is being processed.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>ClassFactor=<VARIABLE>factor</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>z<ITALICS>factor</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>This factor is multiplied by the message class (determined by the Precedence field in the user header and the precedence declaration lines in the configuration file) and subtracted from the priority. Therefore, messages with a higher class are favored.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>RetryFactor=<VARIABLE>factor</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Z<ITALICS>factor</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>This factor is added to the priority every time a message is processed. Therefore, this value penalizes messages that are processed frequently.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>DialDelay=<VARIABLE>sleeptime</VARIABLE>
</HANGITEM>
<HANGBODY><PARAGRAPH><VARIABLE></VARIABLE>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM></HANGITEM>
<HANGBODY><PARAGRAPH>If the opening connection fails, sleep for <VARIABLE>sleeptime</VARIABLE> seconds and try again. Useful for dial-on-demand sites.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>NoRecipientAction=<VARIABLE>action</VARIABLE></HANGITEM>
<HANGBODY><PARAGRAPH> </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM></HANGITEM>
<HANGBODY><PARAGRAPH>Set the behavior when there are no recipient headers (To:, Cc: or Bcc;) in the message to <VARIABLE>action</VARIABLE>. Possible values for <VARIABLE>action</VARIABLE> are these:</PARAGRAPH>
<TABLE COLUMNS="2"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>none</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="216"><PARAGRAPH>Leaves the message unchanged</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>add-to</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="216"><PARAGRAPH>Adds a To: header with the envelope recipients</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>add-apparently-to</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="216"><PARAGRAPH>Adds an Apparently-To header with the 
envelope recipients</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>add-bcc</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="216"><PARAGRAPH>Adds an empty Bcc: header</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH>add-to-undisclosed</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="216"><PARAGRAPH>Adds a header reading &ldquo;To 
undisclosed-recipients&rdquo;</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="20771">sendmail Support Files</TITLE><PARAGRAPH>This section provides a summary of the support files that <ITALICS>sendmail</ITALICS> creates or generates.</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><ITALICS>/usr/lib/sendmail</ITALICS>  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The sendmail program.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/lib/sendmail.cf</ITALICS>  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The configuration file in textual form.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/bsd/newaliases</ITALICS>  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;A link to <ITALICS>/usr/lib/sendmail;</ITALICS> causes the alias database to be rebuilt. Running this program is equivalent to giving <ITALICS>sendmail</ITALICS> the <CMDLINEOPT>-bi </CMDLINEOPT>flag.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/lib/sendmail.fc</ITALICS>  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The configuration file represented as a memory image (the &ldquo;frozen configuration&rdquo;).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/lib/sendmail.hf</ITALICS>  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The SMTP help file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/lib/sendmail.st</ITALICS>  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;A statistics file; need not be present.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/lib/sendmail.killed</ITALICS>  </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;A text file that contains the names of all known &ldquo;dead&rdquo; hosts (hosts that no longer exist or cannot receive mail for some reason).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/lib/aliases</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>The text version of the alias file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/lib/aliases.{pag,dir}</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The alias file in <ITALICS>ndbm</ITALICS> format.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/var/spool/mqueue</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The directory in which the mail queue and temporary files reside.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/var/spool/mqueue/qf* </ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Control (queue) files for messages.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/var/spool/mqueue/df* </ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Data files.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/var/spool/mqueue/tf* </ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Temporary versions of the <ITALICS>qf</ITALICS> files, used during queue-file rebuild.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/var/spool/mqueue/nf* </ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;A file used when a unique ID is created.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/var/spool/mqueue/xf* </ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;A transcript of the current session.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/usr/bin/mailq</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Prints a listing of the mail queue; using this file is equivalent to using the <ITALICS>-bp</ITALICS> flag to <ITALICS>sendmail.</ITALICS>&space;</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/etc/init.d/mail</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Shell script for starting and stopping the <ITALICS>sendmail</ITALICS> daemon.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>/bin/mail</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Program that <ITALICS>sendmail</ITALICS> uses as the &ldquo;local&rdquo; mailer.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="63461">sendmail Debugging Flags</TITLE><PARAGRAPH>The following list includes many <COMMAND>sendmail </COMMAND>debugging flags. Flags that are especially useful are marked with an asterisk (*).</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>0.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print information about <COMMAND>sendmail</COMMAND> version.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>0.4* </HANGITEM>
<HANGBODY><PARAGRAPH>Show known names for local host.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>0.15*</HANGITEM>
<HANGBODY><PARAGRAPH>Dump delivery agents.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>0.20*</HANGITEM>
<HANGBODY><PARAGRAPH>Print network address of each interface.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>0.44 </HANGITEM>
<HANGBODY><PARAGRAPH>Have <FUNCTION>printav()</FUNCTION> print addresses of elements.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>1.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Show mail &ldquo;From&rdquo; address for locally generated mail.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>2.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print exit status and envelope flags.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>4.80*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace state of <CMDLINEOPT>enoughspace()</CMDLINEOPT>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>5.4  </HANGITEM>
<HANGBODY><PARAGRAPH>Print arguments to <FUNCTION>tick()</FUNCTION> calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>5.5 </HANGITEM>
<HANGBODY><PARAGRAPH>Print arguments to <FUNCTION>setevent()</FUNCTION> and <FUNCTION>clrevent()</FUNCTION> calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>5.6 </HANGITEM>
<HANGBODY><PARAGRAPH>Print event queue on <FUNCTION>tick()</FUNCTION> call.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>6.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate call to <FUNCTION>savemail()</FUNCTION> or <FUNCTION>returntosender()</FUNCTION> error processing.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>6.5 </HANGITEM>
<HANGBODY><PARAGRAPH>Trace states in <FUNCTION>savemail()</FUNCTION> state machine.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>7.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print information on envelope assigned to queue file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>7.2* </HANGITEM>
<HANGBODY><PARAGRAPH>Print selected queue-file name.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>7.20* </HANGITEM>
<HANGBODY><PARAGRAPH>Print intermediate queue-file name selections.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>8.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print various information about resolver calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>8.2*</HANGITEM>
<HANGBODY><PARAGRAPH>Return fully qualified canonical hostname to <FUNCTION>getcanonname</FUNCTION>(3).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>8.3*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace local hostnames that were dropped.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>8.5*</HANGITEM>
<HANGBODY><PARAGRAPH>Print hostname being tried in <FUNCTION>getcanonname</FUNCTION>(3).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>8.7*</HANGITEM>
<HANGBODY><PARAGRAPH>Answer yes or no to the hostname being tried in <FUNCTION>getcanonname</FUNCTION>(3).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>8.8*</HANGITEM>
<HANGBODY><PARAGRAPH>Turn on MX resolver debugging when it sends back the wrong type.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>9.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Show results from <FUNCTION>gethostbyaddr()</FUNCTION> call.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>10.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print message delivery information.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>11.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Log information about mail program used by call to <FUNCTION>openmailer()</FUNCTION>. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>11.2*</HANGITEM>
<HANGBODY><PARAGRAPH>Show the user and group IDs running during delivery.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>12.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Display <FUNCTION>remotename()</FUNCTION> input and output.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>13.1* </HANGITEM>
<HANGBODY><PARAGRAPH><FUNCTION>sendall()</FUNCTION>&mdash;Print addresses being sent to. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>13.3 </HANGITEM>
<HANGBODY><PARAGRAPH><FUNCTION>sendall()</FUNCTION>&mdash;Print each address in loop looking for failure.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>13.4 </HANGITEM>
<HANGBODY><PARAGRAPH><FUNCTION>sendall()</FUNCTION>&mdash;Print who gets the error.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>14.2 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate <FUNCTION>commaize()</FUNCTION> calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>15.1 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate port or socket number used by <FUNCTION>getrequests()</FUNCTION>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>15.2 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate when <FUNCTION>getrequests()</FUNCTION> forks or returns.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>15.15 </HANGITEM>
<HANGBODY><PARAGRAPH>Set DEBUG socket option in <FUNCTION>getrequests()</FUNCTION>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>16.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate host, address, and socket being connected to in <FUNCTION>makeconnection()</FUNCTION>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>16.14 </HANGITEM>
<HANGBODY><PARAGRAPH>Set DEBUG socket option in <FUNCTION>makeconnection()</FUNCTION>. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>18.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Show SMTP chatter.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>18.100 </HANGITEM>
<HANGBODY><PARAGRAPH>Suspend <ITALICS>sendmail</ITALICS> after reading each SMTP reply.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>20.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Display <FUNCTION>parseaddr()</FUNCTION> input and output.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21.2* </HANGITEM>
<HANGBODY><PARAGRAPH>Show rewrite rule-set subroutine calls/returns and input/output, and display run-time macro expansions.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21.3* </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate rewrite subroutine call from inside rewrite rule.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21.4* </HANGITEM>
<HANGBODY><PARAGRAPH>Display rewrite results.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21.10* </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate rule failures.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21.12* </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate rule matches and display address-rewrite steps.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21.15* </HANGITEM>
<HANGBODY><PARAGRAPH>Show rewrite substitutions.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>21.35 </HANGITEM>
<HANGBODY><PARAGRAPH>Display elements in pattern and subject.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>22.1*</HANGITEM>
<HANGBODY><PARAGRAPH>Display any invalid address before parsing with <FUNCTION>prescan()</FUNCTION>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>22.11*</HANGITEM>
<HANGBODY><PARAGRAPH>Display address typed in before parsing with <FUNCTION>prescan()</FUNCTION>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>25.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Show &ldquo;To&rdquo; list designations.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>26.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Show recipient designations/duplicate suppression.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>26.6* </HANGITEM>
<HANGBODY><PARAGRAPH>Show recipient password-match processing.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>27.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print alias and forward transformations and errors.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>27.2*</HANGITEM>
<HANGBODY><PARAGRAPH>Include file, self-reference, error on home.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>27.3* </HANGITEM>
<HANGBODY><PARAGRAPH>Print detailed <FUNCTION>aliaslookup()</FUNCTION> information.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>27.4*</HANGITEM>
<HANGBODY><PARAGRAPH>Warn if user tries to run included files owned by another user. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>27.9*</HANGITEM>
<HANGBODY><PARAGRAPH>Warn if a user changes uid/gid when included files are read.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>28.1*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace user database transactions.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>29.4*</HANGITEM>
<HANGBODY><PARAGRAPH>Print matches that are a result of fuzzy searches.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>30.1 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate end of headers when collecting a message.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>30.2 </HANGITEM>
<HANGBODY><PARAGRAPH>Print arguments to <FUNCTION>eatfrom()</FUNCTION> calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>30.3 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate when adding an Apparently-To header to the  message.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>31.2*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace processing of headers.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>31.6 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate call to <FUNCTION>chompheader()</FUNCTION> and header to be processed.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>32.1 </HANGITEM>
<HANGBODY><PARAGRAPH>Display collected header.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>33.1 </HANGITEM>
<HANGBODY><PARAGRAPH>Display <FUNCTION>crackaddr()</FUNCTION> input/output.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>34.11*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace how headers are generated and how they are skipped.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>35.9* </HANGITEM>
<HANGBODY><PARAGRAPH>Display macro definitions.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>35.24 </HANGITEM>
<HANGBODY><PARAGRAPH>Display macro expansions.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>36.5 </HANGITEM>
<HANGBODY><PARAGRAPH>Show symbol table processing.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>36.9 </HANGITEM>
<HANGBODY><PARAGRAPH>Show symbol table hash function result.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>37.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Display options as set.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>37.2* </HANGITEM>
<HANGBODY><PARAGRAPH>Show rewrite class loading.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>37.8*</HANGITEM>
<HANGBODY><PARAGRAPH>Show words added to class.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>38.2*</HANGITEM>
<HANGBODY><PARAGRAPH>Show map opens and failures.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>38.4*</HANGITEM>
<HANGBODY><PARAGRAPH>Show the results of map opens.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>38.20*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace map lookups.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>40.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate queueing of messages and display queue contents.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>40.4* </HANGITEM>
<HANGBODY><PARAGRAPH>Display queue control file contents.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>40.5* </HANGITEM>
<HANGBODY><PARAGRAPH>Display information about message-controlling user.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>41.1</HANGITEM>
<HANGBODY><PARAGRAPH>Display the queue ordering.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>41.2 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate <FUNCTION>orderq()</FUNCTION> failure to open control file.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>44.5*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace <FUNCTION>writable()</FUNCTION> calls. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>48.2*</HANGITEM>
<HANGBODY><PARAGRAPH>Trace calls to the user-configurable <FUNCTION>check_rule</FUNCTION> sets. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>45.1 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate <FUNCTION>setsender()</FUNCTION> calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>50.1 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate <FUNCTION>dropenvelope()</FUNCTION> calls.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>51.4 </HANGITEM>
<HANGBODY><PARAGRAPH>Don't remove transcript files (<ITALICS>qxAAXXXXX</ITALICS> files).</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>52.1 </HANGITEM>
<HANGBODY><PARAGRAPH>Indicate call to <FUNCTION>disconnect()</FUNCTION>; print I/O file descriptors.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>52.5 </HANGITEM>
<HANGBODY><PARAGRAPH>Don't perform disconnect.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>60.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print information about map lookups inside <FUNCTION>rewrite()</FUNCTION>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>61.1* </HANGITEM>
<HANGBODY><PARAGRAPH>Print information about MX record lookups.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
</SECTION1>
</APPENDIX>

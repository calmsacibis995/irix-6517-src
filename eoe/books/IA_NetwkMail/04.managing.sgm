<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="4"><TITLE><XREFTARGET ID="16081">Introducing Network Management</TITLE><PARAGRAPH>This chapter provides brief overview information on managing a network after installation. Indications for further reading are followed by a summary of the network initiation and shutdown process. Introductions to a few basic network management tools are followed by pointers to help in interpreting network statistics. These specific topics are covered:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="63739" TYPE="TITLE">&ldquo;Resources for Network Management&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="47206" TYPE="TITLE">&ldquo;About Network Startup and Shutdown&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>&space;<XREF IDREF="81450" TYPE="TITLE">&ldquo;Network Management Tools&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>&space;<XREF IDREF="74819" TYPE="TITLE">&ldquo;Interpreting Network Statistics&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>&space;<XREF IDREF="67667" TYPE="TITLE">&ldquo;Troubleshooting Poor Network Performance&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="63739">Resources for Network Management</TITLE><PARAGRAPH>Network management is sufficiently complex an issue that a wide understanding of controls and &ldquo;tuning knobs&rdquo; is needed, far beyond any capacity to cover here. Suggested sources of background information include these books:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><DOCTITLE>DNS and BIND</DOCTITLE>, by Paul Abitz and Cricket Liu, 2nd edition, O'Reilly and Associates.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>Internetworking with TCP/IP Volume 1</DOCTITLE>, by Douglas E. Comer, 3rd edition, Prentice Hall, 1994.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>LAN Management with SNMP and RMON</DOCTITLE>, by Gilbert Held, John Wiley and Sons, 1996.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>Managing Internetworks with SNMP</DOCTITLE>, by Mark Miller, M &amp; T Books, 1993.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>Managing NFS and NIS,</DOCTITLE> by Hal Stern, 1st edition, O'Reilly and Associates, 1991.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>Network Management - A Practical Perspective,</DOCTITLE> by Allan Leinwand and Karen Fang Conroy, 2nd edition, Addison Wesley, 1996.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>Routing in the Internet</DOCTITLE>, by Christian Huitema, Prentice Hall, 1995.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>System Performance Tuning</DOCTITLE>, by Mike Loukides, 1st edition, O'Reilly and Associates, 1990.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>TCP/IP Network Administration</DOCTITLE>, by Craig Hunt, 1st edition, O'Reilly and Associates, 1992.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><DOCTITLE>TCP/IP Illustrated, Volume 1</DOCTITLE>, by W. Richard Stevens, Addison Wesley, 1994.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Background reading should also include white papers and current periodicals on the subject because the field changes almost daily. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>About Network Management Functions</TITLE><PARAGRAPH>Network management ranges from maintenance, monitoring, and controlling network events to problem isolation. Basic necessary components in network management tools and strategies are: <INDEXTARGET ID="04.managing1"><!-- POSTPROCESSDATA: 04.managing1|network management: functions --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Fault management&mdash;Replacing or repairing managed devices when they fail, keeping network error logs, and swapping failed components. A few methods of detecting failure are introduced in <XREF IDREF="67667" TYPE="TITLE">&ldquo;Troubleshooting Poor Network Performance&rdquo;</XREF>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Accounting management&mdash;Identifying users of network resources and assigning departmental charges. This aspect of network management is covered in <DOCTITLE>IRIX Admin: Backup, Security, and Accounting. </DOCTITLE></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Configuration and name management&mdash;Planning, initializing and updating network software and hardware. Previous chapters have dealt with some of these issues. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Performance management&mdash;Ensuring network components perform to expectations, that the network uses available bandwidth appropriately, perhaps rewriting protocols and developing administration tools. Many aspects of these issues are covered in the pertinent application manuals. For example: <DOCTITLE>Performance Co-Pilot for ORACLE Administrator's Guide, Developer Magic: Performance Analyzer User's Guide,</DOCTITLE> and <DOCTITLE>IRIS HIPPI API Programmer's Guide.</DOCTITLE></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Security management&mdash;Protecting managed objects from intrusion or misapplication. For security-related issues see <DOCTITLE>IRIX Admin: Backup, Security, and Accounting. </DOCTITLE></PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Because many networks are hybrid in design and contain multiple protocols and a wide variety of devices, network management is the only cohesive ingredient in maintaining functionality and preventing chaos. The following sections on network startup and shutdown give a simple summary of how the network operates:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="23631" TYPE="TITLE">&ldquo;Network Initialization Process&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="46609" TYPE="TITLE">&ldquo;Network Shutdown Process&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="47206">About Network Startup and Shutdown</TITLE><PARAGRAPH>The main network script is <INDEXTARGET ID="04.managing2"><!-- POSTPROCESSDATA: 04.managing2|network shutdown --><FILENAME>/etc/init.d/network</FILENAME>. Other scripts for other network applications (UUCP, mail, and so on) also reside in this directory, but are covered in their appropriate chapter in this guide. The <COMMAND>network</COMMAND> script is described briefly here.&space;<INDEXTARGET ID="04.managing3"><!-- POSTPROCESSDATA: 04.managing3|starting the networknetwork startup --><INDEXTARGET ID="04.managing4"><!-- POSTPROCESSDATA: 04.managing4|shutting down the network --></PARAGRAPH>
<PARAGRAPH>The <INDEXTARGET ID="04.managing5"><!-- POSTPROCESSDATA: 04.managing5|network master script --><INDEXTARGET ID="04.managing6"><!-- POSTPROCESSDATA: 04.managing6|<ITALICS>network</ITALICS> script --><COMMAND>network</COMMAND> master script is called during system startup and shutdown. It defines the system name and host ID, ensures that the system has a valid Internet address, starts networking daemons, and initializes the network interfaces. Previously, site-dependent configuration commands to start and stop local daemons, add static routes, and publish ARP entries were put in a separate shell script called <FILENAME>/etc/init.d/network.local</FILENAME>. Symbolic links were made from <FILENAME>/etc/rc0.d</FILENAME> and <FILENAME>/etc/rc2.d</FILENAME> to <FILENAME>/etc/init.d/network.local</FILENAME> so the <FILENAME>network.local</FILENAME> file could be called at system startup and shutdown (see <XREF IDREF="25826" TYPE="TITLE">&ldquo;Creating a Local Network Script&rdquo;</XREF> for setup procedure). Currently this function is performed by <FILENAME>/etc/config/static-route.options</FILENAME>. </PARAGRAPH>
<PARAGRAPH>The <COMMAND>network</COMMAND> master script is linked to <FILENAME>/etc/rc0.d/K40network</FILENAME>, which is invoked from <FILENAME>/etc/rc0</FILENAME>&space;during shutdown, and to <FILENAME>/etc/rc2.d/S30network</FILENAME>, which is invoked from <FILENAME>/etc/rc2</FILENAME>&space;during startup. The script understands two arguments: <BOLD>start</BOLD>&space;and <BOLD>stop</BOLD>. It can be run manually for testing and troubleshooting network-related problems without having to reboot the system.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="23631">Network Initialization Process</TITLE><PARAGRAPH>During system initialization, the shell script <INDEXTARGET ID="04.managing7"><!-- POSTPROCESSDATA: 04.managing7|network initialization --><FILENAME>/etc/init.d/network</FILENAME> is called. These are the actions performed by the script at startup:<INDEXTARGET ID="04.managing8"><!-- POSTPROCESSDATA: 04.managing8|<ITALICS>/etc/init.d/network</ITALICS> initialization script --><INDEXTARGET ID="04.managing9"><!-- POSTPROCESSDATA: 04.managing9|initializing the network --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Checks hostname and Internet address to determine if system should be configured as standalone or networked. Checks <INDEXTARGET ID="04.managing10"><!-- POSTPROCESSDATA: 04.managing10|<ITALICS>/etc/sys_id</ITALICS> file --><FILENAME>sys_id</FILENAME>&space;and <FILENAME>hosts</FILENAME> files. If the <INDEXTARGET ID="04.managing11"><!-- POSTPROCESSDATA: 04.managing11|<ITALICS>/etc/hosts</ITALICS> file --><BOLD>network</BOLD> configuration flag is off, the system is configured for standalone operation.<INDEXTARGET ID="04.managing12"><!-- POSTPROCESSDATA: 04.managing12|standalone mode --></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Determines names and addresses or primary and router interfaces for typical configurations.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Obtains any site-dependent information for interfaces from the <FILENAME>netif.options</FILENAME> file.<INDEXTARGET ID="04.managing13"><!-- POSTPROCESSDATA: 04.managing13|<ITALICS>netif.options</ITALICS> file --></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If system is not diskless, the shell script flushes all old routes.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Configures all interfaces, including loopback, using the <COMMAND>ifconfig</COMMAND> command. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If configured for IP packet filtering, the shell script starts the IP packet filtering daemon (<COMMAND>/usr/etc/ipfilterd</COMMAND>). The <COMMAND>ipfilterd</COMMAND> daemon must be started before gateway interface initialization.<INDEXTARGET ID="04.managing14"><!-- POSTPROCESSDATA: 04.managing14|<ITALICS>ipfiltered</ITALICS> daemon --></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Initializes gateway interface.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Initializes additional interfaces specified in the <FILENAME>netif.options</FILENAME> file. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If specified, initializes the Hypernet interface according to the <FILENAME>ifconfig-hy.options</FILENAME> file.<INDEXTARGET ID="04.managing15"><!-- POSTPROCESSDATA: 04.managing15|<ITALICS>ifconfig-hy.options</ITALICS> file --></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Initializes the loopback interface.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Using the <COMMAND>chkconfig</COMMAND> command, determines daemon configuration and reads relevant daemon configuration files (<FILENAME>*.options</FILENAME>). <INDEXTARGET ID="04.managing16"><!-- POSTPROCESSDATA: 04.managing16|<ITALICS>chkconfig</ITALICS> command --></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Sets default route for all IP multicast packets to the primary interface.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If NIS software is configured, defines and sets NIS domain name.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If NIS software is configured, starts appropriate NIS daemons.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If NFS software is configured, starts appropriate NFS daemons and mounts any NFS filesystems listed in the <FILENAME>/etc/fstab</FILENAME>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If NFS software is configured, starts other NFS daemons if <COMMAND>autofs</COMMAND>, <COMMAND>cachefs</COMMAND>, or<COMMAND>&space;lockd</COMMAND> is configured on with <COMMAND>chkconfig</COMMAND>. <INDEXTARGET ID="04.managing17"><!-- POSTPROCESSDATA: 04.managing17|<ITALICS>/etc/fstab</ITALICS> file --></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If configured on with <COMMAND>chkconfig</COMMAND>, it starts standard daemons (<COMMAND>inetd</COMMAND>, <COMMAND>timed</COMMAND>, <COMMAND>timeslave</COMMAND>, <COMMAND>rarpd</COMMAND>, <COMMAND>rwhod</COMMAND>, <COMMAND>snmpd</COMMAND>, and so on).&space;&space;&space;&space;  <INDEXTARGET ID="04.managing18"><!-- POSTPROCESSDATA: 04.managing18|<ITALICS>inetd</ITALICS> daemon --><INDEXTARGET ID="04.managing19"><!-- POSTPROCESSDATA: 04.managing19|<ITALICS>timed</ITALICS> daemon --><INDEXTARGET ID="04.managing20"><!-- POSTPROCESSDATA: 04.managing20|<ITALICS>timeslave</ITALICS> daemon --><INDEXTARGET ID="04.managing21"><!-- POSTPROCESSDATA: 04.managing21|<ITALICS>rarpd</ITALICS> daemon --><INDEXTARGET ID="04.managing22"><!-- POSTPROCESSDATA: 04.managing22|<ITALICS>rwhod</ITALICS> daemon --><INDEXTARGET ID="04.managing23"><!-- POSTPROCESSDATA: 04.managing23|<ITALICS>snmpd</ITALICS> daemon --></PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="46609">Network Shutdown Process</TITLE><PARAGRAPH>During system shutdown, <INDEXTARGET ID="04.managing24"><!-- POSTPROCESSDATA: 04.managing24|network shutdown --><COMMAND>/etc/init.d/network</COMMAND> stops the daemons and disables the network devices. These are the actions the script performs at system shutdown:<INDEXTARGET ID="04.managing25"><!-- POSTPROCESSDATA: 04.managing25|shutting down the network --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Kills all network services that may be associated with a shell (<COMMAND>rlogind</COMMAND>, <COMMAND>rexecd</COMMAND>, <COMMAND>rshd</COMMAND>, <COMMAND>ftpd</COMMAND>, <COMMAND>telnetd</COMMAND>, and so on).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Kills some network daemons immediately (<COMMAND>inetd</COMMAND>, <COMMAND>bootp</COMMAND>, <COMMAND>tftpd</COMMAND>, <COMMAND>snmpd</COMMAND>, and so on).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If NFS is running, unmounts remote filesystems.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Kills all remote daemons.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If NFS is running, unexports exported filesystems. See the <DOCTITLE>ONC3/NFS Administrator's Guide</DOCTITLE> and the <DOCTITLE>NIS Administration Guide</DOCTITLE> for complete information about the optional NFS software.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Kills daemons that must be kept alive until the last minute (<COMMAND>portmap</COMMAND>, <COMMAND>slip</COMMAND>, <COMMAND>ipfilterd</COMMAND>).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Gracefully takes the system off the FDDI ring, if it is on the ring.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Stops the <COMMAND>ypbind</COMMAND> process of NIS.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="81450">Network Management Tools</TITLE><PARAGRAPH>This section summarizes the most standard networking tools for day-to-day management of your network. Except as noted, these networking tools reside in the <INDEXTARGET ID="04.managing26"><!-- POSTPROCESSDATA: 04.managing26|network management: tools --><FILENAME>/usr/etc</FILENAME> directory. See the online reference pages for explicit instructions on how these tools are used.These standard networking tools are described briefly in the following subsections: <REFPAGE>ifconfig(1M)</REFPAGE>,<REFPAGE>&space;netstat(1)</REFPAGE>, <REFPAGE>arp(1M)</REFPAGE>, rcpinfo<REFPAGE>(1M)</REFPAGE>, <REFPAGE>ping(1M)</REFPAGE>, <REFPAGE>spray(1M)</REFPAGE>, <REFPAGE>rtquery(1M)</REFPAGE>, <REFPAGE>traceroute(1M)</REFPAGE>, <REFPAGE>route(1M)</REFPAGE>, <REFPAGE>rup(1C)</REFPAGE>, <REFPAGE>ttcp(1)</REFPAGE>, and <REFPAGE>netsnoop(1M)</REFPAGE>. The optional Silicon Graphics network management tool NetVisualyzer is also summarized. </PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="45231"><REFPAGE>ifconfig(1M)</REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>The <INDEXTARGET ID="04.managing27"><!-- POSTPROCESSDATA: 04.managing27|<ITALICS>ifconfig</ITALICS> commandnetwork interfaces:checking --><INDEXTARGET ID="04.managing28"><!-- POSTPROCESSDATA: 04.managing28|<ITALICS>/usr/etc/ifconfig</ITALICS> command --><COMMAND>ifconfig</COMMAND> command sets or checks the network interfaces to TCP/IP; it assigns IP addresses, subnet mask, and broadcast address to each interface. <COMMAND>ifconfig</COMMAND> is performed at boot time by the master network configuration script <FILENAME>/etc/init.d/network</FILENAME>. An example of modifying the<FILENAME>&space;ifconfig-#.options</FILENAME> file is shown in Chapter 3. &lbreak;An example of using <INDEXTARGET ID="04.managing29"><!-- POSTPROCESSDATA: 04.managing29|<ITALICS>/etc/init.d/network</ITALICS> script --><COMMAND>ifconfig</COMMAND> to configure various interfaces is shown in <DOCTITLE>TCP/IP Network Administration</DOCTITLE> by Hunt. Also see the<REFPAGE>&space;ifconfig</REFPAGE>(1M) reference page for details on how to use the various options to this command. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="91680"><REFPAGE>netstat(1)</REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>The <INDEXTARGET ID="04.managing30"><!-- POSTPROCESSDATA: 04.managing30|<ITALICS>netstat</ITALICS> commandnetwork interfaces:displaying --><INDEXTARGET ID="04.managing31"><!-- POSTPROCESSDATA: 04.managing31|<ITALICS>/usr/etc/netstat</ITALICS> command --><COMMAND>netstat</COMMAND> command is used extensively to display which network interfaces are configured, which are available; <COMMAND>netstat</COMMAND> can also show whether a valid route to your destination is available. You can use netstat to display queue information (<USERINPUT>-iq</USERINPUT>), network memory (<USERINPUT>-m</USERINPUT>), and protocols (<USERINPUT>-p</USERINPUT>).&lbreak;For sample output of <COMMAND>netstat</COMMAND> see Collecting Network Statistics with netstat on page 79. Examples of the use of<COMMAND>&space;netstat</COMMAND> are given extensively in <DOCTITLE>TCP/IP Network Administration</DOCTITLE> by Hunt. An analysis of using <COMMAND>netstat</COMMAND> in the measurement of collisions and network saturation can be found in <DOCTITLE>Managing NFS and NIS</DOCTITLE> by Stern. Also see the<REFPAGE>&space;netstat</REFPAGE>(1) reference page for details on how to use the various options to this command.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="42382"><REFPAGE>arp(1M)</REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH> The <INDEXTARGET ID="04.managing32"><!-- POSTPROCESSDATA: 04.managing32|<ITALICS>arp</ITALICS> command --><INDEXTARGET ID="04.managing33"><!-- POSTPROCESSDATA: 04.managing33|<ITALICS>/usr/etc/arp</ITALICS> command --><COMMAND>arp</COMMAND> command displays the contents of the ARP table which maintains dynamic translations between IP addresses and Ethernet addresses. This command can be used to detect systems on the local net that are configured with the incorrect IP address. <COMMAND>arp</COMMAND> options include <USERINPUT>-a</USERINPUT> for all entries, <USERINPUT>-d</USERINPUT> to delete an entry, <USERINPUT>-s</USERINPUT> to publish an entry and act as a server for this entry, and <USERINPUT>-f</USERINPUT> to pull information from a specified file instead of <FILENAME>/dev/kmem. arp</FILENAME>. The<REFPAGE>&space;arp</REFPAGE>(1M) reference page describes the use of these options. </PARAGRAPH>
<PARAGRAPH>An example of using the <COMMAND>arp</COMMAND> command to troubleshoot incorrect address resolution is given in <DOCTITLE>TCP/IP Network Administration </DOCTITLE>by Hunt. <COMMAND>arp</COMMAND> does not display the local station's Ethernet address. To get a local station's Ethernet address, use the <COMMAND>netstat</COMMAND> command with the <USERINPUT>-ia</USERINPUT>&space;options. A discussion of using <COMMAND>arp</COMMAND> to diagnose intermittent failures is given in <DOCTITLE>Managing NFS and NIS</DOCTITLE> by Stern.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="50366"><REFPAGE>rpcinfo(1M)</REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>The <INDEXTARGET ID="04.managing34"><!-- POSTPROCESSDATA: 04.managing34|<ITALICS>rpcinfo</ITALICS> commandRPC server registrationtroubleshooting:RPC mismatches --><INDEXTARGET ID="04.managing35"><!-- POSTPROCESSDATA: 04.managing35|<ITALICS>/usr/etc/rpcinfo</ITALICS> command --><COMMAND>rpcinfo</COMMAND> command queries Remote Procedure Call (RPC) servers and their registration with the portmapper; it is analogous to <COMMAND>ping </COMMAND>in that it verifies that the remote machine is capable of replying to an RPC request. <COMMAND>rpcinfo</COMMAND> can be used to detect and debug unresponsive servers, RPC client-server mismatches, and broadcast problems related to the RPC service. The information provided by <COMMAND>rpcinfo</COMMAND> includes a list of <COMMAND>rpc</COMMAND>-based applications (<COMMAND>portmapper</COMMAND>, NIS, <COMMAND>rstatd</COMMAND>, and so on), and the program number, version number, protocol (TCP/UDP), and associated port number. If you are running an RPC-based network application and cannot get a response from the remote station, use the rpcinfo tool to ensure that the remote station supports the desired application. A discussion of RPC mechanics can be found in <DOCTITLE>Managing NFS and NIS</DOCTITLE> by Stern. The<REFPAGE>&space;rpcinfo</REFPAGE>(1M) reference page describes the use of available options. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="88397"><REFPAGE>ping(1M) </REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>The <INDEXTARGET ID="04.managing36"><!-- POSTPROCESSDATA: 04.managing36|<ITALICS>ping</ITALICS> commandtroubleshooting:network connectivity --><INDEXTARGET ID="04.managing37"><!-- POSTPROCESSDATA: 04.managing37|<ITALICS>/usr/etc/ping</ITALICS> command --><COMMAND>ping</COMMAND> command tests whether a remote host is alive and reachable from your system. It is based on the Internet Control Message Protocol (ICMP) and sends an ECHO_REQUEST soliciting an ECHO_RESPONSE, thereby creating a two-way stream. It provides general information about packet loss and round-trip time. </PARAGRAPH>
<PARAGRAPH>A discussion of using ping to test basic connectivity can be found in <DOCTITLE>TCP/IP Network Administration </DOCTITLE>by Hunt. A case study using ping to diagnose network health and an analysis of the results is given in <DOCTITLE>Managing NFS and NIS</DOCTITLE> by Stern.</PARAGRAPH>
<PARAGRAPH>See also <XREF IDREF="93837" TYPE="TITLE">&ldquo;Testing Network Connectivity With ping&rdquo;</XREF> and the <REFPAGE>ping(1M)</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="90375"><REFPAGE>spray(1M) </REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>The <INDEXTARGET ID="04.managing38"><!-- POSTPROCESSDATA: 04.managing38|<ITALICS>spray</ITALICS> commandtesting packet reception --><INDEXTARGET ID="04.managing39"><!-- POSTPROCESSDATA: 04.managing39|<ITALICS>/usr/etc/spray</ITALICS> command --><COMMAND>spray</COMMAND> utility sends a one-way stream of packets to a station using consecutive packets of fixed length, making remote procedure calls to the<COMMAND>&space;rpc.sprayd</COMMAND> daemon on the remote host to report how many packets were received, and the transfer rate. It roughly estimates network interface capacity both on individual hosts and through network hardware between hosts. Although it provides very limited information about general network performance, an example of using <COMMAND>spray</COMMAND> to gauge Ethernet interface capacity can be found in <DOCTITLE>Managing NFS and NIS</DOCTITLE> by Stern. See also the reference page for <REFPAGE>spray</REFPAGE>(1M). </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="98459"><REFPAGE>rtquery(1M)</REFPAGE> </HANGITEM>
<HANGBODY><PARAGRAPH>Sends a request to a designated station for information on the station's network routing tables (<INDEXTARGET ID="04.managing40"><!-- POSTPROCESSDATA: 04.managing40|<ITALICS>rtquery</ITALICS> commandtroubleshooting:routing --><INDEXTARGET ID="04.managing41"><!-- POSTPROCESSDATA: 04.managing41|<ITALICS>/usr/etc/rtquery</ITALICS> command --><COMMAND>routed</COMMAND> or <COMMAND>gated</COMMAND>). This tool can be useful for troubleshooting routing problems; it shows the number of routing response packets returned. For details see RFC 1058&mdash;<DOCTITLE>Routing Information Protocol</DOCTITLE> and the <REFPAGE>rtquery</REFPAGE>(1M) reference page. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="68535"><REFPAGE>traceroute(1M)</REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH> Track packets as they journey through the network with<COMMAND>&space;traceroute</COMMAND>. This tool is very useful for isolating network and router faults in a large heterogeneous network. It displays the names and addresses of all the intermediary routers that support the Internet Protocol &ldquo;time-to-live&rdquo; (TTL) field. It also displays the amount of time the packet spends traveling to the router, on the router, and leaving the router. traceroute increases network load; this factor should be considered when testing a network with <COMMAND>traceroute</COMMAND>. See the<INDEXTARGET ID="04.managing42"><!-- POSTPROCESSDATA: 04.managing42|<ITALICS>traceroute</ITALICS> command --><INDEXTARGET ID="04.managing43"><!-- POSTPROCESSDATA: 04.managing43|<ITALICS>/usr/etc/traceroute</ITALICS> command --><REFPAGE>&space;traceroute</REFPAGE>(1M) reference page for an explanation of how this command uses options, and sample output.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="74159"><REFPAGE>route(1M) </REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>Use the <INDEXTARGET ID="04.managing44"><!-- POSTPROCESSDATA: 04.managing44|<ITALICS>route</ITALICS> command --><INDEXTARGET ID="04.managing45"><!-- POSTPROCESSDATA: 04.managing45|<ITALICS>/usr/etc/route</ITALICS> command --><COMMAND>route</COMMAND> command to add or delete entries in the network routing tables. Typically, the routing tables are handled automatically by the routed or gated daemon. However, route can be used to create, maintain, and delete static routing tables, to flush routing tables, and to show metric information about routes. To have static routes incorporated at startup, modify the file <FILENAME>/etc/gateways</FILENAME>&space;and <FILENAME>/etc/config/routed.options</FILENAME>. </PARAGRAPH>
<PARAGRAPH>For an example of building a static routing table using the route command see <DOCTITLE>TCP/IP Network Administration </DOCTITLE>by Hunt.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><XREFTARGET ID="26839"><REFPAGE>rup(1C)</REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH> Displays status information, including uptime and load average, about remote stations using Sun RPC broadcasts. If no specific station is specified, it uses broadcasting and returns information about stations on the local network; broadcasting does not go through routers. This tool is useful for isolating physical problems with a station or the network. <INDEXTARGET ID="04.managing46"><!-- POSTPROCESSDATA: 04.managing46|<ITALICS>/usr/bin/rup</ITALICS> command --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="89979"><REFPAGE>ttcp(1) </REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>Used to test Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) performance. This tool provides a more realistic measurement of performance than the standard tests (<INDEXTARGET ID="04.managing47"><!-- POSTPROCESSDATA: 04.managing47|<ITALICS>ttcp</ITALICS> commandtroubleshooting:network performance --><INDEXTARGET ID="04.managing48"><!-- POSTPROCESSDATA: 04.managing48|<ITALICS>/usr/etc/ttcp</ITALICS> command --><COMMAND>spray</COMMAND>, <COMMAND>rup</COMMAND>, <COMMAND>ping</COMMAND>). It allows measurements to be taken at both the local and remote end of the transmission. See <XREF IDREF="59740" TYPE="TITLE">&ldquo;Measuring Network Throughput With ttcp&rdquo;</XREF>. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><REFPAGE></REFPAGE>
<XREFTARGET ID="13487"><REFPAGE>netsnoop(1M)</REFPAGE></HANGITEM>
<HANGBODY><PARAGRAPH>Captures packets and decodes network traffic, and in some ways acts as a network sniffer. You can either capture traffic to a file or watch real-time packets between any two machines. To capture or have a clear view of all traffic between two machines, <INDEXTARGET ID="04.managing49"><!-- POSTPROCESSDATA: 04.managing49|<ITALICS>netsnoop</ITALICS> command troubleshooting:network traffic --><COMMAND>netsnoop</COMMAND> must be run on a third machine. In this way the view from the third machine will not be biased by what the sender thinks it is putting on the wire, but might not actually be getting there, nor by what the receiver is failing to receive from the wire. </PARAGRAPH>
<PARAGRAPH>You can use <COMMAND>netsnoop</COMMAND> with a number of filters in realtime, or on a saved tracefile reactivated by the command <COMMAND>netsnoop</COMMAND>. You must be superuser to run <COMMAND>netsnoop</COMMAND> on a local network interface.<COMMAND>&space;netsnoop</COMMAND> is a useful tool for analyzing damaged packets, and tracing problems. If network overload is indicated, NetVisualyzer (summarized below) includes tools such as netcollect that are designed to help in figuring out if subnetting is needed.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH><XREFTARGET ID="91647">NetVisualyzer is network management tool available as an option for use on any Silicon Graphics system. It is a passive network management product that offers a set of graphical traffic monitoring, diagnostics, planning, and performance analysis tools that provide network information and statistics for Ethernet or FDDI networks in a visually intuitive form. NetVisualyzer comprises six tools: NetLook, NetGraph, NetCPA, Analyzer, RouteQuery, and TraceRoute. NetVisualyzer allows you to view and monitor your network, collect network statistics and generate reports based on those statistics, and decode heterogeneous packets layer by layer.<INDEXTARGET ID="04.managing50"><!-- POSTPROCESSDATA: 04.managing50|NetVisualyzer --></PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="74819">Interpreting Network Statistics</TITLE><PARAGRAPH>The network management tools provide the network administrator with valuable information about the network. However, the presentation of these statistics can be overwhelming. This section illustrates how to use three of the most common management tools and how to interpret the network statistics generated by these tools: <INDEXTARGET ID="04.managing51"><!-- POSTPROCESSDATA: 04.managing51|network statistics, interpreting --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="93837" TYPE="TITLE">&ldquo;Testing Network Connectivity With ping&rdquo;</XREF>&space;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="59740" TYPE="TITLE">&ldquo;Measuring Network Throughput With ttcp&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="62496" TYPE="TITLE">&ldquo;Collecting Network Statistics With netstat&rdquo;</XREF><INDEXTARGET ID="04.managing52"><!-- POSTPROCESSDATA: 04.managing52|interpreting network statistics --></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="93837">Testing Network Connectivity With ping </TITLE><PARAGRAPH>Used with no options, the <INDEXTARGET ID="04.managing53"><!-- POSTPROCESSDATA: 04.managing53|<ITALICS>ping</ITALICS> command example --><COMMAND>ping</COMMAND> tool tells you if a machine is active and reachable over your network. You can also use <COMMAND>ping -s </COMMAND>to show datagrams of a given size and transit times (round trip times) and packet losses. An example of using <COMMAND>ping</COMMAND> to isolate network problems can be found in <DOCTITLE>Managing NFS and NIS </DOCTITLE>by Stern.</PARAGRAPH>
<PARAGRAPH>Unless used with the count <CMDLINEOPT>-c </CMDLINEOPT>option, <COMMAND>ping</COMMAND> continuously transmits datagrams until halted, and therefore should not be used in a script. When using <COMMAND>ping</COMMAND> to troubleshoot, start with the local host to ensure the local network interface is operational, then increase the radius of testing to remote hosts and gateways.</PARAGRAPH>
<PARAGRAPH>The following example uses <COMMAND>ping</COMMAND> with the<CMDLINEOPT>&space;-c</CMDLINEOPT> option to limit the number of datagrams sent and received. The <COMMAND>ping</COMMAND> tool is testing and measuring traffic between the local station and the station testcase. See the <REFPAGE>ping(1M)</REFPAGE> reference page for more details about other <COMMAND>ping</COMMAND> options.</PARAGRAPH>
<EXAMPLE>
<USERINPUT>/usr/etc/ping -c5 testcase</USERINPUT>&space;
PING testcase (192.55.43.4): 56 data bytes
</EXAMPLE>
<CODE>
64 bytes from 192.55.43.4: icmp_seq=0 ttl=249 time=160.314 ms
64 bytes from 192.55.43.4: icmp_seq=1 ttl=249 time=47.057 ms
64 bytes from 192.55.43.4: icmp_seq=2 ttl=249 time=28.129 ms
64 bytes from 192.55.43.4: icmp_seq=3 ttl=249 time=48.596 ms
64 bytes from 192.55.43.4: icmp_seq=4 ttl=249 time=131.894 ms 
----testcase PING Statistics---- 
5 packets transmitted, 5 packets received, 0% packet loss 
round-trip min/avg/max = 28.129/83.198/160.314 ms 
</CODE>
<PARAGRAPH>If <COMMAND>ping</COMMAND> shows no output, the pinged host is disconnected or out of service. Consistent packet loss over 0.1% should be investigated further. Damaged packets are sometimes an indication of faulty hardware, so tracing cabling, connectors, and terminators is a reasonable step. Packet loss may be sporadic, in which case a script to <COMMAND>ping</COMMAND> at specified intervals, saved to a file, would be useful. If <COMMAND>ping</COMMAND> responds but you still cannot<COMMAND>&space;ftp</COMMAND> or<COMMAND>&space;telnet</COMMAND>, you may be experiencing a TTL error You can extend datagram time-to-live with the<COMMAND>&space;-T</COMMAND> option. See the <REFPAGE>ping</REFPAGE> reference page for details. </PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="59740">Measuring Network Throughput With ttcp</TITLE><PARAGRAPH>The <INDEXTARGET ID="04.managing54"><!-- POSTPROCESSDATA: 04.managing54|<ITALICS>ttcp</ITALICS>:example --><COMMAND>ttcp</COMMAND> tool measures network throughput. It provides a realistic measurement of network performance between two stations because it allows measurements to be taken at both the local and remote ends of the transmission. As with all network management tools, the statistics must be interpreted with the network configuration and applications in mind. For example, the statistics generated from a <COMMAND>ttcp</COMMAND> probe between two stations with routers in between results in lower throughput than if the stations were located on the same network. On the same note, users running applications that transmit large data structures see slower throughput than users running applications that transmit smaller data structures. </PARAGRAPH>
<PARAGRAPH>You can use ttcp by issuing the following commands, the first from the receiver</PARAGRAPH>
<CODE>
<USERINPUT>ttcp -r -s -l 32768</USERINPUT>&space;
</CODE>
<PARAGRAPH>the second from the sender: </PARAGRAPH>
<CODE>
<USERINPUT>ttcp -t -s -l 32768 -n XXX host</USERINPUT>&space;
</CODE>
<PARAGRAPH>The receiver should be started before the sender. The<CMDLINEOPT>&space;-l</CMDLINEOPT> option sets the length of the write/read size to 32K chunks. You can change this to 64K or 128K for slightly better performance, as long as it is a multiple of the page size. <FILENAME>ttcp</FILENAME> does memory-to-memory TCP data transfer between end systems, and measures end-to-end TCP throughput.</PARAGRAPH>
<PARAGRAPH>You should get over 800 KB per second on a 10baseT half duplex network and over 1000 Kbytes per second on a 10baseT full duplex switched network. On a 100baseT network you should get over 8500 KB per second for half duplex, and over 11500 KB per second for full duplex.</PARAGRAPH>
<PARAGRAPH>Most of the speed difference between half and full duplex is related to the Ethernet capture effect rather than anything else. There should be no<COMMAND>&space;netstat -i </COMMAND>input nor output errors. Some of the network device drivers support a <COMMAND>ifconfig xxx debug</COMMAND> mode which causes more informative diagnostic error messages to be displayed on the console when errors occur. Use <COMMAND>ifconfig xxx -debug</COMMAND> to disable them again.</PARAGRAPH>
<PARAGRAPH>The following example illustrates the statistics you might see if you ran a simple <COMMAND>ttcp</COMMAND> test between the stations sheridan and longstreet (two workstations) on a clean network. See the <REFPAGE>ttcp(1)</REFPAGE> reference page for details about the many <COMMAND>ttcp</COMMAND> options.</PARAGRAPH>
<PARAGRAPH>On <ITALICS>sheridan</ITALICS>, enter the command </PARAGRAPH>
<CODE>
<USERINPUT>ttcp -r -s </USERINPUT>
</CODE>
<PARAGRAPH>You see the following output:</PARAGRAPH>
<CODE>
ttcp-r: buflen=8192, nbuf=2048, align=16384/0, port=5001 tcp
ttcp-r: socket ttcp-r: accept from 192.102.108.4
ttcp-r: 16777216 bytes in 19.99 real seconds = <BOLD>819.64 KB/sec</BOLD> +++
ttcp-r: 10288 I/O calls, msec/call = 1.99, calls/sec = 514.67
ttcp-r: 0.1user 3.4sys 0:19real 17%
</CODE>
<PARAGRAPH>On <ITALICS>longstreet</ITALICS>, enter the command</PARAGRAPH>
<CODE>
<USERINPUT>ttcp -t -s sheridan</USERINPUT>&space;
</CODE>
<PARAGRAPH>You see the following output:</PARAGRAPH>
<CODE>
ttcp-t: buflen=8192, nbuf=2048, align=16384/0, port=5001 tcp  -> sheridan
ttcp-t: socket
ttcp-t: connect
ttcp-t: 16777216 bytes in 19.98 real seconds = <BOLD>820.02 KB/sec</BOLD> +++
ttcp-t: 2048 I/O calls, msec/call = 9.99, calls/sec = 102.50
ttcp-t: 0.0user 2.3sys 0:19real 12%
</CODE>
<PARAGRAPH>The throughput statistics are highlighted in bold and are in units of KBps. The throughput on the station sheridan is 819.64 KBps and the throughput on the station longstreet is 820.02 KBps. Both throughput values indicate good network performance between the stations.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="62496">Collecting Network Statistics With netstat</TITLE><PARAGRAPH>The <INDEXTARGET ID="04.managing55"><!-- POSTPROCESSDATA: 04.managing55|<ITALICS>netstat</ITALICS> command example --><COMMAND>netstat</COMMAND> tool shows the status of the network by identifying active sockets, routing and traffic. You can see network addresses for the interfaces, and the maximum transmission unit (MTU) depending on the option selected. On a given system, if the output collision rate is consistently greater than 5% of that on other systems, it may indicate a suspicious physical fault&mdash;a bad tap, transceiver, loose terminator, and so forth. Network-wide collision rate is discussed later.</PARAGRAPH>
<PARAGRAPH>An analysis of using <COMMAND>netstat</COMMAND> in the measurement of collisions and network saturation can be found in <DOCTITLE>Managing NFS and NIS</DOCTITLE> by Stern. The example given here illustrates the statistics you might see on a station using <COMMAND>netstat</COMMAND>. See the <REFPAGE>netstat(1)</REFPAGE> reference page for details about the many <COMMAND>netstat</COMMAND> options:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>netstat -i</USERINPUT>&space;
</EXAMPLE>
<CODE>
Name  Mtu    Network  Address      Ipkts   Ierrs    Opkts  Oerrs   Coll
enp0  1500   central  thumper     498690     937  1066135      3   4858
lo0  32880  loopback localhost  1678915       0   1678915      0      0
</CODE>
<PARAGRAPH>The collision rate is approximately 0.45%, well within the acceptable range.</PARAGRAPH>
<PARAGRAPH>If the network interface is assigned IP aliases, the output from <COMMAND>netstat -i</COMMAND> looks similar to this:</PARAGRAPH>
<EXAMPLE>
<USERINPUT>netstat -i</USERINPUT>&space;
</EXAMPLE>
<CODE>
Name   Mtu   Network    Address   Ipkts    Ierrs    Opkts  Oerrs   Coll
enp0  1500   central    thumper  498690      937  1066135      3   4858
enp0  1500    bldg-2     hopper  584280      163   137245      0  40717
lo0  32880  loopback  localhost 1678915        0  1678915      0      0
</CODE>
<PARAGRAPH>If the network-wide collision rate is consistently above 10%, it may be time to consider subdividing the network, although there are other possible culprits in the scenario&mdash;insufficient memory on diskless workstations, among several. See <XREF IDREF="11610" TYPE="TITLE">&ldquo;Troubleshooting Network Daemons to Improve Network Performance&rdquo;</XREF>. Throughput is a reliable indicator of network performance (see<XREF IDREF="59740" TYPE="TITLE">&ldquo;Measuring Network Throughput With ttcp&rdquo;</XREF>).</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>Network Tuning Information</TITLE><PARAGRAPH>In general, IRIX TCP/IP services are factory-tuned for optimum performance under routine network operating conditions and no tuning is required after a network setup. Kernel TCP/IP tuning parameters are controlled with the <INDEXTARGET ID="04.managing56"><!-- POSTPROCESSDATA: 04.managing56|TCP/IP tuning --><INDEXTARGET ID="04.managing57"><!-- POSTPROCESSDATA: 04.managing57|tuning TCP/IP --><COMMAND>systune</COMMAND> command or from the file <FILENAME>/var/sysgen/master.d/bsd</FILENAME>. </PARAGRAPH>
<CAUTION><PREFIX>Caution</PREFIX>It is not advisable to change the factory-shipped settings in this file unless you receive explicit instructions in product documentation or you are highly experienced in network administration. </CAUTION>
<PARAGRAPH>The following subsections deal with specific tuning aspects of your network:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="44219" TYPE="TITLE">&ldquo;About Setting MTU Sizes&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="26643" TYPE="TITLE">&ldquo;About Setting Packet Forwarding&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="78687" TYPE="TITLE">&ldquo;About Setting Window Sizes&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="63076" TYPE="TITLE">&ldquo;HTTP Considerations&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="44219">About Setting MTU Sizes</TITLE><PARAGRAPH>IRIX 6.2 and later versions implement MTU Discovery, a feature that allows a host to calculate maximum transmission unit (MTU) sizes using a table of commonly used MTU sizes. MTU Discovery is specified by the <INDEXTARGET ID="04.managing58"><!-- POSTPROCESSDATA: 04.managing58|MTU Discovery --><VARIABLE>tcp_mtudisc</VARIABLE> variable in <FILENAME>/var/sysgen/master.d/bsd</FILENAME>. When <VARIABLE>tcp_mtudisc </VARIABLE>is on and a router requests packet fragmentation without providing MTU size information, the calculated segment size is used to fragment the packet instead of the default maximum segment size (specified by <VARIABLE>tcp_mssdflt</VARIABLE>). The MTU Discovery flag is on (set to 1) by default.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="26643">About Setting Packet Forwarding</TITLE><PARAGRAPH>By default, IRIX hosts that contain more than one network interface are assumed to be routers, so IP packet forwarding is enabled at system startup. In addition, the factory-shipped configuration enables ICMP redirection, which causes the router to forward messages that are destined for a particular host to an alternative router instead. Two tunable kernel parameter, <VARIABLE>ipforwarding </VARIABLE>and <VARIABLE>icmp_dropredirects</VARIABLE>, turn packet forwarding and ICMP redirection on and off.</PARAGRAPH>
<PARAGRAPH>On firewall systems, <VARIABLE>ipforwarding</VARIABLE> and <VARIABLE>icmp_dropredirects</VARIABLE> must be turned off to prevent packets from breaching the security boundary. See the product documentation for your firewall application for specific instructions on setting IP forwarding characteristics. Also see the <REFPAGE>systune(1M)</REFPAGE> reference page for more information.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="78687">About Setting Window Sizes</TITLE><PARAGRAPH>Send and receive window sizes are specified by the variables <VARIABLE>tcp_sendspace</VARIABLE> and <VARIABLE>tcp_recvspace</VARIABLE> in <FILENAME>/var/sysgen/master.d/bsd</FILENAME>. By default, both variables are set to 60 KB. For wide area network traffic, reducing window sizes to a value in the range of 4 to 8 KB can result in better response times in interactive sessions. Large amounts of bulk transfer traffic from systems using TCP windows larger than 4 to 8 KB can overflow the buffers of slow- or moderate-speed routers on wide area network. Overflowing WAN router buffers reduces the speed of the bulk transfers, and interactive traffic usually must wait behind such large bursts in a route queue.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>Using small window sizes on high-speed WAN links (such as T3) severely reduces TCP speed.</NOTE>
<PARAGRAPH>On a local Ethernet network, reducing the window size often increases performance. However, it degrades performance on an FDDI network. </PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="63076">HTTP Considerations</TITLE><PARAGRAPH>In some cases, variables in <FILENAME>/var/sysgen/master.d/bsd</FILENAME> need adjusting for HyperText Transport Protocol (HTTP) servers. These variables frequently include changes to the number of connections and connection time-outs. See the product documentation for your HTTP application for specific tuning instructions.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="67667">Troubleshooting Poor Network Performance</TITLE><PARAGRAPH>Given the complexity of most networks it is often hard to troubleshoot poor network performance. Among the many factors to suspect are hardware problems, outgrown network configuration, heavy use of particular network applications, and excessive packet size. In general <INDEXTARGET ID="04.managing59"><!-- POSTPROCESSDATA: 04.managing59|performance factors (network) --><FILENAME>/usr/adm/SYSLOG</FILENAME> is a good place to start looking for diagnostic messages. The following subsections consider particular aspects of network performance improvement:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="59594" TYPE="TITLE">&ldquo;Troubleshooting Hardware Problems to Improve Network Performance&rdquo;</XREF><INDEXTARGET ID="04.managing60"><!-- POSTPROCESSDATA: 04.managing60|network performance factors --></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="45346" TYPE="TITLE">&ldquo;Troubleshooting Network Configuration to Improve Network Performance&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="11610" TYPE="TITLE">&ldquo;Troubleshooting Network Daemons to Improve Network Performance&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="64389" TYPE="TITLE">&ldquo;Decreasing Packet Size to Improve Network Performance&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="57325" TYPE="TITLE">&ldquo;Kernel Configuration for Better Network Performance&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="59594">Troubleshooting Hardware Problems to Improve Network Performance</TITLE><PARAGRAPH>A network can be slow or inoperable due to hardware malfunction, often manifesting in the form of packet loss or corruption. This can increase network traffic to the point of unmanageable congestion. Start by segmenting the network, and begin diagnosis section by section. The most obvious items to check at the physical level are these:<INDEXTARGET ID="04.managing61"><!-- POSTPROCESSDATA: 04.managing61|troubleshooting: network hardware --><INDEXTARGET ID="04.managing62"><!-- POSTPROCESSDATA: 04.managing62|network troubleshooting: hardware --></PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>Controller board </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Even if the network media bandwidth is capable of handling the network traffic load, the individual station may not be able to handle the traffic. This is evidenced by a high degree of traffic on the network interface for no apparent reason. This traffic can be seen using the <INDEXTARGET ID="04.managing63"><!-- POSTPROCESSDATA: 04.managing63|controller boards, and network troubleshooting --><COMMAND>gr_osview</COMMAND> tool (see the <REFPAGE>gr_osview(1)</REFPAGE> online reference page for options to see network traffic statistics). If traffic is unusually heavy on the interface, then there may be a problem with the controller, or the controller may be too slow to handle the volume of traffic. You may need a high-speed controller like the Efast card.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Transmitter and controller </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Ensure that the Signal Quality Error (SQE), also called <INDEXTARGET ID="04.managing64"><!-- POSTPROCESSDATA: 04.managing64|transmitters, and network troubleshooting --><ITALICS>heartbeat</ITALICS>, is disabled on both the transmitter and controller. SQE can cause unnecessary network traffic between the local station and the transceiver. See the installation guides for your network controller and transceiver for instructions on disabling SQE. By default, all Silicon Graphics network controller boards are shipped with SQE disabled.<INDEXTARGET ID="04.managing65"><!-- POSTPROCESSDATA: 04.managing65|Signal Quality Error --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>Physical problems with the media </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Cables, taps, and other hardware will periodically break or malfunction. A time domain reflectometer (TDR) is essential for troubleshooting Ethernet cable problems. A good analyzer is also strongly recommended to assist in isolating network physical problems. Silicon Graphics' NetVisualyzer product supplies a visual network analyzer ideal for locating physical problems with the media. Disk access difficulties can also contribute to slow network performance. An otherwise healthy network feels sluggish if NFS requests requiring disk access are not handled promptly.<INDEXTARGET ID="04.managing66"><!-- POSTPROCESSDATA: 04.managing66|network  troubleshooting: media --></PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="45346">Troubleshooting Network Configuration to Improve Network Performance </TITLE><PARAGRAPH>The network configuration or topology may also be a factor in adverse network performance. Monitor network usage to benchmark when the network is performing well. It provides a standard against which any changes can be measured. In summary check: <INDEXTARGET ID="04.managing67"><!-- POSTPROCESSDATA: 04.managing67|network troubleshooting: configuration variables --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Physical path&mdash;the wiring (if appropriate) for EMI and crosstalk.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Concentration points&mdash;hubs and concentrators for capacity and connectivity.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Number and location of repeaters and bridges &mdash;their age and intelligence.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Router and gateway configurations&mdash; for traffic load and throughput, particularly if connecting large subnets ensure that there are at least two ways in and out of a network. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Work group affiliations and routine sharing of resources (NFS filesystems, NIS domain, electronic mail, financial databases).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Client/server configurations and the traffic they generate.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Individual workstation usage, specific disk activity, burden of directory name lookups.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The complexity of network configuration requires a familiarity with all of the resources listed in <XREF IDREF="63739" TYPE="TITLE">&ldquo;Resources for Network Management&rdquo;</XREF>. <INDEXTARGET ID="04.managing68"><!-- POSTPROCESSDATA: 04.managing68|subnetworks: and troubleshooting --></PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="11610">Troubleshooting Network Daemons to Improve Network Performance</TITLE><PARAGRAPH>Some network daemons (<INDEXTARGET ID="04.managing69"><!-- POSTPROCESSDATA: 04.managing69|network  troubleshooting: servers --><COMMAND>rwhod</COMMAND>, <COMMAND>rtnetd</COMMAND>, and so on) can have an undesirable effect on the network or network interface. For example, if a workstation is a multi-processor or is running real-time processes, the <COMMAND>rtnetd</COMMAND> daemon may be running on the station. This daemon is responsible for preempting incoming network packets to provide better response time for real-time processes. This is perfectly acceptable if the user is aware of the trade-offs between network processing and real-time processing. Some network daemons should be evaluated individually.</PARAGRAPH>
<PARAGRAPH>Do not load <COMMAND>rtnetd</COMMAND> software on routers or other network intensive stations (mail servers, NIS and DNS servers, and so on).</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="64389">Decreasing Packet Size to Improve Network Performance</TITLE><PARAGRAPH>The maximum transfer unit (MTU) for data on the Ethernet is 1500 bytes. Network performance and efficiency increase with packet size up to the MTU for the medium. Packets that are larger than the media's MTU must be broken into smaller packets (fragmented) to fit within the medium's MTU. IRIX versions 6.2 and higher use MTU Discovery to perform fragmentation (see <INDEXTARGET ID="04.managing70"><!-- POSTPROCESSDATA: 04.managing70|network troubleshooting: packet size --><XREF IDREF="44219" TYPE="TITLE">&ldquo;About Setting MTU Sizes&rdquo;</XREF> for details).</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="57325">Kernel Configuration for Better Network Performance</TITLE><PARAGRAPH>You can change several parameters to customize network behavior for local configurations. The parameters listed below are in the <INDEXTARGET ID="04.managing71"><!-- POSTPROCESSDATA: 04.managing71|setup:kernel --><INDEXTARGET ID="04.managing72"><!-- POSTPROCESSDATA: 04.managing72|kernel parameters and networking --><FILENAME>/var/sysgen/master.d/bsd</FILENAME>&space;configuration file. For details on reconfiguring the kernel after changing this file, see <INDEXTARGET ID="04.managing73"><!-- POSTPROCESSDATA: 04.managing73|tunable parameters and networking --><INDEXTARGET ID="04.managing74"><!-- POSTPROCESSDATA: 04.managing74|<ITALICS>/var/sysgen/master.d/bsd</ITALICS> file --><EXTREF IDREF="97829" BOOK="IA_ConfigOps" FILE="" HDG="97829" INFO="">IRIX Admin: System Configuration and Operation</EXTREF>
</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Changing Kernel Tunable Options to Improve Network Performance</TITLE><PARAGRAPH>There are four kernel parameters that directly affect the network performance: <VARIABLE>tcp_sendspace</VARIABLE>, <VARIABLE>tcp_recvspace</VARIABLE>, <VARIABLE>udp_sendspace</VARIABLE>, and <VARIABLE>udp_recvgrams</VARIABLE>.</PARAGRAPH>
<PARAGRAPH>These parameters determine the default amount of buffer space used by TCP (SOCK_STREAM) and UDP (SOCK_DGRAM) sockets. The <VARIABLE>tcp_sendspace</VARIABLE> and <VARIABLE>tcp_recvspace</VARIABLE> parameters define the initial buffer space allocated to a socket. The <VARIABLE>udp_sendspace</VARIABLE> parameter defines the default maximum size of UDP datagrams that can be sent. The <VARIABLE>udp_recvgrams</VARIABLE> parameter determines the number of maximally sized UDP datagrams that can be buffered in a UDP socket. The total receive buffer size in bytes for each UDP socket is the product of <COMMAND>udp_sendspace</COMMAND> and <COMMAND>udp_recvgrams</COMMAND>. A program can increase or decrease the send buffer and receive buffer sizes for a socket with the SO_SNDBUF and SO_RCVBUF options to the <COMMAND>setsockopt </COMMAND>system call. Many older TCP implementations have problems with large TCP <VARIABLE>sendspace/recvspace</VARIABLE> values. This should be decreased from 60 to 24 in environments where older stations have problems communicating.</PARAGRAPH>
<PARAGRAPH>For 4.2BSD compatibility, the IRIX system limits its initial TCP sequence numbers to positive numbers.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Changing TCP Parameters to Improve PC Connectivity<INDEXTARGET ID="04.managing75"><!-- POSTPROCESSDATA: 04.managing75|TCP/IP connectivity to personal computers --><INDEXTARGET ID="04.managing76"><!-- POSTPROCESSDATA: 04.managing76|PC TCP/IP connections to an IRIX network --></TITLE><PARAGRAPH>Many industry-standard personal computers with TCP/IP implementations experience difficulty connecting to Silicon Graphics workstations and servers. This is because of the increased size of the <VARIABLE>tcp_sendspace</VARIABLE> and <VARIABLE>tcp_recvspace</VARIABLE> variables in the IRIX file <FILENAME>/var/sysgen/master.d/bsd</FILENAME>. </PARAGRAPH>
<PARAGRAPH>To allow your personal computers to connect successfully, change the values of the above variables from the default (60 * 1024) to (24 * 1024) and reconfigure the kernel with the <COMMAND>lboot </COMMAND>command. For more information on reconfiguring these values, see&space;<EXTREF IDREF="97829" BOOK="IA_ConfigOps" FILE="" HDG="97829" INFO="">IRIX Admin: System Configuration and Operation</EXTREF>
.</PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
</CHAPTER>

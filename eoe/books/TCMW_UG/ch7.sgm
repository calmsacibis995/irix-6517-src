<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="7"><TITLE><XREFTARGET ID="45074">Programming in a Trusted Environment</TITLE><PARAGRAPH>This chapter describes the special requirements of programming in a trusted environment, and lists new system and library calls available under Trusted IRIX/CMW. </PARAGRAPH>
<PARAGRAPH>Trusted IRIX/CMW conforms to the specifications in POSIX P1003.1eD15.</PARAGRAPH>
<PARAGRAPH>Sections in this chapter include:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="69864" TYPE="TITLE">&ldquo;Guidelines&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="92268" TYPE="TITLE">&ldquo;Trusted IRIX/CMW System and Library Calls&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="69864">Guidelines</TITLE><PARAGRAPH>There are a number of guidelines that anyone who programs in a secure environment should follow:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>In order to simplify your work, do not duplicate the work done by the I&amp;A programs of the Trusted IRIX/CMW system. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Make sure that all variables are in bounds.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Reduce global variable usage wherever possible.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Limit the functionality of each module to only one distinct task. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Do not create a procedure that circumvents any of the programmatic flow.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If overrides must be added, document them thoroughly in the code. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>By design and principle, minimize the use of privilege required or permitted by your programs.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="92268">Trusted IRIX/CMW System and Library Calls</TITLE><PARAGRAPH>The following system and library calls are exclusive to Trusted IRIX/CMW. Reference pages exist for each of these calls in reference page sections 2 and 3. Table 8-1 below lists each call and its corresponding action.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="7-1"><PREFIX>Table 7-1 </PREFIX>&space;<EMPHASIS>(continued)        </EMPHASIS>Trusted IRIX/CMW System and Library Calls</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="171"><PARAGRAPH>System/Library Call</PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Action</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>getlabel(2)</REFPAGE>, <REFPAGE>setlabel(2)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set the MAC label of a file</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>getplabel(2)</REFPAGE>, <REFPAGE>setplabel(2)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set the MAC label of a process</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>recvl(2)</REFPAGE>,  <REFPAGE>recvlfrom(2)</REFPAGE>, <REFPAGE>recvlmsg(2)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Receive a message and its MAC label 
from a socket</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>recvlu(2)</REFPAGE>, <REFPAGE>recvlufrom(2)</REFPAGE>, <REFPAGE>recvlumsg(2)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Receive a message, its MAC label, and the 
UID of the sender from a socket</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>satctl(2)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Control the collection of audit data</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>satread(2)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Read a block of audit record data</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>satwrite(2)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Write a block of audit record data</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_copy_ext(3C) </REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>&space;Copy ACL from system to user space or 
from user to system space</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_delete_def_file(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Delete the default ACL for a named 
directory</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_dup(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Make a copy of an ACL</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_free(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Free memory allocated by ACL interface 
calls</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_from_text(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Convert a POSIX ACL string to a struct acl 
or a struct acl to a POSIX ACL string</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_get_fd(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set the ACL associated with an 
open file</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_get_file(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set the ACL for a pathname</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_size(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Return the size of an ACL</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>acl_valid(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Validate an ACL</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_acquire(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Make permitted set capabilities effective 
or remove effective capabilities</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_clear(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Clear the fields of a capability</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_copy_ext(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Copy capability from system to user 
space or from user to system space</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_dup(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Make a copy of a capability</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_free(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Free allocated capability</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_from_text(3C)</REFPAGE>, <REFPAGE>cap_to_text</REFPAGE>, 
<REFPAGE>cap_value_to_text</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Convert a POSIX capabilities string to 
internal form, convert capabilities to a 
POSIX capabilities string, or return the 
POSIX name for a capability value</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_get_fd(3C)</REFPAGE>, <REFPAGE>cap_set_fd</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set the capabilities for an open file</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_get_file(3C)</REFPAGE>, <REFPAGE>cap_set_file</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set the capabilities for a pathname</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_get_flag(3C)</REFPAGE>, <REFPAGE>cap_set_flag</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set the value of a capability flag in 
a capability</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_get_proc(3C)</REFPAGE>, <REFPAGE>cap_set_proc</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get or set process capabilities</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_init(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Allocate a capability stucture</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>cap_size(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Return the size of a capability</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>getspwnam(3)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get a user's name from the administrative 
database</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>getuserinfonam(3)</REFPAGE>, <REFPAGE>getuserinfouid(3)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get information about a user.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>ia_audit(3)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Create and write an audit record, using 
</PARAGRAPH>
satwrite <PARAGRAPH></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>l</REFPAGE><REFPAGE>ibperfex(3C)</REFPAGE>, <REFPAGE>start_counters</REFPAGE>, 
<REFPAGE>read_counters</REFPAGE>, <REFPAGE>print_counters</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>A procedural interface to R10000 counters</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_cleared(3C)</REFPAGE>, <REFPAGE>mac_clearedlbl</REFPAGE>,  
<REFPAGE>mac_lowest</REFPAGE>, <REFPAGE>mac_lowestlbl</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Report on user's clearance </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_label_devs(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Relabel all listed character devices</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_dominate(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Compare two MAC labels for dominance 
relationship</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_dup(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Produce a duplicate copy of a MAC label </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_equal(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Compare two MAC labels for the equality 
relationship</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_from_text(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Convert an ASCII MAC label string to a 
binary format MAC label </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_size(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get the size of a MAC label</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_to_text(3)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Convert a binary format MAC label to an 
ASCII MAC label string </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>mac_valid(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Test a MAC label for validity </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>sat_eventtostr(3)</REFPAGE>, <REFPAGE>sat_strtoevent(3)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Convert an audit event index to or from 
an audit event string</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>sat_intrp_pathname(3)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Portable interface to interpret 
<REFPAGE>sat_pathname</REFPAGE> structs</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>sat_read_file_info(3)</REFPAGE>, <REFPAGE>sat_write_file_info</REFPAGE>, 
<REFPAGE>sat_free_file_info</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Portable interfaces to read audit file 
headers</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>sat_read_header_info(3)</REFPAGE>, 
<REFPAGE>sat_free_header_info</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Portable interfaces to read audit record 
headers</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>sgi_cap_cleared(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Determine whether a user's allowed 
capabilities are sufficient</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>sgi_cap_set_from_text(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Set all capabilities from a capabilities 
string</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="171"><PARAGRAPH><REFPAGE>sgi_getcapabilitybyname(3C)</REFPAGE></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="171"><PARAGRAPH>Get the default and allowed capability 
sets for a named user</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION1>
</CHAPTER>

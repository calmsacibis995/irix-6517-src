<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="9"><TITLE><XREFTARGET ID="86143">Automating  Installations With RoboInst</TITLE><PARAGRAPH>RoboInst is an extension to the miniroot that automates miniroot installations and performs related tasks, such as disk and filesystem configuration, as an integral part of the installation process. RoboInst also allows a &ldquo;live-mode&rdquo; installation as described in <INDEXTARGET ID="ch91"><!-- POSTPROCESSDATA: ch91|automatic installation --><INDEXTARGET ID="ch92"><!-- POSTPROCESSDATA: ch92|&amp;spaceautomatic miniroot installation  --><INDEXTARGET ID="ch93"><!-- POSTPROCESSDATA: ch93|&amp;spaceminiroot installation: automatic  --><XREF IDREF="52443" TYPE="TITLE">&ldquo;Additional RoboInst Command-Line Options&rdquo;</XREF>. The tasks performed during the installation are user-defined. RoboInst can be launched locally on the target host (RoboInst client) or from a network server (RoboInst server) to install any number of clients located anywhere on an internet. It can also be launched by a scheduler such as <COMMAND>cron</COMMAND> or from a batch queue.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>A RoboInst license is purchased separately. Refer to <XREF IDREF="27018" TYPE="TITLE">Chapter&nbsp;10, &ldquo;Licensing,&rdquo;</XREF> for information on acquiring a license to use RoboInst.</NOTE>
<PARAGRAPH>This chapter describes RoboInst fundamentals, how to prepare for using RoboInst, and how to customize miniroot installations with RoboInst scripts. The chapter contains these sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="33362" TYPE="TITLE">&ldquo;How RoboInst Works&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="58238" TYPE="TITLE">&ldquo;Getting Ready for RoboInst&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="43111" TYPE="TITLE">&ldquo;Customizing Miniroot Installations&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="13162" TYPE="TITLE">&ldquo;Launching RoboInst&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="33362">How RoboInst Works</TITLE><PARAGRAPH>Functionally, a RoboInst configuration server can be seen as four servers and any number of clients. The servers are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>RoboInst server&mdash;Runs <INDEXTARGET ID="ch94"><!-- POSTPROCESSDATA: ch94|RoboInst server roboinst server --><COMMAND>roboinst</COMMAND> command.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>software distribution server&mdash;Contains distribution(s) to be installed.<INDEXTARGET ID="ch95"><!-- POSTPROCESSDATA: ch95|distribution serverinstallation server --></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>configuration server&mdash;Contains RoboInst configuration file(s).<INDEXTARGET ID="ch96"><!-- POSTPROCESSDATA: ch96|configuration server --></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>boot server&mdash;Contains <INDEXTARGET ID="ch97"><!-- POSTPROCESSDATA: ch97|boot server --><FILENAME>sash</FILENAME> and miniroot files.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The installation is initiated from a RoboInst server, which may also be a boot server, distribution server, or client. The distribution to be installed is provided by a software distribution server (also called an installation server) which may or may not also be a boot server and/or configuration server. The clients are any network hosts that receive the installation.</PARAGRAPH>
<PARAGRAPH>The sequence of events in a RoboInst installation are specified by various files that reside in the <INDEXTARGET ID="ch98"><!-- POSTPROCESSDATA: ch98|configuration directory --><ITALICS>configuration directory</ITALICS>; the host containing the configuration directory is the configuration server. The configuration directory must contain a master miniroot configuration file, <INDEXTARGET ID="ch99"><!-- POSTPROCESSDATA: ch99|miniroot installation file --><FILENAME>mrconfig</FILENAME>, but it can also contain additional files and scripts that support the installation process. All files and scripts in the configuration directory, including <FILENAME>mrconfig</FILENAME>, are user-created; they specify actions to be taken before, during, or after the miniroot installation. See <XREF IDREF="74911" TYPE="TITLE">&ldquo;Creating a Miniroot Configuration File&rdquo;</XREF> for details.</PARAGRAPH>
<PARAGRAPH>Like other remote miniroot installations, RoboInst installations frequently rely on a boot server to load the miniroot from a remote source to the client system (see <XREF IDREF="30961" TYPE="TITLE">&ldquo;About Miniroot Installations&rdquo;</XREF>). The boot server contains a <INDEXTARGET ID="ch910"><!-- POSTPROCESSDATA: ch910|<ITALICS>sash</ITALICS> program --><FILENAME>sash</FILENAME> and IRIX miniroot boot files for all system models to be installed. In a simple RoboInst configuration, the boot server and the configuration server reside on the same host, but they can reside on separate hosts if necessary. </PARAGRAPH>
<PARAGRAPH><XREF IDREF="74393" TYPE="GRAPHIC">Figure&nbsp;9-1</XREF> illustrates a simple RoboInst configuration. </PARAGRAPH>
<PARAGRAPH><FIGURE><GRAPHIC FILE="Fig9-1.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="9-1"><PREFIX>Figure 9-1 </PREFIX><XREFTARGET ID="74393">Simple RoboInst Configuration</CAPTION>
</FIGURE>
</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Events in a RoboInst Installation </TITLE><PARAGRAPH>To perform an automatic miniroot installation on one or more clients, issue a <COMMAND>roboinst</COMMAND> command from the RoboInst server. This sequence of events occurs on the client after RoboInst is installed:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>RoboInst writes the network location of the miniroot (and a new IRIX 6.5 <INDEXTARGET ID="ch911"><!-- POSTPROCESSDATA: ch911|<ITALICS>sash</ITALICS> program --><FILENAME>sash</FILENAME> if the client is running an earlier release of IRIX than 6.5) in the disk volume header on the clients.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>RoboInst reboots the client using the new <FILENAME>sash</FILENAME>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>RoboInst relocates the swap and root partitions on the client disk if a relocation is specified (see <XREF IDREF="25242" TYPE="TITLE">&ldquo;Disk Partitions and RoboInst,&rdquo;</XREF> below).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>The <FILENAME>sash</FILENAME> sets an environment variable on the client to signal a RoboInst installation; then it loads the miniroot from its network location to the swap partition on the client. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>The miniroot configures networking via DHCP, BOOTP1533, or the PROM variables, as specified in the <COMMAND>startup</COMMAND> command.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>The miniroot copies the files in the configuration directory to the <FILENAME>/custom</FILENAME> directory in the miniroot filesystem.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Actions specified in the<FILENAME>&space;mrconfig</FILENAME> file (such as <COMMAND>fx</COMMAND>, <COMMAND>inst</COMMAND>, and <COMMAND>postinst</COMMAND> commands) are executed.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>The client system is returned to multiuser mode.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="25242">Disk Partitions and RoboInst</TITLE><PARAGRAPH>As <XREF IDREF="74393" TYPE="GRAPHIC">Figure&nbsp;9-1</XREF> illustrates, the physical location of the swap and root partitions on IRIX 6.5 systems are reversed from their traditional location in earlier IRIX versions. This relocation of <INDEXTARGET ID="ch912"><!-- POSTPROCESSDATA: ch912|disk partitions --><FILENAME>swap</FILENAME> and <FILENAME>root</FILENAME> permits arbitrary disk repartitioning during miniroot installations. When you upgrade a client system from an earlier IRIX version to IRIX 6.5, you can reverse <FILENAME>swap</FILENAME> and <FILENAME>root</FILENAME> automatically with an argument to the RoboInst command or with a configuration script (see <XREF IDREF="13162" TYPE="TITLE">&ldquo;Launching RoboInst&rdquo;</XREF>). This disk reconfiguration is not necessary unless you plan to do disk partitioning from the miniroot.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>Although the location of swap and root are reversed, their partition numbers remain the same (root remains partition 0 and swap remains partition 1).</NOTE>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="58238">Getting Ready for RoboInst</TITLE><PARAGRAPH>This list suggests what to do to prepare for using RoboInst for miniroot installations. The subsections that follow the list provide details for each task:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Identify the client systems to be installed. See <XREF IDREF="49290" TYPE="TITLE">&ldquo;The Client System List&rdquo;</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Select and prepare the servers. See <XREF IDREF="21657" TYPE="TITLE">&ldquo;Software Distribution Server Setup&rdquo;</XREF>, <XREF IDREF="68247" TYPE="TITLE">&ldquo;Boot Server Setup&rdquo;</XREF>, and <XREF IDREF="67803" TYPE="TITLE">&ldquo;Configuration Server Setup&rdquo;</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Create the configuration directory. See <XREF IDREF="65561" TYPE="TITLE">&ldquo;Configuration Directory Setup&rdquo;</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Configure DHCP if you plan to use it. See <XREF IDREF="28001" TYPE="TITLE">&ldquo;Network Setup&rdquo;</XREF>.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="49290">The Client System List</TITLE><PARAGRAPH>To prepare for RoboInst installations, create a list of hostnames of the client systems for which a miniroot installation is needed. These hostnames will be used in the RoboInst command to launch the installations (see <XREF IDREF="13162" TYPE="TITLE">&ldquo;Launching RoboInst&rdquo;</XREF>). </PARAGRAPH>
<PARAGRAPH>In addition to hostnames, you should also make a list of the different system models of your clients. Use the list to verify that the boot server contains the boot file that is necessary for each system model (see <INDEXTARGET ID="ch913"><!-- POSTPROCESSDATA: ch913|boot server --><XREF IDREF="74393" TYPE="GRAPHIC">Figure&nbsp;9-1</XREF>). </PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="21657">Software Distribution Server Setup</TITLE><PARAGRAPH>The software distribution server (or <ITALICS>installation</ITALICS> server) makes available the software images that Inst installs on other hosts. The images may be stored in directories on the hard disk or on CDs. If you plan to store the software distribution on a hard disk, plan on allocating approximately 0.5 GB for each CD in the original distribution. If you prefer, you can continue to use CDs as the software distribution source.</PARAGRAPH>
<PARAGRAPH>Instructions for configuring an installation server are given in <XREF IDREF="22950" TYPE="TITLE">Chapter&nbsp;2</XREF> (see <XREF IDREF="81158" TYPE="TITLE">&ldquo;Setting Up an Installation Server&rdquo;</XREF> for details). If you follow those instructions to set up the installation server for miniroot installations (this means enabling BOOTP and TFTP on the server), you can use the same host as the installation server, the configuration server, and the boot server. (See also <XREF IDREF="31826" TYPE="TITLE">&ldquo;Enabling BOOTP Forwarding on Routers&rdquo;</XREF> and <XREF IDREF="45067" TYPE="TITLE">&ldquo;Enabling TFTP Access on an Installation Server&rdquo;</XREF>.) </PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="68247">Boot Server Setup</TITLE><PARAGRAPH>The boot server contains <INDEXTARGET ID="ch914"><!-- POSTPROCESSDATA: ch914|<ITALICS>sash</ITALICS> program --><FILENAME>sash</FILENAME> and miniroot boot files for each model of client systems that it serves. The total disk space required for miniroot files is approximately 50 to 100 MB, depending on the number of models represented in your client set. If your network contains subnets, installations will require less time if an installation server is located on each subnet where clients are located; and locating the boot server on the same subnet saves additional time.</PARAGRAPH>
<PARAGRAPH>You will find the sash file, <FILENAME>sa</FILENAME>, in the <FILENAME>dist</FILENAME> directory of the Installation Tools distribution&mdash;on CD or provided by a software installation server. Various miniroot kernels are stored in the <FILENAME>miniroot</FILENAME> subdirectory of the Installation distribution. You can run <COMMAND>hinv</COMMAND> on the clients to determine their IP number to install the correct kernel on each. You should copy the <FILENAME>sa</FILENAME> file, and the miniroot subdirectory into a directory on the boot server (see <XREF IDREF="40379" TYPE="TITLE">&ldquo;Example Boot and Configuration Server&rdquo;</XREF> for an example.)</PARAGRAPH>
<PARAGRAPH>The server must be running BOOTP and TFTP to boot clients remotely. BOOTP is required to respond to client boot requests, and TFTP is required to transfer the boot files after the request is received. If you have not already done so, follow the instructions in <INDEXTARGET ID="ch915"><!-- POSTPROCESSDATA: ch915|BOOTP --><INDEXTARGET ID="ch916"><!-- POSTPROCESSDATA: ch916|TFTP --><XREF IDREF="31826" TYPE="TITLE">&ldquo;Enabling BOOTP Forwarding on Routers&rdquo;</XREF> and <XREF IDREF="45067" TYPE="TITLE">&ldquo;Enabling TFTP Access on an Installation Server&rdquo;</XREF> to set up BOOTP and TFTP.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>If you combine the boot server with an installation server that is configured for miniroot installations, BOOTP and TFTP are already configured. See <XREF IDREF="81158" TYPE="TITLE">&ldquo;Setting Up an Installation Server&rdquo;</XREF>.</NOTE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="67803">Configuration Server Setup</TITLE><PARAGRAPH>The configuration server contains miniroot configuration files in a special configuration directory. Because they occupy miniroot space during the installation process, the files in this directory are necessarily small; therefore, disk space is seldom a consideration when selecting a configuration server.<INDEXTARGET ID="ch917"><!-- POSTPROCESSDATA: ch917|configuration server --></PARAGRAPH>
<PARAGRAPH>If you decide to create the configuration server and boot server on separate hosts (or are launching RoboInst from the PROM monitor as described in <INDEXTARGET ID="ch918"><!-- POSTPROCESSDATA: ch918|boot server --><XREF IDREF="14341" TYPE="TITLE">&ldquo;Launching RoboInst From the PROM&rdquo;</XREF>), be sure to make a note of the configuration server's IP address. When the configuration server and boot server are on different hosts, you must specify the configuration server's IP address when launching RoboInst (see <XREF IDREF="13162" TYPE="TITLE">&ldquo;Launching RoboInst&rdquo;</XREF>).</PARAGRAPH>
<PARAGRAPH>The configuration server must permit access to files in the configuration directory. To allow this access, you can either enable TFTP on the configuration server if you have not already done so (see <INDEXTARGET ID="ch919"><!-- POSTPROCESSDATA: ch919|TFTP --><XREF IDREF="45067" TYPE="TITLE">&ldquo;Enabling TFTP Access on an Installation Server&rdquo;</XREF> for instructions); or, if you prefer, you can use an open guest account instead of TFTP (see <XREF IDREF="67681" TYPE="TITLE">&ldquo;Configuring an Installation Account&rdquo;</XREF> for setup instructions).</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="65561">Configuration Directory Setup</TITLE><PARAGRAPH>By convention, the configuration directory is <INDEXTARGET ID="ch920"><!-- POSTPROCESSDATA: ch920|configuration directory --><FILENAME>/usr/local/boot/roboinst/custom</FILENAME> on the configuration server. However, you can use a different directory if you specify the alternative name in RoboInst commands (see <XREF IDREF="13162" TYPE="TITLE">&ldquo;Launching RoboInst&rdquo;</XREF>). After you create the configuration directories, populate them with an&space;<INDEXTARGET ID="ch921"><!-- POSTPROCESSDATA: ch921|<ITALICS>mrconfig</ITALICS> file --><FILENAME>mrconfig</FILENAME> file (see <XREF IDREF="74911" TYPE="TITLE">&ldquo;Creating a Miniroot Configuration File&rdquo;</XREF>). You can also create and copy additional configuration files to control events before, during, or after the software installation process (see <XREF IDREF="50151" TYPE="TITLE">&ldquo;Creating Additional Configuration Files&rdquo;</XREF>). After creating configuration files, run the <COMMAND>roboinst_config</COMMAND> command to generate a <FILENAME>.index</FILENAME> file.This file is used to confirm that all files are copied successfully to the client.<INDEXTARGET ID="ch922"><!-- POSTPROCESSDATA: ch922|<ITALICS>.index</ITALICS> file index file --></PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="28001">Network Setup</TITLE><PARAGRAPH>AfterRoboInst loads the miniroot, it checks the environment to determine which of the following three ways to start networking:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>(default) RoboInst uses <COMMAND>netaddr</COMMAND>, the PROM value for IP address, to make an extended BOOTP (RFC 1533) request for network parameters (that is, netmask, gateway(s), static route(s), and so on).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>RoboInst makes a Dynamic Host Configuration Protocol (DHCP) request for an IP address, hostname, and netmask parameters. If the responding server offers DHCP service, the server returns the requested parameter information.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>RoboInst does not ask the network for information, but rather uses the PROM values for IP address and netmask (if set). This is a fallback procedure if #1 and #2 (above) should fail.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>If you prefer, you can create a custom script to set the client's IP address and other operating parameters (see the <REFPAGE>nvram(1M)</REFPAGE> reference page).</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="43111">Customizing Miniroot Installations</TITLE><PARAGRAPH>To customize a miniroot installation, prepare a miniroot configuration file and any additional files that you want to execute as part of the installation session. If you use TFTP on the configuration server and the configuration directory contains additional files, it must also contain an index file that lists each file in the configuration directory. <INDEXTARGET ID="ch923"><!-- POSTPROCESSDATA: ch923|miniroot configuration file  --></PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="74911">Creating a Miniroot Configuration File</TITLE><PARAGRAPH>The miniroot configuration file, <FILENAME>mrconfig</FILENAME>, controls RoboInst installation sessions. This is an ASCII file in the configuration directory that contains keywords that RoboInst interprets to partition disks, install software, and so on, from the miniroot of the client system. Example configuration files that you can study and modify are located in <INDEXTARGET ID="ch924"><!-- POSTPROCESSDATA: ch924|<ITALICS>mrconfig</ITALICS> file. <ITALICS>See</ITALICS>  miniroot configuration file. --><FILENAME>/usr/share/src/RoboInst</FILENAME> (if you have installed the examples from the RoboInst distribution, they are not installed by default).</PARAGRAPH>
<PARAGRAPH>&space;Each significant line of an <FILENAME>mrconfig</FILENAME> file begins with a keyword; blank lines and comments (lines beginning with the # character) are ignored. Keywords and arguments are described in <XREF IDREF="30828" TYPE="TABLE">Table&nbsp;9-1</XREF>. </PARAGRAPH>
<TABLE COLUMNS="3"><CAPTION LBL="9-1"><PREFIX>Table 9-1 </PREFIX><XREFTARGET ID="30828"> <EMPHASIS>(continued)        </EMPHASIS>Keywords in an mrconfig File</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="62"><PARAGRAPH>Keyword</PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>Arguments</PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Description</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>loghost </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>IP address (or hostname if boot 
server) </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies the host where log messages are sent 
in addition to the client system. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>partition&space;<INDEXTARGET ID="ch925"><!-- POSTPROCESSDATA: ch925|disk partitions --></PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>device size type name options </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies partitions to create and filesystems to 
mount. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>setenv </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>variable, value </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Sets the named variable in the RoboInst 
environment. This variable is also exported to 
subcommands, such as those executed before, 
during, and after the software installation 
phase. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>disksetup </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>None </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Reverses the location of the swap and root 
partitions on a disk that was partitioned before 
IRIX 6.5. </PARAGRAPH>
<PARAGRAPH><BOLD>CAUTION</BOLD>: Any data contained on the disk is 
lost when you use this keyword. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>init </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>/bin/sh command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies shell commands to execute during the 
initialization phase of the installation. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>fx </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>/bin/sh command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies shell commands to execute during the 
disk partitioning phase (<COMMAND>fx</COMMAND>) of the installation 
(see the <REFPAGE>fx</REFPAGE> manual page). </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>mkfs </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>/bin/sh command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies shell commands to execute during the 
filesystem creation phase (<COMMAND>mkfs</COMMAND>) of the 
installation (see the mkfs manual page). </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>preinst </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>/bin/sh command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies shell commands to execute during the 
phase immediately preceding software 
installation (<COMMAND>inst</COMMAND> execution). </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>inst </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>inst command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies a command recognized by the <COMMAND>inst</COMMAND> 
utility. Each <COMMAND>inst</COMMAND> command must be preceded by 
this keyword. Commands are collected in the 
order that they appear in the <COMMAND>mrconfig</COMMAND> file, 
copied to a temporary file, and issued to <COMMAND>inst</COMMAND> 
with this syntax:&lbreak;<COMMAND>inst -r/root -c tempfile</COMMAND>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>onerror </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>wait, ignore </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>If set to wait, suspend the installation and 
display the <SCREENDISPLAY>Inst></SCREENDISPLAY> prompt if an error occurs 
during the software installation process. If set to 
ignore, continue past error (still reported in 
INSTLOG and SYSLOG). </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>nokernel </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>None </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Causes the autoconfiguration phase to be 
skipped so the IRIX kernel is not generated. If 
you use this keyword, you must create a script 
to build the IRIX kernel. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>postinst </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>/bin/sh command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Specifies shell commands to be executed during 
the phase following software installation (<COMMAND>inst</COMMAND> 
execution). </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>if &lbreak;     ...&lbreak; endif </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>/bin/sh command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Similar to the if syntax in <FILENAME>/bin/sh</FILENAME> scripts. When 
an executed command exits with a status of 
zero, all lines up to the matching endif 
statement are evaluated. When an executed 
command exits with a nonzero status, the 
inclusion lines are ignored completely. Nesting 
is permitted. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="62"><PARAGRAPH>if &lbreak;    ...&lbreak; else&lbreak;    ...&lbreak; endif </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="129"><PARAGRAPH>/bin/sh command </PARAGRAPH>
</CELL>
<CELL LEFT="205" WIDTH="194"><PARAGRAPH>Similar to the if syntax in <FILENAME>/bin/sh</FILENAME> scripts. When 
an executed command exits with a status of 
zero, all lines up to the matching else statement 
are evaluated. When an executed command 
exits with a nonzero status, the lines between 
the else and endif statements are evaluated 
instead. Nesting is permitted. </PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<SECTION3 LBL="" HELPID = ""><TITLE>Ordering Commands in an mrconfig File</TITLE><PARAGRAPH>Commands are parsed based on the keywords in the following order from the <FILENAME>mrconfig</FILENAME> file: </PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH><KEYWORD>loghost</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>init</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>partition</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>fx</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>mkfs</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>preinst</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>inst</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>nokernel</KEYWORD>&space;</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><KEYWORD>postinst</KEYWORD>&space;</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>While the convention of placing the commands in the <COMMAND>mrconfig</COMMAND> file in this order helps make it easy for users to read, it is not necessary for RoboInst.</PARAGRAPH>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Partition Keyword</TITLE><PARAGRAPH>Use the <KEYWORD>partition</KEYWORD> keyword to specify disk partitioning, filesystems and mount points. The syntax is as follows:</PARAGRAPH>
<EXAMPLE>
partition  <VARIABLE>device size type name options</VARIABLE>&space;
</EXAMPLE>
<PARAGRAPH>The <VARIABLE>device</VARIABLE>, <VARIABLE>size</VARIABLE>, and <VARIABLE>type</VARIABLE> arguments are used as input to the <COMMAND>fx -s</COMMAND> command (see the <REFPAGE>fx(1M)</REFPAGE> reference page) to perform the partitioning. Partitions are laid-out in the order specified, unless a start position is given. </PARAGRAPH>
<PARAGRAPH><VARIABLE>device</VARIABLE> is a device name referring to a disk device in the <FILENAME>/dev/rdsk</FILENAME> directory, for example <FILENAME>dks0d1s0</FILENAME>. See <REFPAGE>dks(7M)</REFPAGE> for a full description of device names. </PARAGRAPH>
<PARAGRAPH><VARIABLE>size</VARIABLE> is one of the following arguments:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><CMDLINEOPT>existing</CMDLINEOPT>&mdash;keep the same size.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>standard</CMDLINEOPT>&mdash;use a standard layout for the entire disk. Type <CMDLINEOPT>root</CMDLINEOPT> or <CMDLINEOPT>option</CMDLINEOPT> arguments must also be specified. When <CMDLINEOPT>standard</CMDLINEOPT> is used, it applies to the entire disk (the partition component in the device name is irrelevant). For most partitioning tasks, either<KEYWORD>&space;standard root</KEYWORD> or <KEYWORD>standard option</KEYWORD> should be specified as the first partition statement for the given disk. If customizations are desired, additional partition statements for that disk may also be specified.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>all</CMDLINEOPT>&mdash;The entire disk.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><VARIABLE>start:size</VARIABLE></PARAGRAPH>
<PARAGRAPH><VARIABLE>start</VARIABLE> is an integer that specifies the exact start address of the partition, in 512-byte blocks. Alternatively, <VARIABLE>start</VARIABLE> can be <CMDLINEOPT>followspart</CMDLINEOPT><VARIABLE>#</VARIABLE> where <VARIABLE>#</VARIABLE> is the partition-number that this partition should immediately follow on the same disk. Note that the volume header is partition 8, so to use the first usable partition, you would normally use <CMDLINEOPT>followspart8.</CMDLINEOPT>&space;</PARAGRAPH>
<PARAGRAPH><VARIABLE>size</VARIABLE> is an integer that specifies the size of the partition in 512-byte blocks or the word <CMDLINEOPT>remainder</CMDLINEOPT> to use the entire remainder of the disk after making all of its other partitions. Note that partitions are processed in the order they appear in the file, so <CMDLINEOPT>remainder</CMDLINEOPT> should be used only in the last partition statement for a particular disk. </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH><VARIABLE>type</VARIABLE> is one of the foloowing arguments:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><CMDLINEOPT>root</CMDLINEOPT>&mdash;Valid only when <CMDLINEOPT>standard</CMDLINEOPT> is specified. A standard root disk is created, containing a swap partition and a root partition of maximum size containing an XFS&nbsp;filesystem.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>option</CMDLINEOPT>&mdash;Valid only when <CMDLINEOPT>standard</CMDLINEOPT> is specified. A standard option disk is created, consisting of a single partition of maximum size, containing an XFS filesystem. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>xfs</CMDLINEOPT> or<CMDLINEOPT>&space;xfs</CMDLINEOPT><KEYWORD>/</KEYWORD><VARIABLE>blocksize</VARIABLE>&space;</PARAGRAPH>
<PARAGRAPH>An XFS filesystem is created with the specified <VARIABLE>blocksize</VARIABLE>, and mounted at the directory <VARIABLE>name</VARIABLE> with the specified <VARIABLE>options</VARIABLE>. The blocksize must be an integer multiple of 512 and cannot exceed 65536. If omitted, a blocksize of 4096 is assumed.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>efs</CMDLINEOPT>&mdash;An EFS filesystem is created and mounted at the directory <VARIABLE>name</VARIABLE> with the specified <VARIABLE>options</VARIABLE>.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>EFS filesystems will not be supported in future IRIX releases. Use XFS&nbsp;filesystems in nearly all situations.</NOTE>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>swap</CMDLINEOPT>&mdash;A swap partition of the specified <VARIABLE>size</VARIABLE> is created.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>preserve</CMDLINEOPT>&mdash;Any existing filesystem is preserved, and no new one is created.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH><VARIABLE>name</VARIABLE> is ignored when <VARIABLE>type</VARIABLE> is <CMDLINEOPT>swap</CMDLINEOPT>. For other partition types, its value can be either of these:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><VARIABLE>pathname&mdash;</VARIABLE>indicating a local directory where the filesystem is to be mounted.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><CMDLINEOPT>nomount</CMDLINEOPT>&mdash;If <CMDLINEOPT>nomount</CMDLINEOPT> is specified, the filesystem is not mounted.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH><VARIABLE>options</VARIABLE> are options to the <COMMAND>mount -o</COMMAND> command. This field is optional. Any options specified are to be passed along to the <COMMAND>mount</COMMAND> command as a single argument. Multiple options should be comma separated with no spaces. Refer to the <REFPAGE>mount(1M)</REFPAGE> reference page for more information.</PARAGRAPH>
<PARAGRAPH>For example, use this command to make disk (0,1) a standard system drive:</PARAGRAPH>
<EXAMPLE>
partition dks0d1s0 standard root / 
</EXAMPLE>
<PARAGRAPH>For example, use this to make disk (0,2) a standard option drive mounted at <FILENAME>/d2</FILENAME>:</PARAGRAPH>
<EXAMPLE>
partition dks0d2s0 standard option /d2 
</EXAMPLE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Hostname Considerations</TITLE><PARAGRAPH>No name services, such as DNS or UNS, are available from the miniroot. The only source of hostnames is the <FILENAME>/etc/hosts</FILENAME> file and the hostname of the boot server. For this reason, all other remote host designations in the <FILENAME>mrconfig</FILENAME> file must be in the form of IP addresses, (unless you enter hostnames in the local <FILENAME>/etc/hosts </FILENAME>from a script, for example).</PARAGRAPH>
<PARAGRAPH>You can add hostnames to the miniroot's <FILENAME>/etc/hosts</FILENAME> file individually, for example:</PARAGRAPH>
<EXAMPLE>
init echo &ldquo;192.1.2.3 fred1.acme.com fred1&rdquo; >> /etc/hosts 
</EXAMPLE>
<PARAGRAPH>You can also copy in a host file from the configuration directory, for example:</PARAGRAPH>
<EXAMPLE>
init cat /custom/hosts >> /etc/hosts 
</EXAMPLE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Environment Variables</TITLE><PARAGRAPH>RoboInst software sets the following variables in the environment of all shell commands defined in an <FILENAME>mrconfig</FILENAME> file:&lbreak;&nbsp;</PARAGRAPH>
<TABLE COLUMNS="1"><TABLEBODY><ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_ABI </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_BOOTDIR </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_BOOTSERVER </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_CAPACITY </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_CAP_dks#d#vol </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_CONFIGDIR </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_CONFIGSERVER </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_CPUARCH </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_CPUBOARD </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_CUSTOM </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_GFXBOARD </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_HOSTNAME </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_IPADDR </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_MACHINE </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_MEMSIZE </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_MODE </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_ROOT </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_SUBGR </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="108"><PARAGRAPH>SGI_SYSID </PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>Refer to the <REFPAGE>roboinst_config(1M)</REFPAGE> reference page for details and the latest list of environment variables.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="50151">Creating Additional Configuration Files</TITLE><PARAGRAPH>If you use TFTP on the configuration server and the configuration directory contains files in addition to the <FILENAME>mrconfig</FILENAME> file, the configuration directory must also contain a <FILENAME>.index</FILENAME> file that lists each additional file. The <INDEXTARGET ID="ch926"><!-- POSTPROCESSDATA: ch926|<ITALICS>index</ITALICS> file --><FILENAME>/usr/etc/roboinst_config</FILENAME> script, which is part of RoboInst software, creates a <FILENAME>.index</FILENAME> file automatically. When you have finished creating the configuration directory and all necessary files (or have just modified a file), run <COMMAND>roboinst_config</COMMAND> to create a new <FILENAME>.index</FILENAME> file (refer to the <REFPAGE>roboinst_config(1M) </REFPAGE>reference page for details). </PARAGRAPH>
<PARAGRAPH>The index file that <FILENAME>roboinst_config</FILENAME> creates lists the name, type, size, and checksum of each file in the configuration directory. RoboInst compares this information to verify that the configuration files copied to the client are identical to the files contained in the configuration server. If the files are not identical, they are not executed and the installation fails. For this reason, you should generate a <FILENAME>.index</FILENAME> file even if the configuration directory contains only an <FILENAME>mrconfig</FILENAME> file.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="40379">Example Boot and Configuration Server</TITLE><PARAGRAPH><XREF IDREF="32191" TYPE="GRAPHIC">Figure&nbsp;9-2</XREF> shows an example of how a setup might look if your boot server and configuration server are the same host. A simple setup is shown in which the only configuration file is <FILENAME>mrconfig</FILENAME>, and the only boot files are the miniroot kernel, <FILENAME>unix.IP22</FILENAME>, and the sash, <FILENAME>sa.</FILENAME>&space;</PARAGRAPH>
<PARAGRAPH><FIGURE><GRAPHIC FILE="Fig9-2.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="9-2"><PREFIX>Figure 9-2 </PREFIX><XREFTARGET ID="32191">Sample RoboInst Directory and File Setup</CAPTION>
</FIGURE>
</PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>L<XREFTARGET ID="13162">aunching RoboInst </TITLE><PARAGRAPH>Launch RoboInst from a network host on which you have installed the RoboInst server software (refer to your release notes for client and server installation information). The command to launch RoboInst is <COMMAND>roboinst</COMMAND>, and basic command syntax is as follows:</PARAGRAPH>
<EXAMPLE>
roboinst [-n|-y] -b <VARIABLE>bootdir</VARIABLE>&space;<SCREENDISPLAY>-c</SCREENDISPLAY>&space;<VARIABLE>configdir</VARIABLE>&space;<SCREENDISPLAY>-t</SCREENDISPLAY>&space;<VARIABLE>time client(s)</VARIABLE>...
</EXAMPLE>
<PARAGRAPH>(Refer to the discussion below and the <REFPAGE>roboinst(1M)</REFPAGE> reference page for more command-line options and further details.)</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Launching RoboInst From the Server</TITLE><PARAGRAPH>You can launch RoboInst from any supported IRIX server with the <COMMAND>roboinst</COMMAND> server software installed. You must specify a boot server (<CMDLINEOPT>-b</CMDLINEOPT> option) and a configuration server (<CMDLINEOPT>-c</CMDLINEOPT> option). You may specify a time (<CMDLINEOPT>-t</CMDLINEOPT> option) if <COMMAND>at</COMMAND> is enabled on the server, or else accept the default time &ldquo;now.&rdquo; You may also specify automatic installation (<CMDLINEOPT>-y</CMDLINEOPT> option), or just check the configuration without initiating installation (<CMDLINEOPT>-n</CMDLINEOPT> option). If you specify neither <CMDLINEOPT>-y</CMDLINEOPT> or <CMDLINEOPT>-n</CMDLINEOPT> you will be prompted before starting the installation.</PARAGRAPH>
<PARAGRAPH>In <XREF IDREF="32029" TYPE="TEXT">Example&nbsp;9-1</XREF>, a configuration test is made with the <CMDLINEOPT>-n</CMDLINEOPT> option, and an error is returned because the <FILENAME>mrconfig</FILENAME> file is not readable.</PARAGRAPH>
<CODE><CAPTION LBL="9-1"><PREFIX>Example 9-1 </PREFIX><XREFTARGET ID="32029">RoboInst Configuration Test</CAPTION>bar1 1# <USERINPUT>roboinst -n -b fred1:/usr/local/boot</USERINPUT> \&lbreak;<USERINPUT>-c fred1:/usr/local/boot/roboinst/custom foo1 foo2 foo3 foo4</USERINPUT>&space;
roboinst: submitting job on bar1
bar1: Size mismatch for /tmp/d.roboinst.3106/mrconfig 0 (expected 1719)
bar1: Try running roboinst_config
bar1: Unable to retrieve configuration from 192.1.2.3:/usr/local/boot/roboinst/custom
bar1 2# 
</CODE>
<PARAGRAPH>In <XREF IDREF="75552" TYPE="TEXT">Example&nbsp;9-2</XREF>, RoboInst proceeds automatically, stopping at an error if <COMMAND>onerror</COMMAND> is set to <COMMAND>wait</COMMAND> (see <XREF IDREF="30828" TYPE="TABLE">Table&nbsp;9-1</XREF>).</PARAGRAPH>
<CODE><CAPTION LBL="9-2"><PREFIX>Example 9-2 </PREFIX><XREFTARGET ID="75552">RoboInst Configuration Launch With Prompting</CAPTION>bar1 1# <USERINPUT>roboinst -b fred1:/usr/local/boot</USERINPUT> \&lbreak;<USERINPUT>-c fred1:/usr/local/boot/roboinst/custom foo1 foo2 foo3 foo4</USERINPUT>&space;
</CODE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Launching RoboInst from the Client</TITLE><PARAGRAPH>To launch RoboInst from a client, install server and client software on the host and then run the <COMMAND>roboinst</COMMAND> command as with a server. If you are only installing on the client you run the <COMMAND>roboinst</COMMAND> command from, you do not specify the client name, as shown in <XREF IDREF="65820" TYPE="TEXT">Example&nbsp;9-3</XREF>.</PARAGRAPH>
<CODE><CAPTION LBL="9-3"><PREFIX>Example 9-3 </PREFIX><XREFTARGET ID="65820">RoboInst Installation From the Client</CAPTION>bar1 1# <USERINPUT>roboinst -b fred1:/usr/local/boot</USERINPUT> \
<USERINPUT>-c fred1:/usr/local/boot/roboinst/custom</USERINPUT>&space;
</CODE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="14341">Launching RoboInst From the PROM</TITLE><PARAGRAPH>If the client is not up and running on the network, you can initiate RoboInst from the PROM monitor of the client using a <COMMAND>boot</COMMAND> command with the argument <COMMAND>mrmode=custom, </COMMAND>as described in this section.</PARAGRAPH>
<CAUTION><PREFIX>Caution</PREFIX>Pay special attention to the <KEYWORD>disksetup</KEYWORD> keyword. Use the <KEYWORD>disksetup</KEYWORD> keyword only if you plan to repartition the disk drive, because it causes all current contents of the root drive to be lost. (Subsequent to its first use, however, <COMMAND>disksetup</COMMAND> may not make any noticable changes. In particular, it will not &ldquo;wipe&rdquo; the disk. Rather, it rearranges partitions, causing them (if changed) to not appear to have filesystems. In fact, if they have already been rearranged, <COMMAND>disksetup</COMMAND> may appear to do nothing.)</CAUTION>
<PARAGRAPH>The final argument, <SCREENDISPLAY>mrconfig=addr:/pathname</SCREENDISPLAY> is used to specify the IP address and pathname of the directory containing your <FILENAME>mrconfig</FILENAME> file. For example:</PARAGRAPH>
<EXAMPLE>
boot -f bootp()server:/path/sa(sashARCS) mrmode=custom disksetup=true mrconfig=130.62.51.86:/var/tmp/roboinst
boot -f bootp()server:/path/sa(sashARCS) mrmode=custom mrconfig=130.62.51.86:/var/tmp/roboinst
boot -f bootp()server:/path/sa(sashARCS) mrmode=custom
boot -f bootp()server:/path/sa(sash64) mrmode=custom mrconfig=130.62.51.86:/var/tmp/roboinst
boot -f bootp()server:/path/sa(sash64) mrmode=custom
</EXAMPLE>
<PARAGRAPH>In the examples above, it is necessary to use an IP address for the configuration server only if it is different from the boot server. If these two servers are the same, then a hostname can be specified: </PARAGRAPH>
<EXAMPLE>
boot -f bootp()server:/path/sa(sashARCS) mrmode=custom mrconfig=server:/var/tmp/roboinst 
</EXAMPLE>
<NOTE><PREFIX>Note</PREFIX>The PROM has a limit on the command line length. If you need to, you can work around this limit in any of several ways:</NOTE>
<ORDEREDLIST><LIST><PARAGRAPH>User a shorter directory path on the server(s).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Separate the command into multiple commands. For example, you can set most of the variables as separate commands:</PARAGRAPH>
<CODE>
setenv mrconfig 130.62.51.86:/var/tmp/roboinst
boot -f bootp()<VARIABLE>server</VARIABLE>:/<VARIABLE>path</VARIABLE>/sa(sashARCS) mrmode=custom \ disksetup=true
</CODE>
</LIST>
<LIST><PARAGRAPH>Configure DHCP or BOOTP1533 to return the<FILENAME>&space;mrconfig </FILENAME>path in the <COMMAND>pro_extensions_pathname</COMMAND> (proclaim configuration syntax) option. In this case, the file returned would contain the following:</PARAGRAPH>
<CODE>
pro_roboinstdir=server-IP:/<VARIABLE>path</VARIABLE>/<VARIABLE>to</VARIABLE>/<VARIABLE>mrconfig</VARIABLE>/<VARIABLE>dir</VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Use the default <FILENAME>mrconfig</FILENAME> paths (in the following order):</PARAGRAPH>
<CODE>
dhcpserver:/usr/local/boot/roboinst/custom
bootserver:/usr/local/boot/roboinst/custom
</CODE>
</LIST>
</ORDEREDLIST>
<NOTE><PREFIX>Note</PREFIX>The <COMMAND>boot</COMMAND> command may fail if you have not properly set your <VARIABLE>netaddr</VARIABLE> variable. Use this PROM command to display the current value: </NOTE>
<CODE>
<USERINPUT>printenv netaddr</USERINPUT>&space;
netaddr=130.62.51.201
</CODE>
<PARAGRAPH>If it is not set correctly to the IP address of the host, use the <COMMAND>setenv</COMMAND> command to set it correctly, for example:</PARAGRAPH>
<EXAMPLE>
>> <USERINPUT>setenv netaddr 143.69.51.201</USERINPUT>&space;
</EXAMPLE>
<PARAGRAPH>Contact your network administrator if you are not sure what the appropriate address is. On some networks, if you have a properly configured bootp server with your machine listed in its <FILENAME>/etc/bootptab</FILENAME> file, your <VARIABLE>netaddr</VARIABLE> variable will be set automatically if you first unset it with this command: </PARAGRAPH>
<EXAMPLE>
<USERINPUT>unsetenv netaddr</USERINPUT>&space;
</EXAMPLE>
<PARAGRAPH>Then use the <COMMAND>boot</COMMAND> command.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="52443">Additional RoboInst Command-Line Options</TITLE><PARAGRAPH>A useful command option to know is the <COMMAND>roboinst -L</COMMAND> &ldquo;live mode&rdquo; option. With this option, RoboInst does not bring the client down to the miniroot to perform the automatic installation. Only the <KEYWORD>preinst</KEYWORD>, <KEYWORD>inst</KEYWORD> and <KEYWORD>postinst</KEYWORD> keywords in the <FILENAME>mrconfig</FILENAME> file are processed with this option, and it is not possible to perform disk reformatting or modify networking parameters in live mode.</PARAGRAPH>
<PARAGRAPH>Another useful command to consider is <COMMAND>roboinst -f</COMMAND>. With the <CMDLINEOPT>-f</CMDLINEOPT> option, you can automatically install the roboinst client software on the clients.</PARAGRAPH>
<PARAGRAPH>Refer to the <REFPAGE>roboinst(1M)</REFPAGE> reference page for more information on these and other options.</PARAGRAPH>
<PARAGRAPH><XREFTARGET ID="38158"></PARAGRAPH>
</SECTION2>
</SECTION1>
</CHAPTER>

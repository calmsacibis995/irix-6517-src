%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (licensing.process.ai)
%%CreationDate: (8/28/96) ( 2:56 PM)
%%BoundingBox: 125 279 434 550
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (blue)
%%+ (green)
%%+ (PANTONE 260 CV)
%%+ (purple)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0.5 0.75 1 0.35 (brown)
%%+ 0.05 0.65 0.8 0 (copper)
%%+ 0 0 0 1 (custom black)
%%+ 1 0.5 0 0.35 (dark blue)
%%+ 0 1 0.85 0.35 (dark red)
%%+ 1 0 1 0 (green)
%%+ 0.6 1 0 0.34 (PANTONE 260 CV)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%%+ 0 0.15 1 0 (yellow)
%AI3_TemplateBox: 279 364 279 364
%AI3_TileBox: 0 0 552 730
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
u
u
0 O
1 1 0 0 (purple) 0.9 x
0 R
1 1 0 0 (purple) 0.25 X
0 i
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
295.0037 431.8323 m
366.2126 467.3707 L
433 434.2083 L
433 315.0208 L
361.7912 279.4824 L
295.0037 312.6448 L
295.0037 431.8323 L
b
u
1 1 0 0 (purple) 0 X
295.0039 312.6426 m
366.212 348.1822 L
366.2108 467.3697 L
S
366.212 348.1822 m
433 315.0208 L
S
U
U
U
u
u
0 O
1 1 0 0 (purple) 0.9 x
1 1 0 0 (purple) 0.25 X
125.7857 513.7882 m
196.9945 549.3267 L
263.782 516.1642 L
263.782 402.6218 L
192.5732 367.0834 L
125.7857 400.2458 L
125.7857 513.7882 L
b
u
1 1 0 0 (purple) 0 X
125.7858 400.2437 m
196.9939 435.7832 L
196.9927 549.3256 L
S
196.9939 435.7832 m
263.782 402.6218 L
S
U
U
U
0 O
0 g
1 w
181.1946 454.6595 m
164.7966 467.5383 178.7242 493.3332 187.0564 496.5783 C
186 500 L
174.1071 495.003 158.6665 468.139 177.9362 452.3395 C
F
332.862 443.2595 m
324.1886 458.2367 L
323.9898 453.8437 L
320.8687 456.8881 L
289.9394 481.9085 261.0092 499.9524 210.0876 509.569 C
209.9744 505.5706 L
255.7686 497.6325 287.8273 480.4492 318.2167 453.8933 C
318.1612 453.8307 L
321.2823 450.7862 L
316.9457 450.0575 L
332.862 443.2595 L
f
1 g
0 R
0 G
0.5 w
268.4648 483.6939 m
271.6138 483.6939 274.1667 486.2468 274.1667 489.3958 c
274.1667 492.5448 271.6138 495.0977 268.4648 495.0977 c
265.3158 495.0977 262.7629 492.5448 262.7629 489.3958 c
262.7629 486.2468 265.3158 483.6939 268.4648 483.6939 c
b
0 To
1 0 0 1 268.2148 486.7766 0 Tp
TP
-2.2393 0 Td
0 Tr
0 g
1 w
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
8 0 Tl
0 Tc
0 Tw
(3) Tx 
(\r) TX 
TO
u
u
1 0 1 0 (green) 0 x
195.6754 494.5841 m
206.6099 494.5841 215.4744 503.4485 215.4744 514.3831 c
215.4744 525.3176 206.6099 534.1821 195.6754 534.1821 c
184.7409 534.1821 175.8764 525.3176 175.8764 514.3831 c
175.8764 503.4485 184.7409 494.5841 195.6754 494.5841 c
f
U
u
1 0 1 0 (green) 0.0562 x
214.1972 514.8206 m
214.1972 504.3497 205.7086 495.8613 195.2379 495.8613 c
184.7671 495.8613 176.2786 504.3497 176.2786 514.8206 c
176.2786 525.2913 184.7671 533.7799 195.2379 533.7799 c
205.7086 533.7799 214.1972 525.2913 214.1972 514.8206 c
f
1 0 1 0 (green) 0.1125 x
212.92 515.2581 m
212.92 505.251 204.8074 497.1385 194.8004 497.1385 c
184.7934 497.1385 176.6808 505.251 176.6808 515.2581 c
176.6808 525.2651 184.7934 533.3777 194.8004 533.3777 c
204.8074 533.3777 212.92 525.2651 212.92 515.2581 c
f
1 0 1 0 (green) 0.1687 x
211.6428 515.6956 m
211.6428 506.1522 203.9062 498.4157 194.3629 498.4157 c
184.8196 498.4157 177.083 506.1522 177.083 515.6956 c
177.083 525.2389 184.8196 532.9755 194.3629 532.9755 c
203.9062 532.9755 211.6428 525.2389 211.6428 515.6956 c
f
1 0 1 0 (green) 0.225 x
210.3656 516.1331 m
210.3656 507.0535 203.0049 499.6928 193.9254 499.6928 c
184.8459 499.6928 177.4851 507.0535 177.4851 516.1331 c
177.4851 525.2126 184.8459 532.5733 193.9254 532.5733 c
203.0049 532.5733 210.3656 525.2126 210.3656 516.1331 c
f
1 0 1 0 (green) 0.2812 x
209.0885 516.5706 m
209.0885 507.9547 202.1037 500.97 193.4879 500.97 c
184.8721 500.97 177.8873 507.9547 177.8873 516.5706 c
177.8873 525.1864 184.8721 532.1711 193.4879 532.1711 c
202.1037 532.1711 209.0885 525.1864 209.0885 516.5706 c
f
1 0 1 0 (green) 0.3375 x
207.8113 517.0081 m
207.8113 508.856 201.2025 502.2472 193.0504 502.2472 c
184.8983 502.2472 178.2895 508.856 178.2895 517.0081 c
178.2895 525.1601 184.8983 531.7689 193.0504 531.7689 c
201.2025 531.7689 207.8113 525.1601 207.8113 517.0081 c
f
1 0 1 0 (green) 0.3937 x
206.5341 517.4456 m
206.5341 509.7572 200.3012 503.5244 192.6129 503.5244 c
184.9246 503.5244 178.6917 509.7572 178.6917 517.4456 c
178.6917 525.1339 184.9246 531.3667 192.6129 531.3667 c
200.3012 531.3667 206.5341 525.1339 206.5341 517.4456 c
f
1 0 1 0 (green) 0.45 x
205.2569 517.8831 m
205.2569 510.6584 199.4 504.8016 192.1754 504.8016 c
184.9508 504.8016 179.0939 510.6584 179.0939 517.8831 c
179.0939 525.1076 184.9508 530.9645 192.1754 530.9645 c
199.4 530.9645 205.2569 525.1076 205.2569 517.8831 c
f
1 0 1 0 (green) 0.5062 x
203.9797 518.3206 m
203.9797 511.5597 198.4988 506.0788 191.7379 506.0788 c
184.977 506.0788 179.4961 511.5597 179.4961 518.3206 c
179.4961 525.0814 184.977 530.5624 191.7379 530.5624 c
198.4988 530.5624 203.9797 525.0814 203.9797 518.3206 c
f
1 0 1 0 (green) 0.5625 x
202.7025 518.7581 m
202.7025 512.4609 197.5975 507.356 191.3004 507.356 c
185.0033 507.356 179.8983 512.4609 179.8983 518.7581 c
179.8983 525.0552 185.0033 530.1602 191.3004 530.1602 c
197.5975 530.1602 202.7025 525.0552 202.7025 518.7581 c
f
1 0 1 0 (green) 0.6187 x
201.4253 519.1956 m
201.4253 513.3622 196.6963 508.6332 190.8629 508.6332 c
185.0295 508.6332 180.3005 513.3622 180.3005 519.1956 c
180.3005 525.0289 185.0295 529.758 190.8629 529.758 c
196.6963 529.758 201.4253 525.0289 201.4253 519.1956 c
f
1 0 1 0 (green) 0.675 x
200.1481 519.6331 m
200.1481 514.2634 195.795 509.9103 190.4254 509.9103 c
185.0558 509.9103 180.7026 514.2634 180.7026 519.6331 c
180.7026 525.0027 185.0558 529.3558 190.4254 529.3558 c
195.795 529.3558 200.1481 525.0027 200.1481 519.6331 c
f
1 0 1 0 (green) 0.7312 x
198.871 520.0706 m
198.871 515.1647 194.8938 511.1875 189.9879 511.1875 c
185.082 511.1875 181.1048 515.1647 181.1048 520.0706 c
181.1048 524.9764 185.082 528.9536 189.9879 528.9536 c
194.8938 528.9536 198.871 524.9764 198.871 520.0706 c
f
1 0 1 0 (green) 0.7875 x
197.5938 520.5081 m
197.5938 516.0659 193.9926 512.4647 189.5504 512.4647 c
185.1082 512.4647 181.507 516.0659 181.507 520.5081 c
181.507 524.9502 185.1082 528.5514 189.5504 528.5514 c
193.9926 528.5514 197.5938 524.9502 197.5938 520.5081 c
f
1 0 1 0 (green) 0.8437 x
196.3166 520.9456 m
196.3166 516.9672 193.0913 513.7419 189.1129 513.7419 c
185.1345 513.7419 181.9092 516.9672 181.9092 520.9456 c
181.9092 524.9239 185.1345 528.1492 189.1129 528.1492 c
193.0913 528.1492 196.3166 524.9239 196.3166 520.9456 c
f
U
u
1 0 1 0 (green) 0.9 x
188.6754 515.0191 m
192.1901 515.0191 195.0394 517.8684 195.0394 521.3831 c
195.0394 524.8977 192.1901 527.747 188.6754 527.747 c
185.1607 527.747 182.3114 524.8977 182.3114 521.3831 c
182.3114 517.8684 185.1607 515.0191 188.6754 515.0191 c
f
U
U
0 To
1 0 0 1 195.2605 519.5081 0 Tp
TP
-8.5019 0 Td
0 Tr
0 g
0 0 Tl
(User\r) Tx 
-9.5871 -9.5 Td
(a) Tx 0 30 Tk 
(p) Tx 0 40 Tk 
(p) Tx 0 40 Tk 
(l) Tx 0 40 Tk 
(i) Tx 0 20 Tk 
(c) Tx 0 20 Tk 
(a) Tx 0 30 Tk 
(t) Tx 0 30 Tk 
(i) Tx 0 20 Tk 
(o) Tx 0 20 Tk 
(n) Tx 
(\r) TX 
TO
0 To
1 0 0 1 156.6667 538.2083 0 Tp
TP
-10.293 0 Td
0 Tr
(Client) Tx 
(\r) TX 
TO
0 To
1 0 0 1 412.3333 293.5417 0 Tp
TP
-11.8603 0 Td
0 Tr
(Server) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
438.6535 124.4409 m
438.6535 612 L
107 612 L
107 124.4409 L
438.6535 124.4409 L
(s) *
0 To
1 0 0 1 395.6085 351.3911 0 Tp
TP
-8.1138 0 Td
0 Tr
0 O
1 g
1 w
103.5721 Tz
9 0 Tl
(XFS) Tx 
(\r) TX 
TO
0 g
386.4845 341.8898 m
385.109 345.9739 l
380.9905 329.5205 L
394.1435 340.229 l
389.8618 339.7424 l
F
0.5 w
181.3958 380.4375 m
181.4894 380.5696 L
146.3247 405.4759 136.3155 475.3353 163.5452 499.9038 C
165.3906 501.6267 L
165.4546 501.5618 L
165.8964 497.0965 L
173.9185 512.8303 L
158.0707 505.0361 L
162.5291 504.5299 L
162.5818 504.4763 L
160.8655 502.8737 L
131.1401 476.0536 140.9435 406.8468 178.2068 378.0522 C
178.1276 377.9375 L
223.8339 340.9062 281.3993 345.1282 303.544 349.9027 C
303.049 353.8722 L
288.4865 351.1816 226.921 343.0995 181.3958 380.4375 C
f
175.1186 405.4525 m
175.2514 405.5452 L
199.9153 370.2105 254.2143 359.2845 290.3324 365.6525 C
292.8258 366.0485 L
292.814 366.139 L
289.5641 369.2329 L
306.9048 365.8852 L
291.0138 358.1795 L
293.3559 362.0068 L
293.346 362.0813 L
291.0269 361.7131 L
251.5986 354.7613 201.2492 364.82 172.7115 402.28 C
172.5962 402.2016 L
146.3829 435.0139 147.7584 485.6369 178.3303 503.6631 C
180.6579 500.4099 L
147.3322 479.4038 156.3376 428.6752 175.1186 405.4525 C
f
u
u
1 0 0 0 (blue) 0.875 x
0 R
0.8 G
417 372.6219 m
377.0921 392.5795 L
377.0921 410.1658 L
417 390.2083 L
417 372.6219 L
b
1 0 0 0 (blue) 0.9375 x
417 390.2083 m
377.0921 410.1658 L
386.1907 414.742 L
426.0986 394.7844 L
417 390.2083 L
b
1 0 0 0 (blue) 0.81 x
417 372.6182 m
417 390.2083 L
426.0986 394.7844 L
426.0986 377.1943 L
417 372.6182 L
b
U
u
1 0 0 0 (blue) 0.75 x
0.65 G
389.6667 359.2886 m
349.7588 379.2461 L
349.7588 396.8325 L
389.6667 376.8749 L
389.6667 359.2886 L
b
1 0 0 0 (blue) 0.875 x
389.6667 376.8749 m
349.7588 396.8325 L
358.8574 401.4086 L
398.7653 381.4509 L
389.6667 376.8749 L
b
1 0 0 0 (blue) 0.625 x
389.6667 359.2849 m
389.6667 376.8749 L
398.7653 381.4509 L
398.7653 363.861 L
389.6667 359.2849 L
b
U
u
u
0.5 G
366.6414 343.9651 m
326.7335 363.9228 L
326.7335 381.509 L
366.6414 361.5514 L
366.6414 343.9651 L
b
1 0 0 0 (blue) 0.8125 x
366.6414 361.5514 m
326.7335 381.509 L
335.8319 386.0852 L
375.74 366.1275 L
366.6414 361.5514 L
b
1 0 0 0 (blue) 0.435 x
366.6414 343.9615 m
366.6414 361.5514 L
375.74 366.1275 L
375.74 348.5375 L
366.6414 343.9615 L
b
U
U
u
u
1 0 0 0 (blue) 0.5 x
0 G
342.9421 328.7777 m
303.33 348.4248 L
303.33 366.0111 L
342.9421 346.364 L
342.9421 328.7777 L
b
1 0 0 0 (blue) 0.75 x
342.9421 346.364 m
303.33 366.0111 L
312.4284 370.5872 L
352.0407 350.9401 L
342.9421 346.364 L
b
1 0 0 0 (blue) 0.25 x
342.9421 328.7741 m
342.9421 346.364 L
352.0407 350.9401 L
352.0407 333.3502 L
342.9421 328.7741 L
b
U
U
U
0 g
1 w
215.6588 518.1554 m
232.9164 519.4669 L
229.405 516.8197 L
233.6807 515.966 L
271.8037 504.5957 305.0834 487.1809 341.5625 448.8125 C
337.6875 447.0625 L
305.4915 482.15 271.7939 502.0285 232.7093 512.0855 C
232.689 512.0043 L
228.4134 512.8579 L
230.2636 508.8687 L
215.6588 518.1554 L
f
u
u
0.6 1 0 0.34 (PANTONE 260 CV) 0.5 x
0 R
0 G
0.5 w
372.2755 397.4511 m
332.6633 417.0982 L
332.6633 444.4345 L
372.2755 424.7874 L
372.2755 397.4511 L
b
0.6 1 0 0.34 (PANTONE 260 CV) 0.75 x
372.2755 424.7874 m
332.6633 444.4345 L
341.7618 449.0106 L
381.374 429.3635 L
372.2755 424.7874 L
b
0.6 1 0 0.34 (PANTONE 260 CV) 0.25 x
372.2755 397.4475 m
372.2755 424.7874 L
381.374 429.3635 L
381.374 402.0236 L
372.2755 397.4475 L
b
U
U
0 To
0.8945 -0.447 0 1 353 427.7083 0 Tp
TP
-12.3084 0 Td
0 Tr
1 g
1 w
100.0061 Tz
(master\r) Tx 
-0.2246 -9 Td
(license\r) Tx 
-2.0197 -9 Td
(daemon) Tx 
(\r) TX 
TO
0 To
0.8946 -0.447 0 1 321 349.9516 0 Tp
TP
-16.3428 0 Td
0 Tr
0 g
100 Tz
(Vendor 1\r) Tx 
1.791 -9 Td
(daemon) Tx 
(\r) TX 
TO
0 To
0.8946 -0.447 0 1 347 364.6182 0 Tp
TP
-16.3428 0 Td
0 Tr
0.25 g
(Vendor 2\r) Tx 
1.791 -9 Td
(daemon) Tx 
(\r) TX 
TO
0 To
0.8946 -0.447 0 1 368.9332 380.4841 0 Tp
TP
-16.3428 0 Td
0 Tr
0.5 g
(Vendor 3\r) Tx 
1.791 -9 Td
(daemon) Tx 
(\r) TX 
TO
0 To
0.8946 -0.447 0 1 395.9661 392.8979 0 Tp
TP
-16.3428 0 Td
0 Tr
0.75 g
(Vendor 4\r) Tx 
1.791 -9 Td
(daemon) Tx 
(\r) TX 
TO
0 g
389.4029 337.0832 m
406.6145 360.7189 411.2546 386.3417 404.8865 396.2526 c
399.7874 404.1883 387.4337 411.8777 377.0921 410.1658 C
377.7454 406.2195 L
386.1947 407.6181 397.3743 400.3446 401.5527 394.0423 c
406.5646 386.4828 403.4689 363.2835 386.5007 339.6785 C
389.4029 337.0832 L
f
1 g
0 R
0 G
0.5 w
397.25 346.459 m
400.399 346.459 402.9519 349.0119 402.9519 352.1609 c
402.9519 355.3099 400.399 357.8627 397.25 357.8627 c
394.101 357.8627 391.5481 355.3099 391.5481 352.1609 c
391.5481 349.0119 394.101 346.459 397.25 346.459 c
b
0 To
1 0 0 1 397 349.5417 0 Tp
TP
-2.2393 0 Td
0 Tr
0 g
1 w
8 0 Tl
(1) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
289.9375 485.7923 m
293.0865 485.7923 295.6394 488.3452 295.6394 491.4942 c
295.6394 494.6432 293.0865 497.196 289.9375 497.196 c
286.7885 497.196 284.2356 494.6432 284.2356 491.4942 c
284.2356 488.3452 286.7885 485.7923 289.9375 485.7923 c
b
0 To
1 0 0 1 289.6875 488.875 0 Tp
TP
-2.2393 0 Td
0 Tr
0 g
1 w
(4) Tx 
(\r) TX 
TO
u
u
0.75 g
0 R
0.75 G
0.5 w
245.8349 453.9703 m
227.3337 463.1781 L
227.3337 425.3475 l
245.8349 416.1397 l
245.8349 453.9703 L
b
1 g
221.444 426.0126 m
240.3499 416.6025 l
245.6097 425.9085 245.6097 441.6881 v
245.6097 453.624 L
227.1085 462.8318 L
227.1085 450.8959 l
227.1085 437.0351 221.444 426.0126 y
b
[3 1 2 5 1 6 ]0 d
240.7545 451.1963 m
232.1661 455.5489 L
S
241.211 444.9249 m
230.195 450.289 L
S
241.211 442.9019 m
230.195 448.266 L
S
241.211 440.8789 m
230.195 446.2429 L
S
241.211 438.8558 m
230.195 444.2199 L
S
240.6042 437.2374 m
230.195 442.1969 L
S
240.6042 435.4167 m
230.195 440.1738 L
S
240.4018 433.596 m
229.9927 438.3531 L
S
239.9972 431.3706 m
229.5881 436.1278 L
S
239.3903 429.3476 m
228.9812 434.1048 L
S
237.9742 427.5269 m
227.5651 432.284 L
S
0 O
1 g
[]0 d
228.6577 462.6531 m
228.6577 463.6646 229.391 463.5382 229.391 462.1979 c
229.391 456.938 l
229.391 455.2943 228.4301 455.6989 228.4301 457.5449 c
228.4301 458.6355 228.4301 460.506 228.4301 461.5114 C
228.1267 461.6378 L
228.1267 460.6324 228.1267 458.7619 228.1267 457.6714 c
228.1267 455.2438 229.7451 454.6368 229.7451 456.8621 c
229.7451 462.1221 l
229.7451 463.8669 228.4301 464.1704 228.4301 462.7542 C
228.6577 462.6531 L
b
U
u
0.75 g
0.5 G
232.7039 447.1243 m
214.2027 456.3321 L
214.2027 418.5015 l
232.7039 409.2937 l
232.7039 447.1243 L
b
1 g
208.313 419.1667 m
227.2189 409.7565 l
232.4787 419.0625 232.4787 434.8421 v
232.4787 446.778 L
213.9775 455.9858 L
213.9775 444.0499 l
213.9775 430.1891 208.313 419.1667 y
b
[3 1 2 5 1 6 ]0 d
227.6235 444.3503 m
219.0351 448.7029 L
S
228.08 438.0789 m
217.064 443.443 L
S
228.08 436.0559 m
217.064 441.42 L
S
228.08 434.0329 m
217.064 439.397 L
S
228.08 432.0099 m
217.064 437.3739 L
S
227.4732 430.3914 m
217.064 435.3509 L
S
227.4732 428.5707 m
217.064 433.3279 L
S
227.2708 426.75 m
216.8617 431.5072 L
S
226.8662 424.5247 m
216.4571 429.2818 L
S
226.2593 422.5016 m
215.8502 427.2588 L
S
224.8432 420.6809 m
214.4341 425.438 L
S
0 O
1 g
[]0 d
215.5267 455.8071 m
215.5267 456.8186 216.2601 456.6922 216.2601 455.352 c
216.2601 450.092 l
216.2601 448.4483 215.2991 448.853 215.2991 450.699 c
215.2991 451.7895 215.2991 453.66 215.2991 454.6654 C
214.9957 454.7918 L
214.9957 453.7864 214.9957 451.916 214.9957 450.8254 c
214.9957 448.3978 216.6141 447.7909 216.6141 450.0162 c
216.6141 455.2761 l
216.6141 457.0209 215.2991 457.3244 215.2991 455.9083 C
215.5267 455.8071 L
b
U
u
0.75 g
0.25 G
219.5729 440.2783 m
201.0717 449.4862 L
201.0717 411.6555 l
219.5729 402.4477 l
219.5729 440.2783 L
b
1 g
195.182 412.3207 m
214.0879 402.9106 l
219.3477 412.2165 219.3477 427.9961 v
219.3477 439.932 L
200.8465 449.1398 L
200.8465 437.2039 l
200.8465 423.3432 195.182 412.3207 y
b
[3 1 2 5 1 6 ]0 d
214.4925 437.5044 m
205.9041 441.8569 L
S
214.949 431.233 m
203.933 436.597 L
S
214.949 429.2099 m
203.933 434.574 L
S
214.949 427.1869 m
203.933 432.551 L
S
214.949 425.1639 m
203.933 430.528 L
S
214.3422 423.5455 m
203.933 428.5049 L
S
214.3422 421.7247 m
203.933 426.4819 L
S
214.1398 419.904 m
203.7307 424.6612 L
S
213.7352 417.6787 m
203.3261 422.4358 L
S
213.1283 415.6557 m
202.7192 420.4128 L
S
211.7122 413.8349 m
201.3031 418.5921 L
S
0 O
1 g
[]0 d
202.3957 448.9611 m
202.3957 449.9726 203.1291 449.8462 203.1291 448.506 c
203.1291 443.2461 l
203.1291 441.6024 202.1681 442.007 202.1681 443.853 c
202.1681 444.9436 202.1681 446.814 202.1681 447.8194 C
201.8647 447.9459 L
201.8647 446.9405 201.8647 445.07 201.8647 443.9794 c
201.8647 441.5518 203.4831 440.9449 203.4831 443.1702 c
203.4831 448.4301 l
203.4831 450.175 202.1681 450.4784 202.1681 449.0623 C
202.3957 448.9611 L
b
U
u
0.75 g
0 G
206.4419 433.4324 m
187.9407 442.6402 L
187.9407 404.8096 l
206.4419 395.6017 l
206.4419 433.4324 L
b
1 g
182.0511 405.4747 m
200.9569 396.0646 l
206.2167 405.3705 206.2167 421.1501 v
206.2167 433.086 L
187.7155 442.2938 L
187.7155 430.358 l
187.7155 416.4972 182.0511 405.4747 y
b
[3 1 2 5 1 6 ]0 d
201.3615 430.6584 m
192.7731 435.011 L
S
201.818 424.387 m
190.802 429.7511 L
S
201.818 422.364 m
190.802 427.728 L
S
201.818 420.3409 m
190.802 425.705 L
S
201.818 418.3179 m
190.802 423.682 L
S
201.2112 416.6995 m
190.802 421.659 L
S
201.2112 414.8787 m
190.802 419.6359 L
S
201.0088 413.0581 m
190.5997 417.8152 L
S
200.6042 410.8327 m
190.1951 415.5899 L
S
199.9973 408.8097 m
189.5882 413.5668 L
S
198.5812 406.9889 m
188.1721 411.7461 L
S
0 O
1 g
[]0 d
189.2647 442.1152 m
189.2647 443.1267 189.9981 443.0002 189.9981 441.66 c
189.9981 436.4001 l
189.9981 434.7564 189.0371 435.161 189.0371 437.007 c
189.0371 438.0976 189.0371 439.9681 189.0371 440.9734 C
188.7337 441.0999 L
188.7337 440.0945 188.7337 438.224 188.7337 437.1335 c
188.7337 434.7058 190.3521 434.0989 190.3521 436.3242 c
190.3521 441.5841 l
190.3521 443.329 189.0371 443.6325 189.0371 442.2163 C
189.2647 442.1152 L
b
U
U
0 g
1 w
177.9362 452.3395 m
173.4827 452.216 L
188.1886 442.4372 L
182.2697 459.0763 L
181.1946 454.6595 L
F
1 g
0 R
0 G
0.5 w
171.5417 468.7083 m
174.6907 468.7083 177.2436 471.2612 177.2436 474.4102 c
177.2436 477.5592 174.6907 480.1121 171.5417 480.1121 c
168.3927 480.1121 165.8398 477.5592 165.8398 474.4102 c
165.8398 471.2612 168.3927 468.7083 171.5417 468.7083 c
b
0 To
1 0 0 1 171.5417 472.041 0 Tp
TP
-2.2393 0 Td
0 Tr
0 g
1 w
(2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 231.6667 394.875 0 Tp
TP
-23.501 0 Td
0 Tr
9 0 Tl
(License file 1) Tx 
(\r) TX 
TO
u
0.75 g
0 R
0 G
0.5 w
380.4419 328.7657 m
361.9407 337.9735 L
361.9407 300.1429 l
380.4419 290.9351 l
380.4419 328.7657 L
b
1 g
356.0511 300.808 m
374.9569 291.3979 l
380.2167 300.7039 380.2167 316.4835 v
380.2167 328.4194 L
361.7155 337.6272 L
361.7155 325.6913 l
361.7155 311.8305 356.0511 300.808 y
b
[3 1 2 5 1 6 ]0 d
375.3615 325.9917 m
366.7731 330.3443 L
S
375.818 319.7203 m
364.802 325.0844 L
S
375.818 317.6973 m
364.802 323.0614 L
S
375.818 315.6743 m
364.802 321.0383 L
S
375.818 313.6512 m
364.802 319.0153 L
S
375.2112 312.0328 m
364.802 316.9923 L
S
375.2112 310.2121 m
364.802 314.9692 L
S
375.0088 308.3914 m
364.5997 313.1485 L
S
374.6042 306.166 m
364.1951 310.9232 L
S
373.9973 304.143 m
363.5882 308.9002 L
S
372.5812 302.3223 m
362.1721 307.0794 L
S
0 O
1 g
[]0 d
363.2647 337.4485 m
363.2647 338.46 363.9981 338.3336 363.9981 336.9933 c
363.9981 331.7334 l
363.9981 330.0897 363.0371 330.4943 363.0371 332.3403 c
363.0371 333.4309 363.0371 335.3014 363.0371 336.3068 C
362.7337 336.4332 L
362.7337 335.4278 362.7337 333.5573 362.7337 332.4668 c
362.7337 330.0391 364.3521 329.4322 364.3521 331.6575 c
364.3521 336.9175 l
364.3521 338.6623 363.0371 338.9658 363.0371 337.5496 C
363.2647 337.4485 L
b
U
0 To
1 0 0 1 343.6667 311.5417 0 Tp
TP
-13.8779 0 Td
0 Tr
0 g
1 w
(License\r) Tx 
8.7324 -9 Td
(file) Tx 
(\r) TX 
TO
0 To
1 0 0 1 244.3333 402.2083 0 Tp
TP
-23.501 0 Td
0 Tr
0.25 g
(License file 2) Tx 
(\r) TX 
TO
0 To
1 0 0 1 258.3333 410.2083 0 Tp
TP
-23.501 0 Td
0 Tr
0.5 g
(License file 3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 271.6667 417.5417 0 Tp
TP
-23.501 0 Td
0 Tr
0.75 g
(License file 4) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
231.6667 346.875 m
234.8157 346.875 237.3686 349.4279 237.3686 352.5769 c
237.3686 355.7259 234.8157 358.2788 231.6667 358.2788 c
228.5177 358.2788 225.9648 355.7259 225.9648 352.5769 c
225.9648 349.4279 228.5177 346.875 231.6667 346.875 c
b
0 To
1 0 0 1 231.4167 349.7077 0 Tp
TP
-2.2393 0 Td
0 Tr
0 g
1 w
8 0 Tl
(6) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
256.3333 358.2083 m
259.4823 358.2083 262.0352 360.7612 262.0352 363.9102 c
262.0352 367.0592 259.4823 369.6121 256.3333 369.6121 c
253.1843 369.6121 250.6314 367.0592 250.6314 363.9102 c
250.6314 360.7612 253.1843 358.2083 256.3333 358.2083 c
b
0 To
1 0 0 1 256.0833 361.041 0 Tp
TP
-2.2393 0 Td
0 Tr
0 g
1 w
(5) Tx 
(\r) TX 
TO
u
u
0 R
1 1 0 0 (purple) 0.5 X
1.5 w
361.7913 282.2016 m
361.7913 398.6717 L
430.675 433.0496 L
S
361.7913 398.6717 m
297.1846 430.7514 L
S
U
u
1 1 0 0 (purple) 1 X
0.5 w
361.7913 279.4824 m
361.7913 398.6699 L
433 434.2083 L
S
361.7913 398.6699 m
295.0039 431.8323 L
S
U
U
u
u
1 1 0 0 (purple) 0.5 X
1.5 w
192.2 369.8026 m
192.2 480.6277 L
261.0836 515.0055 L
S
192.2 480.6277 m
127.5933 512.7073 L
S
U
u
1 1 0 0 (purple) 1 X
0.5 w
192.2 367.0834 m
192.2 480.6258 L
263.4087 516.1642 L
S
192.2 480.6258 m
125.4126 513.7882 L
S
U
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

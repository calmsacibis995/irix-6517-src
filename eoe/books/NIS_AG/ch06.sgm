<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="6"><TITLE><XREFTARGET ID="19957">Troubleshooting NIS</TITLE><PARAGRAPH>This chapter provides information to be used in troubleshooting the NIS environment. The chapter is divided into two parts: problems seen on an NIS server and problems seen on an NIS client. Each section describes general trouble symptoms followed by a discussion of probable causes.</PARAGRAPH>
<PARAGRAPH>This chapter contains these sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="27150" TYPE="TITLE">&ldquo;Debugging an NIS Server&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="34387" TYPE="TITLE">&ldquo;Debugging an NIS Client&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="24084" TYPE="TITLE">&ldquo;Before You Call for Help&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="27150">Debugging an NIS Server<INDEXTARGET ID="ch061"><!-- POSTPROCESSDATA: ch061|debugging: servers --></TITLE><PARAGRAPH>Before trying to debug an NIS server, be sure you understand the concepts in <INDEXTARGET ID="ch062"><!-- POSTPROCESSDATA: ch062|server:debugging --><XREF IDREF="24464" TYPE="TITLE">Chapter&nbsp;1, &ldquo;Understanding NIS,&rdquo;</XREF> and <XREF IDREF="27032" TYPE="TITLE">Chapter&nbsp;2, &ldquo;Preparing to Manage NIS,&rdquo;</XREF> in this guide. </PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Different Map Versions<INDEXTARGET ID="ch063"><!-- POSTPROCESSDATA: ch063|maps: version errors in --></TITLE><PARAGRAPH>Since NIS works by propagating maps from the NIS master server to NIS slave servers within the same domain, you may find different versions of a map on different servers. Each time a map is updated, a new order number (map version) is attached to the map. This information can be obtained with the <INDEXTARGET ID="ch064"><!-- POSTPROCESSDATA: ch064|map propagation:debugging --><INDEXTARGET ID="ch065"><!-- POSTPROCESSDATA: ch065|debugging:map propagation failures --><COMMAND>yppoll<INDEXTARGET ID="ch066"><!-- POSTPROCESSDATA: ch066|<ITALICS>yppoll</ITALICS> tool:for map versions --></COMMAND> command. </PARAGRAPH>
<PARAGRAPH>Version skew, or out-of-sync maps, between servers is normal when maps are being propagated from the NIS master server to the slave servers. However, when the maps on different servers remain unsynchronized even after the NIS environment has stabilized, it usually indicates a problem.</PARAGRAPH>
<PARAGRAPH>The normal update of NIS maps is prevented when an NIS server or some gateway system between the NIS master server and NIS slave servers is down during a map transfer attempt. This condition is the most frequent cause of out-of-sync maps on servers. Normal update procedures are described in <INDEXTARGET ID="ch067"><!-- POSTPROCESSDATA: ch067|debugging:out-of-sync maps --><XREF IDREF="10396" TYPE="TITLE">Chapter&nbsp;5, &ldquo;Maintaining NIS.&rdquo;</XREF> When all the NIS servers and all the gateways between the NIS master and NIS slave servers are up and running, <COMMAND>ypxfr</COMMAND> should successfully transfer maps and all NIS servers' maps should be in sync.<INDEXTARGET ID="ch068"><!-- POSTPROCESSDATA: ch068|<ITALICS>ypxfr</ITALICS> tool:and debugging --></PARAGRAPH>
<PARAGRAPH>The next section describes how to use <COMMAND>ypxfr</COMMAND> manually to update NIS maps. If <COMMAND>ypxfr</COMMAND> transfers maps successfully when it is initiated manually but still fails intermittently, it requires additional investigation on your part, which is described in the section, <XREF IDREF="75212" TYPE="TITLE">&ldquo;Intermittent, Consistent Map Propagation Failures&rdquo;</XREF>.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Isolated, One-Time Map Propagation Failures</TITLE><PARAGRAPH>If a particular slave server has an isolated, one-time problem updating a particular map or its entire map set, follow these steps to resolve the problem by running <COMMAND>ypxfr</COMMAND> manually: </PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH><COMMAND>ypxfr</COMMAND> requires a complete map name rather than a nickname, so get a list of complete map names for maps in your domain, by giving this command:</PARAGRAPH>
<CODE>
# <INDEXTARGET ID="ch069"><!-- POSTPROCESSDATA: ch069|<ITALICS>ypmatch</ITALICS> tool:and debugging --><USERINPUT>ypwhich -m</USERINPUT>
</CODE>
<PARAGRAPH>The system returns a list of complete map names and the name of the NIS master server for each map. Output should be similar to this output for an NIS master server named <ITALICS>circles</ITALICS>:</PARAGRAPH>
<CODE>
ypservers circles
netid.byname circles
bootparams circles
mail.aliases circles
netgroup.byhost circles
netgroup.byuser circles
netgroup circles
protocols.byname circles
protocols.bynumber circles
services.byname circles
rpc.bynumber circles
networks.byaddr circles
networks.byname circles
ethers.byname circles
ethers.byaddr circles
hosts.byaddr circles
hosts.byname circles
group.bygid circles
group.byname circles
passwd.byuid circles
passwd.byname circles
mail.byaddr circles
</CODE>
</LIST>
<LIST><PARAGRAPH>For each map that is not being updated, transfer the map manually using <COMMAND>ypxfr</COMMAND>:</PARAGRAPH>
<CODE>
# <USERINPUT>ypxfr -f </USERINPUT><VARIABLE>map.name</VARIABLE>
</CODE>
<PARAGRAPH><VARIABLE>map.name</VARIABLE> is the complete name of the map, for example, <ITALICS>hosts.byname</ITALICS>.</PARAGRAPH>
<PARAGRAPH>If <COMMAND>ypxfr</COMMAND> fails, it supplies an error message that points you to the problem. If it succeeds, you should see output similar to this:</PARAGRAPH>
<CODE>
Transferred map hosts.byname from NIS_master (1091 entries).
</CODE>
</LIST>
</ORDEREDLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE><XREFTARGET ID="75212">Intermittent, Consistent Map Propagation Failures</TITLE><PARAGRAPH>This section describes several procedures you can use to help isolate intermittent map propagation problems.</PARAGRAPH>
<PARAGRAPH>If the error message <SCREENDISPLAY>Transfer not done: master's version isn't newer</SCREENDISPLAY> appears, check the dates on the master and slave servers.</PARAGRAPH>
<PARAGRAPH>On the NIS master server, check to ensure that the NIS slave server is included in the <ITALICS>ypservers<INDEXTARGET ID="ch0610"><!-- POSTPROCESSDATA: ch0610|<ITALICS>ypservers</ITALICS> map --></ITALICS> map within the domain. If the slave server is not in the <ITALICS>ypservers</ITALICS> map, the master server does not know to propagate any changed and updated maps automatically to the server. If the server has the correct entry in its <FILENAME>crontab</FILENAME> file to have <COMMAND>ypxfr</COMMAND> request updated maps from the master server, the slave server gets the updated maps, but this action is not initiated by the NIS master server. These steps illustrate how to verify the <ITALICS>ypservers</ITALICS> map:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Review the contents of the ASCII file used to create the <ITALICS>ypservers</ITALICS> map:</PARAGRAPH>
<CODE>
# <USERINPUT>cat /var/yp/ypservers</USERINPUT>&space;
</CODE>
<PARAGRAPH>If the server is not listed, add the server's name using any standard editor.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Once the <FILENAME>/var/yp/ypservers</FILENAME> file has been edited, if necessary, ensure that the actual map is updated on the master server. This is a special map and no attempt is made to push it to the other servers. Give this command:</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypmake -f ypservers</USERINPUT>
</CODE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>Another possible reason for out-of-sync maps is a bad <INDEXTARGET ID="ch0611"><!-- POSTPROCESSDATA: ch0611|<ITALICS>ypxfr</ITALICS> tool:script errors --><COMMAND>ypxfr</COMMAND> script. Inspect root's <FILENAME>crontab</FILENAME> (<FILENAME>/var/spool/cron/crontabs/root</FILENAME>) and the <COMMAND>ypxfr</COMMAND> shell scripts it invokes (<FILENAME>/var/yp/ypxfr_1ph</FILENAME>, <FILENAME>/var/yp/ypxfr_1pd</FILENAME>, and&space;<FILENAME>/var/yp/ypxfr_2pd</FILENAME>). Typographical errors in these files can cause propagation problems, as do failures to refer to a shell script within <FILENAME>crontab</FILENAME>, or failures to refer to a map within any shell script. Also ensure that the configuration flags are on for <ITALICS>yp</ITALICS> and <ITALICS>nsd </ITALICS>with the <COMMAND>chkconfig<INDEXTARGET ID="ch0612"><!-- POSTPROCESSDATA: ch0612|<ITALICS>chkconfig</ITALICS> utility --></COMMAND> command. For details see the<REFPAGE>&space;chkconfig(1M) </REFPAGE>reference page.</PARAGRAPH>
<PARAGRAPH>Finally, if the above suggestions don't solve the intermittent map propagation problem, you need to monitor the <INDEXTARGET ID="ch0613"><!-- POSTPROCESSDATA: ch0613|<ITALICS>ypxfr</ITALICS> tool:monitoring --><COMMAND>ypxfr</COMMAND> process over a period of time. These steps show how to set up and use the <COMMAND>ypxfr<INDEXTARGET ID="ch0614"><!-- POSTPROCESSDATA: ch0614|<ITALICS>ypxfr</ITALICS> tool: log file for --></COMMAND> log file:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Create a log file to enable message logging. Give these commands: <INDEXTARGET ID="ch0615"><!-- POSTPROCESSDATA: ch0615|logging: <ITALICS>ypxfr</ITALICS> functions --><INDEXTARGET ID="ch0616"><!-- POSTPROCESSDATA: ch0616|error logging --></PARAGRAPH>
<CODE>
# <USERINPUT>cd /var/yp</USERINPUT>&space;
# <USERINPUT>touch ypxfr.log</USERINPUT>&space;
</CODE>
<PARAGRAPH>This saves all output from <COMMAND>ypxfr</COMMAND>. The output looks much like the output from <COMMAND>ypxfr</COMMAND> when run interactively, but each line in the log file is timestamped. You may see unusual ordering in the timestamps. This is normal; the timestamp tells you when <COMMAND>ypxfr</COMMAND> began its work. If copies of <COMMAND>ypxfr</COMMAND> ran simultaneously, but their work took differing amounts of time, they may actually write their summary status line to the log files in an order different from the order of invocation. </PARAGRAPH>
<PARAGRAPH>Any pattern of intermittent failure shows up in the log. Look at the messages to determine what is needed to fix the failure. You know that you have fixed it when you no longer receive failure messages.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>When you have fixed the problem, turn off message logging by removing the log file. Give this command:</PARAGRAPH>
<CODE>
# <USERINPUT>rm ypxfr.log</USERINPUT>&space;
</CODE>
<NOTE><PREFIX>Note</PREFIX>&space;If you forget to remove the log file, the log file grows without limit. </NOTE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>As a last resort and while you continue to debug, you can transfer the map using the remote file copy command, <INDEXTARGET ID="ch0617"><!-- POSTPROCESSDATA: ch0617|<ITALICS>rcp</ITALICS> command --><COMMAND>rcp</COMMAND>, to copy a recent version from any healthy NIS server. You may not be able to do this as <ITALICS>root</ITALICS>, but you probably can do it by using the <ITALICS>guest</ITALICS> account on the master server. For instance, to copy the map <ITALICS>hosts</ITALICS> in the domain <ITALICS>shapes.com</ITALICS> from the master server <ITALICS>circles</ITALICS> to the slave server <ITALICS>squares</ITALICS>, give this command: </PARAGRAPH>
<CODE>
# <USERINPUT>rcp guest@circles:/var/ns/domains/shapes.com/hosts.\* \</USERINPUT>
<USERINPUT>/var/ns/domains/shapes.com</USERINPUT>&space;
</CODE>
<PARAGRAPH>The escaped asterisk (\*) allows the remote copy of all <FILENAME>mdb</FILENAME><COMMAND>m</COMMAND> record files for the&space;<ITALICS>hosts</ITALICS>&space;map.</PARAGRAPH>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>nsd Fails</TITLE><PARAGRAPH>If <INDEXTARGET ID="ch0618"><!-- POSTPROCESSDATA: ch0618|portmapper:verifying on servers --><COMMAND>nsd</COMMAND> fails almost immediately each time it is started, look for a more general networking problem. Because NIS uses RPC, the portmapper must be functioning correctly for NIS to work. </PARAGRAPH>
<PARAGRAPH>To verify that the portmapper is functioning and that the <INDEXTARGET ID="ch0619"><!-- POSTPROCESSDATA: ch0619|debugging:and portmapper functions --><COMMAND>nsd</COMMAND> protocol is registered with the portmapper, on the server give this command:</PARAGRAPH>
<CODE>
# <INDEXTARGET ID="ch0620"><!-- POSTPROCESSDATA: ch0620|<ITALICS>rpcinfo</ITALICS> tool --><USERINPUT>/usr/etc/rpcinfo -p | grep ypserv<INDEXTARGET ID="ch0621"><!-- POSTPROCESSDATA: ch0621|<ITALICS>rpcinfo</ITALICS> tool --></USERINPUT>&space;
</CODE>
<PARAGRAPH>If your <INDEXTARGET ID="ch0622"><!-- POSTPROCESSDATA: ch0622|portmapper:<ITALICS>portmap</ITALICS> daemon --><COMMAND>portmap</COMMAND> daemon is functional, the output looks something like this:</PARAGRAPH>
<CODE>
100004    2    udp    1051    ypserv 
100004    2    tcp    1027    ypserv 
</CODE>
<PARAGRAPH>If these entries are not in your output, <INDEXTARGET ID="ch0623"><!-- POSTPROCESSDATA: ch0623|<ITALICS>nsd</ITALICS> daemon:and portmapper registration --><COMMAND>nsd </COMMAND>has been unable to register its services with the <COMMAND>portmap</COMMAND> daemon. If the <COMMAND>portmap</COMMAND> daemon has failed or is not running, you get this error message:</PARAGRAPH>
<CODE>
rpcinfo: can't contact portmapper: Remote system error - connection refused
</CODE>
<PARAGRAPH>If the information returned by <COMMAND>rpcinfo</COMMAND> does not match the information shown above or if the error message is returned, reboot the server. Rebooting the server ensures that the network daemons, specifically <ITALICS>portmap</ITALICS> and <COMMAND>nsd</COMMAND>, are started in the correct order. See the <REFPAGE>nsd(1M)</REFPAGE>, <REFPAGE>portmap(1M)</REFPAGE>, and <REFPAGE>rpcinfo(1M)</REFPAGE> reference pages for further details. </PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="34387">Debugging an NIS Client</TITLE><PARAGRAPH>Before trying to debug an NIS server, be sure you understand the concepts in <INDEXTARGET ID="ch0624"><!-- POSTPROCESSDATA: ch0624|client:debugging --><XREF IDREF="24464" TYPE="TITLE">Chapter&nbsp;1, &ldquo;Understanding NIS,&rdquo;</XREF> and <XREF IDREF="27032" TYPE="TITLE">Chapter&nbsp;2, &ldquo;Preparing to Manage NIS,&rdquo;</XREF> in this guide. <INDEXTARGET ID="ch0625"><!-- POSTPROCESSDATA: ch0625|debugging:clients --></PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Command Hangs</TITLE><PARAGRAPH>The most common problem on an NIS client is for a command to hang and generate SYSLOG messages such as this:<INDEXTARGET ID="ch0626"><!-- POSTPROCESSDATA: ch0626|command failures --><INDEXTARGET ID="ch0627"><!-- POSTPROCESSDATA: ch0627|debugging:command errors --></PARAGRAPH>
<CODE>

NIS v.2 server not responding for domain <VARIABLE>domain_name</VARIABLE>; still trying
</CODE>
<PARAGRAPH>Sometimes many commands begin to hang, even though the system as a whole seems to be working and you can run new commands.</PARAGRAPH>
<PARAGRAPH>The messages above indicates that <INDEXTARGET ID="ch0628"><!-- POSTPROCESSDATA: ch0628|<ITALICS>nsd</ITALICS> daemon:and communication errors --><COMMAND>nsd </COMMAND>on the local system is unable to communicate with <COMMAND>nsd </COMMAND>in the domain <ITALICS>domain_name</ITALICS>. This can happen as a result of any of these situations:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The network has been disconnected on the NIS client; for example, the Ethernet cable is unplugged. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>An incorrect domain name has been specified.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The network or the NIS server is so overloaded that <COMMAND>nsd </COMMAND>cannot get a response back to the <COMMAND>nsd </COMMAND>daemon within the time-out period. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><COMMAND>nsd</COMMAND> on the NIS server has crashed.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The NIS server has crashed or is unreachable via the network. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>There is a physical impairment on the local area network. Under these circumstances, all the other NIS clients on the same local area network should show the same or similar problems.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>A heavily loaded network and/or NIS server may be a temporary situation that might resolve itself without any intervention. However, in some circumstances, the situation does not improve without intervention. If intervention becomes necessary, the following four questions help to isolate and correct the situation. </PARAGRAPH>
<PARAGRAPH><BOLD>Question 1: Is the client attached to the network?</BOLD>&space;<INDEXTARGET ID="ch0629"><!-- POSTPROCESSDATA: ch0629|network connection errors --></PARAGRAPH>
<PARAGRAPH>Typically, if there is a problem with the physical connection from the client to the network, a message similar to this appears in the console window on the system:<INDEXTARGET ID="ch0630"><!-- POSTPROCESSDATA: ch0630|debugging:network connection errors --></PARAGRAPH>
<CODE>
ec0: no carrier: check Ethernet cable
</CODE>
<PARAGRAPH>If NIS commands hang and you have the message shown above, verify that the physical connection from the client to the local area network is secure and functioning. If you do not know how to check your physical connection, see the <DOCTITLE>Owner's Guide</DOCTITLE> for your system more details. Also check to ensure that the client is attached to the correct physical network.</PARAGRAPH>
<PARAGRAPH><BOLD>Question 2: Does the client have the correct domain set?</BOLD>&space;<INDEXTARGET ID="ch0631"><!-- POSTPROCESSDATA: ch0631|domain name:errors in --></PARAGRAPH>
<PARAGRAPH>Clients and servers must use the same domain name if they want to belong to the same domain. Servers supply information only to clients within their domain. The domain names must match exactly. The domain <INDEXTARGET ID="ch0632"><!-- POSTPROCESSDATA: ch0632|debugging:domain name errors --><ITALICS>shapes.com</ITALICS> is not the same as the domain <ITALICS>SHAPES.com</ITALICS>. Clients must use a domain name that the NIS servers for their domain recognize. </PARAGRAPH>
<PARAGRAPH>Verify the client's current domain name by giving the <INDEXTARGET ID="ch0633"><!-- POSTPROCESSDATA: ch0633|<ITALICS>ypdomain</ITALICS> file --><COMMAND>domainname</COMMAND> command and by looking at the contents of the file&space;<INDEXTARGET ID="ch0634"><!-- POSTPROCESSDATA: ch0634|<ITALICS>/var/yp/ypdomain</ITALICS> file --><FILENAME>/var/yp/ypdomain</FILENAME>, which is read at system startup. Perform these steps to determine the client's current domain:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Determine the current domain name:</PARAGRAPH>
<CODE>
# <USERINPUT>domainname</USERINPUT>
<VARIABLE>current_domain_name</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Look at <FILENAME>/var/yp/ypdomain</FILENAME> to determine the domain name set at system startup: </PARAGRAPH>
<CODE>
# <USERINPUT>cat /var/yp/ypdomain</USERINPUT>
<VARIABLE>current_domain_name</VARIABLE>&space;
</CODE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>Compare these values to those found on the servers. If the domain name on the client differs from the domain name on the server, change the domain on the client: </PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Edit, using any standard editor, <FILENAME>/var/yp/ypdomain</FILENAME> to reflect the correct domain name. This file assures that the domain name is correctly set every time the client boots. There should be only one entry in this file:</PARAGRAPH>
<CODE>
<VARIABLE>correct_domain_name</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Set <VARIABLE>domainname</VARIABLE> by hand so it is fixed immediately. Give this command: </PARAGRAPH>
<CODE>
# <USERINPUT>domainname</USERINPUT>&space;<VARIABLE>correct_domain_name</VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Restart <INDEXTARGET ID="ch0635"><!-- POSTPROCESSDATA: ch0635|<ITALICS>nsd</ITALICS> daemon:restarting --><COMMAND>nsd </COMMAND>so that the client is bound within the correct domain. Give these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>/etc/killall -HUP nsd</USERINPUT>
</CODE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH><BOLD>Question 3: Do you have enough NIS servers?</BOLD>&space;<INDEXTARGET ID="ch0636"><!-- POSTPROCESSDATA: ch0636|server: overloading --></PARAGRAPH>
<PARAGRAPH>NIS servers do not have to be dedicated systems; and as multipurpose systems, they are susceptible to load escalations. If an NIS server is overloaded, the client's <INDEXTARGET ID="ch0637"><!-- POSTPROCESSDATA: ch0637|debugging:server overload errors --><COMMAND>nsd<INDEXTARGET ID="ch0638"><!-- POSTPROCESSDATA: ch0638|<ITALICS>nsd</ITALICS> daemon: and server loading --></COMMAND> process automatically switches to another less heavily loaded server. Check to ensure that designated servers are functioning and accessible via the network.</PARAGRAPH>
<PARAGRAPH>By default, when an NIS client boots it can only bind to a server that resides on the same local network. It cannot bind to a server that resides on a remote network. There must be at least one NIS server running on the local network in order for a client in the same domain to bind. Two or more NIS servers per local network improve availability and response characteristics for NIS services.</PARAGRAPH>
<PARAGRAPH><BOLD>Question 4: Are the NIS servers up and running?</BOLD>&space;<INDEXTARGET ID="ch0639"><!-- POSTPROCESSDATA: ch0639|server: failure of --></PARAGRAPH>
<PARAGRAPH>Check other clients on your local network. If several client systems have NIS-related problems simultaneously, suspect the NIS server. It may be that the NIS server system is down or inaccessible or that the <INDEXTARGET ID="ch0640"><!-- POSTPROCESSDATA: ch0640|debugging:server failures --><COMMAND>nsd </COMMAND>process has crashed on the NIS server. </PARAGRAPH>
<PARAGRAPH>If an NIS server crashes or becomes unavailable, it should not affect NIS performance if there are multiple NIS servers on a network. The clients automatically switch to another server. If there is only one server on the network, check to ensure that the server is up by remotely logging in to the server.</PARAGRAPH>
<PARAGRAPH>If the server is up, the problem may be that the <COMMAND>nsd </COMMAND>process has crashed on the server.&space;Give these commands to find out if <COMMAND>nsd </COMMAND>is running and restart it if it is not:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Log into the NIS server system. Look for <COMMAND>nsd </COMMAND>processes. Give this command: </PARAGRAPH>
<CODE>
# <USERINPUT>ps -ef | grep nsd</USERINPUT>
</CODE>
<PARAGRAPH>You should see output similar to this:</PARAGRAPH>
<CODE>
root   128     1  0  Sep 13  ?        1:35 /usr/etc/nsd 
</CODE>
</LIST>
<LIST><PARAGRAPH>If the server's <COMMAND>nsd </COMMAND>daemon is not running, start it up by typing:</PARAGRAPH>
<CODE>
# <USERINPUT>nsadmin restart</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Give the command <COMMAND>ypwhich</COMMAND> on the NIS server system:</PARAGRAPH>
<CODE>
# <USERINPUT>ypwhich</USERINPUT>
</CODE>
<PARAGRAPH>If <COMMAND>ypwhich</COMMAND> returns no answer, <COMMAND>nsd</COMMAND> is probably not working. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If <COMMAND>nsd </COMMAND>is not working, give this command to kill the existing <COMMAND>nsd</COMMAND> process and start a new one:</PARAGRAPH>
<CODE>
# <USERINPUT>nsadmin restart</USERINPUT>
</CODE>
</LIST>
</ORDEREDLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>NIS Command Fails<INDEXTARGET ID="ch0641"><!-- POSTPROCESSDATA: ch0641|command failures --></TITLE><PARAGRAPH>Another problem that can occur on an NIS client is for a command to fail due to a problem with the NIS daemon, <INDEXTARGET ID="ch0642"><!-- POSTPROCESSDATA: ch0642|debugging:command errors --><COMMAND>nsd<INDEXTARGET ID="ch0643"><!-- POSTPROCESSDATA: ch0643|<ITALICS>ypbind</ITALICS> daemon:and NIS command errors --></COMMAND>. These examples illustrate typical error messages you might see when you give an NIS command and <COMMAND>nsd </COMMAND>has failed: </PARAGRAPH>
<CODE>
# <USERINPUT>ypcat hosts</USERINPUT>&space;
ypcat: can't bind to NIS server for domain <VARIABLE>domain_name</VARIABLE>.
Reason: can't communicate with nsd. 
# <USERINPUT>yppoll aliases</USERINPUT>
Sorry, I can't make use of the NIS. I give up.
</CODE>
<PARAGRAPH>In addition to the error messages listed above, these general symptoms may also indicate that the <COMMAND>nsd </COMMAND>process has crashed:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Some commands appear to operate correctly while others terminate, printing an error message about the unavailability of NIS.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Some commands work slowly in a backup-strategy mode peculiar to the program involved.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Some commands do not work and/or daemons crash with obscure messages or no message at all.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>To correct this situation, stop and restart the <COMMAND>nsd </COMMAND>process on the client with the following command:</PARAGRAPH>
<CODE>
# <USERINPUT>nsadmin restart</USERINPUT>
</CODE>
<PARAGRAPH>Give this command to verify that the <COMMAND>nsd</COMMAND> process is running:</PARAGRAPH>
<CODE>
# <USERINPUT>ps -ef | grep nsd</USERINPUT>
</CODE>
<PARAGRAPH>You should see output similar to this:</PARAGRAPH>
<CODE>
root 26995     1  0 17:35:31 ?         0:00 /usr/etc/nsd
</CODE>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><COMMAND><INDEXTARGET ID="ch0644"><!-- POSTPROCESSDATA: ch0644|<ITALICS>ypwhich</ITALICS> tool:output from --></COMMAND>ypwhich Output Inconsistent</TITLE><PARAGRAPH>When you give the <INDEXTARGET ID="ch0645"><!-- POSTPROCESSDATA: ch0645|debugging:inconsistent <ITALICS>ypwhich</ITALICS> output --><COMMAND>ypwhich</COMMAND> command several times on the same client, the answer you receive may vary because the NIS server has changed. This response is normal. The binding of an NIS client to an NIS server changes over time on a busy network and when the NIS servers are busy. Whenever possible, the system stabilizes at a point where all clients get acceptable response time from the NIS servers. As long as the client gets NIS service, it does not matter where the service comes from. An NIS server may get its own NIS services from another NIS server on the network. </PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="24084">Before You Call for Help</TITLE><PARAGRAPH>Before you call your support provider, please use the recommendations in this chapter for solving your problems independently. If your problems persist and you find it necessary to call, please have this information ready:<INDEXTARGET ID="ch0646"><!-- POSTPROCESSDATA: ch0646|debugging:telephone help with --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>System serial number.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Operating system and NFS version numbers (from <COMMAND>versions</COMMAND>). Include <SCREENDISPLAY>eoe</SCREENDISPLAY> and<SCREENDISPLAY>&space;nfs</SCREENDISPLAY>.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>A specific description of the problem. Write down and be prepared to provide any error messages that might help in isolating the problem.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Are there other vendors' systems involved?</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>What does the physical layout look like? Are there gateways?</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>How many slave servers do you have per network?</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>What are the names of the master server, slave server(s), and domain?</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>How many systems are in your domain?</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Do you have multiple domains?</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION1>
</CHAPTER>

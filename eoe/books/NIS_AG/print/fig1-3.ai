%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) version 3 for SGI
%%For: () ()
%%Title: (/usr/tmp/ellis/fig1-3.ai)
%%CreationDate: (8/5/93) (14:02)
%%BoundingBox: 68 236 536 642
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 310 396 310 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%Template:
%%PageOrigin:30 31
%%AI3_PaperRect:0 792 612 0
%%AI3_Margin:30 31 30 31
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec

%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_typography_AI3 87 dict dup begin put

% variables in Typography proc set - define these to null so that
% importing application would not have problem due to bind.
[
/Tx
/_render
/ddef
/_tm
/sp
/_renderStart
/_cx
/_ax
/_hyphen
/_leading
/_tDict
/swj
/_rise
/N
/_nativeEncoding
/_fScl
/W
/_pjsf
/_pjss
/_useNativeEncoding
/_psf
/_renderEnd
/sw
/Tj
/_cy
/jsp
/_ay
/_hs
/_ctm
/FontName
/_sp
/_pss
/_tempEncode
/_mtx
/npop
counttomark { null def } repeat pop

/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def

% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll

		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....

			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def

/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def

% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def

	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the use platform encoding flag is true
		% install AI platform encoding
		% else leave the base encoding in effect

		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def

% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def

/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def

/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def

/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def

/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def

/i1
{
W N
} def

/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def

/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def

/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def

% font operators

% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def

/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def

% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def

/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def

% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def

/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def

/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def

/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def

/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def


% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def

/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def

/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def

/Tt	% set user tracking				% userTracking Tt -
{
pop
} def

/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def

/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def

/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def

/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def

/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def

/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def

/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def

/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def

/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def


% Text Bodies
/TX {pop} def

%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -

/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def

/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def

/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def

/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def

/T+	% discretionary hyphen hyphen	% - T+ -
{} def

/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def

/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def

currentdict readonly pop end
setpacking

%%EndResource

%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 1
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put

% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def

% paint operators
/cf	currentflat def	% - cf flatness

% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def

% typography operators
/Tx {} def
/Tj {} def

% compound path operators
/CRender {} def

% printing
/_AI3_savepage {} def

% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def

% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def

% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse

% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def

% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def

% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def

% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def

% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def

% locked object operator
/A					% value A -
{
pop
} def

currentdict readonly pop end
setpacking

% annotate page operator
/annotatepage
{
} def
%%EndResource
%AI3-Grid.0 18 18 3 0 0 0 3
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cmykcolor /initialize get exec

Adobe_cshow /initialize get exec

Adobe_customcolor /initialize get exec

Adobe_typography_AI3 /initialize get exec


Adobe_IllustratorA_AI3 /initialize get exec

[
45/minus 129/florin/dagger/guilsinglleft/guilsinglright/quotesingle
/quotedblleft/quotedblbase/quotedblright/fl/fi/Lslash/OE/ellipsis
/quotesinglbase/emdash/dotlessi/grave/perthousand/circumflex/tilde/bullet
/breve/dotaccent/endash/fraction/ring/lslash/oe/hungarumlaut
/ogonek/caron/daggerdbl 164/currency 166/brokenbar 168/dieresis
/copyright/ordfeminine 172/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
183/periodcentered/cedilla/onesuperior/ordmasculine 188/onequarter
/onehalf/threequarters 192/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae
/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 R
0 G
0 i 0 J 0 j 0.5 w 4 M [2 2 ]0 d
%AI3_Note:
0 D
174.5 431.5 m
228 435.6972 l
337.5 432.0757 l
S
230 330 m
230 435.6972 l
S
426 330.5 m
426 436.5 l
S
174 317 m
229.5 330 l
337.5 322.5 l
S
1 w []0 d
263.25 379.1879 m
263.25 320.8508 l
463 320.8508 l
463 379.5581 l
S
0.5 w [2 2 ]0 d
337.5 322.5 m
274.5 310 l
174 317 l
174 432 l
S
174 431.5 m
275.5 424.5 l
337.5 432.5 l
S
275 310 m
S
1 w []0 d
294.5 370.1899 m
319.5 375.374 l
223.5 382.5969 l
202.5 380.4225 l
S
210.8332 381.5256 m
210.8332 374.5721 l
S
0 O
1 g
230.5832 346.0353 m
230.5832 374.2853 L
187.3332 374.2853 L
187.3332 346.0353 L
230.5832 346.0353 L
f
209.5832 360.2853 m
F
u
u
0 R
0 G
0.5 w [1 1 ]0 d
221.4647 373.8453 m
224.4372 370.873 l
228.803 370.1298 l
228.803 358.6578 l
221.4182 354.6636 l
200.2857 356.6607 l
199.6355 358.3327 l
S
221.4647 373.8453 m
199.6355 373.8453 l
199.6355 358.3327 l
219.7905 356.3601 l
221.4647 354.8493 l
221.4647 373.8453 l
s
219.7927 373.8453 m
219.7927 356.382 l
S
202.2364 359.9118 m
202.2364 371.5232 l
217.2846 371.5232 l
217.2846 358.6114 l
202.2364 359.9118 l
s
218.678 354.9888 m
217.6215 353.815 212.551 353.4412 209.9463 353.7346 c
206.6487 354.1063 205.2089 354.7565 205.2089 356.1499 c
S
214.2193 355.2673 m
212.8259 354.4313 208.0421 355.221 208.0885 355.7319 c
S
U
u
u
224.0171 350.9885 m
194.6044 353.538 l
188.4027 350.3044 l
187.8322 350.0876 187.7347 349.622 188.5049 349.5396 c
213.9695 346.7238 l
214.8165 346.6098 215.4221 346.7667 216.1464 346.9201 c
223.3972 348.8827 l
225.4031 349.2306 225.1365 350.8074 224.0171 350.9885 c
s
224.0171 350.9885 m
215.093 347.2456 l
214.57 347.0274 214.6125 346.81 214.6362 346.6886 c
S
U
U
227.3332 357.5353 m
228.4582 355.9103 233.4582 350.6603 224.9582 349.7853 c
S
195.2082 351.9103 m
218.2082 350.0353 l
213.8332 348.4103 l
192.0832 350.6603 l
195.2082 351.9103 l
s
U
u
0 O
1 g
1 w []0 d
324.5832 336.7853 m
324.5832 365.0353 L
281.3332 365.0353 L
281.3332 336.7853 L
324.5832 336.7853 L
f
303.5832 351.0353 m
F
u
u
0 R
0 G
0.5 w
315.4647 364.5953 m
318.4372 361.623 l
322.803 360.8798 l
322.803 349.4078 l
315.4182 345.4136 l
294.2857 347.4107 l
293.6355 349.0827 l
S
315.4647 364.5953 m
293.6355 364.5953 l
293.6355 349.0827 l
313.7905 347.1101 l
315.4647 345.5993 l
315.4647 364.5953 l
s
313.7927 364.5953 m
313.7927 347.132 l
S
296.2364 350.6618 m
296.2364 362.2732 l
311.2846 362.2732 l
311.2846 349.3614 l
296.2364 350.6618 l
s
312.678 345.7388 m
311.6215 344.565 306.551 344.1912 303.9463 344.4846 c
300.6487 344.8563 299.2089 345.5065 299.2089 346.8999 c
S
308.2193 346.0173 m
306.8259 345.1813 302.0421 345.971 302.0885 346.4819 c
S
U
u
u
318.0171 341.7385 m
288.6044 344.288 l
282.4027 341.0544 l
281.8322 340.8376 281.7347 340.372 282.5049 340.2896 c
307.9695 337.4738 l
308.8165 337.3598 309.4221 337.5167 310.1464 337.6701 c
317.3972 339.6327 l
319.4031 339.9806 319.1365 341.5574 318.0171 341.7385 c
s
318.0171 341.7385 m
309.093 337.9956 l
308.57 337.7774 308.6125 337.56 308.6362 337.4386 c
S
U
U
321.3332 348.2853 m
322.4582 346.6603 327.4582 341.4103 318.9582 340.5353 c
S
289.2082 342.6603 m
312.2082 340.7853 l
307.8332 339.1603 l
286.0832 341.4103 l
289.2082 342.6603 l
s
U
U
0 O
1 g
1 w
256.75 389 m
256.75 417.25 L
213.5 417.25 L
213.5 389 L
256.75 389 L
f
235.75 403.25 m
F
u
u
0 R
0 G
0.5 w
247.6315 416.8101 m
250.604 413.8377 l
254.9698 413.0945 l
254.9698 401.6226 l
247.585 397.6283 l
226.4525 399.6255 l
225.8023 401.2975 l
S
247.6315 416.8101 m
225.8023 416.8101 l
225.8023 401.2975 l
245.9573 399.3249 l
247.6315 397.8141 l
247.6315 416.8101 l
s
245.9595 416.8101 m
245.9595 399.3468 l
S
228.4032 402.8766 m
228.4032 414.4879 l
243.4514 414.4879 l
243.4514 401.5762 l
228.4032 402.8766 l
s
244.8448 397.9535 m
243.7883 396.7797 238.7178 396.406 236.1131 396.6994 c
232.8155 397.071 231.3757 397.7212 231.3757 399.1146 c
S
240.3861 398.2321 m
238.9927 397.3961 234.2089 398.1857 234.2553 398.6966 c
S
U
u
u
250.1839 393.9532 m
220.7712 396.5027 l
214.5694 393.2691 l
213.999 393.0524 213.9014 392.5867 214.6717 392.5044 c
240.1362 389.6886 l
240.9833 389.5745 241.5889 389.7315 242.3131 389.8848 c
249.564 391.8474 l
251.5698 392.1954 251.3032 393.7721 250.1839 393.9532 c
s
250.1839 393.9532 m
241.2597 390.2103 l
240.7368 389.9922 240.7792 389.7748 240.803 389.6533 c
S
U
U
253.5 400.5 m
254.625 398.875 259.625 393.625 251.125 392.75 c
S
221.375 394.875 m
244.375 393 l
240 391.375 l
218.25 393.625 l
221.375 394.875 l
s
U
1 w
234.5 388.7403 m
234.5 381.7868 l
S
304.5832 372.2756 m
304.5832 365.3221 l
S
490.5 370.1899 m
515.5 375.374 l
419.5 382.5969 l
398.5 380.4225 l
S
406.8332 381.5256 m
406.8332 374.5721 l
S
u
0 O
1 g
426.5832 346.0353 m
426.5832 374.2853 L
383.3332 374.2853 L
383.3332 346.0353 L
426.5832 346.0353 L
f
405.5832 360.2853 m
F
u
u
0 R
0 G
0.5 w
417.4647 373.8453 m
420.4372 370.873 l
424.803 370.1298 l
424.803 358.6578 l
417.4182 354.6636 l
396.2857 356.6607 l
395.6355 358.3327 l
S
417.4647 373.8453 m
395.6355 373.8453 l
395.6355 358.3327 l
415.7905 356.3601 l
417.4647 354.8493 l
417.4647 373.8453 l
s
415.7927 373.8453 m
415.7927 356.382 l
S
398.2364 359.9118 m
398.2364 371.5232 l
413.2846 371.5232 l
413.2846 358.6114 l
398.2364 359.9118 l
s
414.678 354.9888 m
413.6215 353.815 408.551 353.4412 405.9463 353.7346 c
402.6487 354.1063 401.2089 354.7565 401.2089 356.1499 c
S
410.2193 355.2673 m
408.8259 354.4313 404.0421 355.221 404.0885 355.7319 c
S
U
u
u
420.0171 350.9885 m
390.6044 353.538 l
384.4027 350.3044 l
383.8322 350.0876 383.7347 349.622 384.5049 349.5396 c
409.9695 346.7238 l
410.8165 346.6098 411.4221 346.7667 412.1464 346.9201 c
419.3972 348.8827 l
421.4031 349.2306 421.1365 350.8074 420.0171 350.9885 c
s
420.0171 350.9885 m
411.093 347.2456 l
410.57 347.0274 410.6125 346.81 410.6362 346.6886 c
S
U
U
423.3332 357.5353 m
424.4582 355.9103 429.4582 350.6603 420.9582 349.7853 c
S
391.2082 351.9103 m
414.2082 350.0353 l
409.8332 348.4103 l
388.0832 350.6603 l
391.2082 351.9103 l
s
U
U
u
0 O
1 g
1 w
513.5 384.75 m
513.5 413 L
470.25 413 L
470.25 384.75 L
513.5 384.75 L
f
492.5 399 m
F
u
u
0 R
0 G
0.5 w
504.3815 412.5601 m
507.354 409.5877 l
511.7198 408.8445 l
511.7198 397.3726 l
504.335 393.3783 l
483.2025 395.3755 l
482.5523 397.0475 l
S
504.3815 412.5601 m
482.5523 412.5601 l
482.5523 397.0475 l
502.7073 395.0749 l
504.3815 393.5641 l
504.3815 412.5601 l
s
502.7095 412.5601 m
502.7095 395.0968 l
S
485.1532 398.6266 m
485.1532 410.2379 l
500.2014 410.2379 l
500.2014 397.3262 l
485.1532 398.6266 l
s
501.5948 393.7035 m
500.5383 392.5297 495.4678 392.156 492.8631 392.4494 c
489.5655 392.821 488.1257 393.4712 488.1257 394.8646 c
S
497.1361 393.9821 m
495.7427 393.1461 490.9589 393.9357 491.0053 394.4466 c
S
U
u
u
506.9339 389.7032 m
477.5212 392.2527 l
471.3194 389.0191 l
470.749 388.8024 470.6514 388.3367 471.4217 388.2544 c
496.8862 385.4386 l
497.7333 385.3245 498.3389 385.4815 499.0631 385.6348 c
506.314 387.5974 l
508.3198 387.9454 508.0532 389.5221 506.9339 389.7032 c
s
506.9339 389.7032 m
498.0097 385.9603 l
497.4868 385.7422 497.5292 385.5248 497.553 385.4033 c
S
U
U
510.25 396.25 m
511.375 394.625 516.375 389.375 507.875 388.5 c
S
478.125 390.625 m
501.125 388.75 l
496.75 387.125 l
475 389.375 l
478.125 390.625 l
s
U
U
1 w
491.25 384.4903 m
491.25 377.5368 l
S
430.5 388.7403 m
430.5 381.7868 l
S
500.5832 372.2756 m
500.5832 365.3221 l
S
0.5 w [2 2 ]0 d
371 317 m
426.5 330 l
534.5 322.5 l
S
534.5 432.5 m
534.5 322.5 l
471.5 310 l
371 317 l
371 431.5 l
S
371 431.5 m
472.5 427.5 l
534.5 432.5 l
S
473 427.5 m
473 310 l
S
370.25 431.75 m
423.75 437.25 l
533.75 432.75 l
S
u
0 O
0.75 g
1 w []0 d
398.6303 371.0914 m
412.815 371.0914 l
412.9589 358.8992 l
398.6303 360.4875 l
398.6303 371.0914 l
f
U
0 To
1 0 0 1 398.9392 361.7878 0 Tp
TP
0 Tr
0 g
/_Helvetica 10 Tf
0 Ts
100 Tz
-20 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
-0.2 Tc
0 Tw
( M\r) Tx 
TO
0 To
1 0 0 1 485.9014 400.5 0 Tp
TP
0 Tr
( M\r) Tx 
TO
u
u
0 R
0 G
0.5 w [1 1 ]0 d
226.4647 286.8453 m
229.4372 283.873 l
233.803 283.1298 l
233.803 271.6578 l
226.4182 267.6636 l
205.2857 269.6607 l
204.6355 271.3327 l
S
226.4647 286.8453 m
204.6355 286.8453 l
204.6355 271.3327 l
224.7905 269.3601 l
226.4647 267.8493 l
226.4647 286.8453 l
s
224.7927 286.8453 m
224.7927 269.382 l
S
207.2364 272.9118 m
207.2364 284.5232 l
222.2846 284.5232 l
222.2846 271.6114 l
207.2364 272.9118 l
s
223.678 267.9888 m
222.6215 266.815 217.551 266.4412 214.9463 266.7346 c
211.6487 267.1063 210.2089 267.7565 210.2089 269.1499 c
S
219.2193 268.2673 m
217.8259 267.4313 213.0421 268.221 213.0885 268.7319 c
S
U
u
u
229.0171 263.9885 m
199.6044 266.538 l
193.4027 263.3044 l
192.8322 263.0876 192.7347 262.622 193.5049 262.5396 c
218.9695 259.7238 l
219.8165 259.6098 220.4221 259.7667 221.1464 259.9201 c
228.3972 261.8827 l
230.4031 262.2306 230.1365 263.8074 229.0171 263.9885 c
s
229.0171 263.9885 m
220.093 260.2456 l
219.57 260.0274 219.6125 259.81 219.6362 259.6886 c
S
U
U
232.3332 270.5353 m
233.4582 268.9103 238.4582 263.6603 229.9582 262.7853 c
S
200.2082 264.9103 m
223.2082 263.0353 l
218.8332 261.4103 l
197.0832 263.6603 l
200.2082 264.9103 l
s
U
0 To
1 0 0 1 215.5 247.5 0 Tp
TP
-42.5113 0 Td
0 Tr
0 O
0 g
1 w []0 d
/_Helvetica 8 Tf
1 Ta
-0.16 Tc
(non-participating system\r) Tx 
TO
1 g
297 273 m
F
u
u
0 R
0 G
0.5 w
308.8815 286.5601 m
311.854 283.5877 l
316.2198 282.8445 l
316.2198 271.3726 l
308.835 267.3783 l
287.7025 269.3755 l
287.0523 271.0475 l
S
308.8815 286.5601 m
287.0523 286.5601 l
287.0523 271.0475 l
307.2073 269.0749 l
308.8815 267.5641 l
308.8815 286.5601 l
s
307.2095 286.5601 m
307.2095 269.0968 l
S
289.6532 272.6266 m
289.6532 284.2379 l
304.7014 284.2379 l
304.7014 271.3262 l
289.6532 272.6266 l
s
306.0948 267.7035 m
305.0383 266.5297 299.9678 266.156 297.3631 266.4494 c
294.0655 266.821 292.6257 267.4712 292.6257 268.8646 c
S
301.6361 267.9821 m
300.2427 267.1461 295.4589 267.9357 295.5053 268.4466 c
S
U
u
u
311.4339 263.7032 m
282.0212 266.2527 l
275.8194 263.0191 l
275.249 262.8024 275.1514 262.3367 275.9217 262.2544 c
301.3862 259.4386 l
302.2333 259.3245 302.8389 259.4815 303.5631 259.6348 c
310.814 261.5974 l
312.8198 261.9454 312.5532 263.5221 311.4339 263.7032 c
s
311.4339 263.7032 m
302.5097 259.9603 l
301.9868 259.7422 302.0292 259.5248 302.053 259.4033 c
S
U
U
314.75 270.25 m
315.875 268.625 320.875 263.375 312.375 262.5 c
S
282.625 264.625 m
305.625 262.75 l
301.25 261.125 l
279.5 263.375 l
282.625 264.625 l
s
U
0 O
0.75 g
1 w
290.2364 283.8414 m
304.1332 283.8414 l
304.2771 271.6492 l
290.2364 273.2375 l
290.2364 283.8414 l
f
u
u
0 R
0 G
0.5 w
391.4647 286.8453 m
394.4372 283.873 l
398.803 283.1298 l
398.803 271.6578 l
391.4182 267.6636 l
370.2857 269.6607 l
369.6355 271.3327 l
S
391.4647 286.8453 m
369.6355 286.8453 l
369.6355 271.3327 l
389.7905 269.3601 l
391.4647 267.8493 l
391.4647 286.8453 l
s
389.7927 286.8453 m
389.7927 269.382 l
S
372.2364 272.9118 m
372.2364 284.5232 l
387.2846 284.5232 l
387.2846 271.6114 l
372.2364 272.9118 l
s
388.678 267.9888 m
387.6215 266.815 382.551 266.4412 379.9463 266.7346 c
376.6487 267.1063 375.2089 267.7565 375.2089 269.1499 c
S
384.2193 268.2673 m
382.8259 267.4313 378.0421 268.221 378.0885 268.7319 c
S
U
u
u
394.0171 263.9885 m
364.6044 266.538 l
358.4027 263.3044 l
357.8322 263.0876 357.7347 262.622 358.5049 262.5396 c
383.9695 259.7238 l
384.8165 259.6098 385.4221 259.7667 386.1464 259.9201 c
393.3972 261.8827 l
395.4031 262.2306 395.1365 263.8074 394.0171 263.9885 c
s
394.0171 263.9885 m
385.093 260.2456 l
384.57 260.0274 384.6125 259.81 384.6362 259.6886 c
S
U
U
397.3332 270.5353 m
398.4582 268.9103 403.4582 263.6603 394.9582 262.7853 c
S
365.2082 264.9103 m
388.2082 263.0353 l
383.8332 261.4103 l
362.0832 263.6603 l
365.2082 264.9103 l
s
U
0 O
1 g
1 w
317.5 384.75 m
317.5 413 L
274.25 413 L
274.25 384.75 L
317.5 384.75 L
f
0 R
0 G
295.25 384.4903 m
295.25 377.5368 l
S
0.5 w [2 2 ]0 d
275 424.1588 m
275 310 l
S
0 O
1 g
1 w []0 d
297 399 m
F
u
u
0 R
0 G
0.5 w
308.8815 412.5601 m
311.854 409.5877 l
316.2198 408.8445 l
316.2198 397.3726 l
308.835 393.3783 l
287.7025 395.3755 l
287.0523 397.0475 l
S
308.8815 412.5601 m
287.0523 412.5601 l
287.0523 397.0475 l
307.2073 395.0749 l
308.8815 393.5641 l
308.8815 412.5601 l
s
307.2095 412.5601 m
307.2095 395.0968 l
S
289.6532 398.6266 m
289.6532 410.2379 l
304.7014 410.2379 l
304.7014 397.3262 l
289.6532 398.6266 l
s
306.0948 393.7035 m
305.0383 392.5297 299.9678 392.156 297.3631 392.4494 c
294.0655 392.821 292.6257 393.4712 292.6257 394.8646 c
S
301.6361 393.9821 m
300.2427 393.1461 295.4589 393.9357 295.5053 394.4466 c
S
U
u
u
311.4339 389.7032 m
282.0212 392.2527 l
275.8194 389.0191 l
275.249 388.8024 275.1514 388.3367 275.9217 388.2544 c
301.3862 385.4386 l
302.2333 385.3245 302.8389 385.4815 303.5631 385.6348 c
310.814 387.5974 l
312.8198 387.9454 312.5532 389.5221 311.4339 389.7032 c
s
311.4339 389.7032 m
302.5097 385.9603 l
301.9868 385.7422 302.0292 385.5248 302.053 385.4033 c
S
U
U
314.75 396.25 m
315.875 394.625 320.875 389.375 312.375 388.5 c
S
282.625 390.625 m
305.625 388.75 l
301.25 387.125 l
279.5 389.375 l
282.625 390.625 l
s
U
0 To
1 0 0 1 444.5 279.5 0 Tp
TP
0 Tr
0 O
0 g
1 w
0 Ta
(M = master server\r) Tx 
TO
0 To
1 0 0 1 445.5 263.5 0 Tp
TP
0 Tr
(S = slave server\r) Tx 
TO
0 R
0 G
0.5 w [2 2 ]0 d
223.3125 641.9544 m
S
223.3125 421.2956 m
S
0 To
1 0 0 1 80.75 488 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
/_Helvetica 12 Tf
0 Tt
0 Tc
(\r) Tx 
TO
0 To
1 0 0 1 229.5224 404.2549 0 Tp
TP
0 Tr
/_Helvetica 10 Tf
-20 Tt
-0.2 Tc
( S\r) Tx 
TO
0 To
1 0 0 1 236 443.5 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
-0.16 Tc
(Building 2\r) Tx 
TO
0 To
1 0 0 1 433.5 445.5 0 Tp
TP
0 Tr
(Building 1\r) Tx 
TO
0 R
0 G
0.5 w [2 2 ]0 d
481 375.5 m
S
337.5 323 m
337.5 432.5 l
S
0 To
1 0 0 1 242 248 0 Tp
TP
0 Tr
0 O
0 g
1 w []0 d
0 Tt
0 Tc
(\r) Tx 
TO
0 To
1 0 0 1 295 247 0 Tp
TP
-16.2518 0 Td
0 Tr
-20 Tt
1 Ta
-0.16 Tc
(system in\r) Tx 
-3.928 -9.5 Td
(eng domain\r) Tx 
TO
1 g
499.4868 351.0577 m
F
u
u
0 R
0 G
0.5 w
511.3683 364.6178 m
514.3408 361.6454 l
518.7066 360.9022 l
518.7066 349.4303 l
511.3218 345.436 l
490.1893 347.4332 l
489.5391 349.1052 l
S
511.3683 364.6178 m
489.5391 364.6178 l
489.5391 349.1052 l
509.6941 347.1326 l
511.3683 345.6218 l
511.3683 364.6178 l
s
509.6963 364.6178 m
509.6963 347.1545 l
S
492.14 350.6843 m
492.14 362.2956 l
507.1882 362.2956 l
507.1882 349.3839 l
492.14 350.6843 l
s
508.5816 345.7612 m
507.5251 344.5874 502.4546 344.2137 499.8499 344.5071 c
496.5523 344.8787 495.1125 345.5289 495.1125 346.9223 c
S
504.1229 346.0398 m
502.7295 345.2038 497.9457 345.9934 497.9921 346.5043 c
S
U
u
u
513.9207 341.7609 m
484.508 344.3104 l
478.3062 341.0768 l
477.7358 340.8601 477.6382 340.3944 478.4085 340.3121 c
503.873 337.4963 l
504.7201 337.3822 505.3257 337.5392 506.0499 337.6925 c
513.3008 339.6551 l
515.3066 340.0031 515.04 341.5798 513.9207 341.7609 c
s
513.9207 341.7609 m
504.9965 338.018 l
504.4736 337.7999 504.516 337.5825 504.5398 337.461 c
S
U
U
517.2368 348.3077 m
518.3618 346.6827 523.3618 341.4327 514.8618 340.5577 c
S
485.1118 342.6827 m
508.1118 340.8077 l
503.7368 339.1827 l
481.9868 341.4327 l
485.1118 342.6827 l
s
U
0 O
0.75 g
1 w
492.7232 361.8991 m
506.62 361.8991 l
506.7639 349.7069 l
492.7232 351.2952 l
492.7232 361.8991 l
f
1 g
431.4868 403.0577 m
F
453.1875 388.375 m
453.1875 416.625 L
409.9375 416.625 L
409.9375 388.375 L
453.1875 388.375 L
f
u
u
0 R
0 G
0.5 w
443.3683 416.6178 m
446.3408 413.6454 l
450.7066 412.9022 l
450.7066 401.4303 l
443.3218 397.436 l
422.1893 399.4332 l
421.5391 401.1052 l
S
443.3683 416.6178 m
421.5391 416.6178 l
421.5391 401.1052 l
441.6941 399.1326 l
443.3683 397.6218 l
443.3683 416.6178 l
s
441.6963 416.6178 m
441.6963 399.1545 l
S
424.14 402.6843 m
424.14 414.2956 l
439.1882 414.2956 l
439.1882 401.3839 l
424.14 402.6843 l
s
440.5816 397.7612 m
439.5251 396.5874 434.4546 396.2137 431.8499 396.5071 c
428.5523 396.8787 427.1125 397.5289 427.1125 398.9223 c
S
436.1229 398.0398 m
434.7295 397.2038 429.9457 397.9934 429.9921 398.5043 c
S
U
u
u
445.9207 393.7609 m
416.508 396.3104 l
410.3062 393.0768 l
409.7358 392.8601 409.6382 392.3944 410.4085 392.3121 c
435.873 389.4963 l
436.7201 389.3822 437.3257 389.5392 438.0499 389.6925 c
445.3008 391.6551 l
447.3066 392.0031 447.04 393.5798 445.9207 393.7609 c
s
445.9207 393.7609 m
436.9965 390.018 l
436.4736 389.7999 436.516 389.5825 436.5398 389.461 c
S
U
U
449.2368 400.3077 m
450.3618 398.6827 455.3618 393.4327 446.8618 392.5577 c
S
417.1118 394.6827 m
440.1118 392.8077 l
435.7368 391.1827 l
413.9868 393.4327 l
417.1118 394.6827 l
s
U
0 O
0.75 g
1 w
424.7232 413.8991 m
438.62 413.8991 l
438.7639 401.7069 l
424.7232 403.2952 l
424.7232 413.8991 l
f
0 To
1 0 0 1 425.4751 404.47 0 Tp
TP
0 Tr
0 g
/_Helvetica 10 Tf
0 Ta
-0.2 Tc
( S\r) Tx 
TO
0 To
1 0 0 1 373 239 0 Tp
TP
0 Tr
/_Helvetica 8 Tf
1 Ta
-0.16 Tc
(\r) Tx 
TO
0 To
1 0 0 1 380 247.5 0 Tp
TP
-16.2518 0 Td
0 Tr
(system in\r) Tx 
-9.8318 -9.5 Td
(finance domain\r) Tx 
TO
%%PageTrailer
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec

Adobe_typography_AI3 /terminate get exec


Adobe_customcolor /terminate get exec

Adobe_cshow /terminate get exec

Adobe_cmykcolor /terminate get exec

Adobe_packedarray /terminate get exec

%%EOF

<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="5"><TITLE><XREFTARGET ID="10396">Maintaining NIS</TITLE><PARAGRAPH>This chapter describes, and provides procedures for, NIS maintenance as indicated in the titles of the following sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="40969" TYPE="TITLE">&ldquo;Adding a New User to a System&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="20527" TYPE="TITLE">&ldquo;Changing NIS Passwords&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="43615" TYPE="TITLE">&ldquo;Using Netgroups&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="18306" TYPE="TITLE">&ldquo;Creating a Nonstandard NIS Map Manually: Pre-IRIX 6.5&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="39149" TYPE="TITLE">&ldquo;Creating a Nonstandard NIS Map Manually: IRIX 6.5 and Later&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="12195" TYPE="TITLE">&ldquo;Modifying NIS Maps After NIS Installation&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="16734" TYPE="TITLE">&ldquo;Preparing to Propagate Nonstandard Maps&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="41124" TYPE="TITLE">&ldquo;Propagating an NIS Map&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="29608" TYPE="TITLE">&ldquo;Adding an NIS Slave Server&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="54304" TYPE="TITLE">&ldquo;Changing the Master Server&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="40187" TYPE="TITLE">&ldquo;Using Secure ypset&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="40969">Adding a New User to a System<INDEXTARGET ID="ch051"><!-- POSTPROCESSDATA: ch051|adding new users --></TITLE><PARAGRAPH>To add a new user to a system that is an NIS client, perform these steps:<INDEXTARGET ID="ch052"><!-- POSTPROCESSDATA: ch052|users, adding --></PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH><XREFTARGET ID="93503">On the NIS master server, add a password entry for the new user to the NIS password file (<FILENAME>/etc/passwd</FILENAME> by default). (See the <REFPAGE>passwd(4)</REFPAGE> reference page, the <DOCTITLE>Personal System Administration Guide</DOCTITLE>, or the book <DOCTITLE>IRIX Admin: System Configuration and Operation </DOCTITLE>for more information.)</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="22550">On the NIS master server, update the NIS <ITALICS>passwd</ITALICS> map on that system by entering</PARAGRAPH>
<CODE>
# <USERINPUT>cd /var/yp</USERINPUT>
# <USERINPUT>./ypmake passwd</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>If this user is to be a member of any netgroups, modify <FILENAME>/etc/netgroups</FILENAME> on the NIS master server (see <XREF IDREF="43615" TYPE="TITLE">&ldquo;Using Netgroups&rdquo;</XREF> in this chapter).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="31787">On the new user's system, modify <FILENAME>/etc/passwd</FILENAME> in one of these ways:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>Add the same password entry as you added in step <XREF IDREF="93503" TYPE="TEXT">step 1</XREF> in this section. Duplicating the entry enables the user to log in when the network is down.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Add this password entry:</PARAGRAPH>
<CODE>
<USERINPUT>+userid</USERINPUT>&space;
</CODE>
<PARAGRAPH><VARIABLE>userid</VARIABLE> is the login name of the new user. When this type of entry is used, all <FILENAME>/etc/passwd</FILENAME> information for this user is supplied by NIS.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Use the Users tool of System Manager to add the new user. Choose NIS rather than Local for each item. All <FILENAME>/etc/passwd</FILENAME> information for this user is supplied by NIS.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>Add this password entry:</PARAGRAPH>
<CODE>
<USERINPUT>+</USERINPUT>&space;
</CODE>
<PARAGRAPH>When this type of entry is used, all <FILENAME>/etc/passwd</FILENAME> information for all users is supplied by NIS. Every user in the NIS password database can log in to this system, assuming that the home directory exists.</PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</LIST>
<LIST><PARAGRAPH>Make a home directory for the new user on the user's system:</PARAGRAPH>
<CODE>
# <USERINPUT>cd </USERINPUT><VARIABLE>parentdir</VARIABLE>&space;
# <USERINPUT>mkdir </USERINPUT><VARIABLE>userid</VARIABLE>
# <USERINPUT>chown</USERINPUT>&space;<VARIABLE>uid</VARIABLE>&space;<VARIABLE>userid</VARIABLE>
# <USERINPUT>chgrp </USERINPUT><VARIABLE>group</VARIABLE>&space;<VARIABLE>userid</VARIABLE>
</CODE>
<PARAGRAPH>The variables are:</PARAGRAPH>
<HANGLISTIND><HANGPAIRIND><HANGITEMIND><VARIABLE>parentdir</VARIABLE></HANGITEMIND>
<HANGBODYIND><PARAGRAPH>The parent directory of the home directory you are creating.</PARAGRAPH>
</HANGBODYIND>
</HANGPAIRIND>
<HANGPAIRIND><HANGITEMIND><VARIABLE>userid</VARIABLE></HANGITEMIND>
<HANGBODYIND><PARAGRAPH>The login name of the user (the first field in the password entry).</PARAGRAPH>
</HANGBODYIND>
</HANGPAIRIND>
<HANGPAIRIND><HANGITEMIND><VARIABLE>uid</VARIABLE></HANGITEMIND>
<HANGBODYIND><PARAGRAPH>The unique user ID number for this user (the third field in the password entry). <VARIABLE>userid</VARIABLE> can be used instead of <VARIABLE>uid</VARIABLE> if the local <FILENAME>/etc/passwd</FILENAME> entry duplicates the NIS password entry or if NIS maps have been propagated to this system (it takes about 15 minutes after step <XREF IDREF="22550" TYPE="TEXT">step 2</XREF> for updates to propagate).</PARAGRAPH>
</HANGBODYIND>
</HANGPAIRIND>
<HANGPAIRIND><HANGITEMIND><VARIABLE>group</VARIABLE></HANGITEMIND>
<HANGBODYIND><PARAGRAPH>The group number for this user (the fourth field in the password entry).</PARAGRAPH>
</HANGBODYIND>
</HANGPAIRIND>
</HANGLISTIND>
</LIST>
<LIST><PARAGRAPH>Finish adding the new user by setting up the user's login environment (create <FILENAME>.login</FILENAME> and <FILENAME>.cshrc</FILENAME> files, for example), adding him or her to groups in <FILENAME>/etc/group</FILENAME>, and doing other setup tasks that are usually done at your site.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Have the user add a password to his or her account using <COMMAND>yppasswd</COMMAND>:</PARAGRAPH>
<CODE>
% <USERINPUT>yppasswd</USERINPUT>&space;
</CODE>
<PARAGRAPH><COMMAND>yppasswd</COMMAND> prompts the user to enter the new password twice.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If you added a complete password entry to <FILENAME>/etc/passwd</FILENAME> on the user's system (the first option in instruction <XREF IDREF="31787" TYPE="TEXT">step 4</XREF>), have the user add his or her password to the local <FILENAME>/etc/passwd</FILENAME> using <COMMAND>passwd</COMMAND>:</PARAGRAPH>
<CODE>
% <USERINPUT>passwd</USERINPUT>&space;
</CODE>
<PARAGRAPH><COMMAND>passwd</COMMAND> prompts for the password twice. </PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="20527">Changing NIS Passwords</TITLE><PARAGRAPH>In general, all NIS accounts should be password protected. This reduces the risk of malicious or accidental data corruption. When you change your password with the <COMMAND>passwd</COMMAND> command, you change the entry explicitly given in your own local <FILENAME>/etc/passwd</FILENAME> file. To change your NIS password, use the <COMMAND>yppasswd<INDEXTARGET ID="ch053"><!-- POSTPROCESSDATA: ch053|<ITALICS>yppasswd</ITALICS> tool:changing NIS passwords --></COMMAND> command. </PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>To change the NIS password for the user <ITALICS>tim</ITALICS>, enter</PARAGRAPH>
<CODE>
% <USERINPUT>yppasswd tim</USERINPUT>
Changing NIS password for tim on <VARIABLE>master_name</VARIABLE>
Old password: <VARIABLE>&lt;response not echoed></VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Enter your old NIS password (if the account is not password protected, press <USERINPUT>Enter</USERINPUT>.)</PARAGRAPH>
<CODE>
New password: <VARIABLE>&lt;response not echoed></VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Enter your new NIS password:</PARAGRAPH>
<CODE>
Retype new password: <VARIABLE>&lt;response not echoed></VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Reenter the new password:</PARAGRAPH>
<CODE>
NIS passwd changed on <VARIABLE>master_name</VARIABLE>
</CODE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>Your NIS password change has been logged on the master server and will be updated soon. Note that it takes a little while for the change to propagate throughout the domain.</PARAGRAPH>
<PARAGRAPH>If your local password is not given explicitly but rather is pulled in from NIS with a plus (<SCREENDISPLAY>+</SCREENDISPLAY>) entry, then the <COMMAND>passwd</COMMAND> command prints this error message:</PARAGRAPH>
<CODE>
Not in passwd file
</CODE>
<PARAGRAPH>In this case, you must use <COMMAND>yppasswd</COMMAND> to change your password.</PARAGRAPH>
<PARAGRAPH>To enable the <COMMAND>yppasswd</COMMAND> service, the system administrator must start up the daemon <INDEXTARGET ID="ch054"><!-- POSTPROCESSDATA: ch054|<ITALICS>rpc.passwd</ITALICS> daemon --><COMMAND>rpc.passwd</COMMAND> server on the system serving as the master server for the NIS password file in your domain. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="43615">Using Netgroups<INDEXTARGET ID="ch055"><!-- POSTPROCESSDATA: ch055|<ITALICS>/etc/netgroup</ITALICS> file --></TITLE><PARAGRAPH>The <INDEXTARGET ID="ch056"><!-- POSTPROCESSDATA: ch056|<ITALICS>netgroup</ITALICS> file --><FILENAME>/etc/netgroup</FILENAME> file on the NIS master server contains a list of network-wide groups of systems and users. These groups are used for administrative purposes. For example, to define a set of users that should be given access to a specific system, you can create a netgroup for those users. </PARAGRAPH>
<PARAGRAPH>The daemons <COMMAND>login<INDEXTARGET ID="ch057"><!-- POSTPROCESSDATA: ch057|<ITALICS>login</ITALICS> daemon --></COMMAND>, <COMMAND>mountd<INDEXTARGET ID="ch058"><!-- POSTPROCESSDATA: ch058|<ITALICS>mountd</ITALICS> daemon --></COMMAND>, <COMMAND>rlogind<INDEXTARGET ID="ch059"><!-- POSTPROCESSDATA: ch059|<ITALICS>rlogind</ITALICS> daemon --></COMMAND>, and <COMMAND>rshd <INDEXTARGET ID="ch0510"><!-- POSTPROCESSDATA: ch0510|<ITALICS>rshd</ITALICS> daemon --><INDEXTARGET ID="ch0511"><!-- POSTPROCESSDATA: ch0511|<ITALICS>rshd </ITALICS>daemon --></COMMAND>use netgroups for permission checking. <COMMAND>login</COMMAND> consults them for user classifications if it encounters <ITALICS>netgroup</ITALICS> names in <FILENAME>/etc/passwd</FILENAME>. <COMMAND>mountd</COMMAND> consults them for system classifications if it encounters <ITALICS>netgroup</ITALICS> names in <FILENAME>/etc/exports</FILENAME>. <COMMAND>rlogind</COMMAND> and <COMMAND>rshd</COMMAND> consult the <ITALICS>netgroup</ITALICS> map for both system and user classifications if they encounter <ITALICS>netgroup</ITALICS> names in <COMMAND>hosts.equiv</COMMAND> or <COMMAND>.rhosts</COMMAND>.</PARAGRAPH>
<PARAGRAPH>The NIS master server uses <FILENAME>/etc/netgroup</FILENAME> to generate three NIS maps: <ITALICS>netgroup</ITALICS>, <ITALICS>netgroup.byuser</ITALICS>, and <ITALICS>netgroup.byhost</ITALICS>. The NIS map <ITALICS>netgroup</ITALICS> contains the basic information in <FILENAME>/etc/netgroup</FILENAME>. The two other NIS maps contain a more specific form of the information to speed the lookup of netgroups given the system or user.</PARAGRAPH>
<PARAGRAPH>Below is a sample <INDEXTARGET ID="ch0512"><!-- POSTPROCESSDATA: ch0512|<ITALICS>netgroup</ITALICS> file --><INDEXTARGET ID="ch0513"><!-- POSTPROCESSDATA: ch0513|user groups --><INDEXTARGET ID="ch0514"><!-- POSTPROCESSDATA: ch0514|<ITALICS>/etc/netgroup</ITALICS> file --><FILENAME>/etc/netgroup</FILENAME> file. (See the <REFPAGE>netgroup(4)</REFPAGE> reference for a description of file format and definition of lines and fields.)</PARAGRAPH>
<CODE>
# Engineering: Everyone but eric has a machine;
# he has no machine.
# The machine 'testing' is used by all of hardware.
#
engineering hardware software
hardware (mercury,alan,sgi) (venus,beth,sgi) (testing,-,sgi)
software (earth,chris,sgi) (mars,deborah,sgi) (-,eric,sgi) 
#
# Marketing: Time-sharing on jupiter
#
marketing (jupiter,fran,sgi) (jupiter,greg,sgi) 
#
# Others
#
allusers (-,,sgi)
allhosts (,-,sgi)
</CODE>
<PARAGRAPH><XREF IDREF="88189" TYPE="TABLE">Table&nbsp;5-1</XREF> shows the users in each group.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="5-1"><PREFIX>Table 5-1 </PREFIX><XREFTARGET ID="88189">Sample User Groups</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="99"><PARAGRAPH>Group</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH>Users</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>hardware</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>alan</ITALICS>, <ITALICS>beth</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>software</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>chris</ITALICS>, <ITALICS>deborah</ITALICS>, <ITALICS>eric</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>engineering</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>alan</ITALICS>, <ITALICS>beth</ITALICS>, <ITALICS>chris</ITALICS>, <ITALICS>deborah</ITALICS>, <ITALICS>eric</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>marketing</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>fran</ITALICS>, <ITALICS>greg</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>allusers</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH>(every user in the NIS map <ITALICS>passwd</ITALICS>) </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>allhosts</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH>(no users) </PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH><XREF IDREF="23787" TYPE="TABLE">Table&nbsp;5-2</XREF> shows how the systems are classified.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="5-2"><PREFIX>Table 5-2 </PREFIX><XREFTARGET ID="23787">Sample Host Groups</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="99"><PARAGRAPH>Group</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH>Hosts</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>hardware</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>mercury</ITALICS>, <ITALICS>venus</ITALICS>, <ITALICS>testing</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>software</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>earth</ITALICS>, <ITALICS>mars</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>engineering</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>mercury</ITALICS>, <ITALICS>venus</ITALICS>, <ITALICS>earth</ITALICS>, <ITALICS>mars</ITALICS>, <ITALICS>testing</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>marketing</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH><ITALICS>jupiter</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>allusers</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH>(no systems) </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="99"><PARAGRAPH><ITALICS>allhosts</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="105" WIDTH="180"><PARAGRAPH>(all systems in the NIS map <ITALICS>hosts</ITALICS>) </PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>For more details, see these reference pages: <REFPAGE>yppasswd(1)</REFPAGE>,<REFPAGE>&space;hosts.equiv(4)</REFPAGE>,<REFPAGE>&space;export(4)</REFPAGE>, <REFPAGE>passwd(4)</REFPAGE>, <REFPAGE>group(4)</REFPAGE>,<REFPAGE>&space;netgroup(4)</REFPAGE>, and<REFPAGE>&space;rpc.passwd(1M)</REFPAGE>. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="18306">Creating a Nonstandard NIS Map Manually: Pre-IRIX 6.5<INDEXTARGET ID="ch0515"><!-- POSTPROCESSDATA: ch0515|maps: creating --></TITLE><PARAGRAPH>You can use <INDEXTARGET ID="ch0516"><!-- POSTPROCESSDATA: ch0516|maps:nonstandard:creating --><COMMAND>ypinit</COMMAND>&space;and <INDEXTARGET ID="ch0517"><!-- POSTPROCESSDATA: ch0517|<ITALICS>local.make.script</ITALICS> file --><FILENAME>/var/yp/local.make.script<INDEXTARGET ID="ch0518"><!-- POSTPROCESSDATA: ch0518|<ITALICS>/var/yp/local.make.script</ITALICS> file --></FILENAME> (see the <REFPAGE>ypmake(1M)</REFPAGE> reference page) to do almost everything necessary to create and modify a map, unless you add nonstandard maps to the database or change the set of NIS slave servers after the system is already running. Whether you use <FILENAME>/var/yp/local.make.script</FILENAME> or some other procedure, the goal is the same: a new well-formed <FILENAME>mdbm</FILENAME> file in the domain directory on the NIS master server. </PARAGRAPH>
<PARAGRAPH>You can create new maps in two ways: using an existing ASCII file as input or using standard keyboard input. The next two sections demonstrate how to create a simple, nonstandard NIS map called <ITALICS>yourmap</ITALICS> using each method. <ITALICS>yourmap</ITALICS> consists of the keys <ITALICS>al</ITALICS>, <ITALICS>bl</ITALICS>, <ITALICS>cl</ITALICS>,&space;and so on (<ITALICS>l</ITALICS> for left); and one set of values, <ITALICS>ar</ITALICS>, <ITALICS>br</ITALICS>, <ITALICS>cr</ITALICS>, and so on (<ITALICS>r</ITALICS> for right). </PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>ASCII File Input</TITLE><PARAGRAPH>Assume the ASCII file <FILENAME>/etc/yourmap</FILENAME> has been created with an editor or shell script, and that the map from <FILENAME>/etc/yourmap</FILENAME> is part of the database for the <ITALICS>shapes</ITALICS> domain. To create the NIS map for this file, enter these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /var/yp</USERINPUT>
# <INDEXTARGET ID="ch0519"><!-- POSTPROCESSDATA: ch0519|<ITALICS>makedbm</ITALICS> tool: and nonstandard maps --><USERINPUT>makemdbm /etc/yourmap /var/ns/domains/shapes/yourmap.m</USERINPUT>
</CODE>
<PARAGRAPH>This command sequence creates a map called <ITALICS>yourmap</ITALICS> in the directory <FILENAME>/var/ns/domains/shapes</FILENAME>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Standard Keyboard Input</TITLE><PARAGRAPH>When no original ASCII file exists, you can create the NIS map described in the previous example from the keyboard with these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /var/ns/domains</USERINPUT>
# <USERINPUT>makemdbm - /var/ns/domains/shapes/yourmap.m</USERINPUT>
</CODE>
<PARAGRAPH>Enter these lines:</PARAGRAPH>
<CODE>
<USERINPUT>al ar</USERINPUT>&space;
<USERINPUT>bl br</USERINPUT>&space;
<USERINPUT>cl cr</USERINPUT>&space;
&lt;Ctrl-D>
</CODE>
<PARAGRAPH>The <COMMAND>makemdbm </COMMAND>switch is used to indicate that input is coming directly from the keyboard. The result of your entries is the same as the previous example: a map called <ITALICS>yourmap</ITALICS> in the directory <FILENAME>/var/ns/domains/shapes</FILENAME>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Adding the New NIS Map</TITLE><PARAGRAPH>Add an entry for the new NIS map in the <FILENAME>/var/ns/domains/&lt;domainname>/nsswitch.conf</FILENAME> file with these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /var/ns/domains</USERINPUT>&space;
# <USERINPUT>cat >> shapes/nsswitch.conf</USERINPUT>&space;
<USERINPUT>yourmap: nisserv</USERINPUT>&space;
&lt;Ctrl-D>
</CODE>
<PARAGRAPH>The <FILENAME>nsswitch.conf</FILENAME> file now contains the name of the map followed by the protocol to be used. For more information, see the <REFPAGE>nsswitch.conf(4)</REFPAGE> reference page.</PARAGRAPH>
<PARAGRAPH>Finally, you must send the <COMMAND>nsd</COMMAND> daemon a SIGHUP signal for the change to take effect. Enter this command:</PARAGRAPH>
<CODE>
# <USERINPUT>killall -HUP nsd</USERINPUT>&space;
</CODE>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="39149">Creating a Nonstandard NIS Map Manually: IRIX 6.5 and Later</TITLE><PARAGRAPH>The IRIX operating system is shipped without default NIS server settings for some common NIS maps, such as <FILENAME>auto.master</FILENAME> and <FILENAME>auto.home</FILENAME>. This remains true for IRIX 6.5 and subsequent releases. However, because of the advent of Unified Name Services, nsd, and the demise of the ypserv process, a new procedure is required to serve these maps under IRIX 6.5.</PARAGRAPH>
<PARAGRAPH>The following steps describe how to  serve these maps under IRIX 6.5. Use this procedure if your system has been upgraded to IRIX 6.5 or a subsequent release and was formerly an NIS master server:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH><XREFTARGET ID="29900">Rename your current (that is, earlier than IRIX 6.5) <FILENAME>/var/yp/local.make </FILENAME>file.</PARAGRAPH>
<CAUTION><PREFIX>Caution</PREFIX>If you do not rename this file, <FILENAME>make.script</FILENAME> will try to run the old <FILENAME>local.make.script</FILENAME> file (see <XREF IDREF="21352" TYPE="TEXT"></XREF> Step 6) and will fail.</CAUTION>
<PARAGRAPH>When you create a new script to make and push the maps, you can edit your pre-IRIX 6.5 <FILENAME>/var/yp/local.make.script </FILENAME>file to conform to the changes that are made to the <FILENAME>local.make.script </FILENAME>file (see Step 6).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Make sure that <COMMAND>check configuration</COMMAND> is <COMMAND>on</COMMAND> for <COMMAND>yp</COMMAND>, <COMMAND>ypmaster</COMMAND>, and <COMMAND>ypserv</COMMAND>, and that NIS services are running on the system.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Execute the <COMMAND>ypwhich -m </COMMAND>command. This command should produce the following output:</PARAGRAPH>
<CODE>
bootparams <VARIABLE>master</VARIABLE>
capability.byname <VARIABLE>master</VARIABLE>
ethers.byname <VARIABLE>master</VARIABLE>
group.byname <VARIABLE>master</VARIABLE>
group.bygid <VARIABLE>master</VARIABLE>
group.bymember <VARIABLE>master</VARIABLE>
hosts.byaddr <VARIABLE>master</VARIABLE>
hosts.byname <VARIABLE>master</VARIABLE>
mail.aliases <VARIABLE>master</VARIABLE>
mail.byaddr <VARIABLE>master</VARIABLE>
netgroup <VARIABLE>master</VARIABLE>
netgroup.byuser <VARIABLE>master</VARIABLE>
netgroup.byhost <VARIABLE>master</VARIABLE>
netid.byname <VARIABLE>master</VARIABLE>
networks.myaddr <VARIABLE>master</VARIABLE>
networks.byname <VARIABLE>master</VARIABLE>
passwd.byname <VARIABLE>master</VARIABLE>
passwd.byuid <VARIABLE>master</VARIABLE>
protocols.bynumber <VARIABLE>master</VARIABLE>
protocols.byname <VARIABLE>master</VARIABLE>
rpc.bynumber <VARIABLE>master</VARIABLE>
rpc.byname <VARIABLE>master</VARIABLE>
services <VARIABLE>master</VARIABLE>
services.byname <VARIABLE>master</VARIABLE>
ypservers <VARIABLE>master</VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Make sure that the NIS server is fully functional and that the default maps are updated and pushed properly.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Add the following line to the <FILENAME>/var/ns/domains/&lt;yourdomain>/nsswitch.conf </FILENAME>and <FILENAME>/var/ns/nsswitch.conf.nisserv </FILENAME>files to add a new map, called <FILENAME>auto.foo</FILENAME>.  This file is based on a file named <FILENAME>/etc/auto.foo</FILENAME>:</PARAGRAPH>
<CODE>
auto.foo:          nisserv
</CODE>
<NOTE><PREFIX>Note</PREFIX>You must edit both files.  This is because <FILENAME>/var/ns/nsswitch.conf.nisserv</FILENAME> is a prototype file copied to the <FILENAME>/var/ns/domain/&lt;yourdomain>/nsswitch.conf</FILENAME> file when the <COMMAND>ypinit -m</COMMAND> command executes. This enables a single host to serve more than one NIS domain.</NOTE>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="21352">Make a copy of the old <FILENAME>local.make.script</FILENAME> file that you renamed in Step 1. Then, edit this file to conform to the syntax and to account for the following major differences between the NIS server for IRIX 6.5 and previous versions:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>The IRIX 6.5 NIS server uses <COMMAND>mdbm</COMMAND> instead of <COMMAND>dbm</COMMAND>.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>The location and names of most files, including database file, are different.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>There may be differences in the behavior of the <COMMAND>make</COMMAND> command.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>The <COMMAND>ypmake </COMMAND>command is an sh script that runs <COMMAND>mdbm_parse</COMMAND>, <COMMAND>local.mdbm_parse</COMMAND>, and <COMMAND>make make.script</COMMAND>, in that order. </PARAGRAPH>
<PARAGRAPH>The <COMMAND>mdbm_parse</COMMAND> program is a Perl program that is used to maintain the default maps. A local <FILENAME>mdbm_parse</FILENAME> can by any type of program, although Perl is preferred. <FILENAME>make.script</FILENAME> is still provided, but it is a null script that has no effect on the default <COMMAND>yp</COMMAND> maps. It is only used in the event that it contains an <COMMAND>sinclude</COMMAND> call to call a legacy <FILENAME>local.make.script</FILENAME>.</PARAGRAPH>
<PARAGRAPH>The following script is an example of a <FILENAME>local.make.script</FILENAME> file for the <FILENAME>auto.foo </FILENAME>map modified to work under IRIX 6.5.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>Do not substitute spaces for tabs in this script.</NOTE>
<CODE>
AUTO_MASTER=auto_master

#Makedbm distributed with IRIX that builds maps for
#audofsd/automount correctly

0_MAKEMDBM =     /usr/sbin/makemdbm

localall: all $(AUTO_MASTER)

#master map for autofsd:
$(AUTOMASTER): $(DIR)/$(AUTO_MASTER)
&space;    date &ldquo;+S(UPDATEFMT) $(AUTO_MASTER) $(DATEFMT)&rdquo;
&space;    $(O_MAKEMDBM) $(DIR)/$(AUTO_MASTER) $(YPDBDIR)/$(AUTO_MASTER).m
&space;    if [ ! $(NOPUSH) ]; then \
&space;         $(YPPUSH) $(AUTO_MASTER); \
&space;         date &ldquo;+$(PUSHFMT) $(AUTO_MASTER) $(DATEFMT)&rdquo;;\
&space;    fi
</CODE>
</BULLETIND>
</BULLETLISTIND>
</LIST>
<LIST><PARAGRAPH>Execute the <COMMAND>ypmake</COMMAND> command.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Once the <FILENAME>local.make.script</FILENAME> creates the <FILENAME>mdbm</FILENAME> file, and the local script is working, execute <COMMAND>nsadmin restart</COMMAND> to restart nsd with the new database.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Execute the <COMMAND>ypwhich -m</COMMAND> command to ensure that the new map is being served by the NIS server.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Edit the <FILENAME>/etc/nsswitch.conf</FILENAME> file to add the map to all IRIX 6.5 clients, including the NFS servers.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<SECTION2 LBL="" HELPID = ""><TITLE>Additional Tips for Creating Nonstandard Maps Under IRIX 6.5</TITLE><PARAGRAPH>Observe the following when you create nonstandard maps under IRIX 6.5 and later:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Each time you execute the <COMMAND>ypinit -m</COMMAND> command, you must repeat the previous procedure as shown. This is because the <COMMAND>ypinit -m</COMMAND> command removes the <FILENAME>/var/ns/domain/yourdomain</FILENAME> directory.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>For NIS clients running versions of IRIX prior to 6.5.1, you should assume that host and domain names are case-sensitive.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>When a problem occurs, the following commands can be helpful: <COMMAND>nsadmin restart</COMMAND>, <COMMAND>nsadmin cat</COMMAND>, <COMMAND>killall -USR2 nsd</COMMAND>, and so forth. See also the nsadmin(1M) reference page for related information.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The <COMMAND>makemdbm</COMMAND> command treats the first word or symbol of a line, up to the first white space, as the key. This includes comments. Because comments in the input file are all likely to begin with a <ITALICS>#</ITALICS> (pound sign), <COMMAND>makemdbm</COMMAND> puts the first comment line that it encounters into the database with a key of &ldquo;<ITALICS>#</ITALICS>&rdquo;, and ignores subsequent comments.</PARAGRAPH>
<PARAGRAPH>To ensure that NIS clients do not misinterpret comments as valid records, you should pass the input file through a regular expression that removes the comment lines.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="12195">Modifying NIS Maps After NIS Installation<INDEXTARGET ID="ch0520"><!-- POSTPROCESSDATA: ch0520|maps:modifying --></TITLE><PARAGRAPH>To change any NIS map, you must change the databases on the master server for the domain. The method you use to modify the map depends on whether you are changing a standard or nonstandard map.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Modifying a Standard NIS Map<INDEXTARGET ID="ch0521"><!-- POSTPROCESSDATA: ch0521|maps:standard:modifying --></TITLE><PARAGRAPH>A standard NIS map is any map that has an ASCII file and is included in the <INDEXTARGET ID="ch0522"><!-- POSTPROCESSDATA: ch0522|<ITALICS>make.script</ITALICS> file --><FILENAME>/var/yp/mdbm_parse <INDEXTARGET ID="ch0523"><!-- POSTPROCESSDATA: ch0523|<ITALICS>/var/yp/make.script</ITALICS> file --></FILENAME>file. The procedure for modifying a standard NIS map consists of editing the ASCII file for the map and updating the map with <COMMAND>ypmake<INDEXTARGET ID="ch0524"><!-- POSTPROCESSDATA: ch0524|<ITALICS>ypmake</ITALICS> tool:using --></COMMAND> on the master server. For example, to modify the password database map, edit the ASCII file for the map and run <COMMAND>ypmake</COMMAND> on the master server. To add the user <ITALICS>tom</ITALICS> to the password database, perform these steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Edit the ASCII file:</PARAGRAPH>
<CODE>
# <USERINPUT>vi /etc/passwd.nis</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Add this line to the password file:</PARAGRAPH>
<CODE>
<USERINPUT>tom::2349:20:Tom Cat:/usr/people/tom:/bin/csh</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Update the <ITALICS>password</ITALICS> map: </PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypmake passwd</USERINPUT>
</CODE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>By default, the <COMMAND>ypmake</COMMAND> program updates the map on the master server based on information contained in the make script (<FILENAME>/var/yp/mdbm_parse</FILENAME> and <FILENAME>/var/yp/local.make.script</FILENAME>). It also propagates the updated map to all slave servers listed in the <ITALICS>ypservers</ITALICS> database map.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Modifying a Nonstandard NIS Map<INDEXTARGET ID="ch0525"><!-- POSTPROCESSDATA: ch0525|maps:nonstandard:modifying --></TITLE><PARAGRAPH>Nonstandard or custom NIS maps are databases that are specific to the application of a particular vendor site but are not part of the NFS release. You can manually modify custom maps. You can also manually change maps that are not expected to change, and maps for which no ASCII form exists. </PARAGRAPH>
<PARAGRAPH>The general procedure is to use <COMMAND>makemdbm<INDEXTARGET ID="ch0526"><!-- POSTPROCESSDATA: ch0526|<ITALICS>makemdbm</ITALICS> tool:and nonstandard maps --></COMMAND> with a switch to disassemble the map. The disassembled map is in a form you can modify with standard tools such as <COMMAND>awk</COMMAND>, <COMMAND>sed</COMMAND>, or <COMMAND>vi</COMMAND>. You then build a new map from the changed version using <COMMAND>makemdbm</COMMAND>. </PARAGRAPH>
<PARAGRAPH>Use this procedure to modify a nonstandard NIS map: </PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Disassemble the map, as shown in this sample command: </PARAGRAPH>
<CODE>
# <USERINPUT>cd /var/yp</USERINPUT>&space;
# <USERINPUT>makemdbm -u /var/ns/domains/shapes/mymap.m > /var/tmp/mymap.txt</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Edit the text file (<FILENAME>/var/tmp/mymap.txt</FILENAME>, in this example) with any text editor.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Build the new map, as shown in this sample command:</PARAGRAPH>
<CODE>
# <USERINPUT>makemdbm /var/tmp/mymap.txt /var/ns/domains/shapes/mymap.m</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Remove the temporary ASCII file, as shown in this sample:</PARAGRAPH>
<CODE>
# <USERINPUT>rm /var/tmp/mymap.txt</USERINPUT>
</CODE>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>This procedure modifies and updates custom maps but does not propagate the map to slave servers. </PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="16734">Preparing to Propagate Nonstandard Maps<INDEXTARGET ID="ch0527"><!-- POSTPROCESSDATA: ch0527|maps:propagating. <ITALICS>See</ITALICS> map propagation. --></TITLE><PARAGRAPH>Preparing to propagate a nonstandard NIS map consists of setting up its <FILENAME>mdbm<INDEXTARGET ID="ch0528"><!-- POSTPROCESSDATA: ch0528|<ITALICS>dbm</ITALICS> files --></FILENAME> files in the domain directory on each NIS server (the transfer mechanism is described in the next section). The files must be set up correctly on the master and each slave server in the domain.</PARAGRAPH>
<PARAGRAPH>On the NIS master server, create a new file called <INDEXTARGET ID="ch0529"><!-- POSTPROCESSDATA: ch0529|automount:<ITALICS>auto.master</ITALICS> map --><INDEXTARGET ID="ch0530"><!-- POSTPROCESSDATA: ch0530|automount:<ITALICS>auto.home</ITALICS> map --><INDEXTARGET ID="ch0531"><!-- POSTPROCESSDATA: ch0531|<ITALICS>/var/yp/local.make.script</ITALICS> file --><INDEXTARGET ID="ch0532"><!-- POSTPROCESSDATA: ch0532|<ITALICS>local.make.script</ITALICS> file --><FILENAME>/var/yp/local.make.script</FILENAME> so you can conveniently rebuild the map. This example shows a copy of <FILENAME>/var/yp/local.make.script</FILENAME> to create and push the maps <ITALICS>auto.indirect</ITALICS>, <ITALICS>auto.direct</ITALICS>, <ITALICS>auto.master</ITALICS>, and <ITALICS>auto.home</ITALICS> from the files <FILENAME>/etc/auto.indirect</FILENAME>, <FILENAME>/etc/auto.direct</FILENAME>, <FILENAME>/etc/auto_master</FILENAME>, and <FILENAME>/etc/auto.home</FILENAME>. </PARAGRAPH>
<CODE>
AUTO_MASTER=auto_master
DIRECT=auto.direct
INDIRECT=auto.test
HOME=auto.home

O_MAKEMDBM =    /usr/sbin/makemdbm

localall: all $(AUTO_MASTER) $(DIRECT) $(INDIRECT) $(HOME)


# master map for autofsd:
$(AUTO_MASTER): $(DIR)/$(AUTO_MASTER)
&space;       date &ldquo;+$(UPDATEFMT) $(AUTO_MASTER) $(DATEFMT)&rdquo;
&space;       $(O_MAKEMDBM) $(DIR)/$(AUTO_MASTER) $(YPDBDIR)/$(AUTO_MASTER).m
&space;       if [ ! $(NOPUSH) ]; then \
&space;               $(YPPUSH)  -v $(AUTO_MASTER); \
&space;               date &ldquo;+$(PUSHFMT) $(AUTO_MASTER) $(DATEFMT)&rdquo;;\
&space;       fi
# DIRECT map:
$(DIRECT): $(DIR)/$(DIRECT)
&space;       date &ldquo;+$(UPDATEFMT) $(DIRECT) $(DATEFMT)&rdquo;
&space;       $(O_MAKEMDBM) $(DIR)/$(DIRECT) $(YPDBDIR)/$(DIRECT).m
&space;       if [ ! $(NOPUSH) ]; then \
&space;               $(YPPUSH) -v $(DIRECT); \
&space;               date &ldquo;+$(PUSHFMT) $(DIRECT) $(DATEFMT)&rdquo;;\
&space;       fi

# INDIRECT map:
$(INDIRECT):    $(DIR)/$(INDIRECT)
&space;       date &ldquo;+$(UPDATEFMT) $(INDIRECT) $(DATEFMT)&rdquo;
&space;       $(O_MAKEMDBM) $(DIR)/$(INDIRECT) $(YPDBDIR)/$(INDIRECT).m
&space;       if [ ! $(NOPUSH) ]; then \
&space;               $(YPPUSH) $(INDIRECT); \
&space;               date &ldquo;+$(PUSHFMT) $(INDIRECT) $(DATEFMT)&rdquo;;\
&space;       fi

# HOME map:
$(HOME):        $(DIR)/$(HOME)
&space;       date &ldquo;+$(UPDATEFMT) $(HOME) $(DATEFMT)&rdquo;
&space;       $(O_MAKEMDBM) $(DIR)/$(HOME) $(YPDBDIR)/$(HOME).m
&space;       if [ ! $(NOPUSH) ]; then \
&space;               $(YPPUSH) $(HOME); \
&space;               date &ldquo;+$(PUSHFMT) $(HOME) $(DATEFMT)&rdquo;;\
&space;       fi
</CODE>
<PARAGRAPH>Also, add the following lines in the server's <FILENAME>/var/ns/nsswitch.conf.nisserv</FILENAME> file (or <FILENAME>/var/ns/domains/&lt;domainname>/nsswitch.conf</FILENAME>) so client systems can query the maps:</PARAGRAPH>
<CODE>
auto_master:            nisserv 
auto.direct:            nisserv 
auto.home:              nisserv 
auto.test:              nisserv 
</CODE>
<PARAGRAPH>Send the <COMMAND>nsd</COMMAND> daemon a SIGHUP signal for the change to take effect and restart <COMMAND>nsadmin</COMMAND>:</PARAGRAPH>
<CODE>
# <USERINPUT>killall -HUP nsd</USERINPUT>
# <USERINPUT>nsadmin restart</USERINPUT>&space;
</CODE>
<PARAGRAPH>Typically, <FILENAME>/var/yp/local.make.script</FILENAME> filters each readable ASCII file for which a map is to be built (such as <FILENAME>/etc/auto.master</FILENAME>) through <COMMAND>awk</COMMAND>, <COMMAND>sed</COMMAND>, and/or <COMMAND>grep</COMMAND> to make two databases suitable for input to <COMMAND>makemdbm</COMMAND>. For example, the database might be stored as <FILENAME>/var/ns/domains/circles/auto.master.m.</FILENAME></PARAGRAPH>
<PARAGRAPH>To create a customized make script, <FILENAME>/var/yp/local.make.script</FILENAME>, use the existing <FILENAME>/var/yp/local make.script.demo</FILENAME> as a source of programming examples. Make use of mechanisms already in place in <FILENAME>/var/yp/localmake.script.demo</FILENAME> when deciding how to create dependencies that <COMMAND>make</COMMAND> recognizes; specifically, using<FILENAME>.time</FILENAME> files allows you to see when the script was last run for the map.</PARAGRAPH>
<PARAGRAPH>If new maps are to propagate properly on slave servers, <COMMAND>ypxfr</COMMAND> shell scripts must contain the appropriate entries. To get an initial copy of the map, run <COMMAND>ypxfr</COMMAND> manually on each slave server. A map must be available on all servers before clients begin to access it. If a map is unavailable on some NIS servers, client programs may behave unpredictably. For details on the use of <COMMAND>make</COMMAND> and <COMMAND>ypxfr</COMMAND>, refer to the <REFPAGE>make(1)</REFPAGE> and <REFPAGE>ypxfr(1M)</REFPAGE> reference pages.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="41124">Propagating an NIS Map</TITLE><PARAGRAPH>During slave server setup, <INDEXTARGET ID="ch0533"><!-- POSTPROCESSDATA: ch0533|map propagation: procedures for --><COMMAND>ypinit</COMMAND> calls <COMMAND>ypxfr</COMMAND> to transfer maps from the master to the new slave server. Once the slave server is operating, maps can be transferred in two ways: by running <COMMAND>ypxfr</COMMAND> periodically from <COMMAND>crontab</COMMAND> or by executing <COMMAND>ypmake</COMMAND>, <COMMAND>ypxfr</COMMAND>, or <COMMAND>yppush</COMMAND> from a command line.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Periodic Propagation: crontab </TITLE><PARAGRAPH>The standard root<INDEXTARGET ID="ch0534"><!-- POSTPROCESSDATA: ch0534|<ITALICS>crontab</ITALICS> tool:for map propagation --><FILENAME>&space;crontab</FILENAME>, <INDEXTARGET ID="ch0535"><!-- POSTPROCESSDATA: ch0535|<ITALICS>/var/spool/cron/crontabs/root</ITALICS> file --><FILENAME>/var/spool/cron/crontabs/root</FILENAME>, has entries to run <COMMAND>ypxfr<INDEXTARGET ID="ch0536"><!-- POSTPROCESSDATA: ch0536|<ITALICS>ypxfr</ITALICS> tool:and map propagation --></COMMAND> periodically from shell scripts at a suggested rate for the standard maps in your NIS database. The <FILENAME>crontab</FILENAME> entries test whether the system is configured as a slave server; if the test succeeds, the <COMMAND>ypxfr</COMMAND> scripts are executed. If your NIS database has only standard maps, the default entries in root's <FILENAME>crontab</FILENAME> ensures that the maps are kept reasonably up to date. The shell scripts, by default, are run on each NIS slave server in the domain to ensure database consistency throughout the domain. The <FILENAME>cron</FILENAME> shell script entries for <COMMAND>ypxfr</COMMAND> look similar to the following example. Note that each entry in the <FILENAME>crontab</FILENAME> file must be seen as one line. (For documentation purposes, line wraps are indicated with a backslash [\].)</PARAGRAPH>
<CODE>
# If this machine is running NIS and it's a slave server, the following 
# commands keep the NIS databases up-to-date.
#
13      9       *       *       *       if /etc/chkconfig yp; then find \
/var/yp -type f -name 'xfr.*' -mtime +1 -exec rm -f '{}' ';' ; fi
15      *       *       *       *     if test -x /var/yp/ypxfr_1ph;\
then /var/yp/ypxfr_1ph; fi
17      9,15    *       *       *     if test -x /var/yp/ypxfr_2pd;\
then /var/yp/ypxfr_2pd; fi
19      9       *       *       *     if test -x /var/yp/ypxfr_1pd;\
then /var/yp/ypxfr_1pd; fi
</CODE>
<PARAGRAPH>The <COMMAND>ypxfr<INDEXTARGET ID="ch0537"><!-- POSTPROCESSDATA: ch0537|<ITALICS>ypxfr</ITALICS> tool:shell scripts --></COMMAND> shell scripts reside in <FILENAME>/var/yp</FILENAME>. Three standard scripts are included with the NFS release: <INDEXTARGET ID="ch0538"><!-- POSTPROCESSDATA: ch0538|transfer scripts --><FILENAME>ypxfr_1phr</FILENAME>,<FILENAME>&space;ypxfr_1pd</FILENAME>, and<FILENAME>&space;ypxfr_2pd</FILENAME>. These scripts transfer specified maps once per hour, once per day, and twice per day, respectively. If the rates of change are inappropriate for your environment, you can modify the root <FILENAME>crontab</FILENAME> to suit your needs. </PARAGRAPH>
<PARAGRAPH>Also, you should alter the <FILENAME>crontab</FILENAME> entries so that the exact time of the <COMMAND>ypxfr</COMMAND> shell executions varies from one server to another to prevent the transfers from slowing down the master server, the network, or both. </PARAGRAPH>
<PARAGRAPH>Typically, changes to the <COMMAND>ypxfr</COMMAND> shell scripts are required in these cases:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>to reflect required map update schedules for your site</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>to add nonstandard maps </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>if you want to transfer a map from a server other than the master (use <COMMAND>ypxfr</COMMAND>'s <BOLD>&ndash;h</BOLD> option)</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>For more information on how to use <FILENAME>crontab</FILENAME>, see the <REFPAGE>crontab(1)</REFPAGE> reference page.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Interactive Map Propagation</TITLE><PARAGRAPH>The next three sections describe three methods of manually propagating NIS maps.</PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Using ypmake<COMMAND><INDEXTARGET ID="ch0539"><!-- POSTPROCESSDATA: ch0539|<ITALICS>ypmake</ITALICS> tool:and map propagation --></COMMAND></TITLE><PARAGRAPH>NIS maps on the master server can be manually propagated using the ypmake command. This command looks at the <FILENAME>/var/yp/mdbm_parse</FILENAME> and/or <FILENAME>/var/yp/local.make.script</FILENAME> to determine which maps to make. The make script calls <COMMAND>makemdbm<INDEXTARGET ID="ch0540"><!-- POSTPROCESSDATA: ch0540|<ITALICS>makedbm</ITALICS> tool:and map propagation --></COMMAND>, which updates the maps and calls <COMMAND>yppush<INDEXTARGET ID="ch0541"><!-- POSTPROCESSDATA: ch0541|<ITALICS>yppush</ITALICS> tool:and map propagation --></COMMAND>. <COMMAND>yppush</COMMAND> reads the <ITALICS>ypservers<INDEXTARGET ID="ch0542"><!-- POSTPROCESSDATA: ch0542|<ITALICS>ypservers</ITALICS> map --></ITALICS> map to determine which slave servers to contact, then it proceeds to contact <COMMAND>ypserv<INDEXTARGET ID="ch0543"><!-- POSTPROCESSDATA: ch0543|<ITALICS>ypserv</ITALICS> daemon:and the make script --></COMMAND> on the selected slave servers and requests <COMMAND>ypxfr<INDEXTARGET ID="ch0544"><!-- POSTPROCESSDATA: ch0544|<ITALICS>ypxfr</ITALICS> tool:and map propagation --></COMMAND> service. The slave server can now transfer the maps with <COMMAND>ypxfr</COMMAND>.</PARAGRAPH>
<PARAGRAPH>Use <INDEXTARGET ID="ch0545"><!-- POSTPROCESSDATA: ch0545|<ITALICS>ypmake</ITALICS> tool:usage examples --><COMMAND>ypmake</COMMAND> to update and propagate maps throughout your domain when you want the change to take place immediately and don't want to wait for <COMMAND>cron</COMMAND>. These are some usage examples for <COMMAND>ypmake</COMMAND>:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>To update all out-of-date maps, enter</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypmake</USERINPUT>
</CODE>
</BULLET>
<BULLET><PARAGRAPH>To update and propagate an out-of-date <ITALICS>hosts.byname</ITALICS> and <ITALICS>hosts.byaddr</ITALICS> map, enter</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypmake hosts</USERINPUT>
</CODE>
</BULLET>
<BULLET><PARAGRAPH>To force the creation and propagation of a new <ITALICS>passwd.byname</ITALICS> and <ITALICS>passwd.byuid</ITALICS> map, out of date or not, enter</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypmake -f passwd</USERINPUT>
</CODE>
</BULLET>
<BULLET><PARAGRAPH>To rebuild all of the maps, but not push them to other servers, enter</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypmake -f -n</USERINPUT>
</CODE>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The <COMMAND>ypmake</COMMAND> program is also automatically called for in root's <FILENAME>crontab</FILENAME>, <FILENAME>/var/spool/cron/crontabs/root<INDEXTARGET ID="ch0546"><!-- POSTPROCESSDATA: ch0546|<ITALICS>/var/spool/cron/crontabs/root</ITALICS> file --></FILENAME>. The entry in <FILENAME>crontab</FILENAME> tests whether the system is configured to run NIS and whether it is configured as the master. If the test succeeds, <COMMAND>cron</COMMAND> periodically executes the <COMMAND>ypmake</COMMAND> command to update and propagate maps to the appropriate slave servers. The <FILENAME>crontab</FILENAME> entry looks similar to the following. Note that each entry in the <FILENAME>crontab</FILENAME> file must be seen as one line. For documentation purposes, line wraps are indicated with a backslash (\). </PARAGRAPH>
<CODE>
# If this machine is a NIS master, ypmake will rotate the 
# log file and ensure that the databases are pushed out with
# some regularity.
#
1,16,31,46 *    *       *       *       if /etc/chkconfig \
ypmaster &amp;&amp; /etc/chkconfig yp &amp;&amp; \
test -x /var/yp/ypmake; then \
/var/yp/ypmake; fi
</CODE>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Using ypxfr<COMMAND><INDEXTARGET ID="ch0547"><!-- POSTPROCESSDATA: ch0547|<ITALICS>ypxfr</ITALICS> tool:and map propagation --></COMMAND></TITLE><PARAGRAPH>You can run <COMMAND>ypxfr</COMMAND> as a command on slave servers to transfer a specified map from the master or other stable server to the requesting slave server. Typically, you run <COMMAND>ypxfr</COMMAND> only in exceptional situations. For example, <COMMAND>ypxfr</COMMAND> is used when setting up a temporary NIS server to create a test environment, or when an NIS slave server has been out of service and must quickly be made consistent with the other servers. </PARAGRAPH>
<PARAGRAPH><COMMAND>ypxfr</COMMAND>, as a command, has options that force map transfer and specify alternate domains and servers from which to obtain the map. Below are examples of <INDEXTARGET ID="ch0548"><!-- POSTPROCESSDATA: ch0548|<ITALICS>ypxfr</ITALICS> tool:usage examples --><COMMAND>ypxfr</COMMAND> command usage:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>To transfer the <ITALICS>hosts.byaddr</ITALICS> map from the master server for the map, enter</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypxfr hosts</USERINPUT>
</CODE>
</BULLET>
<BULLET><PARAGRAPH>To force the transfer of the <ITALICS>passwd.byname</ITALICS> map from the slave server <ITALICS>purple</ITALICS> within the domain <ITALICS>colors</ITALICS>, enter</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypxfr -f -h purple -d colors</USERINPUT>
</CODE>
</BULLET>
</BULLETLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>Using yppush<INDEXTARGET ID="ch0549"><!-- POSTPROCESSDATA: ch0549|<ITALICS>yppush</ITALICS> tool:and map propagation --></TITLE><PARAGRAPH>While <COMMAND>yppush</COMMAND> is usually called by <COMMAND>ypmake</COMMAND>, it can also be run manually. You must run <COMMAND>yppush</COMMAND> on the NIS master server. The syntax for using <COMMAND>yppush<INDEXTARGET ID="ch0550"><!-- POSTPROCESSDATA: ch0550|<ITALICS>yppush</ITALICS> tool:usage examples --></COMMAND> is explained below:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>To force a copy of the map <ITALICS>myworld</ITALICS> with verbose messages, enter:</PARAGRAPH>
<CODE>
# <USERINPUT>yppush -v myworld</USERINPUT>
</CODE>
</BULLET>
<BULLET><PARAGRAPH>To force a copy of the map <ITALICS>yourmap</ITALICS> in the domain <ITALICS>yourworld</ITALICS>, enter</PARAGRAPH>
<CODE>
# <USERINPUT>yppush -d yourworld yourmap</USERINPUT>
</CODE>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Use <COMMAND>yppush</COMMAND> to force a copy of an updated version of a specified map from the master server to the slave servers. It can be used to move an infrequently changed, nonstandard map from the master server to slave servers. </PARAGRAPH>
<PARAGRAPH>In any of the cases mentioned above, you can capture <INDEXTARGET ID="ch0551"><!-- POSTPROCESSDATA: ch0551|logging: map transfers --><COMMAND>ypxfr</COMMAND>'s transfer attempts and the results in a log file. If <INDEXTARGET ID="ch0552"><!-- POSTPROCESSDATA: ch0552|<ITALICS>ypxfr.log</ITALICS> log file --><FILENAME>/var/yp/ypxfr.log<INDEXTARGET ID="ch0553"><!-- POSTPROCESSDATA: ch0553|<ITALICS>/var/yp/ypxfr.log</ITALICS> log file --></FILENAME> exists, <COMMAND>ypxfr</COMMAND> appends results to it. No attempt is made to limit the log file; you are in charge of that. To turn off logging, remove the log file. In addition, the file <INDEXTARGET ID="ch0554"><!-- POSTPROCESSDATA: ch0554|logging: <ITALICS>ypmake</ITALICS> functions --><FILENAME>/var/yp/ypmake.log<INDEXTARGET ID="ch0555"><!-- POSTPROCESSDATA: ch0555|<ITALICS>/var/yp/ypmake.log</ITALICS> log file --><INDEXTARGET ID="ch0556"><!-- POSTPROCESSDATA: ch0556|<ITALICS>ypmake.log</ITALICS> log file --></FILENAME>&space;records <COMMAND>ypmake</COMMAND> transactions. This file can also be useful for troubleshooting propagation problems.</PARAGRAPH>
</SECTION3>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="29608">Adding an NIS Slave Server<INDEXTARGET ID="ch0557"><!-- POSTPROCESSDATA: ch0557|slave server:adding --></TITLE><PARAGRAPH>To add a new NIS slave server, you must first modify an NIS server map on the NIS master server. If the new server has not been an NIS slave server before, you must add the new server's name to the map <ITALICS>ypservers<INDEXTARGET ID="ch0558"><!-- POSTPROCESSDATA: ch0558|<ITALICS>ypservers</ITALICS> map --><INDEXTARGET ID="ch0559"><!-- POSTPROCESSDATA: ch0559|<ITALICS>ypservers</ITALICS> map --></ITALICS> in the default domain. </PARAGRAPH>
<PARAGRAPH>This procedure explains how to add a new server to an NIS configuration:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>On the master server, change to the <FILENAME>/var/yp</FILENAME> directory:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /var/yp</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Create a new <ITALICS>hosts</ITALICS> map, if needed.</PARAGRAPH>
<PARAGRAPH>The new server's host name and address must be in the <ITALICS>hosts</ITALICS> map. If the NIS slave server you are adding is not included in the <ITALICS>hosts</ITALICS> map, edit <FILENAME>/etc/hosts</FILENAME> and save your changes. Then, create a new <ITALICS>hosts</ITALICS> map:</PARAGRAPH>
<CODE>
# <USERINPUT>vi /etc/hosts</USERINPUT>
</CODE>
<PARAGRAPH>Enter and save your changes:</PARAGRAPH>
<CODE>
# <USERINPUT>./ypmake hosts</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Edit the <FILENAME>/var/ns/domains/domainname/ypservers</FILENAME> file and add the new server's host name:</PARAGRAPH>
<CODE>
# <USERINPUT>vi ypservers</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Propagate the map with <COMMAND>ypmake</COMMAND>:</PARAGRAPH>
<CODE>
# <USERINPUT>./ypmake ypservers</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Transfer the database from the master server.</PARAGRAPH>
<PARAGRAPH>Remotely log in to the new NIS slave server. Use <COMMAND>ypinit</COMMAND> to transfer the database from the NIS master server to the new slave server:</PARAGRAPH>
<CODE>
# <USERINPUT>/var/yp/ypinit -s </USERINPUT><VARIABLE>mastername</VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Perform the steps described in <XREF IDREF="19138" TYPE="TITLE">&ldquo;Building the Duplicate Maps&rdquo;</XREF>. The new slave server is ready for service after you build the duplicate maps.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="54304">Changing the Master Server<INDEXTARGET ID="ch0560"><!-- POSTPROCESSDATA: ch0560|master server:changing --></TITLE><PARAGRAPH>To switch the master server to a different system, you must rebuild all maps to reflect the name of the new master server and distribute the new maps to all slave servers.</PARAGRAPH>
<PARAGRAPH>To change the master server, perform these steps:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Set up the system that is to be the new master server as if it is to be a slave server. See <XREF IDREF="31646" TYPE="TITLE">&ldquo;Setting Up NIS Slave Servers&rdquo;</XREF> and follow the directions in the sections <XREF IDREF="32399" TYPE="TITLE">&ldquo;Setting the Slave Server's Domain Name,&rdquo;</XREF>&space;<XREF IDREF="95257" TYPE="TITLE">&ldquo;Binding to Another NIS Server,&rdquo;</XREF> and <XREF IDREF="19138" TYPE="TITLE">&ldquo;Building the Duplicate Maps.&rdquo;</XREF></PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Copy the map source files from the old master server to the new master server. The source files are listed in <XREF IDREF="38020" TYPE="TABLE">Table&nbsp;3-1</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Rebuild all of the maps on the new master server, but don't push them to other servers:</PARAGRAPH>
<CODE>
newmaster# <USERINPUT>/var/yp/ypmake -f -n</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Use <COMMAND>ypxfr</COMMAND> on the old master server to transfer each of the new maps from the new master server to the old master server. Give this command for each of the maps listed in <XREF IDREF="20186" TYPE="TABLE">Table&nbsp;2-2</XREF>:</PARAGRAPH>
<CODE>
oldmaster# ypxfr -h <VARIABLE>newmaster</VARIABLE> -f <VARIABLE>mapname</VARIABLE>
</CODE>
<PARAGRAPH><VARIABLE>newmaster</VARIABLE> is the host name of the new master server and <VARIABLE>mapname</VARIABLE> is a map name from <XREF IDREF="20186" TYPE="TABLE">Table&nbsp;2-2</XREF>. <COMMAND>ypxfr</COMMAND> is used for this step rather than <COMMAND>yppush</COMMAND> because of a security feature of <COMMAND>yppush</COMMAND>. When a map is pushed to a server, that server consults its own copy of the map to verify that the map is coming from the master server. Since the old master server still believes that it is the master server, it won't accept maps from the new master server.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>On the old master server, transfer copies of the new maps to all slave servers by giving this command for each of the maps listed in <XREF IDREF="20186" TYPE="TABLE">Table&nbsp;2-2</XREF>:</PARAGRAPH>
<CODE>
oldmaster# yppush <VARIABLE>mapname</VARIABLE>
</CODE>
<PARAGRAPH>Maps are pushed from the old master server to the slave servers because the slave servers' maps still contain the old master server. The new maps contain the name of the new master server.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="40187">Using Secure ypset <INDEXTARGET ID="ch0561"><!-- POSTPROCESSDATA: ch0561|<ITALICS>ypset</ITALICS> tool:secure mode --></TITLE><PARAGRAPH>The <INDEXTARGET ID="ch0562"><!-- POSTPROCESSDATA: ch0562|<ITALICS>ypbind.options</ITALICS> file --><COMMAND>ypset</COMMAND> tool allows the root user on NIS clients to change the binding association for the client. By default, <FILENAME>ypset</FILENAME> is now an attribute, and to obtain the functionality equivalent to the previous<CMDLINEOPT>&space;ypserv</CMDLINEOPT> command the function is set in this manner: </PARAGRAPH>
<CODE>
(nis_security=true) 
</CODE>
<PARAGRAPH>To enable changing the binding association in the domain <VARIABLE>shapes</VARIABLE>, first verify the<VARIABLE>&space;domainname</VARIABLE>, then set <COMMAND>ypset</COMMAND> with these commands: </PARAGRAPH>
<CODE>
<USERINPUT># domainname</USERINPUT>
shapes
<USERINPUT># nsd -a (nis_security)</USERINPUT>
</CODE>
<PARAGRAPH>To enable changing the binding association at the server level, edit the server password file so that it reads:</PARAGRAPH>
<CODE>
passwd <USERINPUT>(nis_security)</USERINPUT>
</CODE>
<PARAGRAPH>To enable changing the binding association at the local level, edit the <FILENAME>/etc/nsswitch.conf</FILENAME> to include this line: </PARAGRAPH>
<CODE>
<USERINPUT>(nis_security=true)</USERINPUT>&space;
</CODE>
<PARAGRAPH>If you desire to mimic the previous behavior of <CMDLINEOPT>ypsetme</CMDLINEOPT>, replace </PARAGRAPH>
<CODE>
<USERINPUT>(nis_security=true)</USERINPUT>&space;
</CODE>
<PARAGRAPH>in the previous examples with either of the following: </PARAGRAPH>
<CODE>
(nis_security=false)
(nis_security=local) 
</CODE>
<PARAGRAPH>The result is equivalent to the previous <CMDLINEOPT>ypsetme</CMDLINEOPT>.</PARAGRAPH>
<PARAGRAPH>Previously the file <FILENAME>/etc/config/ypbind.options<INDEXTARGET ID="ch0563"><!-- POSTPROCESSDATA: ch0563|<ITALICS>/etc/config/ypbind.options</ITALICS> file --></FILENAME> contained the <INDEXTARGET ID="ch0564"><!-- POSTPROCESSDATA: ch0564|ypsetme option --><BOLD>&ndash;ypsetme</BOLD>&space;option that enabled <COMMAND>ypset</COMMAND>. Normally, the <BOLD>&ndash;ypsetme</BOLD>&space;option should be present when creating an NIS master because, if is not present, <COMMAND>ypmake</COMMAND> displays error messages when building an NIS master. In secure installation sites, however, the <BOLD>&ndash;ypsetme</BOLD> option should be removed.</PARAGRAPH>
<PARAGRAPH>The <COMMAND>ypset</COMMAND> tool was designed for debugging and not for casual use. As with any network tool that bases security on IP address checking, <COMMAND>ypset</COMMAND> can compromise security on networks where packets may be introduced to the network by nontrusted individuals. <XREFTARGET ID="31727"><INDEXTARGET ID="ch0565"><!-- POSTPROCESSDATA: ch0565|passwords:on NIS accounts --></PARAGRAPH>
</SECTION1>
</CHAPTER>

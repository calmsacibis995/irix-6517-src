<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="1"><TITLE><XREFTARGET ID="24464">Understanding NIS</TITLE><PARAGRAPH>This chapter contains a general description of the SGI implementation of the Sun Microsystems network information service NIS. It provides an overview of NIS, an explanation of the NIS client-server model, and an introduction to NIS domains and NIS maps.</PARAGRAPH>
<PARAGRAPH>This chapter contains these sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="29033" TYPE="TITLE">&ldquo;About NIS&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="40446" TYPE="TITLE">&ldquo;NIS Portability&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="18161" TYPE="TITLE">&ldquo;Client-Server Model&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="19442" TYPE="TITLE">&ldquo;Server Hierarchy&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="22930" TYPE="TITLE">&ldquo;NIS Maps&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="17973" TYPE="TITLE">&ldquo;NIS Domains&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="29033">About NIS<INDEXTARGET ID="ch011"><!-- POSTPROCESSDATA: ch011|NIS, defined --></TITLE><PARAGRAPH>NIS is a network lookup service that provides a centralized database of information about the network to systems participating in the service. The NIS database is fully replicated on selected systems and can be queried by participating systems on an as-needed basis. Maintenance of the database is performed on a central system.</PARAGRAPH>
<PARAGRAPH>The purpose of NIS is to make network administration more efficient by reducing the risk of error and the time required to perform redundant file management tasks. For example, maintaining the <FILENAME>/etc/hosts</FILENAME> database on a large network might require creating a script to automatically copy the <FILENAME>/etc/hosts</FILENAME> file from a central system to all systems on the network. It also requires setting up the appropriate access permissions on each system to enable this file transfer; this is a redundant and time-consuming process. By contrast, on networks using NIS, maintaining the <FILENAME>/etc/hosts</FILENAME> database requires modifying a single file, typically <FILENAME>/etc/hosts</FILENAME>, on a single system.</PARAGRAPH>
<PARAGRAPH>On many networks, a number of information sources are available to provide information to network applications. For this reason, most applications have a standard lookup rule for finding the information they need. Starting with IRIX 6.5, the default lookup order is specified in the<FILENAME>&space;/etc/nsswitch.conf</FILENAME> file. </PARAGRAPH>
<PARAGRAPH>NIS can service networks with approximately 1000 systems. Larger networks can be organized into multiple NIS service areas, or domains. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="40446">NIS Portability<INDEXTARGET ID="ch012"><!-- POSTPROCESSDATA: ch012|portability features --></TITLE><PARAGRAPH>NIS is an application layer service that can be used on any network using the Transmission Control Protocol or User Datagram Protocol for transport layer services. NIS also relies on<INDEXTARGET ID="ch013"><!-- POSTPROCESSDATA: ch013|protocols (NIS) --><INDEXTARGET ID="ch014"><!-- POSTPROCESSDATA: ch014|Transmission Control Protocol (TCP) --><INDEXTARGET ID="ch015"><!-- POSTPROCESSDATA: ch015|User Datagram Protocol --><ITALICS>&space;remote procedure call<INDEXTARGET ID="ch016"><!-- POSTPROCESSDATA: ch016|remote procedure call (RPC) --></ITALICS> (RPC) for session layer services and <INDEXTARGET ID="ch017"><!-- POSTPROCESSDATA: ch017|external data representation (XDR) --><ITALICS>external data representation</ITALICS> (XDR) for presentation layer services. Because the NIS application adheres to these standard network protocols, it is portable and works with a variety of vendors' platforms. <INDEXTARGET ID="ch018"><!-- POSTPROCESSDATA: ch018|external data representation (XDR) --></PARAGRAPH>
<PARAGRAPH>The network protocols TCP and UDP provide the services required to transport messages on the same system or between remote systems. TCP provides reliable, connection-oriented transport. UDP provides unreliable, connectionless transport. TCP and UDP are protocols that are widely accepted and used in the network environment, making them the logical choices for NIS and several other network applications.</PARAGRAPH>
<PARAGRAPH>RPC and XDR are services that bridge the gap between the transport layer services and the network application. They provide the functionality required to build distributed applications and resolve operating system and hardware architectural differences. </PARAGRAPH>
<PARAGRAPH>RPC provides a message passing scheme. It allows information to be passed between procedure calls that do not reside in the same address space. The address space can be located on the same system or it may reside on a remote system. In the NIS application, RPC enables client and server processes on local or remote systems to access the NIS database. NIS users are not aware that the procedure calls are occurring between two different systems.</PARAGRAPH>
<PARAGRAPH>XDR translates differences that can occur between machine architectures. It allows remote procedure calls and/or an application to interpret an RPC message independent of machine architecture. In the NIS application, XDR services allow systems from multiple vendors access to an NIS database located on any vendor's system. RPC and XDR are not exclusive to NIS. RPC and XDR are industry standards and are used in a variety of distributed network applications. </PARAGRAPH>
<PARAGRAPH><XREF IDREF="42635" TYPE="GRAPHIC">Figure&nbsp;1-1</XREF> illustrates the NIS software implementation in the context of the Open Systems Interconnect (OSI) model.<INDEXTARGET ID="ch019"><!-- POSTPROCESSDATA: ch019|Open Systems Interconnect (OSI) model --></PARAGRAPH>
<!-- RASTERCONVERT: ch01.cgm3 -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="ch01-3.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="1-1"><PREFIX>Figure 1-1 </PREFIX><XREFTARGET ID="42635">NIS Software Implementation</CAPTION>
</FIGURE>
</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="18161">Client-Server Model</TITLE><PARAGRAPH>An <ITALICS>NIS client<INDEXTARGET ID="ch0110"><!-- POSTPROCESSDATA: ch0110|client:defined --></ITALICS> is a process running on a system that requests data from an NIS database. An <ITALICS>NIS server<INDEXTARGET ID="ch0111"><!-- POSTPROCESSDATA: ch0111|server:defined --></ITALICS> is a process running on a system that provides data from the NIS database. The terms client and server designate both processes and systems: a system is considered a client when requesting NIS data, and it is considered a server when providing NIS data. A system can function as a client and a server simultaneously.<INDEXTARGET ID="ch0112"><!-- POSTPROCESSDATA: ch0112|server:<ITALICS>See also</ITALICS> master server <ITALICS>and</ITALICS> slave server. --></PARAGRAPH>
<PARAGRAPH>Sometimes client requests are handled by NIS servers running on the same system, and sometimes they are serviced by NIS servers running on a different system. If one NIS server system fails, client processes obtain NIS services from another. In this way, the NIS service remains available even when an NIS server system goes down.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="19442">Server Hierarchy</TITLE><PARAGRAPH>NIS servers, each of which contains a copy of the NIS database, are divided into two groups: master servers and slave servers. A <INDEXTARGET ID="ch0113"><!-- POSTPROCESSDATA: ch0113|server: hierarchy --><INDEXTARGET ID="ch0114"><!-- POSTPROCESSDATA: ch0114|master server:defined --><ITALICS>master server</ITALICS> is the system on which NIS databases are originally created and maintained. A <INDEXTARGET ID="ch0115"><!-- POSTPROCESSDATA: ch0115|slave server:defined --><ITALICS>slave server</ITALICS> is a system that holds a duplicate copy of the database. A server may be a master server with respect to one database and a slave server with respect to another.</PARAGRAPH>
<PARAGRAPH>The master server makes updated database information available to slave servers by a process known as <INDEXTARGET ID="ch0116"><!-- POSTPROCESSDATA: ch0116|map propagation:defined --><ITALICS>propagation</ITALICS>. Propagation ensures the consistency of database information between the master server and its slave servers. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="22930">NIS Maps</TITLE><PARAGRAPH>The NIS database is composed of a group of files known as <INDEXTARGET ID="ch0117"><!-- POSTPROCESSDATA: ch0117|maps:defined --><ITALICS>maps</ITALICS>. Maps are created with NIS tools that convert input files (usually standard ASCII files) to files in database record format (see the <INDEXTARGET ID="ch0118"><!-- POSTPROCESSDATA: ch0118|maps: <ITALICS>See also</ITALICS> individual map names. --><REFPAGE>mdbm(3B)</REFPAGE> reference page). Since data in <COMMAND>mdbm</COMMAND> format is faster to find than ASCII data, using <FILENAME>mdbm</FILENAME> files increases NIS performance.</PARAGRAPH>
<PARAGRAPH>Each NIS map has a map name that programs use to access it. Any program using an NIS map must recognize the format of the data it contains.</PARAGRAPH>
<PARAGRAPH>Maps are composed of <ITALICS>keys<INDEXTARGET ID="ch0119"><!-- POSTPROCESSDATA: ch0119|maps:keys and values in --></ITALICS> and <ITALICS>values</ITALICS>. A <ITALICS>key</ITALICS> is a particular field in the map that the client must specify whenever it queries the map; a <ITALICS>value</ITALICS> is an attribute of the key that is returned from the query. For example, in the map called <ITALICS>hosts.byname</ITALICS>, the keys are the names in individual systems, and the values are the <ITALICS>ip-address,hostname</ITALICS> lines, similar to those in <FILENAME>/etc/hosts</FILENAME><ITALICS>.</ITALICS></PARAGRAPH>
<PARAGRAPH>At <INDEXTARGET ID="ch0120"><!-- POSTPROCESSDATA: ch0120|maps:steady state of --><ITALICS>steady state</ITALICS>, maps throughout the network contain consistent information. In this state, a client query receives the same answer to the query, regardless of which server responds to it. This consistency of information allows multiple servers to operate on a network, increasing the availability and reliability of the NIS service.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="17973">NIS Domains</TITLE><PARAGRAPH>An NIS <INDEXTARGET ID="ch0121"><!-- POSTPROCESSDATA: ch0121|domains:defined --><ITALICS>domain</ITALICS> is a collection of systems using the same NIS database. To participate in the NIS service, a system must belong to an NIS domain. </PARAGRAPH>
<PARAGRAPH><XREF IDREF="15730" TYPE="GRAPHIC">Figure&nbsp;1-2</XREF> shows the basic layout for the systems in Building 1 and a domain called <ITALICS>eng</ITALICS>.</PARAGRAPH>
<PARAGRAPH><FIGURE>&space;<GRAPHIC FILE="fig1-2.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="1-2"><PREFIX>Figure 1-2 </PREFIX><XREFTARGET ID="15730">Basic NIS Domain</CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH>The domain <ITALICS>eng</ITALICS> consists of the master server, one slave server, and three clients. One system on the network does not participate in NIS at this time but may be included in the domain at a later date.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>NIS Domains and Server Directories</TITLE><PARAGRAPH>Starting with IRIX 6.5, the NIS databases are contained in subdirectories of the NIS home directory <INDEXTARGET ID="ch0122"><!-- POSTPROCESSDATA: ch0122|home directory structure --><FILENAME>/var/ns/domains</FILENAME>. These subdirectories are named for the domain whose database they contain. For example, in <INDEXTARGET ID="ch0123"><!-- POSTPROCESSDATA: ch0123|maps:directory structure of --><XREF IDREF="15730" TYPE="GRAPHIC">Figure&nbsp;1-2</XREF>, both servers contain the database for the <ITALICS>eng</ITALICS> domain in a subdirectory named <FILENAME>/var/ns/domains/eng</FILENAME>. </PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>NIS and Internet Domains<INDEXTARGET ID="ch0124"><!-- POSTPROCESSDATA: ch0124|domains:and Internet domains --></TITLE><PARAGRAPH>The Internet is a registered organization of wide area networks originally funded by DARPA (U.S. Defense Advanced Research Projects Agency). It is organized into domains, machines grouped into networks that are given names to identify them clearly. In the Internet naming scheme, commercial businesses in the United States are given names that end in .com (sgi.com is one such), educational institutions use .edu, and governmental organizations use domain names ending in .gov.</PARAGRAPH>
<PARAGRAPH>Domains within a organization are organized on the same grouping principle. For example, in a business with the Internet domain name of <FILENAME>dender.com</FILENAME>, two separate NIS domains might be finance and engineering, which would use the domain names .finance and .eng<FILENAME>,</FILENAME> respectively. If you subdivided dender.com this way, the NIS domain name of engineering would be eng.dender.com, and the NIS domain name of finance would be finance.dender.com. </PARAGRAPH>
<PARAGRAPH>Often the Internet domain name is used as the basis for the NIS domain, a useful practise, but not required. You can use some other NIS domain name, but you should understand fully about domain names and their interaction with other aspects of name service before doing so. For further details on domains, refer to <DOCTITLE>IRIX Admin: Networking and Mail</DOCTITLE>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Multiple NIS Domains<INDEXTARGET ID="ch0125"><!-- POSTPROCESSDATA: ch0125|domains:multiple:discussion of  --></TITLE><PARAGRAPH>Complex networks that require large NIS databases, approximately 1000 systems or more, should be evaluated for multiple NIS domains. Factors that should be considered when determining whether to have multiple domains are network complexity and server availability. In addition, on networks where dynamic conditions make database synchronization difficult, multiple domains can make NIS more reliable and easier to maintain. NIS domains are not constrained by the topology of the network. Systems in the same NIS domain are not necessarily on the same local area network. For administrative or organizational reasons, it may make sense to configure large networks as separate NIS domains such as eng and finance.<INDEXTARGET ID="ch0126"><!-- POSTPROCESSDATA: ch0126|domains:size limitations of --></PARAGRAPH>
<PARAGRAPH><XREF IDREF="26428" TYPE="GRAPHIC">Figure&nbsp;1-3</XREF> illustrates the organization of Building 1 and Building 2 local area networks into two domains, eng and finance.</PARAGRAPH>
<PARAGRAPH><FIGURE><GRAPHIC FILE="fig1-3.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="1-3"><PREFIX>Figure 1-3 </PREFIX><XREFTARGET ID="26428">Multiple NIS Domains</CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH>The master and slave server for the eng domain both contain a database of information for the eng domain in <FILENAME>/var/ns/domains/eng</FILENAME>, and the master and slave server for the finance domain both contain a copy of the database for the finance domain in <FILENAME>/var/ns/domains</FILENAME><ITALICS>/finance</ITALICS>. Notice that one system in the Building 1 local area network belongs to the finance domain and is the master server for the finance domain. (<XREF IDREF="27032" TYPE="TITLE">Chapter&nbsp;2, &ldquo;Preparing to Manage NIS,&rdquo;</XREF> contains detailed information on multiple NIS domains.)</PARAGRAPH>
</SECTION2>
</SECTION1>
</CHAPTER>

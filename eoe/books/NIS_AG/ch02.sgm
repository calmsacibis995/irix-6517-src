<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="2"><TITLE><XREFTARGET ID="27032">Preparing to Manage NIS</TITLE><PARAGRAPH>To be prepared for managing NIS, you should understand NIS software elements and the tools available for controlling its operation. This chapter contains the prerequisite information. It identifies NIS client and server daemons and their interactions, and describes a special daemon interaction called binding. It also explains how the NIS database is created and maintained, and how local client files and global files are used when NIS is in effect. Finally, this chapter provides a quick reference guide to NIS software and NIS management tools.</PARAGRAPH>
<PARAGRAPH>This chapter contains these sections:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="32001" TYPE="TITLE">&ldquo;Daemons&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="18605" TYPE="TITLE">&ldquo;Binding&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="16668" TYPE="TITLE">&ldquo;NIS Database&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="18155" TYPE="TITLE">&ldquo;NIS and Other Network Files&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="41949" TYPE="TITLE">&ldquo;NIS Software Quick Reference Guide&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="32001">Daemons<INDEXTARGET ID="ch021"><!-- POSTPROCESSDATA: ch021|daemons:required for NIS --></TITLE><PARAGRAPH>Which NIS daemons are running on a system depends on the system's function in the NIS environment: clients, master servers, and slave servers each run a particular set of daemons. </PARAGRAPH>
<PARAGRAPH><XREF IDREF="33349" TYPE="TABLE">Table&nbsp;2-1</XREF> lists the daemons required for each type of system for NIS to function correctly.</PARAGRAPH>
<TABLE COLUMNS="4"><CAPTION LBL="2-1"><PREFIX>Table 2-1 </PREFIX><XREFTARGET ID="33349">NIS Daemons by System Type</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="56"><PARAGRAPH>Daemon</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="44"><PARAGRAPH>Client</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="44"><PARAGRAPH>Slave</PARAGRAPH>
</CELL>
<CELL LEFT="165" WIDTH="44"><PARAGRAPH>Master</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="56"><PARAGRAPH><COMMAND>nsd</COMMAND>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="44"><PARAGRAPH>&space;   X</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="44"><PARAGRAPH>&space;   X</PARAGRAPH>
</CELL>
<CELL LEFT="165" WIDTH="44"><PARAGRAPH>&space;    X</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="56"><PARAGRAPH><COMMAND>rpc.passwd</COMMAND>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="44"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="44"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="165" WIDTH="44"><PARAGRAPH>&space;    X</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>The binder daemon, <COMMAND>nsd</COMMAND>, runs on all NIS clients. In this instance, the daemon is responsible for remembering information necessary for communicating with the NIS server process. See the <INDEXTARGET ID="ch022"><!-- POSTPROCESSDATA: ch022|<ITALICS>ypbind</ITALICS> daemon:primary purpose of --><REFPAGE>nsd(1M)</REFPAGE> reference page for more information.</PARAGRAPH>
<PARAGRAPH>The<COMMAND>&space;nsd </COMMAND>daemon also acts as the server daemon and runs on all NIS servers. It acts as the database server and is responsible for answering client inquiries, and managing database updates. Most NIS servers are also NIS clients; they use the NIS database information. </PARAGRAPH>
<PARAGRAPH>On the NIS master server the server process daemon, <COMMAND>nsd</COMMAND>, runs to answer client inquiries and to solicit information from the NIS database. The master server also runs a second daemon, <INDEXTARGET ID="ch023"><!-- POSTPROCESSDATA: ch023|<ITALICS>rpc.passwd</ITALICS> daemon:purpose of --><FILENAME>/usr/etc/rpc.passwd</FILENAME>, which allows NIS users to remotely modify their NIS password with<COMMAND>&space;yppasswd<INDEXTARGET ID="ch024"><!-- POSTPROCESSDATA: ch024|<ITALICS>yppasswd</ITALICS> tool:and <ITALICS>rpc.passwd</ITALICS> daemon --></COMMAND> and to modify some other password file fields with<COMMAND>&space;ypchpass.<INDEXTARGET ID="ch025"><!-- POSTPROCESSDATA: ch025|<ITALICS>ypchpass</ITALICS> tool:and NIS daemons --></COMMAND> For more information see the<REFPAGE>&space;yppasswd(1)</REFPAGE> and<REFPAGE>&space;ypchpass</REFPAGE><REFPAGE>(</REFPAGE><REFPAGE>1)</REFPAGE> reference pages.</PARAGRAPH>
<PARAGRAPH>On IRIX, NIS daemons are started by the master network script, <FILENAME>/etc/init.d/network<INDEXTARGET ID="ch026"><!-- POSTPROCESSDATA: ch026|<ITALICS>/etc/init.d/network</ITALICS> file --></FILENAME>, if the NIS daemon flags are set on (flags can be set with the<COMMAND>&space;chkconfig<INDEXTARGET ID="ch027"><!-- POSTPROCESSDATA: ch027|<ITALICS>chkconfig</ITALICS> utility --></COMMAND> command). There are two <COMMAND>chkconfig<INDEXTARGET ID="ch028"><!-- POSTPROCESSDATA: ch028|configuration flags. <ITALICS>See </ITALICS><ITALICS>chkconfig</ITALICS> utility. --></COMMAND> flags for NIS: <ITALICS>nsd</ITALICS>, and <ITALICS>ypmaster</ITALICS> (see <XREF IDREF="19345" TYPE="TITLE">Chapter&nbsp;4, &ldquo;Setting Up and Testing NIS,&rdquo;</XREF> for more details).</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="18605">Binding</TITLE><PARAGRAPH>In binding, a process remembers the address at which the <INDEXTARGET ID="ch029"><!-- POSTPROCESSDATA: ch029|binding --><COMMAND>nsd </COMMAND>server process is listening for requests. In the NIS environment, when an application on a client needs information that is normally derived from certain local files, the application solicits the information from the NIS database on a selected NIS server. The relationship between the binder daemon, and the server daemon, determines whether or not an NIS connection is bound or unbound. A brief summary of the binding process is given below.</PARAGRAPH>
<PARAGRAPH>To obtain the IP address and port number for the NIS server process, <COMMAND>nsd </COMMAND>broadcasts for any NIS server within its domain. The first NIS server process to respond with its IP address and port number, whether local or remote, is the process that is used to service the request. The IP address for the physical NIS server and the port number for the NIS server process are remembered by the <COMMAND>nsd </COMMAND>process and used to obtain NIS database information. </PARAGRAPH>
<PARAGRAPH><XREF IDREF="38377" TYPE="GRAPHIC">Figure&nbsp;2-1</XREF> illustrates the binding process initiated for an <COMMAND>ls</COMMAND> command. Before the <COMMAND>ls</COMMAND> command can list the contents of a directory, it needs to translate the file's user ID into a user's name. <COMMAND>ls</COMMAND> uses the library routine <COMMAND>getpwuid</COMMAND>, which accesses the local <FILENAME>/etc/passwd</FILENAME> file and the NIS password file as appropriate. In an NIS environment, this entails accessing the password map in the NIS database. Note that the general process is the same whether binding occurs on the local system or between remote systems. For more information, see the<REFPAGE>&space;ls(1) </REFPAGE>and <REFPAGE>getpwuid(1)</REFPAGE> reference pages.</PARAGRAPH>
<!-- RASTERCONVERT: ch02.cgm -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="ch02-1.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="2-1"><PREFIX>Figure 2-1 </PREFIX><XREFTARGET ID="38377">NIS Binding Process</CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH>When a client boots, <COMMAND>nsd </COMMAND>broadcasts or multicasts, by default, to the portmap port number for the NIS service. The portmapper forwards the packet to the NIS server, if there is one running on the machine, which then determines whether or not it services the domain requested. Similarly, <COMMAND>nsd </COMMAND>broadcasts asking for a new NIS server if the old server fails to respond. An <FILENAME>nsd </FILENAME>daemon runs on both the client and the server. The <COMMAND>ypwhich<INDEXTARGET ID="ch0210"><!-- POSTPROCESSDATA: ch0210|<ITALICS>ypwhich</ITALICS> tool:and binding --></COMMAND>(1) command gives the name of the server to which <COMMAND>nsd </COMMAND>is currently bound.</PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="16668">NIS Database</TITLE><PARAGRAPH>The NIS database is a collection of files in<INDEXTARGET ID="ch0211"><!-- POSTPROCESSDATA: ch0211|database (NIS) --><FILENAME>&space;mdbm<INDEXTARGET ID="ch0212"><!-- POSTPROCESSDATA: ch0212|<ITALICS>dbm</ITALICS> files --></FILENAME> format. To create the database, the NIS tool<COMMAND>&space;makemdbm<INDEXTARGET ID="ch0213"><!-- POSTPROCESSDATA: ch0213|<ITALICS>makedbm</ITALICS> tool:purpose of --></COMMAND> converts input files (usually ASCII) to output files. The output files have <FILENAME>.m</FILENAME> extensions. Each is a map. For example, the <ITALICS>aliases</ITALICS> map is composed of the file <FILENAME>aliases.m</FILENAME>. </PARAGRAPH>
<PARAGRAPH>A typical listing of NIS database files looks like this:</PARAGRAPH>
<CODE>

bootparams.m             mac.byname.m          passwd.byuid.m
capability.byname.m      mac.byvalue.m         protocols.byname.m
clearance.byname.m       mail.aliases.m        protocols.bynumber.m
ethers.byaddr.m          mail.byaddr.m         rpc.byname.m
ethers.byname.m          netgroup.byhost.m     rpc.bynumber.m
group.bygid.m            netgroup.byuser.m
group.byname.m           netid.byname.m
group.bymember.m         networks.byaddr.m
hosts.byaddr.m           networks.byname.m
hosts.byname.m           passwd.byname.m
</CODE>
<SECTION2 LBL="" HELPID = ""><TITLE>Standard and Nonstandard Maps</TITLE><PARAGRAPH>The NIS application is capable of making and updating a particular set of maps automatically. These are known as <ITALICS>standard maps<INDEXTARGET ID="ch0214"><!-- POSTPROCESSDATA: ch0214|maps:standard:defined --><INDEXTARGET ID="ch0215"><!-- POSTPROCESSDATA: ch0215|standard maps. <ITALICS>See </ITALICS>maps, standard. --></ITALICS> and are derived from regular ASCII files. The maps included in a standard set vary with each NIS release. <ITALICS>Nonstandard maps<INDEXTARGET ID="ch0216"><!-- POSTPROCESSDATA: ch0216|maps:nonstandard:defined --><INDEXTARGET ID="ch0217"><!-- POSTPROCESSDATA: ch0217|nonstandard maps. <ITALICS>See</ITALICS> maps, nonstandard. --></ITALICS> are maps that have no ASCII form or maps that are created for vendor- or site-specific applications; NIS does not automatically know how to make or update nonstandard maps. NIS can serve any number of standard (default) and nonstandard maps.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="20186" TYPE="TABLE">Table&nbsp;2-2</XREF> shows the standard NIS maps.<INDEXTARGET ID="ch0218"><!-- POSTPROCESSDATA: ch0218|maps:standard: list of --></PARAGRAPH>
<TABLE COLUMNS="4"><CAPTION LBL="2-2"><PREFIX>Table 2-2 </PREFIX>&space;<EMPHASIS>(continued)        </EMPHASIS>Standard Set of NIS Maps<XREFTARGET ID="20186"></CAPTION>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>bootparams</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH>&space;<FILENAME>hosts.byadd</FILENAME>r </PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH><FILENAME>netgroup</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH><FILENAME>rpc.byname</FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>capability.byname</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH><FILENAME>hosts.byname</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH><FILENAME>netid.byname</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH><FILENAME>rpc.bynumber</FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>clearance.byname</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH><FILENAME>mac.byname</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH><FILENAME>networks.byaddr</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH><FILENAME>services.byname</FILENAME>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>ethers.byaddr</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH><FILENAME>mac.byvalue</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH><FILENAME>networks.byname</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH><FILENAME>services</FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>ethers.byname</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH>&space;<FILENAME>mail.aliases</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH><FILENAME>passwd.byname</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH><FILENAME>ypservers</FILENAME>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>group.bygid</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH><FILENAME>mail.byaddr</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH><FILENAME>passwd.byuid</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>group.byname</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH><FILENAME>netgroup.byhost</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH><FILENAME>protocols.byname</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="83"><PARAGRAPH><FILENAME>group.bymember</FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="90" WIDTH="83"><PARAGRAPH><FILENAME>netgroup.byuser</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="180" WIDTH="83"><PARAGRAPH>&space;<FILENAME>protocols.bynumber</FILENAME>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="270" WIDTH="83"><PARAGRAPH></PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>In most cases, the format of the data in NIS default maps is identical to the format within the ASCII files.</PARAGRAPH>
<PARAGRAPH>Some maps have default nicknames to make administration easier. The <INDEXTARGET ID="ch0219"><!-- POSTPROCESSDATA: ch0219|maps:nicknames for --><COMMAND>ypcat</COMMAND>(1) command, a general NIS database print program, with the <INDEXTARGET ID="ch0220"><!-- POSTPROCESSDATA: ch0220|<ITALICS>ypcat</ITALICS> tool:printing map nicknames with --><BOLD>&ndash;x</BOLD> option prints a list of default map nicknames and their corresponding full names. <XREF IDREF="41365" TYPE="TABLE">Table&nbsp;2-3</XREF> shows the list of default nicknames and full names for maps supplied in the NIS release.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="2-3"><PREFIX>Table 2-3 </PREFIX>Default Nicknames for Maps<XREFTARGET ID="41365"></CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="90"><PARAGRAPH>Map Nickname</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH>Map Full Name</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>aliases</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>mail.aliases</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>ethers</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>ethers.byname</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>group</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>group.byname</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>hosts</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>hosts.byaddr</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>networks</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>networks.byaddr</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>passwd</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>passwd.byname</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>protocols</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>protocols.bynumber</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>rpc</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>rpc.bynumber</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="90"><PARAGRAPH><ITALICS>services</ITALICS>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="95" WIDTH="90"><PARAGRAPH><ITALICS>services.byname</ITALICS>&space;</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>For example, the command <COMMAND>ypcat&nbsp;hosts</COMMAND> is translated into <COMMAND>ypcat&nbsp;hosts.byaddr </COMMAND>because there is no map called <ITALICS>hosts</ITALICS>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Map Propagation</TITLE><PARAGRAPH>Propagating an updated database from master server to slave servers ensures database consistency between all NIS clients. Databases can be updated in two ways: periodically with <INDEXTARGET ID="ch0221"><!-- POSTPROCESSDATA: ch0221|map propagation:methods --><INDEXTARGET ID="ch0222"><!-- POSTPROCESSDATA: ch0222|propagation. <ITALICS>See</ITALICS> map propagation. --><COMMAND>crontab<INDEXTARGET ID="ch0223"><!-- POSTPROCESSDATA: ch0223|<ITALICS>crontab</ITALICS> tool:for database updates --></COMMAND> and interactively from the command line (see <XREF IDREF="10396" TYPE="TITLE">Chapter&nbsp;5, &ldquo;Maintaining NIS,&rdquo;</XREF> for details on map propagation methods).</PARAGRAPH>
<PARAGRAPH>The propagation process varies depending on the propagation method. For example, when a map is updated and propagated using <INDEXTARGET ID="ch0224"><!-- POSTPROCESSDATA: ch0224|<ITALICS>local.make.script</ITALICS> file --><COMMAND>ypmake</COMMAND>, <INDEXTARGET ID="ch0225"><!-- POSTPROCESSDATA: ch0225|<ITALICS>ypmake</ITALICS> tool:and map propagation --><COMMAND>ypmake</COMMAND> looks at <FILENAME>mdbm_parse </FILENAME>to determine which maps to make. <COMMAND>mdbm_parse&space;<INDEXTARGET ID="ch0226"><!-- POSTPROCESSDATA: ch0226|<ITALICS>makedbm</ITALICS> tool:and map propagation --></COMMAND>updates the maps and calls <COMMAND>yppush<INDEXTARGET ID="ch0227"><!-- POSTPROCESSDATA: ch0227|<ITALICS>yppush</ITALICS> tool:and map propagation --></COMMAND>.<COMMAND>&space;yppush</COMMAND> reads the <ITALICS>ypservers<INDEXTARGET ID="ch0228"><!-- POSTPROCESSDATA: ch0228|<ITALICS>ypservers</ITALICS> map --></ITALICS> map to determine which slave servers to contact; <COMMAND>yppush</COMMAND> contacts <COMMAND>nsd</COMMAND> on the selected slave servers and requests <COMMAND>ypxfr<INDEXTARGET ID="ch0229"><!-- POSTPROCESSDATA: ch0229|<ITALICS>ypxfr</ITALICS> tool:and map propagation --></COMMAND> service. The slave server can now transfer the maps with <COMMAND>ypxfr</COMMAND>. For more information on map propagation methods, see the  <REFPAGE>cron(1)</REFPAGE>, <REFPAGE>ypmake(1M)</REFPAGE>, <REFPAGE>yppush(1M)</REFPAGE>, and <REFPAGE>ypxfr(1M) </REFPAGE>reference pages.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="28775" TYPE="GRAPHIC">Figure&nbsp;2-2</XREF> illustrates the propagation process between a master server and a slave server using <COMMAND>ypmake</COMMAND>.</PARAGRAPH>
<!-- RASTERCONVERT: ch02.cgm2 -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="ch02-2.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="2-2"><PREFIX>Figure 2-2 </PREFIX><XREFTARGET ID="28775">Map Propagation Between Servers</CAPTION>
</FIGURE>
</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="18155">NIS and Other Network Files<INDEXTARGET ID="ch0230"><!-- POSTPROCESSDATA: ch0230|client:file control on --></TITLE><PARAGRAPH>Network files under system control can be divided into two groups: local files and global files.  Local files are those that NIS first checks on the local system and may continue checking in the NIS database. Global files reside in the NIS database and are always consulted by programs using NIS.  The level of system control over some files depends on the NIS syntax used within those files. </PARAGRAPH>
<PARAGRAPH>The next two sections discuss the local and global files consulted by NIS. More information on these configuration files is included in <DOCTITLE>IRIX Admin: System Configuration and Operation</DOCTITLE>. </PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Local Files</TITLE><PARAGRAPH>&space; <INDEXTARGET ID="ch0231"><!-- POSTPROCESSDATA: ch0231|files:local --><XREF IDREF="38971" TYPE="TABLE">Table&nbsp;2-4</XREF> shows the local files that NIS consults, the use of which is determined by how they are ordered in <FILENAME>/etc/nsswitch.conf</FILENAME>. These files can be controlled at different levels. Two special cases, however, are <FILENAME>/etc/aliases</FILENAME> and <FILENAME>/etc/passwd</FILENAME>.  </PARAGRAPH>
<PARAGRAPH><FILENAME>/etc/aliases</FILENAME> and <FILENAME>/etc/passwd</FILENAME> may contain a special cookie starting with a plus sign (+).  This directs the files parser to insert data from subsequent libraries at that point.  This replacement is done in the files protocol library, but only if the nsd attribute <VARIABLE>compat</VARIABLE> is set in <FILENAME>nsswitch.conf</FILENAME>.</PARAGRAPH>
<PARAGRAPH>For example, a program that calls <COMMAND>getpw ent</COMMAND> to access <FILENAME>/etc/passwd</FILENAME> (a local file) first looks in the password file on your system; the NIS password file is consulted only if your system's password file contains this plus sign (<BOLD>+</BOLD>) entry (see the <REFPAGE>passwd</REFPAGE> reference page).</PARAGRAPH>
<TABLE COLUMNS="1"><CAPTION LBL="2-4"><PREFIX>Table 2-4 </PREFIX><XREFTARGET ID="38971">Local Files Consulted by NIS</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="165"><PARAGRAPH>Local File</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="165"><PARAGRAPH><FILENAME>/etc/hosts.equiv </FILENAME><FILENAME></FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="165"><PARAGRAPH><FILENAME>/etc/passwd</FILENAME>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="165"><PARAGRAPH><FILENAME>/etc/aliases<INDEXTARGET ID="ch0232"><!-- POSTPROCESSDATA: ch0232|<ITALICS>/usr/lib/aliases</ITALICS> file --></FILENAME>&space;</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="165"><PARAGRAPH><FILENAME>.rhosts</FILENAME>&space;</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH><XREF IDREF="73591" TYPE="TABLE">Table&nbsp;2-5</XREF> shows some examples of +/&ndash; entries for the local <FILENAME>/etc/group</FILENAME> and <INDEXTARGET ID="ch0233"><!-- POSTPROCESSDATA: ch0233|client:local files for --><FILENAME>/etc/passwd</FILENAME> files. Note that the position of +/&ndash; entries in the files affects processing. The first entry, +/&ndash; or regular, is the one that is used. <INDEXTARGET ID="ch0234"><!-- POSTPROCESSDATA: ch0234|passwords:in <ITALICS>/etc/passwd</ITALICS> file --></PARAGRAPH>
<TABLE COLUMNS="3"><CAPTION LBL="2-5"><PREFIX>Table 2-5 </PREFIX><XREFTARGET ID="73591">Local File Entries to Control Access</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="63"><PARAGRAPH>Local File </PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="131"><PARAGRAPH>Example Entry</PARAGRAPH>
</CELL>
<CELL LEFT="210" WIDTH="144"><PARAGRAPH>Meaning of the Entry</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="63"><PARAGRAPH><FILENAME>/etc/passwd </FILENAME></PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="131"><PARAGRAPH><SCREENDISPLAY>+:</SCREENDISPLAY>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="210" WIDTH="144"><PARAGRAPH>Get all password information from 
the NIS password database.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="63"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="131"><PARAGRAPH><SCREENDISPLAY>+gw:</SCREENDISPLAY>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="210" WIDTH="144"><PARAGRAPH>Get all user account information 
for <ITALICS>gw</ITALICS> from NIS.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="63"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="131"><PARAGRAPH><SCREENDISPLAY>+@marketing:</SCREENDISPLAY>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="210" WIDTH="144"><PARAGRAPH>Allow anyone in the <ITALICS>marketing</ITALICS> 
netgroup (see <XREF IDREF="43615" TYPE="TITLE">&ldquo;Using Netgroups&rdquo; 
in Chapter&nbsp;5</XREF>&space;for details) to log in 
using NIS account information.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="63"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="131"><PARAGRAPH><SCREENDISPLAY>+nb::::Nancy 
Doe:/usr2/nb:/bin/csh</SCREENDISPLAY> 
<ITALICS>(shown wrapped; entry is one line) </ITALICS></PARAGRAPH>
</CELL>
<CELL LEFT="210" WIDTH="144"><PARAGRAPH>Get the user password, user ID, 
and group ID from NIS. Get the 
user's name, home directory, and 
default shell from the local entry.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="63"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="131"><PARAGRAPH><SCREENDISPLAY>-fran:</SCREENDISPLAY>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="210" WIDTH="144"><PARAGRAPH>Get all user account information 
from NIS and disallow any 
subsequent entries (local or NIS) 
for <VARIABLE>fran</VARIABLE>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="63"><PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="70" WIDTH="131"><PARAGRAPH><SCREENDISPLAY>-@engineering:</SCREENDISPLAY>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="210" WIDTH="144"><PARAGRAPH>Disallow any subsequent entries 
(local or NIS) for all members in 
the netgroup <ITALICS>engineering</ITALICS>.</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>In <FILENAME>/etc/hosts.equiv</FILENAME>, if there are + or  &ndash;  entries whose arguments are @ symbols and netgroups, the NIS <ITALICS>netgroup</ITALICS> map is consulted; otherwise NIS is not consulted. This rule also applies to <FILENAME>.rhosts</FILENAME>. </PARAGRAPH>
<PARAGRAPH>In <FILENAME>/etc/aliases</FILENAME>, if there is a +:+ entry, the NIS <ITALICS>aliases</ITALICS> map is consulted. Otherwise, NIS is not consulted.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Global Files</TITLE><PARAGRAPH>All global files are controlled by the <FILENAME>/etc/nsswitch.conf</FILENAME> file, which determines the maps, the methods, and the order in which they are looked up. The compatibility attribute to override local control of a file is set in the following manner in the <FILENAME>nsswitch.conf</FILENAME> file: </PARAGRAPH>
<EXAMPLE>
passwd:                 files(compat) [notfound=return] nis
</EXAMPLE>
<PARAGRAPH>This line compels files to be searched in the historical manner: the files are parsed and if a +/- entry is found, the next element is called. If the requested item is not found in the file, either as a regular entry or as one of the +/- entries, then control is returned immediately, without notification, to the next name service.</PARAGRAPH>
<PARAGRAPH>For example, previously <COMMAND>ypserv</COMMAND> had a flag <CMDLINEOPT>-i </CMDLINEOPT>pertaining to the hosts map which meant, if a requested item was not found in the dbm files (NIS maps), then the request was forwarded to DNS. Starting with IRIX 6.5, the server has an <FILENAME>nsswitch.conf</FILENAME> file just like the client, which gives a resolve order for each map. Now the line for hosts in   <FILENAME>/var/ns/domains/domainname/nsswitch.conf</FILENAME> shows an entry <SCREENDISPLAY>nisserv</SCREENDISPLAY> referring to the library for serving NIS. If you put <SCREENDISPLAY>dns</SCREENDISPLAY> after that, the name server will use DNS if a requested key is not found in the maps:</PARAGRAPH>
<EXAMPLE>
hosts:                  nisserv dns 
</EXAMPLE>
<PARAGRAPH>If the <CMDLINEOPT>&space;-i</CMDLINEOPT> flag was previously used, the entry should exist as described. Note that <COMMAND>ypserv</COMMAND> no longer exists.</PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="41949">NIS Software Quick Reference Guide</TITLE><PARAGRAPH>This section provides a quick reference to NIS daemons, files, and tools and suggests the reference pages you should consult for complete information. The reference pages at the end of this guide contain detailed information on the structure of the NIS system and NIS commands.</PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>NIS Daemons</TITLE><HANGLIST><HANGPAIR><HANGITEM><COMMAND>rpc.passwd</COMMAND><INDEXTARGET ID="ch0235"><!-- POSTPROCESSDATA: ch0235|<ITALICS>rpc.passwd</ITALICS> daemon:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>A server process that allows users with NIS accounts to change their NIS password and other NIS password-related fields.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>nsd</COMMAND><INDEXTARGET ID="ch0236"><!-- POSTPROCESSDATA: ch0236|<ITALICS>ypbind</ITALICS> daemon:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>The daemon acts as both server and client depending on how it is configured.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>NIS Configuration Files<INDEXTARGET ID="ch0237"><!-- POSTPROCESSDATA: ch0237|files. <ITALICS>See</ITALICS> individual filenames. --></TITLE><HANGLIST><HANGPAIR><HANGITEM><FILENAME>/var/ns/domain</FILENAME>s</HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;The default location of NIS database files. For more information, see the <REFPAGE>ypfiles</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><FILENAME>/etc/config/rpc.passwd.options</FILENAME> <INDEXTARGET ID="ch0238"><!-- POSTPROCESSDATA: ch0238|<ITALICS>/etc/config/rpc.passwd.options</ITALICS> file --></HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Specifies an alternate NIS password filename. Default password file is <INDEXTARGET ID="ch0239"><!-- POSTPROCESSDATA: ch0239|<ITALICS>rpc.passwd.options</ITALICS> file --><FILENAME>/etc/passwd</FILENAME>. Must be used in conjunction with the <FILENAME>/etc/config/ypmaster.options</FILENAME> PWFILE variable. For more information, see the <REFPAGE>rpc.passwd</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><FILENAME>/etc/config/nsd.options<INDEXTARGET ID="ch0240"><!-- POSTPROCESSDATA: ch0240|<ITALICS>/etc/config/ypbind.options</ITALICS> file --></FILENAME> </HANGITEM>
<HANGBODY><PARAGRAPH>&lbreak;Specifies default options to use with <INDEXTARGET ID="ch0241"><!-- POSTPROCESSDATA: ch0241|<ITALICS>ypbind.options</ITALICS> file --><COMMAND>nsd</COMMAND>. Options that can be included in this file are a secure mode and a cache timeout specifier. For more information, see the <REFPAGE>nsd </REFPAGE>reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>NIS Tools<INDEXTARGET ID="ch0242"><!-- POSTPROCESSDATA: ch0242|tools. <ITALICS>See</ITALICS> individual tool names. --></TITLE><HANGLIST><HANGPAIR><HANGITEM><COMMAND>makemdbm</COMMAND> </HANGITEM>
<HANGBODY><PARAGRAPH>A low-level tool for building an <FILENAME>mdbm</FILENAME> file that is a valid NIS map. You can use <COMMAND>makemdbm</COMMAND> to build or rebuild databases not built from <FILENAME>/var/yp/mdbm_parse</FILENAME>. You can also use <COMMAND>mdbm_dump </COMMAND>to disassemble a map so that you can see the key-value pairs that comprise it. In addition, you can modify the disassembled form with standard tools (such as editors, <COMMAND>awk</COMMAND>, <COMMAND>grep</COMMAND>, and <COMMAND>cat</COMMAND>). The disassembled form is in the form required for input back into <COMMAND>makemdbm</COMMAND>. See the <REFPAGE>makedbm(1M)</REFPAGE> reference page for more information.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>ypcat</COMMAND>&space;<INDEXTARGET ID="ch0243"><!-- POSTPROCESSDATA: ch0243|<ITALICS>ypcat</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Lists the contents of an NIS map. Use it when you do not care which server's map version you see. If you need to see a particular server's map, use the <COMMAND>rlogin</COMMAND> or <COMMAND>rsh</COMMAND> commands to gain access to that server, and use <COMMAND>makemdbm</COMMAND>.For details on<COMMAND>&space;ypcat</COMMAND>, see the <REFPAGE>ypcat(1)</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>ypchpass</COMMAND><INDEXTARGET ID="ch0244"><!-- POSTPROCESSDATA: ch0244|<ITALICS>ypchpass</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Changes select NIS password fields. As the NIS user, you can change your full name, your home directory and your default shell environment. Use <COMMAND>yppasswd</COMMAND> to change your NIS password.See the <REFPAGE>ypchpass(1)</REFPAGE> reference page for details on the distinction between the two.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>ypinit</COMMAND> <INDEXTARGET ID="ch0245"><!-- POSTPROCESSDATA: ch0245|<ITALICS>ypinit</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Constructs many maps from files located in <FILENAME>/etc</FILENAME>, such as <FILENAME>/etc/hosts</FILENAME>, <FILENAME>/etc/passwd</FILENAME>, and others. The database initialization tool <COMMAND>ypinit</COMMAND> does all such construction automatically. Also, it constructs initial versions of maps required by the system but not built from files in <FILENAME>/etc</FILENAME>; an example is the map <ITALICS>ypservers</ITALICS>. Use this tool to set up the master NIS server and the slave NIS servers for the first time. Use <COMMAND>ypinit</COMMAND> to construct initial versions of maps rather than as an administrative tool for running systems.See the <REFPAGE>ypinit(1M)</REFPAGE> reference page for details.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>ypmake</COMMAND>&space;<INDEXTARGET ID="ch0246"><!-- POSTPROCESSDATA: ch0246|<ITALICS>ypmake</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Builds several commonly changed components of the NIS database from several ASCII files normally found in <FILENAME>/etc</FILENAME>: <FILENAME>bootparams</FILENAME>, <FILENAME>passwd</FILENAME>, <FILENAME>hosts</FILENAME>, <FILENAME>group</FILENAME>, <FILENAME>netgroup</FILENAME>, <FILENAME>networks</FILENAME>, <FILENAME>protocols</FILENAME>, <FILENAME>rpc</FILENAME>, and <FILENAME>services</FILENAME>, and the file <FILENAME>/etc/aliases</FILENAME>. <FILENAME>/var/yp/ypmake.log</FILENAME> is the log file for all <COMMAND>ypmake</COMMAND> activity. For more information, see the <REFPAGE>ypmake(1M)</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>ypmatch</COMMAND> <INDEXTARGET ID="ch0247"><!-- POSTPROCESSDATA: ch0247|<ITALICS>ypmatch</ITALICS> tool: quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Prints the value for one or more specified keys in an NIS map. Again, you have no control over which server's version of the map you are seeing. See the <REFPAGE>ypmatch(1)</REFPAGE> reference page for details on using <COMMAND>ypmatch</COMMAND>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>yppasswd</COMMAND><INDEXTARGET ID="ch0248"><!-- POSTPROCESSDATA: ch0248|<ITALICS>yppasswd</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Allows NIS users to remotely change their NIS passwords.For details refer to the <REFPAGE>yppasswd(1M)</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>yppoll</COMMAND> <INDEXTARGET ID="ch0249"><!-- POSTPROCESSDATA: ch0249|<ITALICS>yppoll</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Asks any <COMMAND>nsd </COMMAND>for the information it holds internally about a single map.See the <REFPAGE>yppoll(1M)</REFPAGE> reference page for details on using <COMMAND>yppoll</COMMAND>. </PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>yppush</COMMAND> <INDEXTARGET ID="ch0250"><!-- POSTPROCESSDATA: ch0250|<ITALICS>yppush</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Runs on the master NIS server. It requests each of the <COMMAND>nsd </COMMAND>processes within a domain to transfer a particular map, waits for a summary response from the transfer agent, and prints out the results for each server. For more information, see the <REFPAGE>yppush(1M)</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>&space;<COMMAND>ypset</COMMAND><INDEXTARGET ID="ch0251"><!-- POSTPROCESSDATA: ch0251|<ITALICS>ypset</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Tells an <COMMAND>nsd </COMMAND>process (the local one, by default) to get NIS services for a domain from a named NIS server. By default, <COMMAND>nsd</COMMAND> disallows the use of <COMMAND>ypset</COMMAND>. See the <REFPAGE>ypset(1M)</REFPAGE> reference page for details on enabling <COMMAND>ypset</COMMAND>.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>ypwhich</COMMAND> <INDEXTARGET ID="ch0252"><!-- POSTPROCESSDATA: ch0252|<ITALICS>ypwhich</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Tells you which NIS server a node is using at the moment for NIS services, or which NIS server is master of some named map. For more information, refer to the <REFPAGE>ypwhich(1M)</REFPAGE> reference page.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><COMMAND>ypxfr</COMMAND>&space;<INDEXTARGET ID="ch0253"><!-- POSTPROCESSDATA: ch0253|<ITALICS>ypxfr</ITALICS> tool:quick reference to --></HANGITEM>
<HANGBODY><PARAGRAPH>Moves an NIS map from one NIS server to another, using NIS itself as the transport medium. You can run it interactively, or periodically from <COMMAND>crontab</COMMAND>. Also, <COMMAND>nsd</COMMAND> uses <COMMAND>ypxfr</COMMAND> as its transfer agent when it is asked to transfer a map. You can create the file <FILENAME>/var/yp/ypxfr.log</FILENAME> to log all <COMMAND>ypxfr</COMMAND> activity. See the <REFPAGE>ypxfr(1M)</REFPAGE> reference page for details.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>In addition to these NIS tools, the <COMMAND>rpcinfo</COMMAND> and <COMMAND>crontab</COMMAND> tools are also useful for administering NIS. For further information, please refer to the reference page for each tools.</PARAGRAPH>
</SECTION2>
</SECTION1>
</CHAPTER>

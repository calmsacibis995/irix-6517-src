%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) version 3 for SGI
%%For: () ()
%%Title: (/usr/people/pablor/books/vme2/print/IOaddr.to.sys.addr.map.ai)
%%CreationDate: (5/10/95) (23:29)
%%BoundingBox: 114 229 465 644
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Header
%%Template:
%%PageOrigin:30 31
%%AI3_PaperRect:0 792 612 0
%%AI3_Margin:30 31 30 31
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec

%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_typography_AI3 87 dict dup begin put

% variables in Typography proc set - define these to null so that
% importing application would not have problem due to bind.
[
/Tx
/_render
/ddef
/_tm
/sp
/_renderStart
/_cx
/_ax
/_hyphen
/_leading
/_tDict
/swj
/_rise
/N
/_nativeEncoding
/_fScl
/W
/_pjsf
/_pjss
/_useNativeEncoding
/_psf
/_renderEnd
/sw
/Tj
/_cy
/jsp
/_ay
/_hs
/_ctm
/FontName
/_sp
/_pss
/_tempEncode
/_mtx
/npop
counttomark { null def } repeat pop

/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def

% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll

		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....

			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def

/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def

% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def

	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the use platform encoding flag is true
		% install AI platform encoding
		% else leave the base encoding in effect

		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def

% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def

/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def

/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def

/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def

/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def

/i1
{
W N
} def

/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def

/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def

/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def

% font operators

% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def

/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def

% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def

/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def

% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def

/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def

/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def

/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def

/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def


% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def

/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def

/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def

/Tt	% set user tracking				% userTracking Tt -
{
pop
} def

/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def

/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def

/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def

/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def

/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def

/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def

/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def

/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def

/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def


% Text Bodies
/TX {pop} def

%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -

/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def

/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def

/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def

/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def

/T+	% discretionary hyphen hyphen	% - T+ -
{} def

/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def

/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def

currentdict readonly pop end
setpacking

%%EndResource

%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 1
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put

% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def

% paint operators
/cf	currentflat def	% - cf flatness

% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def

% typography operators
/Tx {} def
/Tj {} def

% compound path operators
/CRender {} def

% printing
/_AI3_savepage {} def

% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def

% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def

% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse

% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def

% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def

% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def

% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def

% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def

% locked object operator
/A					% value A -
{
pop
} def

currentdict readonly pop end
setpacking

% annotate page operator
/annotatepage
{
} def
%%EndResource
%AI3-Grid.0 18 18 3 0 0 0 3
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cmykcolor /initialize get exec

Adobe_cshow /initialize get exec

Adobe_customcolor /initialize get exec

Adobe_typography_AI3 /initialize get exec


Adobe_IllustratorA_AI3 /initialize get exec

[
45/minus 129/florin/dagger/guilsinglleft/guilsinglright/quotesingle
/quotedblleft/quotedblbase/quotedblright/fl/fi/Lslash/OE/ellipsis
/quotesinglbase/emdash/dotlessi/grave/perthousand/circumflex/tilde/bullet
/breve/dotaccent/endash/fraction/ring/lslash/oe/hungarumlaut
/ogonek/caron/daggerdbl 164/currency 166/brokenbar 168/dieresis
/copyright/ordfeminine 172/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
183/periodcentered/cedilla/onesuperior/ordmasculine 188/onequarter
/onehalf/threequarters 192/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae
/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 O
0.5 g
0 i 0 J 0 j 0.9 w 4 M []0 d
%AI3_Note:
0 D
268.1488 459.9766 m
268.1488 401.252 l
265.2238 401.252 l
271.1862 395.2895 l
277.1487 401.252 l
274.2237 401.252 l
274.2237 459.9766 l
F
0 g
385.373 606.2256 m
385.373 627.8255 L
127.9747 627.8255 L
127.9747 606.2256 L
385.373 606.2256 L
f
u
318.0984 277.5028 m
318.0984 390.9021 L
233.499 390.9021 L
233.499 277.5028 L
318.0984 277.5028 L
f
275.7987 334.2024 m
F
U
1 g
0 R
0 G
381.998 609.6006 m
381.998 631.2004 L
124.5997 631.2004 L
124.5997 609.6006 L
381.998 609.6006 L
b
240.6989 609.6006 m
240.6989 544.801 l
271.2987 544.801 l
271.2987 465.6016 l
S
233.049 460.2016 m
307.2985 460.2016 l
S
0 To
0.9 0 0 0.9 141.6996 446.7017 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Helvetica 8.8889 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(Static RAM table\r) Tx 
TO
269.2738 466.6141 m
271.2987 460.5391 l
273.3237 466.6141 l
271.2987 465.6016 l
269.2738 466.6141 l
f
124.5997 453.1141 m
126.6247 459.1891 l
128.6497 453.1141 l
126.6247 454.1266 l
124.5997 453.1141 l
f
0 R
0 G
209.1992 507.2263 m
241.8239 507.2263 l
241.8239 465.6016 l
S
0 O
0 g
240.024 466.6141 m
242.0489 460.5391 l
244.0739 466.6141 l
242.0489 465.6016 l
240.024 466.6141 l
f
0 R
0 G
335.1983 609.6006 m
335.1983 400.352 l
380.198 400.352 l
380.198 286.5028 l
S
0 O
0 g
378.173 287.5153 m
380.198 281.4403 l
382.223 287.5153 l
380.198 286.5028 l
378.173 287.5153 l
f
0 R
0 G
149.3496 432.3018 m
126.6247 432.3018 l
126.6247 454.1266 l
S
0 To
0.9 0 0 0.9 152.9495 429.6018 0 Tp
TP
0 Tr
0 O
0 g
(Mapping level bit\r) Tx 
TO
u
1 g
0 R
0 G
313.5984 376.5022 m
313.5984 395.402 L
228.999 395.402 L
228.999 376.5022 L
313.5984 376.5022 L
b
271.2987 385.9521 m
B
U
u
313.5984 357.6023 m
313.5984 376.5022 L
228.999 376.5022 L
228.999 357.6023 L
313.5984 357.6023 L
b
271.2987 367.0522 m
B
U
u
313.5984 338.7024 m
313.5984 357.6023 L
228.999 357.6023 L
228.999 338.7024 L
313.5984 338.7024 L
b
271.2987 348.1524 m
B
U
u
313.5984 319.8025 m
313.5984 338.7024 L
228.999 338.7024 L
228.999 319.8025 L
313.5984 319.8025 L
b
271.2987 329.2525 m
B
U
u
313.5984 300.9027 m
313.5984 319.8025 L
228.999 319.8025 L
228.999 300.9027 L
313.5984 300.9027 L
b
271.2987 310.3526 m
B
U
u
313.5984 282.0028 m
313.5984 300.9027 L
228.999 300.9027 L
228.999 282.0028 L
313.5984 282.0028 L
b
271.2987 291.4527 m
B
U
0 g
205.5992 631.2004 m
205.5992 609.6006 l
F
285.6986 631.2004 m
285.6986 609.6006 l
F
0 R
0 G
314.4984 328.1275 m
347.1232 328.1275 l
347.1232 286.5028 l
S
0 O
0 g
345.3232 287.5153 m
347.3482 281.4403 l
349.3732 287.5153 l
347.3482 286.5028 l
345.3232 287.5153 l
f
0 R
0 G
330.2483 281.1028 m
404.4978 281.1028 l
S
299.6485 552.451 m
299.6485 465.1516 l
S
0 O
0 g
297.6236 466.1641 m
299.6485 460.0891 l
301.6735 466.1641 l
299.6485 465.1516 l
297.6236 466.1641 l
f
0 To
0.9 0 0 0.9 293.7986 555.151 0 Tp
TP
0 Tr
("00"\r) Tx 
TO
0 To
0.9 0 0 0.9 249.2489 548.851 0 Tp
TP
0 Tr
(/9\r) Tx 
TO
0 To
0.9 0 0 0.9 220.8991 510.6013 0 Tp
TP
0 Tr
(/29\r) Tx 
TO
0 To
0.9 0 0 0.9 174.9994 592.5007 0 Tp
TP
0 Tr
(/13\r) Tx 
TO
166.8994 609.6006 m
166.8994 579.0008 l
F
164.8745 580.0133 m
166.8994 573.9383 l
168.9244 580.0133 l
166.8994 579.0008 l
164.8745 580.0133 l
f
0 To
0.9 0 0 0.9 219.0991 499.8013 0 Tp
TP
0 Tr
(from\r) Tx 
0 -10.8889 Td
(IBus\r) Tx 
TO
0 To
0.9 0 0 0.9 246.0989 267.6029 0 Tp
TP
0 Tr
(Main memory table\r) Tx 
TO
0 To
0.9 0 0 0.9 354.5482 403.052 0 Tp
TP
0 Tr
(/12\r) Tx 
TO
0 To
0.9 0 0 0.9 324.3984 331.9525 0 Tp
TP
0 Tr
(/28\r) Tx 
TO
0 To
0.9 0 0 0.9 379.298 636.6004 0 Tp
TP
0 Tr
(0\r) Tx 
TO
0 To
0.9 0 0 0.9 289.7486 636.6004 0 Tp
TP
0 Tr
(11\r) Tx 
TO
0 To
0.9 0 0 0.9 275.7987 636.6004 0 Tp
TP
0 Tr
(12\r) Tx 
TO
0 To
0.9 0 0 0.9 210.0991 636.6004 0 Tp
TP
0 Tr
(20\r) Tx 
TO
0 To
0.9 0 0 0.9 196.1492 636.6004 0 Tp
TP
0 Tr
(21\r) Tx 
TO
0 To
0.9 0 0 0.9 122.3497 636.6004 0 Tp
TP
0 Tr
(33\r) Tx 
TO
0 To
0.9 0 0 0.9 158.3495 336.9024 0 Tp
TP
0 Tr
(Table aligned\r) Tx 
0 -10.8889 Td
(on 2KB boundary\r) Tx 
TO
0 To
0.9 0 0 0.9 389.6479 616.8005 0 Tp
TP
0 Tr
(IBus address\r) Tx 
TO
0.5 g
360.8481 279.9778 m
360.8481 246.453 l
357.9232 246.453 l
363.8856 240.4906 l
369.8481 246.453 l
366.9231 246.453 l
366.9231 279.9778 l
F
0 To
0.9 0 0 0.9 313.5984 229.8032 0 Tp
TP
0 Tr
0 g
(40-bit Final physical EVEREST address\r) Tx 
TO
u
213.6991 455.7016 m
213.6991 569.1009 L
129.0997 569.1009 L
129.0997 455.7016 L
213.6991 455.7016 L
f
171.3994 512.4012 m
F
U
u
1 g
0 R
0 G
209.1992 554.701 m
209.1992 573.6008 L
124.5997 573.6008 L
124.5997 554.701 L
209.1992 554.701 L
b
166.8994 564.1509 m
B
U
u
209.1992 535.8011 m
209.1992 554.701 L
124.5997 554.701 L
124.5997 535.8011 L
209.1992 535.8011 L
b
166.8994 545.251 m
B
U
u
209.1992 516.9012 m
209.1992 535.8011 L
124.5997 535.8011 L
124.5997 516.9012 L
209.1992 516.9012 L
b
166.8994 526.3511 m
B
U
u
209.1992 498.0013 m
209.1992 516.9012 L
124.5997 516.9012 L
124.5997 498.0013 L
209.1992 498.0013 L
b
166.8994 507.4513 m
B
U
u
209.1992 479.1015 m
209.1992 498.0013 L
124.5997 498.0013 L
124.5997 479.1015 L
209.1992 479.1015 L
b
166.8994 488.5514 m
B
U
u
209.1992 460.2016 m
209.1992 479.1015 L
124.5997 479.1015 L
124.5997 460.2016 L
209.1992 460.2016 L
b
166.8994 469.6515 m
B
U
0 g
138.9996 573.6008 m
138.9996 460.2016 l
F
154.7495 573.6008 m
154.7495 460.2016 l
F
0 To
0.9 0 0 0.9 129.9997 505.2013 0 Tp
TP
0 Tr
(1\r) Tx 
TO
0 To
0.9 0 0 0.9 145.7496 505.2013 0 Tp
TP
0 Tr
(1\r) Tx 
TO
137.1996 630.7504 m
137.1996 609.1506 l
F
0 To
0.9 0 0 0.9 140.7996 637.0504 0 Tp
TP
0 Tr
(32\r) Tx 
TO
%%PageTrailer
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec

Adobe_typography_AI3 /terminate get exec


Adobe_customcolor /terminate get exec

Adobe_cshow /terminate get exec

Adobe_cmykcolor /terminate get exec

Adobe_packedarray /terminate get exec

%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (32.bit.address.space.ai)
%%CreationDate: (10/4/95) ( 9:03 AM)
%%BoundingBox: 168 170 389 551
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Oblique
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (purple)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0 0 0 1 (custom black)
%%+ 1 0.35 0 0.25 (dark blue)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%%+ 0 0 1 0 (yellow)
%AI3_TemplateBox: 278 362 278 362
%AI3_TileBox: 0 0 552 730
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Oblique
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
u
q
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
245.7853 182.7396 m
245.7853 175.7157 228.3982 170.0212 206.9506 170.0212 c
185.5031 170.0212 168.116 175.7157 168.116 182.7396 C
168.0953 351.0638 L
168.0953 358.0877 185.4825 363.7819 206.9299 363.7819 c
228.3775 363.7819 245.7647 358.0877 245.7647 351.0638 C
245.7853 182.7396 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
245.7853 182.7396 m
245.7853 175.7157 228.3982 170.0212 206.9506 170.0212 c
185.5031 170.0212 168.116 175.7157 168.116 182.7396 C
168.0953 351.0638 L
168.0953 358.0877 185.4825 363.7819 206.9299 363.7819 c
228.3775 363.7819 245.7647 358.0877 245.7647 351.0638 C
245.7853 182.7396 L
f
u
216.9583 160.7563 m
216.9376 339.4708 L
164.214 356.4405 L
164.2347 177.7261 L
216.9583 160.7563 L
f
u
1 1 0 0 (purple) 0.0236 x
215.9495 161.081 m
215.9288 339.7954 L
164.5504 356.3322 L
164.5711 177.618 L
215.9495 161.081 L
f
1 1 0 0 (purple) 0.0472 x
214.9406 161.4058 m
214.9199 340.1199 L
164.8867 356.224 L
164.9074 177.5097 L
214.9406 161.4058 L
f
1 1 0 0 (purple) 0.0708 x
213.9311 161.7306 m
213.9104 340.4449 L
165.2232 356.1157 L
165.2438 177.4013 L
213.9311 161.7306 L
f
1 1 0 0 (purple) 0.0944 x
212.9222 162.0555 m
212.9015 340.7698 L
165.5595 356.0073 L
165.5802 177.293 L
212.9222 162.0555 L
f
1 1 0 0 (purple) 0.1181 x
211.9128 162.3805 m
211.8921 341.0946 L
165.8958 355.8991 L
165.9165 177.1848 L
211.9128 162.3805 L
f
1 1 0 0 (purple) 0.1417 x
210.9038 162.7051 m
210.8831 341.4194 L
166.2322 355.7908 L
166.2529 177.0764 L
210.9038 162.7051 L
f
1 1 0 0 (purple) 0.1653 x
209.8943 163.0298 m
209.8736 341.7442 L
166.5688 355.6825 L
166.5895 176.9684 L
209.8943 163.0298 L
f
1 1 0 0 (purple) 0.1889 x
208.8854 163.3547 m
208.8647 342.0691 L
166.9051 355.5744 L
166.9258 176.86 L
208.8854 163.3547 L
f
1 1 0 0 (purple) 0.2125 x
207.8759 163.6797 m
207.8553 342.394 L
167.2416 355.466 L
167.2622 176.7517 L
207.8759 163.6797 L
f
1 1 0 0 (purple) 0.2361 x
206.8671 164.0044 m
206.8464 342.7187 L
167.5777 355.3577 L
167.5984 176.6434 L
206.8671 164.0044 L
f
1 1 0 0 (purple) 0.2597 x
205.8575 164.3293 m
205.8369 343.0435 L
167.9143 355.2494 L
167.9349 176.5351 L
205.8575 164.3293 L
f
1 1 0 0 (purple) 0.2833 x
204.8486 164.654 m
204.8279 343.3683 L
168.2506 355.1413 L
168.2713 176.4268 L
204.8486 164.654 L
f
1 1 0 0 (purple) 0.3069 x
203.8392 164.9787 m
203.8185 343.6932 L
168.5872 355.0328 L
168.6079 176.3187 L
203.8392 164.9787 L
f
1 1 0 0 (purple) 0.3305 x
202.8304 165.3036 m
202.8097 344.018 L
168.9233 354.9247 L
168.944 176.2104 L
202.8304 165.3036 L
f
1 1 0 0 (purple) 0.3542 x
201.8207 165.6286 m
201.8001 344.3429 L
169.2599 354.8162 L
169.2806 176.1021 L
201.8207 165.6286 L
f
1 1 0 0 (purple) 0.3778 x
200.8119 165.9532 m
200.7913 344.6676 L
169.5962 354.7081 L
169.6169 175.9937 L
200.8119 165.9532 L
f
1 1 0 0 (purple) 0.4014 x
199.8025 166.2782 m
199.7819 344.9926 L
169.9327 354.5997 L
169.9534 175.8855 L
199.8025 166.2782 L
f
1 1 0 0 (purple) 0.425 x
198.7936 166.6029 m
198.7728 345.3172 L
170.269 354.4915 L
170.2897 175.7772 L
198.7936 166.6029 L
f
1 1 0 0 (purple) 0.4486 x
197.7846 166.9276 m
197.764 345.6419 L
170.6053 354.3832 L
170.6259 175.6691 L
197.7846 166.9276 L
f
1 1 0 0 (purple) 0.4722 x
196.7752 167.2525 m
196.7544 345.9669 L
170.9417 354.275 L
170.9624 175.5608 L
196.7752 167.2525 L
f
1 1 0 0 (purple) 0.4958 x
195.7662 167.5773 m
195.7456 346.2916 L
171.278 354.1668 L
171.2988 175.4524 L
195.7662 167.5773 L
f
1 1 0 0 (purple) 0.5195 x
194.7567 167.9021 m
194.736 346.6165 L
171.6147 354.0584 L
171.6354 175.3441 L
194.7567 167.9021 L
f
1 1 0 0 (purple) 0.5431 x
193.7478 168.2269 m
193.7272 346.9414 L
171.951 353.9503 L
171.9717 175.2359 L
193.7478 168.2269 L
f
1 1 0 0 (purple) 0.5667 x
192.7383 168.5518 m
192.7176 347.2661 L
172.2874 353.8419 L
172.3081 175.1276 L
192.7383 168.5518 L
f
1 1 0 0 (purple) 0.5903 x
191.7294 168.8765 m
191.7087 347.5909 L
172.6237 353.7337 L
172.6444 175.0195 L
191.7294 168.8765 L
f
1 1 0 0 (purple) 0.6139 x
190.72 169.2015 m
190.6993 347.9158 L
172.9601 353.6252 L
172.9808 174.9109 L
190.72 169.2015 L
f
1 1 0 0 (purple) 0.6375 x
189.7109 169.5262 m
189.6903 348.2406 L
173.2965 353.5171 L
173.3172 174.8028 L
189.7109 169.5262 L
f
1 1 0 0 (purple) 0.6611 x
188.7016 169.8512 m
188.6809 348.5654 L
173.6331 353.4088 L
173.6538 174.6945 L
188.7016 169.8512 L
f
1 1 0 0 (purple) 0.6847 x
187.6925 170.1758 m
187.6719 348.8903 L
173.9694 353.3006 L
173.9901 174.5863 L
187.6925 170.1758 L
f
1 1 0 0 (purple) 0.7083 x
186.6831 170.5008 m
186.6625 349.215 L
174.3057 353.1923 L
174.3264 174.4779 L
186.6831 170.5008 L
f
1 1 0 0 (purple) 0.7319 x
185.6744 170.8254 m
185.6537 349.5398 L
174.6421 353.084 L
174.6627 174.3698 L
185.6744 170.8254 L
f
1 1 0 0 (purple) 0.7556 x
184.6647 171.1504 m
184.6441 349.8646 L
174.9785 352.9757 L
174.9992 174.2615 L
184.6647 171.1504 L
f
1 1 0 0 (purple) 0.7792 x
183.656 171.4751 m
183.6353 350.1894 L
175.3149 352.8675 L
175.3356 174.1532 L
183.656 171.4751 L
f
1 1 0 0 (purple) 0.8028 x
182.6463 171.8001 m
182.6257 350.5143 L
175.6513 352.7592 L
175.672 174.0448 L
182.6463 171.8001 L
f
1 1 0 0 (purple) 0.8264 x
181.6374 172.1247 m
181.6167 350.839 L
175.9876 352.6508 L
176.0083 173.9366 L
181.6374 172.1247 L
f
U
1 1 0 0 (purple) 0.85 x
180.6286 172.4496 m
180.608 351.1639 L
176.3239 352.5428 L
176.3446 173.8283 L
180.6286 172.4496 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
245.7402 351.0632 m
245.7402 344.0391 228.3528 338.3448 206.9053 338.3448 c
185.4579 338.3448 168.0708 344.0391 168.0708 351.0632 C
168.0706 358.0871 185.4577 363.7815 206.905 363.7819 c
228.3526 363.7822 245.7399 358.0882 245.7402 351.0642 C
245.7402 351.0632 L
f
u
1 1 0 0 (purple) 0.575 x
244.7825 351.0275 m
244.7825 344.2622 227.8264 338.7778 206.9105 338.7778 c
185.9946 338.7778 169.0386 344.2622 169.0386 351.0275 C
169.0383 357.7927 185.9943 363.2773 206.9104 363.2776 c
227.8262 363.2779 244.7824 357.7937 244.7825 351.0284 C
244.7825 351.0275 L
f
1 1 0 0 (purple) 0.5 x
243.8251 350.9917 m
243.8251 344.4854 227.2999 339.2108 206.9156 339.2108 c
186.5313 339.2108 170.0063 344.4854 170.0063 350.9917 C
170.0061 357.4981 186.5313 362.7731 206.9155 362.7732 c
227.2998 362.7737 243.8249 357.4993 243.8251 350.9928 C
243.8251 350.9917 L
f
1 1 0 0 (purple) 0.425 x
242.8677 350.9561 m
242.8677 344.7084 226.7736 339.6435 206.9208 339.6435 c
187.0682 339.6435 170.9741 344.7084 170.9741 350.9561 C
170.9738 357.2038 187.0681 362.2689 206.9207 362.269 c
226.7733 362.2693 242.8675 357.2048 242.8677 350.9572 C
242.8677 350.9561 L
f
1 1 0 0 (purple) 0.35 x
241.9102 350.9203 m
241.9102 344.9317 226.2469 340.0765 206.9259 340.0765 c
187.605 340.0765 171.9419 344.9317 171.9419 350.9203 C
171.9416 356.9092 187.6049 361.7646 206.9258 361.7648 c
226.2467 361.765 241.91 356.9102 241.9102 350.9214 C
241.9102 350.9203 L
f
1 1 0 0 (purple) 0.275 x
240.9529 350.8848 m
240.9529 345.1548 225.7205 340.5096 206.9312 340.5096 c
188.1417 340.5096 172.9094 345.1548 172.9094 350.8848 C
172.9091 356.6149 188.1415 361.2603 206.9309 361.2604 c
225.7204 361.2608 240.9526 356.6157 240.9529 350.8857 C
240.9529 350.8848 L
f
U
1 1 0 0 (purple) 0.2 x
239.9954 350.849 m
239.9954 345.3779 225.1941 340.9425 206.9364 340.9425 c
188.6785 340.9425 173.8771 345.3779 173.8771 350.849 C
173.8769 356.3204 188.6784 360.7561 206.9361 360.7562 c
225.1938 360.7565 239.9951 356.3213 239.9954 350.85 C
239.9954 350.849 L
f
U
0 R
0 G
0.5 w
247.9084 181.9461 m
252.5084 181.9461 255 184.4378 255 189.0378 c
255 263.3333 l
255 267.55 257.5875 268.9875 260.6542 268.9875 C
257.5875 268.9875 255 270.425 255 274.6416 c
255 345.3333 l
255 349.9333 252.5084 352.4249 247.9084 352.4249 c
S
u
q
1 w
245.7853 359.4522 m
245.7853 352.4282 228.3982 346.7339 206.9506 346.7339 c
185.5031 346.7339 168.116 352.4282 168.116 359.4522 C
168.116 403.0431 L
168.116 410.067 185.5031 415.7612 206.9506 415.7612 c
228.3982 415.7612 245.7853 410.067 245.7853 403.0431 C
245.7853 359.4522 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
245.7853 359.4522 m
245.7853 352.4282 228.3982 346.7339 206.9506 346.7339 c
185.5031 346.7339 168.116 352.4282 168.116 359.4522 C
168.116 403.0431 L
168.116 410.067 185.5031 415.7612 206.9506 415.7612 c
228.3982 415.7612 245.7853 410.067 245.7853 403.0431 C
245.7853 359.4522 L
f
u
216.9583 337.469 m
216.9583 391.4501 L
164.2347 408.4199 L
164.2347 354.4387 L
216.9583 337.469 L
f
u
1 1 0 0 (purple) 0.0236 x
215.9495 337.7936 m
215.9495 391.7748 L
164.5711 408.3116 L
164.5711 354.3306 L
215.9495 337.7936 L
f
1 1 0 0 (purple) 0.0472 x
214.9406 338.1184 m
214.9406 392.0993 L
164.9074 408.2033 L
164.9074 354.2222 L
214.9406 338.1184 L
f
1 1 0 0 (purple) 0.0708 x
213.9311 338.4432 m
213.9311 392.4243 L
165.2438 408.095 L
165.2438 354.1138 L
213.9311 338.4432 L
f
1 1 0 0 (purple) 0.0944 x
212.9222 338.768 m
212.9222 392.7492 L
165.5802 407.9867 L
165.5802 354.0055 L
212.9222 338.768 L
f
1 1 0 0 (purple) 0.1181 x
211.9128 339.093 m
211.9128 393.0739 L
165.9165 407.8785 L
165.9165 353.8974 L
211.9128 339.093 L
f
1 1 0 0 (purple) 0.1417 x
210.9038 339.4176 m
210.9038 393.3988 L
166.2529 407.7702 L
166.2529 353.7891 L
210.9038 339.4176 L
f
1 1 0 0 (purple) 0.1653 x
209.8943 339.7425 m
209.8943 393.7236 L
166.5895 407.6618 L
166.5895 353.6809 L
209.8943 339.7425 L
f
1 1 0 0 (purple) 0.1889 x
208.8854 340.0673 m
208.8854 394.0484 L
166.9258 407.5537 L
166.9258 353.5725 L
208.8854 340.0673 L
f
1 1 0 0 (purple) 0.2125 x
207.8759 340.3923 m
207.8759 394.3733 L
167.2622 407.4454 L
167.2622 353.4642 L
207.8759 340.3923 L
f
1 1 0 0 (purple) 0.2361 x
206.8671 340.717 m
206.8671 394.6981 L
167.5984 407.3371 L
167.5984 353.3559 L
206.8671 340.717 L
f
1 1 0 0 (purple) 0.2597 x
205.8575 341.0419 m
205.8575 395.0228 L
167.9349 407.2287 L
167.9349 353.2478 L
205.8575 341.0419 L
f
1 1 0 0 (purple) 0.2833 x
204.8486 341.3665 m
204.8486 395.3477 L
168.2713 407.1206 L
168.2713 353.1395 L
204.8486 341.3665 L
f
1 1 0 0 (purple) 0.3069 x
203.8392 341.6914 m
203.8392 395.6726 L
168.6079 407.0122 L
168.6079 353.0312 L
203.8392 341.6914 L
f
1 1 0 0 (purple) 0.3305 x
202.8304 342.0161 m
202.8304 395.9973 L
168.944 406.9041 L
168.944 352.9229 L
202.8304 342.0161 L
f
1 1 0 0 (purple) 0.3542 x
201.8207 342.3411 m
201.8207 396.3223 L
169.2806 406.7955 L
169.2806 352.8146 L
201.8207 342.3411 L
f
1 1 0 0 (purple) 0.3778 x
200.8119 342.6658 m
200.8119 396.647 L
169.6169 406.6874 L
169.6169 352.7062 L
200.8119 342.6658 L
f
1 1 0 0 (purple) 0.4014 x
199.8025 342.9908 m
199.8025 396.9719 L
169.9534 406.5791 L
169.9534 352.5982 L
199.8025 342.9908 L
f
1 1 0 0 (purple) 0.425 x
198.7936 343.3154 m
198.7936 397.2966 L
170.2897 406.4709 L
170.2897 352.4898 L
198.7936 343.3154 L
f
1 1 0 0 (purple) 0.4486 x
197.7846 343.6403 m
197.7846 397.6212 L
170.6259 406.3625 L
170.6259 352.3816 L
197.7846 343.6403 L
f
1 1 0 0 (purple) 0.4722 x
196.7752 343.965 m
196.7752 397.9462 L
170.9624 406.2543 L
170.9624 352.2733 L
196.7752 343.965 L
f
1 1 0 0 (purple) 0.4958 x
195.7662 344.2899 m
195.7662 398.271 L
171.2988 406.1461 L
171.2988 352.165 L
195.7662 344.2899 L
f
1 1 0 0 (purple) 0.5195 x
194.7567 344.6147 m
194.7567 398.5958 L
171.6354 406.0378 L
171.6354 352.0566 L
194.7567 344.6147 L
f
1 1 0 0 (purple) 0.5431 x
193.7478 344.9395 m
193.7478 398.9207 L
171.9717 405.9297 L
171.9717 351.9485 L
193.7478 344.9395 L
f
1 1 0 0 (purple) 0.5667 x
192.7383 345.2644 m
192.7383 399.2455 L
172.3081 405.8213 L
172.3081 351.8402 L
192.7383 345.2644 L
f
1 1 0 0 (purple) 0.5903 x
191.7294 345.5892 m
191.7294 399.5702 L
172.6444 405.713 L
172.6444 351.732 L
191.7294 345.5892 L
f
1 1 0 0 (purple) 0.6139 x
190.72 345.9142 m
190.72 399.8951 L
172.9808 405.6046 L
172.9808 351.6235 L
190.72 345.9142 L
f
1 1 0 0 (purple) 0.6375 x
189.7109 346.2388 m
189.7109 400.22 L
173.3172 405.4965 L
173.3172 351.5153 L
189.7109 346.2388 L
f
1 1 0 0 (purple) 0.6611 x
188.7016 346.5638 m
188.7016 400.5447 L
173.6538 405.3882 L
173.6538 351.407 L
188.7016 346.5638 L
f
1 1 0 0 (purple) 0.6847 x
187.6925 346.8884 m
187.6925 400.8696 L
173.9901 405.2799 L
173.9901 351.2989 L
187.6925 346.8884 L
f
1 1 0 0 (purple) 0.7083 x
186.6831 347.2134 m
186.6831 401.1944 L
174.3264 405.1716 L
174.3264 351.1906 L
186.6831 347.2134 L
f
1 1 0 0 (purple) 0.7319 x
185.6744 347.5381 m
185.6744 401.5191 L
174.6627 405.0634 L
174.6627 351.0823 L
185.6744 347.5381 L
f
1 1 0 0 (purple) 0.7556 x
184.6647 347.863 m
184.6647 401.844 L
174.9992 404.9551 L
174.9992 350.974 L
184.6647 347.863 L
f
1 1 0 0 (purple) 0.7792 x
183.656 348.1877 m
183.656 402.1688 L
175.3356 404.8469 L
175.3356 350.8657 L
183.656 348.1877 L
f
1 1 0 0 (purple) 0.8028 x
182.6463 348.5127 m
182.6463 402.4936 L
175.672 404.7385 L
175.672 350.7573 L
182.6463 348.5127 L
f
1 1 0 0 (purple) 0.8264 x
181.6374 348.8373 m
181.6374 402.8184 L
176.0083 404.6302 L
176.0083 350.6493 L
181.6374 348.8373 L
f
U
1 1 0 0 (purple) 0.85 x
180.6286 349.1621 m
180.6286 403.1433 L
176.3446 404.5221 L
176.3446 350.5409 L
180.6286 349.1621 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
245.7608 403.0425 m
245.7608 396.0185 228.3734 390.3242 206.926 390.3242 c
185.4786 390.3242 168.0915 396.0185 168.0915 403.0425 C
168.0912 410.0665 185.4784 415.7609 206.9258 415.7612 c
228.3733 415.7616 245.7606 410.0676 245.7608 403.0436 C
245.7608 403.0425 L
f
u
1 1 0 0 (purple) 0.575 x
244.7825 402.8356 m
244.7825 396.0703 227.8264 390.5859 206.9105 390.5859 c
185.9946 390.5859 169.0386 396.0703 169.0386 402.8356 C
169.0383 409.6008 185.9943 415.0854 206.9104 415.0857 c
227.8262 415.086 244.7824 409.6018 244.7825 402.8365 C
244.7825 402.8356 L
f
1 1 0 0 (purple) 0.5 x
243.8251 402.7998 m
243.8251 396.2935 227.2999 391.0189 206.9156 391.0189 c
186.5313 391.0189 170.0063 396.2935 170.0063 402.7998 C
170.0061 409.3062 186.5313 414.5812 206.9155 414.5813 c
227.2998 414.5818 243.8249 409.3074 243.8251 402.8009 C
243.8251 402.7998 L
f
1 1 0 0 (purple) 0.425 x
242.8677 402.7642 m
242.8677 396.5165 226.7736 391.4516 206.9208 391.4516 c
187.0682 391.4516 170.9741 396.5165 170.9741 402.7642 C
170.9738 409.0119 187.0681 414.077 206.9207 414.0771 c
226.7733 414.0774 242.8675 409.0129 242.8677 402.7653 C
242.8677 402.7642 L
f
1 1 0 0 (purple) 0.35 x
241.9102 402.7284 m
241.9102 396.7398 226.2469 391.8846 206.9259 391.8846 c
187.605 391.8846 171.9419 396.7398 171.9419 402.7284 C
171.9416 408.7173 187.6049 413.5727 206.9258 413.5729 c
226.2467 413.5731 241.91 408.7183 241.9102 402.7295 C
241.9102 402.7284 L
f
1 1 0 0 (purple) 0.275 x
240.9529 402.6929 m
240.9529 396.9629 225.7205 392.3177 206.9312 392.3177 c
188.1417 392.3177 172.9094 396.9629 172.9094 402.6929 C
172.9091 408.423 188.1415 413.0684 206.9309 413.0685 c
225.7204 413.0689 240.9526 408.4238 240.9529 402.6938 C
240.9529 402.6929 L
f
U
1 1 0 0 (purple) 0.2 x
239.9954 402.6571 m
239.9954 397.186 225.1941 392.7506 206.9364 392.7506 c
188.6785 392.7506 173.8771 397.186 173.8771 402.6571 C
173.8769 408.1285 188.6784 412.5642 206.9361 412.5643 c
225.1938 412.5646 239.9951 408.1294 239.9954 402.6581 C
239.9954 402.6571 L
f
U
u
q
245.7853 408.8817 m
245.7853 401.8576 228.3982 396.1633 206.9506 396.1633 c
185.5031 396.1633 168.116 401.8576 168.116 408.8817 C
168.116 452.4726 L
168.116 459.4965 185.5031 465.1907 206.9506 465.1907 c
228.3982 465.1907 245.7853 459.4965 245.7853 452.4726 C
245.7853 408.8817 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
245.7853 408.8817 m
245.7853 401.8576 228.3982 396.1633 206.9506 396.1633 c
185.5031 396.1633 168.116 401.8576 168.116 408.8817 C
168.116 452.4726 L
168.116 459.4965 185.5031 465.1907 206.9506 465.1907 c
228.3982 465.1907 245.7853 459.4965 245.7853 452.4726 C
245.7853 408.8817 L
f
u
216.9583 386.8984 m
216.9583 440.8796 L
164.2347 457.8493 L
164.2347 403.8682 L
216.9583 386.8984 L
f
u
1 1 0 0 (purple) 0.0236 x
215.9495 387.2231 m
215.9495 441.2042 L
164.5711 457.741 L
164.5711 403.7601 L
215.9495 387.2231 L
f
1 1 0 0 (purple) 0.0472 x
214.9406 387.5478 m
214.9406 441.5288 L
164.9074 457.6328 L
164.9074 403.6516 L
214.9406 387.5478 L
f
1 1 0 0 (purple) 0.0708 x
213.9311 387.8727 m
213.9311 441.8537 L
165.2438 457.5245 L
165.2438 403.5433 L
213.9311 387.8727 L
f
1 1 0 0 (purple) 0.0944 x
212.9222 388.1974 m
212.9222 442.1786 L
165.5802 457.4161 L
165.5802 403.435 L
212.9222 388.1974 L
f
1 1 0 0 (purple) 0.1181 x
211.9128 388.5224 m
211.9128 442.5034 L
165.9165 457.3079 L
165.9165 403.3269 L
211.9128 388.5224 L
f
1 1 0 0 (purple) 0.1417 x
210.9038 388.8471 m
210.9038 442.8283 L
166.2529 457.1996 L
166.2529 403.2185 L
210.9038 388.8471 L
f
1 1 0 0 (purple) 0.1653 x
209.8943 389.172 m
209.8943 443.153 L
166.5895 457.0913 L
166.5895 403.1103 L
209.8943 389.172 L
f
1 1 0 0 (purple) 0.1889 x
208.8854 389.4967 m
208.8854 443.4779 L
166.9258 456.9832 L
166.9258 403.002 L
208.8854 389.4967 L
f
1 1 0 0 (purple) 0.2125 x
207.8759 389.8218 m
207.8759 443.8028 L
167.2622 456.8748 L
167.2622 402.8937 L
207.8759 389.8218 L
f
1 1 0 0 (purple) 0.2361 x
206.8671 390.1465 m
206.8671 444.1275 L
167.5984 456.7665 L
167.5984 402.7853 L
206.8671 390.1465 L
f
1 1 0 0 (purple) 0.2597 x
205.8575 390.4713 m
205.8575 444.4523 L
167.9349 456.6582 L
167.9349 402.6772 L
205.8575 390.4713 L
f
1 1 0 0 (purple) 0.2833 x
204.8486 390.796 m
204.8486 444.7772 L
168.2713 456.5501 L
168.2713 402.5689 L
204.8486 390.796 L
f
1 1 0 0 (purple) 0.3069 x
203.8392 391.1208 m
203.8392 445.102 L
168.6079 456.4416 L
168.6079 402.4607 L
203.8392 391.1208 L
f
1 1 0 0 (purple) 0.3305 x
202.8304 391.4456 m
202.8304 445.4268 L
168.944 456.3335 L
168.944 402.3524 L
202.8304 391.4456 L
f
1 1 0 0 (purple) 0.3542 x
201.8207 391.7706 m
201.8207 445.7517 L
169.2806 456.225 L
169.2806 402.244 L
201.8207 391.7706 L
f
1 1 0 0 (purple) 0.3778 x
200.8119 392.0952 m
200.8119 446.0764 L
169.6169 456.1169 L
169.6169 402.1357 L
200.8119 392.0952 L
f
1 1 0 0 (purple) 0.4014 x
199.8025 392.4202 m
199.8025 446.4014 L
169.9534 456.0086 L
169.9534 402.0276 L
199.8025 392.4202 L
f
1 1 0 0 (purple) 0.425 x
198.7936 392.7448 m
198.7936 446.726 L
170.2897 455.9003 L
170.2897 401.9193 L
198.7936 392.7448 L
f
1 1 0 0 (purple) 0.4486 x
197.7846 393.0697 m
197.7846 447.0507 L
170.6259 455.792 L
170.6259 401.8111 L
197.7846 393.0697 L
f
1 1 0 0 (purple) 0.4722 x
196.7752 393.3945 m
196.7752 447.3757 L
170.9624 455.6838 L
170.9624 401.7027 L
196.7752 393.3945 L
f
1 1 0 0 (purple) 0.4958 x
195.7662 393.7194 m
195.7662 447.7004 L
171.2988 455.5756 L
171.2988 401.5944 L
195.7662 393.7194 L
f
1 1 0 0 (purple) 0.5195 x
194.7567 394.0441 m
194.7567 448.0253 L
171.6354 455.4672 L
171.6354 401.4861 L
194.7567 394.0441 L
f
1 1 0 0 (purple) 0.5431 x
193.7478 394.369 m
193.7478 448.3502 L
171.9717 455.3592 L
171.9717 401.378 L
193.7478 394.369 L
f
1 1 0 0 (purple) 0.5667 x
192.7383 394.6939 m
192.7383 448.6749 L
172.3081 455.2507 L
172.3081 401.2696 L
192.7383 394.6939 L
f
1 1 0 0 (purple) 0.5903 x
191.7294 395.0186 m
191.7294 448.9997 L
172.6444 455.1425 L
172.6444 401.1614 L
191.7294 395.0186 L
f
1 1 0 0 (purple) 0.6139 x
190.72 395.3436 m
190.72 449.3246 L
172.9808 455.034 L
172.9808 401.053 L
190.72 395.3436 L
f
1 1 0 0 (purple) 0.6375 x
189.7109 395.6682 m
189.7109 449.6494 L
173.3172 454.9259 L
173.3172 400.9448 L
189.7109 395.6682 L
f
1 1 0 0 (purple) 0.6611 x
188.7016 395.9932 m
188.7016 449.9742 L
173.6538 454.8176 L
173.6538 400.8364 L
188.7016 395.9932 L
f
1 1 0 0 (purple) 0.6847 x
187.6925 396.3179 m
187.6925 450.2991 L
173.9901 454.7094 L
173.9901 400.7283 L
187.6925 396.3179 L
f
1 1 0 0 (purple) 0.7083 x
186.6831 396.6429 m
186.6831 450.6238 L
174.3264 454.6011 L
174.3264 400.62 L
186.6831 396.6429 L
f
1 1 0 0 (purple) 0.7319 x
185.6744 396.9675 m
185.6744 450.9486 L
174.6627 454.4928 L
174.6627 400.5118 L
185.6744 396.9675 L
f
1 1 0 0 (purple) 0.7556 x
184.6647 397.2925 m
184.6647 451.2734 L
174.9992 454.3845 L
174.9992 400.4035 L
184.6647 397.2925 L
f
1 1 0 0 (purple) 0.7792 x
183.656 397.6171 m
183.656 451.5982 L
175.3356 454.2763 L
175.3356 400.2951 L
183.656 397.6171 L
f
1 1 0 0 (purple) 0.8028 x
182.6463 397.9421 m
182.6463 451.9231 L
175.672 454.168 L
175.672 400.1868 L
182.6463 397.9421 L
f
1 1 0 0 (purple) 0.8264 x
181.6374 398.2668 m
181.6374 452.2478 L
176.0083 454.0597 L
176.0083 400.0787 L
181.6374 398.2668 L
f
U
1 1 0 0 (purple) 0.85 x
180.6286 398.5915 m
180.6286 452.5727 L
176.3446 453.9516 L
176.3446 399.9704 L
180.6286 398.5915 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
245.7608 452.472 m
245.7608 445.4479 228.3734 439.7536 206.926 439.7536 c
185.4786 439.7536 168.0915 445.4479 168.0915 452.472 C
168.0912 459.4959 185.4784 465.1903 206.9258 465.1907 c
228.3733 465.191 245.7606 459.4971 245.7608 452.473 C
245.7608 452.472 L
f
u
1 1 0 0 (purple) 0.575 x
244.7825 452.4564 m
244.7825 445.6911 227.8264 440.2067 206.9105 440.2067 c
185.9946 440.2067 169.0386 445.6911 169.0386 452.4564 C
169.0383 459.2216 185.9943 464.7062 206.9104 464.7065 c
227.8262 464.7068 244.7824 459.2226 244.7825 452.4573 C
244.7825 452.4564 L
f
1 1 0 0 (purple) 0.5 x
243.8251 452.4206 m
243.8251 445.9143 227.2999 440.6397 206.9156 440.6397 c
186.5313 440.6397 170.0063 445.9143 170.0063 452.4206 C
170.0061 458.927 186.5313 464.202 206.9155 464.2021 c
227.2998 464.2026 243.8249 458.9282 243.8251 452.4217 C
243.8251 452.4206 L
f
1 1 0 0 (purple) 0.425 x
242.8677 452.385 m
242.8677 446.1373 226.7736 441.0724 206.9208 441.0724 c
187.0682 441.0724 170.9741 446.1373 170.9741 452.385 C
170.9738 458.6327 187.0681 463.6978 206.9207 463.6979 c
226.7733 463.6982 242.8675 458.6337 242.8677 452.3861 C
242.8677 452.385 L
f
1 1 0 0 (purple) 0.35 x
241.9102 452.3492 m
241.9102 446.3606 226.2469 441.5054 206.9259 441.5054 c
187.605 441.5054 171.9419 446.3606 171.9419 452.3492 C
171.9416 458.3381 187.6049 463.1935 206.9258 463.1937 c
226.2467 463.1939 241.91 458.3391 241.9102 452.3503 C
241.9102 452.3492 L
f
1 1 0 0 (purple) 0.275 x
240.9529 452.3137 m
240.9529 446.5837 225.7205 441.9385 206.9312 441.9385 c
188.1417 441.9385 172.9094 446.5837 172.9094 452.3137 C
172.9091 458.0438 188.1415 462.6892 206.9309 462.6893 c
225.7204 462.6897 240.9526 458.0446 240.9529 452.3146 C
240.9529 452.3137 L
f
U
1 1 0 0 (purple) 0.2 x
239.9954 452.2779 m
239.9954 446.8068 225.1941 442.3714 206.9364 442.3714 c
188.6785 442.3714 173.8771 446.8068 173.8771 452.2779 C
173.8769 457.7493 188.6784 462.185 206.9361 462.1851 c
225.1938 462.1854 239.9951 457.7502 239.9954 452.2789 C
239.9954 452.2779 L
f
U
u
q
245.7853 460.0272 m
245.7853 453.0033 228.3982 447.3088 206.9506 447.3088 c
185.5031 447.3088 168.116 453.0033 168.116 460.0272 C
168.0953 538.1177 L
168.0953 545.1416 185.4825 550.8358 206.9299 550.8358 c
228.3775 550.8358 245.7647 545.1416 245.7647 538.1177 C
245.7853 460.0272 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
245.7853 460.0272 m
245.7853 453.0033 228.3982 447.3088 206.9506 447.3088 c
185.5031 447.3088 168.116 453.0033 168.116 460.0272 C
168.0953 538.1177 L
168.0953 545.1416 185.4825 550.8358 206.9299 550.8358 c
228.3775 550.8358 245.7647 545.1416 245.7647 538.1177 C
245.7853 460.0272 L
f
u
216.9583 438.0439 m
216.9376 526.5247 L
164.214 543.4944 L
164.2347 455.0137 L
216.9583 438.0439 L
f
u
1 1 0 0 (purple) 0.0236 x
215.9495 438.3686 m
215.9288 526.8493 L
164.5504 543.3861 L
164.5711 454.9056 L
215.9495 438.3686 L
f
1 1 0 0 (purple) 0.0472 x
214.9406 438.6934 m
214.9199 527.1738 L
164.8867 543.2779 L
164.9074 454.7973 L
214.9406 438.6934 L
f
1 1 0 0 (purple) 0.0708 x
213.9311 439.0182 m
213.9104 527.4988 L
165.2232 543.1696 L
165.2438 454.6889 L
213.9311 439.0182 L
f
1 1 0 0 (purple) 0.0944 x
212.9222 439.3431 m
212.9015 527.8237 L
165.5595 543.0612 L
165.5802 454.5806 L
212.9222 439.3431 L
f
1 1 0 0 (purple) 0.1181 x
211.9128 439.6681 m
211.8921 528.1485 L
165.8958 542.953 L
165.9165 454.4724 L
211.9128 439.6681 L
f
1 1 0 0 (purple) 0.1417 x
210.9038 439.9927 m
210.8831 528.4733 L
166.2322 542.8447 L
166.2529 454.364 L
210.9038 439.9927 L
f
1 1 0 0 (purple) 0.1653 x
209.8943 440.3174 m
209.8736 528.7981 L
166.5688 542.7364 L
166.5895 454.256 L
209.8943 440.3174 L
f
1 1 0 0 (purple) 0.1889 x
208.8854 440.6423 m
208.8647 529.123 L
166.9051 542.6283 L
166.9258 454.1476 L
208.8854 440.6423 L
f
1 1 0 0 (purple) 0.2125 x
207.8759 440.9673 m
207.8553 529.4479 L
167.2416 542.5199 L
167.2622 454.0393 L
207.8759 440.9673 L
f
1 1 0 0 (purple) 0.2361 x
206.8671 441.292 m
206.8464 529.7726 L
167.5777 542.4116 L
167.5984 453.931 L
206.8671 441.292 L
f
1 1 0 0 (purple) 0.2597 x
205.8575 441.6169 m
205.8369 530.0974 L
167.9143 542.3033 L
167.9349 453.8227 L
205.8575 441.6169 L
f
1 1 0 0 (purple) 0.2833 x
204.8486 441.9416 m
204.8279 530.4222 L
168.2506 542.1952 L
168.2713 453.7144 L
204.8486 441.9416 L
f
1 1 0 0 (purple) 0.3069 x
203.8392 442.2663 m
203.8185 530.7471 L
168.5872 542.0867 L
168.6079 453.6063 L
203.8392 442.2663 L
f
1 1 0 0 (purple) 0.3305 x
202.8304 442.5912 m
202.8097 531.0719 L
168.9233 541.9786 L
168.944 453.498 L
202.8304 442.5912 L
f
1 1 0 0 (purple) 0.3542 x
201.8207 442.9162 m
201.8001 531.3968 L
169.2599 541.8701 L
169.2806 453.3897 L
201.8207 442.9162 L
f
1 1 0 0 (purple) 0.3778 x
200.8119 443.2408 m
200.7913 531.7215 L
169.5962 541.762 L
169.6169 453.2813 L
200.8119 443.2408 L
f
1 1 0 0 (purple) 0.4014 x
199.8025 443.5658 m
199.7819 532.0465 L
169.9327 541.6536 L
169.9534 453.1731 L
199.8025 443.5658 L
f
1 1 0 0 (purple) 0.425 x
198.7936 443.8905 m
198.7728 532.3711 L
170.269 541.5454 L
170.2897 453.0648 L
198.7936 443.8905 L
f
1 1 0 0 (purple) 0.4486 x
197.7846 444.2152 m
197.764 532.6958 L
170.6053 541.4371 L
170.6259 452.9567 L
197.7846 444.2152 L
f
1 1 0 0 (purple) 0.4722 x
196.7752 444.5401 m
196.7544 533.0208 L
170.9417 541.3289 L
170.9624 452.8484 L
196.7752 444.5401 L
f
1 1 0 0 (purple) 0.4958 x
195.7662 444.8649 m
195.7456 533.3455 L
171.278 541.2207 L
171.2988 452.74 L
195.7662 444.8649 L
f
1 1 0 0 (purple) 0.5195 x
194.7567 445.1897 m
194.736 533.6704 L
171.6147 541.1123 L
171.6354 452.6317 L
194.7567 445.1897 L
f
1 1 0 0 (purple) 0.5431 x
193.7478 445.5145 m
193.7272 533.9953 L
171.951 541.0042 L
171.9717 452.5235 L
193.7478 445.5145 L
f
1 1 0 0 (purple) 0.5667 x
192.7383 445.8394 m
192.7176 534.32 L
172.2874 540.8958 L
172.3081 452.4152 L
192.7383 445.8394 L
f
1 1 0 0 (purple) 0.5903 x
191.7294 446.1641 m
191.7087 534.6448 L
172.6237 540.7876 L
172.6444 452.3071 L
191.7294 446.1641 L
f
1 1 0 0 (purple) 0.6139 x
190.72 446.4891 m
190.6993 534.9697 L
172.9601 540.6791 L
172.9808 452.1985 L
190.72 446.4891 L
f
1 1 0 0 (purple) 0.6375 x
189.7109 446.8138 m
189.6903 535.2945 L
173.2965 540.571 L
173.3172 452.0904 L
189.7109 446.8138 L
f
1 1 0 0 (purple) 0.6611 x
188.7016 447.1388 m
188.6809 535.6193 L
173.6331 540.4627 L
173.6538 451.9821 L
188.7016 447.1388 L
f
1 1 0 0 (purple) 0.6847 x
187.6925 447.4634 m
187.6719 535.9442 L
173.9694 540.3545 L
173.9901 451.8739 L
187.6925 447.4634 L
f
1 1 0 0 (purple) 0.7083 x
186.6831 447.7884 m
186.6625 536.2689 L
174.3057 540.2462 L
174.3264 451.7655 L
186.6831 447.7884 L
f
1 1 0 0 (purple) 0.7319 x
185.6744 448.113 m
185.6537 536.5937 L
174.6421 540.1379 L
174.6627 451.6574 L
185.6744 448.113 L
f
1 1 0 0 (purple) 0.7556 x
184.6647 448.438 m
184.6441 536.9185 L
174.9785 540.0296 L
174.9992 451.5491 L
184.6647 448.438 L
f
1 1 0 0 (purple) 0.7792 x
183.656 448.7627 m
183.6353 537.2433 L
175.3149 539.9214 L
175.3356 451.4408 L
183.656 448.7627 L
f
1 1 0 0 (purple) 0.8028 x
182.6463 449.0877 m
182.6257 537.5682 L
175.6513 539.8131 L
175.672 451.3324 L
182.6463 449.0877 L
f
1 1 0 0 (purple) 0.8264 x
181.6374 449.4123 m
181.6167 537.8929 L
175.9876 539.7047 L
176.0083 451.2242 L
181.6374 449.4123 L
f
U
1 1 0 0 (purple) 0.85 x
180.6286 449.7372 m
180.608 538.2178 L
176.3239 539.5967 L
176.3446 451.1159 L
180.6286 449.7372 L
f
U
Q
0 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
245.7402 538.1171 m
245.7402 531.093 228.3528 525.3987 206.9053 525.3987 c
185.4579 525.3987 168.0708 531.093 168.0708 538.1171 C
168.0706 545.141 185.4577 550.8354 206.905 550.8358 c
228.3526 550.8361 245.7399 545.1421 245.7402 538.1181 C
245.7402 538.1171 L
f
U
u
0 To
1 0 0 1 213.6093 427.4626 0 Tp
TP
-22.2853 0 Td
0 Tr
1 g
/_Helvetica 8 Tf
0 Ts
100 Tz
-75 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
10.3502 0 Tl
-0.6 Tc
0 Tw
(0xBFFF FFFF) Tx 
(\r) TX 
TO
0 To
1 0 0 1 213.6093 379.7047 0 Tp
TP
-21.838 0 Td
0 Tr
(0x9FFF FFFF) Tx 
(\r) TX 
TO
0 To
1 0 0 1 213.6093 330.0836 0 Tp
TP
-21.838 0 Td
0 Tr
(0x7FFF FFFF) Tx 
(\r) TX 
TO
0 To
1 0 0 1 213.6093 402.867 0 Tp
TP
-20.7335 0 Td
0 Tr
(0xA000 0000) Tx 
(\r) TX 
TO
0 To
1 0 0 1 213.6093 351.434 0 Tp
TP
-20.2863 0 Td
0 Tr
(0x8000 0000) Tx 
(\r) TX 
TO
0 To
1 0 0 1 213.6093 181.4296 0 Tp
TP
-20.2863 0 Td
0 Tr
(0x0000 0000) Tx 
(\r) TX 
TO
0 To
1 0 0 1 213.6093 514.5373 0 Tp
TP
-22.8788 0 Td
0 Tr
(0x FFFF FFFF) Tx 
(\r) TX 
TO
0 To
1 0 0 1 213.6093 456.8833 0 Tp
TP
-20.9552 0 Td
0 Tr
(0xC000 0000) Tx 
(\r) TX 
TO
U
0 R
0 G
0.5 w
247.9084 459.2337 m
252.5084 459.2337 255 461.7254 255 466.3254 c
255 492.296 l
255 496.5127 257.5875 497.9502 260.6542 497.9502 C
257.5875 497.9502 255 499.3877 255 503.6043 c
255 529 l
255 533.6 252.5084 536.0916 247.9084 536.0916 c
S
247.9084 408.759 m
252.5084 408.759 255 411.2507 255 415.8507 c
255 425.8172 l
255 430.0339 257.5875 431.4714 260.6542 431.4714 C
257.5875 431.4714 255 432.9088 255 437.1254 c
255 446.4213 l
255 451.0213 252.5084 453.5129 247.9084 453.5129 c
S
247.9084 359.2337 m
252.5084 359.2337 255 361.7253 255 366.3253 c
255 376.2919 l
255 380.5086 257.5875 381.9461 260.6542 381.9461 C
257.5875 381.9461 255 383.3836 255 387.6002 c
255 396.896 l
255 401.496 252.5084 403.9876 247.9084 403.9876 c
S
0 To
1 0 0 1 263.6249 497.046 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Helvetica-Oblique 8 Tf
0 Tt
0 Ta
10.3503 0 Tl
0 Tc
(kseg2) Tx 
/_Helvetica 8 Tf
10.3502 0 Tl
( - 1 GB kernel virtual space, \r) Tx 
T*
(              mapped and cached) Tx 
(\r) TX 
TO
0 To
1 0 0 1 263.6249 428.919 0 Tp
TP
0 Tr
/_Helvetica-Oblique 8 Tf
10.3503 0 Tl
(kseg1) Tx 
/_Helvetica 8 Tf
10.3502 0 Tl
( - 512 MB unmapped,\r) Tx 
T*
(             uncached window on\r) Tx 
T*
(             physical memory) Tx 
(\r) TX 
TO
0 To
1 0 0 1 263.6249 380.9193 0 Tp
TP
0 Tr
/_Helvetica-Oblique 8 Tf
10.3503 0 Tl
(kseg0) Tx 
/_Helvetica 8 Tf
10.3502 0 Tl
( - 512 MB unmapped, but\r) Tx 
T*
(             cached, window on\r) Tx 
T*
(             physical memory) Tx 
(\r) TX 
TO
0 To
1 0 0 1 263.6249 265.9563 0 Tp
TP
0 Tr
/_Helvetica-Oblique 8 Tf
10.3503 0 Tl
(kuseg) Tx 
/_Helvetica 8 Tf
10.3502 0 Tl
( - 2 GB user process \r) Tx 
T*
(               virtual space, mapped \r) Tx 
T*
(               and cached) Tx 
(\r) TX 
TO
442.8268 107.2205 m
442.8268 594.7795 L
111.1732 594.7795 L
111.1732 107.2205 L
442.8268 107.2205 L
(f) *
1 1 0 0 (purple) 0.9 x
257.776 407.9461 m
F
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

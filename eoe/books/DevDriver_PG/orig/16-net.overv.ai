%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) version 3 for SGI
%%For: () ()
%%Title: (/usr/people/gloria/Adobe/DevDrivers/Fig9-1.ai)
%%CreationDate: (10/21/94) (11:18)
%%BoundingBox: 104 290 468 645
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%+ Helvetica-Bold
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 269 353 269 353
%AI3_TileBox: -7 -12 545 718
%AI3_DocumentPreview: Header
%%Template:
%%PageOrigin:-7 -12
%%AI3_PaperRect:0 792 612 0
%%AI3_Margin:30 31 30 31
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec

%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking

%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_typography_AI3 87 dict dup begin put

% variables in Typography proc set - define these to null so that
% importing application would not have problem due to bind.
[
/Tx
/_render
/ddef
/_tm
/sp
/_renderStart
/_cx
/_ax
/_hyphen
/_leading
/_tDict
/swj
/_rise
/N
/_nativeEncoding
/_fScl
/W
/_pjsf
/_pjss
/_useNativeEncoding
/_psf
/_renderEnd
/sw
/Tj
/_cy
/jsp
/_ay
/_hs
/_ctm
/FontName
/_sp
/_pss
/_tempEncode
/_mtx
/npop
counttomark { null def } repeat pop

/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def

% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll

		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....

			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def

/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def

% re-define font
% expected arguments
% for 'normal fonts : 
%	[ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% 	[ ... number value stream ... /_Helvetica-Bold/Helvetica-Bold 
%	direction fontScript defaultEncoding TZ
/TZ		
{
	% platform dependent coding flag
	/_useNativeEncoding exch def

	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	findfont dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the use platform encoding flag is true
		% install AI platform encoding
		% else leave the base encoding in effect

		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def

% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def

/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def

/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def

/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def

/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def

/i1
{
W N
} def

/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def

/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def

/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def

% font operators

% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def

/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def

% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def

/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def

% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def

/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def

/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def

/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def

/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def


% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def

/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def

/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def

/Tt	% set user tracking				% userTracking Tt -
{
pop
} def

/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def

/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def

/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def

/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def

/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def

/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def

/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def

/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def

/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def


% Text Bodies
/TX {pop} def

%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -

/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def

/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def

/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def

/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def

/T+	% discretionary hyphen hyphen	% - T+ -
{} def

/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def

/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def

currentdict readonly pop end
setpacking

%%EndResource

%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 1
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)

currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put

% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def

% paint operators
/cf	currentflat def	% - cf flatness

% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def

% typography operators
/Tx {} def
/Tj {} def

% compound path operators
/CRender {} def

% printing
/_AI3_savepage {} def

% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def

% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def

% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse

% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def

% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def

% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def

% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat
userdict begin
/showpage {} def
false setoverprint
pop
} def
/~					% - ~ -
{
end
_i restore
} def

% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def

% locked object operator
/A					% value A -
{
pop
} def

currentdict readonly pop end
setpacking

% annotate page operator
/annotatepage
{
} def
%%EndResource
%AI3-Grid.0 18 18 3 0 0 0 3
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
%%IncludeFont: Helvetica-Bold
Adobe_cmykcolor /initialize get exec

Adobe_cshow /initialize get exec

Adobe_customcolor /initialize get exec

Adobe_typography_AI3 /initialize get exec


Adobe_IllustratorA_AI3 /initialize get exec

[
45/minus 129/florin/dagger/guilsinglleft/guilsinglright/quotesingle
/quotedblleft/quotedblbase/quotedblright/fl/fi/Lslash/OE/ellipsis
/quotesinglbase/emdash/dotlessi/grave/perthousand/circumflex/tilde/bullet
/breve/dotaccent/endash/fraction/ring/lslash/oe/hungarumlaut
/ogonek/caron/daggerdbl 164/currency 166/brokenbar 168/dieresis
/copyright/ordfeminine 172/logicalnot/hyphen/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
183/periodcentered/cedilla/onesuperior/ordmasculine 188/onequarter
/onehalf/threequarters 192/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde
/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae
/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex
/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding
%%EndSetup
0 A
0 To
1 0 0 1 167.2652 392.387 0 Tp
TP
-4.2525 0 Td
0 Tr
0 O
0 g
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
/_Helvetica 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(IP\r) Tx 
TO
u
0 R
0 G
0.5 w
301.4221 619.875 m
301.4221 557 l
S
u
0 O
0 g
298.2387 560.7341 m
301.4948 554.8697 L
304.7516 560.7341 l
298.2387 560.7341 l
b
U
u
304.5094 618.5695 m
301.2533 624.4338 L
297.9965 618.5695 l
304.5094 618.5695 l
b
U
U
u
2 w
113.75 582 m
441.75 582 l
S
U
0 To
1 0 0 1 158.2387 302.823 0 Tp
TP
-12.7529 0 Td
0 Tr
0 O
0 g
1 w
(Native\r) Tx 
-31.0093 -11 Td
(\(bundled with system\)\r) Tx 
TO
0 To
1 0 0 1 427.75 303.323 0 Tp
TP
-16.7579 0 Td
0 Tr
(Optional\r) Tx 
-8.505 -11 Td
(dlpi package\r) Tx 
TO
0 To
1 0 0 1 290.75 302.823 0 Tp
TP
-16.7579 0 Td
0 Tr
(Optional\r) Tx 
-16.2586 -11 Td
(svr4net package\r) Tx 
TO
0 R
0 G
2 J 0.75 w
221.8517 385.5 m
221.8517 408.5 L
113.6483 408.5 L
113.6483 385.5 L
221.8517 385.5 L
s
221.8517 408.75 m
221.8517 504.25 L
113.6483 504 L
113.6483 408.5 L
221.8517 408.75 L
s
0 J
166.75 408.5 m
166.75 503.5 l
S
0 To
1 0 0 1 193.25 452.823 0 Tp
TP
-9.4993 0 Td
0 Tr
0 O
0 g
1 w
(UCP\r) Tx 
TO
0 To
1 0 0 1 140.75 452.323 0 Tp
TP
-8.9999 0 Td
0 Tr
(TCP\r) Tx 
TO
u
0 R
0 G
2 J 0.75 w
338.3517 534.5 m
338.3517 554 L
263.1483 554 L
263.1483 534.5 L
338.3517 534.5 L
s
U
u
0 J
287.75 553.75 m
287.75 534.25 l
S
U
u
2 J
338.3517 515 m
338.3517 534.5 L
263.1483 534.5 L
263.1483 515 L
338.3517 515 L
s
U
0 To
1 0 0 1 300.125 521.823 0 Tp
TP
-17.7569 0 Td
0 Tr
0 O
0 g
0 J 1 w
(tpisocket\r) Tx 
TO
0 To
1 0 0 1 326.375 540.323 0 Tp
TP
-3.753 0 Td
0 Tr
(...\r) Tx 
TO
0 To
1 0 0 1 301.625 540.073 0 Tp
TP
-9.7559 0 Td
0 Tr
(tpidp\r) Tx 
TO
0 To
1 0 0 1 275.625 539.823 0 Tp
TP
-9.5039 0 Td
0 Tr
(tpicp\r) Tx 
TO
u
0 R
0 G
0.75 w
314.375 554 m
314.375 534.5 l
S
U
u
2 J
338.2267 584.5 m
338.2267 604 L
263.0233 604 L
263.0233 584.5 L
338.2267 584.5 L
s
U
0 To
1 0 0 1 306.5 591.323 0 Tp
TP
-24.0073 0 Td
0 Tr
0 O
0 g
0 J 1 w
(TLI   Library\r) Tx 
TO
u
0 R
0 G
1.5 w
238.375 564.25 m
347.375 564.25 l
S
U
0 To
1 0 0 1 267.625 566.573 0 Tp
TP
-30.0057 0 Td
0 Tr
0 O
0 g
1 w
(STREAMS/TPI\r) Tx 
TO
u
0 R
0 G
1.5 w
238.125 609.25 m
347.125 609.25 l
S
U
0 To
1 0 0 1 244.75 611.823 0 Tp
TP
-6.7499 0 Td
0 Tr
0 O
0 g
1 w
/_Helvetica-Bold 9 Tf
(TLI\r) Tx 
TO
u
0 R
0 G
1.5 w
113.5 509 m
222.5 509 l
S
U
0 To
1 0 0 1 128.25 510.823 0 Tp
TP
-14.2559 0 Td
0 Tr
0 O
0 g
1 w
(socket\r) Tx 
TO
u
0 R
0 G
1.5 w
113.375 367 m
222.375 367 l
S
U
0 To
1 0 0 1 122.75 369.323 0 Tp
TP
-9.4994 0 Td
0 Tr
0 O
0 g
1 w
(ifnet\r) Tx 
TO
0 To
1 0 0 1 417.25 572.823 0 Tp
TP
-26.7613 0 Td
0 Tr
(Kernel Level\r) Tx 
TO
0 To
1 0 0 1 420.75 585.823 0 Tp
TP
-22.7609 0 Td
0 Tr
(User Level\r) Tx 
TO
0 To
1 0 0 1 301.25 637.323 0 Tp
TP
-23.6339 0 Td
0 Tr
(TLI-based \r) Tx 
-3.3704 -11 Td
(Applications\r) Tx 
TO
0 To
1 0 0 1 166.75 634.823 0 Tp
TP
-30.3883 0 Td
0 Tr
(Socket-based\r) Tx 
3.3841 -11 Td
(Applications\r) Tx 
TO
0 To
1 0 0 1 417.249 501.573 0 Tp
TP
-41.503 0 Td
0 Tr
(STREAMS Modules\r) Tx 
TO
0 R
0 G
0.5 w
166.7981 616.2232 m
166.7981 513.0982 l
S
u
0 O
0 g
163.3569 515.3442 m
166.613 509.4799 L
169.8698 515.3442 l
163.3569 515.3442 l
b
U
u
169.8854 614.9177 m
166.6293 620.782 L
163.3724 614.9177 l
169.8854 614.9177 l
b
U
u
184.7981 379.4732 m
184.7981 354.5982 l
S
U
u
0 O
0 g
181.6146 356.5823 m
184.8707 350.718 L
188.1275 356.5823 l
181.6146 356.5823 l
b
U
u
188.1354 379.1677 m
184.8793 385.032 L
181.6224 379.1677 l
188.1354 379.1677 l
b
U
u
2 J 0.75 w
208.4767 333.625 m
208.4767 349.875 L
177.0233 349.875 L
177.0233 333.625 L
208.4767 333.625 L
s
U
0 To
1 0 0 1 192.875 338.823 0 Tp
TP
-8.2529 0 Td
0 Tr
0 O
0 g
0 J 1 w
/_Helvetica 9 Tf
(xpi0\r) Tx 
TO
0 R
0 G
2 J 0.75 w
157.4767 333.625 m
157.4767 349.875 L
126.0233 349.875 L
126.0233 333.625 L
157.4767 333.625 L
s
0 To
1 0 0 1 141.875 338.823 0 Tp
TP
-7.254 0 Td
0 Tr
0 O
0 g
0 J 1 w
(ec0\r) Tx 
TO
0 To
1 0 0 1 417.5 370.573 0 Tp
TP
-7.0019 0 Td
0 Tr
(dlpi\r) Tx 
TO
u
0 R
0 G
2 J 0.75 w
447.4767 365 m
447.4767 381.25 L
388.0233 381.25 L
388.0233 365 L
447.4767 365 L
s
U
0 To
1 0 0 1 375.75 400.823 0 Tp
TP
-33.0071 0 Td
0 Tr
0 O
0 g
0 J 1 w
(STREAMS/DLPI\r) Tx 
TO
u
0 R
0 G
1.5 w
342.25 399 m
451.25 399 l
S
U
u
0.5 w
417.1731 410.3482 m
417.1731 385.4732 l
S
u
0 O
0 g
413.9896 387.7073 m
417.2457 381.843 L
420.5025 387.7073 l
413.9896 387.7073 l
b
U
u
420.5104 408.2927 m
417.2543 414.157 L
413.9974 408.2927 l
420.5104 408.2927 l
b
U
U
0 To
1 0 0 1 165.75 321.697 0 Tp
TP
-31.2658 0 Td
0 Tr
1 w
/_Helvetica-Bold 9 Tf
(Device Drivers\r) Tx 
TO
u
0 R
0 G
2 J 0.75 w
448.2267 479.875 m
448.2267 496.125 L
388.7733 496.125 L
388.7733 479.875 L
448.2267 479.875 L
s
U
u
448.2267 439.375 m
448.2267 455.625 L
388.7733 455.625 L
388.7733 439.375 L
448.2267 439.375 L
s
U
u
0 O
0 g
0 J 1 w
417.7853 457.927 m
418.7794 457.927 419.5854 458.733 419.5854 459.7271 c
419.5854 460.7213 418.7794 461.5272 417.7853 461.5272 c
416.7911 461.5272 415.9851 460.7213 415.9851 459.7271 c
415.9851 458.733 416.7911 457.927 417.7853 457.927 c
f
417.7853 459.7271 m
F
U
u
417.8626 473.3874 m
418.8568 473.3874 419.6627 474.1933 419.6627 475.1875 c
419.6627 476.1817 418.8568 476.9876 417.8626 476.9876 c
416.8684 476.9876 416.0625 476.1817 416.0625 475.1875 c
416.0625 474.1933 416.8684 473.3874 417.8626 473.3874 c
f
417.8626 475.1875 m
F
U
u
417.6875 465.3874 m
418.6817 465.3874 419.4876 466.1933 419.4876 467.1875 c
419.4876 468.1817 418.6817 468.9876 417.6875 468.9876 c
416.6933 468.9876 415.8874 468.1817 415.8874 467.1875 c
415.8874 466.1933 416.6933 465.3874 417.6875 465.3874 c
f
417.6875 467.1875 m
F
U
0.6 g
383.625 371.5 m
383.625 373.5 L
189.375 373.5 L
189.375 371.5 L
383.625 371.5 L
f
u
0 R
0.6 G
0.5 w
191.0823 375.5104 m
185.218 372.2543 L
191.0823 368.9975 l
191.0823 375.5104 l
b
U
u
382.1677 368.9896 m
388.032 372.2457 L
382.1677 375.5025 l
382.1677 368.9896 l
b
U
0.4 g
1 w
258.0982 522.8269 m
F
u
u
0.6 g
257.25 522.25 m
257.25 524.25 L
172.75 524.25 L
172.75 522.25 L
257.25 522.25 L
f
215 523.25 m
F
U
U
0.4 g
170.7232 522.8269 m
F
u
0.6 g
0 R
0.6 G
0.5 w
172.9573 526.5104 m
167.093 523.2543 L
172.9573 519.9975 l
172.9573 526.5104 l
b
U
u
256.5427 519.9896 m
262.407 523.2457 L
256.5427 526.5025 l
256.5427 519.9896 l
b
U
%%PageTrailer
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec

Adobe_typography_AI3 /terminate get exec


Adobe_customcolor /terminate get exec

Adobe_cshow /terminate get exec

Adobe_cmykcolor /terminate get exec

Adobe_packedarray /terminate get exec

%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (overview.dma.i.o.ai)
%%CreationDate: (10/4/95) (11:08 AM)
%%BoundingBox: 187 238 436 444
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (dark gold)
%%+ (dark green)
%%+ (equipment grey)
%%+ (purple)
%%+ (yellow)
%%CMYKCustomColor: 0 0 0 1 (custom black)
%%+ 0.25 0.55 1 0.4 (dark gold)
%%+ 1 0 0.75 0.35 (dark green)
%%+ 0.25 0.25 0.5 0.25 (equipment grey)
%%+ 0.8 0 1 0 (green)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%%+ 0 0.15 1 0 (yellow)
%AI3_TemplateBox: 279 364 279 364
%AI3_TileBox: 0 0 552 730
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
 end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_cmykcolor eq
	{
 end
	} if
} def
/setcmykcolor
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
u
u
0 O
1 0 0.75 0.35 (dark green) 0 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
272.0892 238.77 m
285.6999 238.77 296.7339 249.804 296.7339 263.4149 c
296.7339 277.0255 285.6999 288.0596 272.0892 288.0596 c
258.4784 288.0596 247.4444 277.0255 247.4444 263.4149 c
247.4444 249.804 258.4784 238.77 272.0892 238.77 c
f
U
u
1 0 0.75 0.35 (dark green) 0.0562 x
295.1441 263.9594 m
295.1441 250.9259 284.578 240.3599 271.5445 240.3599 c
258.511 240.3599 247.945 250.9259 247.945 263.9594 c
247.945 276.9929 258.511 287.559 271.5445 287.559 c
284.578 287.559 295.1441 276.9929 295.1441 263.9594 c
f
1 0 0.75 0.35 (dark green) 0.1125 x
293.5543 264.5041 m
293.5543 252.0478 283.4562 241.9496 271 241.9496 c
258.5438 241.9496 248.4457 252.0478 248.4457 264.5041 c
248.4457 276.9602 258.5438 287.0584 271 287.0584 c
283.4562 287.0584 293.5543 276.9602 293.5543 264.5041 c
f
1 0 0.75 0.35 (dark green) 0.1687 x
291.9646 265.0486 m
291.9646 253.1694 282.3345 243.5395 270.4555 243.5395 c
258.5765 243.5395 248.9463 253.1694 248.9463 265.0486 c
248.9463 276.9276 258.5765 286.5577 270.4555 286.5577 c
282.3345 286.5577 291.9646 276.9276 291.9646 265.0486 c
f
1 0 0.75 0.35 (dark green) 0.225 x
290.3747 265.5932 m
290.3747 254.2914 281.2126 245.1291 269.9108 245.1291 c
258.6091 245.1291 249.4468 254.2914 249.4468 265.5932 c
249.4468 276.8948 258.6091 286.0571 269.9108 286.0571 c
281.2126 286.0571 290.3747 276.8948 290.3747 265.5932 c
f
1 0 0.75 0.35 (dark green) 0.2812 x
288.7851 266.1378 m
288.7851 255.4132 280.0908 246.719 269.3663 246.719 c
258.6417 246.719 249.9474 255.4132 249.9474 266.1378 c
249.9474 276.8623 258.6417 285.5564 269.3663 285.5564 c
280.0908 285.5564 288.7851 276.8623 288.7851 266.1378 c
f
1 0 0.75 0.35 (dark green) 0.3375 x
287.1953 266.6824 m
287.1953 256.535 278.969 248.3087 268.8217 248.3087 c
258.6744 248.3087 250.4481 256.535 250.4481 266.6824 c
250.4481 276.8295 258.6744 285.0558 268.8217 285.0558 c
278.969 285.0558 287.1953 276.8295 287.1953 266.6824 c
f
1 0 0.75 0.35 (dark green) 0.3937 x
285.6055 267.2269 m
285.6055 257.6568 277.8471 249.8985 268.2772 249.8985 c
258.7072 249.8985 250.9488 257.6568 250.9488 267.2269 c
250.9488 276.7969 258.7072 284.5551 268.2772 284.5551 c
277.8471 284.5551 285.6055 276.7969 285.6055 267.2269 c
f
1 0 0.75 0.35 (dark green) 0.45 x
284.0157 267.7716 m
284.0157 258.7786 276.7254 251.4883 267.7325 251.4883 c
258.7397 251.4883 251.4494 258.7786 251.4494 267.7716 c
251.4494 276.7641 258.7397 284.0546 267.7325 284.0546 c
276.7254 284.0546 284.0157 276.7641 284.0157 267.7716 c
f
1 0 0.75 0.35 (dark green) 0.5062 x
282.4259 268.3161 m
282.4259 259.9005 275.6035 253.0781 267.188 253.0781 c
258.7723 253.0781 251.9501 259.9005 251.9501 268.3161 c
251.9501 276.7316 258.7723 283.554 267.188 283.554 c
275.6035 283.554 282.4259 276.7316 282.4259 268.3161 c
f
1 0 0.75 0.35 (dark green) 0.5625 x
280.8361 268.8607 m
280.8361 261.0222 274.4817 254.6678 266.6434 254.6678 c
258.8051 254.6678 252.4506 261.0222 252.4506 268.8607 c
252.4506 276.699 258.8051 283.0534 266.6434 283.0534 c
274.4817 283.0534 280.8361 276.699 280.8361 268.8607 c
f
1 0 0.75 0.35 (dark green) 0.6187 x
279.2464 269.4052 m
279.2464 262.1441 273.36 256.2577 266.0988 256.2577 c
258.8377 256.2577 252.9513 262.1441 252.9513 269.4052 c
252.9513 276.6662 258.8377 282.5527 266.0988 282.5527 c
273.36 282.5527 279.2464 276.6662 279.2464 269.4052 c
f
1 0 0.75 0.35 (dark green) 0.675 x
277.6565 269.9497 m
277.6565 263.2659 272.238 257.8474 265.5542 257.8474 c
258.8704 257.8474 253.4517 263.2659 253.4517 269.9497 c
253.4517 276.6336 258.8704 282.0521 265.5542 282.0521 c
272.238 282.0521 277.6565 276.6336 277.6565 269.9497 c
f
1 0 0.75 0.35 (dark green) 0.7312 x
276.0669 270.4944 m
276.0669 264.3877 271.1162 259.4372 265.0097 259.4372 c
258.903 259.4372 253.9525 264.3877 253.9525 270.4944 c
253.9525 276.6009 258.903 281.5515 265.0097 281.5515 c
271.1162 281.5515 276.0669 276.6009 276.0669 270.4944 c
f
1 0 0.75 0.35 (dark green) 0.7875 x
274.4771 271.0389 m
274.4771 265.5095 269.9945 261.027 264.465 261.027 c
258.9357 261.027 254.453 265.5095 254.453 271.0389 c
254.453 276.5683 258.9357 281.0508 264.465 281.0508 c
269.9945 281.0508 274.4771 276.5683 274.4771 271.0389 c
f
1 0 0.75 0.35 (dark green) 0.8437 x
272.8873 271.5835 m
272.8873 266.6315 268.8726 262.6168 263.9205 262.6168 c
258.9684 262.6168 254.9537 266.6315 254.9537 271.5835 c
254.9537 276.5355 258.9684 280.5502 263.9205 280.5502 c
268.8726 280.5502 272.8873 276.5355 272.8873 271.5835 c
f
U
u
1 0 0.75 0.35 (dark green) 0.9 x
263.3759 264.2066 m
267.7508 264.2066 271.2975 267.7531 271.2975 272.1281 c
271.2975 276.5028 267.7508 280.0495 263.3759 280.0495 c
259.001 280.0495 255.4543 276.5028 255.4543 272.1281 c
255.4543 267.7531 259.001 264.2066 263.3759 264.2066 c
f
U
U
0 O
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0.5 w
257.6139 313.9892 m
257.6139 286.1667 l
262.3958 286.1667 l
254.5397 278.3106 L
246.6837 286.1667 l
251.4656 286.1667 l
251.4656 313.9892 L
257.6139 313.9892 L
b
285.7156 307.9892 m
280.9337 307.9891 l
288.7896 315.8452 L
296.6458 307.9893 l
291.8639 307.9892 L
291.8639 286.1667 l
296.6458 286.1667 l
288.7897 278.3106 L
280.9337 286.1667 l
285.7156 286.1667 l
285.7156 307.9892 L
b
264.1156 285.2817 m
264.1152 307.9792 l
259.3333 307.9791 l
267.1892 315.8353 L
275.0454 307.9794 l
270.2634 307.9793 l
270.2638 285.2817 L
264.1156 285.2817 L
b
429.0843 301.9157 m
379.8677 277.3522 L
377.1407 282.8625 L
426.3573 307.4261 l
429.3573 308.7794 429.9319 311.5134 426.9733 314.472 C
340.9307 400.5099 l
337.5498 397.128 l
337.5481 408.2383 L
348.6584 408.2399 l
345.2775 404.858 l
431.3202 318.8202 L
437.0294 313.1109 435.8343 305.4157 429.0843 301.9157 c
b
296.1151 266.5972 m
319.0002 266.5968 l
319.0002 271.3788 l
326.8562 263.5226 L
319 255.6667 l
319.0001 260.4486 l
296.115 260.449 L
296.1151 266.5972 L
b
1 A
u
q
1 w
359.2686 340.568 m
359.2686 325.0028 320.7385 312.3838 273.2102 312.3838 c
225.6822 312.3838 187.152 325.0028 187.152 340.568 C
187.1062 361.0014 L
187.1062 376.5664 225.6365 389.1849 273.1643 389.1849 c
320.6926 389.1849 359.223 376.5664 359.223 361.0014 C
359.2686 340.568 L
h
W
n
0 O
1 1 0 0 (purple) 0 x
359.2686 340.568 m
359.2686 325.0028 320.7385 312.3838 273.2102 312.3838 c
225.6822 312.3838 187.152 325.0028 187.152 340.568 C
187.1062 361.0014 L
187.1062 376.5664 225.6365 389.1849 273.1643 389.1849 c
320.6926 389.1849 359.223 376.5664 359.223 361.0014 C
359.2686 340.568 L
f
u
295.3875 291.8525 m
295.3416 335.311 L
178.5051 372.9162 L
178.551 329.4579 L
295.3875 291.8525 L
f
u
1 1 0 0 (purple) 0.0236 x
293.1519 292.5721 m
293.1061 336.0304 L
179.2506 372.6762 L
179.2965 329.2184 L
293.1519 292.5721 L
f
1 1 0 0 (purple) 0.0472 x
290.9162 293.2919 m
290.8704 336.7494 L
179.9958 372.4364 L
180.0417 328.9784 L
290.9162 293.2919 L
f
1 1 0 0 (purple) 0.0708 x
288.6791 294.0116 m
288.6333 337.4696 L
180.7415 372.1964 L
180.7872 328.7382 L
288.6791 294.0116 L
f
1 1 0 0 (purple) 0.0944 x
286.4434 294.7316 m
286.3975 338.1896 L
181.4868 371.9562 L
181.5326 328.4982 L
286.4434 294.7316 L
f
1 1 0 0 (purple) 0.1181 x
284.2065 295.4518 m
284.1607 338.9094 L
182.232 371.7165 L
182.2779 328.2584 L
284.2065 295.4518 L
f
1 1 0 0 (purple) 0.1417 x
281.9706 296.1711 m
281.9247 339.6292 L
182.9775 371.4765 L
183.0234 328.0182 L
281.9706 296.1711 L
f
1 1 0 0 (purple) 0.1653 x
279.7335 296.8907 m
279.6876 340.3489 L
183.7234 371.2365 L
183.7693 327.7789 L
279.7335 296.8907 L
f
1 1 0 0 (purple) 0.1889 x
277.4978 297.6107 m
277.4519 341.0689 L
184.4687 370.9969 L
184.5145 327.5386 L
277.4978 297.6107 L
f
1 1 0 0 (purple) 0.2125 x
275.2607 298.3309 m
275.2151 341.7889 L
185.2143 370.7567 L
185.26 327.2987 L
275.2607 298.3309 L
f
1 1 0 0 (purple) 0.2361 x
273.0252 299.0504 m
272.9793 342.5084 L
185.9591 370.5167 L
186.005 327.0587 L
273.0252 299.0504 L
f
1 1 0 0 (purple) 0.2597 x
270.7879 299.7704 m
270.7422 343.2282 L
186.7051 370.2767 L
186.7507 326.8186 L
270.7879 299.7704 L
f
1 1 0 0 (purple) 0.2833 x
268.5522 300.4899 m
268.5063 343.9479 L
187.4503 370.0372 L
187.4962 326.5787 L
268.5522 300.4899 L
f
1 1 0 0 (purple) 0.3069 x
266.3153 301.2095 m
266.2694 344.6679 L
188.1962 369.7967 L
188.2421 326.3391 L
266.3153 301.2095 L
f
1 1 0 0 (purple) 0.3305 x
264.0798 301.9294 m
264.0339 345.3877 L
188.941 369.5572 L
188.9869 326.0991 L
264.0798 301.9294 L
f
1 1 0 0 (purple) 0.3542 x
261.8423 302.6496 m
261.7966 346.1077 L
189.6869 369.3167 L
189.7328 325.8591 L
261.8423 302.6496 L
f
1 1 0 0 (purple) 0.3778 x
259.6068 303.369 m
259.5611 346.8272 L
190.4322 369.0772 L
190.478 325.6189 L
259.6068 303.369 L
f
1 1 0 0 (purple) 0.4014 x
257.3699 304.0892 m
257.3243 347.5474 L
191.1779 368.8369 L
191.2237 325.3791 L
257.3699 304.0892 L
f
1 1 0 0 (purple) 0.425 x
255.1342 304.8087 m
255.0881 348.2667 L
191.9231 368.5972 L
191.969 325.1391 L
255.1342 304.8087 L
f
1 1 0 0 (purple) 0.4486 x
252.8982 305.5282 m
252.8526 348.9863 L
192.6684 368.3572 L
192.714 324.8996 L
252.8982 305.5282 L
f
1 1 0 0 (purple) 0.4722 x
250.6614 306.2482 m
250.6152 349.7065 L
193.4138 368.1174 L
193.4597 324.6596 L
250.6614 306.2482 L
f
1 1 0 0 (purple) 0.4958 x
248.4254 306.968 m
248.3797 350.4261 L
194.1591 367.8777 L
194.2052 324.4194 L
248.4254 306.968 L
f
1 1 0 0 (purple) 0.5195 x
246.1883 307.6878 m
246.1424 351.146 L
194.9052 367.6374 L
194.9511 324.1794 L
246.1883 307.6878 L
f
1 1 0 0 (purple) 0.5431 x
243.9526 308.4075 m
243.9069 351.866 L
195.6505 367.3979 L
195.6963 323.9396 L
243.9526 308.4075 L
f
1 1 0 0 (purple) 0.5667 x
241.7155 309.1275 m
241.6696 352.5856 L
196.3959 367.1576 L
196.4418 323.6996 L
241.7155 309.1275 L
f
1 1 0 0 (purple) 0.5903 x
239.4798 309.847 m
239.4339 353.3053 L
197.1412 366.9179 L
197.187 323.46 L
239.4798 309.847 L
f
1 1 0 0 (purple) 0.6139 x
237.2429 310.5673 m
237.197 354.0253 L
197.8866 366.6774 L
197.9325 323.2194 L
237.2429 310.5673 L
f
1 1 0 0 (purple) 0.6375 x
235.0067 311.2868 m
234.9611 354.7451 L
198.6321 366.4379 L
198.678 322.9798 L
235.0067 311.2868 L
f
1 1 0 0 (purple) 0.6611 x
232.7701 312.007 m
232.7242 355.4648 L
199.378 366.1979 L
199.4239 322.7398 L
232.7701 312.007 L
f
1 1 0 0 (purple) 0.6847 x
230.5339 312.7263 m
230.4883 356.1848 L
200.1233 365.9581 L
200.1691 322.5001 L
230.5339 312.7263 L
f
1 1 0 0 (purple) 0.7083 x
228.2971 313.4465 m
228.2514 356.9044 L
200.8685 365.7181 L
200.9144 322.2599 L
228.2971 313.4465 L
f
1 1 0 0 (purple) 0.7319 x
226.0617 314.1659 m
226.0159 357.6241 L
201.614 365.4781 L
201.6596 322.0203 L
226.0617 314.1659 L
f
1 1 0 0 (purple) 0.7556 x
223.8243 314.8861 m
223.7786 358.3439 L
202.3594 365.2381 L
202.4053 321.7803 L
223.8243 314.8861 L
f
1 1 0 0 (purple) 0.7792 x
221.589 315.6056 m
221.5431 359.0637 L
203.1049 364.9984 L
203.1508 321.5403 L
221.589 315.6056 L
f
1 1 0 0 (purple) 0.8028 x
219.3514 316.3258 m
219.3058 359.7836 L
203.8504 364.7584 L
203.8963 321.3001 L
219.3514 316.3258 L
f
1 1 0 0 (purple) 0.8264 x
217.1157 317.0451 m
217.0698 360.5032 L
204.5956 364.5182 L
204.6415 321.0603 L
217.1157 317.0451 L
f
U
1 1 0 0 (purple) 0.85 x
214.8802 317.7651 m
214.8345 361.2232 L
205.3409 364.2788 L
205.3868 320.8204 L
214.8802 317.7651 L
f
U
Q
1 A
0 O
1 1 0 0 (purple) 0.65 x
0 i
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
359.1687 361 m
359.1687 345.4345 320.6379 332.8158 273.1098 332.8158 c
225.582 332.8158 187.0519 345.4345 187.0519 361 C
187.0514 376.5651 225.5816 389.184 273.1092 389.1849 c
320.6374 389.1856 359.168 376.5675 359.1687 361.0022 C
359.1687 361 L
f
u
286.0913 362.9247 m
286.0913 358.6913 296.5706 355.2594 309.497 355.2594 c
322.4232 355.2594 332.9024 358.6913 332.9024 362.9247 C
332.9025 367.158 322.4234 370.59 309.4971 370.5902 c
296.5708 370.5904 286.0915 367.1587 286.0913 362.9253 C
286.0913 362.9247 L
f
u
1 1 0 0 (purple) 0.6187 x
0.9687 w
286.3801 362.9861 m
286.3801 358.8621 296.5885 355.5189 309.1806 355.5189 c
321.7726 355.5189 331.9808 358.8621 331.9808 362.9861 C
331.9809 367.1099 321.7727 370.4532 309.1807 370.4534 c
296.5886 370.4535 286.3803 367.1105 286.3801 362.9867 C
286.3801 362.9861 L
f
1 1 0 0 (purple) 0.5875 x
0.9375 w
286.6689 363.0475 m
286.6689 359.033 296.6063 355.7785 308.8641 355.7785 c
321.122 355.7785 331.0592 359.033 331.0592 363.0475 C
331.0593 367.0618 321.1221 370.3163 308.8643 370.3165 c
296.6064 370.3167 286.6691 367.0625 286.6689 363.048 C
286.6689 363.0475 L
f
1 1 0 0 (purple) 0.5562 x
0.9062 w
286.9577 363.1088 m
286.9577 359.2038 296.6241 356.0381 308.5477 356.0381 c
320.4713 356.0381 330.1376 359.2038 330.1376 363.1088 C
330.1377 367.0137 320.4714 370.1795 308.5479 370.1797 c
296.6242 370.1799 286.9579 367.0143 286.9577 363.1094 C
286.9577 363.1088 L
f
1 1 0 0 (purple) 0.525 x
0.875 w
287.2465 363.1702 m
287.2465 359.3746 296.6419 356.2977 308.2313 356.2977 c
319.8207 356.2977 329.216 359.3746 329.216 363.1702 C
329.2161 366.9656 319.8208 370.0427 308.2315 370.0429 c
296.6421 370.043 287.2466 366.9662 287.2465 363.1707 C
287.2465 363.1702 L
f
1 1 0 0 (purple) 0.4937 x
0.8437 w
287.5353 363.2316 m
287.5353 359.5455 296.6598 356.5572 307.9149 356.5572 c
319.17 356.5572 328.2944 359.5455 328.2944 363.2316 C
328.2945 366.9176 319.1701 369.9058 307.9151 369.906 c
296.6599 369.9062 287.5354 366.9181 287.5353 363.2321 C
287.5353 363.2316 L
f
1 1 0 0 (purple) 0.4625 x
0.8125 w
287.8241 363.2929 m
287.8241 359.7163 296.6776 356.8168 307.5985 356.8168 c
318.5194 356.8168 327.3728 359.7163 327.3728 363.2929 C
327.3729 366.8695 318.5195 369.769 307.5987 369.7692 c
296.6777 369.7694 287.8242 366.87 287.8241 363.2935 C
287.8241 363.2929 L
f
1 1 0 0 (purple) 0.4312 x
0.7812 w
288.1129 363.3543 m
288.1129 359.8871 296.6954 357.0764 307.2821 357.0764 c
317.8688 357.0764 326.4512 359.8871 326.4512 363.3543 C
326.4513 366.8214 317.8688 369.6322 307.2823 369.6324 c
296.6955 369.6325 288.113 366.8219 288.1129 363.3548 C
288.1129 363.3543 L
f
1 1 0 0 (purple) 0.4 x
0.75 w
288.4016 363.4157 m
288.4016 360.058 296.7133 357.3359 306.9657 357.3359 c
317.2181 357.3359 325.5296 360.058 325.5296 363.4157 C
325.5297 366.7733 317.2182 369.4953 306.9658 369.4955 c
296.7133 369.4957 288.4018 366.7738 288.4016 363.4161 C
288.4016 363.4157 L
f
1 1 0 0 (purple) 0.3687 x
0.7187 w
288.6904 363.477 m
288.6904 360.2288 296.7311 357.5955 306.6493 357.5955 c
316.5675 357.5955 324.608 360.2288 324.608 363.477 C
324.6081 366.7252 316.5676 369.3585 306.6495 369.3587 c
296.7312 369.3588 288.6906 366.7257 288.6904 363.4775 C
288.6904 363.477 L
f
1 1 0 0 (purple) 0.3375 x
0.6875 w
288.9792 363.5384 m
288.9792 360.3996 296.7489 357.8551 306.3329 357.8551 c
315.9168 357.8551 323.6864 360.3996 323.6864 363.5384 C
323.6865 366.6771 315.9169 369.2217 306.333 369.2219 c
296.749 369.222 288.9794 366.6776 288.9792 363.5389 C
288.9792 363.5384 L
f
1 1 0 0 (purple) 0.3062 x
0.6562 w
289.268 363.5998 m
289.268 360.5705 296.7667 358.1147 306.0165 358.1147 c
315.2662 358.1147 322.7648 360.5705 322.7648 363.5998 C
322.7649 366.629 315.2663 369.0848 306.0166 369.085 c
296.7668 369.0851 289.2682 366.6295 289.268 363.6002 C
289.268 363.5998 L
f
1 1 0 0 (purple) 0.275 x
0.625 w
289.5568 363.6611 m
289.5568 360.7413 296.7846 358.3742 305.7001 358.3742 c
314.6156 358.3742 321.8432 360.7413 321.8432 363.6611 C
321.8433 366.5809 314.6156 368.948 305.7002 368.9482 c
296.7847 368.9483 289.5569 366.5814 289.5568 363.6616 C
289.5568 363.6611 L
f
1 1 0 0 (purple) 0.2437 x
0.5937 w
289.8456 363.7225 m
289.8456 360.9121 296.8024 358.6338 305.3837 358.6338 c
313.9649 358.6338 320.9216 360.9121 320.9216 363.7225 C
320.9217 366.5328 313.965 368.8112 305.3838 368.8113 c
296.8025 368.8115 289.8457 366.5333 289.8456 363.7229 C
289.8456 363.7225 L
f
1 1 0 0 (purple) 0.2125 x
0.5625 w
290.1344 363.7839 m
290.1344 361.083 296.8202 358.8934 305.0673 358.8934 c
313.3143 358.8934 320 361.083 320 363.7839 C
320.0001 366.4847 313.3143 368.6744 305.0674 368.6745 c
296.8203 368.6746 290.1345 366.4851 290.1344 363.7843 C
290.1344 363.7839 L
f
1 1 0 0 (purple) 0.1812 x
0.5312 w
290.4232 363.8453 m
290.4232 361.2538 296.8381 359.153 304.7509 359.153 c
312.6636 359.153 319.0784 361.2538 319.0784 363.8453 C
319.0785 366.4366 312.6637 368.5375 304.751 368.5377 c
296.8381 368.5378 290.4233 366.4371 290.4232 363.8456 C
290.4232 363.8453 L
f
U
1 1 0 0 (purple) 0.15 x
0.5 w
290.712 363.9066 m
290.712 361.4246 296.8559 359.4125 304.4345 359.4125 c
312.013 359.4125 318.1568 361.4246 318.1568 363.9066 C
318.1569 366.3886 312.0131 368.4007 304.4346 368.4008 c
296.856 368.4009 290.7121 366.3889 290.712 363.907 C
290.712 363.9066 L
f
U
U
0 A
0 O
1 1 0 0 (purple) 0 x
1 w
453.3268 108.7205 m
453.3268 596.2795 L
121.6732 596.2795 L
121.6732 108.7205 L
453.3268 108.7205 L
(f) *
0 To
1 0 0 1 274 320 0 Tp
TP
-11.6387 0 Td
0 Tr
0 O
1 g
0.5 w
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
8.9101 0 Tl
0 Tc
0 Tw
(Kernel) Tx 
(\r) TX 
TO
u
u
0.25 0.25 0.5 0.25 (equipment grey) 0.5 x
0 R
0 G
359.8809 285.6544 m
388.7079 271.2509 L
358.6667 256.3504 L
329.8394 270.7545 L
359.8809 285.6544 L
b
0.25 0.25 0.5 0.25 (equipment grey) 0 x
358.6667 256.3504 m
388.7079 271.2509 L
388.7079 258.2044 L
358.6667 243.304 L
358.6667 256.3504 L
b
0.25 0.25 0.5 0.25 (equipment grey) 0.25 x
358.6667 243.304 m
329.8394 257.708 L
329.8394 270.7545 L
358.6667 256.3504 L
358.6667 243.304 L
b
0.25 0.25 0.5 0.25 (equipment grey) 0.5 x
352.7552 251.013 m
355.6381 249.5725 L
354.0991 248.8484 L
351.2163 250.2889 L
352.7552 251.013 L
b
0.25 0.25 0.5 0.25 (equipment grey) 0 x
354.0991 248.8484 m
355.6381 249.5725 L
355.6381 248.2678 L
354.0991 247.5436 L
354.0991 248.8484 L
b
0.25 0.25 0.5 0.25 (equipment grey) 0.25 x
354.0991 247.5436 m
351.2163 248.9841 L
351.2163 250.2889 L
354.0991 248.8484 L
354.0991 247.5436 L
b
388.7079 264.043 m
358.6667 249.1426 L
S
358.6667 249.1426 m
329.8394 263.5466 L
S
0.25 0.25 0.5 0.25 (equipment grey) 0.75 X
388.7079 263.7035 m
358.6667 248.8031 L
S
358.6667 248.8031 m
329.8394 263.2072 L
S
U
u
0 O
0.25 0.25 0.5 0.25 (equipment grey) 0 x
0 G
1 w
349.7254 256.2706 m
332.453 264.9142 L
332.453 267.2924 L
349.7254 258.6489 L
349.7254 256.2706 L
b
U
u
0.25 0.25 0.5 0.5 K
0.5 w
349.7254 258.6489 m
349.7254 256.2706 L
332.453 264.9142 L
S
U
0.25 0.25 0.5 0.25 (equipment grey) 0.65 X
332.453 264.9142 m
332.453 267.2924 L
349.7254 258.6489 L
S
0 O
0.65 0 1 0 k
0 G
355.3665 254.2797 m
355.3665 255.3659 L
353.6466 256.1806 L
353.6466 255.0943 L
355.3665 254.2797 L
b
U
0 O
0 0.15 1 0 (yellow) 0 x
275 394.3017 m
275 366 l
279.7819 366 l
271.9259 358.1439 L
264.0698 366 l
268.8518 366 l
268.8518 394.3017 L
275 394.3017 L
b
u
u
0 O
0.25 0.55 1 0.4 (dark gold) 0 x
1 w
272.0892 394.0634 m
285.6999 394.0634 296.7339 405.0974 296.7339 418.7083 c
296.7339 432.3189 285.6999 443.353 272.0892 443.353 c
258.4784 443.353 247.4444 432.3189 247.4444 418.7083 c
247.4444 405.0974 258.4784 394.0634 272.0892 394.0634 c
f
U
u
0.25 0.55 1 0.4 (dark gold) 0.0562 x
295.1441 419.2528 m
295.1441 406.2192 284.578 395.6533 271.5445 395.6533 c
258.511 395.6533 247.945 406.2192 247.945 419.2528 c
247.945 432.2863 258.511 442.8524 271.5445 442.8524 c
284.578 442.8524 295.1441 432.2863 295.1441 419.2528 c
f
0.25 0.55 1 0.4 (dark gold) 0.1125 x
293.5543 419.7975 m
293.5543 407.3412 283.4562 397.243 271 397.243 c
258.5438 397.243 248.4457 407.3412 248.4457 419.7975 c
248.4457 432.2536 258.5438 442.3518 271 442.3518 c
283.4562 442.3518 293.5543 432.2536 293.5543 419.7975 c
f
0.25 0.55 1 0.4 (dark gold) 0.1687 x
291.9646 420.342 m
291.9646 408.4628 282.3345 398.8329 270.4555 398.8329 c
258.5765 398.8329 248.9463 408.4628 248.9463 420.342 c
248.9463 432.221 258.5765 441.8511 270.4555 441.8511 c
282.3345 441.8511 291.9646 432.221 291.9646 420.342 c
f
0.25 0.55 1 0.4 (dark gold) 0.225 x
290.3747 420.8866 m
290.3747 409.5848 281.2126 400.4225 269.9108 400.4225 c
258.6091 400.4225 249.4468 409.5848 249.4468 420.8866 c
249.4468 432.1882 258.6091 441.3505 269.9108 441.3505 c
281.2126 441.3505 290.3747 432.1882 290.3747 420.8866 c
f
0.25 0.55 1 0.4 (dark gold) 0.2812 x
288.7851 421.4311 m
288.7851 410.7066 280.0908 402.0124 269.3663 402.0124 c
258.6417 402.0124 249.9474 410.7066 249.9474 421.4311 c
249.9474 432.1557 258.6417 440.8498 269.3663 440.8498 c
280.0908 440.8498 288.7851 432.1557 288.7851 421.4311 c
f
0.25 0.55 1 0.4 (dark gold) 0.3375 x
287.1953 421.9758 m
287.1953 411.8284 278.969 403.6021 268.8217 403.6021 c
258.6744 403.6021 250.4481 411.8284 250.4481 421.9758 c
250.4481 432.1229 258.6744 440.3492 268.8217 440.3492 c
278.969 440.3492 287.1953 432.1229 287.1953 421.9758 c
f
0.25 0.55 1 0.4 (dark gold) 0.3937 x
285.6055 422.5203 m
285.6055 412.9502 277.8471 405.1919 268.2772 405.1919 c
258.7072 405.1919 250.9488 412.9502 250.9488 422.5203 c
250.9488 432.0903 258.7072 439.8485 268.2772 439.8485 c
277.8471 439.8485 285.6055 432.0903 285.6055 422.5203 c
f
0.25 0.55 1 0.4 (dark gold) 0.45 x
284.0157 423.065 m
284.0157 414.072 276.7254 406.7817 267.7325 406.7817 c
258.7397 406.7817 251.4494 414.072 251.4494 423.065 c
251.4494 432.0575 258.7397 439.348 267.7325 439.348 c
276.7254 439.348 284.0157 432.0575 284.0157 423.065 c
f
0.25 0.55 1 0.4 (dark gold) 0.5062 x
282.4259 423.6095 m
282.4259 415.1939 275.6035 408.3715 267.188 408.3715 c
258.7723 408.3715 251.9501 415.1939 251.9501 423.6095 c
251.9501 432.025 258.7723 438.8474 267.188 438.8474 c
275.6035 438.8474 282.4259 432.025 282.4259 423.6095 c
f
0.25 0.55 1 0.4 (dark gold) 0.5625 x
280.8361 424.1541 m
280.8361 416.3156 274.4817 409.9612 266.6434 409.9612 c
258.8051 409.9612 252.4506 416.3156 252.4506 424.1541 c
252.4506 431.9924 258.8051 438.3468 266.6434 438.3468 c
274.4817 438.3468 280.8361 431.9924 280.8361 424.1541 c
f
0.25 0.55 1 0.4 (dark gold) 0.6187 x
279.2464 424.6986 m
279.2464 417.4375 273.36 411.5511 266.0988 411.5511 c
258.8377 411.5511 252.9513 417.4375 252.9513 424.6986 c
252.9513 431.9596 258.8377 437.8461 266.0988 437.8461 c
273.36 437.8461 279.2464 431.9596 279.2464 424.6986 c
f
0.25 0.55 1 0.4 (dark gold) 0.675 x
277.6565 425.2431 m
277.6565 418.5593 272.238 413.1408 265.5542 413.1408 c
258.8704 413.1408 253.4517 418.5593 253.4517 425.2431 c
253.4517 431.927 258.8704 437.3455 265.5542 437.3455 c
272.238 437.3455 277.6565 431.927 277.6565 425.2431 c
f
0.25 0.55 1 0.4 (dark gold) 0.7312 x
276.0669 425.7878 m
276.0669 419.6811 271.1162 414.7306 265.0097 414.7306 c
258.903 414.7306 253.9525 419.6811 253.9525 425.7878 c
253.9525 431.8943 258.903 436.8449 265.0097 436.8449 c
271.1162 436.8449 276.0669 431.8943 276.0669 425.7878 c
f
0.25 0.55 1 0.4 (dark gold) 0.7875 x
274.4771 426.3323 m
274.4771 420.8029 269.9945 416.3204 264.465 416.3204 c
258.9357 416.3204 254.453 420.8029 254.453 426.3323 c
254.453 431.8617 258.9357 436.3442 264.465 436.3442 c
269.9945 436.3442 274.4771 431.8617 274.4771 426.3323 c
f
0.25 0.55 1 0.4 (dark gold) 0.8437 x
272.8873 426.8769 m
272.8873 421.9249 268.8726 417.9102 263.9205 417.9102 c
258.9684 417.9102 254.9537 421.9249 254.9537 426.8769 c
254.9537 431.8289 258.9684 435.8436 263.9205 435.8436 c
268.8726 435.8436 272.8873 431.8289 272.8873 426.8769 c
f
U
u
0.25 0.55 1 0.4 (dark gold) 0.9 x
263.3759 419.5 m
267.7508 419.5 271.2975 423.0465 271.2975 427.4215 c
271.2975 431.7962 267.7508 435.3429 263.3759 435.3429 c
259.001 435.3429 255.4543 431.7962 255.4543 427.4215 c
255.4543 423.0465 259.001 419.5 263.3759 419.5 c
f
U
U
0 O
0 g
0.5 w
262.0625 367.5306 m
265.1866 367.5306 267.7193 370.0634 267.7193 373.1875 c
267.7193 376.3116 265.1866 378.8444 262.0625 378.8444 c
258.9383 378.8444 256.4056 376.3116 256.4056 373.1875 c
256.4056 370.0634 258.9383 367.5306 262.0625 367.5306 c
f
0 To
1 0 0 1 261.75 370.5625 0 Tp
TP
-2.2393 0 Td
0 Tr
0 O
1 g
(1) Tx 
(\r) TX 
TO
0 O
0 g
243.3958 286.8333 m
246.52 286.8333 249.0527 289.366 249.0527 292.4902 c
249.0527 295.6143 246.52 298.147 243.3958 298.147 c
240.2717 298.147 237.7389 295.6143 237.7389 292.4902 c
237.7389 289.366 240.2717 286.8333 243.3958 286.8333 c
f
0 To
1 0 0 1 243.0833 289.8652 0 Tp
TP
-2.2393 0 Td
0 Tr
0 O
1 g
(2) Tx 
(\r) TX 
TO
0 O
0 g
312.6458 247.9681 m
315.77 247.9681 318.3027 250.5009 318.3027 253.625 c
318.3027 256.7491 315.77 259.2819 312.6458 259.2819 c
309.5217 259.2819 306.989 256.7491 306.989 253.625 c
306.989 250.5009 309.5217 247.9681 312.6458 247.9681 c
f
0 To
1 0 0 1 312.3333 251 0 Tp
TP
-2.2393 0 Td
0 Tr
0 O
1 g
(3) Tx 
(\r) TX 
TO
0 O
0 g
278 296.5723 m
281.1241 296.5723 283.6568 299.105 283.6568 302.2292 c
283.6568 305.3533 281.1241 307.886 278 307.886 c
274.8758 307.886 272.3431 305.3533 272.3431 302.2292 c
272.3431 299.105 274.8758 296.5723 278 296.5723 c
f
0 To
1 0 0 1 277.6875 299.6042 0 Tp
TP
-2.2393 0 Td
0 Tr
0 O
1 g
(4) Tx 
(\r) TX 
TO
0 O
0 g
298.5 291.8223 m
301.6241 291.8223 304.1568 294.355 304.1568 297.4792 c
304.1568 300.6033 301.6241 303.136 298.5 303.136 c
295.3758 303.136 292.8431 300.6033 292.8431 297.4792 c
292.8431 294.355 295.3758 291.8223 298.5 291.8223 c
f
0 To
1 0 0 1 298.1875 294.8542 0 Tp
TP
-2.2393 0 Td
0 Tr
0 O
1 g
(6) Tx 
(\r) TX 
TO
0 O
0 g
358.6458 397.239 m
361.77 397.239 364.3027 399.7717 364.3027 402.8958 c
364.3027 406.02 361.77 408.5527 358.6458 408.5527 c
355.5217 408.5527 352.989 406.02 352.989 402.8958 c
352.989 399.7717 355.5217 397.239 358.6458 397.239 c
f
0 To
1 0 0 1 358.3333 400.2708 0 Tp
TP
-2.2393 0 Td
0 Tr
0 O
1 g
(5) Tx 
(\r) TX 
TO
0 To
1 0 0 1 272 422.6763 0 Tp
TP
-8.5019 0 Td
0 Tr
0 g
1 w
(User\r) Tx 
-5.5977 -8.9101 Td
(process) Tx 
(\r) TX 
TO
0 To
1 0 0 1 272.3333 265 0 Tp
TP
-12.3076 0 Td
0 Tr
(Device\r) Tx 
2.2402 -8.9101 Td
(driver) Tx 
(\r) TX 
TO
1 g
0 R
0 G
0.5 w
352.0208 414.8221 m
352.0208 425.6971 L
292.2083 425.6971 L
292.2083 414.8221 L
352.0208 414.8221 L
b
0 To
1 0 0 1 322.1875 417.9471 0 Tp
TP
-27.5283 0 Td
0 Tr
0 g
1 w
(read \(fd,          \)) Tx 
(\r) TX 
TO
u
0.75 g
0 R
0 G
0.5 w
328.1684 431.0762 m
340.6312 437.2788 L
340.6312 411.7951 l
328.1684 405.5925 l
328.1684 431.0762 L
b
1 g
344.5986 412.2432 m
331.8632 405.9043 l
328.32 412.173 328.32 422.8026 v
328.32 430.8429 L
340.7829 437.0455 L
340.7829 429.0052 l
340.7829 419.6682 344.5986 412.2432 y
b
0.25 w [3 1 2 5 1 6 ]0 d
331.5906 429.2076 m
337.376 432.1396 L
S
331.2831 424.983 m
338.7038 428.5964 L
S
331.2831 423.6203 m
338.7038 427.2336 L
S
331.2831 422.2575 m
338.7038 425.8708 L
S
331.2831 420.8947 m
338.7038 424.5081 L
S
331.6919 419.8045 m
338.7038 423.1453 L
S
331.6919 418.578 m
338.7038 421.7826 L
S
331.8282 417.3515 m
338.84 420.5561 L
S
332.1008 415.8525 m
339.1126 419.057 L
S
332.5096 414.4897 m
339.5214 417.6943 L
S
333.4635 413.2633 m
340.4754 416.4678 L
S
0 O
1 g
[]0 d
329.7339 431.882 m
329.7339 432.5634 329.2399 432.4782 329.2399 431.5754 c
329.2399 428.0322 l
329.2399 426.925 329.8872 427.1975 329.8872 428.441 c
329.8872 429.1756 329.8872 430.4356 329.8872 431.1129 C
330.0916 431.1981 L
330.0916 430.5208 330.0916 429.2608 330.0916 428.5262 c
330.0916 426.8909 329.0014 426.4821 329.0014 427.9811 c
329.0014 431.5243 l
329.0014 432.6997 329.8872 432.9041 329.8872 431.9501 C
329.7339 431.882 L
b
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.5
%%For: () ()
%%Title: (relation.vmebus.systbus.exp.ai)
%%CreationDate: (8/19/97) ( 2:01 PM)
%%BoundingBox: 122 169 408 555
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%%DocumentCustomColors: (blue)
%%+ (dark green)
%%+ (dark red)
%%+ (equipment grey)
%%+ (gold)
%%+ (green)
%%+ (purple)
%%+ (red)
%%+ (yellow)
%%CMYKCustomColor: 1 0 0 0 (blue)
%%+ 0.05 0.65 0.8 0 (copper)
%%+ 0.25 0.55 1 0.4 (dark gold)
%%+ 1 0 0.8 0.25 (dark green)
%%+ 0 1 0.85 0.35 (dark red)
%%+ 0.25 0.25 0.5 0.25 (equipment grey)
%%+ 0.15 0.55 1 0 (gold)
%%+ 0.8 0 1 0 (green)
%%+ 0 0.6 1 0 (orange)
%%+ 1 1 0 0 (purple)
%%+ 0 1 0.85 0 (red)
%%+ 0 0.15 1 0 (yellow)
%AI3_TemplateBox: 279 364 279 364
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Header
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 2.0 0
%%Title: (Typography Operators)
%%Version: 2.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 48 dict dup begin put
/initialize
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate
{
currentdict Adobe_typography_AI3 eq
	{
 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	
	/_pntr 0 ddef
	
	{
		counttomark -1 roll
		dup type dup /marktype eq 		
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	_tempEncode
}
def
/TE
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
%
/TZ		
{
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	/_useNativeEncoding exch def
	pop pop
	
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
 begin
	
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		pop
		
		/FontName exch def
		
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			cleartomark
		}
		{	
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
 end
	
	definefont pop
}
def
/tr
{
_ax _ay 3 2 roll
} def
/trj
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx
	{
	tr _psf
	} ddef
/Tj
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx
	{
	tr sp
	} ddef
/Tj
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx
	{
	tr sw rmoveto
	} ddef
/Tj
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx
	{
	tr _ctm _pss
	} ddef
/Tj
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
_tm astore pop iTm 0 0 moveto
} def
/Td
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
/Ta
{
pop
} def
/Tf
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl
{
pop
0 exch _leading astore pop
} def
/Tt
{
pop
} def
/TW
{
3 npop
} def
/Tw
{
/_cx exch ddef
} def
/TC
{
3 npop
} def
/Tc
{
/_ax exch ddef
} def
/Ts
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti
{
3 npop
} def
/Tz
{
100 div /_hs exch ddef
iTm
} def
/TA
{
pop
} def
/Tq
{
pop
} def
/Th
{
pop pop pop pop pop
} def
/TX {pop} def
%/Tx
%/Tj
/Tk
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
2 npop
} def
/T*
{
_leading aload pop neg Td
} def
/T*-
{
_leading aload pop Td
} def
/T-
{
_hyphen Tx
} def
/T+
{} def
/TR
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			break
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
0 i
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
0 0.15 1 0 (yellow) 0 x
0 R
0 G
0 i
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
253.4436 362.9903 m
219.0617 380.1658 L
215.921 378.5733 l
211.2658 386.9032 l
228.1096 384.6984 l
224.4141 382.8609 L
258.839 365.6624 L
253.4436 362.9903 L
b
199.5204 381.5152 m
220.9797 370.9456 L
224.1204 372.5381 l
228.7758 364.2083 l
211.9319 366.4128 l
215.6273 368.2504 L
194.125 378.843 L
199.5204 381.5152 L
b
0 g
1 w
445.3268 129.2205 m
445.3268 616.7795 L
113.6732 616.7795 L
113.6732 129.2205 L
445.3268 129.2205 L
(f) *
u
u
1 1 0 0 (purple) 0.9 x
0 R
1 1 0 0 (purple) 0.25 X
0.5 w
125.514 501.1621 m
182.1527 529.5776 L
261.2303 489.7717 L
261.2303 451.544 L
204.5916 423.1285 L
125.514 462.9344 L
125.514 501.1621 L
b
u
1 1 0 0 (purple) 0 X
125.514 462.9333 m
182.1524 491.3494 L
182.1518 529.5771 L
S
182.1524 491.3494 m
261.2303 451.544 L
S
U
U
U
u
u
0 O
1 1 0 0 (purple) 0.7 x
1 1 0 0 (purple) 0.25 X
146.4369 488.1575 m
170.6526 500.3064 L
208.5624 481.3981 L
208.5624 463.2204 L
184.3467 451.0714 L
146.4369 469.9797 L
146.4369 488.1575 L
b
1 1 0 0 (purple) 0.5 X
146.4696 471.5587 m
170.7273 483.657 l
208.6381 464.7115 l
S
u
1 1 0 0 (purple) 0 X
146.437 469.9792 m
170.6525 482.1285 L
170.6522 500.3062 L
S
170.6525 482.1285 m
208.5624 463.2204 L
S
U
U
U
0 O
0 0.15 1 0 (yellow) 0 x
0 G
305.3859 434.4868 m
326.0883 424.125 L
329.2292 425.7175 l
333.8841 417.3875 l
317.0404 419.5925 l
320.7358 421.43 L
299.9902 431.8148 L
305.3859 434.4868 L
b
377.319 364.6955 m
356.5734 354.3107 L
360.2688 352.4732 l
343.4251 350.2682 l
348.08 358.5982 l
351.2209 357.0057 L
371.9233 367.3675 L
387.3166 376.8011 386.6966 386.4338 371.9233 394.43 C
351.1777 404.8148 L
356.5734 407.4868 L
377.2758 397.125 L
392.9515 388.9465 394.6338 373.3629 377.319 364.6955 C
b
327.1875 405.5625 m
297.4327 420.2587 L
294.2918 418.6662 l
289.6367 426.996 l
306.4804 424.7913 l
302.785 422.9538 L
332.5831 408.2346 L
327.1875 405.5625 L
b
358.7602 375.7097 m
331.1203 361.8479 L
336.4728 359.1529 L
364.1559 373.0377 L
374.1243 378.5129 374.6875 385.5625 364.1558 391.1943 C
354.535 395.8288 L
358.2304 397.6663 l
341.3867 399.871 l
346.0418 391.5412 l
349.1827 393.1337 L
358.7602 388.5222 L
366.2503 384.4904 365.9367 379.4289 358.7602 375.7097 C
b
277.4438 335.7425 m
298.1893 346.1276 L
294.4938 347.9651 l
311.3375 350.1703 l
306.6827 341.8403 l
303.5418 343.4327 L
282.8395 333.0706 L
267.4464 323.6367 268.0666 314.0041 282.84 306.0081 C
317.1482 288.9478 L
311.7526 286.2757 L
277.4875 303.313 L
261.8117 311.4913 260.1292 327.0748 277.4438 335.7425 C
b
296.0028 324.7286 m
327.6875 340.5625 L
322.3349 343.2574 L
290.6071 327.4005 L
280.6387 321.9252 280.0756 314.8756 290.6074 309.2439 C
300.2283 304.6096 L
296.5329 302.772 l
313.3766 300.5676 l
308.7214 308.8973 l
305.5805 307.3048 L
296.003 311.9161 L
288.5128 315.9478 288.8264 321.0093 296.0028 324.7286 C
b
341.9894 288.8483 m
362.6918 278.4865 L
365.8327 280.079 l
370.4876 271.749 l
353.6439 273.954 l
357.3393 275.7915 L
336.5937 286.1763 L
341.9894 288.8483 L
b
354.7387 264.2587 m
334.0362 274.6202 L
330.8953 273.0277 l
326.2402 281.3575 l
343.0839 279.1528 l
339.3885 277.3153 L
360.1343 266.9308 L
354.7387 264.2587 L
b
309.5519 233.2233 m
330.2543 222.8615 L
333.3952 224.454 l
338.0501 216.124 l
321.2064 218.329 l
324.9018 220.1665 L
304.1562 230.5513 L
309.5519 233.2233 L
b
322.3012 208.6337 m
301.5987 218.9952 L
298.4578 217.4027 l
293.8027 225.7325 l
310.6464 223.5278 l
306.951 221.6903 L
327.6968 211.3058 L
322.3012 208.6337 L
b
u
1 0 0 0 (blue) 0.4 x
201.5836 430.8556 m
201.5836 450.3213 L
247.3347 473.1903 L
247.3347 453.7246 L
201.5836 430.8556 L
b
1 0 0 0 (blue) 0.8 x
201.5836 450.3213 m
196.2494 453.1303 L
242.0003 475.9992 L
247.3347 473.1903 L
201.5836 450.3213 L
b
1 0 0 0 (blue) 0 x
201.5836 430.8556 m
196.2494 433.6646 L
196.2494 453.1303 L
201.5836 450.3213 L
201.5836 430.8556 L
b
U
u
1 0 0.8 0.25 (dark green) 0.4 x
224.7872 341.9162 m
224.7872 360.3094 L
268.061 381.9587 L
268.061 363.547 L
224.7872 341.9162 L
b
1 0 0.8 0.25 (dark green) 0.8 x
224.7872 360.3094 m
219.6307 362.8923 L
262.9046 384.523 L
268.061 381.9587 L
224.7872 360.3094 L
b
1 0 0.8 0.25 (dark green) 0 x
224.7872 341.9162 m
219.6307 344.4806 L
219.6307 362.8923 L
224.7872 360.3094 L
224.7872 341.9162 L
b
U
0 0.15 1 0 (yellow) 0 x
273.3811 423.0528 m
248.875 435.468 L
245.7342 433.8755 l
241.079 442.2054 l
257.9228 440.0006 l
254.2274 438.1631 L
278.7765 425.7249 L
273.3811 423.0528 L
b
229.8954 437.0152 m
250.5422 426.5081 L
253.6829 428.1006 l
258.3383 419.7708 l
241.4944 421.9753 l
245.1898 423.8129 L
224.5 434.343 L
229.8954 437.0152 L
b
u
u
1 1 0 0 (purple) 0.5 X
1.5 w
184.2652 451.6653 m
184.2652 469.2491 L
207.9727 481.1445 L
S
184.2652 469.2491 m
146.832 487.9208 L
S
U
1 1 0 0 (purple) 1 X
0.5 w
184.2652 451.3431 m
184.2652 469.2491 L
207.9727 481.1445 L
S
184.2652 469.2491 m
146.832 487.9208 L
S
U
u
u
1 1 0 0 (purple) 0.5 X
1.5 w
204.401 424.5176 m
204.401 461.3561 L
259.851 489.1784 L
S
204.401 461.3561 m
126.4381 500.6086 L
S
U
1 1 0 0 (purple) 1 X
0.5 w
204.401 423.8048 m
204.401 461.3561 L
260.3125 489.4055 L
S
204.401 461.3561 m
126.4381 500.6086 L
S
U
0 To
1 0 0 1 171.3125 407.4055 0 Tp
TP
-38.5019 0 Td
0 Tr
0 O
0 g
1 w
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
2 Ta
0 Tq
0 0 Tl
0 Tc
0 Tw
(Secondary\r) Tx 
17.0117 -9.5 Td
(cache) Tx 
(\r) TX 
TO
0 To
1 0 0 1 178.4425 333.653 0 Tp
TP
-42.0781 0 Td
0 Tr
(System bus) Tx 
(\r) TX 
TO
0 To
1 0 0 1 218.0268 329.04 0 Tp
TP
0 Tr
0 Ta
(Memory) Tx 
(\r) TX 
TO
0 To
1 0 0 1 203.0308 547.3062 0 Tp
TP
0 Tr
(Processor unit\r) Tx 
0 -9.5 Td
(\(IPnn\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 246.3125 524.9055 0 Tp
TP
0 Tr
(MIPS R10000) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
201.5 539.4055 m
187.5 527.9055 l
S
0 To
1 0 0 1 387.5 251.5 0 Tp
TP
0 Tr
0 O
0 g
1 w
(VME\r) Tx 
0 -9.5 Td
(bus) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
232 336.5 m
232 351.9055 l
S
u
0 O
0 1 0.85 0.35 (dark red) 0.4 x
313.8959 275.45 m
313.8959 293.5298 L
349.5001 311.3257 L
349.5001 293.2459 L
313.8959 275.45 L
b
0 1 0.85 0.35 (dark red) 0.8 x
313.8959 293.5298 m
306.0252 297.5149 L
341.6293 315.3106 L
349.5001 311.3257 L
313.8959 293.5298 L
b
0 1 0.85 0.35 (dark red) 0 x
313.8959 275.45 m
306.0252 279.4351 L
306.0252 297.5149 L
313.8959 293.5298 L
313.8959 275.45 L
b
U
u
0.15 0.55 1 0 (gold) 0.4 x
329.0424 394.058 m
329.0424 412.1378 L
364.6466 429.9337 L
364.6466 411.8539 L
329.0424 394.058 L
b
0.15 0.55 1 0 (gold) 0.8 x
329.0424 412.1378 m
321.1717 416.1229 L
356.7758 433.9186 L
364.6466 429.9337 L
329.0424 412.1378 L
b
0.15 0.55 1 0 (gold) 0 x
329.0424 394.058 m
321.1717 398.0431 L
321.1717 416.1229 L
329.0424 412.1378 L
329.0424 394.058 L
b
U
u
0 1 0.85 0 (red) 0.4 x
339.1875 335.5625 m
339.1875 353.6423 L
303.5833 371.4382 L
303.5833 353.3584 L
339.1875 335.5625 L
b
0 1 0.85 0 (red) 0.8 x
339.1875 353.6423 m
347.0582 357.6274 L
311.4541 375.4231 L
303.5833 371.4382 L
339.1875 353.6423 L
b
0 1 0.85 0 (red) 0 x
339.1875 335.5625 m
347.0582 339.5476 L
347.0582 357.6274 L
339.1875 353.6423 L
339.1875 335.5625 L
b
U
0 To
1 0 0 1 289.4643 265.9945 0 Tp
TP
-52.8125 0 Td
0 Tr
0 g
1 w
2 Ta
(VME controller) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
308.541 283.4545 m
291.041 268.4545 l
S
u
0 O
0.25 0.25 0.5 0.25 (equipment grey) 0.4 x
322.9267 182.6763 m
322.9267 200.7561 L
358.5308 218.552 L
358.5308 200.4722 L
322.9267 182.6763 L
b
0.25 0.25 0.5 0.25 (equipment grey) 0.8 x
322.9267 200.7561 m
315.056 204.7412 L
350.66 222.5369 L
358.5308 218.552 L
322.9267 200.7561 L
b
0.25 0.25 0.5 0.25 (equipment grey) 0 x
322.9267 182.6763 m
315.056 186.6614 L
315.056 204.7412 L
322.9267 200.7561 L
322.9267 182.6763 L
b
U
0 To
1 0 0 1 295.8535 180.4545 0 Tp
TP
-32.6797 0 Td
0 Tr
0 g
1 w
(VME bus\r) Tx 
9.4023 -9.5 Td
(device) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
297.541 181.9545 m
318.791 192.7045 l
S
243.8473 527.1989 m
192.3125 490.4055 l
S
0 O
0 1 0.85 0 (red) 1 x
130 347 m
360.0917 462.1467 L
352.6968 465.8103 L
122.6051 350.6635 L
130 347 L
f
u
0 1 0.85 0 (red) 0.9615 x
130.5372 347.2684 m
359.6415 461.922 L
352.2467 465.5856 L
123.1423 350.932 L
130.5372 347.2684 L
f
0 1 0.85 0 (red) 0.9231 x
131.0743 347.5369 m
359.1914 461.6973 L
351.7966 465.3609 L
123.6794 351.2005 L
131.0743 347.5369 L
f
0 1 0.85 0 (red) 0.8846 x
131.6111 347.8053 m
358.7415 461.4727 L
351.3466 465.1363 L
124.2162 351.4688 L
131.6111 347.8053 L
f
0 1 0.85 0 (red) 0.8461 x
132.1483 348.0738 m
358.2913 461.2481 L
350.8964 464.9116 L
124.7534 351.7373 L
132.1483 348.0738 L
f
0 1 0.85 0 (red) 0.8077 x
132.6852 348.3421 m
357.8415 461.0235 L
350.4466 464.687 L
125.2903 352.0057 L
132.6852 348.3421 L
f
0 1 0.85 0 (red) 0.7692 x
133.2222 348.6106 m
357.3914 460.7988 L
349.9965 464.4624 L
125.8273 352.2741 L
133.2222 348.6106 L
f
0 1 0.85 0 (red) 0.7308 x
133.759 348.8789 m
356.9414 460.5742 L
349.5465 464.2378 L
126.3643 352.5425 L
133.759 348.8789 L
f
0 1 0.85 0 (red) 0.6923 x
134.2962 349.1474 m
356.4913 460.3495 L
349.0964 464.0131 L
126.9014 352.811 L
134.2962 349.1474 L
f
0 1 0.85 0 (red) 0.6538 x
134.8333 349.4159 m
356.0411 460.1248 L
348.6463 463.7884 L
127.4384 353.0795 L
134.8333 349.4159 L
f
0 1 0.85 0 (red) 0.6154 x
135.3701 349.6843 m
355.5912 459.9003 L
348.1963 463.5638 L
127.9754 353.3478 L
135.3701 349.6843 L
f
0 1 0.85 0 (red) 0.5769 x
135.9073 349.9527 m
355.141 459.6756 L
347.7463 463.3391 L
128.5125 353.6163 L
135.9073 349.9527 L
f
0 1 0.85 0 (red) 0.5385 x
136.4442 350.2211 m
354.6912 459.451 L
347.2962 463.1146 L
129.0493 353.8847 L
136.4442 350.2211 L
f
0 1 0.85 0 (red) 0.5 x
136.9812 350.4896 m
354.2411 459.2263 L
346.8462 462.8899 L
129.5865 354.1531 L
136.9812 350.4896 L
f
0 1 0.85 0 (red) 0.4615 x
137.5184 350.758 m
353.791 459.0016 L
346.3961 462.6652 L
130.1236 354.4216 L
137.5184 350.758 L
f
0 1 0.85 0 (red) 0.4231 x
138.0553 351.0264 m
353.341 458.7771 L
345.9461 462.4406 L
130.6604 354.69 L
138.0553 351.0264 L
f
0 1 0.85 0 (red) 0.3846 x
138.5923 351.2949 m
352.8908 458.5524 L
345.4961 462.2159 L
131.1975 354.9584 L
138.5923 351.2949 L
f
0 1 0.85 0 (red) 0.3462 x
139.1293 351.5632 m
352.441 458.3278 L
345.046 461.9913 L
131.7343 355.2268 L
139.1293 351.5632 L
f
0 1 0.85 0 (red) 0.3077 x
139.6664 351.8317 m
351.9909 458.1031 L
344.596 461.7667 L
132.2715 355.4953 L
139.6664 351.8317 L
f
0 1 0.85 0 (red) 0.2692 x
140.2032 352.1001 m
351.5409 457.8785 L
344.1461 461.5421 L
132.8084 355.7636 L
140.2032 352.1001 L
f
0 1 0.85 0 (red) 0.2308 x
140.7404 352.3685 m
351.0908 457.6538 L
343.6959 461.3174 L
133.3454 356.0321 L
140.7404 352.3685 L
f
0 1 0.85 0 (red) 0.1923 x
141.2775 352.637 m
350.6407 457.4291 L
343.2458 461.0927 L
133.8826 356.3006 L
141.2775 352.637 L
f
0 1 0.85 0 (red) 0.1539 x
141.8143 352.9054 m
350.1907 457.2046 L
342.7958 460.8681 L
134.4195 356.569 L
141.8143 352.9054 L
f
0 1 0.85 0 (red) 0.1154 x
142.3515 353.1739 m
349.7407 456.9799 L
342.3458 460.6434 L
134.9566 356.8374 L
142.3515 353.1739 L
f
0 1 0.85 0 (red) 0.0769 x
142.8884 353.4422 m
349.2906 456.7553 L
341.8959 460.4189 L
135.4935 357.1058 L
142.8884 353.4422 L
f
0 1 0.85 0 (red) 0.0385 x
143.4254 353.7107 m
348.8406 456.5306 L
341.4457 460.1942 L
136.0305 357.3743 L
143.4254 353.7107 L
f
U
0 1 0.85 0 (red) 0 x
143.9626 353.9792 m
348.3905 456.3059 L
340.9956 459.9695 L
136.5677 357.6427 L
143.9626 353.9792 L
f
0.8 0 1 0 (green) 1 x
1 w
179.4629 169.3608 m
402.5077 280.3207 L
395.1128 283.9843 L
172.068 173.0243 L
179.4629 169.3608 L
f
u
0.8 0 1 0 (green) 0.9615 x
180.0001 169.6292 m
402.0575 280.096 L
394.6627 283.7596 L
172.6052 173.2928 L
180.0001 169.6292 L
f
0.8 0 1 0 (green) 0.9231 x
180.5372 169.8977 m
401.6074 279.8713 L
394.2126 283.5349 L
173.1423 173.5613 L
180.5372 169.8977 L
f
0.8 0 1 0 (green) 0.8846 x
181.074 170.1661 m
401.1575 279.6467 L
393.7626 283.3103 L
173.6791 173.8296 L
181.074 170.1661 L
f
0.8 0 1 0 (green) 0.8461 x
181.6112 170.4346 m
400.7073 279.4221 L
393.3124 283.0856 L
174.2163 174.0981 L
181.6112 170.4346 L
f
0.8 0 1 0 (green) 0.8077 x
182.1481 170.7029 m
400.2575 279.1975 L
392.8626 282.861 L
174.7532 174.3665 L
182.1481 170.7029 L
f
0.8 0 1 0 (green) 0.7692 x
182.6851 170.9714 m
399.8074 278.9728 L
392.4125 282.6364 L
175.2902 174.6349 L
182.6851 170.9714 L
f
0.8 0 1 0 (green) 0.7308 x
183.2219 171.2397 m
399.3574 278.7482 L
391.9625 282.4118 L
175.8272 174.9033 L
183.2219 171.2397 L
f
0.8 0 1 0 (green) 0.6923 x
183.7591 171.5082 m
398.9073 278.5235 L
391.5124 282.1871 L
176.3643 175.1718 L
183.7591 171.5082 L
f
0.8 0 1 0 (green) 0.6538 x
184.2962 171.7767 m
398.4571 278.2988 L
391.0623 281.9624 L
176.9013 175.4403 L
184.2962 171.7767 L
f
0.8 0 1 0 (green) 0.6154 x
184.833 172.0451 m
398.0072 278.0743 L
390.6123 281.7378 L
177.4383 175.7086 L
184.833 172.0451 L
f
0.8 0 1 0 (green) 0.5769 x
185.3702 172.3135 m
397.557 277.8496 L
390.1623 281.5131 L
177.9754 175.9771 L
185.3702 172.3135 L
f
0.8 0 1 0 (green) 0.5385 x
185.9071 172.5819 m
397.1072 277.625 L
389.7122 281.2886 L
178.5122 176.2455 L
185.9071 172.5819 L
f
0.8 0 1 0 (green) 0.5 x
186.4441 172.8504 m
396.6571 277.4003 L
389.2622 281.0639 L
179.0494 176.5139 L
186.4441 172.8504 L
f
0.8 0 1 0 (green) 0.4615 x
186.9813 173.1188 m
396.207 277.1756 L
388.8121 280.8392 L
179.5865 176.7824 L
186.9813 173.1188 L
f
0.8 0 1 0 (green) 0.4231 x
187.5182 173.3872 m
395.757 276.9511 L
388.3621 280.6146 L
180.1233 177.0508 L
187.5182 173.3872 L
f
0.8 0 1 0 (green) 0.3846 x
188.0552 173.6557 m
395.3068 276.7264 L
387.9121 280.3899 L
180.6604 177.3192 L
188.0552 173.6557 L
f
0.8 0 1 0 (green) 0.3462 x
188.5922 173.924 m
394.857 276.5018 L
387.462 280.1653 L
181.1972 177.5876 L
188.5922 173.924 L
f
0.8 0 1 0 (green) 0.3077 x
189.1293 174.1925 m
394.4069 276.2771 L
387.012 279.9407 L
181.7344 177.8561 L
189.1293 174.1925 L
f
0.8 0 1 0 (green) 0.2692 x
189.6661 174.4609 m
393.9569 276.0525 L
386.5621 279.7161 L
182.2713 178.1244 L
189.6661 174.4609 L
f
0.8 0 1 0 (green) 0.2308 x
190.2033 174.7293 m
393.5068 275.8278 L
386.1119 279.4914 L
182.8083 178.3929 L
190.2033 174.7293 L
f
0.8 0 1 0 (green) 0.1923 x
190.7404 174.9978 m
393.0567 275.6031 L
385.6618 279.2667 L
183.3455 178.6614 L
190.7404 174.9978 L
f
0.8 0 1 0 (green) 0.1539 x
191.2772 175.2662 m
392.6067 275.3786 L
385.2118 279.0421 L
183.8824 178.9298 L
191.2772 175.2662 L
f
0.8 0 1 0 (green) 0.1154 x
191.8144 175.5347 m
392.1567 275.1539 L
384.7618 278.8174 L
184.4195 179.1982 L
191.8144 175.5347 L
f
0.8 0 1 0 (green) 0.0769 x
192.3513 175.803 m
391.7066 274.9293 L
384.3119 278.5929 L
184.9564 179.4666 L
192.3513 175.803 L
f
0.8 0 1 0 (green) 0.0385 x
192.8883 176.0715 m
391.2566 274.7046 L
383.8617 278.3682 L
185.4934 179.7351 L
192.8883 176.0715 L
f
U
0.8 0 1 0 (green) 0 x
193.4255 176.34 m
390.8065 274.4799 L
383.4116 278.1435 L
186.0306 180.0035 L
193.4255 176.34 L
f
0 R
0 G
0.5 w
370.5869 266.9545 m
383.541 254.4545 l
S
161.75 341.843 m
161.5 366 l
S
176 409.4055 m
199 439.4055 l
S
0 To
1 0 0 1 361.459 327.5455 0 Tp
TP
0 Tr
0 O
0 g
1 w
0 Ta
(XIO to\r) Tx 
0 -9.5 Td
(PCI bridge) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
344.5459 343 m
357.5 330.5 l
S
0 To
1 0 0 1 305.1518 393.3695 0 Tp
TP
-47.0039 0 Td
0 Tr
0 O
0 g
1 w
2 Ta
(XIO interface) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
325.2285 403 m
307.7285 393.8295 l
S
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

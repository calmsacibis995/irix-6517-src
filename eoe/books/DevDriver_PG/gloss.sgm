<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<GLOSSARY><TITLE><XREFTARGET ID="67978">Glossary</TITLE>
<GLOSSARYTERM><GLOSSARYENTRY>ABI</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Application Binary Interface, a defined interface that includes an <GLOSSARYITEM>API</GLOSSARYITEM>, but adds the further promise that a compiled object file will be portable; no recompilation will be required to move to any supported platform.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>address/length list</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A software object used to store and translate buffer addresses. Also called an <VARIABLE>alenlist</VARIABLE>, an address/length list is a list in which each item is a pair consisting of an address and a length. The kernel provides numerous functions to create and fill alenlists and to translate them from one address space to another.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>API</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Application Programming Interface, a defined interface through which services can be obtained. A typical API is implemented as a set of callable functions and header files that define the data structures and specific values that the functions accept or return. The promise behind an API is that a program that compiles and works correctly will continue to compile and work correctly in any supported environment (however, recompilation may be required when porting or changing versions). See <GLOSSARYITEM>ABI</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>big-endian</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The hardware design in which the most significant bits of a multi-byte integer are stored in the byte with the lowest address. Big-endian is the default storage order in MIPS processors. Opposed to <GLOSSARYITEM>little-endian</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>block</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>As a verb, to suspend execution of a process. <ITALICS>See</ITALICS> sleep.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>block device</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A device such as magnetic tape or a disk drive, that naturally transfers data in blocks of fixed size. Opposed to <GLOSSARYITEM>character device</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>block device driver</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Driver for a block device. This driver is not allowed to support the ioctl(), read() or write() entry points, but does have a strategy() entry point. <ITALICS>See</ITALICS> character device driver.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>bus master</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>An I/O device that is capable of generating a sequence of bus operations&mdash;usually a series of memory reads or writes&mdash;independently, once programmed by software. See <GLOSSARYITEM>direct memory access</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>bus-watching cache</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A <GLOSSARYITEM>cache memory</GLOSSARYITEM> that is aware of bus activity and, when the I/O system performs a DMA write into physical memory or another CPU in a multiprocessor system modifies <GLOSSARYITEM>virtual memory</GLOSSARYITEM>, automatically invalidates any copy of the same data then in the cache. This hardware function eliminates the need for explicit data cache write back or invalidation by software.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>cache coherency</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The problem of ensuring that all cached copies of data are true reflections of the data in memory. The usual solution is to ensure that, when one copy is changed, all other copies are automatically marked as invalid so that they will not be used.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>cache line</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The unit of data when data is loaded into a <GLOSSARYITEM>cache memory</GLOSSARYITEM>. Typically 128 bytes in current CPU models.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>cache memory</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>High-speed memory closely attached to a CPU, containing a copy of the most recently used memory data. When the CPU's request for instructions or data can be satisfied from the cache, the CPU can run at full rated speed. In a multiprocessor or when DMA is allowed, a <GLOSSARYITEM>bus-watching cache</GLOSSARYITEM> is needed.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>character device</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A device such as a terminal or printer that transfers data as a stream of bytes, or a device that can be treated in this way under some circumstances. For example, a disk (normally a <GLOSSARYITEM>block device</GLOSSARYITEM>) can be treated as a character device when reading diagnostic information.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>character device driver</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The kernel-level device driver for a <GLOSSARYITEM>character device</GLOSSARYITEM> transfers data in bytes between the device and a user program. A <GLOSSARYITEM>STREAMS driver</GLOSSARYITEM> works with a character driver. Note that a <GLOSSARYITEM>block device</GLOSSARYITEM> such as tape or disk can also support character access through a character driver. Each disk device, for example, is represented as two different <GLOSSARYITEM>device special file</GLOSSARYITEM>s, one managed by a <GLOSSARYITEM>block device driver</GLOSSARYITEM> and one by a character device driver.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>close</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Relinquish access to a resource. The user process invokes the <FUNCTION>close</FUNCTION>() system call when it is finished with a device, but the system does not necessarily execute your <VARIABLE>drv</VARIABLE><FUNCTION>close</FUNCTION>() entry point for that device. </PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>data structure</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Contiguous memory used to hold an ordered collection of fields of different types. Any <GLOSSARYITEM>API</GLOSSARYITEM> usually defines several data structures. The most common data structure in the <GLOSSARYITEM>DDI/DKI</GLOSSARYITEM> is the <VARIABLE>buf_t</VARIABLE>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>DDI/DKI</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Device Driver Interface/Device Kernel Interface; the formal API that defines the services provided to a device driver by the kernel, and the rules for using those services. DDI/DKI is the term used in the UNIX System V documentation. The IRIX version of the DDI/DKI is close to, but not perfectly compatible with, the System V interface.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>deadlock</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The condition in which two or more processes are blocked, each waiting for a lock held by the other. Deadlock is prevented by the rule that a driver upper-half entry point is not allowed to hold a lock while sleeping.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>devflag</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A public global flag word that characterizes the abilities of a device driver, including the flags D_MP, D_WBACK and D_OLD.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>device driver</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A software module that manages access to a hardware device, taking the device in and out of service, setting hardware parameters, transmitting data between memory and the device, sometimes scheduling multiple uses of the device on behalf of multiple processes, and handling I/O errors.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>device number</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Each <GLOSSARYITEM>device special file</GLOSSARYITEM> is identified by a pair of numbers: the <GLOSSARYITEM>major device number</GLOSSARYITEM> identifies the device driver that manages the device, and the <GLOSSARYITEM>minor device number</GLOSSARYITEM> identifies the device to the driver.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>device special file</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A filename in the <FILENAME>/hw</FILENAME> filesystem that represents a hardware device. A device special file does not specify data on disk, but rather identifies a particular hardware unit and the device driver that handles it. The <GLOSSARYITEM>inode</GLOSSARYITEM> of the file contains the <GLOSSARYITEM>device number</GLOSSARYITEM> as well as permissions and ownership data.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>direct memory access</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>When a device reads or writes in memory, asynchronously and without specific intervention by a CPU. In order to perform DMA, the device or its attachment must have some means of storing a memory address and incrementing it, usually through <GLOSSARYITEM>mapping registers</GLOSSARYITEM>. The device writes to physical memory and in so doing can invalidate <GLOSSARYITEM>cache memory</GLOSSARYITEM>; a <GLOSSARYITEM>bus-watching cache</GLOSSARYITEM> compensates.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>downstream</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The direction of STREAMS messages flowing through a write queue from the user process to the driver.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>EISA bus</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Enhanced Industry Standard Architecture, a bus interface supported by certain Silicon Graphics systems.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>EISA Product Identifier (ID)</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The four-byte product identifier returned by an EISA expansion board.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>external interrupt</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A hardware signal on a specified input or output line that causes an interrupt in the receiving computer. The Silicon Graphics Challenge, OCTANE, and Origin2000 architectures support external interrupt signals.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>file handle</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>An integer returned by the <FUNCTION>open</FUNCTION>() kernel function to represent the state of an open file. When the file handle is passed in subsequent kernel services, the kernel can retrieve information about the file, for example, when the file is a <GLOSSARYITEM>device special file</GLOSSARYITEM>, the file handle can be associated with the major and minor <GLOSSARYITEM>device number</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>gigabyte</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH><ITALICS>See</ITALICS> kilobyte.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>GIO bus</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Graphics I/O bus, a bus interface used on Indigo, Indigo, and Indy workstations.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>hwgraph</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The hardware graph is a graph-structured database of device connections, maintained in kernel memory by the kernel and by kernel-level device drivers. You can display the structure of the hwgraph by listing the contents of the <FILENAME>/hw</FILENAME> filesystem.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>I/O operations</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Services that provide access to shared input/output devices and to the global data structures that describe their status. I/O operations open and close files and devices, read data from and write data to devices, set the state of devices, and read and write system data structures.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>inode</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The UNIX disk object that represents the existence of a file. The inode records owner and group IDs, and permissions. For regular disk files, the inode distinguishes files from directories and has other data that can be set with <COMMAND>chmod</COMMAND>. For <GLOSSARYITEM>device special file</GLOSSARYITEM>s, the inode contains major and minor device numbers and distinguishes block from character files.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>inter-process communication</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>System calls that allow a process to send information to another process. There are several ways of sending information to another process: signals, pipes, shared memory, message queues, semaphores, streams, or sockets.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>interrupt</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A hardware signal that causes a CPU to set aside normal processing and begin execution of an interrupt handler. An interrupt is parameterized by the type of bus and the <GLOSSARYITEM>interrupt level</GLOSSARYITEM>, and possibly with an <GLOSSARYITEM>interrupt vector</GLOSSARYITEM> number. The kernel uses this information to select the interrupt handler for that device.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>interrupt level</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A number that characterizes the source of an <GLOSSARYITEM>interrupt</GLOSSARYITEM>. The VME bus provides for seven interrupt levels. Other buses have different schemes.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>interrupt priority level</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The relative priority at which a bus or device requests that the CPU call an interrupt process. Interrupts at a higher level are taken first. The interrupt handler for an interrupt can be preempted on its CPU by an interrupt handler for an interrupt of higher level.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>interrupt vector</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A number that characterizes the specific device that caused an <GLOSSARYITEM>interrupt</GLOSSARYITEM>. Most VME bus devices have a specific vector number set by hardware, but some can have their vector set by software.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>ioctl</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Control a character device. Character device drivers may include a &ldquo;special function&rdquo; entry point, <VARIABLE>pfx</VARIABLE><FUNCTION>ioct</FUNCTION>().</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>IRQ</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Interrupt Request Input, a hardware signal that initiates an interrupt.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>k0</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Virtual address range within the kernel address space that is cached but not mapped by translation look-aside buffers. Also referred to as kseg0.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>k1</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Virtual address range within the kernel address space that is neither cached nor mapped. Also called kseg1.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>k2</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Virtual address range within the kernel address space that can be both cached and mapped by translation look-aside buffers. Also called kseg2.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>kernel level</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The level of privilege at which code in the IRIX kernel runs. The kernel has a private address space, not acceptable to processes at <GLOSSARYITEM>user-level</GLOSSARYITEM>, and has sole access to physical memory.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>kilobyte (KB)</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>1,024 bytes, a unit chosen because it is both an integer power of 2 (2<SUPERSCRIPT>10</SUPERSCRIPT>) and close to 1,000, the basic scale multiple of engineering quantities. Thus 1,024&nbsp;KB, 2<SUPERSCRIPT>20</SUPERSCRIPT>, is 1&nbsp;megabyte (MB) and close to 1e6; 1,024&nbsp;MB, 2<SUPERSCRIPT>30</SUPERSCRIPT>, is 1&nbsp;gigabyte (GB) and close to 1e9; 1,024&nbsp;GB, 2<SUPERSCRIPT>40</SUPERSCRIPT>, is 1&nbsp;terabyte (TB) and close to 1e12. In the MIPS architecture using 32-bit addressing, the user segment spans 2&nbsp;GB. Using 64-bit addressing, both the user segment and the range of physical addresses span 1&nbsp;TB.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>kseg<VARIABLE>n</VARIABLE></GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH><ITALICS>See</ITALICS> k0, k1, k2.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>little-endian</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The hardware design in which the least significant bits of a multi-byte integer are stored in the byte with the lowest address. Little-endian order is the normal order in Intel processors, and optional in MIPS processors. Opposed to <GLOSSARYITEM>big-endian</GLOSSARYITEM>. (These terms are from Swift's <DOCTITLE>Gulliver's Travels</DOCTITLE>, in which the citizens of Lilliput and Blefescu are divided by the burning question of whether one's breakfast egg should be opened at the little or the big end.)</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>lock</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A data object that represents the exclusive right to use a resource. A lock can be implemented as a <GLOSSARYITEM>semaphore</GLOSSARYITEM> (q.v.) with a count of 1, but because of the frequency of use of locks, they have been given distinct software support (see <REFPAGE>LOCK(D3)</REFPAGE>).</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>major device number</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A number that specifies which device driver manages the device represented by a <GLOSSARYITEM>device special file</GLOSSARYITEM>. In IRIX 6.2, a major number has at most 9 bits of precision (0-511). Numbers 60-79 are used for OEM drivers. See also <GLOSSARYITEM>minor device number</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>map</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>In general, to translate from one set of symbols to another. Particularly, translate one range of memory addresses to the addresses for the corresponding space in another system. The <GLOSSARYITEM>virtual memory</GLOSSARYITEM> hardware maps the process address space onto pages of physical memory. The <GLOSSARYITEM>mapping registers</GLOSSARYITEM> in a DMA device map bus addresses to physical memory corresponding to a buffer. The <REFPAGE>mmap(2)</REFPAGE> system call maps part of process address space onto the contents of a file.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>mapping registers</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Registers in a DMA device or its bus attachment that store the address translation data so that the device can access a buffer in physical memory.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>megabyte</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH><ITALICS>See</ITALICS> kilobyte.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>minor device number</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A number that, encoded in a <GLOSSARYITEM>device special file</GLOSSARYITEM>, identifies a single hardware unit among the units managed by one device driver. Sometimes used to encode device management options as well. In IRIX 6.2, a minor number may have up to 18 bits of precision. <ITALICS>See also</ITALICS> major device number.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>mmapped device driver</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A driver that supports mapping hardware registers into process address space, permitting a user process to access device data as if it were in memory.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>module</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A STREAMS module consists of two related queue structures, one for upstream messages and one for downstream messages. One or more modules may be pushed onto a stream between the stream head and the driver, usually to implement and isolate a communication protocol or a line discipline.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>open</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Gain access to a device. The kernel calls the <VARIABLE>pfx</VARIABLE><FUNCTION>open</FUNCTION>() entry when the user process issues an <FUNCTION>open</FUNCTION>() system call.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>page</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A block of virtual or physical memory, of a size set by the operating system and residing on a page-size address boundary. The page size is 4,096 (2<SUPERSCRIPT>12</SUPERSCRIPT>) bytes when in 32-bit mode; the page size in 64-bit mode can range from 2<SUPERSCRIPT>12</SUPERSCRIPT> to 2<SUPERSCRIPT>20</SUPERSCRIPT> at the operating system's choice (see the <REFPAGE>getpagesize(2)</REFPAGE> reference page).</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>programmed I/O</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Programmed I/O (PIO), meaning access to a device by mapping device registers into process address space, and transferring data by storing and loading single bytes or words.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>poll</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Poll entry point for a non-stream character driver. A character device driver may include a <VARIABLE>drv</VARIABLE><FUNCTION>poll</FUNCTION>() entry point so that users can use <FUNCTION>select</FUNCTION>(2) or <FUNCTION>poll</FUNCTION>(2) to poll the file descriptors opened on such devices. </PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>prefix</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Driver prefix. The name of the driver must be the first characters of its standard entry point names; the combined names are used to dynamically link the driver into the kernel. Specified in the <FILENAME>master.d</FILENAME> file for the driver. Throughout this manual, the prefix <VARIABLE>pfx</VARIABLE> represents the name of the device driver, as in <VARIABLE>pfx</VARIABLE><FUNCTION>open</FUNCTION>(), <VARIABLE>pfx</VARIABLE><FUNCTION>ioctl</FUNCTION>().</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>primary cache</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The <GLOSSARYITEM>cache memory</GLOSSARYITEM> most closely attached to the CPU execution unit, usually in the processor chip.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>primitives</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Fundamental operations from which more complex operations can be constructed.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>priority inheritance</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>An implementation technique that prevents <GLOSSARYITEM>priority inversion</GLOSSARYITEM> when a process of lower priority holds a mutual exclusion <GLOSSARYITEM>lock</GLOSSARYITEM> and a process of higher priority is blocked waiting for the lock. The process holding the lock &ldquo;inherits&rdquo; or acquires the priority of the highest-priority waiting process in order to expedite its release of the lock. IRIX supports priority inheritance for mutual exclusion locks only.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>priority inversion</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The effect that occurs when a low-priority process holds a <GLOSSARYITEM>lock</GLOSSARYITEM> that a process of higher priority needs. The lower priority process runs and the higher priority process waits, inverting the intended priorities. <ITALICS>See</ITALICS> priority inheritance.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>process control</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>System calls that allow a process to control its own execution. A process can allocate memory, lock itself in memory, set its scheduling priorities, wait for events, execute a new program, or create a new process.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>protocol stack</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A software subsystem that manages the flow of data on a communications channel according to the rules of a particular protocol, for example the TCP/IP protocol. Called a &ldquo;stack&rdquo; because it is typically designed as a hierarchy of layers, each supporting the one above and using the one below.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>pseudo-device</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Software that uses the facilities of the <GLOSSARYITEM>DDI/DKI</GLOSSARYITEM> to provide specialized access to data, without using any actual hardware device. Pseudo-devices can provide access to system data structures that are unavailable at the user-level. For example, the <COMMAND>fsctl</COMMAND> driver gives superuser access to filesystem data (see <REFPAGE>fsctl(7)</REFPAGE>) and the inode monitor pseudo-device allows access to file activity (see <REFPAGE>imon(7)</REFPAGE>).</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>read</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Read data from a device. The kernel executes the <VARIABLE>pfx</VARIABLE><FUNCTION>read</FUNCTION>() entry point whenever a user process calls the <FUNCTION>read</FUNCTION>() system call. </PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>scatter/gather</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>An I/O operation in which what to the device is a contiguous range of data is distributed across multiple pages that may not be contiguous in physical memory. On input to memory, the device scatters the data into the different pages; on output, the device gathers data from the pages.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>SCSI</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Small Computer System Interface, the bus architecture commonly used to attach disk drives and other block devices.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>SCSI driver interface</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A collection of machine-independent input/output controls, functions, and data structures, that provides a standard interface for writing a SCSI driver.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>semaphore</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A data object that represents the right to use a limited resource, used for synchronization and communication between asynchronous processes. A semaphore contains a count that represents the quantity of available resource (typically 1). The <FUNCTION>P</FUNCTION> operation (mnemonic: de<ITALICS>P</ITALICS>lete) decrements the count and, if the count goes negative, causes the caller to wait (see <REFPAGE>psema(D3X)</REFPAGE>, <REFPAGE>cpsema(D3X)</REFPAGE>). The <FUNCTION>V</FUNCTION> operation (mnemonic: re<ITALICS>V</ITALICS>ive) increments the count and releases any waiting process (see <REFPAGE>vsema(D3X)</REFPAGE>, <REFPAGE>cvsema(D3X)</REFPAGE>). <ITALICS>See also</ITALICS> lock.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>signals</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Software interrupts used to communicate between processes. Specific signal numbers can be handled or blocked. Device drivers sometimes use signals to report events to user processes. Device drivers that can wait have to be sensitive to the possibility that a signal could arrive.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>sleep</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Suspend process execution pending occurrence of an event; the term &ldquo;block&rdquo; is also used.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>socket</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A software structure that represents one endpoint in a two-way communications link. Created by <REFPAGE>socket(2)</REFPAGE>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>spl</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Set priority level, a function that was formerly part of the <GLOSSARYITEM>DDI/DKI</GLOSSARYITEM>, and used to lock or allow interrupts on a processor. It is not possible to use spl effectively in a multiprocessor system, so it has been superceded by more sophisticated means of synchronization such as the <GLOSSARYITEM>lock</GLOSSARYITEM> and <GLOSSARYITEM>semaphore</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>strategy</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>In general, the plan or policy for arbitrating between multiple, concurrent requests for the use of a device. Specifically in disk device drivers, the policy for scheduling multiple, concurrent disk block-read and block-write requests.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>STREAM</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A linked list of kernel data structures that provide a full-duplex data path between a user process and a device. Streams are supported by the STREAMS facilities in UNIX System V Release 3 and later.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>STREAM head</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Inserted by the STREAMS subsystem, the STREAM head processes STREAMS-related system calls and performs data transfers between user space and kernel space. Every stream has a stream head. It is the component of a stream closest to the user process.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>STREAMS</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A kernel subsystem used to build a stream, which is a modular, full-duplex data path between a device and a user process. In IRIX 5.x and later, the TCP/IP stack sits on top of the STREAMS stack. The Transport Layer Interface (TLI) is fully supported.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>STREAMS driver</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A software module that implements one stage of a STREAM. A STREAMS driver can be &ldquo;pushed on&rdquo; or &ldquo;popped off&rdquo; any <GLOSSARYITEM>STREAM</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>TCP/IP</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Transmission Control Protocol/Internet Protocol.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>terabyte</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>See <GLOSSARYITEM>kilobyte (KB)</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>TFP</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Internal name for the MIPS R8000 processor, used in some Silicon Graphics publications.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>TLI</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Transport Interface Layer.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>unmap</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Disconnect a memory-mapped device from user process space, breaking the association set by mapping it.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>user-level</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The privilege level of the system at which user-initiated programs run. A user-level process can access the contents of one address space, and can access files and devices only by calling kernel functions. Contrast to <GLOSSARYITEM>kernel level</GLOSSARYITEM>.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>VME bus</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>VERSA Module Eurocard bus, a bus architecture supported by the Silicon Graphics Challenge and Onyx systems.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>VME-bus adapter</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>A hardware conduit that translates host CPU operations to VME-bus operations and decodes some VME-bus operations to translate them to the host side.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>virtual memory</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Memory contents that appear to be in contiguous addresses, but are actually mapped to different physical memory locations by hardware action of the translation lookaside buffer (TLB) and page tables managed by the IRIX kernel. The kernel can exploit virtual memory to give each process its own address space, and to load many more processes than physical memory can support.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>virtual page number</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>The most significant bits of a virtual address, which select a <GLOSSARYITEM>page</GLOSSARYITEM> of memory. The processor hardware looks for the VPN in the TLB; if the VPN is found, it is translated to a physical page address. If it is not found, the processor traps to an exception routine.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>volatile</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Subject to change. The volatile keyword informs the compiler that a variable could change value at any time (because it is mapped to a hardware register, or because it is shared with other, concurrent processes) and so should always be loaded before use.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>wakeup</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Resume suspended process execution.</PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY>write</GLOSSARYENTRY>
<GLOSSARYDEF><PARAGRAPH>Write data to a device. The kernel executes the <VARIABLE>pfx</VARIABLE><FUNCTION>read</FUNCTION>() or <VARIABLE>pfx</VARIABLE><FUNCTION>write</FUNCTION>() entry points whenever a user process calls the <FUNCTION>read</FUNCTION>() or <FUNCTION>write</FUNCTION>() system calls. </PARAGRAPH>
</GLOSSARYDEF>
</GLOSSARYTERM>
<GLOSSARYTERM><GLOSSARYENTRY></GLOSSARYENTRY>
</GLOSSARYTERM>
</GLOSSARY>

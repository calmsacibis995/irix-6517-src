<!-- Produced by version 3.12 (09/13/95) of SGI Frame/SGML translator -->
<CHAPTER LBL="2"><TITLE><XREFTARGET ID="86008">XFS Filesystem Administration</TITLE><PARAGRAPH>This chapter explains the procedures for creating XFS filesystems, converting EFS filesystems to XFS, and performing filesystem administration tasks that require programs specific to XFS.</PARAGRAPH>
<PARAGRAPH>The main sections in this chapter are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="22464" TYPE="TITLE">&ldquo;Planning for XFS Filesystems&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="72328" TYPE="TITLE">&ldquo;Making an XFS Filesystem on a Disk Partition&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="94085" TYPE="TITLE">&ldquo;Making an XFS Filesystem on an XLV Logical Volume&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="72401" TYPE="TITLE">&ldquo;Converting Filesystems on the System Disk From EFS to XFS&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="96722" TYPE="TITLE">&ldquo;Converting a Filesystem on an Option Disk from EFS to XFS&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="92347" TYPE="TITLE">&ldquo;Checking Filesystem Consistency&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="22464">Planning for XFS Filesystems</TITLE><PARAGRAPH>The following subsections discuss choices you must make and preparation for creating an XFS filesystem. Each time you plan to make an XFS filesystem or convert a filesystem from EFS to XFS, you should review each section and make any necessary preparations.<INDEXTARGET ID="ch21"><!-- POSTPROCESSDATA: ch21|XFS:preparing to make filesystems --></PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE>Don't Use XFS When ...</TITLE><PARAGRAPH>Do not use an XFS filesystem if any of the following is true:<INDEXTARGET ID="ch22"><!-- POSTPROCESSDATA: ch22|XFS:can't use when ... --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>There is insufficient free disk space (see the section <XREF IDREF="47539" TYPE="TITLE">&ldquo;Checking for Adequate Free Disk Space&rdquo;</XREF> in this chapter).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The system doesn't meet the hardware configuration requirements listed in the section <XREF IDREF="50173" TYPE="TITLE">&ldquo;Hardware Requirements&rdquo;</XREF> in &ldquo;<XREF IDREF="41688" TYPE="TEXT">About This Guide</XREF>.&rdquo;</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The filesystem is the root filesystem and you intend to increase its size later. In this case, delay the conversion until you are ready to increase the size of the filesystem.<INDEXTARGET ID="ch23"><!-- POSTPROCESSDATA: ch23|root filesystem:growing --></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The filesystems are the root and, if present, usr filesystems and you want to continue using the System Recovery procedure (item 4, Recover System, on the System Maintenance Menu). System Recovery doesn't work with XFS filesystems because of the limitations of <COMMAND>bru</COMMAND>(1M), which is used by System Recovery. However, <COMMAND>xfsdump</COMMAND>(1M) can be used to create backups that can be used to recover the system, if necessary.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="12819">Prerequisite Software</TITLE><PARAGRAPH>Using XFS filesystems and XLV logical volumes requires at least IRIX 5.3 with XFS or a later system software release. The procedures in this chapter assume that the proper software has been installed and the system rebooted prior to beginning the procedure. <INDEXTARGET ID="ch24"><!-- POSTPROCESSDATA: ch24|prerequisite software --><INDEXTARGET ID="ch25"><!-- POSTPROCESSDATA: ch25|XFS:subsystems --><INDEXTARGET ID="ch26"><!-- POSTPROCESSDATA: ch26|software release --></PARAGRAPH>
<PARAGRAPH>Some important subsystems in the IRIX 5.3 with XFS and later releases are:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM><ITALICS>eoe1.sw.unix</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>The minimum release level is IRIX 5.3 with XFS.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>eoe2.sw.efs</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>This subsystem is required.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>eoe2.sw.lv</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>This subsystem needs to be installed only if <COMMAND>lv</COMMAND> logical volumes are in use on the system.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>eoe2.sw.xfs</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>This subsystem is required.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>eoe2.sw.xlv</ITALICS></HANGITEM>
<HANGBODY><PARAGRAPH>Install this subsystem if you intend to use the XLV volume manager.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM><ITALICS>eoe2.sw.xlvplex</ITALICS> </HANGITEM>
<HANGBODY><PARAGRAPH>Install this subsystem if you have purchased the Disk Plexing Option software option.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>In addition to the subsystems listed above, software patches may be required to use all of the features documented in this guide. See the <INDEXTARGET ID="ch27"><!-- POSTPROCESSDATA: ch27|NFS:software release --><INDEXTARGET ID="ch28"><!-- POSTPROCESSDATA: ch28|IDO software release --><INDEXTARGET ID="ch29"><!-- POSTPROCESSDATA: ch29|compatibility:of software releases --><DOCTITLE>xfs</DOCTITLE>, <DOCTITLE>IRIX</DOCTITLE>, <DOCTITLE>eoe</DOCTITLE>, <DOCTITLE>nfs</DOCTITLE>, and <DOCTITLE>dev Release Notes</DOCTITLE> for more information. </PARAGRAPH>
<PARAGRAPH>If you are converting the root and usr filesystems, you must have software distribution CDs or access to a remote distribution directory for IRIX Release 5.3 with XFS or a later system software release. Instructions on loading the miniroot from these CDs is provided in Chapter 3 of the <DOCTITLE>Software Installation Administrator's Guide</DOCTITLE>.</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="45044">Choosing Block Sizes</TITLE><PARAGRAPH>XFS allows you to choose two types of block sizes for each filesystem. (EFS has a fixed block size of 512 bytes.) One is the filesystem block size, used for user files, and the other is the extent size, used for the real-time subvolume on an XLV logical volume, if present. The extent size is the amount of space that will be allocated to the file every time more space needs to be allocated to it.<INDEXTARGET ID="ch210"><!-- POSTPROCESSDATA: ch210|XFS:block sizes --><INDEXTARGET ID="ch211"><!-- POSTPROCESSDATA: ch211|block sizes:range of sizes --><INDEXTARGET ID="ch212"><!-- POSTPROCESSDATA: ch212|block sizes:guidelines --></PARAGRAPH>
<PARAGRAPH>For XFS filesystems on disk partitions and for the data subvolume of filesystems on XLV volumes, the block size guidelines for user files are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The minimum block size is 512 bytes.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The maximum block size is 65536 bytes (64K). However, in general block sizes shouldn't be larger than 4096 bytes.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The default block size is 4096 bytes (4K).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>For root filesystems on systems with separate root and usr filesystems, the recommended block size is 512 bytes. (Root filesystems in this configuration usually don't have much extra disk space and large block sizes compound the problem.)</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>For news servers, the recommended block size is 2048 bytes.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>In general, the recommended block size for filesystems under 100 MB is 512 bytes. For larger filesystems 4096 bytes is recommended.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Block sizes are specified in bytes in decimal (default), octal (prefixed by 0), or hexadecimal (prefixed by 0x or 0X). If the number has the suffix &ldquo;k&rdquo;, it is multiplied by 1024. If the number has the suffix &ldquo;m&rdquo;, it is multiplied by 1048576 (1024 * 1024).<INDEXTARGET ID="ch213"><!-- POSTPROCESSDATA: ch213|block sizes:syntax --></PARAGRAPH>
<PARAGRAPH>For real-time subvolumes of XLV logical volumes, the block size is the same as the block size of the data subvolume. The guidelines for the extent size are:<INDEXTARGET ID="ch214"><!-- POSTPROCESSDATA: ch214|extent size --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The extent size must be a multiple of the block size of the data subvolume.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The minimum extent size is 64 KB.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The maximum extent size is 1 GB.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The default extent size is 64 KB.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The extent size should be matched to the application and the stripe unit of the volume elements used in the real-time subvolume.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="93345">Choosing the Log Type and Size</TITLE><PARAGRAPH>Each XFS filesystem has a log that contains filesystem journaling records. This log requires dedicated disk space. This disk space doesn't show up in <INDEXTARGET ID="ch215"><!-- POSTPROCESSDATA: ch215|XFS:logs. <ITALICS>See</ITALICS> logs. --><INDEXTARGET ID="ch216"><!-- POSTPROCESSDATA: ch216|logs:description --><COMMAND>df</COMMAND>(1) listings, nor can you access it with a filename.</PARAGRAPH>
<PARAGRAPH>The location of the disk space depends on the type of log you choose. The two types of logs are:</PARAGRAPH>
<HANGLIST><HANGPAIR><HANGITEM>external</HANGITEM>
<HANGBODY><PARAGRAPH>When an XFS filesystem is created on an XLV logical volume and log records are put into a log subvolume, the log is called an <INDEXTARGET ID="ch217"><!-- POSTPROCESSDATA: ch217|logs:external, definition --><ITALICS>external</ITALICS> log. The log subvolume is one or more disk partitions dedicated to the log exclusively.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
<HANGPAIR><HANGITEM>internal</HANGITEM>
<HANGBODY><PARAGRAPH>When an XFS filesystem is created on a disk partition, or when it is created on an XLV logical volume that doesn't have a log subvolume, log records are put into a dedicated portion of the disk partition (or data subvolume) that contains user files. This type of log is called an <INDEXTARGET ID="ch218"><!-- POSTPROCESSDATA: ch218|logs:internal, definition --><ITALICS>internal</ITALICS> log.</PARAGRAPH>
</HANGBODY>
</HANGPAIR>
</HANGLIST>
<PARAGRAPH>The guidelines for choosing the log type are:<INDEXTARGET ID="ch219"><!-- POSTPROCESSDATA: ch219|logs:choosing type --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If you want the log and the data subvolume to be on different partitions or to use different subvolume configurations for them, use an external log.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are making the XFS filesystem on a disk partition (rather than on an XLV logical volume), you must use an internal log. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are making the XFS filesystem on an XLV logical volume that has no log subvolume, you must use an internal log.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are making the XFS filesystem on an XLV logical volume that has a log subvolume, you must use an external log.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>For more information about XLV and log subvolumes, see <XREF IDREF="92397" TYPE="TITLE">Chapter&nbsp;4, &ldquo;XLV Logical Volumes.&rdquo;</XREF></PARAGRAPH>
<PARAGRAPH>The amount of disk space needed for the log is a function of how the filesystem is used. The amount of disk space required for log records is proportional to the transaction rate and the size of transactions on the filesystem, not the size of the filesystem. Larger block sizes result in larger transactions. Transactions from directory updates (for example, <INDEXTARGET ID="ch220"><!-- POSTPROCESSDATA: ch220|logs:choosing size --><INDEXTARGET ID="ch221"><!-- POSTPROCESSDATA: ch221|disk space:for logs --><COMMAND>mkdir</COMMAND>(1), <COMMAND>rmdir</COMMAND>(1), <COMMAND>create</COMMAND>(2), and <COMMAND>unlink</COMMAND>(2)) cause more log data to be generated. You must choose the amount of disk space to dedicate to the log (called the log size). </PARAGRAPH>
<PARAGRAPH>The minimum log size is 512 blocks. Some guidelines for log sizes are shown in <XREF IDREF="96419" TYPE="TABLE">Table&nbsp;2-1</XREF>. </PARAGRAPH>
<TABLE COLUMNS="3"><CAPTION LBL="2-1"><PREFIX>Table 2-1 </PREFIX><XREFTARGET ID="96419">Log Size Guidelines</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="57"><PARAGRAPH>Log Size</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="64"><PARAGRAPH>Blocks</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="210"><PARAGRAPH>Transaction Activity</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>Small</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="64"><PARAGRAPH>512 blocks</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="210"><PARAGRAPH>Low update activity or small filesystem (less than 
100 MB)</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>Medium</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="64"><PARAGRAPH>2000 blocks</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="210"><PARAGRAPH>Average</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>Large</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="64"><PARAGRAPH>4000 blocks</PARAGRAPH>
</CELL>
<CELL LEFT="135" WIDTH="210"><PARAGRAPH>Very high</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>For external logs, the size of the log is the same as the size of the log subvolume. The log subvolume is one or more disk partitions. You may find that you need to re-partition a disk to create a properly sized log subvolume (see the section <INDEXTARGET ID="ch222"><!-- POSTPROCESSDATA: ch222|logs:external, specifying size --><XREF IDREF="69866" TYPE="TITLE">&ldquo;Disk Partitioning&rdquo;</XREF> in this chapter). For external logs, the size of the log is set when you create the log subvolume with <COMMAND>xlv_make</COMMAND>(1M).</PARAGRAPH>
<PARAGRAPH>For internal logs, the size of the log is specified when you create the filesystem with <INDEXTARGET ID="ch223"><!-- POSTPROCESSDATA: ch223|logs:internal, specifying size --><COMMAND>mkfs</COMMAND>(1M).</PARAGRAPH>
<PARAGRAPH>The log size is specified in bytes or as a multiple of the filesystem block size. Decimal numbers are the default, but they can be specified in octal (prefixed by 0) or hexadecimal (prefixed by 0x or 0X). Numbers with no suffixes are bytes. If the number has the suffix &ldquo;k&rdquo;, it is multiplied by 1024 bytes. If the number has the suffix &ldquo;m&rdquo;, it is multiplied by 1048576 (1024 * 1024) bytes or one megabyte. If the number has the suffix &ldquo;b&rdquo;, it is multiplied by the filesystem block size.<INDEXTARGET ID="ch224"><!-- POSTPROCESSDATA: ch224|logs:size syntax --></PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="47539">Checking for Adequate Free Disk Space</TITLE><PARAGRAPH>XFS filesystems may require more disk space than EFS filesystems for the same files. This extra disk space is required to accommodate the XFS log and as a result of block sizes larger than EFS's 512 bytes. However, XFS represents free space more compactly, on average, and the inodes are allocated dynamically by XFS, which can result in less disk space usage. <INDEXTARGET ID="ch225"><!-- POSTPROCESSDATA: ch225|disk space:increase for XFS --><INDEXTARGET ID="ch226"><!-- POSTPROCESSDATA: ch226|disk space:estimating with <ITALICS>xfs_estimate</ITALICS> --><INDEXTARGET ID="ch227"><!-- POSTPROCESSDATA: ch227|<ITALICS>xfs_estimate</ITALICS> utility:how to use --></PARAGRAPH>
<PARAGRAPH>This procedure can be used to get a rough idea of the amount of free disk space that will remain after a filesystem is converted to XFS:</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH><XREFTARGET ID="83401">Get the size in kilobytes of the filesystem to be converted and round the result to the next megabyte. For example:</PARAGRAPH>
<CODE>
<USERINPUT>df -k</USERINPUT>&space;
Filesystem           Type  kbytes     use   avail %use  Mounted on
/dev/root             efs  969857  648451  321406  67%  /
</CODE>
<PARAGRAPH>This filesystem is 969857 KB, which rounds up to 970 MB.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="54676">If you plan to use an internal log (see the section <XREF IDREF="93345" TYPE="TITLE">&ldquo;Choosing the Log Type and Size&rdquo;</XREF> in this chapter), give this command to get an estimate of the disk space required for the files in the filesystem after conversion:</PARAGRAPH>
<CODE>
<USERINPUT>xfs_estimate -i </USERINPUT><VARIABLE>logsize</VARIABLE><USERINPUT>&space;-b</USERINPUT>&space;<VARIABLE>blocksize</VARIABLE>&space;<VARIABLE>mountpoint</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>logsize</VARIABLE> is the size of the log. <VARIABLE>blocksize</VARIABLE> is the block size you chose for user files in the section <XREF IDREF="45044" TYPE="TITLE">&ldquo;Choosing Block Sizes&rdquo;</XREF> in this chapter. <COMMAND>mountpoint</COMMAND> is the directory that is the mount point for the filesystem.</PARAGRAPH>
<PARAGRAPH>The output of this command tells you how much disk space the files in the filesystem and an internal log of size <VARIABLE>logsize</VARIABLE> will take after conversion to XFS.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="98482">If you plan to use an external log, give this command to get an estimate of the disk space required for the files in the filesystem after conversion:</PARAGRAPH>
<CODE>
<USERINPUT>xfs_estimate -e 0 -b</USERINPUT>&space;<VARIABLE>blocksize</VARIABLE>&space;<VARIABLE>mountpoint</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>blocksize</VARIABLE> is the block size you chose for user files in the section <XREF IDREF="45044" TYPE="TITLE">&ldquo;Choosing Block Sizes&rdquo;</XREF> in this chapter. <COMMAND>mountpoint</COMMAND> is the directory that is the mount point for the filesystem.</PARAGRAPH>
<PARAGRAPH>The first line of output from <COMMAND>xfs_estimate</COMMAND> tells you how much disk space the files in the filesystem will take after conversion to XFS. In addition to this, you will need disk space on a different disk partition for the external log. You should ignore the second line of output.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="18858">Compare the size of the filesystem from step <XREF IDREF="83401" TYPE="TEXT">1</XREF> with the size of the files from step <XREF IDREF="54676" TYPE="TEXT">2</XREF> or step <XREF IDREF="98482" TYPE="TEXT">3</XREF>. For example,</PARAGRAPH>
<CODE>
970 MB - 739 MB = 231 MB free disk space
739 MB / 970 MB = 76.2% full
</CODE>
<PARAGRAPH>Use this information to decide if there will be an adequate amount of free disk space if this filesystem is converted to XFS.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
<PARAGRAPH>If the amount of free disk space after conversion is not adequate, some options to consider are:<INDEXTARGET ID="ch228"><!-- POSTPROCESSDATA: ch228|disk space:getting more --><INDEXTARGET ID="ch229"><!-- POSTPROCESSDATA: ch229|root filesystem:combining with usr --><INDEXTARGET ID="ch230"><!-- POSTPROCESSDATA: ch230|usr filesystem:combining with root filesystem --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Implement the usual solutions for inadequate disk space: remove unnecessary files, archive files to tape, move files to another filesystem, add another disk, and so on.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Repartition the disk to increase size of the disk partition for the filesystem.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If there isn't sufficient disk space in the root filesystem and you have separate root and usr filesystems, switch to combined root and usr filesystems on a single disk partition.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If the filesystem is on an <COMMAND>lv</COMMAND> logical volume or an XLV logical volume, increase the size of the volume.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Create an XLV logical volume with a log subvolume elsewhere, so that all of the disk space can be used for user files.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="69866">Disk Partitioning</TITLE><PARAGRAPH>Many system administrators may find that they want or need to repartition disks when they switch to XFS filesystems and/or XLV logical volumes. The next two subsections explain why you might want to repartition and give some tips on partition sizes and types.<INDEXTARGET ID="ch231"><!-- POSTPROCESSDATA: ch231|disk partitions:planning --><INDEXTARGET ID="ch232"><!-- POSTPROCESSDATA: ch232|disk partitions:repartitioning --></PARAGRAPH>
<SECTION3 LBL="" HELPID = ""><TITLE>Why Should Disks Be Repartitioned?</TITLE><PARAGRAPH>Some of the reasons to consider repartitioning are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If the system disk has separate partitions for root and usr, the root partition may be running out of space. Repartitioning is a way to increase the space in root (at the expense of the size of usr) or to solve the problem by combining root and usr into a single partition.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>System administration is a little easier on systems with combined root and usr filesystems.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you plan to use XLV logical volumes, you may want to put the XFS log into a small subvolume. This requires disk repartitioning to create a small partition for the log subvolume.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you plan to use XLV logical volumes, you may want to repartition to create disk partitions of equal size that can be striped or plexed.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION3>
<SECTION3 LBL="" HELPID = ""><TITLE>How Should Disks Be Repartitioned?</TITLE><PARAGRAPH>Explaining the details of using <INDEXTARGET ID="ch233"><!-- POSTPROCESSDATA: ch233|<ITALICS>fx</ITALICS> utility:new features --><COMMAND>fx</COMMAND> to repartition a disk is beyond the scope of this guide (see the <COMMAND>fx</COMMAND>(1M) reference page for details). However, the list below provides useful information about new features of <COMMAND>fx</COMMAND> and about partitioning details that are specific to XFS and XLV.</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If you are repartitioning the system disk, you must use the standalone version of <COMMAND>fx</COMMAND>. Otherwise, you can use the IRIX version of <COMMAND>fx</COMMAND>. Using the expert mode of <COMMAND>fx</COMMAND> (the <BOLD>&ndash;x</BOLD> option) shouldn't be necessary.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you repartition a system disk, remember that the swap space should never be less than 40 MB. A smaller swap space impacts system performance and makes it impossible to install software using the miniroot.<INDEXTARGET ID="ch234"><!-- POSTPROCESSDATA: ch234|<ITALICS>fx</ITALICS> utility:standalone vs. IRIX --></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>New partition types have been added to <INDEXTARGET ID="ch235"><!-- POSTPROCESSDATA: ch235|<ITALICS>fx</ITALICS> utility:disk partition types --><INDEXTARGET ID="ch236"><!-- POSTPROCESSDATA: ch236|disk partitions:partition types --><INDEXTARGET ID="ch237"><!-- POSTPROCESSDATA: ch237|backup and restore:compatibility of dump and restore utilities --><COMMAND>fx</COMMAND>. <XREF IDREF="93747" TYPE="TABLE">Table&nbsp;2-2</XREF> lists and describes all partition types.</PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="2-2"><PREFIX>Table 2-2 </PREFIX><XREFTARGET ID="93747">Disk Partition </CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="57"><PARAGRAPH>Type</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Description</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>efs</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Used for an EFS filesystem</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>lvol</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Part of an <COMMAND>lv</COMMAND> logical volume</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>raw</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Used for data</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>xfs </PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Used for an XFS filesystem</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>xfslog </PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Used for an XFS filesystem log</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>xlv</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Part of an XLV logical volume</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>volhdr</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Volume header</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="57"><PARAGRAPH>volume</PARAGRAPH>
</CELL>
<CELL LEFT="65" WIDTH="144"><PARAGRAPH>Entire volume</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</BULLET>
<BULLET><PARAGRAPH>The repartition/usrroot and repartition/option menu items have been changed. If you select these menu items, you are asked what type of data partition you want. If you enter <USERINPUT>xfs</USERINPUT>, you are asked if you want a log partition. If you answer <USERINPUT>yes</USERINPUT>, <COMMAND>fx</COMMAND> makes partition 15 into a 4 MB xfslog partition, which can be used for an XLV log subvolume.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION3>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE>Dump and Restore Requirements</TITLE><PARAGRAPH>The filesystem conversion procedures in the sections <INDEXTARGET ID="ch238"><!-- POSTPROCESSDATA: ch238|backup and restore:during conversion to XFS --><XREF IDREF="72401" TYPE="TITLE">&ldquo;Converting Filesystems on the System Disk From EFS to XFS&rdquo;</XREF> and <XREF IDREF="96722" TYPE="TITLE">&ldquo;Converting a Filesystem on an Option Disk from EFS to XFS&rdquo;</XREF> in this chapter require that you dump the filesystems you plan to convert to tape or to another disk with sufficient free disk space to contain the dump image.</PARAGRAPH>
<PARAGRAPH>When you convert a system disk, you must use <INDEXTARGET ID="ch239"><!-- POSTPROCESSDATA: ch239|<ITALICS>dump</ITALICS> utility:requirements for conversion to XFS --><COMMAND>dump</COMMAND>(1M) and <COMMAND>restore</COMMAND>(1M). When you convert a filesystem on an option disk, you can any backup and restore programs. The reference pages for <COMMAND>dump</COMMAND> and <COMMAND>restore</COMMAND> are included in <XREF IDREF="21560" TYPE="TITLE">Appendix&nbsp;B, &ldquo;Reference Pages.&rdquo;</XREF>&space;</PARAGRAPH>
<PARAGRAPH> If you dump to a tape drive, follow these guidelines:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Have sufficient tapes available for dumping the filesystems to be converted.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are converting filesystems on a system disk, the tape drive must be local.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are converting filesystems on option disks, the tape drive can be local or remote.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The requirements for dumping to a different filesystem are:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The filesystem being converted must have 2 GB or less in use (the maximum size of the dump image file on an EFS filesystem).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The filesystem that will contain the dump must have sufficient disk space available to hold the filesystems to be converted.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are converting filesystems on a system disk, the filesystem where you place the dump must be local to the system.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If you are converting filesystems on option disks, the filesystem you dump to can be local or remote.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Dumping to disk takes about 10 minutes per gigabyte. Dumping to tape takes about 12 minutes per 100 megabytes.<INDEXTARGET ID="ch240"><!-- POSTPROCESSDATA: ch240|backup and restore:amount of time it takes --></PARAGRAPH>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="72328">Making an XFS Filesystem on a Disk Partition </TITLE><PARAGRAPH>This section explains how to create an XFS filesystem on an empty disk partition. This procedure applies to two cases:<INDEXTARGET ID="ch241"><!-- POSTPROCESSDATA: ch241|XFS:filesystem on a new disk partition --><INDEXTARGET ID="ch242"><!-- POSTPROCESSDATA: ch242|XFS:making filesystems --><INDEXTARGET ID="ch243"><!-- POSTPROCESSDATA: ch243|disk partitions:making an XFS filesystem --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The disk partition is not part of an XLV logical volume.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The disk partition is part of an XLV logical volume that doesn't have a log subvolume (the log is internal).</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>See the section <XREF IDREF="94085" TYPE="TITLE">&ldquo;Making an XFS Filesystem on an XLV Logical Volume&rdquo;</XREF> in this chapter for instructions on creating an XFS filesystem on an XLV logical volume that has a log subvolume (an external log). </PARAGRAPH>
<PARAGRAPH>You must be superuser to perform this procedure.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Review the subsections within the section <XREF IDREF="22464" TYPE="TITLE">&ldquo;Planning for XFS Filesystems&rdquo;</XREF> in this chapter to verify that you are ready to begin this procedure. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Identify the device name of the partition, <INDEXTARGET ID="ch244"><!-- POSTPROCESSDATA: ch244|device name:identifying --><INDEXTARGET ID="ch245"><!-- POSTPROCESSDATA: ch245|disk partitions:device names --><VARIABLE>partition</VARIABLE>, where you plan to create the filesystem. For example, if you plan to use partition 7 (the entire disk) of a SCSI option disk on controller 0, unit 2, <VARIABLE>partition</VARIABLE> is /dev/dsk/dks0d2s7. For more information on determining <VARIABLE>partition</VARIABLE> (also known as a <ITALICS>special</ITALICS> file), see <COMMAND>dks</COMMAND>(7M) for SCSI disks and <COMMAND>ipi</COMMAND>(7M) for Xylogics IPI disks.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If the disk partition is already mounted, unmount it:</PARAGRAPH>
<CODE>
<USERINPUT>umount </USERINPUT><VARIABLE>partition</VARIABLE>
</CODE>
<PARAGRAPH>Any data that is on the disk partition will be destroyed (to convert the data rather than destroy it, use the procedure in the section <XREF IDREF="96722" TYPE="TITLE">&ldquo;Converting a Filesystem on an Option Disk from EFS to XFS&rdquo;</XREF> in this chapter instead).</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Use the <INDEXTARGET ID="ch246"><!-- POSTPROCESSDATA: ch246|<ITALICS>mkfs</ITALICS> utility:command line syntax --><INDEXTARGET ID="ch247"><!-- POSTPROCESSDATA: ch247|block sizes:and <ITALICS>mkfs</ITALICS> --><COMMAND>mkfs</COMMAND>(1M) command to create the new XFS filesystem:</PARAGRAPH>
<CODE>
<USERINPUT>mkfs -d name=</USERINPUT><VARIABLE>partition</VARIABLE><USERINPUT>&space;-b size=</USERINPUT><VARIABLE>blocksize</VARIABLE><USERINPUT>&space;-l internal,size=</USERINPUT><VARIABLE>logsize</VARIABLE>
</CODE>
<PARAGRAPH><VARIABLE>blocksize</VARIABLE> is the filesystem block size (see the section <XREF IDREF="45044" TYPE="TITLE">&ldquo;Choosing Block Sizes&rdquo;</XREF> in this chapter) and <COMMAND>logsize</COMMAND> is the size of the area dedicated to log records (see the section <XREF IDREF="93345" TYPE="TITLE">&ldquo;Choosing the Log Type and Size&rdquo;</XREF> in this chapter).</PARAGRAPH>
<PARAGRAPH><XREF IDREF="29798" TYPE="TEXT">Example&nbsp;2-1</XREF> shows the command line used to create an XFS filesystem and the system output. The filesystem has a 10 MB internal log and a block size of 1K bytes and is on the partition <FILENAME>/dev/dsk/dks0d2s7</FILENAME>.</PARAGRAPH>
<EXAMPLE><CAPTION LBL="2-1"><PREFIX>Example 2-1 </PREFIX><COMMAND><XREFTARGET ID="29798">mkfs</COMMAND> Command for an XFS Filesystem With an Internal Log<INDEXTARGET ID="ch248"><!-- POSTPROCESSDATA: ch248|<ITALICS>mkfs</ITALICS> utility:example output --></CAPTION></EXAMPLE>
<CODE>
<USERINPUT>mkfs -d name=/dev/dsk/dks0d2s7 -b size=1k -l internal,size=10m</USERINPUT>&space;
meta-data=/dev/dsk/dks0d2s7      isize=256    agcount=8, agsize=128615 blks
data     =                       bsize=1024   blocks=1028916
log      =internal log           bsize=1024   blocks=10240
realtime =none                   bsize=65536  blocks=0, rtextents=0
</CODE>
</LIST>
<LIST><PARAGRAPH>If it doesn't already exist, create a mount point directory, <VARIABLE>mountdir</VARIABLE>, for the filesystem:</PARAGRAPH>
<CODE>
<USERINPUT>mkdir </USERINPUT><VARIABLE>mountdir</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="80129">To mount the filesystem immediately, give this command:</PARAGRAPH>
<CODE>
<USERINPUT>mount </USERINPUT><VARIABLE>partition</VARIABLE>&space;<VARIABLE>mountdir</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>To configure the system so that the new filesystem is automatically mounted when the system is booted, add this line to the file <INDEXTARGET ID="ch249"><!-- POSTPROCESSDATA: ch249|<ITALICS>/etc/fstab</ITALICS> file:entry for disk partition --><FILENAME>/etc/fstab</FILENAME>:</PARAGRAPH>
<CODE>
<VARIABLE>partition</VARIABLE>&space;<VARIABLE>mountdir</VARIABLE> xfs rw,raw=<VARIABLE>rawpartition</VARIABLE> 0 0
</CODE>
<PARAGRAPH>where <VARIABLE>rawpartition</VARIABLE> is the raw version of <VARIABLE>partition</VARIABLE>. For example, if <VARIABLE>partition</VARIABLE> is /dev/dsk/dks0d2s7, <VARIABLE>rawpartition</VARIABLE> is /dev/rdsk/dks0d2s7.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="94085">Making an XFS Filesystem on an XLV Logical Volume</TITLE><PARAGRAPH>This section describes how to make an XFS filesystem on an empty XLV volume that has an external log subvolume and a data subvolume. (Creating XLV volumes is explained in the section <INDEXTARGET ID="ch250"><!-- POSTPROCESSDATA: ch250|XLV logical volumes. <ITALICS>See</ITALICS> logical volumes. --><XREF IDREF="25568" TYPE="TITLE">&ldquo;Using xlv_make to Create Volume Objects&rdquo; in Chapter&nbsp;4</XREF>.)</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Review the subsections within the section <XREF IDREF="22464" TYPE="TITLE">&ldquo;Planning for XFS Filesystems&rdquo;</XREF> in this chapter to verify that you are ready to begin this procedure. </PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Use the <INDEXTARGET ID="ch251"><!-- POSTPROCESSDATA: ch251|<ITALICS>mkfs</ITALICS> utility:command line syntax --><COMMAND>mkfs</COMMAND>(1M) command to make the new XFS filesystem:</PARAGRAPH>
<CODE>
<USERINPUT>mkfs -b size=</USERINPUT><VARIABLE>blocksize</VARIABLE>&space;<VARIABLE>volume</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>blocksize</VARIABLE> is the block size for filesystem (see <XREF IDREF="45044" TYPE="TITLE">&ldquo;Choosing Block Sizes&rdquo;</XREF> in this chapter), and <VARIABLE>volume</VARIABLE> is the device name for the volume.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="25637" TYPE="TEXT">Example&nbsp;2-2</XREF> shows the command line used to create an XFS filesystem on a logical volume <FILENAME>/dev/dsk/xlv/a</FILENAME> and a block size of 1K bytes and the system output.</PARAGRAPH>
<EXAMPLE><CAPTION LBL="2-2"><PREFIX>Example 2-2 </PREFIX><COMMAND><XREFTARGET ID="25637">mkfs</COMMAND> Command for an XFS Filesystem With an External Log<INDEXTARGET ID="ch252"><!-- POSTPROCESSDATA: ch252|<ITALICS>mkfs</ITALICS> utility:example output --></CAPTION></EXAMPLE>
<CODE>
<USERINPUT>mkfs -b size=1k /dev/dsk/xlv/a</USERINPUT>&space;
meta-data=/dev/dsk/xlv/a         isize=256    agcount=8, agsize=245530 blks
data     =                       bsize=1024   blocks=1964240
log      =volume log             bsize=1024   blocks=25326
realtime =none                   bsize=65536  blocks=0, rtextents=0
</CODE>
<PARAGRAPH><XREF IDREF="35441" TYPE="TEXT">Example&nbsp;2-3</XREF> shows the command line used to create an XFS filesystem on a logical volume <FILENAME>/dev/dsk/xlv/xlv_data1</FILENAME> and the system output. The default block size of 4096 bytes is used and the real-time extent size is set to 128K bytes.</PARAGRAPH>
<EXAMPLE><CAPTION LBL="2-3"><PREFIX>Example 2-3 </PREFIX><COMMAND><XREFTARGET ID="35441">mkfs</COMMAND> Command for an XFS Filesystem With a Real-Time Subvolume</CAPTION></EXAMPLE>
<CODE>
<USERINPUT>mkfs_xfs -r extsize=128k /dev/rdsk/xlv/xlv_data1</USERINPUT>&space;
meta-data=/dev/rdsk/xlv/xlv_data1 isize=256    agcount=8, agsize=4300 blks
data     =                       bsize=4096   blocks=34400
log      =volume log             bsize=4096   blocks=34400
realtime =volume rt              bsize=131072 blocks=2560, rtextents=80
</CODE>
</LIST>
<LIST><PARAGRAPH>If it doesn't already exist, create a mount point directory, <VARIABLE>mountdir</VARIABLE>, for the filesystem:</PARAGRAPH>
<CODE>
<USERINPUT>mkdir </USERINPUT><VARIABLE>mountdir</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>To mount the filesystem immediately, give this command:</PARAGRAPH>
<CODE>
<USERINPUT>mount </USERINPUT><VARIABLE>volume</VARIABLE>&space;<VARIABLE>mountdir</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>To configure the system so the new filesystem is automatically mounted when the system is booted, add this line to the file <INDEXTARGET ID="ch253"><!-- POSTPROCESSDATA: ch253|<ITALICS>/etc/fstab</ITALICS> file:entry for an XLV logical volume --><FILENAME>/etc/fstab</FILENAME>:</PARAGRAPH>
<CODE>
<VARIABLE>volume</VARIABLE>&space;<VARIABLE>mountdir</VARIABLE> xfs rw,raw=<VARIABLE>rawvolume</VARIABLE> 0 0
</CODE>
<PARAGRAPH>where <VARIABLE>rawvolume</VARIABLE> is the raw version of <VARIABLE>volume</VARIABLE>. For example, if <VARIABLE>volume</VARIABLE> is /dev/dsk/xlv/a, <VARIABLE>rawvolume</VARIABLE> is /dev/rdsk/xlv/a and the <FILENAME>/etc/fstab</FILENAME> entry is:</PARAGRAPH>
<CODE>
/dev/dsk/xlv/a /a xfs rw,raw=/dev/rdsk/xlv/a 0 0
</CODE>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="72401">Converting Filesystems on the System Disk From EFS to XFS</TITLE><PARAGRAPH>This section explains the procedure for converting filesystems on the system disk from EFS to XFS. Some systems have two filesystems on the system disk, the root filesystem (mounted at <INDEXTARGET ID="ch254"><!-- POSTPROCESSDATA: ch254|XFS:on system disk --><INDEXTARGET ID="ch255"><!-- POSTPROCESSDATA: ch255|root filesystem:converting to XFS --><INDEXTARGET ID="ch256"><!-- POSTPROCESSDATA: ch256|usr filesystem:converting to XFS --><INDEXTARGET ID="ch257"><!-- POSTPROCESSDATA: ch257|XFS:converting system disk --><INDEXTARGET ID="ch258"><!-- POSTPROCESSDATA: ch258|root partition:converting to XFS --><FILENAME>/</FILENAME>) and the usr filesystem (mounted at <FILENAME>/usr</FILENAME>). Other systems have a single, combined root and usr filesystem mounted at <FILENAME>/</FILENAME>. This procedure covers both cases but assumes that neither <COMMAND>lv</COMMAND> nor XLV logical volumes are in use on the system disk. The basic procedure for converting a system disk is:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>Load the IRIX 5.3 with XFS miniroot.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Do a complete dump of filesystems on the system disk.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Repartition the system disk if necessary.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Create one or two new, empty XFS filesystems.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Restore the files from the filesystem dumps.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>Reboot the system.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>During this procedure, you can repartition the system disk if needed. For example, you can convert from separate root and usr filesystems to a single, combined filesystem, or you can resize partitions to make the root partition larger and the usr partition smaller. See the section <XREF IDREF="69866" TYPE="TITLE">&ldquo;Disk Partitioning&rdquo;</XREF> in this chapter for more information.</PARAGRAPH>
<PARAGRAPH>The early steps of this procedure ask you to identify the values of various variables, which are used later in the procedure. You may find it helpful to make a list of the variables and values for later reference. Be sure to perform only the steps that apply to your situation. Perform all steps as superuser.</PARAGRAPH>
<NOTE><PREFIX>Note</PREFIX>It is very important to follow this procedure as documented without giving additional <COMMAND>inst</COMMAND> or shell commands. Unfortunately, deviations from this procedure, even changing to a different directory or going from the <COMMAND>inst</COMMAND> shell to an <COMMAND>inst</COMMAND> menu when not directed to, can have very severe consequences from which recovery is difficult.</NOTE>
<ORDEREDLIST><LIST><PARAGRAPH>Review the subsections within the section <XREF IDREF="22464" TYPE="TITLE">&ldquo;Planning for XFS Filesystems&rdquo;</XREF> in this chapter to verify that you are ready to begin this procedure. In particular, be sure that the software listed in the section <XREF IDREF="12819" TYPE="TITLE">&ldquo;Prerequisite Software&rdquo;</XREF> has been installed and the system has been rebooted.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Verify that your backups are up to date. Because this procedure temporarily removes all files from your system disk, it is important that you have a complete set of backups that have been prepared using your normal backup procedures. You will make a complete dump of the system disk in step <XREF IDREF="32171" TYPE="TEXT">11</XREF>, but you should have your usual backups in addition to the backup made during this procedure.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="19999">Use <INDEXTARGET ID="ch259"><!-- POSTPROCESSDATA: ch259|disk partitions:device names --><INDEXTARGET ID="ch260"><!-- POSTPROCESSDATA: ch260|<ITALICS>prtvtoc</ITALICS> utility --><INDEXTARGET ID="ch261"><!-- POSTPROCESSDATA: ch261|device name:identifying with <ITALICS>prtvtoc</ITALICS> --><INDEXTARGET ID="ch262"><!-- POSTPROCESSDATA: ch262|root partition:device name --><COMMAND>prtvtoc</COMMAND>(1M) to get the device name of the root disk partition, <VARIABLE>rootpartition</VARIABLE>. For example:</PARAGRAPH>
<CODE>
# <USERINPUT>prtvtoc</USERINPUT>
Printing label for root disk

* /dev/rdsk/dks0d1s0 (bootfile "/unix")
...
</CODE>
<PARAGRAPH>The <SCREENDISPLAY>bootfile</SCREENDISPLAY> line contains the raw device name of the root disk partition, which is /dev/rdsk/dks0d1s0 in this example. <VARIABLE>rootpartition</VARIABLE> is the non-raw device name, which is /dev/dsk/dks0d1s0 in this example.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If the system disk has separate root and usr filesystems, use the output of <INDEXTARGET ID="ch263"><!-- POSTPROCESSDATA: ch263|usr partition:device name --><COMMAND>prtvtoc</COMMAND> in the previous step to figure out the device name of the usr partition, <VARIABLE>usrpartition</VARIABLE>. Look for the line that shows a mount directory of <FILENAME>/usr</FILENAME>:</PARAGRAPH>
<CODE>
Partition  Type  Fs   Start: sec   (cyl)    Size: sec    (cyl)  Mount Directory
...
6          efs  yes      116725  ( 203)       727950   (1266)   /usr
</CODE>
<PARAGRAPH>The usr partition number is shown in the first column of this line; it is 6 in this example. To determine the value of <VARIABLE>usrpartition</VARIABLE>, replace the final digit in <VARIABLE>rootpartition</VARIABLE> with the usr partition number. For this example, <VARIABLE>usrpartition</VARIABLE> is /dev/dsk/dks0d1s6.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If you are using a tape drive as the backup device, <XREFTARGET ID="28148">use <INDEXTARGET ID="ch264"><!-- POSTPROCESSDATA: ch264|device name:tape drive --><COMMAND>hinv</COMMAND>(1M) to get the controller and unit numbers (<VARIABLE>&lt;tapecntlr></VARIABLE> and <VARIABLE>&lt;tapeunit></VARIABLE>) of the tape drive. For example:</PARAGRAPH>
<CODE>
# <USERINPUT>hinv -c tape</USERINPUT>
Tape drive: unit 2 on SCSI controller 0: DAT
</CODE>
<PARAGRAPH>In this example, <VARIABLE>&lt;tapecntlr></VARIABLE> is 0 and <VARIABLE>&lt;tapeunit></VARIABLE> is 2.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If you are using a disk drive as your backup device, use <INDEXTARGET ID="ch265"><!-- POSTPROCESSDATA: ch265|device name:disk for <ITALICS>dump</ITALICS> file --><COMMAND>df</COMMAND>(1) to get the device name, <VARIABLE>backupdevice</VARIABLE>, and mount point, <VARIABLE>backupfs</VARIABLE>, of the partition that contains the filesystem where you plan to put the backup. For example:</PARAGRAPH>
<CODE>
# <USERINPUT>df</USERINPUT>
Filesystem                 Type  blocks     use   avail %use  Mounted on
/dev/root                   efs 1992630  538378 1454252  27%  /
/dev/dsk/dks0d3s7           efs 3826812 1559740 2267072  41%  /d3
/dev/dsk/dks0d2s7           efs 2004550      23 2004527   0%  /d2
</CODE>
<PARAGRAPH>The filesystem mounted at <FILENAME>/d2</FILENAME> has plenty of disk space for a backup of the system disk (/ uses 538,378 blocks and <FILENAME>/d2</FILENAME> has 2,004,527 blocks available). The <VARIABLE>backupdevice</VARIABLE> for <FILENAME>/d2</FILENAME> is /dev/dsk/dks0d2s7 and the <VARIABLE>backupfs</VARIABLE> is /d2.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="81559">Create a temporary copy of <INDEXTARGET ID="ch266"><!-- POSTPROCESSDATA: ch266|<ITALICS>/etc/fstab</ITALICS> file:entries for system disk --><FILENAME>/etc/fstab</FILENAME> called <FILENAME>/etc/fstab.xfs </FILENAME>and edit it with your favorite editor. For example:</PARAGRAPH>
<CODE>
# <USERINPUT>cp /etc/fstab /etc/fstab.xfs</USERINPUT>
# <USERINPUT>vi /etc/fstab.xfs</USERINPUT>
</CODE>
<PARAGRAPH>Make these changes in <FILENAME>/etc/fstab.xfs</FILENAME>:</PARAGRAPH>
<BULLETLISTIND><BULLETIND><PARAGRAPH>Replace <SCREENDISPLAY>efs</SCREENDISPLAY> with <SCREENDISPLAY>xfs</SCREENDISPLAY> in the line for the root filesystem, /, if there   is a line for root.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>If root and usr are separate filesystems and will remain so, replace <SCREENDISPLAY>efs</SCREENDISPLAY> with <SCREENDISPLAY>xfs</SCREENDISPLAY> in the line for the usr filesystem.</PARAGRAPH>
</BULLETIND>
<BULLETIND><PARAGRAPH>If root and usr have been separate filesystems, but the disk will be repartitioned during the conversion procedure so that they are combined, remove the line for the usr filesystem.</PARAGRAPH>
</BULLETIND>
</BULLETLISTIND>
</LIST>
<LIST><PARAGRAPH>Shut down your workstation using <COMMAND>shutdown</COMMAND>(1M) or the &ldquo;System Shutdown&rdquo; item on the System toolchest. Answer prompts as appropriate to get to the five-item System Maintenance menu.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="76486">Bring up the miniroot from system software CDs or a software distribution directory that contains the release IRIX 5.3 with XFS or a later release of IRIX. See the section <XREF IDREF="12819" TYPE="TITLE">&ldquo;Prerequisite Software&rdquo;</XREF> in this chapter for more information.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Switch to the shell prompt in <COMMAND>inst</COMMAND>:</PARAGRAPH>
<CODE>
Inst> <USERINPUT>sh</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="32171">Create a full backup of the root filesystem by giving this command:<INDEXTARGET ID="ch267"><!-- POSTPROCESSDATA: ch267|<ITALICS>dump</ITALICS> utility:commands used during conversion to XFS --><INDEXTARGET ID="ch268"><!-- POSTPROCESSDATA: ch268|root filesystem:dumping --><INDEXTARGET ID="ch269"><!-- POSTPROCESSDATA: ch269|usr filesystem:dumping --><INDEXTARGET ID="ch270"><!-- POSTPROCESSDATA: ch270|backup and restore:during conversion to XFS --></PARAGRAPH>
<CODE>
# <USERINPUT>dump 0uCf</USERINPUT>&space;<VARIABLE>tapesize</VARIABLE>&space;<VARIABLE>dumpdevice</VARIABLE>&space;<VARIABLE>rootpartition</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>tapesize</VARIABLE> is the tape capacity (it's used for backup to disks, too) and <VARIABLE>dumpdevice</VARIABLE> is the appropriate device name for the tape drive or the name of the file that will contain the dump image. <XREF IDREF="53571" TYPE="TABLE">Table&nbsp;2-3</XREF> gives the values of <VARIABLE>tapesize</VARIABLE> and <VARIABLE>dumpdevice</VARIABLE> for different tape drives and disk. The <COMMAND>dump</COMMAND>(1M) reference page is included in <XREF IDREF="21560" TYPE="TITLE">Appendix&nbsp;B</XREF>.</PARAGRAPH>
<TABLE COLUMNS="3"><CAPTION LBL="2-3"><PREFIX>Table 2-3 </PREFIX><XREFTARGET ID="53571"> <EMPHASIS>(continued)        </EMPHASIS><COMMAND>dump</COMMAND> Arguments for Filesystem Backup</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="93"><PARAGRAPH>Backup Device</PARAGRAPH>
</CELL>
<CELL LEFT="100" WIDTH="50"><PARAGRAPH><VARIABLE>tapesize</VARIABLE>&space;</PARAGRAPH>
</CELL>
<CELL LEFT="155" WIDTH="189"><PARAGRAPH><VARIABLE>dumpdevice</VARIABLE>&space;</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="93"><PARAGRAPH>Disk</PARAGRAPH>
</CELL>
<CELL LEFT="100" WIDTH="50"><PARAGRAPH>2m</PARAGRAPH>
</CELL>
<CELL LEFT="155" WIDTH="189"><PARAGRAPH>use /root/<VARIABLE>backupfs</VARIABLE>/root.dump for the root 
filesystem and /root/<VARIABLE>backupfs</VARIABLE>/usr.dump for 
the usr filesystem</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="93"><PARAGRAPH>DAT tape</PARAGRAPH>
</CELL>
<CELL LEFT="100" WIDTH="50"><PARAGRAPH>2m</PARAGRAPH>
</CELL>
<CELL LEFT="155" WIDTH="189"><PARAGRAPH>/dev/rmt/tps<VARIABLE>&lt;tapecntlr></VARIABLE>d<VARIABLE>&lt;tapeunit></VARIABLE>nsv </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="93"><PARAGRAPH>DLT tape</PARAGRAPH>
</CELL>
<CELL LEFT="100" WIDTH="50"><PARAGRAPH>10m</PARAGRAPH>
</CELL>
<CELL LEFT="155" WIDTH="189"><PARAGRAPH>/dev/rmt/tps<VARIABLE>&lt;tapecntlr></VARIABLE>d<VARIABLE>&lt;tapeunit></VARIABLE>nsv </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="93"><PARAGRAPH>EXABYTE<SUPERSCRIPT>&trade;</SUPERSCRIPT> 8mm 
model 8200 tape</PARAGRAPH>
</CELL>
<CELL LEFT="100" WIDTH="50"><PARAGRAPH>2m</PARAGRAPH>
</CELL>
<CELL LEFT="155" WIDTH="189"><PARAGRAPH>/dev/rmt/tps<VARIABLE>&lt;tapecntlr></VARIABLE>d<VARIABLE>&lt;tapeunit></VARIABLE>nsv </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="93"><PARAGRAPH>EXABYTE 8mm 
model 8500 tape</PARAGRAPH>
</CELL>
<CELL LEFT="100" WIDTH="50"><PARAGRAPH>4m</PARAGRAPH>
</CELL>
<CELL LEFT="155" WIDTH="189"><PARAGRAPH>/dev/rmt/tps<VARIABLE>&lt;tapecntlr></VARIABLE>d<VARIABLE>&lt;tapeunit></VARIABLE>nsv </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="93"><PARAGRAPH>QIC cartridge tape</PARAGRAPH>
</CELL>
<CELL LEFT="100" WIDTH="50"><PARAGRAPH>150k</PARAGRAPH>
</CELL>
<CELL LEFT="155" WIDTH="189"><PARAGRAPH>/dev/rmt/tps<VARIABLE>&lt;tapecntlr></VARIABLE>d<VARIABLE>&lt;tapeunit></VARIABLE>ns </PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="24095">If usr is a separate filesystem, insert a new tape (if you are using tape) and create a full backup of the usr filesystem by giving this command:</PARAGRAPH>
<CODE>
# <USERINPUT>dump</USERINPUT>&space;<VARIABLE>tapesize</VARIABLE>&space;<VARIABLE>dumpdevice</VARIABLE>&space;<VARIABLE>usrpartition</VARIABLE>&space;
</CODE>
<PARAGRAPH>Use the same values of <VARIABLE>tapesize</VARIABLE> and <VARIABLE>dumpdevice</VARIABLE> as in step <XREF IDREF="32171" TYPE="TEXT">11</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>If you do not need to repartition the system disk, skip to step <XREF IDREF="98820" TYPE="TEXT">18</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>To repartition the system disk, use the standalone version of <INDEXTARGET ID="ch271"><!-- POSTPROCESSDATA: ch271|disk partitions:repartitioning during conversion --><COMMAND>fx</COMMAND>(1M). This version of <COMMAND>fx</COMMAND> is invoked from the Command Monitor, so you must bring up the Command Monitor. To do this, quit out of <COMMAND>inst</COMMAND>, reboot the system, shut down the system, then request the Command Monitor. An example of this procedure is:</PARAGRAPH>
<CODE>
# <USERINPUT>exit</USERINPUT>
...
Inst> <USERINPUT>quit</USERINPUT>
...
Ready to restart the system.  Restart? { (y)es, (n)o, (sh)ell, (h)elp }: <USERINPUT>yes</USERINPUT>
...
login: <USERINPUT>root</USERINPUT>
# <USERINPUT>halt</USERINPUT>
...
System Maintenance Menu
...
Option? <USERINPUT>5</USERINPUT>
Command Monitor.  Type "exit" to return to the menu.
>>
</CODE>
<PARAGRAPH>On systems with a graphical System Maintenance menu, choose the last option, <SCREENDISPLAY>Enter Command Monitor</SCREENDISPLAY>, instead of choosing option 5.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="71135">Boot <INDEXTARGET ID="ch272"><!-- POSTPROCESSDATA: ch272|<ITALICS>fx</ITALICS> utility:using the standalone version --><INDEXTARGET ID="ch273"><!-- POSTPROCESSDATA: ch273|root partition:combining with usr partition --><INDEXTARGET ID="ch274"><!-- POSTPROCESSDATA: ch274|usr partition:combining with root partition --><COMMAND>fx</COMMAND>(1M) and repartition the system disk so that it meets your needs. The example below shows how to use <COMMAND>fx</COMMAND> to switch from separate root and usr partitions to a single root partition.</PARAGRAPH>
<CODE>
>> <USERINPUT>boot stand/fx</USERINPUT>
84032+11488+3024+331696+26176d+4088+6240 entry: 0x89f97610
114208+29264+19536+2817088+60880d+7192+11056 entry: 0x89cd31c0
Currently in safe read-only mode.
Do you require extended mode with all options available? (no) <USERINPUT>&lt;Enter></USERINPUT>
SGI Version 5.3 ARCS   Dec 14, 1994
fx: "device-name" = (dksc) <USERINPUT>&lt;Enter></USERINPUT>&space;
fx: ctlr# = (0) <USERINPUT>&lt;Enter></USERINPUT>
fx: drive# = (1) <USERINPUT>&lt;Enter></USERINPUT>
...opening dksc(0,1,0)
...controller test...OK
Scsi drive type == SGI     SEAGATE ST31200N8640

----- please choose one (? for help, .. to quit this menu)-----
[exi]t             [d]ebug/           [l]abel/           [a]uto
[b]adblock/        [exe]rcise/        [r]epartition/     [f]ormat
fx> <USERINPUT>repartition/rootdrive</USERINPUT>

fx/repartition/rootdrive: type of data partition = (xfs) <USERINPUT>&lt;Enter></USERINPUT>
Warning: you will need to re-install all software and restore user data
from backups after changing the partition layout.  Changing partitions
will cause all data on the drive to be lost.  Be sure you have the drive
backed up if it contains any user data.  Continue? <USERINPUT>yes</USERINPUT>

----- please choose one (? for help, .. to quit this menu)-----
[exi]t             [d]ebug/           [l]abel/           [a]uto
[b]adblock/        [exe]rcise/        [r]epartition/     [f]ormat
fx> <USERINPUT>exit</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Load the miniroot again, using the same procedure you used in step <XREF IDREF="76486" TYPE="TEXT">9</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Switch to the shell prompt in <COMMAND>inst</COMMAND>:</PARAGRAPH>
<CODE>
Inst> <USERINPUT>sh</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="98820">Unmount all filesystems except the miniroot:</PARAGRAPH>
<CODE>
# <USERINPUT>umount -b /,/proc</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Make an XFS filesystem for root:<INDEXTARGET ID="ch275"><!-- POSTPROCESSDATA: ch275|<ITALICS>mkfs</ITALICS> utility:command line syntax --><INDEXTARGET ID="ch276"><!-- POSTPROCESSDATA: ch276|block sizes:and <ITALICS>mkfs</ITALICS> --></PARAGRAPH>
<CODE>
# <USERINPUT>mkfs -d name=</USERINPUT><VARIABLE>rootpartition</VARIABLE>&space;<USERINPUT>-b size=</USERINPUT><VARIABLE>blocksize</VARIABLE>&space;<USERINPUT>-l internal,size=</USERINPUT><VARIABLE>logsize</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>blocksize</VARIABLE> is the filesystem block size (see the section <XREF IDREF="45044" TYPE="TITLE">&ldquo;Choosing Block Sizes&rdquo;</XREF> in this chapter) and <COMMAND>logsize</COMMAND> is the size of the area dedicated to log records (see the section <XREF IDREF="93345" TYPE="TITLE">&ldquo;Choosing the Log Type and Size&rdquo;</XREF> in this chapter).</PARAGRAPH>
<PARAGRAPH><XREF IDREF="95006" TYPE="TEXT">Example&nbsp;2-4</XREF> shows an example of this command for a root filesystem and the command output. The filesystem is made on <FILENAME>/dev/dsk/dks0d1s0</FILENAME> with a block size of 512 bytes and a log size of 500 KB (1000 blocks * 512 bytes/block).</PARAGRAPH>
<EXAMPLE><CAPTION LBL="2-4"><PREFIX>Example 2-4 </PREFIX><XREFTARGET ID="95006">Example <COMMAND>mkfs</COMMAND> Command and Output for the Root Filesystem<INDEXTARGET ID="ch277"><!-- POSTPROCESSDATA: ch277|<ITALICS>mkfs</ITALICS> utility:example output --></CAPTION></EXAMPLE>
<CODE>
# <USERINPUT>mkfs -d name=/dev/dsk/dks0d1s0 -b size=512 -l internal,size=1000b</USERINPUT>
meta-data=/dev/dsk/dks0d1s0      isize=256    agcount=1, agsize=51054 blks
data     =                       bsize=512    blocks=51054
log      =internal log           bsize=512    blocks=1000
realtime =none                   bsize=65536  blocks=0, rtextents=0
</CODE>
</LIST>
<LIST><PARAGRAPH>If you have a separate usr filesystem, give this command to make it an XFS filesystem:</PARAGRAPH>
<CODE>
# <USERINPUT>mkfs -d name=</USERINPUT><VARIABLE>usrpartition</VARIABLE>&space;<USERINPUT>-b size=</USERINPUT><VARIABLE>usrblocksize</VARIABLE>&space;<USERINPUT>-l internal,size=</USERINPUT><VARIABLE>usrlogsize</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>usrblocksize</VARIABLE> and <VARIABLE>usrlogsize</VARIABLE> are the block size and log size you've chosen for the usr filesystem.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Mount the root filesystem with this command:</PARAGRAPH>
<CODE>
# <USERINPUT>mount </USERINPUT><VARIABLE>rootpartition</VARIABLE><USERINPUT>&space;/root</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>If you have a separate usr filesystem, create the <FILENAME>/usr </FILENAME>mount point directory and mount the filesystem with these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>mkdir /root/usr</USERINPUT>&space;
# <USERINPUT>mount </USERINPUT><VARIABLE>usrpartition</VARIABLE><USERINPUT>&space;/root/usr</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>If you made the backup on disk, create a mount point for the filesystem that contains the backup and mount it:</PARAGRAPH>
<CODE>
# <USERINPUT>mkdir</USERINPUT>&space;<USERINPUT>/</USERINPUT><VARIABLE>backupfs</VARIABLE>
#<USERINPUT>&space;mount</USERINPUT>&space;<VARIABLE>backupdevice</VARIABLE>&space;<USERINPUT>/</USERINPUT><VARIABLE>backupfs</VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>If you made the backup on tape, restore all files on the root filesystem from the backup you made in step <INDEXTARGET ID="ch278"><!-- POSTPROCESSDATA: ch278|<ITALICS>restore</ITALICS> utility:commands used during conversion to XFS --><INDEXTARGET ID="ch279"><!-- POSTPROCESSDATA: ch279|root filesystem:restoring all files --><XREF IDREF="32171" TYPE="TEXT">11</XREF> by putting the correct tape in the tape drive and giving these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /root</USERINPUT>&space;
# <USERINPUT>mt -t /dev/rmt/tps</USERINPUT><VARIABLE>&lt;tapecntlr></VARIABLE><USERINPUT>d</USERINPUT><VARIABLE>&lt;tapeunit></VARIABLE>&space;<USERINPUT>rewind</USERINPUT>&space;
# <USERINPUT>restore rf </USERINPUT><VARIABLE>dumpdevice</VARIABLE>&space;
</CODE>
<PARAGRAPH>You may need to be patient while the restore is taking place; it normally doesn't generate any output and it can take a while. The <COMMAND>restore</COMMAND>(1M) reference page is included in <XREF IDREF="21560" TYPE="TITLE">Appendix&nbsp;B</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="33211">If you made the backup on disk, restore all files on the root filesystem from the backup you made in step <XREF IDREF="32171" TYPE="TEXT">11</XREF> by giving these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /root</USERINPUT>&space;
# <USERINPUT>restore rf /</USERINPUT><VARIABLE>backupfs</VARIABLE><USERINPUT>/root.dump </USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>If you made a backup of the usr filesystem in step <INDEXTARGET ID="ch280"><!-- POSTPROCESSDATA: ch280|usr filesystem:restoring all files --><XREF IDREF="24095" TYPE="TEXT">12</XREF> on tape, restore all files in the backup by putting the correct tape in the tape drive and giving these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /root/usr</USERINPUT>
# <USERINPUT>mt -t /dev/rmt/tps</USERINPUT><VARIABLE>&lt;tapecntlr></VARIABLE><USERINPUT>d</USERINPUT><VARIABLE>&lt;tapeunit></VARIABLE>&space;<USERINPUT>rewind</USERINPUT>&space;
# <USERINPUT>restore rf </USERINPUT><VARIABLE>dumpdevice</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>If you made a backup of the usr filesystem in step <XREF IDREF="24095" TYPE="TEXT">12</XREF> on disk, restore all files in the backup by giving these commands:</PARAGRAPH>
<CODE>
# <USERINPUT>cd /root/usr</USERINPUT>
# <USERINPUT>restore rf /</USERINPUT><VARIABLE>backupfs</VARIABLE><USERINPUT>/usr.dump</USERINPUT>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>Move the new version of <FILENAME>/etc/fstab</FILENAME> that you created in step <XREF IDREF="81559" TYPE="TEXT">7</XREF> into place:</PARAGRAPH>
<CODE>
# <USERINPUT>mv /root/etc/fstab.xfs /root/etc/fstab</USERINPUT>
</CODE>
</LIST>
<LIST><PARAGRAPH>Exit from the shell and <COMMAND>inst</COMMAND> and restart the system:</PARAGRAPH>
<CODE>
# <USERINPUT>exit</USERINPUT>
# 
Calculating sizes .. 100% Done.

Inst> <USERINPUT>quit</USERINPUT>
...
Ready to restart the system.  Restart? { (y)es, (n)o, (sh)ell, (h)elp }: <USERINPUT>yes</USERINPUT>
Preparing to restart system ...

The system is being restarted.
</CODE>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="96722">Converting a Filesystem on an Option Disk from EFS to XFS</TITLE><PARAGRAPH>This section explains how to convert an EFS filesystem on an option disk (a disk other than the system disk) to XFS. It assumes that neither <INDEXTARGET ID="ch281"><!-- POSTPROCESSDATA: ch281|XFS:converting an option disk --><COMMAND>lv</COMMAND> nor XLV logical volumes are used. You must be superuser to perform this procedure.</PARAGRAPH>
<ORDEREDLIST><LIST><PARAGRAPH>Review the subsections within the section <XREF IDREF="22464" TYPE="TITLE">&ldquo;Planning for XFS Filesystems&rdquo;</XREF> in this chapter to verify that you are ready to begin this procedure.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Verify that your backups are up to date. Because this procedure temporarily removes all files from the filesystem you convert, it is important that you have a complete set of backups that have been prepared using your normal backup procedures. You will make a complete dump of the system disk in step <XREF IDREF="11280" TYPE="TEXT">4</XREF>, but you should have your usual backups in addition to the backup made during this procedure.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Identify the device name of the partition, <VARIABLE>partition</VARIABLE>, where you plan to create the filesystem. For example, if you plan to use partition 7 (the entire disk) of a SCSI option disk on controller 0, unit 2, <VARIABLE>partition</VARIABLE> is /dev/dsk/dks0d2s7. For more information on determining <VARIABLE>partition</VARIABLE> (also known as a <ITALICS>special</ITALICS> file), see <COMMAND>dks</COMMAND>(7M) for SCSI disks and <COMMAND>ipi</COMMAND>(7M) for Xylogics IPI disks.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH><XREFTARGET ID="11280">Back up all files on the disk partition to tape or disk because they will be destroyed by the conversion process. You can use any backup utility (<INDEXTARGET ID="ch282"><!-- POSTPROCESSDATA: ch282|<ITALICS>dump</ITALICS> utility:commands used during coversion to XFS --><INDEXTARGET ID="ch283"><!-- POSTPROCESSDATA: ch283|backup and restore:during conversion to XFS --><COMMAND>Backup</COMMAND>, <COMMAND>bru</COMMAND>, <COMMAND>cpio</COMMAND>, <COMMAND>tar</COMMAND>, and so on) and backup to a local or remote tape drive or a local or remote disk. For example, the command for <COMMAND>dump</COMMAND> for local tape is:</PARAGRAPH>
<CODE>
# <USERINPUT>dump 0uCf</USERINPUT>&space;<VARIABLE>tapesize</VARIABLE>&space;<VARIABLE>dumpdevice</VARIABLE>&space;<VARIABLE>partition</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>tapesize</VARIABLE> is the tape capacity (it's used for backup to disks, too) and <VARIABLE>dumpdevice</VARIABLE> is the device name for the tape drive. <XREF IDREF="53571" TYPE="TABLE">Table&nbsp;2-3</XREF> gives the values of <VARIABLE>tapesize</VARIABLE> and <VARIABLE>dumpdevice</VARIABLE> for different local tape drives and disk. You can get the values of <VARIABLE>&lt;tapecntlr></VARIABLE> and <VARIABLE>&lt;tapeunit></VARIABLE> used in the table from the command <COMMAND>hinv &ndash;c tape</COMMAND>. The <COMMAND>dump</COMMAND>(1M) reference page is included in <XREF IDREF="21560" TYPE="TITLE">Appendix&nbsp;B</XREF>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Unmount the partition:</PARAGRAPH>
<CODE>
<USERINPUT>umount </USERINPUT><VARIABLE>partition</VARIABLE>
</CODE>
</LIST>
<LIST><PARAGRAPH>Use the <INDEXTARGET ID="ch284"><!-- POSTPROCESSDATA: ch284|<ITALICS>mkfs</ITALICS> utility:command line syntax --><INDEXTARGET ID="ch285"><!-- POSTPROCESSDATA: ch285|block sizes:and <ITALICS>mkfs</ITALICS> --><COMMAND>mkfs</COMMAND>(1M) command to create the new XFS filesystem:</PARAGRAPH>
<CODE>
<USERINPUT>mkfs -d name=</USERINPUT><VARIABLE>partition</VARIABLE><USERINPUT>&space;-b size=</USERINPUT><VARIABLE>blocksize</VARIABLE><USERINPUT>&space;-l internal,size=</USERINPUT><VARIABLE>logsize</VARIABLE>
</CODE>
<PARAGRAPH><VARIABLE>blocksize</VARIABLE> is the filesystem block size (see the section <XREF IDREF="45044" TYPE="TITLE">&ldquo;Choosing Block Sizes&rdquo;</XREF> in this chapter) and <COMMAND>logsize</COMMAND> is the size of the area dedicated to log records (see the section <XREF IDREF="93345" TYPE="TITLE">&ldquo;Choosing the Log Type and Size&rdquo;</XREF> in this chapter). <XREF IDREF="29798" TYPE="TEXT">Example&nbsp;2-1</XREF> shows an example of this command line and its output.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Mount the new filesystem with this command:</PARAGRAPH>
<CODE>
<USERINPUT>mount </USERINPUT><VARIABLE>partition</VARIABLE>&space;<VARIABLE>mountdir</VARIABLE>&space;
</CODE>
</LIST>
<LIST><PARAGRAPH>In the file <FILENAME>/etc/fstab</FILENAME>, in the entry for <VARIABLE>partition</VARIABLE>, replace <SCREENDISPLAY>efs</SCREENDISPLAY> with <SCREENDISPLAY>xfs</SCREENDISPLAY>. For example:</PARAGRAPH>
<CODE>
<VARIABLE>partition</VARIABLE>&space;<VARIABLE>mountdir</VARIABLE> xfs rw,raw=<VARIABLE>rawpartition</VARIABLE> 0 0
</CODE>
<PARAGRAPH>where <VARIABLE>rawpartition</VARIABLE> is the raw version of <VARIABLE>partition</VARIABLE>.</PARAGRAPH>
</LIST>
<LIST><PARAGRAPH>Restore the files to the filesystem from the backup you made in step <INDEXTARGET ID="ch286"><!-- POSTPROCESSDATA: ch286|<ITALICS>restore</ITALICS> utility:commands used during conversion to XFS --><XREF IDREF="11280" TYPE="TEXT">4</XREF>. For example, if you gave the <COMMAND>dump</COMMAND> command in step <XREF IDREF="11280" TYPE="TEXT">4</XREF>, the commands to restore the files from tape are:</PARAGRAPH>
<CODE>
# <USERINPUT>cd </USERINPUT><VARIABLE>mountdir</VARIABLE>&space;
# <USERINPUT>mt -t </USERINPUT><VARIABLE>device</VARIABLE>&space;<USERINPUT>rewind</USERINPUT>&space;
# <USERINPUT>restore rf </USERINPUT><VARIABLE>dumpdevice</VARIABLE>&space;
</CODE>
<PARAGRAPH>The value of <VARIABLE>device</VARIABLE> is the same as <VARIABLE>dumpdevice</VARIABLE> without <SCREENDISPLAY>nsv</SCREENDISPLAY> or other letters at the end. The <COMMAND>restore</COMMAND>(1M) reference page is included in <XREF IDREF="21560" TYPE="TITLE">Appendix&nbsp;B</XREF>.</PARAGRAPH>
<PARAGRAPH>You may need to be patient while the restore is taking place; it doesn't generate any output and it can take a while.</PARAGRAPH>
</LIST>
</ORDEREDLIST>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="92347">Checking Filesystem Consistency</TITLE><PARAGRAPH>The filesystem consistency checking program for XFS filesystems is <INDEXTARGET ID="ch287"><!-- POSTPROCESSDATA: ch287|<ITALICS>xfs_check</ITALICS> utility:how to use --><COMMAND>xfs_check</COMMAND>(1M). (<COMMAND>fsck</COMMAND>(1M) is used only for EFS filesystems.) Unlike <COMMAND>fsck</COMMAND>, <COMMAND>xfs_check</COMMAND> is not invoked automatically on system startup; <COMMAND>xfs_check</COMMAND> should be used only if you suspect a filesystem consistency problem. Before running <COMMAND>xfs_check</COMMAND>, the filesystem to be checked should be unmounted. </PARAGRAPH>
<PARAGRAPH>The command line used for <COMMAND>xfs_check</COMMAND> depends upon the underlying device:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If the filesystem is on an XLV logical volume, the <COMMAND>xfs_check</COMMAND> command line is:</PARAGRAPH>
<CODE>
<USERINPUT>xfs_check</USERINPUT>&space;<VARIABLE>xlvvolume</VARIABLE>&space;
</CODE>
<PARAGRAPH><VARIABLE>xlvvolume</VARIABLE> is the device file for the logical volume, for example /dev/dsk/xlv/xlv0.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If the filesystem is on a disk partition, the <COMMAND>xfs_check</COMMAND> command line is:</PARAGRAPH>
<CODE>
<USERINPUT>xfs_check</USERINPUT>&space;<USERINPUT>-d </USERINPUT><VARIABLE>partition </VARIABLE>
</CODE>
<PARAGRAPH><VARIABLE>partition</VARIABLE> is the device name for the partition, for example /dev/dsk/dks0d2s7.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If the filesystem is on an <COMMAND>lv</COMMAND> logical volume, the <COMMAND>xfs_check</COMMAND> command line is:</PARAGRAPH>
<CODE>
<USERINPUT>xfs_check</USERINPUT>&space;<USERINPUT>-d </USERINPUT><VARIABLE>lvvolume </VARIABLE>
</CODE>
<PARAGRAPH><VARIABLE>lvvolume</VARIABLE> is the device file for the logical volume, for example /dev/dsk/lv0.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Unlike <INDEXTARGET ID="ch288"><!-- POSTPROCESSDATA: ch288|<ITALICS>xfs_check</ITALICS> utility:reporting and repairing problems --><COMMAND>fsck</COMMAND>, <COMMAND>xfs_check</COMMAND> does not repair any reported filesystem consistency problems; it only reports them. If <COMMAND>xfs_check</COMMAND> reports a filesystem consistency problem:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If possible, contact the Silicon Graphics Technical Assistance Center for assistance (see the Release Notes for this product for more information).</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>To attempt to recover from the problem, follow this procedure:</PARAGRAPH>
<ORDEREDLISTIND><LISTIND><PARAGRAPH>Mount the filesystem, but be very careful not to write to it.</PARAGRAPH>
</LISTIND>
<LISTIND><PARAGRAPH>Make a filesystem backup with <COMMAND>xfsdump</COMMAND>. </PARAGRAPH>
</LISTIND>
<LISTIND><PARAGRAPH>Use <COMMAND>mkfs</COMMAND> to a make new filesystem on the same disk partition or XLV logical volume.</PARAGRAPH>
</LISTIND>
<LISTIND><PARAGRAPH>Restore the files from the backup.</PARAGRAPH>
</LISTIND>
</ORDEREDLISTIND>
</BULLET>
</BULLETLIST>
</SECTION1>
</CHAPTER>

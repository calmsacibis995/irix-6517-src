<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="5"><TITLE><XREFTARGET ID="15852">Data Exchange on the IRIX Interactive Desktop</TITLE><PARAGRAPH>The IRIX Interactive Desktop enables users to transfer data between applications. There are two types of transfers from the user's point of view. <INDEXTARGET ID="ch05.xchange1"><!-- POSTPROCESSDATA: ch05.xchange1|cut and paste. <ITALICS>See</ITALICS> data exchange --><INDEXTARGET ID="ch05.xchange2"><!-- POSTPROCESSDATA: ch05.xchange2|applications:data exchangedata exchange --><ITALICS>Copy</ITALICS> takes data specified in the source application and creates a duplicate in the destination application. <ITALICS>Move</ITALICS> removes the data specified in the source application and places it in the destination application. The source and destination applications can be the same application.</PARAGRAPH>
<PARAGRAPH>This chapter covers the following topics:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="27430" TYPE="TITLE">&ldquo;Supporting the Clipboard Transfer Model&rdquo;</XREF> explains what users expect when performing operations using theusing &ldquo;Cut,&rdquo; &ldquo;Copy,&rdquo; and &ldquo;Paste&rdquo; entries in the Edit menu.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="61999" TYPE="TITLE">&ldquo;Supporting the Primary Transfer Model&rdquo;</XREF> describes the expected behavior when users select data and copy it using the left and middle mouse buttons.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="80633" TYPE="TITLE">&ldquo;Data Types Supported for Inter-Application Transfer&rdquo;</XREF> lists those data types that users can transfer between applications.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="27430">Supporting the Clipboard Transfer Model</TITLE><PARAGRAPH>In the clipboard transfer model, users move or copy a selection using the &ldquo;Cut,&rdquo; &ldquo;Copy,&rdquo; and &ldquo;Paste&rdquo; entries from the Edit menu. If your application contains data that users will want to transfer to other applications or across separate instantiations of your application, your application should support the clipboard transfer model described in this section. Note that this model is a subset of the clipboard transfer model described in Section 4.3 of the <INDEXTARGET ID="ch05.xchange3"><!-- POSTPROCESSDATA: ch05.xchange3|clipboard transfer modeldata exchange:clipboard transfer model --><INDEXTARGET ID="ch05.xchange4"><!-- POSTPROCESSDATA: ch05.xchange4|&ldquo;Cut&rdquo; option (in Edit menu)&ldquo;Copy&rdquo; option (in Edit menu)&ldquo;Paste&rdquo; option (in Edit menu) --><INDEXTARGET ID="ch05.xchange5"><!-- POSTPROCESSDATA: ch05.xchange5|cutting datadata exchange:cutting data --><INDEXTARGET ID="ch05.xchange6"><!-- POSTPROCESSDATA: ch05.xchange6|copying datadata exchange:copying data --><INDEXTARGET ID="ch05.xchange7"><!-- POSTPROCESSDATA: ch05.xchange7|pasting datadata exchange:pasting data --><DOCTITLE>OSF/Motif Style Guide</DOCTITLE>. For information on implementing clipboard transfer, see "Implementing the Clipboard Transfer Model" in Chapter&nbsp;7, &ldquo;Interapplication Data Exchange,&rdquo; of the <DOCTITLE>IRIX Interactive Desktop Integration Guide</DOCTITLE>. For more information on the layout of the Edit menu, the behaviors of each entry, and keyboard accelerators, see <XREF IDREF="94339" TYPE="TITLE">&ldquo;Edit Menu&rdquo; in Chapter&nbsp;8</XREF>.</PARAGRAPH>
<PARAGRAPH>In a typical clipboard transfer, the user selects data in an application window and initiates a move or copy transfer operation by choosing &ldquo;Cut&rdquo; or &ldquo;Copy&rdquo; from the window's Edit menu. The source application then takes ownership of the clipboard atom replacing the prior owner (if there was one). The user completes the transfer by choosing &ldquo;Paste&rdquo; from the Edit menu in the destination application. The destination application then moves or copies the data associated with the clipboard to this destination. When the transfer is complete, the newly pasted data is not selected or highlighted. For more information on selection techniques, see <XREF IDREF="59818" TYPE="TITLE">&ldquo;Selection&rdquo; in Chapter&nbsp;7</XREF>. </PARAGRAPH>
<PARAGRAPH>Note that clipboard data is nonpersistent. If a user quits the application that currently owns the clipboard, the data associated with the clipboard atom is lost. Only one application can own the clipboard atom at any given time. For persistent media storage use the IRIX Interactive Desktop MediaWarehouse. For more information, see the <INDEXTARGET ID="ch05.xchange8"><!-- POSTPROCESSDATA: ch05.xchange8|clipboard data, nonpersistentdata exchange:clipboard data, nonpersistent --><DOCTITLE>IRIX Interactive Desktop MediaWarehouse User's Guide</DOCTITLE>.</PARAGRAPH>
<PARAGRAPH><XREF IDREF="54884" TYPE="GRAPHIC">Figure&nbsp;5-1</XREF> illustrates clipboard transfer using the SoundEditor application. In the figure, there are two instantiations of the application; the window on the left is the source and the one on the right is the destination. Note that the clipboard atom in the figure is only a representation and doesn't actually appear. In this example, the user selects a region of sound in the source window and chooses &ldquo;Copy&rdquo; from the Edit menu in that window. The source instantiation of SoundEditor takes ownership of the clipboard atom. When the user chooses &ldquo;Paste&rdquo; from the Edit menu in the destination window, the data associated with the clipboard is inserted into the destination sound file at the insertion cursor (the vertical black line). Note that after the &ldquo;Paste&rdquo; operation, the SoundEditor application doesn't select or highlight the newly pasted data.</PARAGRAPH>
<!-- RASTERCONVERT: ch05.xchange.cgm -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="ch05.xchange-1.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="5-1"><PREFIX>Figure 5-1 </PREFIX><XREFTARGET ID="54884">Clipboard Transfer Example&space;<INDEXTARGET ID="ch05.xchange9"><!-- POSTPROCESSDATA: ch05.xchange9|clipboard transfer model:exampledata exchange:clipboard transfer:example --></CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH>The clipboard operates independently of the primary selection described in the next section, <INDEXTARGET ID="ch05.xchange10"><!-- POSTPROCESSDATA: ch05.xchange10|clipboard transfer model:primary transfer model, independencedata exchange:clipboard transfer model:primary transfer model, independence --><INDEXTARGET ID="ch05.xchange11"><!-- POSTPROCESSDATA: ch05.xchange11|primary transfer model:clipboard transfer model, independencedata exchange:primary transfer model:clipboard transfer model, independence --><XREF IDREF="61999" TYPE="TITLE">&ldquo;Supporting the Primary Transfer Model.&rdquo;</XREF> When a user chooses &ldquo;Cut&rdquo; or &ldquo;Copy&rdquo; from an Edit menu, that application takes ownership of the clipboard but the primary selection remains unchanged. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="61999">Supporting the Primary Transfer Model</TITLE><PARAGRAPH>In the primary transfer model, users select the data for transfer using the left mouse button and copy the data to the destination application using the middle mouse button. If your application contains data that users will want to transfer to other applications or across separate instantiations of your application, your application should support the primary transfer model described in this section. Note that this model is a subset of the primary transfer model described in Section 4.3 of the <INDEXTARGET ID="ch05.xchange12"><!-- POSTPROCESSDATA: ch05.xchange12|primary transfer modeldata exchange:primary transfer model --><INDEXTARGET ID="ch05.xchange13"><!-- POSTPROCESSDATA: ch05.xchange13|copying datadata exchange:copying data --><INDEXTARGET ID="ch05.xchange14"><!-- POSTPROCESSDATA: ch05.xchange14|pasting datadata exchange:pasting data --><INDEXTARGET ID="ch05.xchange15"><!-- POSTPROCESSDATA: ch05.xchange15|left mouse button:data exchangemiddle mouse button:data exchangemouse:buttons:data exchange --><DOCTITLE>OSF/Motif Style Guide</DOCTITLE>. For information on implementing primary transfer, see "Implementing the Primary Transfer Model" in Chapter&nbsp;7, &ldquo;Interapplication Data Exchange,&rdquo; of the <DOCTITLE>IRIX Interactive Desktop Integration Guide</DOCTITLE>. </PARAGRAPH>
<PARAGRAPH>In the <INDEXTARGET ID="ch05.xchange16"><!-- POSTPROCESSDATA: ch05.xchange16|primary selectiondata exchange:primary selection --><INDEXTARGET ID="ch05.xchange17"><!-- POSTPROCESSDATA: ch05.xchange17|highlighting selected datadata exchange:highlighting selected data --><ITALICS>primary transfer model</ITALICS>, when a user begins a selection in an application, that application takes ownership of the primary selection atom, replacing the previous owner if there was one. This selection is referred to as the <ITALICS>primary selection</ITALICS>. The user can then copy the primary selection to a destination application by moving the pointer to the destination window (making it the active window) and clicking the middle mouse button. At this point, the destination application copies the primary selection data to this destination. Note that the data is pasted at the position of the pointer, not at the insertion cursor. Also note that when the copy is complete, the newly pasted data isn't selected or highlighted. For more information on selection techniques, see <XREF IDREF="59818" TYPE="TITLE">&ldquo;Selection&rdquo; in Chapter&nbsp;7</XREF>. </PARAGRAPH>
<PARAGRAPH><XREF IDREF="30841" TYPE="GRAPHIC">Figure&nbsp;5-2</XREF> through <XREF IDREF="68897" TYPE="GRAPHIC">Figure&nbsp;5-3</XREF> illustrate primary selection and transfer using the SoundEditor application. <XREF IDREF="30841" TYPE="GRAPHIC">Figure&nbsp;5-2</XREF> illustrates making a primary selection. The user creates a selection by dragging with the left mouse button across a range of sound data. As soon as the user begins this selection, SoundEditor takes ownership of the primary selection atom. This selection is then referred to as the primary selection.</PARAGRAPH>
<!-- RASTERCONVERT: ch05.xchange.cgm2 -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="ch05.xchange-2.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="5-2"><PREFIX>Figure 5-2 </PREFIX><XREFTARGET ID="30841">Primary Selection Example&space;<INDEXTARGET ID="ch05.xchange18"><!-- POSTPROCESSDATA: ch05.xchange18|data exchange:primary selection example --></CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH><XREF IDREF="68897" TYPE="GRAPHIC">Figure&nbsp;5-3</XREF> shows the source and destination windows just prior to a primary transfer. <XREF IDREF="97951" TYPE="GRAPHIC">Figure&nbsp;5-4</XREF> shows the source and destination windows after the transfer. Note that when the user clicks the middle mouse button, the primary selection is inserted at the pointer location rather than at the insertion cursor. Also note that after the transfer operation, the SoundEditor application doesn't select or highlight the newly pasted data and the primary selection doesn't change.</PARAGRAPH>
<!-- RASTERCONVERT: ch05.xchange.cgm3 -->
<PARAGRAPH><FIGURE><GRAPHIC FILE="ch05.xchange-3.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="5-3"><PREFIX>Figure 5-3 </PREFIX><XREFTARGET ID="68897">Primary Transfer Example: Before Transfer</CAPTION>
</FIGURE>
<!-- RASTERCONVERT: ch05.xchange.cgm4 -->
<FIGURE><GRAPHIC FILE="ch05.xchange-4.gif" POSITION="INLINE" SCALE="FALSE"><CAPTION LBL="5-4"><PREFIX>Figure 5-4 </PREFIX><XREFTARGET ID="97951">Primary Transfer Example: After Transfer<INDEXTARGET ID="ch05.xchange19"><!-- POSTPROCESSDATA: ch05.xchange19|data exchange:primary transfer example --></CAPTION>
</FIGURE>
</PARAGRAPH>
<PARAGRAPH>In general, when your application loses the primary selection, it should keep its current selection highlighted. When a user has selections highlighted in more than one window at a time, the most recent selection is always the primary selection. This is consistent with the <INDEXTARGET ID="ch05.xchange20"><!-- POSTPROCESSDATA: ch05.xchange20|persistent always selection modeldata exchange:persistent always selection model --><INDEXTARGET ID="ch05.xchange21"><!-- POSTPROCESSDATA: ch05.xchange21|nonpersistent selection modeldata exchange:nonpersistent selection model --><ITALICS>persistent always selection</ITALICS> model discussed in Section 4.2 in the <DOCTITLE>OSF/Motif Style Guide</DOCTITLE>. Exceptions to this guideline are those applications that use selection only for primary transfer&mdash;for example, the <ITALICS>winterm</ITALICS> Unix shell window. The only reason for users to select text in a shell window is to transfer that text using the primary transfer mechanism. In this case, when the <ITALICS>winterm</ITALICS> window loses the primary selection, the highlighting is removed. This is referred to as <ITALICS>nonpersistent selection</ITALICS> in Section 4.2 in the <DOCTITLE>OSF/Motif Style Guide</DOCTITLE>. For guidelines on selection in general, see <XREF IDREF="59818" TYPE="TITLE">&ldquo;Selection&rdquo; in Chapter&nbsp;7</XREF>.</PARAGRAPH>
<PARAGRAPH>If the user returns the keyboard focus to a window with a highlighted, superseded primary selection, the application should allow the user to reinstate the highlighted selection as the primary selection by pressing &lt;Alt-Insert>. In addition to supporting this key combination, you can also add the entry &ldquo;Promote&rdquo; to the Edit menu for the application window. Make the &ldquo;Promote&rdquo; menu entry active only when your application has a selection which is not the primary selection. (For details of placing this item in the Edit menu, see <INDEXTARGET ID="ch05.xchange22"><!-- POSTPROCESSDATA: ch05.xchange22|&lt;Alt\>-&lt;Insert\> keysdata exchange:&lt;Alt\>-&lt;Insert\> keys --><INDEXTARGET ID="ch05.xchange23"><!-- POSTPROCESSDATA: ch05.xchange23|primary selection:reinstatingdata exchange:primary selection:reinstating --><INDEXTARGET ID="ch05.xchange24"><!-- POSTPROCESSDATA: ch05.xchange24|&ldquo;Promote&rdquo; option (in Edit menu) --><XREF IDREF="94339" TYPE="TITLE">&ldquo;Edit Menu&rdquo; in Chapter&nbsp;8</XREF>.) </PARAGRAPH>
<PARAGRAPH>Note that when a user begins to modify a selection, such as adding elements to it, it's considered to be a new selection. In this case, your application needs to reassert ownership of the primary selection if your application doesn't currently own it.</PARAGRAPH>
<PARAGRAPH>The primary selection operates independently of the clipboard, as described in the previous section, <INDEXTARGET ID="ch05.xchange25"><!-- POSTPROCESSDATA: ch05.xchange25|clipboard transfer model:primary transfer model, independencedata exchange:clipboard transfer model:primary transfer model, independence --><INDEXTARGET ID="ch05.xchange26"><!-- POSTPROCESSDATA: ch05.xchange26|primary transfer model:clipboard transfer model, independencedata exchange:primary transfer model:clipboard transfer model, independence --><XREF IDREF="27430" TYPE="TITLE">&ldquo;Supporting the Clipboard Transfer Model.&rdquo;</XREF> When the user makes a selection, that selection becomes the primary selection&mdash;there's no effect on the contents of the clipboard. </PARAGRAPH>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="80633">Data Types Supported for Inter-Application Transfer</TITLE><PARAGRAPH>Applications can use the atom names for both clipboard and primary transfer of the corresponding types of data. A few atom names are listed in <INDEXTARGET ID="ch05.xchange27"><!-- POSTPROCESSDATA: ch05.xchange27|data types:data exchange, supporteddata exchange:data types supported --><XREF IDREF="75072" TYPE="TABLE">Table&nbsp;5-1</XREF>; the tables in Chapter&nbsp;7, &ldquo;Interapplication Data Exchange,&rdquo; in the <DOCTITLE>IRIX Interactive Desktop Integration Guide</DOCTITLE> provide a complete list. If you want users to be able to transfer data from your application to other applications, you need to be able to export the data. If your application is to receive data from other applications, it must be able to import the data. For complete details of implementing both clipboard and primary data transfer, see Chapter&nbsp;7, &ldquo;Interapplication Data Exchange,&rdquo; in the <DOCTITLE>IRIX Interactive Desktop Integration Guide</DOCTITLE>.</PARAGRAPH>
<TABLE COLUMNS="4"><CAPTION LBL="5-1"><PREFIX>Table 5-1 </PREFIX><XREFTARGET ID="75072">  <EMPHASIS>(continued)        </EMPHASIS>Data Types Supported for Inter-Application Transfer</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="144"><PARAGRAPH>Target Format Atom Name</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>Nature of Data</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>What Target Receives</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>Receiving Application 
Requirements</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>INVENTOR</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>3D, generated by 
Inventor</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>Inventor data (Scene 
Graph)</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>Ability to read Inventor data</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>_SGI_RGB_IMAGE_FILENAME</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>color image in <ITALICS>rgb</ITALICS> 
format</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>rgb file name</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>Ability to use <ITALICS>rgb</ITALICS> files</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>_SGI_RGB_IMAGE</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>color image in <ITALICS>rgb</ITALICS> 
format</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>stream of rgb data</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>Ability to use <ITALICS>rgb</ITALICS> files</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>_SGI_AUDIO_FILENAME</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>sound data</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>audio file name</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>SGI audio file library 
<FILENAME>libaudiofile</FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>_SGI_AUDIO</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>sound data</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>stream of audio data</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>SGI audio file library 
<FILENAME>libaudiofile</FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>_SGI_MOVIE_FILENAME</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>movie data</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>movie file name</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>SGI Movie library <FILENAME>libmovie</FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>_SGI_MOVIE</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>movie data</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>stream of movie data</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>SGI Movie library <FILENAME>libmovie</FILENAME></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>STRING</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>text encoded as ISO &lbreak;Latin 1</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>textual data</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>Ability to read text encoded as 
ISO Latin 1</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="144"><PARAGRAPH>COMPOUND_TEXT</PARAGRAPH>
</CELL>
<CELL LEFT="150" WIDTH="99"><PARAGRAPH>compound text</PARAGRAPH>
</CELL>
<CELL LEFT="255" WIDTH="108"><PARAGRAPH>textual data formatted as 
compound text</PARAGRAPH>
</CELL>
<CELL LEFT="370" WIDTH="126"><PARAGRAPH>Ability to read compound text</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE>Data Exchange Guidelines</TITLE><PARAGRAPH><BOLD><INDEXTARGET ID="ch05.xchange28"><!-- POSTPROCESSDATA: ch05.xchange28|data exchange:application guidelinesapplications:data exchange guidelines --></BOLD><BOLD>If your application contains data that users may wish to transfer to other applications or across separate instantiations of your application . . . </BOLD></PARAGRAPH>
<CHECKOFF><CHECKOFFITEM>Support the Clipboard Transfer Model using the &ldquo;Cut,&rdquo; &ldquo;Copy,&rdquo; and &ldquo;Paste&rdquo; entries in the Edit menu. In this model, the clipboard is a global entity that's shared by all applications. Your application shouldn't use these entries to refer to a clipboard that's private to your application.</CHECKOFFITEM>
<CHECKOFFITEM>When supporting the Clipboard Transfer Model, don't select or highlight newly pasted data after a &ldquo;Paste&rdquo; operation.</CHECKOFFITEM>
<CHECKOFFITEM>Support the Primary Transfer Model. Assert ownership of the primary selection when the user begins to make a selection. Insert data at the location of the pointer when the user clicks the middle mouse button (which isn't necessarily at the insertion cursor).</CHECKOFFITEM>
<CHECKOFFITEM>When supporting the Primary Transfer Model, don't select or highlight newly transferred data after a transfer operation.</CHECKOFFITEM>
<CHECKOFFITEM>Use <ITALICS>persistent always selection</ITALICS> highlighting (keep the current selection highlighted even when your application loses the primary selection), unless the only action that can be performed on the selection is to copy the data using primary data transfer. In this case, use nonpersistent selection highlighting&mdash;that is, remove the selection highlight when the selection is no longer the primary selection.</CHECKOFFITEM>
<CHECKOFFITEM>When supporting the Primary Transfer Model, if the current active window has a selection that isn't the primary selection, reinstate this selection as the primary selection if the user presses &lt;Alt-Insert>. Additionally, you can include a &ldquo;Promote&rdquo; entry in the Edit menu to perform the same function.</CHECKOFFITEM>
<CHECKOFFITEM>When supporting the Primary Transfer Model, when the user begins to modify a selection, such as adding elements to it, reassert ownership of the primary selection if your application does not currently own it.</CHECKOFFITEM>
<CHECKOFFITEM>When supporting both Clipboard Transfer and Primary Transfer, keep the primary selection independent from the clipboard. When the user begins to make a selection in your application, assert ownership of the primary selection but do not change the ownership of the clipboard. When the user chooses &ldquo;Cut&rdquo; or &ldquo;Copy&rdquo; from an Edit menu in your application, assert ownership of the clipboard but do not change the ownership of the primary selection.</CHECKOFFITEM>
</CHECKOFF>
</SECTION1>
</CHAPTER>

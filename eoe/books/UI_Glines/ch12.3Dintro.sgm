<!-- Produced by version 3.14 (11/22/96) of SGI Frame/SGML translator -->
<CHAPTER LBL="12"><TITLE><XREFTARGET ID="48696">Introduction to 3D Style Guidelines</TITLE><PARAGRAPH>A developer designing a user interface for a 3D application has to resolve some issues that don't arise in 2D user interface design. 3D applications have to provide easy and intuitive interaction in three dimensions with a 2D pointing device. Also, because users of 3D applications often need convenient access to all sides of the objects they view, many applications need to offer more than one way to view or edit scenes or objects. <INDEXTARGET ID="ch12.3Dintro1"><!-- POSTPROCESSDATA: ch12.3Dintro1|applications:3D --></PARAGRAPH>
<PARAGRAPH>This chapter provides general information that's useful for designing a 3D application that is consistent and behaves in ways that users expect. It covers these topics:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="67648" TYPE="TITLE">&ldquo;Making 3D Functionality Available&rdquo;</XREF> provides general guidelines for mapping functionality to the mouse buttons and for using modifier keys.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="75279" TYPE="TITLE">&ldquo;Pointer Shapes for 3D Functions&rdquo;</XREF> discusses the appropriate pointer shapes for some common functionality in 3D applications.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="93714" TYPE="TITLE">&ldquo;Resizing the 3D Viewing Window&rdquo;</XREF> describes how the contents of the 3D viewing window changes as the user resizes the window.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Because of their general nature, the guidelines discussed in this chapter are especially relevant if you can't find a guideline for a specific situation and therefore need to extend existing guidelines.</PARAGRAPH>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="67648">Making 3D Functionality Available</TITLE><PARAGRAPH>A 3D user interface designer typically has to make 3D functionality easily available within the constraints of a 2D input device and standard keyboard. This section provides an overview of two primary ways of doing this:<INDEXTARGET ID="ch12.3Dintro2"><!-- POSTPROCESSDATA: ch12.3Dintro2|3D user interface design --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH><XREF IDREF="54266" TYPE="TITLE">&ldquo;Designing Mouse Input for 3D Applications&rdquo;</XREF></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH><XREF IDREF="94371" TYPE="TITLE">&ldquo;Using Modifier Keys in 3D Applications&rdquo;</XREF></PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>Guidelines for specific cases, for example, use of modifier keys during viewing, are discussed in detail in later chapters, where applicable. </PARAGRAPH>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="54266">Designing Mouse Input for 3D Applications</TITLE><PARAGRAPH>The section <XREF IDREF="39080" TYPE="TITLE">&ldquo;Mouse and Keyboard Hardware&rdquo; in Chapter&nbsp;1</XREF> discusses the rules for mouse input that apply in 2D applications. They can be summarized as follows:</PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The left mouse button provides basic functionality such as selecting and dragging objects.</PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The middle mouse button is reserved for primary copy and paste operations and for advanced user shortcuts, which are also accessible through some more obvious interface. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The right mouse button is reserved for popup menus. </PARAGRAPH>
</BULLET>
</BULLETLIST>
<PARAGRAPH>The same is true in a 3D application:<INDEXTARGET ID="ch12.3Dintro3"><!-- POSTPROCESSDATA: ch12.3Dintro3|mouse:3D applications 3D applications:mouse input --></PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>The most important functionality is mapped to the left mouse button. For example, if viewing is the user's primary task, the left mouse button provides access to viewing functionality such as navigating through a scene. If editing is the primary task, the left mouse button provides access to editing functionality such as selecting and manipulating objects.<INDEXTARGET ID="ch12.3Dintro4"><!-- POSTPROCESSDATA: ch12.3Dintro4|left mouse button:in 3D applications --></PARAGRAPH>
<PARAGRAPH>Modifier keys used in conjunction with the left mouse button provide additional functionality. For example, if the user is performing free translation (the default), no modifier keys are required. For constrained translation along one axis, the user has to hold down both the left mouse button and the &lt;Shift> key. See <XREF IDREF="68038" TYPE="TITLE">&ldquo;Free and Constrained 3D Manipulation&rdquo; in Chapter&nbsp;15</XREF>. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The middle mouse button is reserved for primary copy and paste operations and for advanced user shortcuts, which are also accessible through some more obvious interface. <INDEXTARGET ID="ch12.3Dintro5"><!-- POSTPROCESSDATA: ch12.3Dintro5|middle mouse button:in 3D applications --></PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>The right mouse button is reserved for popup menus which provide access to important functionality. See <INDEXTARGET ID="ch12.3Dintro6"><!-- POSTPROCESSDATA: ch12.3Dintro6|right mouse button: in 3D applications --><XREF IDREF="62260" TYPE="TITLE">&ldquo;Popup Menus&rdquo; in Chapter&nbsp;8</XREF>.</PARAGRAPH>
</BULLET>
</BULLETLIST>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="94371">Using Modifier Keys in 3D Applications</TITLE><PARAGRAPH>Using modifier keys allows you to map additional functionality to the left mouse button. Each modifier key extends the available direct manipulation functionality in a consistent way without compromising the functionality of the other mouse buttons. This consistency helps users learn when to use each modifier key. <INDEXTARGET ID="ch12.3Dintro7"><!-- POSTPROCESSDATA: ch12.3Dintro7|modifier keys 3D applications:modifier keys --><XREF IDREF="14985" TYPE="TABLE">Table&nbsp;12-1</XREF> lists the &ldquo;3D definitions&rdquo; for the &lt;Shift>, &lt;Ctrl>, &lt;Alt>, and &lt;Esc> keys. <INDEXTARGET ID="ch12.3Dintro8"><!-- POSTPROCESSDATA: ch12.3Dintro8|&lt;Shift\> key --><INDEXTARGET ID="ch12.3Dintro9"><!-- POSTPROCESSDATA: ch12.3Dintro9|&lt;Ctrl\> key:3D applications --><INDEXTARGET ID="ch12.3Dintro10"><!-- POSTPROCESSDATA: ch12.3Dintro10|&lt;Alt\> key:3D applications --><INDEXTARGET ID="ch12.3Dintro11"><!-- POSTPROCESSDATA: ch12.3Dintro11|&lt;Esc\> key --></PARAGRAPH>
<TABLE COLUMNS="2"><CAPTION LBL="12-1"><PREFIX>Table 12-1 </PREFIX><XREFTARGET ID="14985">Use of Modifier Keys in a 3D Application</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="27"><PARAGRAPH>Key</PARAGRAPH>
</CELL>
<CELL LEFT="35" WIDTH="360"><PARAGRAPH>Description</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="27"><PARAGRAPH>Shift</PARAGRAPH>
</CELL>
<CELL LEFT="35" WIDTH="360"><PARAGRAPH>Constrains or unconstrains the default behavior for the left mouse button. For example, 
shifts from the default unconstrained translation in two dimensions to constrained axial 
translation in one dimension, or from the default constrained rotation in two dimensions 
to unconstrained free rotation in three dimensions. (See <XREF IDREF="24672" TYPE="TITLE">Chapter&nbsp;15, &ldquo;Manipulating 3D 
Objects,&rdquo;</XREF>&space;for how the &lt;Shift> key modifies the default translate, rotate, and scale 
behaviors.) </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="27"><PARAGRAPH>Ctrl</PARAGRAPH>
</CELL>
<CELL LEFT="35" WIDTH="360"><PARAGRAPH>Provides an alternate behavior that isn't thought of as constraining or unconstraining the 
default behavior for the left mouse button. For example, if users drag a translation plane 
using the left mouse button, the object moves along the plane (the default behavior). If 
users hold down the &lt;Ctrl> key while performing the same drag operation, the object 
moves perpendicular to the plane. (See <XREF IDREF="24672" TYPE="TITLE">Chapter&nbsp;15, &ldquo;Manipulating 3D Objects,&rdquo;</XREF>&space;for how 
the &lt;Ctrl> key modifies the default translate, rotate, and scale behaviors.)</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="27"><PARAGRAPH>Alt</PARAGRAPH>
</CELL>
<CELL LEFT="35" WIDTH="360"><PARAGRAPH>Provides access to a view overlay as long as the &lt;Alt> key is pressed. Returns the user to 
the previous mode when the &lt;Alt> key is released. (See <XREF IDREF="23130" TYPE="TITLE">&ldquo;View Overlay&rdquo; in Chapter&nbsp;13</XREF>.)</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="27"><PARAGRAPH>Esc</PARAGRAPH>
</CELL>
<CELL LEFT="35" WIDTH="360"><PARAGRAPH>Performs mode switches, for example from view mode to edit mode. Note that this use of 
the &lt;Esc> key is consistent with the <DOCTITLE>OSF/Motif Style Guide,</DOCTITLE> which recommends using 
&lt;Esc> to cancel an operation. In effect, you are canceling (exiting) one mode and entering 
another. (See <XREF IDREF="72813" TYPE="TITLE">&ldquo;Separate View and Edit Modes&rdquo; in Chapter&nbsp;13</XREF>.) </PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<PARAGRAPH>If your application uses the &lt;Shift> key to constrain or unconstrain actions and uses the &lt;Ctrl> key for alternate behavior, make the combination of the two available where it makes sense. </PARAGRAPH>
<PARAGRAPH>For example, the &lt;Shift> key constrains scaling to enlarge or shrink the object in only one dimension rather than the default uniform scaling operation (enlarging or shrinking the object simultaneously in all three dimensions). The &lt;Ctrl> key provides the alternate behavior of scaling around the opposite scaling handle rather than the default behavior of scaling around the center. Using the &lt;Shift> and &lt;Ctrl> keys in combination allows the user to perform constrained scaling around the opposite plane. (See <XREF IDREF="78136" TYPE="TITLE">&ldquo;Scaling 3D Objects&rdquo; in Chapter&nbsp;15</XREF>.)</PARAGRAPH>
</SECTION2>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="12818">Basic 3D Interface Design Guidelines</TITLE><PARAGRAPH><BOLD>To provide mouse functionality that matches user's expectations in a 3D application...</BOLD></PARAGRAPH>
<CHECKOFF><CHECKOFFITEM>Assign primary functionality to the left mouse button. </CHECKOFFITEM>
<CHECKOFFITEM>Use modifier keys in conjunction with the left mouse button to make additional functionality available. </CHECKOFFITEM>
<CHECKOFFITEM>Reserve the middle mouse button for primary copy and paste operations and to provide access to advanced user shortcuts that are also accessible via a more obvious user interface. </CHECKOFFITEM>
<CHECKOFFITEM>Reserve the right mouse button for popup menus. </CHECKOFFITEM>
</CHECKOFF>
<PARAGRAPH><BOLD>When deciding on the use of modifier keys in a 3D application...</BOLD></PARAGRAPH>
<CHECKOFF><CHECKOFFITEM>Use the &lt;Shift> key to constrain or unconstrain the default behavior of the left mouse button.</CHECKOFFITEM>
<CHECKOFFITEM>Use the &lt;Ctrl> key to allow alternate behaviors that aren't thought of as constraining or unconstraining the default behavior assigned to the left mouse button. </CHECKOFFITEM>
<CHECKOFFITEM>Use &lt;Shift> and &lt;Ctrl> together where it makes sense to provide alternate behavior that's also constrained or unconstrained. </CHECKOFFITEM>
<CHECKOFFITEM>Reserve the &lt;Alt> key for a view overlay (see <XREF IDREF="23130" TYPE="TITLE">&ldquo;View Overlay&rdquo; in Chapter&nbsp;13</XREF>). </CHECKOFFITEM>
<CHECKOFFITEM>Reserve the &lt;Esc> key for mode switches, for example, switching from view mode to edit mode.</CHECKOFFITEM>
</CHECKOFF>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="75279">Pointer Shapes for 3D Functions</TITLE><PARAGRAPH>General guidelines for pointer feedback for all applications in the IRIX Interactive Desktop environment are discussed in <INDEXTARGET ID="ch12.3Dintro12"><!-- POSTPROCESSDATA: ch12.3Dintro12|pointer:shapes, 3D applications --><XREF IDREF="15568" TYPE="TITLE">&ldquo;Pointer Shapes and Colors&rdquo; in Chapter&nbsp;11</XREF>. This section discusses additional pointer shapes specifically designed for 3D applications.</PARAGRAPH>
<PARAGRAPH>Using the correct pointer feedback is crucial in a 3D application because users typically need to work with a great variety of functions, and these functions are often accessed using the left mouse button in conjunction with modifier keys. To help users recognize which function they are currently accessing and to help them learn the mapping between modifier keys and available functions, display standard pointer shapes whenever the user accesses common 3D functions. <XREF IDREF="22627" TYPE="TABLE">Table&nbsp;12-2</XREF> provides an overview of the common 3D functions and associated pointers; it includes references to the relevant sections in later chapters. See <XREF IDREF="83685" TYPE="TABLE">Table&nbsp;13-1</XREF> for an overview of 3D viewing functions and the associated user interface. </PARAGRAPH>
<TABLE COLUMNS="3"><CAPTION LBL="12-2"><PREFIX>Table 12-2 </PREFIX><XREFTARGET ID="22627">Pointers for 3D Functionality</CAPTION>
<TABLEHEADING><CELL LEFT="0" WIDTH="52"><PARAGRAPH>Pointer</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Function</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>Purpose</PARAGRAPH>
</CELL>
</TABLEHEADING>
<TABLEBODY><ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="tumble_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>&lbreak;Tumbling&space;<INDEXTARGET ID="ch12.3Dintro13"><!-- POSTPROCESSDATA: ch12.3Dintro13|inspection pointer --></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>&lbreak;User is rotating a scene in view mode. See <XREF IDREF="90557" TYPE="TITLE">&ldquo;Tumbling&rdquo; in Chapter&nbsp;13</XREF>.</PARAGRAPH>
<PARAGRAPH></PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="dolly_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Dollying&lbreak;&lbreak;<INDEXTARGET ID="ch12.3Dintro14"><!-- POSTPROCESSDATA: ch12.3Dintro14|dolly pointer --></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>User is moving a scene closer or farther away in view mode. See 
<XREF IDREF="34136" TYPE="TITLE">&ldquo;Dollying&rdquo; in Chapter&nbsp;13</XREF>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="pan_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Panning &lbreak;&lbreak;<INDEXTARGET ID="ch12.3Dintro15"><!-- POSTPROCESSDATA: ch12.3Dintro15|pan pointer --></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>User is moving a scene up, down, left, or right without rotating it. User is 
in view mode. See <XREF IDREF="97362" TYPE="TITLE">&ldquo;Panning&rdquo; in Chapter&nbsp;13</XREF>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="walk_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Roaming&lbreak;&lbreak;</PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>User is moving through a fixed scene as if walking or flying. User can 
view objects but not edit them. See <XREF IDREF="82935" TYPE="TITLE">&ldquo;Roaming&rdquo; in Chapter&nbsp;13</XREF>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="tilt_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Tilting &lbreak;&lbreak;<INDEXTARGET ID="ch12.3Dintro16"><!-- POSTPROCESSDATA: ch12.3Dintro16|tilt pointer --></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>User is tilting head up or down in a scene without moving through the 
scene. User is in view mode. See <XREF IDREF="61562" TYPE="TITLE">&ldquo;Tilting&rdquo; in Chapter&nbsp;13</XREF>. </PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="sidle_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Sidling <INDEXTARGET ID="ch12.3Dintro17"><!-- POSTPROCESSDATA: ch12.3Dintro17|sidle pointer --></PARAGRAPH>
<PARAGRAPH></PARAGRAPH>
<PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>User is sidestepping to the right or left in the scene being viewed or is 
moving up or down as if on an elevator. User is in view mode. See 
<XREF IDREF="43061" TYPE="TITLE">&ldquo;Sidling&rdquo; in Chapter&nbsp;13</XREF>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="seek_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Seeking </PARAGRAPH>
<PARAGRAPH></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>User selects an object or target in view mode, and is then automatically 
moved closer to that object with each click. See <XREF IDREF="88303" TYPE="TITLE">&ldquo;Seeking&rdquo; in Chapter&nbsp;13</XREF>.</PARAGRAPH>
</CELL>
</ROW>
<ROW><CELL LEFT="0" WIDTH="52"><PARAGRAPH><FIGURE><GRAPHIC FILE="edit_cursor.gif" POSITION="TBLCELL" SCALE="FALSE"></FIGURE>
</PARAGRAPH>
</CELL>
<CELL LEFT="60" WIDTH="50"><PARAGRAPH>Editing<INDEXTARGET ID="ch12.3Dintro18"><!-- POSTPROCESSDATA: ch12.3Dintro18|edit pointer --></PARAGRAPH>
</CELL>
<CELL LEFT="115" WIDTH="292"><PARAGRAPH>User can select and manipulate objects, for example, translate, rotate, 
and/or scale them. See <XREF IDREF="62811" TYPE="TITLE">&ldquo;Viewing and Editing in 3D Applications&rdquo; in 
Chapter&nbsp;13</XREF>. This is also the &ldquo;default&rdquo; pointer shape when no special 
function is taking place.</PARAGRAPH>
</CELL>
</ROW>
</TABLEBODY>
</TABLE>
<SECTION2 LBL="" HELPID = ""><TITLE><XREFTARGET ID="67224">Pointer Feedback Guidelines for 3D Applications</TITLE><PARAGRAPH><BOLD>To help users stay oriented while working in your 3D application...</BOLD></PARAGRAPH>
<CHECKOFF><CHECKOFFITEM>Use the standard pointer shapes to indicate specific 3D functionality. Display these pointers whenever the user accesses that functionality. </CHECKOFFITEM>
<CHECKOFFITEM>Use the standard pointers used in 2D applications as needed (for example, the watch pointer to indicate an operation is in progress).</CHECKOFFITEM>
</CHECKOFF>
</SECTION2>
</SECTION1>
<SECTION1 LBL="" HELPID = ""><TITLE><XREFTARGET ID="93714">Resizing the 3D Viewing Window</TITLE><PARAGRAPH>When users resize the viewing window in a 3D application, its contents changes based on whether or not the resize operation keeps the same aspect ratio: </PARAGRAPH>
<BULLETLIST><BULLET><PARAGRAPH>If the user keeps the same aspect ratio, the contents of the window stays the same but the scene in the viewing area gets proportionally bigger or smaller depending on whether the user made the window bigger or smaller. </PARAGRAPH>
</BULLET>
<BULLET><PARAGRAPH>If the user changes the aspect ratio, the size of the objects in the scene stays the same but more of the scene becomes visible when the user makes the window bigger and less of the scene is visible when the user makes the window smaller.</PARAGRAPH>
</BULLET>
</BULLETLIST>
<SECTION2 LBL="" HELPID = ""><TITLE>Guidelines for Resizing Windows in 3D Applications</TITLE><PARAGRAPH><BOLD>When designing the resizing operation for the viewing windows in your 3D application...</BOLD></PARAGRAPH>
<CHECKOFF><CHECKOFFITEM>If the user resizes the window and keeps its same aspect ratio, make the scene in the viewing area of the window proportionally bigger or smaller based on the resize action. </CHECKOFFITEM>
<CHECKOFFITEM>If the user resizes the window and changes its aspect ratio during the resize operation, display more or less of the scene being displayed based on the resize action, but don't change the size of the objects in the scene. </CHECKOFFITEM>
</CHECKOFF>
</SECTION2>
</SECTION1>
</CHAPTER>

# Rationales for an official so_locations file:
#
# See the /usr/lib/so_locations file for a complete rundown. For 64 bits
# the packing issue really isn't important since each 'segment' maps 64Mb.
# So, to make this all easier, we define rld/libc and simply carve out a large
# segment for everyone else...
#
# rld heap (128K max) at 0x000000000fbe0000 (rld heap can grow beyond 0x000000000fc00000).
rld.heap \
		:st = $range 0x000000000fbe0000, 0x0000000000020000:\
		:st = .data 0x00000000fbe0000, 0x0000000000020000:\

# this reserves space for rld
rld \
		:st = $range 0x000000000fb50000, 0x0000000000080000:\
		:st = .text 0x000000000fb50000, 0x0000000000070000:\
		:st = .data 0x000000000fbc0000, 0x0000000000020000:\

#
# we explicitly set the text and data since all h*ll breaks out if
# we ever have data below text
#
libc.so.1 \
                :st = $range 0x000000000d980000, 0x00000000001d0000:\
                :st = .text 0x000000000d980000, 0x00000000001a0000:\
                :st = .data 0x000000000fb20000, 0x0000000000030000:\

#
# Catch-all range. All other libraries go in this 217Mb range
#
# 0x0000000002000000->0x000000000d980000

#
# IRIX libraries
#
libcurses.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libnsl.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libsocket.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
librpcsvc.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libgen.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libmalloc.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libw.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libm.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libmutex.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libpthread.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libC.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libarray.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
liblim.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libl.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libcrypt.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libgrio.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libudma.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libabi.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libtt.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libirixpmda.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libdm.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libfetchop.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libdisk.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libdpipe.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libnanothread.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
librsvp.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libAS.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libprio.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libperfex.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libdplace.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libdprof.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libmpi.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libsma.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libpvm3.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libpvm3-i8.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libst.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:


#
# X libraries
#
libX11.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libXt.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libXaw.so.2 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libXmu.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libXext.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libXi.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libXpm.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:

#
# Motif
#
libXm.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libMrm.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libUil.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:

#
# Open GL
#
libGL.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libGLcore.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libGLU.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libGLS.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libGLC.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libFL.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libogldebug.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libufm.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:

#
# Desktop
#
libCadmin.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libSgm.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libdesktopFileicon.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libvk.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libvkhelp.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libvk.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libvkhelp.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libvkmsg.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libvkSGI.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libvkwebhelp.so.1 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libhelpmsg.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:

#
# Compilers
#
libMMmalloc.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libcomplex.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libexc.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libfastm.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libfpe.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libm43.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libmp.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libftn90.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libftn.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libmx.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libC.so.2 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libCsup.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libblas.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libblas_mp.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libfortran.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libffio.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:

#
# Etc.
#
libInventor.so.3 \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libInventorXt.so.3 \
		:st = $range 0x0000000002000000, 0x000000000b980000:

#
# Performance Co-Pilot libraries and PMDAs
#
libpcp.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libpcp_lite.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libpcp_wio.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libpcp_wioutil.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libpcp_socks.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
pmda_pmcd.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
pmda_proc.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
pmda_environ.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:

#
# Digital Media libraries
#
libaudiofile.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libaudioutil.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libmidi.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libawareaudio.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libdmedia.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libaudio.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:
libmediaclient.so \
		:st = $range 0x0000000002000000, 0x000000000b980000:

# Other libraries to follow
# We pick the following number since that is the default starting
# point for mmap() - which will allocate upwards, and ld will allocate
# downwards.
# Do not change the following line
# Non SGI libraries should be below 0x0000004000000000 (1/4Tb)
$start_address=0x0000004000000000

# Every time we clone a new tree, i.e. every time you need to change 
# the RELEASE macro, you will need to consider each of the macro's in this
# group. RELEASE_NUM must be < 214 and preserves the monotonicity of the 
# inst version numbers. See man page for mkversionnum for more details.
# RELEASE_NAME is the human readable product name string for hardware
# specific releases.  it must be empty (no spaces or anything) for the
# base release.  It should match reasonably well the label printed on the CD
RELEASE=6.5
RELEASE_MAJOR=6
RELEASE_MINOR=5
RELEASE_MAINT=0
RELEASE_NUM=127
RELEASE_NAME=6.5.7m

#
# Default STYLE for binaries - this sets what the base level (i.e. no
# explicit makefile flags) binaries will be made up of. This defines
# both the ABI and ISA defaults.
#
# Note that 'make'-files (as opposed to 'smake'-files) will use
#	DEF_CSTYLE and DEF_GLDOPTS - and OBJECT_STYLE will be set to
#	DEF_OBJECT_STYLE - thus ALL 3 must agree for both make/smake-files
#	to produce the same results.
# The 'DEF_GLDOPTS/DEF_CSTYLE' is for makefiles that have no specific
#	ABI/ISA requirements
#
# If DEF_CSTYLE should change then LIB_LOCATION and ROOTRLDNAME should also
# reflect the change to the DEF_CSTYLE.
#
DEF_CSTYLE=$(CSTYLE_N32_M3)
DEF_GLDOPTS=$(GLDOPTS_N32_M3)

#
# LIB_LOCATION is for Makefile's who have hardcoded pathnames
# to a lib.  For example, 
#       LLDLIBS=$(ROOT)/usr/lib/libw.a
#       should be changed to ...
#       LLDLIBS=$(ROOT)/usr/$(LIB_LOCATION)/libw.a
#
# This way when the default object style changes we only
# need to change it here.
#
LIB_LOCATION=lib32

#
# Set ROOTRLDNAME for the correct default object style.
#
ROOTRLDNAME=$(ROOTRLDNAME_N32) 

#
# Define default OBJECT_STYLE - this can be changed to 'N32' to
#	change ALL makefiles that don't explicitly set OBJECT_STYLE
# The '32_' and '64_' defines can be used in makefiles that need to
# compile both 32 and 64 bit versions but just want 1 of each and to
# pick up the current favorite.
# setting OBJECT_STYLE=$(DEF_32_OBJECT_STYLE) in a versiondefs file
# would permit it to be easily changed to compile N32.
#
DEF_OBJECT_STYLE=N32_M3
DEF_32_OBJECT_STYLE=N32_M3
DEF_64_OBJECT_STYLE=64

#
# default ISA's for 32, N32, and 64 bit programs
# If a makefile specifies OBJECT_STYLE={32, N32, 64} this is what they'll get
#
DEF_CSTYLE_32	= $(CSTYLE_32_M2)
DEF_CSTYLE_N32	= $(CSTYLE_N32_M3)
DEF_CSTYLE_64	= $(CSTYLE_64_M3)
DEF_GLDOPTS_32	= $(GLDOPTS_32_M2)
DEF_GLDOPTS_N32	= $(GLDOPTS_N32_M3)
DEF_GLDOPTS_64	= $(GLDOPTS_64_M3)

#
# For this release - which styles should be built? Built from the list in
# commondefs
#
STYLES_TO_BUILD=32 32_M2 32_ABI N32 N32_M3 N32_M4 64 64_M3 64_M4 64_ABI

#
# Turn on generation of api information for libraries built using the
# libcommondefs/libcommonrules conventions.  To override this setting
# for a given library, add "NO_CHECK_API=1" to the appropriate
# versiondefs files
#
# (temporarily undefining CHECK_API pending 7.2+ linker fixes)
# CHECK_API=1

# this only needs to be changed when doing a hardware specific OS release.
# See man page for mkversionnum for more details.
TREE_ID=0

#
# Since different compiler suites have different options, makefiles
# can use the following to differentiate between them so a single source
# makefile can build for many ABIs using different toolroots
#
# C - possible values are:
#	CFE - which is in the compiler 3.xx ucode release
#	RAGNAROK - which is in the compiler 4.xx release
#	MONGOOSE - compiler in 7.xx release
#
# C++ -
#	CFRONT - in the 3.xx release uses ATT cfront translator
#	NCC - in the 3.19 compiler release with irix 5.2+ - uses new
#		Edison front end
#	RAGNAROK - in the compiler 4.x release - uses same front end as
#		the C compiler
#	MONGOOSE - compiler in 7.xx release
# LD -
#	RAGNAROK - in the compiler 4.x release (same for MONGOOSE)
#	UCODE - in the 3.xx release
#
# We differentiate between different ABIs since that is often where
#	one set of compilers gets ahead of the other(s)
#
# For smake builds only, we can specify an environment variable
# to enable MONGOOSE compilers
# This test is first so everything still defaults to RAGNAROK for make.

# Compiler values : 
#	VCC* == C compiler, VCXX* == C++ compiler
# -o32
VCC32=CFE
VCXX32=NCC

# -N32
VCCN32=MONGOOSE
VCXXN32=MONGOOSE

# -N64/64
VCC64=MONGOOSE
VCXX64=MONGOOSE

# LD - see above for comments
VLD32=RAGNAROK
VLDN32=RAGNAROK
VLD64=RAGNAROK

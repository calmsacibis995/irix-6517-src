#ident "$Revision: 1.8 $"
#
# commondefs for leaf makefiles in libraries
# Options etc particular to a version of the library are found in versiondefs
# The versiondefs file for the baseline source is in the baseline source
# directory, the versiondefs files for all other versions of the library
# are kept at the top level - the name is prefixed with the name of
# alternate version of the library minus the '.a' suffix
#
# DEPTH must be set to the top of version source before including this file
# TOP is set to the top of the entire library source.
#
# NOTE: definitions on versiondefs CANNOT override commondef definitions
#	since versiondefs is included first. This is a change from 5.[0123]
#
# A subset of these definitions apply to single level/single version libs

#if defined(INCLUDEDATROOT)
TOP=
DEPTH=
# Since there is only 1 library - fill in LIBRARY variable
LIBRARY=$(BASELIB)

#else

TOP=$(DEPTH)/../
#
# pick up releasedefs to get compiler versions and default build parameters
#
# pick up version definitions - needs to be before commondefs to pick up
# OBJECT_STYLE
#
# finally pick up commondefs
#
include $(ROOT)/usr/include/make/releasedefs

#include <$(DEPTH)/versiondefs>

include $(ROOT)/usr/include/make/commondefs
#endif

# Ignored warnings list - override commondefs version which is too liberal
# The $(LWOFF) allows makefiles to set local warnings to ignore
# (note that a leading ',' with no whitespace is required).
#
# The ignored 3.XX compiler warnings are as followings:
#
#	803 - Ignored invalid warning number(s) in -woff option
#	826 - width of hex constant is smaller than size of type (int)
#	852 - can be const qualified (-wlint)
#
# The ignored 4.XX compiler warnings are as follows:
#	1048 - cast between pointer-to-object and pointer-to-function
#	1068 - integer conversion resulted in a change of sign
#	1499 - -woff arguments must be in the range ...
#	1508 - Missing (extern) declaration for weak name
#	1509 - Missing (extern) declaration for weak name XXX; xxx
#	1685 - invalid error number XXX
#	1692 - prototyped function redeclared without prototype
WOFF= -woff 1685,803,826,852,1048,1499,1508,1509,1692$(LWOFF)

#
# Options are split into 3 parts:
#	global library $(LIBRARY_*) (set in $(TOP)/librarydefs)
#	version specific $(VERSION_*) (set in versiondefs)
#	subdir specific $(SUBDIR_*) (set in leaf Makefile)
#

# pick up global library definitions
# Use "<" so that we don't look in directory this file was found in
# ($(ROOT)/usr/include/make) we want to only look in the source dirs
#
#include <$(TOP)librarydefs>

LCDEFS=$(LIBRARY_CDEFS) $(VERSION_CDEFS) $(SUBDIR_CDEFS) 
LCOPTS=$(LIBRARY_COPTS) $(VERSION_COPTS) $(SUBDIR_COPTS) 
LCINCS=$(LIBRARY_CINCS) $(VERSION_CINCS) $(SUBDIR_CINCS) 
LCXXDEFS=$(LIBRARY_CXXDEFS) $(VERSION_CXXDEFS) $(SUBDIR_CXXDEFS) 
LCXXOPTS=$(LIBRARY_CXXOPTS) $(VERSION_CXXOPTS) $(SUBDIR_CXXOPTS) 
LCXXINCS=$(LIBRARY_CXXINCS) $(VERSION_CXXINCS) $(SUBDIR_CXXINCS) 
LC++DEFS=$(LIBRARY_C++DEFS) $(VERSION_C++DEFS) $(SUBDIR_C++DEFS) 
LC++OPTS=$(LIBRARY_C++OPTS) $(VERSION_C++OPTS) $(SUBDIR_C++OPTS) 
LC++INCS=$(LIBRARY_C++INCS) $(VERSION_C++INCS) $(SUBDIR_C++INCS) 
LF77DEFS=$(LIBRARY_F77DEFS) $(VERSION_F77DEFS) $(SUBDIR_F77DEFS) 
LF77OPTS=$(LIBRARY_F77OPTS) $(VERSION_F77OPTS) $(SUBDIR_F77OPTS) 
LF77INCS=$(LIBRARY_F77INCS) $(VERSION_F77INCS) $(SUBDIR_F77INCS) 
LPDEFS=$(LIBRARY_PDEFS) $(VERSION_PDEFS) $(SUBDIR_PDEFS) 
LPOPTS=$(LIBRARY_POPTS) $(VERSION_POPTS) $(SUBDIR_POPTS) 
LPINCS=$(LIBRARY_PINCS) $(VERSION_PINCS) $(SUBDIR_PINCS) 

LASDEFS=$(LIBRARY_ASDEFS) $(VERSION_ASDEFS) $(SUBDIR_ASDEFS) 
LASOPTS=$(LIBRARY_ASOPTS) $(VERSION_ASOPTS) $(SUBDIR_ASOPTS) 
LASINCS=$(LIBRARY_ASINCS) $(VERSION_ASINCS) $(SUBDIR_ASINCS) 

LLDOPTS=$(LIBRARY_LDOPTS) $(VERSION_LDOPTS) $(SUBDIR_LDOPTS) 
LLDLIBS=$(LIBRARY_LDLIBS) $(VERSION_LDLIBS) $(SUBDIR_LDLIBS) 

LIBLEAFRULES=$(ROOT)/usr/include/make/libleafrules

# get top level developer override options (these should set V* variables)
#sinclude <$(TOP)localdefs>

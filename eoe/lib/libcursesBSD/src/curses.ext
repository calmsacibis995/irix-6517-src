/*
 * Copyright (c) 1981 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	@(#)curses.ext	5.5 (Berkeley) 2/9/89
 */

/*
 * External variables for the curses library
 */

/* LINTLIBRARY */

# include	"curses.h"

extern bool	_echoit, _rawmode, My_term, _endwin;

extern char	ttytype[50], *_unctrl[];

extern int	_tty_ch, LINES, COLS;

extern SGTTY	_tty;

extern bool	_no_refresh;
extern bool	_fast_term;

#ifdef sgi
void		_putchar(reg char);
#else
char		_putchar();
#endif

#ifdef DEBUG
# define	outf	_outf

FILE		*outf;
#endif
#ifdef sgi
/*
 * Prototypes for library defined and referenced functions
 */
int delwin(reg WINDOW *);
int endwin(void);
int getmode(void);
int gettmode(void);
int _id_subwins(reg WINDOW *);
char *longname(reg char *, reg char *);
int mvcur(int, int, int, int);
WINDOW *newwin(reg int , reg int, reg int, reg int);
int scroll(reg WINDOW *);
int _set_subwin_(reg WINDOW *, reg WINDOW *);
int setterm(reg char *);
int _sscans(reg WINDOW  *, reg char *, reg int *);
int _swflags_(reg WINDOW *);
int touchline(reg WINDOW *, reg int, reg int, reg int);
int touchwin(reg WINDOW *);
int ttioctl(reg int, reg long, reg void *arg);
int waddbytes(reg WINDOW *, reg char *, reg int);
int waddch(reg WINDOW *, char);
int wclrtoeol(reg WINDOW *);
int wdeleteln(reg WINDOW *);
int werase(reg WINDOW *);
int wgetch(reg WINDOW *);
int wgetstr(reg WINDOW *, reg char *);
int wrefresh(reg WINDOW *);
/*
 * Prototypes that really ought to come from standard system header files
 */
extern char *tgoto(char *, int, int);
extern int tgetent(char *, char *);
extern int tgetflag(char [2]);
extern int tgetnum(char [2]);
extern char *tgetstr(char [2], char **);
extern int tputs(char *, int, int (*)(int));
#endif

'\"macro stdmacro
.if n .pH man1.regressp @(#)regressp 1.0 of 5/2/94
.TH REGRESSP 1
.SH NAME
\f4regressp\fP \- framework for running regression tests
.SH SYNOPSIS
.B regressp
[ [
.BI \-d " directory"
] ... ]
[ [
.BI \-t " testfile"
] ... ]
[
.B \-v
]
[
.B \-r
]
[
.B \-h
]
[
.B \-l
|
.BI \-L " logfile"
]
.SH DESCRIPTION
.P
.B regressp
is a framework that has been specifically tailored for running
regression-style tests.  If no
.B \-d
or 
.B \-t
flags are given on the command line,
.B regressp
attempts to start running tests from the default tests directory,
/usr/regress/tests.
.PP
.B regressp
traverses directory trees to execute tests, starting either in the
default tests directory, or in directories provided by explicit
.B \-d
arguments.  Before traversing sub-directories or running tests
in a directory,
.B regressp
first looks for a
\fICONF\fR
(or configuration)
file in that directory.  If found,
.B regressp
runs the file, checking its return value.  If the return value from the
.I CONF
program is non-zero, then the directory is considered ``non-configured''
and no further action is taken in that directory (including searching in
its sub-directories).  If the
.I CONF
program returns zero, the directory is considered ``configured''.
Non-existence of a
.I CONF
file is equivalent to being ``configured''.  The
.I CONF
files are used to prevent tests running on a machine that do not support a
particular class of tests (for example, one should not run
Reality Engine tests on an Indigo with Starter Graphics).
.PP
After it traverses any available sub-directories,
.B regressp
runs the tests that it finds in the current directory.
.B regressp
considers a test to be any executable whose name is not ``CONF'' or whose
name does not ends in ``.conf'' (NB: this behavior can be overridden by the
existence of a
.I TEST_FILES
file; see below).
.PP
Before a test is executed,
.B regressp
looks for a file with ``.conf'' appended to the name of the test.  If found,
this file is executed first and
.B regressp
looks at its return value:  non-zero means ``not-configured'', zero means
``configured''.  Non-existence of a ``.conf'' file is equivalent to
``configured''.  Each configured test is executed serially with
.B regressp
keeping track of each test's return values:  a non-zero return value
means failure and a zero return value means success.
.PP
At the end of its
run,
.B regressp
prints out a summary of results.
.PP
In a directory, one can have a
.I TEST_FILES
file which contains the names of all of the tests in this directory.
If there is such a file in a directory, 
.B regressp
uses the contents of this file as the list of the tests to execute instead
of what it thinks is the list of tests.
This feature can be useful if the creator of a test wants to run several
programs in parallel or wishes to pass arguments to a program (via a
``controller'' script).

.SH "REGRESSP OPTIONS"
.TP
.BI \-d " directory"
Add
.I directory
to the list of directories in which to look for tests.  The default
behavior is equivalent to running
\fBregressp -d /usr/regress/tests\fR.
Multiple directories can be specified on the command line, but each must
be preceded by a
\fB-d\fR.
.TP
.BI \-t " testfile"
Add
.I testfile
to the list of tests to execute directly.
.I testfile
can either be relative to the current directory or an absolute pathname.
Since many of the tests
found in the default tests directory depend on certain environment
variables that
.B regressp
sets up, running
.B regressp
with the
.B \-t
option is the preferred method for executing a single test.  Multiple tests
can be specified on the command line, but each must be preceded by a
\fB-t\fR.
.TP
.B \-v
Put
.B regressp
in verbose mode.  This causes
.B regressp
to print out additional information as it runs, including the directories
that it enters.
.TP
.B \-r
Make
.B regressp
$ROOT aware.  This will cause
.B regressp
to prepend the value of $ROOT to any test or directory paths.  If $ROOT is
not defined, the flag is ignored.  Beware using relative paths with this flag.
.TP
.B \-h
Prints out a usage message.
.TP
.B \-l
This flag causes
.B regressp
to create a log file.  Without the
.B \-l
flag, all output from the program goes to the terminal.  With the
.B \-l
option,
.B regressp
attempts to create a log file at
.I $TESTSAVE/LOG.
If this file is successfully created, all tests' output directed to stdout
appears in the logfile.  All output directed to stderr still
appears on the terminal.
.TP
.BI \-L " logfile"
Same as the
.B \-l
option except that the 
.I logfile
can be explicitly set.  Please note that the
.B \-l
and
.B \-L
options are mutually exclusive; an error will occur if both are set.
.SH ENVIRONMENT
.TP
.B TMPDIR
This unique directory is created at runtime and can be used to place all
temporary files that may be created during testing.  All files in TMPDIR
will be recursively removed when
.B regressp
terminates (either normally or abnormally).
.B regressp
checks to see if TMPDIR is already defined.  If so, the newly created
directory is placed underneath it.  Otherwise, the directory is placed in the
default temporary directory, /usr/regress/tmp.
If executed with the
.B \-v
option,
.B regressp
prints out the value of this variable.  
.TP
.B TESTSAVE
This unique directory is also created at runtime.  The value of this
variable is always printed out so that if the
.B \-l
option has been specified, the user will know where to locate the LOG 
file upon completion of the tests.  In an effort to remove directory
clutter, TESTSAVE will be removed if it is empty when
.B regressp
terminates.
.TP
.B ERROR, WARNING, INFO
These three environment variables contain the absolute paths of three
simple shell scripts.  These scripts simply print out ``ERROR'',
``WARNING'' or ``INFO'', followed by the rest of the arguments passed to the
scripts.  The reason for these scripts is to aid in standardizing error
reporting.

.SH DIAGNOSTICS
Upon successful completion of all of the tests, an exit value of 0 is
returned.  If one or more tests failed, the return value is the number of
tests that failed.  If there was an internal error of some sort (ran out of
memory, could not find one of the standard reporting scripts, etc.), a
value of -1 is returned.

.SH FILES
.TP
CONF -
This file, which is optional, is used to determine whether or
not
.B regressp
should enter a particular directory.  Since it is executed before any tests
in the directory (or in any sub-directories), it can be used to set up any
directory-wide invariants.
.TP
*.conf -
These files, which are optional,  are similar to the
.I CONF
file except that they are used to determine if an individual test should
be executed.
.TP
TEST_FILES -
This file, if present, specifies which of the files in the current
directory
.B regressp
should run as tests.
.TP
INFO -
This file, which is optional, describes the types of tests to
be found in a directory.
.TP
*.info - These files, which should be present but are not required,
describe an individual test.

.SH "SEE ALSO"
regressp(5).

.SH AUTHOR
Jonathan Thompson - jt@engr.sgi.com

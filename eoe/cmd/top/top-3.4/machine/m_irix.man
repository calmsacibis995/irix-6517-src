.SH "SGI/IRIX NOTES"
Multiprocessor support was added. Both number of CPUs and the CPU-ID
for running processes are shown.
On MP systems the sum of %CPU (or %WCPU) numbers may be higher than 100%
(one full CPU utilization) but never higher than 100 * the number of CPUs.
.PP
The IRIX implementation doesn't
.IR nlist(2)
the kernel to get addresses
of symbols which makes it less system dependent. All values are
retrieved using the
.IR sysmp(2),
.IR syssgi(2),
and
.IR proc(4)
interfaces.
The same executable should run on any SGI hardware
(Uniprocessor, SMP, and S2MP) running IRIX 6.2 and up.
.PP
"last pid" is not supported.
.PP
A process is considered to be a "system" process if it has uid=0
and ppid=1. This is a compromise for the sake of backward compatibility.
In new IRIX systems many of the traditional "system processes" are
implemented either within the kernel as threads, or as real-time
processes.
.PP
System processes display can be toggled interactively using the 'S' key.
.PP
Idle processes display can be toggled interactively using the 'i' key.
.PP
Memory sizes are followed by their units: K (Kilobytes), M (Megabytes),
G (Gigabytes) or T (Terabytes).
.PP
The CPU states are sampled every clock tick
and provide a "best estimate" of the system CPU activity
summed across all processors. On IRIX they are:
.PP
.nf
		idle 	the cpu was idle and not waiting for anything
		usr  	the cpu was executing some user mode code
		ker  	the cpu was executing some kernel mode code
		wait 	the cpu was idle with some i/o outstanding
		xbrk 	the cpu was executing code in a fault path
		intr 	the cpu was handling an interrupt
.fi
.PP
For example: a high "wait" number means that the
system is I/O bound. A close to 100% "usr" number indicates
CPU bound processes with little system activity.
"xbrk" and "intr" should be close to 0.0% under normal
circumstances. Larger numbers may indicate pathologically
high low-level driver activity, memory shortage (high VM activity) etc.
in which case
.IR osview(1)
should give a better picture of the system state.

.PP
The PRI (priority) field supports advanced IRIX real-time and
scheduling schemes using the following formats where <pri> is
a decimal priority number:
.PP
.nf
		+<pri>		Real-Time
		<pri>		Normal (timeshared)
		g<pri>		Gang scheduled
		bc			Batch Critical
		b			Batch
		w			Weightless
.fi
.PP
On pre 6.4 systems the supported formats are:
.PP
.nf
		+<pri> 		Real-Time
		<pri>		Normal (timeshared)
		b<pri>		Batch
.fi
.PP
For more details on new IRIX scheduling and priorities, see
.IR npri(1),
.IR nice(2),
.IR realtime(5),
and all the
.IR sched_XXX(2)
services.
.PP
%WCPU (weighted CPU) is a decaying average of %CPU
over a longer period than just the last sampling period. For short
running processes %WCPU should be close to %CPU as the two values
only diverge over time.
.PP
This version of top supports sorting by various fields via the
command line -o (order) option or the 'o' interactive option.
The aliases 'mem' (equivalent to 'size'), and 'rss' (equivalent to 'res')
are accepted for friendliness.
In addition, the IRIX version of top understands prefixes of
field names, like '-os', instead of '-osize', to be used.
In case of prefix ambiguities, the first one to match will be used.
Use 'h' (help) to list the supported orders.
.PP
The old IRIX
.IR gr_top
is now implemented as a perl script on top of the new
.IR top
to reduce bloat. In addition to the -Bcolor option to set
the background color, you may now control the foreground color
with -Fcolor, and the title bar color with -Tcolor. Colors
are either RGB values or Xwindow color names, e.g.
.IR purple.
(See
.IR showrgb
for legal color names.)
.PP
SGI specific "See Also" should include:
.IR osview(1),
.IR npri(1),
.IR realtime(5),
and
.IR schedctl(2).
.PP
Several more sophisticated performance tools are optionally provided
by SGI notably PCP (the Performance CoPilot).
.PP
Unlike other
.IR top
versions, the IRIX version should support thousands of processors and
an even larger number of processes.  Thus it avoids pre-allocating
a maximum size for process data.  In case the number of processes
grows too far a new initialization of data structures is performed
by the program restarting itself.  This restarting forgets any
interactive settings and may cause a change in the Weighted CPU%
averages.  This should be an extremely rare occurence but should
be noted here.

.SH "CREDITS"
Original porting to SGI/IRIX 5.x was done by Sandeep Cariapa.
Later enhancements and further IRIX ports by Larry McVoy,
John Schimmel, and Ariel Faigon.


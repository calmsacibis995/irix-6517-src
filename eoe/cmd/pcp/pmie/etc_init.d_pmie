#!/sbin/sh
#
# Start or Stop the Performance Co-Pilot Inference Engine
#
# $Id: etc_init.d_pmie,v 1.3 1999/05/25 20:49:54 kenmcd Exp $
#

# Some degree of paranoia here ...
PATH=/usr/sbin:/usr/bsd:/sbin:/usr/bin:/bin:/usr/pcp/bin
export PATH

IS_ON=/sbin/chkconfig
PMCDWAIT=/usr/pcp/bin/pmcd_wait
PMPOST=/usr/pcp/bin/pmpost
RUNDIR=${PCP_LOGDIR-/var/adm/pmielog}
PMIE=/usr/sbin/pmie
PMIECHECK=/usr/pcp/bin/pmie_check
PMIECTRL=/var/pcp/config/pmie/control
prog=/etc/init.d/`basename $0`
MAIL=/usr/sbin/Mail

tmp=/var/tmp/$$
status=1
trap "rm -f $tmp.* ; exit \$status" 0 1 2 3 15

# determine real name for localhost
#
LOCALHOSTNAME="localhost"
[ -x /usr/bsd/hostname ] && LOCALHOSTNAME=`/usr/bsd/hostname`
LOGDIR=${PCP_LOGDIR-/var/adm/pmielog}/$LOCALHOSTNAME

if $IS_ON verbose
then				# For a verbose startup and shutdown
    ECHO=echo
else				# For a quiet startup and shutdown
    ECHO=:
fi

id=`id | sed -e "s/(.*//" -e "s/.*=//"`
if [ "$id" != 0 ]
then
    echo "$prog:"'
Error: You must be root (uid 0) to start or stop pmie.'
    exit
fi

_reboot_setup()
{
    # base directories and house-keeping for pmie instances
    #
    if [ ! -d /var/tmp/pmie ]
    then
	mkdir /var/tmp/pmie
    else
	rm -rf $tmp.ent $tmp.pid
	here=`pwd`
	cd /var/tmp/pmie
	ps -ef | grep pmie | grep -v grep | nawk '{ print $2 }' \
		| sed -e 's/[ 	]*//g' | sort >$tmp.pid
	ls [0-9]* 2>&1 | sed -e '/\[0-9]\*/d' \
		| sed -e 's/[ 	][ 	]*//g' | sort >$tmp.ent
	# remove entries without a pmie process
	rm -f `comm -23 $tmp.ent $tmp.pid`
	rm -f $tmp.ent $tmp.pid
	cd $here
    fi
    chmod 1777 /var/tmp/pmie

    [ ! -d $LOGDIR ] && mkdir -p $LOGDIR
}

_start_pmie()
{
    wait_option=''
    [ ! -z "$PMCD_WAIT_TIMEOUT" ] && wait_option="-t $PMCD_WAIT_TIMEOUT" 

    if $PMCDWAIT $wait_option
    then
	$PMIECHECK >$tmp.pmie 2>&1
	if [ -s $tmp.pmie ]
	then
	    $PMPOST "$PMIECHECK start failed in $prog, mailing output to root"
	    $MAIL -s "$PMIECHECK start failed in $prog" root <$tmp.pmie
	fi
	rm -f $tmp.pmie
    else
	status=$?
	$PMPOST "$PMCDWAIT failed in $prog: exit status: $status" 
	echo "$PMCDWAIT: exit status: $status" | $MAIL -s "$PMCDWAIT failed in $prog" root
    fi
}

_stop_pmie()
{
    $ECHO "Waiting for pmie process(es) to terminate ..."

    $PMIECHECK -s >$tmp.pmie 2>&1
    if [ -s $tmp.pmie ]
    then
	$PMPOST "$PMIECHECK stop failed in $prog, mailing output to root"
	$MAIL -s "$PMIECHECK stop failed in $prog" root <$tmp.pmie
    fi
    rm -fr $tmp.pmie /var/tmp/pmie
}


case "$1" in
  'start')
	ps -ef | grep "$PMIE" | grep -v grep >$tmp.pmies 2>&1
	[ -s $tmp.pmies ] && _stop_pmie

	# messages should go to stderr, not the GUI notifiers
	#
	unset PCP_STDERR

	_reboot_setup

	if [ -x $PMIE ]
	then
	    if $IS_ON pmie
	    then
		cd $RUNDIR
		if [ -x $PMIECHECK ]
		then
		    if [ ! -f $PMIECTRL ]
		    then
			echo "$prog:"'
Error: PCP inference engine control file '$PMIECTRL'
       is missing!  Cannot start any Performance Co-Pilot inference engine(s).'
		    else
			$ECHO "Performance Co-Pilot starting inference engine(s) ..."
			_start_pmie &
		    fi
		else
		    echo "$prog:"'
Warning: Performance Co-Pilot installation is incomplete (at least the
	 script '$PMIECHECK' is missing) and the PCP Inference
	 Engine(s) cannot be started.
	 You should re-install the pcp_eoe.sw.eoe subsystem from the IRIX
	 distribution and consult pmie_check(1), else
		# /sbin/chkconfig pmie off'
		fi
	    else
		if [ "$0" = "/etc/init.d/pmie" ]
		then
		    echo "$prog:"'
Warning: Performance Co-Pilot Inference Engine (pmie) is disabled.  To enable:
	    # /sbin/chkconfig pmie on'
		fi
	    fi
	fi
	status=0
        ;;

  'stop')
	_stop_pmie
	status=0
        ;;

  *)
        echo "Usage: /etc/init.d/pmie {start|stop}"
        ;;
esac


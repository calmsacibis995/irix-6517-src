/***********************************************************************
 * skeleton: aggregate.sk - aggregation and quantification
 ***********************************************************************/
/* $Id: aggregate.sk,v 1.1 1999/04/28 10:06:17 kenmcd Exp $ */

/***********************************************************************
 * operator: @FUN
 ***********************************************************************/

void
@FUN_host(Expr *x)
{
    Expr	*arg1 = x->arg1;
    Sample      *is = &arg1->smpls[0];
    Sample      *os = &x->smpls[0];
    @ITYPE      *ip;
    @OTYPE      *op;
    @OTYPE	a;
    int		n;
    int		i;

    EVALARG(arg1)
    ROTATE(x)

    if (arg1->valid) {
	ip = (@ITYPE *)is->ptr;
	op = (@OTYPE *)os->ptr;
	n = arg1->hdom;
	@TOP
	for (i = 1; i < n; i++) {
	    ip++;
	    @LOOP
	}
	@BOT
	os->stamp = is->stamp;
	x->valid++;
    }
    else {
	x->valid = 0;
    }

#if PCP_DEBUG
    if (pmDebug & DBG_TRACE_APPL2) {
	fprintf(stderr, "@FUN_host(0x%p) ...\n", x);
	dumpExpr(x);
    }
#endif
}

void
@FUN_inst(Expr *x)
{
    Expr	*arg1 = x->arg1;
    Sample      *is = &arg1->smpls[0];
    Sample      *os = &x->smpls[0];
    @ITYPE      *ip;
    @OTYPE      *op;
    @OTYPE	a;
    Metric	*m;
    int		n;
    int		i, j;

    EVALARG(arg1)
    ROTATE(x)

    if (arg1->valid) {
	ip = (@ITYPE *)is->ptr;
	op = (@OTYPE *)os->ptr;
	if (abs(x->hdom) == 1) {
	    n = arg1->e_idom;
	    if (n == 0) {
		@NOTVALID
		goto done;
	    }
	    @TOP
	    for (i = 1; i < n; i++) {
		ip++;
		@LOOP
	    }
	    @BOT
	}
	else {
	    m = x->metrics;
	    for (i = 0; i < x->hdom; i++) {
		n = m->m_idom;
		if (n == 0) {
		    @NOTVALID
		    goto done;
		}
		@TOP
		for (j = 1; j < n; j++){
		    /* Note! no break allowed in this loop */
		    ip++;
		    @LOOP
		}
		@BOT
		m++;
	    }
	}
	os->stamp = is->stamp;
	x->valid++;
    }
    else {
	x->valid = 0;
    }

done:
#if PCP_DEBUG
    if (pmDebug & DBG_TRACE_APPL2) {
	fprintf(stderr, "@FUN_inst(0x%p) ...\n", x);
	dumpExpr(x);
    }
#endif
}

void
@FUN_time(Expr *x)
{
    Expr	*arg1 = x->arg1;
    Sample      *is = &arg1->smpls[0];
    Sample      *os = &x->smpls[0];
    @ITYPE	*ring = (@ITYPE *)arg1->ring;
    @ITYPE      *ip;
    @OTYPE      *op;
    @OTYPE	a;
    int		n = arg1->tdom;
    int		tspan;
    int		i, j;

    EVALARG(arg1)
    ROTATE(x)

    if (arg1->valid >= n) {
	op = (@OTYPE *)os->ptr;
	tspan = x->tspan;
	for (i = 0; i < tspan; i++) {
	    ip = ring + i;
	    @TOP
	    for (j = 1; j < n; j++){
		ip += tspan;
		@LOOP
	    }
	    @BOT
	}
	os->stamp = is->stamp;
	x->valid++;
    }
    else {
	x->valid = 0;
    }

#if PCP_DEBUG
    if (pmDebug & DBG_TRACE_APPL2) {
	fprintf(stderr, "@FUN_time(0x%p) ...\n", x);
	dumpExpr(x);
    }
#endif
}


#
# pcpirix.ftr
#
# Performance Co-Pilot file type rules
# Assigned tag range: 0x00010D00 to 0x00010D1F
#
# $Id: pcpirix.ftr,v 1.21 1998/02/26 00:03:21 kenmcd Exp $
#

TYPE PCParchive
    MATCH       long(3) == 0x84500526;
    LEGEND      Performance Co-Pilot archive
    SUPERTYPE	Binary
    CMD OPEN	if [ -x /usr/sbin/pmchart ]
		then
		    thislog=`echo $SELECTED | tr -d ' '`
		    _HOME=`echo $HOME | sed -e 's,//*$,,'`
		    case $thislog in
			$_HOME/Desktop/*) [ -l $thislog ] && \
			    thislog=`ls -l $thislog | sed -e 's/.* -> //'` ;;
		    esac
		    PCP_STDERR=DISPLAY; export PCP_STDERR
		    /usr/sbin/pmchart -a "$thislog"
		else
		    xconfirm -B "OK" -header "PCP Information" -icon info \
			-t "This is a Performance Co-Pilot archive, and " \
			-t "and requires pmchart from the PCP product to " \
			-t "be installed in order to be launched this way." >/dev/null
		fi
    CMD ALTOPEN if [ -x /usr/sbin/pmchart ]
		then
		    thislog=`echo $SELECTED | tr -d ' '`
		    _HOME=`echo $HOME | sed -e 's,//*$,,'`
		    case $thislog in
			$_HOME/Desktop/*) [ -l $thislog ] && \
			    thislog=`ls -l $thislog | sed -e 's/.* -> //'` ;;
		    esac
		    PCP_STDERR=DISPLAY; export PCP_STDERR
		    /usr/pcp/bin/pmrun -a "$thislog" -t 2 -S '' -T '' \
			/usr/sbin/pmchart
		else
		    xconfirm -B "OK" -header "PCP Information" -icon info \
			-t "This is a Performance Co-Pilot archive, and " \
			-t "and requires pmchart from the PCP product to " \
			-t "be installed in order to be launched this way." >/dev/null
		fi
    CMD DROP	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Co-Pilot archive, and" \
		    -t "is not intended to be launched in this way." >/dev/null
    ICON {
	include("../iconlib/generic.doc.fti");  
	include("iconlib/pcp.archive.fti");    
    }

TYPE PCPfolio
    MATCH       string(0,8) == "PCPFolio" && ascii;
    LEGEND      Performance Co-Pilot archive folio
    SUPERTYPE	Binary
    CMD OPEN	winterm -t pmafm -c /usr/sbin/pmafm $SELECTED
    CMD ALTOPEN /usr/pcp/bin/pmrun -x 'winterm -t pmafm -c ' -y $SELECTED /usr/sbin/pmafm 
    CMD DROP	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Co-Pilot Archive Folio, " \
		    -t "and is not intended to be launched in this way." >/dev/null
    ICON {
	include("iconlib/pcp.folio.fti");    
    }

TYPE PCPnamespace
    MATCH       string(0,3) == "PmN";
    LEGEND      Performance Co-Pilot compiled namespace
    SUPERTYPE	Binary
    CMD OPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Co-Pilot Binary Namespace, " \
		    -t "and is not intended to be launched in this way." >/dev/null
    CMD ALTOPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Co-Pilot Binary Namespace, " \
		    -t "and is not intended to be launched in this way." >/dev/null
    CMD DROP	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Co-Pilot Binary Namespace, " \
		    -t "and is not intended to be launched in this way." >/dev/null
    ICON {
	include("../iconlib/generic.doc.fti");  
	include("iconlib/pcp.pmns.fti");
    }

TYPE pmcd
    MATCH       tag == 0x00010D00;
    LEGEND      Performance Metrics Collector Daemon
    SUPERTYPE	Executable
    CMD OPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is the Performance Metric Collector Daemon, "\
		    -t "and should be launched via '/etc/init.d/pcp start.'" >/dev/null
    CMD ALTOPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is the Performance Metric Collector Daemon, "\
		    -t "and should be launched via '/etc/init.d/pcp start.'" >/dev/null
    CMD DROP    xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is the Performance Metric Collector Daemon, "\
		    -t "and should be launched via '/etc/init.d/pcp start.'" >/dev/null
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.pmcd.fti");
    }

TYPE pmda
    MATCH       tag == 0x00010D01;
    LEGEND      Performance Metrics Domain Agent
    SUPERTYPE	Executable
    CMD OPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Metric Domain Agent, " \
		    -t "and is launched directly by pmcd(1)." >/dev/null
    CMD ALTOPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Metric Domain Agent, " \
		    -t "and is launched directly by pmcd(1)." >/dev/null
    CMD DROP	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is a Performance Metrics Domain Agent," \
		    -t "and is launched directly by pmcd(1)." >/dev/null
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");
	} else {
	    include("../iconlib/generic.exec.closed.fti");
	}  
	include("iconlib/pcp.pmda.fti");
    }

TYPE oview
    MATCH       tag == 0x00010D08;
    LEGEND      Origin Performance Visualisation
    SUPERTYPE	Executable
    CMD OPEN    PCP_STDERR=DISPLAY; export PCP_STDERR; $LEADER
    CMD ALTOPEN PCP_STDERR=DISPLAY; export PCP_STDERR
		/usr/pcp/bin/pmrun -a '' -h '' -S '' -T '' -t 2 $LEADER
    CMD DROP    PCP_STDERR=DISPLAY; export PCP_STDERR
		set $SELECTEDTYPELIST
		osrel=`uname -r | sed -e 's/-.*//'`
		osrel=`echo $osrel \* 10 | bc`
		logargs=''; hostargs=''; namearg=''; badargs=''
		_HOME=`echo $HOME | sed -e 's,//*$,,'`
		for thing in $SELECTED ; do
		    case $thing in
			$_HOME/Desktop/*) [ -l $thing ] && \
			    thing=`ls -l $thing | sed -e 's/.* -> //'` ;;
		    esac
		    case $1 in
			PCParchive) logargs="$logargs -a $thing";;
			HostToken|MyHostToken)
			    if [ $osrel -gt 62 ]; then
				thisthing=`echo $thing | awk -F: \
				    'NF >= 3 && $2 ~ /^ImdHost/ {print $3}' \
				    | sed -e 's/!viewArea=.*//g'`
				if [ -z "$thisthing" ]; then
				    badargs="$badargs -t $thing"
				else
				    hostargs="$hostargs $thisthing"
				fi
			    else	# pre-IMD
				hostargs="$hostargs $thing"
			    fi;;
			PCPnamespace) namearg="-n $thing";;
			*) badargs="$badargs -t $thing";;
		    esac
		    shift;
		done
		if [ -n "$badargs" ] ; then
		    PCPAPP=`basename $TARGET`
		    xconfirm -B "OK" -header "PCP Information" -icon info \
			-t "Cannot launch $PCPAPP using:" $badargs \
			-t "(icon must be a Host or PCP Archive)" >/dev/null &
		fi
		if [ -n "$logargs" ] ; then
		    $TARGET $namearg $logargs &
		fi
		if [ -n "$hostargs" ] ; then
		    for hostarg in $hostargs ; do
			$TARGET $namearg -h $hostarg &
		    done
		fi
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}
	include("iconlib/pcp.oview.fti");
    }

TYPE pmlogger
    MATCH       tag == 0x00010D1F;
    LEGEND      Performance Metrics Logger
    SUPERTYPE	Executable
    CMD OPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is the Performance Metrics Logger, and" \
		    -t "is not intended to be launched in this way." >/dev/null
    CMD ALTOPEN	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is the Performance Metrics Logger, and" \
		    -t "is not intended to be launched in this way." >/dev/null
    CMD DROP	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This is the Performance Metrics Logger, and" \
		    -t "is not intended to be launched in this way." >/dev/null
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.logger.fti");
    }


TYPE PCPupdatingttyapp
    MATCH       tag == 0x00010D0A;
    LEGEND      Performance Co-Pilot Application
    SUPERTYPE	Executable
    CMD OPEN    winterm -H -t `basename $LEADER` $LEADER
    CMD ALTOPEN /usr/pcp/bin/pmrun -a '' -h '' -S '' -T '' \
		    -x "winterm -t `basename $LEADER`" $LEADER
    CMD DROP    set $SELECTEDTYPELIST
		osrel=`uname -r | sed -e 's/-.*//'`
		osrel=`echo $osrel \* 10 | bc`
		logargs=''; hostargs=''; namearg=''; badargs=''
		_HOME=`echo $HOME | sed -e 's,//*$,,'`
		for thing in $SELECTED ; do
		    case $thing in
			$_HOME/Desktop/*) [ -l $thing ] && \
			    thing=`ls -l $thing | sed -e 's/.* -> //'` ;;
		    esac
		    case $1 in
			PCParchive) logargs="$logargs -a $thing";;
			HostToken|MyHostToken)
			    if [ $osrel -gt 62 ]; then
				thisthing=`echo $thing | awk -F: \
				    'NF >= 3 && $2 ~ /^ImdHost/ {print $3}' \
				    | sed -e 's/!viewArea=.*//g'`
				if [ -z "$thisthing" ]; then
				    badargs="$badargs -t $thing"
				else
				    hostargs="$hostargs $thisthing"
				fi
			    else	# pre-IMD
				hostargs="$hostargs $thing"
			    fi;;
			PCPnamespace) namearg="-n $thing";;
			*) badargs="$badargs -t $thing";;
		    esac
		    shift;
		done
		if [ -n "$badargs" ] ; then
		    PCPAPP=`basename $TARGET`
		    xconfirm -B "OK" -header "PCP Information" -icon info \
			-t "Cannot launch $PCPAPP using:" $badargs \
			-t "(icon must be a Host or PCP Archive)" >/dev/null &
		fi
		if [ -n "$logargs" ] ; then
		    winterm -H -t `basename $LEADER` $TARGET $namearg $logargs &
		fi
		if [ -n "$hostargs" ] ; then
		    for hostarg in $hostargs ; do
			winterm -H -t `basename $LEADER` $TARGET $namearg -h $hostarg &
		    done
		fi
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.tty.fti");
    }

TYPE PCPttyinputapp
    MATCH       tag == 0x00010D0B;
    LEGEND      Performance Co-Pilot Application
    SUPERTYPE	Executable
    CMD OPEN    /usr/pcp/bin/pmrun -a '' -h '' -S '' -T '' \
		    -x "winterm -H -t `basename $LEADER`" $LEADER
    CMD ALTOPEN /usr/pcp/bin/pmrun -a '' -h '' -S '' -T '' \
		    -x "winterm -H -t `basename $LEADER`" $LEADER
    CMD DROP    set $SELECTEDTYPELIST
		osrel=`uname -r | sed -e 's/-.*//'`
		osrel=`echo $osrel \* 10 | bc`
		logargs=''; hostargs=''; namearg=''; badargs=''
		_HOME=`echo $HOME | sed -e 's,//*$,,'`
		for thing in $SELECTED ; do
		    case $thing in
			$_HOME/Desktop/*) [ -l $thing ] && \
			    thing=`ls -l $thing | sed -e 's/.* -> //'` ;;
		    esac
		    case $1 in
			PCParchive) logargs="$logargs $thing";;
			HostToken|MyHostToken)
			    if [ $osrel -gt 62 ]; then
				thisthing=`echo $thing | awk -F: \
				    'NF >= 3 && $2 ~ /^ImdHost/ {print $3}' \
				    | sed -e 's/!viewArea=.*//g'`
				if [ -z "$thisthing" ]; then
				    badargs="$badargs -t $thing"
				else
				    hostargs="$hostargs $thisthing"
				fi
			    else	# pre-IMD
				hostargs="$hostargs $thing"
			    fi;;
			PCPnamespace) namearg="-n $thing";;
			*) badargs="$badargs -t $thing";;
		    esac
		    shift;
		done
		if [ -n "$badargs" ] ; then
		    PCPAPP=`basename $TARGET`
		    xconfirm -B "OK" -header "PCP Information" -icon info \
			-t "Cannot launch $PCPAPP using:" $badargs \
			-t "(icon must be a Host or PCP Archive)" >/dev/null &
		fi
		if [ -n "$logargs" ] ; then
		    for logarg in $logargs ; do
			/usr/pcp/bin/pmrun -a $logarg -h '' -S '' -T '' \
			    -x "winterm -H -t `basename $TARGET`" $TARGET &
		    done
		fi
		if [ -n "$hostargs" ] ; then
		    for hostarg in $hostargs ; do
			/usr/pcp/bin/pmrun -a '' -h $hostarg -S '' -T '' \
			    -x "winterm -H -t `basename $TARGET`" $TARGET &
		    done
		fi
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.tty.fti");
    }

TYPE PCPttybasicapp
    MATCH       tag == 0x00010D10;
    LEGEND      Performance Co-Pilot Application
    SUPERTYPE	Executable
    CMD OPEN    winterm -H -t `basename $LEADER` $LEADER
    CMD ALTOPEN /usr/pcp/bin/pmrun -x "winterm -H -t `basename $LEADER`" $LEADER
    CMD DROP	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This Performance Co-Pilot Application is" \
		    -t "not intended to be launched in this way." >/dev/null
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.tty.fti");
    }

TYPE PCPttybasicinputapp
    MATCH       tag == 0x00010D0C;
    LEGEND      Performance Co-Pilot Application
    SUPERTYPE	Executable
    CMD OPEN    /usr/pcp/bin/pmrun -x "winterm -H -t `basename $LEADER`" $LEADER
    CMD ALTOPEN /usr/pcp/bin/pmrun -x "winterm -H -t `basename $LEADER`" $LEADER
    CMD DROP	xconfirm -B "OK" -header "PCP Information" -icon info \
		    -t "This Performance Co-Pilot Application is" \
		    -t "not intended to be launched in this way." >/dev/null
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.tty.fti");
    }

TYPE PCPttylogapp
    MATCH       tag == 0x00010D12;
    LEGEND      Performance Co-Pilot archive utility
    SUPERTYPE	Executable
    CMD OPEN    /usr/pcp/bin/pmrun -x "winterm -H -t `basename $LEADER`" $LEADER
    CMD ALTOPEN /usr/pcp/bin/pmrun -x "winterm -H -t `basename $LEADER`" $LEADER
    CMD DROP    set $SELECTEDTYPELIST
		osrel=`uname -r | sed -e 's/-.*//'`
		osrel=`echo $osrel \* 10 | bc`
		logargs=''; hostargs=''; namearg=''; badargs=''
		_HOME=`echo $HOME | sed -e 's,//*$,,'`
		for thing in $SELECTED ; do
		    case $thing in
			$_HOME/Desktop/*) [ -l $thing ] && \
			    thing=`ls -l $thing | sed -e 's/.* -> //'` ;;
		    esac
		    case $1 in
			HostToken|MyHostToken)
			    if [ $osrel -gt 62 ]; then
				thing=`echo $thing | awk -F: \
				    'NF >= 3 && $2 ~ /^ImdHost/ {print $3}' \
				    | sed -e 's/!viewArea=.*//g'`
			    fi
			    badargs="$badargs -t $thing";;
			PCParchive) logargs="$logargs $thing";;
			PCPnamespace) namearg="-n $thing";;
			*) badargs="$badargs -t $thing";;
		    esac
		    shift;
		done
		if [ -n "$badargs" ] ; then
		    PCPAPP=`basename $TARGET`
		    xconfirm -B "OK" -header "PCP Information" -icon info \
			-t "Cannot launch $PCPAPP using:" $badargs \
			-t "(icon must be a PCP Archive)" >/dev/null &
		fi
		if [ -n "$logargs" ] ; then
		    /usr/pcp/bin/pmrun -x "winterm -H -t `basename $LEADER`" \
			-y "$logargs $namearg" $TARGET &
		fi
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.tty.fti");
    }

TYPE PCPutility
    MATCH       tag == 0x00010D13;
    LEGEND      Performance Co-Pilot system utility
    SUPERTYPE	Executable
    CMD OPEN    xconfirm -B "OK" -header "Launch" -icon info \
		    -t "This is a Performance Co-Pilot system utility," \
		    -t "and is not intended to be launched in this way." >/dev/null
    CMD ALTOPEN xconfirm -B "OK" -header "Launch" -icon info \
		    -t "This is a Performance Co-Pilot system utility," \
		    -t "and is not intended to be launched in this way." >/dev/null
    CMD DROP	xconfirm -B "OK" -header "Launch" -icon info \
		    -t "This is a Performance Co-Pilot system utility," \
		    -t "and is not intended to be launched in this way." >/dev/null
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.tty.fti");
    }


TYPE PCPttyapp
    MATCH	tag == 0x00010D14;
    LEGEND	Performance Co-Pilot Application
    SUPERTYPE	Executable
    CMD OPEN	winterm -H -t `basename $LEADER` $LEADER
    CMD ALTOPEN	/usr/pcp/bin/pmrun -a '' -h '' \
		-x "winterm -H -t `basename $LEADER`" $LEADER
    CMD DROP	set $SELECTEDTYPELIST
		osrel=`uname -r | sed -e 's/-.*//'`
		osrel=`echo $osrel \* 10 | bc`
		logargs=''; hostargs=''; badargs=''
		_HOME=`echo $HOME | sed -e 's,//*$,,'`
		PCPAPP=`basename $TARGET`
		for thing in $SELECTED ; do
		    case $thing in
			$_HOME/Desktop/*) [ -l $thing ] && \
			    thing=`ls -l $thing | sed -e 's/.* -> //'` ;;
		    esac
		    case $1 in
			PCParchive) logargs="$logargs -a $thing";;
			HostToken|MyHostToken)
			    if [ $osrel -gt 62 ]; then
				thisthing=`echo $thing | awk -F: \
				    'NF >= 3 && $2 ~ /^ImdHost/ {print $3}' \
				    | sed -e 's/!viewArea=.*//g'`
				if [ -z "$thisthing" ]; then
				    badargs="$badargs -t $thing"
				else
				    hostargs="$hostargs $thisthing"
				fi
			    else	# pre-IMD
				hostargs="$hostargs $thing"
			    fi;;
			*) badargs="$badargs -t $thing";;
		    esac
		    shift;
		done
		if [ -n "$badargs" ] ; then
		    xconfirm -B "OK" -header "PCP Information" -icon info \
			-t "Cannot launch $PCPAPP using:" $badargs \
			-t "(icon must be a Host or PCP Archive)" >/dev/null &
		fi
		if [ -n "$logargs" ] ; then
		    winterm -H -t $PCPAPP $TARGET $namearg $logargs &
		fi
		if [ -n "$hostargs" ] ; then
		    for hostarg in $hostargs ; do
			winterm -H -t $PCPAPP $TARGET $namearg -h "$hostarg" &
		    done
		fi
    ICON {
	if (opened) {
	    include("../iconlib/generic.exec.open.fti");  
	} else {
	    include("../iconlib/generic.exec.closed.fti");    
	}  
	include("iconlib/pcp.tty.fti");
    }


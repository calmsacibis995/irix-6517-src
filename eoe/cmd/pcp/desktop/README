Desktop Integration
===================

The structure of the source tree below here is split into irix and pcp,
which translates directly to pcp_eoe and pcp in the built images.  The
top level Makefile uses macros to ensure the right bits are installed in
the appropriate subsystems, for either a irix or pcp build.

For applications using existing fti (file type icons) files, the exitop
associated with that fti (or fti grouping) should be updated to ensure
the application is inserted into the desktop icon catalog (for either
pcp or irix builds).  Take care when updating the exitop as it is easily
broken or made non-diskless installable - adding a new entry should be
a simple matter of cutting and pasting an existing iconbookedit call.

It is the responsibility of the Makefile for the application to ensure
that the binary is "tagged" such that the file type rules correctly
identify the new application and (subsequently) the desktop will be able
to display the icon and provide the other file type rule functionality
(drag&drop, etc).

For applications with new fti files (file type icons), decide first on
whether this is an irix or pcp piece, then create an appropriate entry in
the ftr file (file type rule) in either pcpirix.ftr or pcp.ftr.  exitops
have been created for each fti file at the moment, and that mapping
should be maintained as new icon files are created and added.

Existing icons and file type rules are "reused" by ensuring that the new
application is tagged with the same hex value as is presented in either
the irix/pcpirix.ftr or pcp/pcp.ftr files.  Take care that the other
behavior is as expected and supported by the new application, however -
particularly when the file type rule makes use of pmrun.

Finally, don't modify the irix/pcpirix.ftr or pcp/pcp.ftr exitops, in
particular the irix exitop, as this must match exactly with the ftr
exitop defined in the irix commondefs file.  This ensures that the file
type rule database is only rebuilt once for an irix installation (even
though many irix subsystems will update the database.


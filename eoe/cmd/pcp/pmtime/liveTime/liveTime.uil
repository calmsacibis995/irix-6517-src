!0x000102EFFFF
 ! Generated by Silicon Graphic's RapidApp.
 !
 !
 ! RapidApp 1.1.
 !
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("generate_vkapp_subclass", false )
!(BX) bx_info("generate_library", true )
!(BX) bx_info("vkapp_subclass_name", "TestLiveTime", true )
!(BX) bx_info("library_header_directory", "_", true )
!(BX) bx_info("library_name", "libliveTime", true )
!(BX) bx_info("include_path", ".",
!(BX)		"/usr/include/Mrm",
!(BX)		"/usr/include/uil", false )
!(BX) bx_info("c_information", true )
!(BX) bx_info("app_class", "Application", true )
!(BX) bx_info("app_name", "application", true )
!(BX) bx_info("c++_pixmaps", "pixmaps.h", true )
!(BX) bx_info("c++_baseclass", "VkComponent", false )
!(BX) bx_info("c++_main", "main.C", true )
!(BX) bx_info("c++_makefile", "Makefile", true )
!(BX) bx_info("dont_merge_files", false )
!(BX) bx_info("verbose_codegen", true )
!(BX) bx_info("make_backups", true )
!(BX) bx_info("prune_dimensions", false )
!(BX) bx_info("use_ez", false )
!(BX) bx_info("no_standalone_classes", true )
!(BX) bx_info("generate_default_resources", true )
!(BX) bx_info("use_cvstatic", false )
!(BX) bx_info("use_runonce", false )
!(BX) bx_info("use_license", false )
!(BX) bx_info("use_inventor_loop", false )
!(BX) bx_info("use_pure_virtuals", false )
!(BX) bx_info("use_tooltalk", false )
!(BX) bx_info("uil_utilities", "bxutil-uil.c", true )
!(BX) bx_info("uil_constants", "main-uil.h", true )
!(BX) bx_info("uil_callbacks", "callbacks-uil.c", true )
!(BX) bx_info("uil_uil", "liveTime.uil", true )
!(BX) bx_info("uil_main", "main-uil.c", true )
!(BX) bx_info("uil_imakefile", "Imakefile", true )
!(BX) bx_info("uil_makefile", "makefile-uil", true )
!(BX) bx_info("c_utilities", "bxutil-c.c", true )
!(BX) bx_info("c_pixmaps", "pixmaps.h", true )
!(BX) bx_info("c_callbacks", "callbacks-c.c", true )
!(BX) bx_info("c_creation", "creation-c.c", true )
!(BX) bx_info("c_main", "main-c.c", true )
!(BX) bx_info("c_imakefile", "Imakefile", true )
!(BX) bx_info("c_makefile", "Makefile", true )
!(BX) bx_info("app_defaults", "app-defaults", true )
!(BX) bx_info("viewkit_code_version", "1.0" )

value rev_off_icon : icon (
	color_table = color_table (
		color('#9b9b9b9b9b9b') = '.',
		color('#b8b8b8b8b8b8') = 'X',
		color('#383838383838') = 'o',
		color('#686868686868') = 'O',
		color('#888888888888') = '+',
		color('#202202202') = '@'),
	'...................................................',
	'...................................................',
	'...................................................',
	'...................................................',
	'...................................................',
	'.................................X.................',
	'................................XX.................',
	'..............................ooXX.................',
	'.............................ooOXX.................',
	'...........................ooOOOXX.................',
	'..........................ooOOOOXX.................',
	'........................ooOOOOOOXX.................',
	'.......................ooOOOOOOOXX.................',
	'.....................ooOOOOOOOOOXX.................',
	'....................o+OOOOOOOOOOXX.................',
	'.....................++OOOOOOOOOXX.................',
	'.......................++OOOOOOOXX.................',
	'........................++OOOOOOXX.................',
	'..........................++OOOOXX.................',
	'...........................++OOOXX.................',
	'.............................++OXX.................',
	'..............................++XX.................',
	'................................XX.................',
	'.................................X.................',
	'...................................................',
	'...................................................',
	'...................................................',
	'................@@@@..@............................',
	'................@...@.@............................',
	'................@...@.@.@@@@..@...@................',
	'................@...@.@.....@.@...@................',
	'................@@@@..@..@@@@.@...@................',
	'................@.....@.@...@.@...@................',
	'................@.....@.@..@@..@@@@................',
	'................@.....@..@@.@@....@................',
	'.................................@.................',
	'...............................@@..................',
	'...................................................',
	'...................................................',
	'...................................................'
);
value stop_on_icon : icon (
	color_table = color_table (
		color('#9b9b9b9b9b9b') = '.',
		color('#b8b8b8b8b8b8') = 'X',
		color('#383838383838') = 'o',
		color('#686868686868') = 'O',
		color('#888888888888') = '+',
		color('#202202202') = '@',
		color('#4848ffff4848') = '#'),
	'.................................................',
	'.................................................',
	'.................................................',
	'.................................................',
	'.................................................',
	'.................................................',
	'.................................................',
	'..................oooooooooooooo.................',
	'..................oooooooooooooX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................oo##########XX.................',
	'..................ooXXXXXXXXXXXX.................',
	'..................oXXXXXXXXXXXXX.................',
	'.................................................',
	'.................................................',
	'.................................................',
	'.................................................',
	'.................................................',
	'..............@@@................................',
	'.............@...@..@............................',
	'.............@.....@@@...@@@..@.@@@..............',
	'..............@@@...@...@...@.@@...@.............',
	'.................@..@...@...@.@....@.............',
	'.................@..@...@...@.@....@.............',
	'.............@...@..@.@.@...@.@@...@.............',
	'..............@@@...@@...@@@..@.@@@..............',
	'..............................@..................',
	'..............................@..................',
	'..............................@..................',
	'.................................................',
	'.................................................'
);
value play_off_icon : icon (
	color_table = color_table (
		color('#9b9b9b9b9b9b') = '.',
		color('#b8b8b8b8b8b8') = 'X',
		color('#383838383838') = 'o',
		color('#686868686868') = 'O',
		color('#888888888888') = '+',
		color('#202202202') = '@',
		color('#4848ffff4848') = '#'),
	'...................................................',
	'...................................................',
	'...................................................',
	'...................................................',
	'...................................................',
	'....................o..............................',
	'....................oO.............................',
	'....................ooOO...........................',
	'....................oo+OO..........................',
	'....................oo+++OO........................',
	'....................oo++++OO.......................',
	'....................oo++++++OO.....................',
	'....................oo+++++++OO....................',
	'....................oo+++++++++OO..................',
	'....................oo++++++++++OX.................',
	'....................oo+++++++++XX..................',
	'....................oo+++++++XX....................',
	'....................oo++++++XX.....................',
	'....................oo++++XX.......................',
	'....................oo+++XX........................',
	'....................oo+XX..........................',
	'....................oXXX...........................',
	'....................XX.............................',
	'....................X..............................',
	'...................................................',
	'...................................................',
	'...................................................',
	'................@@@@..@............................',
	'................@...@.@............................',
	'................@...@.@.@@@@..@...@................',
	'................@...@.@.....@.@...@................',
	'................@@@@..@..@@@@.@...@................',
	'................@.....@.@...@.@...@................',
	'................@.....@.@..@@..@@@@................',
	'................@.....@..@@.@@....@................',
	'.................................@.................',
	'...............................@@..................',
	'...................................................',
	'...................................................',
	'...................................................'
);

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};


!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = 'PCP Real Time Controls';
!(BX)        XmNiconName = 'PCP Real Time Controls';
!(BX)        XmNx = 875;
!(BX)        XmNy = 216;
!(BX)        XmNwidth = 329;
!(BX)        XmNheight = 166;
!(BX)    };
!(BX)    controls {
!(BX)       managed VkWindow vkPCPliveTime;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object vkPCPliveTime : VkWindow widget {
    arguments {
!(BX) BxNclass = "VkPCPliveTimeUI";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "VkPCPliveTime";
!(BX) BxNfilebase = "VkPCPliveTime";
!(BX) BxNclassFilebase = "VkPCPliveTimeUI";
!(BX) BxNclassGeometry = "332x166+795+60";
!(BX) BxNgenerate = "True";
!(BX) BxNsuperClass = "VkComponent";
!(BX) BxNsuperClassHeader = "<Vk/VkComponent.h>";
!(BX) BxNgenerateDerived = "False";
!(BX) BxNpaletteGroup = "User Defined Classes";
!(BX) BxNpaletteName = "vk_PCParchive_Time";
!(BX) BxNpalettePixmapName = "Class";
!(BX) BxNpaletteGeom = "+0+1";
!(BX) BxNoriginalName = "liveTime";
!(BX)   _XmNtitle = 'PCP Real Time Controls';
        XmNforceChildClass = true;
        XmNautoRouteCallbacks = true;
        XmNwidth = 329;
        XmNheight = 166;
    };
    controls {
       managed XmMenuBar menuBar2;
       managed XmForm liveTimeForm;
    };
    callbacks {
    };
};

object menuBar2 : XmMenuBar widget {
    arguments {
        XmNmenuHelpWidget = XmCascadeButton helpPane2;
        XmNwidth = 329;
        XmNheight = 30;
    };
    controls {
       managed XmCascadeButton filePane2;
       managed XmCascadeButton optionsPane2;
       managed XmCascadeButton helpPane2;
    };
    callbacks {
    };
};

object filePane2 : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNwidth = 43;
        XmNheight = 26;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu6;
    };
    callbacks {
    };
};

object pulldownMenu6 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 73;
        XmNheight = 32;
    };
    controls {
       managed XmSeparatorGadget separator4;
       managed XmPushButtonGadget hideButton;
    };
    callbacks {
    };
};

object separator4 : XmSeparatorGadget widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object hideButton : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Hide");
!(BX)   _XmNmnemonic = keysym("H");
!(BX)   _XmNaccelerator = '';
!(BX)   _XmNacceleratorText = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure hideButtonActivate();
    };
};

object optionsPane2 : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Options");
!(BX)   _XmNmnemonic = keysym("O");
        XmNwidth = 74;
        XmNheight = 26;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu3;
    };
    callbacks {
    };
};

object pulldownMenu3 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 100;
        XmNheight = 54;
    };
    controls {
       managed XmCascadeButton timezoneRadioPane;
       managed XmCascadeButton menuPane;
    };
    callbacks {
    };
};

object timezoneRadioPane : XmCascadeButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("Timezone");
!(BX)   _XmNmnemonic = keysym("T");
    };
    controls {
       unmanaged XmPulldownMenu radioPulldown2;
    };
    callbacks {
    };
};

object radioPulldown2 : XmPulldownMenu widget {
    arguments {
        XmNradioBehavior = true;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 63;
        XmNheight = 30;
    };
    controls {
       managed XmToggleButtonGadget timezoneUTC;
    };
    callbacks {
    };
};

object timezoneUTC : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("UTC");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure timezoneValueChanged();
    };
};

object menuPane : XmCascadeButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("Detail");
!(BX)   _XmNmnemonic = keysym("D");
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu;
    };
    callbacks {
    };
};

object pulldownMenu : XmPulldownMenu widget {
    arguments {
        XmNisAligned = true;
        XmNentryAlignment = XmALIGNMENT_BEGINNING;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 162;
        XmNheight = 54;
    };
    controls {
       managed XmToggleButtonGadget detailedPositions;
       managed XmToggleButtonGadget showYear;
    };
    callbacks {
    };
};

object detailedPositions : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Show Milliseconds");
!(BX)   _XmNmnemonic = keysym("M");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure detailedPositionsValueChanged();
    };
};

object showYear : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Show Year");
!(BX)   _XmNmnemonic = keysym("Y");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure showYearValueChanged();
    };
};

object helpPane2 : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Help");
!(BX)   _XmNmnemonic = keysym("H");
        XmNwidth = 50;
        XmNheight = 26;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu2;
    };
    callbacks {
    };
};

object pulldownMenu2 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 237;
        XmNheight = 128;
    };
    controls {
       managed XmPushButtonGadget help_click_for_help2;
       managed XmPushButtonGadget help_overview2;
       managed XmPushButtonGadget help_index2;
       managed XmPushButtonGadget help_keys_and_short2;
       managed XmSeparatorGadget separator1;
       managed XmPushButtonGadget help_prod_info2;
    };
    callbacks {
    };
};

object help_click_for_help2 : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Click For Help");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = 'Shift<Key>F1';
!(BX)   _XmNacceleratorText = compound_string("Shift+F1");
    };
    controls {
    };
    callbacks {
    };
};

object help_overview2 : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Overview");
!(BX)   _XmNmnemonic = keysym("O");
    };
    controls {
    };
    callbacks {
    };
};

object help_index2 : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Index");
!(BX)   _XmNmnemonic = keysym("I");
    };
    controls {
    };
    callbacks {
    };
};

object help_keys_and_short2 : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Keys and Shortcuts");
!(BX)   _XmNmnemonic = keysym("K");
    };
    controls {
    };
    callbacks {
    };
};

object separator1 : XmSeparatorGadget widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object help_prod_info2 : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Product Information");
!(BX)   _XmNmnemonic = keysym("P");
    };
    controls {
    };
    callbacks {
    };
};

object liveTimeForm : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 329;
        XmNheight = 136;
    };
    controls {
       managed XmLabel label8;
       managed XmLabel label3;
       managed XmDrawnButton vcrForward;
       managed XmDrawnButton vcrStop;
       managed XmTextField position;
       managed XmOptionMenu unitsOption;
       managed XmTextField interval;
       managed XmLabel label1;
    };
    callbacks {
    };
};

object label1 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("Interval");
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftPosition = 0;
        XmNrightPosition = 0;
        XmNtopOffset = 2;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNx = 5;
        XmNy = 2;
        XmNwidth = 84;
        XmNheight = 38;
    };
    controls {
    };
    callbacks {
    };
};

object interval : XmTextField widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftPosition = 0;
        XmNrightPosition = 0;
        XmNtopOffset = 5;
        XmNbottomOffset = 0;
        XmNleftOffset = 70;
        XmNrightOffset = 165;
        XmNx = 70;
        XmNy = 5;
        XmNwidth = 94;
        XmNheight = 33;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure intervalActivate();
        XmNvalueChangedCallback = procedure intervalValueChanged();
    };
};

object unitsOption : XmOptionMenu widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtopAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftPosition = 0;
        XmNrightPosition = 0;
        XmNtopOffset = 5;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 4;
        XmNx = 164;
        XmNy = 5;
        XmNwidth = 161;
        XmNheight = 32;
    };
    controls {
       unmanaged XmPulldownMenu optionPulldown4;
    };
    callbacks {
    };
};

object optionPulldown4 : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 118;
        XmNheight = 150;
    };
    controls {
       managed XmPushButtonGadget intervalUnitsMilliseconds;
       managed XmPushButtonGadget intervalUnitsSeconds;
       managed XmPushButtonGadget intervalUnitsMinutes;
       managed XmPushButtonGadget intervalUnitsHours;
       managed XmPushButtonGadget intervalUnitsDays;
       managed XmPushButtonGadget intervalUnitsWeeks;
    };
    callbacks {
    };
};

object intervalUnitsMilliseconds : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Milliseconds");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure intervalUnitsActivate();
    };
};

object intervalUnitsSeconds : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Seconds");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure intervalUnitsActivate();
    };
};

object intervalUnitsMinutes : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Minutes");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure intervalUnitsActivate();
    };
};

object intervalUnitsHours : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Hours");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure intervalUnitsActivate();
    };
};

object intervalUnitsDays : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Days");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure intervalUnitsActivate();
    };
};

object intervalUnitsWeeks : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Weeks");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure intervalUnitsActivate();
    };
};

object position : XmTextField widget {
    arguments {
        XmNeditable = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmTextField interval;
        XmNtopPosition = 0;
        XmNleftPosition = 0;
        XmNrightPosition = 0;
        XmNtopOffset = 5;
        XmNbottomOffset = 0;
        XmNleftOffset = 70;
        XmNrightOffset = 5;
        XmNx = 70;
        XmNy = 43;
        XmNwidth = 254;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure positionActivate();
        XmNvalueChangedCallback = procedure positionValueChanged();
    };
};

object vcrStop : XmDrawnButton widget {
    arguments {
        XmNlabelType = XmPIXMAP;
        XmNlabelPixmap = stop_on_icon;
        XmNpushButtonEnabled = true;
        XmNshadowType = XmSHADOW_OUT;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNtopWidget = XmTextField position;
        XmNrightWidget = XmDrawnButton vcrForward;
        XmNtopPosition = 0;
        XmNleftPosition = 0;
        XmNrightPosition = 0;
        XmNtopOffset = 5;
        XmNbottomOffset = 0;
        XmNleftOffset = 193;
        XmNrightOffset = 5;
        XmNx = 193;
        XmNy = 78;
        XmNwidth = 63;
        XmNheight = 52;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vcrActivate();
    };
};

object vcrForward : XmDrawnButton widget {
    arguments {
        XmNlabelType = XmPIXMAP;
        XmNlabelPixmap = play_off_icon;
        XmNpushButtonEnabled = true;
        XmNshadowType = XmSHADOW_OUT;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNtopWidget = XmTextField position;
        XmNtopPosition = 0;
        XmNleftPosition = 0;
        XmNrightPosition = 0;
        XmNtopOffset = 5;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 5;
        XmNx = 261;
        XmNy = 78;
        XmNwidth = 63;
        XmNheight = 52;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vcrActivate();
    };
};

object label3 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("Time");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmTextField interval;
        XmNtopPosition = 0;
        XmNtopOffset = 5;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNx = 5;
        XmNy = 43;
        XmNwidth = 40;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label8 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("Real Time Controls: ");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNtopWidget = XmTextField position;
        XmNtopPosition = 0;
        XmNtopOffset = 17;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNx = 5;
        XmNy = 90;
        XmNwidth = 145;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};
end module;

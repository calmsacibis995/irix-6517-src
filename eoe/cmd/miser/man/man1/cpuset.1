.TH cpuset 1
.SH NAME
\f3cpuset\f1, \f3miser_cpuset\f1 \- define and manage a set of CPUs 
.SH SYNOPSIS
.nf
\f3cpuset\f1       [-q queue [-A command]|[-c -f file]|[-d]|[-l][-m]|[-Q]] | -C | -Q | -h
\f3miser_cpuset\f1 [-q queue [-A command]|[-c -f file]|[-d]|[-l][-m]|[-Q]] | -C | -Q | -h
.fi
.SH DESCRIPTION
The
.I cpuset
command is used to create and destroy cpusets, to retrieve information 
about existing cpusets, and to attach a process and all of its children 
to a cpuset.
.P
A cpuset is a named set of CPUs, which may be defined to be restricted 
or open. A restricted cpuset only allows processes that are members of 
the cpuset to run on the set of CPUs. An open cpuset allows any process 
to run on its cpus, but a process that is a member of the cpuset can 
only run on the CPUs belonging to the cpuset.
.P
A cpuset is defined by a cpuset configuration file and a name (see 
.IR cpuset(4)
for a definition of the file format). The cpuset configuration file is 
used to list the CPUs that are members of the cpuset. It also contains 
any additional parameters required to define the cpuset.  A cpuset name 
is between three and eight characters long; names of two or less 
characters are reserved.
.P
The file permissions of the configuration file define access to the cpuset. 
When permissions need to be checked, the current permissions of the file 
are used. It is therefore possible to change access to particular cpuset 
without having to tear it down and recreate it, simply by changing the 
access permissions.  Read access allows a user to retrieve information 
about a cpuset while execute permission allows the user to attach a 
process to the cpuset. 
.SH OPTIONS
.TP
.BI \-q " queue " " \-A " "command
Runs the command on the cpuset identified by the \-q parameter. If the user
does not have access permissions or the cpuset does not exist, an error is
returned.
.TP
.BI \-q " cpuset_name " \-c" " \-f " filename "
Creates a cpuset with the configuration file specified by the \-f parameter
and the name specified by the \-q parameter. If the cpuset name already
exists, a CPU specified in the cpuset configuration file is already a member
of a cpuset, or the user does not have the requisite permissions, the 
operation fails. 
.TP
.BI \-q " cpuset_name " \-l
Lists all the processes in the cpuset.
.TP
.BI \-q " cpuset_name " \-m
Moves all the attached processes out of the cpuset.
.TP 
.BI \-q " cpuset_name " \-d
Destroys the specified cpuset. A cpuset can only be destroyed if there are 
no processes currently attached to it.
.TP
.BI \-q " cpuset_name " \-Q
Prints a list of the cpus that belong to the cpuset.
.TP
.BI \-C
Prints the name of the cpuset to which the process is currently attached.
.TP
.BI \-Q
Lists the names of all the cpusets currently defined.
.TP
.BI \-h
Print the command's usage message.
.SH RESTRICTIONS
.P
A CPU can belong to at most one cpuset.
.P
CPU 0 cannot belong to an EXCLUSIVE cpuset.
.P
A CPU cannot be both restricted or isolated (see 
.IR mpadmin (1)
and 
.IR sysmp (2))
and also be a member of a cpuset.
.P
Only the superuser can create or destroy cpusets.
.P
runon(1) can not run a command on a cpu that is part of a cpuset unless
the user has permission to access the cpuset.

.SH DETAILS
.P
There is a tuneable system parameter, in the static parameter group,
.B miser
called
.B cpuset_nobind.
By default the boolean parameter is set to '0' or false. When this 
parameter is set to '1' (true), a further restriction is placed upon 
processes scheduled by cpuset: If cpuset_nobind == 1, Then
.B no process
scheduled by cpuset may bind itself or a child process to any cpu.  The 
request to bind to a cpu will be refused and the error code set to EPERM.  
In addition a message will be sent to the console and SYSLOG explaining 
the failure.

.SH "SEE ALSO"
cpuset(4),
sysmp(2),
mpadmin(1),
runon(1),
systune(1M).

--sccs************************************************************************
--sccs Audit trail generated for Peer sccs tracking
--sccs module rfc1444.smi, release 1.1 dated 95/09/25
--sccs retrieved from /home/peer+bmc/ame/common/ode/include/SCCS/s.rfc1444.smi
--sccs
--sccs    1.1	95/09/25 09:58:46 santosh
--sccs	date and time created 95/09/25 09:58:46 by santosh
--sccs
--sccs
--sccs************************************************************************/
          SNMPv2-CONF DEFINITIONS ::= BEGIN

          -- definitions for conformance groups

          OBJECT-GROUP MACRO ::=
          BEGIN
              TYPE NOTATION ::=
                            ObjectsPart
                            "STATUS" Status
                            "DESCRIPTION" Text
                            ReferPart

              VALUE NOTATION ::=
                            value(VALUE OBJECT IDENTIFIER)

              ObjectsPart ::=
                            "OBJECTS" "{" Objects "}"
              Objects ::=
                            Object
                          | Objects "," Object
              Object ::=
                            value(Name ObjectName)

              Status ::=
                            "current"
                          | "obsolete"

              ReferPart ::=
                            "REFERENCE" Text
                          | empty

              -- uses the NVT ASCII character set
              Text ::= """" string """"
          END



          -- definitions for compliance statements

          MODULE-COMPLIANCE MACRO ::=
          BEGIN
              TYPE NOTATION ::=
                            "STATUS" Status
                            "DESCRIPTION" Text
                            ReferPart
                            ModulePart

              VALUE NOTATION ::=
                            value(VALUE OBJECT IDENTIFIER)

              Status ::=
                            "current"
                          | "obsolete"

              ReferPart ::=
                          "REFERENCE" Text
                        | empty

              ModulePart ::=
                            Modules
                          | empty
              Modules ::=
                            Module
                          | Modules Module
              Module ::=
                            -- name of module --
                            "MODULE" ModuleName
                            MandatoryPart
                            CompliancePart

              ModuleName ::=
                            modulereference ModuleIdentifier
                            "MANDATORY-GROUPS" "{" Groups "}"
                          | empty

              Groups ::=
                            Group
                          | Groups "," Group
              Group ::=
                            value(Group OBJECT IDENTIFIER)

              CompliancePart ::=
                            Compliances
                          | empty

              Compliances ::=
                            Compliance
                          | Compliances Compliance
              Compliance ::=
                            ComplianceGroup
                          | Object

              ComplianceGroup ::=
                            "GROUP" value(Name OBJECT IDENTIFIER)
                            "DESCRIPTION" Text

              Object ::=
                            "OBJECT" value(Name ObjectName)
                            SyntaxPart
                            WriteSyntaxPart
                            AccessPart
                            "DESCRIPTION" Text

              -- must be a refinement for object's SYNTAX clause
              SyntaxPart ::=
                            "SYNTAX" type(SyntaxPart)
                          | empty
                          | empty
              Access ::=
                            "not-accessible"
                          | "read-only"
                          | "read-write"
                          | "read-create"

              -- uses the NVT ASCII character set
              Text ::= """" string """"
          END
























          -- definitions for capabilities statements

          AGENT-CAPABILITIES MACRO ::=
          BEGIN
              TYPE NOTATION ::=
                            "PRODUCT-RELEASE" Text
                            "STATUS" Status
                            "DESCRIPTION" Text
                            ReferPart
                            ModulePart

              VALUE NOTATION ::=
                            -- agent's sysObjectID [3] or snmpORID [4]
                            value(VALUE OBJECT IDENTIFIER)

              Status ::=
                            "current"
                          | "obsolete"

              ReferPart ::=
                          "REFERENCE" Text
                        | empty

              ModulePart ::=
                            Modules
                          | empty

              ModuleName ::=
                            identifier ModuleIdentifier
              ModuleIdentifier ::=
                            value(ModuleID OBJECT IDENTIFIER)
                          | empty

              Groups ::=
                            Group
                          | Groups "," Group
              Group ::=
                            value(Name OBJECT IDENTIFIER)

              VariationPart ::=
                            Variations
                          | empty
              Variations ::=
                            Variation
                          | Variations Variation

              Variation ::=
                            "VARIATION" value(Name ObjectName)
                            SyntaxPart
                            WriteSyntaxPart
                            AccessPart
                            CreationPart
                            DefValPart
                            "DESCRIPTION" Text

              -- must be a refinement for object's SYNTAX clause
              SyntaxPart ::=
                            "SYNTAX" type(SyntaxPart)
                          | empty


              Access ::=
                            "not-implemented"
                          | "read-only"
                          | "read-write"
                          | "read-create"
                          -- following is for backward-compatibility only
                          | "write-only"

              CreationPart ::=
                            "CREATION-REQUIRES" "{" Cells "}"
                          | empty

              Cells ::=
                            Cell
                          | Cells "," Cell

              Cell ::=
                            value(Cell ObjectName)

              DefValPart ::=
                            "DEFVAL" "{" value(Defval ObjectSyntax) "}"
                          | empty

              -- uses the NVT ASCII character set
              Text ::= """" string """"
          END


          END

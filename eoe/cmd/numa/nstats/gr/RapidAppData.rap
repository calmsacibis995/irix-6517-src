!RapidApp 872267841
!0x000102EFFFF
 ! Generated by Silicon Graphic's RapidApp.
 !
 !
 ! RapidApp 1.2.
 !
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("c++_libraries" )
!(BX) bx_info("c++_flags" )
!(BX) bx_info("c++_cc", "CC" )
!(BX) bx_info("system_directory", "/usr/lib/RapidApp" )
!(BX) bx_info("use_locales", false )
!(BX) bx_info("header_ext", "h" )
!(BX) bx_info("source_ext", "C" )
!(BX) bx_info("aux_merge_style", "merge" )
!(BX) bx_info("makefile_merge_style", "merge" )
!(BX) bx_info("derived_merge_style", "merge" )
!(BX) bx_info("ui_merge_style", "merge" )
!(BX) bx_info("target_system", "SGI" )
!(BX) bx_info("prompt_for_unnamed_classes", true )
!(BX) bx_info("inst_directory", "." )
!(BX) bx_info("desktop_directory", "." )
!(BX) bx_info("workspace_tag" )
!(BX) bx_info("header_directory", "." )
!(BX) bx_info("generate_vkapp_subclass", false )
!(BX) bx_info("generate_library", false )
!(BX) bx_info("vkapp_subclass_name" )
!(BX) bx_info("library_header_directory" )
!(BX) bx_info("library_name" )
!(BX) bx_info("comment_file", " " )
!(BX) bx_info("app_name", "gr_nstats" )
!(BX) bx_info("c++_pixmaps", "pixmaps.h", true )
!(BX) bx_info("c++_makefile", "Makefile", true )
!(BX) bx_info("do_insertion_merge", true )
!(BX) bx_info("verbose_codegen", true )
!(BX) bx_info("make_backups", true )
!(BX) bx_info("prune_dimensions", false )
!(BX) bx_info("use_irix_gl", false )
!(BX) bx_info("use_ez", true )
!(BX) bx_info("generate_unimplemented", true )
!(BX) bx_info("no_standalone_classes", true )
!(BX) bx_info("generate_default_resources", true )
!(BX) bx_info("use_cvstatic", false )
!(BX) bx_info("use_runonce", false )
!(BX) bx_info("message_system", "none" )
!(BX) bx_info("license_system", "none" )
!(BX) bx_info("generate_alternate_constructor", true )
!(BX) bx_info("use_license", false )
!(BX) bx_info("use_inventor_loop", false )
!(BX) bx_info("use_pure_virtuals", false )
!(BX) bx_info("put_windows_in_library", false )
!(BX) bx_info("use_tooltalk", false )
!(BX) bx_info("source_code_control_system", "none" )
!(BX) bx_info("force_update", false )
!(BX) bx_info("viewkit_code_version", "1.2" )
!(BX) bx_info("builder_version", "RapidApp 1.2" )



!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = 'gr_nstats';
!(BX)        XmNiconName = 'gr_nstats';
!(BX)        XmNx = 76;
!(BX)        XmNy = 20;
!(BX)        XmNwidth = 1009;
!(BX)        XmNheight = 348;
!(BX)    };
!(BX)    controls {
!(BX)       managed VkWindow vkwindow;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object vkwindow : VkWindow widget {
    arguments {
!(BX)   _XmNtitle = 'gr_nstats';
        XmNforceChildClass = true;
        XmNautoRouteCallbacks = true;
!(BX)   _SgNheaderList = '<Vk/VkApp.h>,<Vk/VkFileSelectionDialog.h>, <Vk/VkSubMenu.h>,<Vk/VkRadioSubMenu.h>,<Vk/VkMenuItem.h>';
!(BX)   _SgNshowHelp = true;
        XmNwidth = 1009;
        XmNheight = 348;
    };
    controls {
       managed XmMenuBar menuBar;
       managed XmBulletinBoard bulletinBoard;
    };
    callbacks {
    };
};

object menuBar : XmMenuBar widget {
    arguments {
        XmNmenuHelpWidget = XmCascadeButton helpPane;
        XmNwidth = 1009;
        XmNheight = 28;
    };
    controls {
       managed XmCascadeButton filePane;
       managed XmCascadeButton helpPane;
       managed XmCascadeButton viewPane1;
       managed XmCascadeButton optionsPane;
    };
    callbacks {
    };
};

object filePane : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNwidth = 43;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu;
    };
    callbacks {
    };
};

object pulldownMenu : XmPulldownMenu widget {
    arguments {
        XmNwidth = 118;
        XmNheight = 54;
    };
    controls {
       managed XmPushButtonGadget closeButton;
       managed XmPushButtonGadget exitButton;
    };
    callbacks {
    };
};

object closeButton : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Close");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = 'Ctrl<Key>W';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+W");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure close();
    };
};

object exitButton : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Exit");
!(BX)   _XmNmnemonic = keysym("x");
!(BX)   _XmNaccelerator = 'Ctrl<Key>Q';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Q");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure quit();
    };
};

object helpPane : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Help");
!(BX)   _XmNmnemonic = keysym("H");
        XmNwidth = 50;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu3;
    };
    callbacks {
    };
};

object pulldownMenu3 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 225;
        XmNheight = 128;
    };
    controls {
       managed XmPushButtonGadget help_click_for_help;
       managed XmPushButtonGadget help_overview;
       managed XmPushButtonGadget help_index;
       managed XmPushButtonGadget help_keys_and_short;
       managed XmSeparatorGadget separator;
       managed XmPushButtonGadget help_prod_info;
    };
    callbacks {
    };
};

object help_click_for_help : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Click For Help");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = 'Shift<Key>F1';
!(BX)   _XmNacceleratorText = compound_string("Shift+F1");
    };
    controls {
    };
    callbacks {
    };
};

object help_overview : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Overview");
!(BX)   _XmNmnemonic = keysym("O");
    };
    controls {
    };
    callbacks {
    };
};

object help_index : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Index");
!(BX)   _XmNmnemonic = keysym("I");
    };
    controls {
    };
    callbacks {
    };
};

object help_keys_and_short : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Keys and Shortcuts");
!(BX)   _XmNmnemonic = keysym("K");
    };
    controls {
    };
    callbacks {
    };
};

object separator : XmSeparatorGadget widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object help_prod_info : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Product Information");
!(BX)   _XmNmnemonic = keysym("P");
    };
    controls {
    };
    callbacks {
    };
};

object viewPane1 : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("View");
!(BX)   _XmNmnemonic = keysym("V");
        XmNwidth = 52;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu viewPulldownMenu1;
    };
    callbacks {
    };
};

object viewPulldownMenu1 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 153;
        XmNheight = 30;
    };
    controls {
       managed XmToggleButtonGadget toggle;
    };
    callbacks {
    };
};

object toggle : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("View total activity");
    };
    controls {
    };
    callbacks {
    };
};

object optionsPane : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Options");
!(BX)   _XmNmnemonic = keysym("O");
        XmNwidth = 74;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu2;
    };
    callbacks {
    };
};

object pulldownMenu2 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 141;
        XmNheight = 54;
    };
    controls {
       managed XmCascadeButton radioInterval;
       managed XmCascadeButton radioMaxDiff;
    };
    callbacks {
    };
};

object radioInterval : XmCascadeButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("Update Interval");
    };
    controls {
       unmanaged XmPulldownMenu radioPulldown;
    };
    callbacks {
    };
};

object radioPulldown : XmPulldownMenu widget {
    arguments {
        XmNradioBehavior = true;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 81;
        XmNheight = 78;
    };
    controls {
       managed XmToggleButtonGadget radUI10;
       managed XmToggleButtonGadget radUI100;
       managed XmToggleButtonGadget radUI1000;
    };
    callbacks {
    };
};

object radUI10 : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("10 ms");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure setInterval10();
    };
};

object radUI100 : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("100 ms");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure setInterval100();
    };
};

object radUI1000 : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("1 s");
        XmNset = true;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure setInterval1000();
    };
};

object radioMaxDiff : XmCascadeButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("Max Diff Value");
    };
    controls {
       unmanaged XmPulldownMenu radioPulldown1;
    };
    callbacks {
    };
};

object radioPulldown1 : XmPulldownMenu widget {
    arguments {
        XmNradioBehavior = true;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 65;
        XmNheight = 78;
    };
    controls {
       managed XmToggleButtonGadget radMD10;
       managed XmToggleButtonGadget radMD100;
       managed XmToggleButtonGadget radMD1000;
    };
    callbacks {
    };
};

object radMD10 : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("10");
        XmNset = true;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure setDiff10();
    };
};

object radMD100 : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("100");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure setDiff100();
    };
};

object radMD1000 : XmToggleButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("1000");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure setDiff1000();
    };
};

object bulletinBoard : XmBulletinBoard widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 1009;
        XmNheight = 320;
    };
    controls {
       managed XmLabelGadget lNode;
       managed XmLabelGadget lChange;
       managed XmLabelGadget lMP;
       managed XmLabelGadget lFP;
       managed XmLabelGadget lCMS;
       managed XmLabelGadget lCMF;
       managed XmLabelGadget lCMT;
       managed XmLabelGadget lUMS;
       managed XmLabelGadget lUMF;
       managed XmLabelGadget lUMT;
       managed XmLabelGadget lAMS;
       managed XmLabelGadget lAMF;
       managed XmLabelGadget lAMT;
       managed XmLabelGadget lCI;
       managed VkVuMeter meterMP;
       managed VkVuMeter meterFP;
       managed VkVuMeter meterCMS;
       managed VkVuMeter meterCMF;
       managed VkVuMeter meterCMT;
       managed VkVuMeter meterUMS;
       managed VkVuMeter meterUMF;
       managed VkVuMeter meterUMT;
       managed VkVuMeter meterAMS;
       managed VkVuMeter meterAMF;
       managed VkVuMeter meterAMT;
       managed VkVuMeter meterCI;
       managed VkTickMarks tickmarks;
       managed XmLabelGadget valMP;
       managed XmLabelGadget valFP;
       managed XmLabelGadget valCMS;
       managed XmLabelGadget valCMF;
       managed XmLabelGadget valCMT;
       managed XmLabelGadget valUMS;
       managed XmLabelGadget valUMF;
       managed XmLabelGadget valUMT;
       managed XmLabelGadget valAMS;
       managed XmLabelGadget label12;
       managed XmLabelGadget label11;
       managed XmLabelGadget label10;
       managed XmLabelGadget label9;
       managed XmLabelGadget label8;
       managed XmLabelGadget label7;
       managed XmLabelGadget label6;
       managed XmLabelGadget label5;
       managed XmLabelGadget label4;
       managed XmLabelGadget valAMF;
       managed XmLabelGadget valAMT;
       managed XmLabelGadget valCI;
       managed XmLabelGadget valMT;
       managed XmLabelGadget label3;
       managed XmLabelGadget label2;
       managed XmLabelGadget label1;
       managed XmLabelGadget label;
       managed XmScrolledWindow scrolledWindow;
    };
    callbacks {
    };
};

object scrolledWindow : XmScrolledWindow widget {
    arguments {
        XmNscrollBarDisplayPolicy = XmSTATIC;
        XmNx = 10;
        XmNy = 50;
        XmNwidth = 240;
        XmNheight = 200;
    };
    controls {
       managed XmList scrolledList;
    };
    callbacks {
    };
};

object scrolledList : XmList widget {
    arguments {
!(BX) convert("XmNitems", "XmStringTable", "", "XmStringTable", "")
!(BX)   _XmNitems = string_table(
!(BX)	compound_string(""));
        XmNitemCount = 0;
        XmNwidth = 234;
        XmNheight = 194;
    };
    controls {
    };
    callbacks {
        XmNbrowseSelectionCallback = procedure nodeSelect();
    };
};

object label : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Migration Threshold:");
        XmNx = 260;
        XmNy = 50;
        XmNwidth = 150;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label1 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Counter Interrupts:");
        XmNx = 260;
        XmNy = 70;
        XmNwidth = 139;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label2 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Auto Migrations To Node:");
        XmNx = 260;
        XmNy = 90;
        XmNwidth = 183;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label3 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Auto Migrations From Node:");
        XmNx = 260;
        XmNy = 110;
        XmNwidth = 202;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valMT : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 50;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valCI : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 70;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valAMT : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 90;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valAMF : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 110;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label4 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Auto Migration Skips:");
        XmNx = 260;
        XmNy = 130;
        XmNwidth = 156;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label5 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("User Migrations To Node:");
        XmNx = 260;
        XmNy = 150;
        XmNwidth = 183;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label6 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("User Migrations From Node:");
        XmNx = 260;
        XmNy = 170;
        XmNwidth = 202;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label7 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("User Migration Skips:");
        XmNx = 260;
        XmNy = 190;
        XmNwidth = 156;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label8 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("CoalD Migrations To Node:");
        XmNx = 260;
        XmNy = 210;
        XmNwidth = 193;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label9 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("CoalD Migrations From Node:");
        XmNx = 260;
        XmNy = 230;
        XmNwidth = 212;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label10 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("CoalD Migration Skips:");
        XmNx = 260;
        XmNy = 250;
        XmNwidth = 166;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label11 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Frozen Pages In Node:");
        XmNx = 260;
        XmNy = 270;
        XmNwidth = 161;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label12 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Melted Pages In Node:");
        XmNx = 260;
        XmNy = 290;
        XmNwidth = 161;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valAMS : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 130;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valUMT : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 150;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valUMF : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 170;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valUMS : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 190;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valCMT : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 210;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valCMF : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 230;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valCMS : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 250;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valFP : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 270;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object valMP : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("00000000");
        XmNx = 480;
        XmNy = 290;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object tickmarks : VkTickMarks widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateTickMarks';
        XmNincludePath = '<Vk/VkTickMarks.h>';
        XmNeditFunction = 'EditVkTickMarks';
        XmNisLiveComponent = true;
        XmNx = 570;
        XmNy = 50;
        XmNwidth = 50;
        XmNheight = 216;
    };
    controls {
    };
    callbacks {
    };
};

object meterCI : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 630;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterAMT : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 660;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterAMF : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 690;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterAMS : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 720;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterUMT : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 750;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterUMF : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 780;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterUMS : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 810;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterCMT : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 840;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterCMF : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 870;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterCMS : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 900;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterFP : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 930;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object meterMP : VkVuMeter widget {
    arguments {
        XmNlibraryName = '/usr/lib/libvk.so';
        XmNcreationFunction = 'VkCreateVuMeter';
        XmNincludePath = '<Vk/VkVuMeter.h>';
        XmNeditFunction = 'EditVkVumeter';
        XmNisLiveComponent = true;
        XmNx = 960;
        XmNy = 50;
        XmNwidth = 20;
        XmNheight = 200;
    };
    controls {
    };
    callbacks {
    };
};

object lCI : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("CI");
        XmNx = 630;
        XmNy = 250;
        XmNwidth = 19;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lAMT : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("AtN");
        XmNx = 655;
        XmNy = 250;
        XmNwidth = 30;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lAMF : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("AfN");
        XmNx = 685;
        XmNy = 250;
        XmNwidth = 29;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lAMS : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("AS");
        XmNx = 720;
        XmNy = 250;
        XmNwidth = 24;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lUMT : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("UtN");
        XmNx = 745;
        XmNy = 250;
        XmNwidth = 31;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lUMF : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("UfN");
        XmNx = 775;
        XmNy = 250;
        XmNwidth = 30;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lUMS : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("US");
        XmNx = 810;
        XmNy = 250;
        XmNwidth = 25;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lCMT : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("CtN");
        XmNx = 835;
        XmNy = 250;
        XmNwidth = 31;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lCMF : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("CfN");
        XmNx = 865;
        XmNy = 250;
        XmNwidth = 30;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lCMS : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("CS");
        XmNx = 900;
        XmNy = 250;
        XmNwidth = 25;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lFP : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("FP");
        XmNx = 930;
        XmNy = 250;
        XmNwidth = 23;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lMP : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("MP");
        XmNx = 960;
        XmNy = 250;
        XmNwidth = 27;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lChange : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Change Per Time Interval");
        XmNx = 710;
        XmNy = 20;
        XmNwidth = 178;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object lNode : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Node");
        XmNx = 110;
        XmNy = 20;
        XmNwidth = 41;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};
end module;

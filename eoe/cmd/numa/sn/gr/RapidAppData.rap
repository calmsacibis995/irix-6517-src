!RapidApp 872196422
!0x000102EFFFF
 ! Generated by Silicon Graphic's RapidApp.
 !
 !
 ! RapidApp 1.2.
 !
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("c++_libraries" )
!(BX) bx_info("c++_flags" )
!(BX) bx_info("c++_cc", "CC" )
!(BX) bx_info("system_directory", "/usr/lib/RapidApp" )
!(BX) bx_info("use_locales", false )
!(BX) bx_info("header_ext", "h" )
!(BX) bx_info("source_ext", "C" )
!(BX) bx_info("aux_merge_style", "merge" )
!(BX) bx_info("makefile_merge_style", "merge" )
!(BX) bx_info("derived_merge_style", "merge" )
!(BX) bx_info("ui_merge_style", "merge" )
!(BX) bx_info("target_system", "SGI" )
!(BX) bx_info("prompt_for_unnamed_classes", true )
!(BX) bx_info("inst_directory", "." )
!(BX) bx_info("desktop_directory", "." )
!(BX) bx_info("workspace_tag" )
!(BX) bx_info("header_directory", "." )
!(BX) bx_info("generate_vkapp_subclass", false )
!(BX) bx_info("generate_library", false )
!(BX) bx_info("vkapp_subclass_name" )
!(BX) bx_info("library_header_directory" )
!(BX) bx_info("library_name" )
!(BX) bx_info("comment_file", " " )
!(BX) bx_info("app_name", "gr_sn" )
!(BX) bx_info("c++_pixmaps", "pixmaps.h", true )
!(BX) bx_info("c++_makefile", "Makefile", true )
!(BX) bx_info("do_insertion_merge", true )
!(BX) bx_info("verbose_codegen", true )
!(BX) bx_info("make_backups", true )
!(BX) bx_info("prune_dimensions", false )
!(BX) bx_info("use_irix_gl", false )
!(BX) bx_info("use_ez", true )
!(BX) bx_info("generate_unimplemented", true )
!(BX) bx_info("no_standalone_classes", true )
!(BX) bx_info("generate_default_resources", true )
!(BX) bx_info("use_cvstatic", false )
!(BX) bx_info("use_runonce", false )
!(BX) bx_info("message_system", "none" )
!(BX) bx_info("license_system", "none" )
!(BX) bx_info("generate_alternate_constructor", true )
!(BX) bx_info("use_license", false )
!(BX) bx_info("use_inventor_loop", false )
!(BX) bx_info("use_pure_virtuals", false )
!(BX) bx_info("put_windows_in_library", false )
!(BX) bx_info("use_tooltalk", false )
!(BX) bx_info("source_code_control_system", "none" )
!(BX) bx_info("force_update", false )
!(BX) bx_info("viewkit_code_version", "1.2" )
!(BX) bx_info("builder_version", "RapidApp 1.2" )



!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = 'gr_sn';
!(BX)        XmNiconName = 'gr_sn';
!(BX)        XmNx = 55;
!(BX)        XmNy = 415;
!(BX)        XmNwidth = 1237;
!(BX)        XmNheight = 287;
!(BX)    };
!(BX)    controls {
!(BX)       managed VkWindow vkwindow;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object vkwindow : VkWindow widget {
    arguments {
!(BX)   _XmNtitle = 'gr_sn';
        XmNforceChildClass = true;
        XmNautoRouteCallbacks = true;
!(BX)   _SgNheaderList = '<Vk/VkApp.h>,<Vk/VkFileSelectionDialog.h>, <Vk/VkSubMenu.h>,<Vk/VkRadioSubMenu.h>,<Vk/VkMenuItem.h>';
!(BX)   _SgNshowHelp = true;
        XmNwidth = 1237;
        XmNheight = 287;
    };
    controls {
       managed XmMenuBar menuBar;
       managed XmBulletinBoard bulletinBoard;
    };
    callbacks {
    };
};

object menuBar : XmMenuBar widget {
    arguments {
        XmNmenuHelpWidget = XmCascadeButton helpPane;
        XmNwidth = 1237;
        XmNheight = 28;
    };
    controls {
       managed XmCascadeButton filePane;
       managed XmCascadeButton helpPane;
       managed XmCascadeButton editPane1;
    };
    callbacks {
    };
};

object filePane : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("File");
!(BX)   _XmNmnemonic = keysym("F");
        XmNwidth = 43;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu;
    };
    callbacks {
    };
};

object pulldownMenu : XmPulldownMenu widget {
    arguments {
        XmNwidth = 118;
        XmNheight = 54;
    };
    controls {
       managed XmPushButtonGadget closeButton;
       managed XmPushButtonGadget exitButton;
    };
    callbacks {
    };
};

object closeButton : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Close");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = 'Ctrl<Key>W';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+W");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure close();
    };
};

object exitButton : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Exit");
!(BX)   _XmNmnemonic = keysym("x");
!(BX)   _XmNaccelerator = 'Ctrl<Key>Q';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+Q");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure quit();
    };
};

object helpPane : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Help");
!(BX)   _XmNmnemonic = keysym("H");
        XmNwidth = 50;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu3;
    };
    callbacks {
    };
};

object pulldownMenu3 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 225;
        XmNheight = 128;
    };
    controls {
       managed XmPushButtonGadget help_click_for_help;
       managed XmPushButtonGadget help_overview;
       managed XmPushButtonGadget help_index;
       managed XmPushButtonGadget help_keys_and_short;
       managed XmSeparatorGadget separator;
       managed XmPushButtonGadget help_prod_info;
    };
    callbacks {
    };
};

object help_click_for_help : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Click For Help");
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNaccelerator = 'Shift<Key>F1';
!(BX)   _XmNacceleratorText = compound_string("Shift+F1");
    };
    controls {
    };
    callbacks {
    };
};

object help_overview : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Overview");
!(BX)   _XmNmnemonic = keysym("O");
    };
    controls {
    };
    callbacks {
    };
};

object help_index : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Index");
!(BX)   _XmNmnemonic = keysym("I");
    };
    controls {
    };
    callbacks {
    };
};

object help_keys_and_short : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Keys and Shortcuts");
!(BX)   _XmNmnemonic = keysym("K");
    };
    controls {
    };
    callbacks {
    };
};

object separator : XmSeparatorGadget widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object help_prod_info : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Product Information");
!(BX)   _XmNmnemonic = keysym("P");
    };
    controls {
    };
    callbacks {
    };
};

object editPane1 : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Edit");
!(BX)   _XmNmnemonic = keysym("E");
        XmNwidth = 47;
        XmNheight = 24;
    };
    controls {
       unmanaged XmPulldownMenu pulldownMenu6;
    };
    callbacks {
    };
};

object pulldownMenu6 : XmPulldownMenu widget {
    arguments {
        XmNwidth = 155;
        XmNheight = 54;
    };
    controls {
       managed XmPushButtonGadget selectAll1;
       managed XmPushButtonGadget unselectAll;
    };
    callbacks {
    };
};

object selectAll1 : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Select All");
!(BX)   _XmNmnemonic = keysym("A");
!(BX)   _XmNaccelerator = 'Ctrl<Key>A';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+A");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure selectAll();
    };
};

object unselectAll : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Select First");
!(BX)   _XmNmnemonic = keysym("F");
!(BX)   _XmNaccelerator = 'Ctrl<Key>F';
!(BX)   _XmNacceleratorText = compound_string("Ctrl+F");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure selectFirst();
    };
};

object bulletinBoard : XmBulletinBoard widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 1237;
        XmNheight = 259;
    };
    controls {
       managed XmTextField meltThreshField;
       managed XmTextField freezeThreshField;
       managed XmTextField unpegThreshField;
       managed XmTextField dampFactorField;
       managed XmTextField refcntUAThreshField;
       managed XmLabelGadget label22;
       managed VkOptionMenu optionMenu;
       managed XmTextField unpegIntervalField;
       managed XmLabelGadget label21;
       managed XmLabelGadget label20;
       managed XmTextField dampMLThreshField;
       managed XmScale dampMLThreshScale;
       managed XmLabelGadget label19;
       managed XmTextField migrMinDisField;
       managed XmLabelGadget label18;
       managed XmTextField migrMAThreshField;
       managed XmLabelGadget label17;
       managed XmLabelGadget label16;
       managed XmScale meltThreshScale;
       managed XmTextField migrThreshField;
       managed XmScale freezeThreshScale;
       managed XmScale unpegThreshScale;
       managed XmScale dampFactorScale;
       managed XmScale migrThreshScale;
       managed XmLabelGadget label15;
       managed XmLabelGadget label14;
       managed XmLabelGadget label13;
       managed XmLabelGadget label12;
       managed XmLabelGadget label11;
       managed XmRowColumn radiobox5;
       managed XmLabelGadget label10;
       managed XmRowColumn radiobox4;
       managed XmLabelGadget label9;
       managed XmLabelGadget label8;
       managed XmLabelGadget label7;
       managed XmLabelGadget label6;
       managed XmLabelGadget label5;
       managed XmLabelGadget label4;
       managed XmLabelGadget label3;
       managed XmLabelGadget label2;
       managed XmLabelGadget label1;
       managed XmLabelGadget label;
       managed XmRowColumn radiobox3;
       managed XmRowColumn radiobox2;
       managed XmRowColumn radiobox1;
       managed XmRowColumn radiobox;
       managed XmScrolledWindow scrolledWindow;
    };
    callbacks {
    };
};

object scrolledWindow : XmScrolledWindow widget {
    arguments {
        XmNscrollBarDisplayPolicy = XmSTATIC;
        XmNx = 10;
        XmNy = 40;
        XmNwidth = 220;
        XmNheight = 200;
    };
    controls {
       managed XmList scrolledList;
    };
    callbacks {
    };
};

object scrolledList : XmList widget {
    arguments {
        XmNselectionPolicy = XmMULTIPLE_SELECT;
        XmNwidth = 214;
        XmNheight = 194;
    };
    controls {
    };
    callbacks {
        XmNmultipleSelectionCallback = procedure nodeSelect();
    };
};

object radiobox : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNpacking = XmPACK_COLUMN;
        XmNnumColumns = 1;
        XmNradioBehavior = true;
        XmNradioAlwaysOne = true;
        XmNx = 330;
        XmNy = 50;
        XmNwidth = 123;
        XmNheight = 32;
    };
    controls {
       managed XmToggleButton migrTogOn;
       managed XmToggleButton migrTogOff;
       managed XmToggleButton migrTogNormOn;
       managed XmToggleButton migrTogNormOff;
    };
    callbacks {
    };
};

object migrTogOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure migrSetOn();
    };
};

object migrTogOff : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure migrSetOff();
    };
};

object migrTogNormOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure migrSetNormOn();
    };
};

object migrTogNormOff : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure migrSetNormOff();
    };
};

object radiobox1 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNpacking = XmPACK_COLUMN;
        XmNradioBehavior = true;
        XmNradioAlwaysOne = true;
        XmNx = 330;
        XmNy = 80;
        XmNwidth = 123;
        XmNheight = 32;
    };
    controls {
       managed XmToggleButton refcntTogOn;
       managed XmToggleButton refcntTogOff;
       managed XmToggleButton refcntTogNormOn;
       managed XmToggleButton refcntTogNormOff;
    };
    callbacks {
    };
};

object refcntTogOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure refcntSetOn();
    };
};

object refcntTogOff : XmToggleButton widget {
    arguments {
        XmNshadowThickness = 0;
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
        XmNset = false;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure refcntSetOff();
    };
};

object refcntTogNormOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure refcntSetNormOn();
    };
};

object refcntTogNormOff : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure refcntSetNormOff();
    };
};

object radiobox2 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNpacking = XmPACK_COLUMN;
        XmNradioBehavior = true;
        XmNradioAlwaysOne = true;
        XmNx = 330;
        XmNy = 110;
        XmNwidth = 63;
        XmNheight = 32;
    };
    controls {
       managed XmToggleButton dampTogOn;
       managed XmToggleButton dampTogOff;
    };
    callbacks {
    };
};

object dampTogOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure dampSetOn();
    };
};

object dampTogOff : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure dampSetOff();
    };
};

object radiobox3 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNpacking = XmPACK_COLUMN;
        XmNradioBehavior = true;
        XmNradioAlwaysOne = true;
        XmNx = 330;
        XmNy = 140;
        XmNwidth = 63;
        XmNheight = 32;
    };
    controls {
       managed XmToggleButton unpegTogOn;
       managed XmToggleButton unpegTogOff;
    };
    callbacks {
    };
};

object unpegTogOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure unpegSetOn();
    };
};

object unpegTogOff : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure unpegSetOff();
    };
};

object label : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("On");
        XmNx = 330;
        XmNy = 30;
        XmNwidth = 25;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label1 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Off");
        XmNx = 360;
        XmNy = 30;
        XmNwidth = 24;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label2 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("On");
        XmNx = 390;
        XmNy = 30;
        XmNwidth = 25;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label3 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Off");
        XmNx = 420;
        XmNy = 30;
        XmNwidth = 24;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label4 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Norm.");
        XmNx = 395;
        XmNy = 10;
        XmNwidth = 46;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label5 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Migration:");
        XmNx = 240;
        XmNy = 50;
        XmNwidth = 76;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label6 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Refcnt:");
        XmNx = 240;
        XmNy = 80;
        XmNwidth = 54;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label7 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Dampening:");
        XmNx = 240;
        XmNy = 110;
        XmNwidth = 88;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label8 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Unpegging:");
        XmNx = 240;
        XmNy = 140;
        XmNwidth = 86;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label9 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Freezing:");
        XmNx = 240;
        XmNy = 170;
        XmNwidth = 68;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object radiobox4 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNpacking = XmPACK_COLUMN;
        XmNradioBehavior = true;
        XmNradioAlwaysOne = true;
        XmNx = 330;
        XmNy = 170;
        XmNwidth = 63;
        XmNheight = 32;
    };
    controls {
       managed XmToggleButton freezeTogOn;
       managed XmToggleButton freezeTogOff;
    };
    callbacks {
    };
};

object freezeTogOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure freezeSetOn();
    };
};

object freezeTogOff : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure freezeSetOff();
    };
};

object label10 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Melting:");
        XmNx = 240;
        XmNy = 200;
        XmNwidth = 61;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object radiobox5 : XmRowColumn widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNpacking = XmPACK_COLUMN;
        XmNradioBehavior = true;
        XmNradioAlwaysOne = true;
        XmNx = 330;
        XmNy = 200;
        XmNwidth = 63;
        XmNheight = 32;
    };
    controls {
       managed XmToggleButton meltTogOn;
       managed XmToggleButton meltTogOff;
    };
    callbacks {
    };
};

object meltTogOn : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure meltSetOn();
    };
};

object meltTogOff : XmToggleButton widget {
    arguments {
        XmNlabelType = XmSTRING;
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure meltSetOff();
    };
};

object label11 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Threshold:");
        XmNx = 460;
        XmNy = 50;
        XmNwidth = 79;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label12 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Threshold:");
        XmNx = 460;
        XmNy = 200;
        XmNwidth = 80;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label13 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Factor:");
        XmNx = 460;
        XmNy = 110;
        XmNwidth = 54;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label14 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Threshold:");
        XmNx = 460;
        XmNy = 140;
        XmNwidth = 79;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label15 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Threshold:");
        XmNx = 460;
        XmNy = 170;
        XmNwidth = 79;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object migrThreshScale : XmScale widget {
    arguments {
        SgNslanted = false;
        XmNorientation = XmHORIZONTAL;
        XmNshowValue = false;
        XmNx = 540;
        XmNy = 50;
        XmNwidth = 100;
        XmNheight = 15;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure migrThreshScaleChanged();
        XmNdragCallback = procedure migrThreshScaleDynamic();
    };
};

object dampFactorScale : XmScale widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNshowValue = false;
        XmNx = 540;
        XmNy = 110;
        XmNwidth = 100;
        XmNheight = 15;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure dampFactorScaleChanged();
        XmNdragCallback = procedure dampFactorScaleDynamic();
    };
};

object unpegThreshScale : XmScale widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNshowValue = false;
        XmNx = 540;
        XmNy = 140;
        XmNwidth = 100;
        XmNheight = 15;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure unpegThreshScaleChanged();
        XmNdragCallback = procedure unpegThreshScaleDynamic();
    };
};

object freezeThreshScale : XmScale widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNshowValue = false;
        XmNx = 540;
        XmNy = 170;
        XmNwidth = 100;
        XmNheight = 15;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure freezeThreshScaleChanged();
        XmNdragCallback = procedure freezeThreshScaleDynamic();
    };
};

object migrThreshField : XmTextField widget {
    arguments {
        XmNcolumns = 3;
        XmNx = 640;
        XmNy = 40;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure migrThreshFieldChanged();
    };
};

object meltThreshScale : XmScale widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNshowValue = false;
        XmNx = 540;
        XmNy = 200;
        XmNwidth = 100;
        XmNheight = 15;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure meltThreshScaleChanged();
        XmNdragCallback = procedure meltThreshScaleDynamic();
    };
};

object label16 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("MaxAbsThreshold:");
        XmNx = 700;
        XmNy = 50;
        XmNwidth = 134;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label17 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("UpdateAbsThreshold:");
        XmNx = 460;
        XmNy = 80;
        XmNwidth = 156;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object migrMAThreshField : XmTextField widget {
    arguments {
        XmNcolumns = 4;
        XmNx = 840;
        XmNy = 40;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure migrMAThreshFieldChanged();
    };
};

object label18 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("MinDistance:");
        XmNx = 900;
        XmNy = 50;
        XmNwidth = 96;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object migrMinDisField : XmTextField widget {
    arguments {
        XmNcolumns = 2;
        XmNx = 1000;
        XmNy = 40;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure migrMinDisFieldChanged();
    };
};

object label19 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("MemoryLowThreshold:");
        XmNx = 700;
        XmNy = 110;
        XmNwidth = 162;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object dampMLThreshScale : XmScale widget {
    arguments {
        XmNorientation = XmHORIZONTAL;
        XmNshowValue = false;
        XmNx = 860;
        XmNy = 110;
        XmNwidth = 100;
        XmNheight = 15;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure dampMLThreshScaleChanged();
        XmNdragCallback = procedure dampMLThreshScaleDynamic();
    };
};

object dampMLThreshField : XmTextField widget {
    arguments {
        XmNcolumns = 3;
        XmNx = 960;
        XmNy = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure dampMLThreshFieldChanged();
    };
};

object label20 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Node");
        XmNx = 90;
        XmNy = 10;
        XmNwidth = 41;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label21 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Interval:");
        XmNx = 700;
        XmNy = 140;
        XmNwidth = 61;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object unpegIntervalField : XmTextField widget {
    arguments {
        XmNcolumns = 4;
        XmNx = 760;
        XmNy = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure unpegIntervalFieldChanged();
    };
};

object optionMenu : VkOptionMenu widget {
    arguments {
        XmNx = 1110;
        XmNy = 40;
        XmNwidth = 119;
        XmNheight = 32;
    };
    controls {
       unmanaged XmPulldownMenu optionPulldown;
    };
    callbacks {
    };
};

object optionPulldown : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 79;
        XmNheight = 54;
    };
    controls {
       managed XmPushButtonGadget optionA;
       managed XmPushButtonGadget optionB;
    };
    callbacks {
    };
};

object optionA : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("BTE");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure VehicleBTE();
    };
};

object optionB : XmPushButtonGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("TLBsync");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure VehicleTLBsync();
    };
};

object label22 : XmLabelGadget widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Vehicle:");
        XmNx = 1050;
        XmNy = 50;
        XmNwidth = 60;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object refcntUAThreshField : XmTextField widget {
    arguments {
        XmNcolumns = 4;
        XmNx = 632;
        XmNy = 70;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure refcntUAThreshFieldChanged();
    };
};

object dampFactorField : XmTextField widget {
    arguments {
        XmNcolumns = 3;
        XmNx = 640;
        XmNy = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure dampFactorFieldChanged();
    };
};

object unpegThreshField : XmTextField widget {
    arguments {
        XmNcolumns = 3;
        XmNx = 640;
        XmNy = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure unpegThreshFieldChanged();
    };
};

object freezeThreshField : XmTextField widget {
    arguments {
        XmNcolumns = 3;
        XmNx = 640;
        XmNy = 160;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure freezeThreshFieldChanged();
    };
};

object meltThreshField : XmTextField widget {
    arguments {
        XmNcolumns = 3;
        XmNx = 640;
        XmNy = 190;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure meltThreshFieldChanged();
    };
};
end module;

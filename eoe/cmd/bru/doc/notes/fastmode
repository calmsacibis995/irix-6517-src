Profiling bru on various systems has shown that in implementations
without assembly language speedup, bru spends about 25% to 50% of it's
time computing checksums.  Because there are cases where checksum
computation is not really needed (such as using two "back-to-back"
bru's to copy a hierarchy, or when the transmission medium can be
assumed to be perfect), a "fast mode" has been implemented.

Under fast mode, checksum computations are not performed.  Checksums
are recorded in the archive as zero, and all checksum tests result
in a valid checksum being found.

Using the fast mode option -F reduces the amount of user time by
about 25% to 50% as expected.  However, the elapsed time seldom
changes significantly since bru is usually I/O bound anyway.

Note that use of the fast mode option defeats many of the
automatic functions of bru (such as automatic byte swapping)
and unpredictable results may occur when the transmission medium
turns out to be imperfect after all.

#ifndef _FCAL_H_
#define _FCAL_H_

typedef struct {
  u_char bm_bits[16];
} alpa_bitmap_struct_t;
typedef alpa_bitmap_struct_t *alpa_bitmap_t;
#define NBMBITS 8
#define BM_SET(_bm, _n)   \
   ((_bm)->bm_bits[15-(_n)/NBMBITS] |= (u_char)  (1 << ((_n) % NBMBITS)))
#define BM_CLR(_bm, _n)   \
   ((_bm)->bm_bits[15-(_n)/NBMBITS] &= (u_char) ~(1 << ((_n) % NBMBITS)))
#define BM_ISSET(_bm, _n) \
   ((_bm)->bm_bits[15-(_n)/NBMBITS] &  (u_char)  (1 << ((_n) % NBMBITS)))

typedef struct {
  u_char map[128];
} alpa_posmap_struct_t;
typedef alpa_posmap_struct_t *alpa_posmap_t;

u_char _tid2alpa_[] = {
  0xEF, 0xE8, 0xE4, 0xE2, 0xE1, 0xE0, 0xDC, 0xDA, /* 00 - 07 */
  0xD9, 0xD6, 0xD5, 0xD4, 0xD3, 0xD2, 0xD1, 0xCE, /* 08 - 0F*/
  0xCD, 0xCC, 0xCB, 0xCA, 0xC9, 0xC7, 0xC6, 0xC5, /* 10 - 17 */
  0xC3, 0xBC, 0xBA, 0xB9, 0xB6, 0xB5, 0xB4, 0xB3, /* 18 - 1F */
  0xB2, 0xB1, 0xAE, 0xAD, 0xAC, 0xAB, 0xAA, 0xA9, /* 20 - 27 */
  0xA7, 0xA6, 0xA5, 0xA3, 0x9F, 0x9E, 0x9D, 0x9B, /* 28 - 2F */
  0x98, 0x97, 0x90, 0x8F, 0x88, 0x84, 0x82, 0x81, /* 30 - 37 */
  0x80, 0x7C, 0x7A, 0x79, 0x76, 0x75, 0x74, 0x73, /* 38 - 3F */
  0x72, 0x71, 0x6E, 0x6D, 0x6C, 0x6B, 0x6A, 0x69, /* 40 - 47 */
  0x67, 0x66, 0x65, 0x63, 0x5C, 0x5A, 0x59, 0x56, /* 48 - 4F */
  0x55, 0x54, 0x53, 0x52, 0x51, 0x4E, 0x4D, 0x4C, /* 50 - 57 */
  0x4B, 0x4A, 0x49, 0x47, 0x46, 0x45, 0x43, 0x3C, /* 58 - 5F */
  0x3A, 0x39, 0x36, 0x35, 0x34, 0x33, 0x32, 0x31, /* 60 - 67 */
  0x2E, 0x2D, 0x2C, 0x2B, 0x2A, 0x29, 0x27, 0x26, /* 68 - 6F */
  0x25, 0x23, 0x1F, 0x1E, 0x1D, 0x1B, 0x18, 0x17, /* 70 - 77 */
  0x10, 0x0F, 0x08, 0x04, 0x02, 0x01, 0x00,       /* 78 - 7E .. 7F is illegal */
};
#define INVALID_ALPA    ((u_char)-1)
#define TID2ALPA(_tid_) (((_tid_) > 0x7E) ? INVALID_ALPA : _tid2alpa_[(_tid)])

#define TID_LO    ((u_char)0)
#define TID_HI    ((u_char)126)
#define TID_UNDEF ((u_char)-1)

#endif

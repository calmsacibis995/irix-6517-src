# cuesheet format for multitrack recording or for audio recording
# each line of the form
#  1)  image:image_file
#  2)  cuesheet:cuesheet_file
#  3)  type:file:attr:isrc:gap:head:tail
#  4)  upc:upccode
#  5)  verbose:v
# type = data|audio|data+
# file = unix filename 
#	file is input must be pre-formatted already, data tracks must be
#	multiple
#	of 2048 bytes, audio tracks must be multiple of 2352 bytes
# attr can have these letters
#	c = copy permitted bit turned on for that track
#	p = pre-emphasis bit turned on (used only for audio tracks)
# isrc = optional isrc (used by some audio tracks), seldom used
#	5 ascii chars+7digits (CCOOOYYSSSSS) as follows
#		CC = country code, OOO = owner code
#		YY = year of recording, SSSSS = serial #
#       isrc's can only be written by Sony CDW-900E
# upccode = 13 digits, if the upc line is left out, no upc code will be
#	written.  You normally wont need one.  Only used for Sony CDW-900E
# image_file, cuesheet_file = unix filename
#	These override the command line -f and -c flags.
#	these are output files
#	If these files are not specified, the
#	output will not be written, which is too bad if you are intending
#	to master a CD, but is useful with the -v flag if you
#	just want to see whether your selection will fit.
#	In the case of a single track, you can get
#	away without writing the output image, you can point at the
#	original data file when mastering.
# v     specify the value of the verbose flag verbose:1 is same as the
#	command line option -v.
#
# isrc's and upccodes are only used by the CDW-900E, and are ignored
# otherwise
# 
# each "data", "data+" or "audio" line will write a track.  Only one "upccode" 
# line can be used
# per disc.  Unused fields can be left blank.  Missing fields will be
# defaulted.  data+ is used only in the special case of a data track
# which is to be followed by an audio track.
#
# The program will automatically add gaps as follows:
#  1) At the start of the disc, 2 seconds of gap will be written (normal)
#  2) Whenever there is a data track following an audio track, a 3 second
#     gap is inserted into the start of the data track.
#  3) There are normally no gaps between audio tracks.
#  4) If a data track is followed by an audio track, a 2 second gap is
#     added to the end of the data track.  (You need to mark this track
#     as "data+", failure to do so will result in a bad CD).
# The file does NOT have any data representing the gaps.
# 
# gap, head, and tail have the format mm.ss.ff, where mm=minutes, ss=seconds,
# ff=frames (1/75 sec.).  "mm." may be omitted, ".ff" may be further omitted.
# gap, head, and tail only apply to music tracks.
# 	
# The "gap" field above adds an additional gap at the start of the track
# if it is an audio track.  The program will insert a silence period at the
# beginning of the track.  Defaults to 00.00.00
# 
# The "head" field specifies the start position in the file to seek to before
# reading the data.  In other words it skips that much music at the head of the
# file.  Defaults to 00.00.00
# 
# The "tail" field specifies how much music to chop off the tail of the file.
# Defaults to 00.00.00.  Using the head and tail parameters allow you to
# accurately "crop" the music section to be written to the disc.
# 
# Example1, a disc with one data track:
# 
# 	data:/usr/tmp/simtel20
#
# you can make the cd using
#	mk_audio_cd -c simtel20.cuesheet -f /usr/tmp/simtel20 simtel20.desc
#	mkdisc -c simtel20.cuesheet -f /usr/tmp/simtel20
# 
# Example2, an audio disc with 5 tracks:
# 
# 	upc:0759925730200
# 	audio:/lv0/a_little_respect
# 	audio:/lv0/ship_of_fools:::1:2
# 	audio:/lv0/phantom_bride:::1:2
# 	audio:/lv0/chains_of_love:::1:2
# 	audio:/lv0/hallowed_ground:pc::1:2
# 
# 	Tracks 2-5 have an extra 1 second silence period at the beginning
# 	replacing the first 2 seconds of music.  It is likely that the original
# 	disc may have had 2 second gaps between these tracks and the software
# 	which read these tracks included them in the file.  We write back
# 	out the gaps but shorten them to 1 second.  Track 5 has copy bit
#	and pre-emphasis bit.
#
# you can make the cd using
#	mk_audio_cd -c erasure.cuesheet -f erasure erasure.desc
#	mkdisc -a -v -c erasure.cuesheet -f erasure erasure.desc
# 
# Example3, a disc with 1st track data, remaining tracks audio
# 
# 	data+:/lv0/program
# 	audio:/lv0/song1
# 	audio:/lv0/song2
# 
# you can make the cd using
#	mk_audio_cd -c xx.cuesheet -f image my_desc.desc
#	mkdisc -a -v -c xx.cuesheet -f image
# 

#!/bin/sh
#
#"$Revision: 1.17 $"
#
#	This demon cleans up uucp directories.
#	It is started by /var/spool/cron/crontabs/uucp

MAILTO=uucp
export PATH
PATH=/bin:/usr/bin:/usr/lib/uucp:/usr/lbin
TMP=/tmp/uu$$

#	These are taken from the Makefile.  If changed in Makefile
#	they must be changed here also.
#
PUBDIR=/var/spool/uucppublic
SPOOL=/var/spool/uucp
LOCKS=/var/spool/locks	# needs a comment in parms.h on USRSPOOLOCKS
XQTDIR=/var/spool/uucp/.Xqtdir
CORRUPT=/var/spool/uucp/.Corrupt
LOGDIR=/var/spool/uucp/.Log
SEQDIR=/var/spool/uucp/.Sequence
STATDIR=/var/spool/uucp/.Status
WORKDIR=/var/spool/uucp/.Workspace
ADMIN=/var/spool/uucp/.Admin

#	OLD is the directory for archiving old admin/log files
OLD=$SPOOL/.Old
O_LOGS=$OLD/Old-Log

mv $ADMIN/xferstats $OLD/xferstats
mv $ADMIN/audit $OLD/audit
mv $ADMIN/errors $OLD/errors
mv $ADMIN/Foreign $OLD/Foreign

> $ADMIN/xferstats
> $ADMIN/audit
> $ADMIN/errors
> $ADMIN/Foreign


#	The list in the for controls how many old LOG files are retained.
#	O_LOGS-2 goes to O_LOGS-3, O_LOGS-1 goes to O_LOGS-2.
#	Todays goes to O_LOGS-1
#
for i in  2 1
do
	j=`expr $i + 1`
	mv ${O_LOGS}-$i ${O_LOGS}-$j
done


#	Combine all log files into O_LOGS-1.
#	Add a name separator between each system.
#
> ${O_LOGS}-1
for i in uucico uucp uux uuxqt
do
	if [ ! -d $LOGDIR/$i ]
	then
		(echo "Subject: cleanup\n\n$LOGDIR/$i directory does not exist, remove if file.\nMaking a directory $LOGDIR/$i."
		 ) | mail $MAILTO
		rm -f $LOGDIR/$i
		mkdir $LOGDIR/$i
		chmod 777 $LOGDIR/$i
		continue
	fi
	cd $LOGDIR/$i || { echo "Subject: cleanup\n\nunable to chdir to $LOGDIR/$i\n" | mail $MAILTO; continue;}
	for j in *
	do
		if [ "$j" = "*" ]
		then
			break
		fi
		echo "********** $j **********" >> ${O_LOGS}-1
		cat $j >> ${O_LOGS}-1
		rm -f $j
	done
done

#	Execute the system directory cleanup program
#	See uucleanup.1m for details.
uucleanup -D7 -C7 -X2 -o2 -W1
#	Use the grep instead of the mv to ignore warnings to uucp
# grep -v 'warning message sent to uucp' $ADMIN/uucleanup > $OLD/uucleanup
mv $ADMIN/uucleanup $OLD/uucleanup
if [ -s $OLD/uucleanup ]
then
	(echo "Subject: cleanup\n"; cat $OLD/uucleanup) | mail $MAILTO
fi
>$ADMIN/uucleanup

#  cleanup funny directories that may have been created in the spool areas
for d in $SPOOL/[A-z]*
do
	if [ -f $d ]
	then
		# skip any regular files, like lockfiles
		# and mail.log and so forth
		continue
	fi
	if [ -z "`ls $d`" ]
	then
		# empty directory
		continue
	fi
	cd $d
	# we'd check that we were in the correct directory
	if [ "`pwd`" != "$d" ]
	then
		(echo "Subject: cleanup\n\nunable to chdir to $d"
		 ) | mail $MAILTO
		continue
	fi
	for s in *
	do
		if [ "$s" = "*" ]
		then
			break
		fi
		if [ -d $s ]
		then
			# Remove subdirs of subdirs
			rm -fr $s
		fi
	done

	# if it is now empty, remove it.
	cd ..
done


#	Find old cores
#
find $SPOOL -name core -print > $TMP
if [ -s $TMP ]
then
	(echo "Subject: cores\n"; cat $TMP) | mail $MAILTO
fi


#	Remove old files and directories
#
#	Send mail for UUCP login names to the postmaster, so
#	   ensure that there is always a .forward file.
#	   This also ensures that $PUBDIR is not empty and so not deleted.
umask 022
rm -f $PUBDIR/$$.forward
echo postmaster > $PUBDIR/$$.forward
chown nuucp $PUBDIR/$$.forward
mv $PUBDIR/$$.forward $PUBDIR/.forward
find $PUBDIR -type f -mtime +7 -print | xargs /bin/rm -f
find $PUBDIR -type d -print | xargs /bin/rmdir -ps
find $SEQDIR -type f -mtime +30 -exec rm -f {} \;
find $WORKDIR -type f -mtime +1 -exec rm -f {} \;
find $STATDIR -type f -mtime +2 -exec rm -f {} \;
find $CORRUPT -type f -mtime +10 -exec rm -f {} \;

rm -f $LOCKS/LTMP*
rmdir $SPOOL/[A-z]* 2>/dev/null


#	Mail a daily summary of status
#
grep passwd ${O_LOGS}-1 > $TMP
grep "REQUEST.*/" ${O_LOGS}-1 >> $TMP
if [ -s $TMP ]
then
	(echo "Subject: uucp requests\n"; cat $TMP) | mail $MAILTO
fi


awk '/(DENIED)/	{print prev}
		{prev = $0}' ${O_LOGS}-1 > $TMP
if [ -s $TMP ]
then
	(echo "Subject: uucp DENIED\n"; cat $TMP) | mail $MAILTO
fi

uustat -q > $TMP
if [ -s $TMP ]
then
	(echo "Subject: uu-status\n"; cat $TMP) | mail $MAILTO
fi

ls $CORRUPT > $TMP
if [ -s $TMP ]
then
	(echo "Subject: $CORRUPT\n"; cat $TMP) | mail $MAILTO
fi

tail $OLD/errors 2>/dev/null > $TMP
tail $OLD/Foreign 2>/dev/null >> $TMP
if [ -s $TMP ]
then
	(echo "Subject: uucp Admin\n"; cat $TMP) | mail $MAILTO
fi
(echo "Subject: uucleanup ran; $SPOOL du\n"; du $SPOOL) | mail $MAILTO

rm $TMP

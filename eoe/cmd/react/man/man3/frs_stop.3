'\"macro stdmacro
.TH "Frame Scheduler" 3
.SH NAME
\f4frs_stop\f1, \f4frs_resume\f1\- stops/resumes execution of a frame scheduler object
.SH SYNOPSIS
\f4#include <sys/frs.h>\f1
.PP
\f4int frs_stop(frs_t\(** \f2frs\fP);\f1
.PP
\f4int frs_resume(frs_t\(** \f2frs\fP);\f1
.fi
.SH DESCRIPTION
\f4frs_stop\fP is called by the controller thread/process
of \f2frs\fP to stop the execution of the frame scheduler.
.PP
Stopping a frame scheduler will result in all participating master
and slave frame schedulers ceasing execution.
.PP
\f4frs_resume\fP is called by the controller thread/process
of \f2frs\fP to resume execution of the stopped frame scheduler.
.P
.P
Resuming a frame scheduler will result in all participating master
and slave frame schedulers continuing execution.
.P
\f4frs_stop\fP and \f4frs_resume\fP will fail if one or more of the following
conditions are true:
.TP 15
.SM
\%[EINVAL]
Invalid frame scheduler object.
.TP 15
.SM
\%[EPERM]
No permission to execute frame scheduler functions.
.TP 15
.SM
\%[EPERM]
The calling thread/process is not an FRS controller.
.TP 15
.SM
\%[EPERM]
The calling pthread is not system scope.
.TP 15
.SM
\%[ENODEV]
The REACT/Pro Frame Scheduler Subsystem has not been installed.
.SH "DIAGNOSTICS"
Upon successful completion, \f4frs_stop\fP and \f4frs_resume\fP
will return 0. Otherwise, -1 is returned and errno is set to
indicate the error.
.SH "SEE ALSO"
\f4frs_start\f1(3),
\f4frs_join\f1(3),
\f4frs_yield\f1(3),
.P
The REACT Real-Time Programmer's Guide (insight(1)) covers Frame Scheduler
principles and usage in detail.
.P
Frame scheduler programming examples (if installed) can be found in the
following directory: /usr/share/src/react/examples.

'\"macro stdmacro
.TH "Frame Scheduler" 3
.SH NAME
\f4frs_destroy\f1 \- destroy a frame scheduler object
.SH SYNOPSIS
\f4#include <sys/frs.h>\f1
.PP
\f4int frs_destroy (frs_t\(** \f2frs\fP);\f1
.fi
.SH DESCRIPTION
\f4frs_destroy\fP is used to destroy a frame scheduler object.
Destroying a frame sheduler consists of freeing all resources
consumed by the frame scheduler, including unisolating and
unrestricting it's processor, making it available for general system usage.
.P
If the target \f2frs\fP is a synchronization master then all
slave frame schedulers attached to it will be destroyed as well.
.P
If the target \f2frs\fP is a slave, then only the target \f2frs\fP
will be destroyed.
.P
The controller and scheduled activity processes/threads of
frame schedulers being destroyed will be sent SIGKILL.
.P
\f4frs_destroy\fP will fail if one or more of the following
conditions are true:
.TP 15
.SM
\%[EINVAL]
Invalid frame scheduler object.
.TP 15
.SM
\%[EPERM]
No permission to execute frame scheduler functions.
.TP 15
.SM
\%[ENODEV]
The REACT/Pro Frame Scheduler Subsystem has not been installed.
.SH "DIAGNOSTICS"
Upon successful completion, \f4frs_destroy\fP will return 0.
Otherwise, -1 is returned and errno is set to indicate the error.
.SH "SEE ALSO"
\f4frs_create\f1(3),
\f4frs_premove\f1(3),
\f4frs_pthread_premove\f1(3)
.P
The REACT Real-Time Programmer's Guide (insight(1)) covers Frame Scheduler
principles and usage in detail.
.P
Frame scheduler programming examples (if installed) can be found in the
following directory: /usr/share/src/react/examples.






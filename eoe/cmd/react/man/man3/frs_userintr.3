'\"macro stdmacro
.TH "Frame Scheduler" 3
.SH NAME
\f4frs_userintr\f1 \- triggers a user-level frame scheduler interrupt
.SH SYNOPSIS
\f4#include <sys/frs.h>\f1
.PP
\f4int frs_userintr(frs_t\(** \f2frs\fP);\f1
.fi
.SH DESCRIPTION
\f4frs_userintr\fP is used to control the advancement of an \f2frs\fP
minor frame by triggering a user-level interrupt. This interface is
typically used for debugging FRS applications, making it easy to
step through frames without relying on hardware interrupt sources.
.P
User-level interrupts can only be triggered for frame schedulers
created with \f4FRS_INTRSOURCE_USER\fP interrupt source (see \f4frs_create\fP(3)).
.P
\f4frs_userintr\fP will fail if one or more of the following
conditions are true:
.TP 15
.SM
\%[EINVAL]
Invalid frame scheduler object.
.TP 15
.SM
\%[EINVAL]
The frame scheduler's interrupt source is not \f4FRS_INTRSOURCE_USER\fP.
.TP 15
.SM
\%[EINVALSTATE]
The frame scheduler has not been started or is terminating.
.TP 15
.SM
\%[EPERM]
No permission to execute frame scheduler functions.
.TP 15
.SM
\%[ENODEV]
The REACT/Pro Frame Scheduler Subsystem has not been installed.
.SH "DIAGNOSTICS"
Upon successful completion, \f4frs_userintr\fP will return 0.
Otherwise, -1 is returned and errno is set to indicate the error.
.SH "SEE ALSO"
\f4frs_create\f1(3),
\f4frs_create_master\f1(3),
\f4frs_create_slave\f1(3),
\f4frs_start\f1(3),
\f4frs_join\f1(3),
\f4frs_stop\f1(3),
\f4frs_resume\f1(3)
.P
The REACT Real-Time Programmer's Guide (insight(1)) covers Frame Scheduler
principles and usage in detail.
.P
Frame scheduler programming examples (if installed) can be found in the
following directory: /usr/share/src/react/examples.

.nr H1 2
.H 1 "New Release Information"
.\"
.\"	Developer
.\"

REACT/Pro 4.0 adds many new features and enhancements, providing more
solutions for real-time computing problems. 
.P
This chapter lists the differences between this release of REACT/Pro
and previous releases. 

.H 2 "IRIXview 2.0"

REACT/Pro 4.0 also works with IRIXview 2.0 (available as a seperate product), a
graphical tool for recording the events of the software system and analyzing their
relationships.  IRIXview replaces WindView, encompassing all of WindView's
functionality, as well as, adding many new features and
enhancements, including:
.BL
.LI
Expanded system event types
.LI
CPU graph views
.LI
System thread tracking
.LI
Scheduler statistics
.LI
System call tracing
.LE
.P
For more information about IRIXview, see the "\f4IRIXview User's Guide\fP",
included in this release.

.H 2 "Frame Scheduler Performance and Scalability"

The time spent processing Frame Scheduler time base interrupts has been
reduced, decreasing overhead and increasing system response time.
.P
Scalability has been increased, enabling more slaves to be chained to a master
Frame Scheduler, without incurring significant system overhead. This allows for
larger Frame Scheduled system configurations.

.H 2 "Frame Scheduler Interrupt Sources"

User-level interrupts (uli) may now be used as an interrupt source for
Frame Scheduled applications on Origin systems: FRS_INTRSOURCE_ULI.
The PCI or VME interrupt must be routed to the master Frame Scheduled processor
for the frame Scheduler to recognize it. For more information about using
user-level interrupts, see the uli(3) reference page.
.P
The per-cpu clock interrupt source definition has been renamed from
\f4FRS_INTRSOURCE_R4KTIMER\fP to \f4FRS_INTRSOURCE_CPUTIMER\fP.
While the original definition is still supported, all future documentation
will reference \f4FRS_INTRSOURCE_CPUTIMER\fP.
  
.H 2 "Octane Support"

REACT/Pro 4.0 introduces Frame Scheduler support for the Octane platform.
The following Frame Scheduler time base interrupt sources are supported:
.BL
.LI
FRS_INTRSOURCE_CPUTIMER
.LI
FRS_INTRSOURCE_DRIVER
.LI
FRS_INTRSOURCE_USER
.LI
FRS_INTRSOURCE_VSYNC
.LE

.H 2 "Variable Length Frames"

The Frame Scheduler has been enhanced to support variable length minor frames,
where each minor frame may have a different duration. For usage information,
see the frs_create_vmaster(3) reference page.

.H 2 "Multiple Interrupt Sources"

The Frame Scheduler has been enhanced to support multiple interrupt sources,
where each minor frame may be triggered by a different interrupt source. For
usage information, see the frs_create_vmaster(3) reference page.

.H 2 "Example Programs"

The suite of Frame Scheduler example programs (binary and source code) has been
expanded to also demonstrate:
.BL
.LI
variable length frames
.LI
multiple interrupt sources
.LI
and frame scheduled pthread applications
.LE
.P
A list of each program and descriptions of what they demonstrate is available
in README file (shipped with the source code), in the following directory:
\f4/usr/share/src/react/examples/\fP.
.P
Note that not all example programs run on all systems, as some have
platform specific requirements. For example, programs demonstrating:
.BL
.LI
slaving multiple Frame Schedulers together require multiple processors
to execute,
.LI
external interrupts require a machine with an external interrupt port
(Challenge or Origin),
.LI
the usage of the FRS_INTRSOURCE_CCTIMER do not execute on Octane systems,
since this interrupt source is not supported on Octane.
.LE

.H 3 "CPU timer example:"

The r4k_intr Frame Scheduler example code and binary, has been renamed to cpu_intr,
and uses the FRS_INTRSOURCE_CPUTIMER interrupt source instead of the
FRS_INTRSOURCE_R4KTIMER.

.H 3 "Insert Example:"
 
A new example program, called insert, has been included to demonstrate the dynamic
insertion and removing of processes on a minor frame.

.H 3 "Pthread Examples:"
Frame scheduled pthread applications are only supported
on releases of REACT/Pro 3.2 or greater. 

.H 2 "Frame Scheduler Signals"
Signals are not sent to every thread/process in a frame scheduler; they
are sent either to the controller thread/process or to the thread/process
directly involved in the action requiring a signal to be sent.
See the "\f4Real-Time Programmer's Guide\fP" for further information.

.H 2 "Data Structures"
Applications accessing the \f2pid\fP field of the following Frame Scheduler
data structures need to be modified to compile properly on a system with
REACT/Pro 3.2 or later installed:
.BL
.LI
frs_queue_info_t
.LI
frs_attr_info_t
.LE
.P
The \f2pid\fP field has been renamed to \f2thread\fP to better support
multi-threaded applications.
.P
Note that it is not necessary for applications to recompile as a result of
this change.

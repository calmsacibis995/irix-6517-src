#
# Test file for conditional parsing
#

sun=
#ifndef fish
# if !defined(unix) && (make(kumquat) || defined(sun))
b = didn't work -- check Cond_Eval, unless this Should be false
# else
b = worked
# endif
a = not defined
#elifmake b
a = defined
b = didn't get evaluated
#else
a = defined
b = not evaluated -- b not made
#endif
CFLAGS		= 
HONK		= biff

a b : .MAKE
	@echo fish is $a
	@echo "!defined(unix) && (make(kumquat) || defined(sun))" $b
	@echo .MAKEFLAGS = $(.MAKEFLAGS)
#if !empty(CFLAGS)
	@echo !empty(CFLAGS) didn't work
#endif
#if defined(MORF) && $(MORF) == "whiffle"
	@echo Where did MORF come from'?' This should not be here...
#endif

#ifdef make # this should not print a warning about missing arguments to make()
make=make
#endif make
# PMake should not complain about too many if's because of the following lines
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a
#ifdef a
#endif a

Tie Modules
	VecArray		Implement array using vec()
	SubstrArray		Implement array using substr()
	VirtualArray		Implement array using a file
	ShiftSplice		Defines shift et al in terms of splice method

Would be nice to have
	pack "(stuff)*"
	Contiguous bitfields in pack/unpack
	lexperl
	Bundled perl preprocessor
	Use posix calls internally where possible
	gettimeofday
	format BOTTOM
	-iprefix.
	-i rename file only when successfully changed
	All ARGV input should act like <>
	report HANDLE [formats].
	support in perlmain to rerun debugger
	regression tests using __DIE__ hook
	reference to compiled regexp
	lexically scoped functions: my sub foo { ... }
	lvalue functions

Possible pragmas
	debugger
	optimize (use less memory, CPU)

Optimizations
	constant function cache
	switch structures
	eval qw() at compile time
	foreach (1..1000000)
	foreach(reverse...)
	Set KEEP on constant split
	Cache eval tree (unless lexical outer scope used (mark in &compiling?))
	rcatmaybe
	Shrink opcode tables via multiple implementations selected in peep
	Cache hash value?  (Not a win, according to Guido)
	Optimize away @_ where possible
	"one pass" global destruction
	Optimize sort by { $a <=> $b }
	Rewrite regexp parser for better integrated optimization
	LRU cache of regexp: foreach $pat (@pats) { foo() if /$pat/ }

Vague possibilities
	ref function in list context
	data prettyprint function?  (or is it, as I suspect, a lib routine?)
	make tr/// return histogram in list context?
	Loop control on do{} et al
	Explicit switch statements
	built-in globbing
	compile to real threaded code
	structured types
	autocroak?
	Modifiable $1 et al
	substr EXPR,OFFSET,LENGTH,STRING


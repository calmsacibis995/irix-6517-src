    Instructions for adding a new SGI-shipped extension to Perl5

For an explanation of the reasoning behind this, see the file
README.sgi_perl in this directory.

1) unpack the module into the ext directory

2) copy the ext/CGI*/Makefile.SGI into your module's directory.
   make any needed edits

3) add your module to the TARGETS variable in ext/Makefile

4) to test build your module, make sure that the RAWIDB environment
   variable is not set, and that INSTALLDIRS is either unset, or set
   to "site".  Build it like normal, and it will install into the
   normal site_perl locations.  If you set INSTALLDIRS to "vendor",
   it will install into the "sgi_perl" directories.

5) build your module:

  a) Either you need to build the Perl source, and set the PERL_SRC
     environment variable appropriately, or

  b) have an installed version of the current Perl, and don't set the
     PERL_SRC environment variable.

  1) set ROOT, TOOLROOT, SRC, and RAWIDB appropriately for your
     build environment.  You *MUST* set SRC and RAWIDB to create idb
     lines!  Several of the standard Perl modules used for building
     extension modules have been hacked to "do the right thing" in
     our environment.

  2) make the module:

          cd ext && make <your_module>

  3) In the off chance that the module contains no man pages, or you
     want to add an IDB tag that you can edit appropriately, first
     set the environment variable IDB to your tag:

          setenv IDB MY_TAG

  4) generate the IDB lines:

          make <your_module> install

  5) edit the generated $RAWIDB to add the correct IDB tags before
     merging it with the main "idb" and "idb.man" files.  The
     standard Perl IDB tags are PERL_LIB and PERL_MAN, for the
     module files and the module man pages respectively.

     Note that in the current version, the modules man pages are
     installed as raw man pages (ie: module.3), instad of being
     preformatted (ie: module.z).  That looks like a lot more wirk,
     and since AWF is stock with 6.2 and later...
